/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedCable } from "./nestedcable";
import { NestedDevice } from "./nesteddevice";
import { NestedInterface } from "./nestedinterface";
import { NestedVLAN } from "./nestedvlan";
import { Expose, Type } from "class-transformer";

export enum DeviceInterfaceConnectionStatusLabelEnum {
  NotConnected = "Not Connected",
  Connected = "Connected",
}

export enum DeviceInterfaceConnectionStatusValueEnum {
  False = "false",
  True = "true",
}

export class DeviceInterfaceConnectionStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: DeviceInterfaceConnectionStatusLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: DeviceInterfaceConnectionStatusValueEnum;
}

export enum DeviceInterfaceModeLabelEnum {
  Access = "Access",
  Tagged = "Tagged",
  TaggedAll = "Tagged (All)",
}

export enum DeviceInterfaceModeValueEnum {
  Access = "access",
  Tagged = "tagged",
  TaggedAll = "tagged-all",
}

export class DeviceInterfaceMode extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: DeviceInterfaceModeLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: DeviceInterfaceModeValueEnum;
}

export enum DeviceInterfaceTypeLabelEnum {
  Virtual = "Virtual",
  LinkAggregationGroupLAG = "Link Aggregation Group (LAG)",
  OneHundredBASETX10100ME = "100BASE-TX (10/100ME)",
  OneThousandBASET1GE = "1000BASE-T (1GE)",
  Two5GBASET25GE = "2.5GBASE-T (2.5GE)",
  FiveGBASET5GE = "5GBASE-T (5GE)",
  TenGBASET10GE = "10GBASE-T (10GE)",
  TenGBASECx410GE = "10GBASE-CX4 (10GE)",
  Gbic1Ge = "GBIC (1GE)",
  Sfp1Ge = "SFP (1GE)",
  SFPPlus10GE = "SFP+ (10GE)",
  Xfp10Ge = "XFP (10GE)",
  Xenpak10Ge = "XENPAK (10GE)",
  X210Ge = "X2 (10GE)",
  Sfp2825Ge = "SFP28 (25GE)",
  QSFPPlus40GE = "QSFP+ (40GE)",
  Qsfp2850Ge = "QSFP28 (50GE)",
  Cfp100Ge = "CFP (100GE)",
  Cfp2100Ge = "CFP2 (100GE)",
  Cfp2200Ge = "CFP2 (200GE)",
  Cfp4100Ge = "CFP4 (100GE)",
  CiscoCPAK100GE = "Cisco CPAK (100GE)",
  Qsfp28100Ge = "QSFP28 (100GE)",
  Qsfp56200Ge = "QSFP56 (200GE)",
  QsfpDd400Ge = "QSFP-DD (400GE)",
  Osfp400Ge = "OSFP (400GE)",
  IEEE80211a = "IEEE 802.11a",
  IEEE80211bG = "IEEE 802.11b/g",
  IEEE80211n = "IEEE 802.11n",
  IEEE80211ac = "IEEE 802.11ac",
  IEEE80211ad = "IEEE 802.11ad",
  IEEE80211ax = "IEEE 802.11ax",
  Gsm = "GSM",
  Cdma = "CDMA",
  Lte = "LTE",
  Oc3Stm1 = "OC-3/STM-1",
  Oc12Stm4 = "OC-12/STM-4",
  Oc48Stm16 = "OC-48/STM-16",
  Oc192Stm64 = "OC-192/STM-64",
  Oc768Stm256 = "OC-768/STM-256",
  Oc1920Stm640 = "OC-1920/STM-640",
  Oc3840Stm1234 = "OC-3840/STM-1234",
  Sfp1Gfc = "SFP (1GFC)",
  Sfp2Gfc = "SFP (2GFC)",
  Sfp4Gfc = "SFP (4GFC)",
  SFPPlus8GFC = "SFP+ (8GFC)",
  SFPPlus16GFC = "SFP+ (16GFC)",
  Sfp2832Gfc = "SFP28 (32GFC)",
  Qsfp28128Gfc = "QSFP28 (128GFC)",
  SDR2Gbps = "SDR (2 Gbps)",
  DDR4Gbps = "DDR (4 Gbps)",
  QDR8Gbps = "QDR (8 Gbps)",
  Fdr1010Gbps = "FDR10 (10 Gbps)",
  FDR135Gbps = "FDR (13.5 Gbps)",
  EDR25Gbps = "EDR (25 Gbps)",
  HDR50Gbps = "HDR (50 Gbps)",
  NDR100Gbps = "NDR (100 Gbps)",
  XDR250Gbps = "XDR (250 Gbps)",
  T11544Mbps = "T1 (1.544 Mbps)",
  E12048Mbps = "E1 (2.048 Mbps)",
  T345Mbps = "T3 (45 Mbps)",
  E334Mbps = "E3 (34 Mbps)",
  CiscoStackWise = "Cisco StackWise",
  CiscoStackWisePlus = "Cisco StackWise Plus",
  CiscoFlexStack = "Cisco FlexStack",
  CiscoFlexStackPlus = "Cisco FlexStack Plus",
  JuniperVCP = "Juniper VCP",
  ExtremeSummitStack = "Extreme SummitStack",
  ExtremeSummitStack128 = "Extreme SummitStack-128",
  ExtremeSummitStack256 = "Extreme SummitStack-256",
  ExtremeSummitStack512 = "Extreme SummitStack-512",
  Other = "Other",
}

export enum DeviceInterfaceTypeValueEnum {
  Virtual = "virtual",
  Lag = "lag",
  OneHundredbaseTx = "100base-tx",
  OneThousandbaseT = "1000base-t",
  Two5gbaseT = "2.5gbase-t",
  FivegbaseT = "5gbase-t",
  TengbaseT = "10gbase-t",
  TengbaseCx4 = "10gbase-cx4",
  OneThousandbaseXGbic = "1000base-x-gbic",
  OneThousandbaseXSfp = "1000base-x-sfp",
  TengbaseXSfpp = "10gbase-x-sfpp",
  TengbaseXXfp = "10gbase-x-xfp",
  TengbaseXXenpak = "10gbase-x-xenpak",
  TengbaseXX2 = "10gbase-x-x2",
  TwentyFivegbaseXSfp28 = "25gbase-x-sfp28",
  FortygbaseXQsfpp = "40gbase-x-qsfpp",
  FiftygbaseXSfp28 = "50gbase-x-sfp28",
  OneHundredgbaseXCfp = "100gbase-x-cfp",
  OneHundredgbaseXCfp2 = "100gbase-x-cfp2",
  TwoHundredgbaseXCfp2 = "200gbase-x-cfp2",
  OneHundredgbaseXCfp4 = "100gbase-x-cfp4",
  OneHundredgbaseXCpak = "100gbase-x-cpak",
  OneHundredgbaseXQsfp28 = "100gbase-x-qsfp28",
  TwoHundredgbaseXQsfp56 = "200gbase-x-qsfp56",
  FourHundredgbaseXQsfpdd = "400gbase-x-qsfpdd",
  FourHundredgbaseXOsfp = "400gbase-x-osfp",
  Ieee80211a = "ieee802.11a",
  Ieee80211g = "ieee802.11g",
  Ieee80211n = "ieee802.11n",
  Ieee80211ac = "ieee802.11ac",
  Ieee80211ad = "ieee802.11ad",
  Ieee80211ax = "ieee802.11ax",
  Gsm = "gsm",
  Cdma = "cdma",
  Lte = "lte",
  SonetOc3 = "sonet-oc3",
  SonetOc12 = "sonet-oc12",
  SonetOc48 = "sonet-oc48",
  SonetOc192 = "sonet-oc192",
  SonetOc768 = "sonet-oc768",
  SonetOc1920 = "sonet-oc1920",
  SonetOc3840 = "sonet-oc3840",
  OnegfcSfp = "1gfc-sfp",
  TwogfcSfp = "2gfc-sfp",
  FourgfcSfp = "4gfc-sfp",
  EightgfcSfpp = "8gfc-sfpp",
  SixteengfcSfpp = "16gfc-sfpp",
  ThirtyTwogfcSfp28 = "32gfc-sfp28",
  OneHundredAndTwentyEightgfcSfp28 = "128gfc-sfp28",
  InfinibandSdr = "infiniband-sdr",
  InfinibandDdr = "infiniband-ddr",
  InfinibandQdr = "infiniband-qdr",
  InfinibandFdr10 = "infiniband-fdr10",
  InfinibandFdr = "infiniband-fdr",
  InfinibandEdr = "infiniband-edr",
  InfinibandHdr = "infiniband-hdr",
  InfinibandNdr = "infiniband-ndr",
  InfinibandXdr = "infiniband-xdr",
  T1 = "t1",
  E1 = "e1",
  T3 = "t3",
  E3 = "e3",
  CiscoStackwise = "cisco-stackwise",
  CiscoStackwisePlus = "cisco-stackwise-plus",
  CiscoFlexstack = "cisco-flexstack",
  CiscoFlexstackPlus = "cisco-flexstack-plus",
  JuniperVcp = "juniper-vcp",
  ExtremeSummitstack = "extreme-summitstack",
  ExtremeSummitstack128 = "extreme-summitstack-128",
  ExtremeSummitstack256 = "extreme-summitstack-256",
  ExtremeSummitstack512 = "extreme-summitstack-512",
  Other = "other",
}

export class DeviceInterfaceType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: DeviceInterfaceTypeLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: DeviceInterfaceTypeValueEnum;
}

export class DeviceInterface extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cable" })
  @Type(() => NestedCable)
  cable?: NestedCable;

  /**
   *
   * @remarks
   * Return the appropriate serializer for the type of connected object.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connected_endpoint" })
  connectedEndpoint?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "connected_endpoint_type" })
  connectedEndpointType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connection_status" })
  @Type(() => DeviceInterfaceConnectionStatus)
  connectionStatus?: DeviceInterfaceConnectionStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "count_ipaddresses" })
  countIpaddresses?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "device" })
  @Type(() => NestedDevice)
  device: NestedDevice;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "lag" })
  @Type(() => NestedInterface)
  lag?: NestedInterface;

  @SpeakeasyMetadata()
  @Expose({ name: "mac_address" })
  macAddress?: string;

  /**
   * This interface is used only for out-of-band management
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mgmt_only" })
  mgmtOnly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "mode" })
  @Type(() => DeviceInterfaceMode)
  mode?: DeviceInterfaceMode;

  @SpeakeasyMetadata()
  @Expose({ name: "mtu" })
  mtu?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: NestedVLAN })
  @Expose({ name: "tagged_vlans" })
  @Type(() => NestedVLAN)
  taggedVlans?: NestedVLAN[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  @Type(() => DeviceInterfaceType)
  type: DeviceInterfaceType;

  @SpeakeasyMetadata()
  @Expose({ name: "untagged_vlan" })
  @Type(() => NestedVLAN)
  untaggedVlan?: NestedVLAN;
}
