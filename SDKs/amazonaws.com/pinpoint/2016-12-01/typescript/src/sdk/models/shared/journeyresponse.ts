/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { Activity } from "./activity";
import { ClosedDays } from "./closeddays";
import { JourneyChannelSettings } from "./journeychannelsettings";
import { JourneyLimits } from "./journeylimits";
import { JourneySchedule } from "./journeyschedule";
import { OpenHours } from "./openhours";
import { QuietTime } from "./quiettime";
import { StartCondition } from "./startcondition";
import { StateEnum } from "./stateenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides information about the status, configuration, and other settings for a journey.
 */
export class JourneyResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Activity })
  @Expose({ name: "Activities" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, Activity> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], Activity);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  activities?: Record<string, Activity>;

  @SpeakeasyMetadata()
  @Expose({ name: "ApplicationId" })
  applicationId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ClosedDays" })
  @Type(() => ClosedDays)
  closedDays?: ClosedDays;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationDate" })
  creationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JourneyChannelSettings" })
  @Type(() => JourneyChannelSettings)
  journeyChannelSettings?: JourneyChannelSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedDate" })
  lastModifiedDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Limits" })
  @Type(() => JourneyLimits)
  limits?: JourneyLimits;

  @SpeakeasyMetadata()
  @Expose({ name: "LocalTime" })
  localTime?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OpenHours" })
  @Type(() => OpenHours)
  openHours?: OpenHours;

  @SpeakeasyMetadata()
  @Expose({ name: "QuietTime" })
  @Type(() => QuietTime)
  quietTime?: QuietTime;

  @SpeakeasyMetadata()
  @Expose({ name: "RefreshFrequency" })
  refreshFrequency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RefreshOnSegmentUpdate" })
  refreshOnSegmentUpdate?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Schedule" })
  @Type(() => JourneySchedule)
  schedule?: JourneySchedule;

  @SpeakeasyMetadata()
  @Expose({ name: "SendingSchedule" })
  sendingSchedule?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "StartActivity" })
  startActivity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartCondition" })
  @Type(() => StartCondition)
  startCondition?: StartCondition;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: StateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "WaitForQuietTime" })
  waitForQuietTime?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
