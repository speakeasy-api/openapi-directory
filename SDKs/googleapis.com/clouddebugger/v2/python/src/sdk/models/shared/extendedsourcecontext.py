"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sourcecontext as shared_sourcecontext
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExtendedSourceContext:
    r"""An ExtendedSourceContext is a SourceContext combined with additional details describing the context."""
    
    context: Optional[shared_sourcecontext.SourceContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('context'), 'exclude': lambda f: f is None }})
    r"""A SourceContext is a reference to a tree of files. A SourceContext together with a path point to a unique revision of a single file or directory."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels with user defined metadata."""  
    