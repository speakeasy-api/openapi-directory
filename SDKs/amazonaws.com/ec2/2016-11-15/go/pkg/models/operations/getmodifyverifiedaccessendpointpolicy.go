// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyVerifiedAccessEndpointPolicyActionEnum
type GETModifyVerifiedAccessEndpointPolicyActionEnum string

const (
	GETModifyVerifiedAccessEndpointPolicyActionEnumModifyVerifiedAccessEndpointPolicy GETModifyVerifiedAccessEndpointPolicyActionEnum = "ModifyVerifiedAccessEndpointPolicy"
)

func (e *GETModifyVerifiedAccessEndpointPolicyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyVerifiedAccessEndpointPolicy":
		*e = GETModifyVerifiedAccessEndpointPolicyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVerifiedAccessEndpointPolicyActionEnum: %s", s)
	}
}

// GETModifyVerifiedAccessEndpointPolicyVersionEnum
type GETModifyVerifiedAccessEndpointPolicyVersionEnum string

const (
	GETModifyVerifiedAccessEndpointPolicyVersionEnumTwoThousandAndSixteen1115 GETModifyVerifiedAccessEndpointPolicyVersionEnum = "2016-11-15"
)

func (e *GETModifyVerifiedAccessEndpointPolicyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETModifyVerifiedAccessEndpointPolicyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVerifiedAccessEndpointPolicyVersionEnum: %s", s)
	}
}

type GETModifyVerifiedAccessEndpointPolicyQueryParams struct {
	Action GETModifyVerifiedAccessEndpointPolicyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
	ClientToken *string `queryParam:"style=form,explode=true,name=ClientToken"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The Amazon Web Services Verified Access policy document.
	PolicyDocument *string `queryParam:"style=form,explode=true,name=PolicyDocument"`
	// The status of the Verified Access policy.
	PolicyEnabled bool `queryParam:"style=form,explode=true,name=PolicyEnabled"`
	// The ID of the Amazon Web Services Verified Access endpoint.
	VerifiedAccessEndpointID string                                           `queryParam:"style=form,explode=true,name=VerifiedAccessEndpointId"`
	Version                  GETModifyVerifiedAccessEndpointPolicyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETModifyVerifiedAccessEndpointPolicyHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyVerifiedAccessEndpointPolicyRequest struct {
	QueryParams GETModifyVerifiedAccessEndpointPolicyQueryParams
	Headers     GETModifyVerifiedAccessEndpointPolicyHeaders
}

type GETModifyVerifiedAccessEndpointPolicyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
