// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProjectDTOv1StatusEnum string

const (
	ProjectDTOv1StatusEnumRequestedProject ProjectDTOv1StatusEnum = "REQUESTED_PROJECT"
	ProjectDTOv1StatusEnumOpened           ProjectDTOv1StatusEnum = "OPENED"
	ProjectDTOv1StatusEnumClosed           ProjectDTOv1StatusEnum = "CLOSED"
	ProjectDTOv1StatusEnumCancelled        ProjectDTOv1StatusEnum = "CANCELLED"
	ProjectDTOv1StatusEnumClaim            ProjectDTOv1StatusEnum = "CLAIM"
)

func (e *ProjectDTOv1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REQUESTED_PROJECT":
		fallthrough
	case "OPENED":
		fallthrough
	case "CLOSED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "CLAIM":
		*e = ProjectDTOv1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectDTOv1StatusEnum: %s", s)
	}
}

// ProjectDTOv1 - Success
type ProjectDTOv1 struct {
	CategoriesIds    []int64                 `json:"categoriesIds,omitempty"`
	ContactPersonID  *int64                  `json:"contactPersonId,omitempty"`
	Contacts         *ContactsDTO            `json:"contacts,omitempty"`
	CustomFields     []CustomFieldDTO        `json:"customFields,omitempty"`
	CustomerID       *int64                  `json:"customerId,omitempty"`
	Dates            *ProjectDatesDTO        `json:"dates,omitempty"`
	Finance          *FinanceDTO             `json:"finance,omitempty"`
	ID               *int64                  `json:"id,omitempty"`
	IDNumber         *string                 `json:"idNumber,omitempty"`
	Instructions     *InstructionsDTO        `json:"instructions,omitempty"`
	IsClassicProject *bool                   `json:"isClassicProject,omitempty"`
	Name             *string                 `json:"name,omitempty"`
	ProjectID        *string                 `json:"projectId,omitempty"`
	ProjectManagerID *int64                  `json:"projectManagerId,omitempty"`
	SpecializationID *int64                  `json:"specializationId,omitempty"`
	Status           *ProjectDTOv1StatusEnum `json:"status,omitempty"`
	Tasks            []TaskDTO               `json:"tasks,omitempty"`
}
