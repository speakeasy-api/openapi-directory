<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ShippingFulfillmentPagedCollection - This type contains the specifications for the entire collection of shipping fulfillments that are associated with the order specified by a <b>getShippingFulfillments</b> call. The <b>fulfillments</b> container returns an array of all the fulfillments in the collection.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ShippingFulfillmentPagedCollection
{
    /**
     * This array contains one or more fulfillments required for the order that was specified in method endpoint.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ShippingFulfillment> $fulfillments
     */
	#[\JMS\Serializer\Annotation\SerializedName('fulfillments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ShippingFulfillment>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fulfillments = null;
    
    /**
     * The total number of fulfillments in the specified order.<br><br><span class="tablenote"><strong>Note:</strong> If no fulfillments are found for the order, this field is returned with a value of <code>0</code>.</span>
     * 
     * @var ?int $total
     */
	#[\JMS\Serializer\Annotation\SerializedName('total')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $total = null;
    
    /**
     * This array is only returned if one or more errors or warnings occur with the call request.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Error> $warnings
     */
	#[\JMS\Serializer\Annotation\SerializedName('warnings')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Error>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $warnings = null;
    
	public function __construct()
	{
		$this->fulfillments = null;
		$this->total = null;
		$this->warnings = null;
	}
}
