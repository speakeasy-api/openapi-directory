// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PostSnippetsWorkspaceEncodedIDCommentsSecurity struct {
	APIKey *shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
	Basic  *shared.SchemeBasic  `security:"scheme,type=http,subtype=basic"`
	Oauth2 *shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

type PostSnippetsWorkspaceEncodedIDCommentsPathParams struct {
	// The snippet id.
	EncodedID string `pathParam:"style=simple,explode=false,name=encoded_id"`
	// This can either be the workspace ID (slug) or the workspace UUID
	// surrounded by curly-braces, for example: `{workspace UUID}`.
	//
	Workspace string `pathParam:"style=simple,explode=false,name=workspace"`
}

type PostSnippetsWorkspaceEncodedIDCommentsRequest struct {
	PathParams PostSnippetsWorkspaceEncodedIDCommentsPathParams
	// The contents of the new comment.
	Request  map[string]interface{} `request:"mediaType=application/json"`
	Security PostSnippetsWorkspaceEncodedIDCommentsSecurity
}

type PostSnippetsWorkspaceEncodedIDCommentsResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// If the authenticated user does not have access to the snippet.
	Error map[string]interface{}
	// The newly created comment.
	SnippetComment map[string]interface{}
}
