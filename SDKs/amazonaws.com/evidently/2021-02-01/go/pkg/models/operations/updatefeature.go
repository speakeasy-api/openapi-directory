// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateFeaturePathParams struct {
	// The name of the feature to be updated.
	Feature string `pathParam:"style=simple,explode=false,name=feature"`
	// The name or ARN of the project that contains the feature to be updated.
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

type UpdateFeatureHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateFeatureRequestBodyEvaluationStrategyEnum - Specify <code>ALL_RULES</code> to activate the traffic allocation specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code> to serve the default variation to all users instead.
type UpdateFeatureRequestBodyEvaluationStrategyEnum string

const (
	UpdateFeatureRequestBodyEvaluationStrategyEnumAllRules         UpdateFeatureRequestBodyEvaluationStrategyEnum = "ALL_RULES"
	UpdateFeatureRequestBodyEvaluationStrategyEnumDefaultVariation UpdateFeatureRequestBodyEvaluationStrategyEnum = "DEFAULT_VARIATION"
)

func (e *UpdateFeatureRequestBodyEvaluationStrategyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ALL_RULES":
		fallthrough
	case "DEFAULT_VARIATION":
		*e = UpdateFeatureRequestBodyEvaluationStrategyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateFeatureRequestBodyEvaluationStrategyEnum: %s", s)
	}
}

type UpdateFeatureRequestBody struct {
	// To update variation configurations for this feature, or add new ones, specify this structure. In this array, include any variations that you want to add or update. If the array includes a variation name that already exists for this feature, it is updated. If it includes a new variation name, it is added as a new variation.
	AddOrUpdateVariations []shared.VariationConfig `json:"addOrUpdateVariations,omitempty"`
	// The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature.
	DefaultVariation *string `json:"defaultVariation,omitempty"`
	// An optional description of the feature.
	Description *string `json:"description,omitempty"`
	// Specified users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.
	EntityOverrides map[string]string `json:"entityOverrides,omitempty"`
	// Specify <code>ALL_RULES</code> to activate the traffic allocation specified by any ongoing launches or experiments. Specify <code>DEFAULT_VARIATION</code> to serve the default variation to all users instead.
	EvaluationStrategy *UpdateFeatureRequestBodyEvaluationStrategyEnum `json:"evaluationStrategy,omitempty"`
	// <p>Removes a variation from the feature. If the variation you specify doesn't exist, then this makes no change and does not report an error.</p> <p>This operation fails if you try to remove a variation that is part of an ongoing launch or experiment.</p>
	RemoveVariations []string `json:"removeVariations,omitempty"`
}

type UpdateFeatureRequest struct {
	PathParams UpdateFeaturePathParams
	Headers    UpdateFeatureHeaders
	Request    UpdateFeatureRequestBody `request:"mediaType=application/json"`
}

type UpdateFeatureResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	StatusCode        int
	RawResponse       *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// Success
	UpdateFeatureResponse *shared.UpdateFeatureResponse
	// ValidationException
	ValidationException interface{}
}
