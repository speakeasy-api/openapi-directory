// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateCompositionSettingsServerList = []string{
	"https://video.twilio.com",
}

type CreateCompositionSettingsSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type CreateCompositionSettingsCreateCompositionSettingsRequest struct {
	// The SID of the stored Credential resource.
	AwsCredentialsSid *string `form:"name=AwsCredentialsSid"`
	// The URL of the AWS S3 bucket where the compositions should be stored. We only support DNS-compliant URLs like `https://documentation-example-twilio-bucket/compositions`, where `compositions` is the path in which you want the compositions to be stored. This URL accepts only URI-valid characters, as described in the <a href='https://tools.ietf.org/html/rfc3986#section-2'>RFC 3986</a>.
	AwsS3URL *string `form:"name=AwsS3Url"`
	// Whether all compositions should be written to the `aws_s3_url`. When `false`, all compositions are stored in our cloud.
	AwsStorageEnabled *bool `form:"name=AwsStorageEnabled"`
	// Whether all compositions should be stored in an encrypted form. The default is `false`.
	EncryptionEnabled *bool `form:"name=EncryptionEnabled"`
	// The SID of the Public Key resource to use for encryption.
	EncryptionKeySid *string `form:"name=EncryptionKeySid"`
	// A descriptive string that you create to describe the resource and show to the user in the console
	FriendlyName string `form:"name=FriendlyName"`
}

type CreateCompositionSettingsRequest struct {
	Request   *CreateCompositionSettingsCreateCompositionSettingsRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security  CreateCompositionSettingsSecurity
	ServerURL *string
}

type CreateCompositionSettingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	VideoV1CompositionSettings *shared.VideoV1CompositionSettings
}
