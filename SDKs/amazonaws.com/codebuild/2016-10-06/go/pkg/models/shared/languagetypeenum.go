// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LanguageTypeEnum string

const (
	LanguageTypeEnumJava    LanguageTypeEnum = "JAVA"
	LanguageTypeEnumPython  LanguageTypeEnum = "PYTHON"
	LanguageTypeEnumNodeJs  LanguageTypeEnum = "NODE_JS"
	LanguageTypeEnumRuby    LanguageTypeEnum = "RUBY"
	LanguageTypeEnumGolang  LanguageTypeEnum = "GOLANG"
	LanguageTypeEnumDocker  LanguageTypeEnum = "DOCKER"
	LanguageTypeEnumAndroid LanguageTypeEnum = "ANDROID"
	LanguageTypeEnumDotnet  LanguageTypeEnum = "DOTNET"
	LanguageTypeEnumBase    LanguageTypeEnum = "BASE"
	LanguageTypeEnumPhp     LanguageTypeEnum = "PHP"
)

func (e LanguageTypeEnum) ToPointer() *LanguageTypeEnum {
	return &e
}

func (e *LanguageTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "JAVA":
		fallthrough
	case "PYTHON":
		fallthrough
	case "NODE_JS":
		fallthrough
	case "RUBY":
		fallthrough
	case "GOLANG":
		fallthrough
	case "DOCKER":
		fallthrough
	case "ANDROID":
		fallthrough
	case "DOTNET":
		fallthrough
	case "BASE":
		fallthrough
	case "PHP":
		*e = LanguageTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LanguageTypeEnum: %v", v)
	}
}
