/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { GoogleCloudDatacatalogV1beta1UsageStats } from "./googleclouddatacatalogv1beta1usagestats";
import { Expose, Transform } from "class-transformer";

/**
 * The set of all usage signals that we store in Data Catalog.
 */
export class GoogleCloudDatacatalogV1beta1UsageSignal extends SpeakeasyBase {
  /**
   * The timestamp of the end of the usage statistics duration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * Usage statistics over each of the pre-defined time ranges, supported strings for time ranges are {"24H", "7D", "30D"}.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDatacatalogV1beta1UsageStats })
  @Expose({ name: "usageWithinTimeRange" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, GoogleCloudDatacatalogV1beta1UsageStats> = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          GoogleCloudDatacatalogV1beta1UsageStats
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  usageWithinTimeRange?: Record<
    string,
    GoogleCloudDatacatalogV1beta1UsageStats
  >;
}
