// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETPromoteReadReplicaDBClusterActionEnum
type GETPromoteReadReplicaDBClusterActionEnum string

const (
	GETPromoteReadReplicaDBClusterActionEnumPromoteReadReplicaDbCluster GETPromoteReadReplicaDBClusterActionEnum = "PromoteReadReplicaDBCluster"
)

func (e GETPromoteReadReplicaDBClusterActionEnum) ToPointer() *GETPromoteReadReplicaDBClusterActionEnum {
	return &e
}

func (e *GETPromoteReadReplicaDBClusterActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PromoteReadReplicaDBCluster":
		*e = GETPromoteReadReplicaDBClusterActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETPromoteReadReplicaDBClusterActionEnum: %v", v)
	}
}

// GETPromoteReadReplicaDBClusterVersionEnum
type GETPromoteReadReplicaDBClusterVersionEnum string

const (
	GETPromoteReadReplicaDBClusterVersionEnumTwoThousandAndFourteen1031 GETPromoteReadReplicaDBClusterVersionEnum = "2014-10-31"
)

func (e GETPromoteReadReplicaDBClusterVersionEnum) ToPointer() *GETPromoteReadReplicaDBClusterVersionEnum {
	return &e
}

func (e *GETPromoteReadReplicaDBClusterVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2014-10-31":
		*e = GETPromoteReadReplicaDBClusterVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETPromoteReadReplicaDBClusterVersionEnum: %v", v)
	}
}

type GETPromoteReadReplicaDBClusterRequest struct {
	Action GETPromoteReadReplicaDBClusterActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The identifier of the DB cluster read replica to promote. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DB cluster read replica.</p> </li> </ul> <p>Example: <code>my-cluster-replica1</code> </p>
	DBClusterIdentifier string                                    `queryParam:"style=form,explode=true,name=DBClusterIdentifier"`
	Version             GETPromoteReadReplicaDBClusterVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm       *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETPromoteReadReplicaDBClusterResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
