// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ActionsListJobsForWorkflowRunFilterEnum - Filters jobs by their `completed_at` timestamp. Can be one of:
// \* `latest`: Returns jobs from the most recent execution of the workflow run.
// \* `all`: Returns all jobs for a workflow run, including from old executions of the workflow run.
type ActionsListJobsForWorkflowRunFilterEnum string

const (
	ActionsListJobsForWorkflowRunFilterEnumLatest ActionsListJobsForWorkflowRunFilterEnum = "latest"
	ActionsListJobsForWorkflowRunFilterEnumAll    ActionsListJobsForWorkflowRunFilterEnum = "all"
)

func (e ActionsListJobsForWorkflowRunFilterEnum) ToPointer() *ActionsListJobsForWorkflowRunFilterEnum {
	return &e
}

func (e *ActionsListJobsForWorkflowRunFilterEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "latest":
		fallthrough
	case "all":
		*e = ActionsListJobsForWorkflowRunFilterEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionsListJobsForWorkflowRunFilterEnum: %v", v)
	}
}

type ActionsListJobsForWorkflowRunRequest struct {
	// Filters jobs by their `completed_at` timestamp. Can be one of:
	// \* `latest`: Returns jobs from the most recent execution of the workflow run.
	// \* `all`: Returns all jobs for a workflow run, including from old executions of the workflow run.
	Filter *ActionsListJobsForWorkflowRunFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	Owner  string                                   `pathParam:"style=simple,explode=false,name=owner"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Results per page (max 100)
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	Repo    string `pathParam:"style=simple,explode=false,name=repo"`
	// The id of the workflow run.
	RunID int64 `pathParam:"style=simple,explode=false,name=run_id"`
}

// ActionsListJobsForWorkflowRun200ApplicationJSON - Response
type ActionsListJobsForWorkflowRun200ApplicationJSON struct {
	Jobs       []shared.Job `json:"jobs"`
	TotalCount int64        `json:"total_count"`
}

type ActionsListJobsForWorkflowRunResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	ActionsListJobsForWorkflowRun200ApplicationJSONObject *ActionsListJobsForWorkflowRun200ApplicationJSON
}
