/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateTableColumnPropertiesRequest - Updates the properties of a Table column.
 */
public class UpdateTableColumnPropertiesRequest {
    /**
     * The list of zero-based indices specifying which columns to update. If no indices are provided, all columns in the table will be updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("columnIndices")
    public Integer[] columnIndices;
    public UpdateTableColumnPropertiesRequest withColumnIndices(Integer[] columnIndices) {
        this.columnIndices = columnIndices;
        return this;
    }
    
    /**
     * The fields that should be updated. At least one field must be specified. The root `tableColumnProperties` is implied and should not be specified. A single `"*"` can be used as short-hand for listing every field. For example to update the column width, set `fields` to `"column_width"`. If '"column_width"' is included in the field mask but the property is left unset, the column width will default to 406,400 EMU (32 points).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    public String fields;
    public UpdateTableColumnPropertiesRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * The object ID of the table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectId")
    public String objectId;
    public UpdateTableColumnPropertiesRequest withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * Properties of each column in a table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableColumnProperties")
    public TableColumnProperties tableColumnProperties;
    public UpdateTableColumnPropertiesRequest withTableColumnProperties(TableColumnProperties tableColumnProperties) {
        this.tableColumnProperties = tableColumnProperties;
        return this;
    }
    
}
