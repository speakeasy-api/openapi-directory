/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The appointment system type.
 */
export enum DiaryAppointmentTypeModelSystemTypeEnum {
  Viewing = "Viewing",
  ViewAndValue = "ViewAndValue",
  OpeningInspection = "OpeningInspection",
  InterimInspection = "InterimInspection",
  ClosingInspection = "ClosingInspection",
  SalesAppraisal = "SalesAppraisal",
  Custom = "Custom",
}

/**
 * Represents a diary appointment type.
 */
export class DiaryAppointmentTypeModel extends SpeakeasyBase {
  /**
   * A unique identifier defining the object and change revision.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ETag" })
  eTag?: string;

  /**
   * The appointment type name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * The unique Object ID (OID).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OID" })
  oid?: string;

  /**
   * The appointment system type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SystemType" })
  systemType?: DiaryAppointmentTypeModelSystemTypeEnum;
}
