/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Money } from "./money";
import { Expose, Type } from "class-transformer";

/**
 * An object describing a job that a team member is assigned to.
 */
export class JobAssignment extends SpeakeasyBase {
  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annual_rate" })
  @Type(() => Money)
  annualRate?: Money;

  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hourly_rate" })
  @Type(() => Money)
  hourlyRate?: Money;

  /**
   * The title of the job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job_title" })
  jobTitle: string;

  /**
   * The current pay type for the job assignment used to
   *
   * @remarks
   * calculate the pay amount in a pay period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pay_type" })
  payType: string;

  /**
   * The planned hours per week for the job. Set if the job `PayType` is `SALARY`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weekly_hours" })
  weeklyHours?: number;
}
