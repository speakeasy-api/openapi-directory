"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timeofday as shared_timeofday
from ..shared import timerange as shared_timerange
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TimeDimensionDayOfWeekEnum(str, Enum):
    r"""The day of the week (\\"MONDAY\\" to \\"SUNDAY\\") this value corresponds to. Set for BREAKDOWN_DAY_OF_WEEK option."""
    DAY_OF_WEEK_UNSPECIFIED = 'DAY_OF_WEEK_UNSPECIFIED'
    MONDAY = 'MONDAY'
    TUESDAY = 'TUESDAY'
    WEDNESDAY = 'WEDNESDAY'
    THURSDAY = 'THURSDAY'
    FRIDAY = 'FRIDAY'
    SATURDAY = 'SATURDAY'
    SUNDAY = 'SUNDAY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TimeDimension:
    r"""The dimension for which data is divided over."""
    
    day_of_week: Optional[TimeDimensionDayOfWeekEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfWeek'), 'exclude': lambda f: f is None }})
    r"""The day of the week (\\"MONDAY\\" to \\"SUNDAY\\") this value corresponds to. Set for BREAKDOWN_DAY_OF_WEEK option."""  
    time_of_day: Optional[shared_timeofday.TimeOfDay] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeOfDay'), 'exclude': lambda f: f is None }})
    r"""Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`."""  
    time_range: Optional[shared_timerange.TimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeRange'), 'exclude': lambda f: f is None }})
    r"""A range of time. Data will be pulled over the range as a half-open inverval (that is, [start_time, end_time))."""  
    