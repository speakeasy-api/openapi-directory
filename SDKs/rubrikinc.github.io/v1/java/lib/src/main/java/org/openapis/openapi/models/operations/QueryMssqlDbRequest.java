/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QueryMssqlDbRequest {
    /**
     * Filter by the `id` of an Always On Availability Group.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=availability_group_id")
    public String availabilityGroupId;

    public QueryMssqlDbRequest withAvailabilityGroupId(String availabilityGroupId) {
        this.availabilityGroupId = availabilityGroupId;
        return this;
    }
    
    /**
     * Filter by effective SLA domain.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=effective_sla_domain_id")
    public String effectiveSlaDomainId;

    public QueryMssqlDbRequest withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * Include backup task information in response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include_backup_task_info")
    public Boolean includeBackupTaskInfo;

    public QueryMssqlDbRequest withIncludeBackupTaskInfo(Boolean includeBackupTaskInfo) {
        this.includeBackupTaskInfo = includeBackupTaskInfo;
        return this;
    }
    
    /**
     * Filter by Microsoft SQL instance.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=instance_id")
    public String instanceId;

    public QueryMssqlDbRequest withInstanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }
    
    /**
     * Filter database summary information by the value of the `isLiveMount` field.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_live_mount")
    public Boolean isLiveMount;

    public QueryMssqlDbRequest withIsLiveMount(Boolean isLiveMount) {
        this.isLiveMount = isLiveMount;
        return this;
    }
    
    /**
     * Filter database summary information by the value of the `isLogShippingSecondary` field.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_log_shipping_secondary")
    public Boolean isLogShippingSecondary;

    public QueryMssqlDbRequest withIsLogShippingSecondary(Boolean isLogShippingSecondary) {
        this.isLogShippingSecondary = isLogShippingSecondary;
        return this;
    }
    
    /**
     * Filter database summary information by the value of the `isRelic` field.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_relic")
    public Boolean isRelic;

    public QueryMssqlDbRequest withIsRelic(Boolean isRelic) {
        this.isRelic = isRelic;
        return this;
    }
    
    /**
     * Limit the number of matches returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public QueryMssqlDbRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Filter by a substring of the database name.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;

    public QueryMssqlDbRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * An integer that specifies a number of initial matches to ignore.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public QueryMssqlDbRequest withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Filter by primary cluster.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_cluster_id")
    public String primaryClusterId;

    public QueryMssqlDbRequest withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * SLA Assignment of the database.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sla_assignment")
    public String slaAssignment;

    public QueryMssqlDbRequest withSlaAssignment(String slaAssignment) {
        this.slaAssignment = slaAssignment;
        return this;
    }
    
    /**
     * Specifies the SQL Server Database attribute to use in sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public QueryMssqlDbSortByEnum sortBy;

    public QueryMssqlDbRequest withSortBy(QueryMssqlDbSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Sort order, either ascending or descending.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public QueryMssqlDbSortOrderEnum sortOrder;

    public QueryMssqlDbRequest withSortOrder(QueryMssqlDbSortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public QueryMssqlDbRequest(){}
}
