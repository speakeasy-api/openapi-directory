/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSSHKeysListRequest extends SpeakeasyBase {
  /**
   * Access token required to make the API call.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-access-token",
  })
  evAccessToken: string;

  /**
   * API key required to make the API call.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-api-key",
  })
  evApiKey: string;

  /**
   *  Limits the results by the given number. Cannot be set higher than 100.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   *  Determines which item to start on for pagination. Use zero (0) to start at the beginning of the list.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   *  Only return results for the given user ID. This is not the username, but the numeric ID of the user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=userId",
  })
  userId?: string;
}

export class GetSSHKeysListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful Operation
   */
  @SpeakeasyMetadata()
  sshKeyCollectionResponse?: shared.SSHKeyCollectionResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
