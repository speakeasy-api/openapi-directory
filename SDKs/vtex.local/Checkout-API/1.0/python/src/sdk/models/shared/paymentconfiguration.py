"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentConfiguration:
    r"""Payment Configuration object"""
    
    requires_authentication_for_pre_authorized_payment_option: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requiresAuthenticationForPreAuthorizedPaymentOption') }})
    r"""Determines whether pre-authorized payments require authentication"""  
    allow_installments_merge: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowInstallmentsMerge'), 'exclude': lambda f: f is None }})
    r"""By default (when `false`), on a multi-seller purchase is on the run, a simple intersection with installments options configured by every seller will be available. When `true`, this option allows a more complex but flexible installment option, since it considers max installments of every seller configuration, even if those don't match. Installment values \u200B\u200Bmay not be equal in this case."""  
    