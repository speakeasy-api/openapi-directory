// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// BatchGetReportGroupsXAmzTargetEnum
type BatchGetReportGroupsXAmzTargetEnum string

const (
	BatchGetReportGroupsXAmzTargetEnumCodeBuild20161006BatchGetReportGroups BatchGetReportGroupsXAmzTargetEnum = "CodeBuild_20161006.BatchGetReportGroups"
)

func (e BatchGetReportGroupsXAmzTargetEnum) ToPointer() *BatchGetReportGroupsXAmzTargetEnum {
	return &e
}

func (e *BatchGetReportGroupsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeBuild_20161006.BatchGetReportGroups":
		*e = BatchGetReportGroupsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchGetReportGroupsXAmzTargetEnum: %v", v)
	}
}

type BatchGetReportGroupsRequest struct {
	BatchGetReportGroupsInput shared.BatchGetReportGroupsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                BatchGetReportGroupsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type BatchGetReportGroupsResponse struct {
	// Success
	BatchGetReportGroupsOutput *shared.BatchGetReportGroupsOutput
	ContentType                string
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
