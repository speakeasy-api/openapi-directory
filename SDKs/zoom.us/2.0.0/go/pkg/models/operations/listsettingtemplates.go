// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListSettingTemplatesSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type ListSettingTemplatesQueryParams struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// Number of records returns within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Unique identifier of the site. This field is required only if multiple sites have been enabled.  of the site. Required only when multiple sites are enabled. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details. If this is not provided, the response lists the account level setting templates.
	SiteID *string `queryParam:"style=form,explode=true,name=site_id"`
}

type ListSettingTemplatesRequest struct {
	QueryParams ListSettingTemplatesQueryParams
	Security    ListSettingTemplatesSecurity
}

// ListSettingTemplates200ApplicationXMLTemplatesTypeEnum - Template type.<br>
// The value of this field can be one of the following:<br>
// * `user`<br>
// * `group`<br>
// * `autReceptionist`<br>
// * `commonArea`<br>
// * `zr`<br>
// * `interop`<br>
type ListSettingTemplates200ApplicationXMLTemplatesTypeEnum string

const (
	ListSettingTemplates200ApplicationXMLTemplatesTypeEnumUser            ListSettingTemplates200ApplicationXMLTemplatesTypeEnum = "user"
	ListSettingTemplates200ApplicationXMLTemplatesTypeEnumGroup           ListSettingTemplates200ApplicationXMLTemplatesTypeEnum = "group"
	ListSettingTemplates200ApplicationXMLTemplatesTypeEnumAutReceptionist ListSettingTemplates200ApplicationXMLTemplatesTypeEnum = "autReceptionist"
	ListSettingTemplates200ApplicationXMLTemplatesTypeEnumCommonArea      ListSettingTemplates200ApplicationXMLTemplatesTypeEnum = "commonArea"
	ListSettingTemplates200ApplicationXMLTemplatesTypeEnumZr              ListSettingTemplates200ApplicationXMLTemplatesTypeEnum = "zr"
	ListSettingTemplates200ApplicationXMLTemplatesTypeEnumInterop         ListSettingTemplates200ApplicationXMLTemplatesTypeEnum = "interop"
)

func (e *ListSettingTemplates200ApplicationXMLTemplatesTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "group":
		fallthrough
	case "autReceptionist":
		fallthrough
	case "commonArea":
		fallthrough
	case "zr":
		fallthrough
	case "interop":
		*e = ListSettingTemplates200ApplicationXMLTemplatesTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSettingTemplates200ApplicationXMLTemplatesTypeEnum: %s", s)
	}
}

type ListSettingTemplates200ApplicationXMLTemplates struct {
	// Template description.
	Description *string
	// Unique identifier of the template.
	ID *string
	// Template name.
	Name *string
	// Template type.<br>
	// The value of this field can be one of the following:<br>
	// * `user`<br>
	// * `group`<br>
	// * `autReceptionist`<br>
	// * `commonArea`<br>
	// * `zr`<br>
	// * `interop`<br>
	Type *ListSettingTemplates200ApplicationXMLTemplatesTypeEnum
}

// ListSettingTemplates200ApplicationXML - **HTTP Status Code:** `200`<br>
// OK
type ListSettingTemplates200ApplicationXML struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
	NextPageToken *string
	// The number of records returned within a single API call. The default is **30** and the maximum is **300**.
	PageSize  *int64
	Templates []ListSettingTemplates200ApplicationXMLTemplates
	// The total number of records returned.
	TotalRecords *int64
}

// ListSettingTemplates200ApplicationJSONTemplatesTypeEnum - Template type.<br>
// The value of this field can be one of the following:<br>
// * `user`<br>
// * `group`<br>
// * `autReceptionist`<br>
// * `commonArea`<br>
// * `zr`<br>
// * `interop`<br>
type ListSettingTemplates200ApplicationJSONTemplatesTypeEnum string

const (
	ListSettingTemplates200ApplicationJSONTemplatesTypeEnumUser            ListSettingTemplates200ApplicationJSONTemplatesTypeEnum = "user"
	ListSettingTemplates200ApplicationJSONTemplatesTypeEnumGroup           ListSettingTemplates200ApplicationJSONTemplatesTypeEnum = "group"
	ListSettingTemplates200ApplicationJSONTemplatesTypeEnumAutReceptionist ListSettingTemplates200ApplicationJSONTemplatesTypeEnum = "autReceptionist"
	ListSettingTemplates200ApplicationJSONTemplatesTypeEnumCommonArea      ListSettingTemplates200ApplicationJSONTemplatesTypeEnum = "commonArea"
	ListSettingTemplates200ApplicationJSONTemplatesTypeEnumZr              ListSettingTemplates200ApplicationJSONTemplatesTypeEnum = "zr"
	ListSettingTemplates200ApplicationJSONTemplatesTypeEnumInterop         ListSettingTemplates200ApplicationJSONTemplatesTypeEnum = "interop"
)

func (e *ListSettingTemplates200ApplicationJSONTemplatesTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "group":
		fallthrough
	case "autReceptionist":
		fallthrough
	case "commonArea":
		fallthrough
	case "zr":
		fallthrough
	case "interop":
		*e = ListSettingTemplates200ApplicationJSONTemplatesTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSettingTemplates200ApplicationJSONTemplatesTypeEnum: %s", s)
	}
}

type ListSettingTemplates200ApplicationJSONTemplates struct {
	// Template description.
	Description *string `json:"description,omitempty"`
	// Unique identifier of the template.
	ID *string `json:"id,omitempty"`
	// Template name.
	Name *string `json:"name,omitempty"`
	// Template type.<br>
	// The value of this field can be one of the following:<br>
	// * `user`<br>
	// * `group`<br>
	// * `autReceptionist`<br>
	// * `commonArea`<br>
	// * `zr`<br>
	// * `interop`<br>
	Type *ListSettingTemplates200ApplicationJSONTemplatesTypeEnum `json:"type,omitempty"`
}

// ListSettingTemplates200ApplicationJSON - **HTTP Status Code:** `200`<br>
// OK
type ListSettingTemplates200ApplicationJSON struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of records returned within a single API call. The default is **30** and the maximum is **300**.
	PageSize  *int64                                            `json:"page_size,omitempty"`
	Templates []ListSettingTemplates200ApplicationJSONTemplates `json:"templates,omitempty"`
	// The total number of records returned.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type ListSettingTemplatesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// OK
	ListSettingTemplates200ApplicationJSONObject *ListSettingTemplates200ApplicationJSON
}
