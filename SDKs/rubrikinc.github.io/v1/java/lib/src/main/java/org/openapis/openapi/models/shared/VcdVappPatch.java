/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VcdVappPatch - Parameters to use to update the specified vApp object.
 */
public class VcdVappPatch {
    /**
     * ID assigned to the SLA Domain object that manages protection for the specified vApp object. Existing snapshots of the object will be retained with the configuration of the specified SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuredSlaDomainId")
    public String configuredSlaDomainId;

    public VcdVappPatch withConfiguredSlaDomainId(String configuredSlaDomainId) {
        this.configuredSlaDomainId = configuredSlaDomainId;
        return this;
    }
    
    /**
     * Boolean value that indicates whether the Rubrik cluster should attempt taking synchronized snapshots across all child virtual machines of the vApp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isBestEffortSynchronizationEnabled")
    public Boolean isBestEffortSynchronizationEnabled;

    public VcdVappPatch withIsBestEffortSynchronizationEnabled(Boolean isBestEffortSynchronizationEnabled) {
        this.isBestEffortSynchronizationEnabled = isBestEffortSynchronizationEnabled;
        return this;
    }
    
    /**
     * Boolean value that indicates whether protection activity is paused for the specified vApp. Set to 'true' when protection activity is paused and 'false' when protection activity is not paused. Protection activity includes backup, replication, and archiving.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isPaused")
    public Boolean isPaused;

    public VcdVappPatch withIsPaused(Boolean isPaused) {
        this.isPaused = isPaused;
        return this;
    }
    
    /**
     * Array containing vCloud Director virtual machine moids that will be excluded from vApp snapshots.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vcdVmMoidsToExcludeFromSnapshot")
    public String[] vcdVmMoidsToExcludeFromSnapshot;

    public VcdVappPatch withVcdVmMoidsToExcludeFromSnapshot(String[] vcdVmMoidsToExcludeFromSnapshot) {
        this.vcdVmMoidsToExcludeFromSnapshot = vcdVmMoidsToExcludeFromSnapshot;
        return this;
    }
    
    public VcdVappPatch(){}
}
