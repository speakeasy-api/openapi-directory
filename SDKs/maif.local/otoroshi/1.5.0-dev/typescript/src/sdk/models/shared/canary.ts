/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Target } from "./target";
import { Expose, Type } from "class-transformer";

/**
 * The configuration of the canary mode for a service descriptor
 */
export class Canary extends SpeakeasyBase {
  /**
   * Use canary mode for this service
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;

  /**
   * Otoroshi will append this root to any target choosen. If the specified root is '/api/foo', then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar
   */
  @SpeakeasyMetadata()
  @Expose({ name: "root" })
  root: string;

  /**
   * The list of target that Otoroshi will proxy and expose through the subdomain defined before. Otoroshi will do round-robin load balancing between all those targets with circuit breaker mecanism to avoid cascading failures
   */
  @SpeakeasyMetadata({ elemType: Target })
  @Expose({ name: "targets" })
  @Type(() => Target)
  targets: Target[];

  /**
   * Ratio of traffic that will be sent to canary targets.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "traffic" })
  traffic: number;
}
