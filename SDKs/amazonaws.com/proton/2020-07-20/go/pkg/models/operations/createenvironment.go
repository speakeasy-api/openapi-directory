// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateEnvironmentXAmzTargetEnum
type CreateEnvironmentXAmzTargetEnum string

const (
	CreateEnvironmentXAmzTargetEnumAwsProton20200720CreateEnvironment CreateEnvironmentXAmzTargetEnum = "AwsProton20200720.CreateEnvironment"
)

func (e *CreateEnvironmentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AwsProton20200720.CreateEnvironment":
		*e = CreateEnvironmentXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateEnvironmentXAmzTargetEnum: %s", s)
	}
}

type CreateEnvironmentRequest struct {
	CreateEnvironmentInput shared.CreateEnvironmentInput   `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             CreateEnvironmentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateEnvironmentResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateEnvironmentOutput *shared.CreateEnvironmentOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
