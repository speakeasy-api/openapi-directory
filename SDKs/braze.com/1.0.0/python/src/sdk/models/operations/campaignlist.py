"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class CampaignListRequest:
    
    include_archived: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_archived', 'style': 'form', 'explode': True }})
    r"""(Optional) Boolean
    
    Whether or not to include archived campaigns, defaults to false
    """  
    last_edit_time_gt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'last_edit.time[gt]', 'style': 'form', 'explode': True }})
    r"""(Optional) DateTime (ISO 8601 string)
    
    Filters the results and only returns campaigns that were edited greater than the time provided till now.
    """  
    page: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""(Optional) Integer
    
    The page of campaigns to return, defaults to 0 (returns the first set of up to 100)
    """  
    sort_direction: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_direction', 'style': 'form', 'explode': True }})
    r"""(Optional) String
    
    Pass in the value `desc` to sort by creation time from newest to oldest. Pass in `asc` to sort from oldest to newest. If sort_direction is not included, the default order is oldest to newest.
    """  
    

@dataclasses.dataclass
class CampaignListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    