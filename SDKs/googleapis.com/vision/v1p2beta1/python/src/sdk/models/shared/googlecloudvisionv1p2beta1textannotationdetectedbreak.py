"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreakTypeEnum(str, Enum):
    r"""Detected break type."""
    UNKNOWN = 'UNKNOWN'
    SPACE = 'SPACE'
    SURE_SPACE = 'SURE_SPACE'
    EOL_SURE_SPACE = 'EOL_SURE_SPACE'
    HYPHEN = 'HYPHEN'
    LINE_BREAK = 'LINE_BREAK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak:
    r"""Detected start or end of a structural component."""
    
    is_prefix: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isPrefix'), 'exclude': lambda f: f is None }})
    r"""True if break prepends the element."""  
    type: Optional[GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreakTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Detected break type."""  
    