// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ValidationOptionsSchemaValidationEnum - Customize how deployment manager will validate the resource against schema errors.
type ValidationOptionsSchemaValidationEnum string

const (
	ValidationOptionsSchemaValidationEnumUnknown            ValidationOptionsSchemaValidationEnum = "UNKNOWN"
	ValidationOptionsSchemaValidationEnumIgnore             ValidationOptionsSchemaValidationEnum = "IGNORE"
	ValidationOptionsSchemaValidationEnumIgnoreWithWarnings ValidationOptionsSchemaValidationEnum = "IGNORE_WITH_WARNINGS"
	ValidationOptionsSchemaValidationEnumFail               ValidationOptionsSchemaValidationEnum = "FAIL"
)

func (e *ValidationOptionsSchemaValidationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "IGNORE":
		fallthrough
	case "IGNORE_WITH_WARNINGS":
		fallthrough
	case "FAIL":
		*e = ValidationOptionsSchemaValidationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidationOptionsSchemaValidationEnum: %s", s)
	}
}

// ValidationOptionsUndeclaredPropertiesEnum - Specify what to do with extra properties when executing a request.
type ValidationOptionsUndeclaredPropertiesEnum string

const (
	ValidationOptionsUndeclaredPropertiesEnumUnknown             ValidationOptionsUndeclaredPropertiesEnum = "UNKNOWN"
	ValidationOptionsUndeclaredPropertiesEnumInclude             ValidationOptionsUndeclaredPropertiesEnum = "INCLUDE"
	ValidationOptionsUndeclaredPropertiesEnumIgnore              ValidationOptionsUndeclaredPropertiesEnum = "IGNORE"
	ValidationOptionsUndeclaredPropertiesEnumIncludeWithWarnings ValidationOptionsUndeclaredPropertiesEnum = "INCLUDE_WITH_WARNINGS"
	ValidationOptionsUndeclaredPropertiesEnumIgnoreWithWarnings  ValidationOptionsUndeclaredPropertiesEnum = "IGNORE_WITH_WARNINGS"
	ValidationOptionsUndeclaredPropertiesEnumFail                ValidationOptionsUndeclaredPropertiesEnum = "FAIL"
)

func (e *ValidationOptionsUndeclaredPropertiesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "INCLUDE":
		fallthrough
	case "IGNORE":
		fallthrough
	case "INCLUDE_WITH_WARNINGS":
		fallthrough
	case "IGNORE_WITH_WARNINGS":
		fallthrough
	case "FAIL":
		*e = ValidationOptionsUndeclaredPropertiesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidationOptionsUndeclaredPropertiesEnum: %s", s)
	}
}

// ValidationOptions - Options for how to validate and process properties on a resource.
type ValidationOptions struct {
	// Customize how deployment manager will validate the resource against schema errors.
	SchemaValidation *ValidationOptionsSchemaValidationEnum `json:"schemaValidation,omitempty"`
	// Specify what to do with extra properties when executing a request.
	UndeclaredProperties *ValidationOptionsUndeclaredPropertiesEnum `json:"undeclaredProperties,omitempty"`
}
