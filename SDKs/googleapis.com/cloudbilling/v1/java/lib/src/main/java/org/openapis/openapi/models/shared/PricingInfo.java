/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PricingInfo - Represents the pricing information for a SKU at a single point of time.
 */
public class PricingInfo {
    /**
     * Represents the aggregation level and interval for pricing of a single SKU.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aggregationInfo")
    public AggregationInfo aggregationInfo;
    public PricingInfo withAggregationInfo(AggregationInfo aggregationInfo) {
        this.aggregationInfo = aggregationInfo;
        return this;
    }
    
    /**
     * Conversion rate used for currency conversion, from USD to the currency specified in the request. This includes any surcharge collected for billing in non USD currency. If a currency is not specified in the request this defaults to 1.0. Example: USD * currency_conversion_rate = JPY
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyConversionRate")
    public Double currencyConversionRate;
    public PricingInfo withCurrencyConversionRate(Double currencyConversionRate) {
        this.currencyConversionRate = currencyConversionRate;
        return this;
    }
    
    /**
     * The timestamp from which this pricing was effective within the requested time range. This is guaranteed to be greater than or equal to the start_time field in the request and less than the end_time field in the request. If a time range was not specified in the request this field will be equivalent to a time within the last 12 hours, indicating the latest pricing info.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveTime")
    public String effectiveTime;
    public PricingInfo withEffectiveTime(String effectiveTime) {
        this.effectiveTime = effectiveTime;
        return this;
    }
    
    /**
     * Expresses a mathematical pricing formula. For Example:- `usage_unit: GBy` `tiered_rates:` `[start_usage_amount: 20, unit_price: $10]` `[start_usage_amount: 100, unit_price: $5]` The above expresses a pricing formula where the first 20GB is free, the next 80GB is priced at $10 per GB followed by $5 per GB for additional usage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pricingExpression")
    public PricingExpression pricingExpression;
    public PricingInfo withPricingExpression(PricingExpression pricingExpression) {
        this.pricingExpression = pricingExpression;
        return this;
    }
    
    /**
     * An optional human readable summary of the pricing information, has a maximum length of 256 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("summary")
    public String summary;
    public PricingInfo withSummary(String summary) {
        this.summary = summary;
        return this;
    }
    
}
