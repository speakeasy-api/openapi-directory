/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CloudJobSchedule - A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
 */
public class CloudJobSchedule {
    /**
     * The creation time of the job schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationTime")
    public OffsetDateTime creationTime;

    public CloudJobSchedule withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * The display name for the schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public CloudJobSchedule withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The ETag of the job schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eTag")
    public String eTag;

    public CloudJobSchedule withETag(String eTag) {
        this.eTag = eTag;
        return this;
    }
    
    /**
     * Specifies how tasks should be run in a job associated with a job schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionInfo")
    public JobScheduleExecutionInformation executionInfo;

    public CloudJobSchedule withExecutionInfo(JobScheduleExecutionInformation executionInfo) {
        this.executionInfo = executionInfo;
        return this;
    }
    
    /**
     * A string that uniquely identifies the schedule within the account. A GUID is recommended.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public CloudJobSchedule withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Specifies details of the jobs to be created on a schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobSpecification")
    public JobSpecification jobSpecification;

    public CloudJobSchedule withJobSpecification(JobSpecification jobSpecification) {
        this.jobSpecification = jobSpecification;
        return this;
    }
    
    /**
     * The last modified time of the job schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastModified")
    public OffsetDateTime lastModified;

    public CloudJobSchedule withLastModified(OffsetDateTime lastModified) {
        this.lastModified = lastModified;
        return this;
    }
    
    /**
     * A list of name-value pairs associated with the schedule as metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public MetadataItem[] metadata;

    public CloudJobSchedule withMetadata(MetadataItem[] metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The previous state of the job schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previousState")
    public CloudJobSchedulePreviousStateEnum previousState;

    public CloudJobSchedule withPreviousState(CloudJobSchedulePreviousStateEnum previousState) {
        this.previousState = previousState;
        return this;
    }
    
    /**
     * The time at which the job schedule entered its previous state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("previousStateTransitionTime")
    public OffsetDateTime previousStateTransitionTime;

    public CloudJobSchedule withPreviousStateTransitionTime(OffsetDateTime previousStateTransitionTime) {
        this.previousStateTransitionTime = previousStateTransitionTime;
        return this;
    }
    
    /**
     * The schedule according to which jobs will be created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule")
    public Schedule schedule;

    public CloudJobSchedule withSchedule(Schedule schedule) {
        this.schedule = schedule;
        return this;
    }
    
    /**
     * The current state of the job schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public CloudJobScheduleStateEnum state;

    public CloudJobSchedule withState(CloudJobScheduleStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The time at which the job schedule entered the current state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("stateTransitionTime")
    public OffsetDateTime stateTransitionTime;

    public CloudJobSchedule withStateTransitionTime(OffsetDateTime stateTransitionTime) {
        this.stateTransitionTime = stateTransitionTime;
        return this;
    }
    
    /**
     * Resource usage statistics for a job schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stats")
    public JobScheduleStatistics stats;

    public CloudJobSchedule withStats(JobScheduleStatistics stats) {
        this.stats = stats;
        return this;
    }
    
    /**
     * The URL of the job schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public CloudJobSchedule withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public CloudJobSchedule(){}
}
