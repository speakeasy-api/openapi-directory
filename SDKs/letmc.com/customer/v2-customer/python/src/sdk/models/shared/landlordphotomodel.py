"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LandlordPhotoModelPhotoTypeEnum(str, Enum):
    r"""The photo type."""
    PHOTO = 'Photo'
    MAP = 'Map'
    FLOOR_PLAN = 'FloorPlan'
    SITE_MAP = 'SiteMap'
    AERIAL_PHOTO = 'AerialPhoto'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LandlordPhotoModel:
    r"""Stores a photo related to a property structure."""
    
    e_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ETag'), 'exclude': lambda f: f is None }})
    r"""A unique identifier defining the object and change revision."""  
    file_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FileName'), 'exclude': lambda f: f is None }})
    r"""The file name."""  
    oid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OID'), 'exclude': lambda f: f is None }})
    r"""The unique Object ID (OID)."""  
    photo_type: Optional[LandlordPhotoModelPhotoTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PhotoType'), 'exclude': lambda f: f is None }})
    r"""The photo type."""  
    