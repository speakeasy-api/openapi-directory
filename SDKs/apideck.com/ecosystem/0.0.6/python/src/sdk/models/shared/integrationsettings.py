"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IntegrationSettings:
    
    albacross_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('albacross_id'), 'exclude': lambda f: f is None }})  
    automate_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('automate_enabled'), 'exclude': lambda f: f is None }})  
    blendr_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blendr_enabled'), 'exclude': lambda f: f is None }})  
    combidesk_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('combidesk_enabled'), 'exclude': lambda f: f is None }})  
    crisp_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crisp_id'), 'exclude': lambda f: f is None }})  
    drift_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drift_id'), 'exclude': lambda f: f is None }})  
    google_analytics_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('google_analytics_id'), 'exclude': lambda f: f is None }})  
    google_tag_manager_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('google_tag_manager_id'), 'exclude': lambda f: f is None }})  
    heap_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('heap_id'), 'exclude': lambda f: f is None }})  
    hubspot_portal_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hubspot_portal_id'), 'exclude': lambda f: f is None }})  
    integromat_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integromat_enabled'), 'exclude': lambda f: f is None }})  
    intercom_app_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intercom_app_id'), 'exclude': lambda f: f is None }})  
    iubenda_cookie_policy_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iubenda_cookie_policy_id'), 'exclude': lambda f: f is None }})  
    iubenda_site_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iubenda_site_id'), 'exclude': lambda f: f is None }})  
    journy_io_domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('journy_io_domain'), 'exclude': lambda f: f is None }})  
    journy_io_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('journy_io_id'), 'exclude': lambda f: f is None }})  
    livechat_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('livechat_id'), 'exclude': lambda f: f is None }})  
    metomic_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metomic_id'), 'exclude': lambda f: f is None }})  
    microsoft_flow_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('microsoft_flow_enabled'), 'exclude': lambda f: f is None }})  
    microsoft_flow_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('microsoft_flow_id'), 'exclude': lambda f: f is None }})  
    onetrust_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('onetrust_id'), 'exclude': lambda f: f is None }})  
    piesync_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('piesync_enabled'), 'exclude': lambda f: f is None }})  
    segment_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segment_enabled'), 'exclude': lambda f: f is None }})  
    segment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segment_id'), 'exclude': lambda f: f is None }})  
    tray_io_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tray_io_enabled'), 'exclude': lambda f: f is None }})  
    zapier_beta_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zapier_beta_link'), 'exclude': lambda f: f is None }})  
    zapier_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zapier_enabled'), 'exclude': lambda f: f is None }})  
    zapier_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zapier_id'), 'exclude': lambda f: f is None }})  
    