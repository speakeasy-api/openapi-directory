/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListStandardsControlAssociationsQueryParams {
    /**
     *  An optional parameter that limits the total results of the API response to the specified number. If this parameter isn't provided in the request, the results include the first 25 standard and control associations. The results also include a &lt;code&gt;NextToken&lt;/code&gt; parameter that you can use in a subsequent API call to get the next 25 associations. This repeats until all associations for the specified control are returned. The number of results is limited by the number of supported Security Hub standards that you've enabled in the calling account. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxResults")
    public Long maxResults;
    public ListStandardsControlAssociationsQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     *  Optional pagination parameter. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NextToken")
    public String nextToken;
    public ListStandardsControlAssociationsQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     *  The identifier of the control (identified with &lt;code&gt;SecurityControlId&lt;/code&gt;, &lt;code&gt;SecurityControlArn&lt;/code&gt;, or a mix of both parameters) that you want to determine the enablement status of in each enabled standard. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SecurityControlId")
    public String securityControlId;
    public ListStandardsControlAssociationsQueryParams withSecurityControlId(String securityControlId) {
        this.securityControlId = securityControlId;
        return this;
    }
    
}
