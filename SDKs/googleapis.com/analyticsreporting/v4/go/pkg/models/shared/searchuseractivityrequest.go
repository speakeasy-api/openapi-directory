// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SearchUserActivityRequestActivityTypesEnum string

const (
	SearchUserActivityRequestActivityTypesEnumActivityTypeUnspecified SearchUserActivityRequestActivityTypesEnum = "ACTIVITY_TYPE_UNSPECIFIED"
	SearchUserActivityRequestActivityTypesEnumPageview                SearchUserActivityRequestActivityTypesEnum = "PAGEVIEW"
	SearchUserActivityRequestActivityTypesEnumScreenview              SearchUserActivityRequestActivityTypesEnum = "SCREENVIEW"
	SearchUserActivityRequestActivityTypesEnumGoal                    SearchUserActivityRequestActivityTypesEnum = "GOAL"
	SearchUserActivityRequestActivityTypesEnumEcommerce               SearchUserActivityRequestActivityTypesEnum = "ECOMMERCE"
	SearchUserActivityRequestActivityTypesEnumEvent                   SearchUserActivityRequestActivityTypesEnum = "EVENT"
)

func (e *SearchUserActivityRequestActivityTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVITY_TYPE_UNSPECIFIED":
		fallthrough
	case "PAGEVIEW":
		fallthrough
	case "SCREENVIEW":
		fallthrough
	case "GOAL":
		fallthrough
	case "ECOMMERCE":
		fallthrough
	case "EVENT":
		*e = SearchUserActivityRequestActivityTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchUserActivityRequestActivityTypesEnum: %s", s)
	}
}

// SearchUserActivityRequest - The request to fetch User Report from Reporting API `userActivity:get` call.
type SearchUserActivityRequest struct {
	// Set of all activity types being requested. Only acvities matching these types will be returned in the response. If empty, all activies will be returned.
	ActivityTypes []SearchUserActivityRequestActivityTypesEnum `json:"activityTypes,omitempty"`
	// A contiguous set of days: startDate, startDate + 1 day, ..., endDate. The start and end dates are specified in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) date format `YYYY-MM-DD`.
	DateRange *DateRange `json:"dateRange,omitempty"`
	// Page size is for paging and specifies the maximum number of returned rows. Page size should be > 0. If the value is 0 or if the field isn't specified, the request returns the default of 1000 rows per page.
	PageSize *int `json:"pageSize,omitempty"`
	// A continuation token to get the next page of the results. Adding this to the request will return the rows after the pageToken. The pageToken should be the value returned in the nextPageToken parameter in the response to the [SearchUserActivityRequest](#SearchUserActivityRequest) request.
	PageToken *string `json:"pageToken,omitempty"`
	// Contains information to identify a particular user uniquely.
	User *User `json:"user,omitempty"`
	// Required. The Analytics [view ID](https://support.google.com/analytics/answer/1009618) from which to retrieve data. Every [SearchUserActivityRequest](#SearchUserActivityRequest) must contain the `viewId`.
	ViewID *string `json:"viewId,omitempty"`
}
