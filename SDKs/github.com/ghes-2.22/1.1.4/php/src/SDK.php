<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - GitHub's v3 REST API.
 * 
 * https://docs.github.com/enterprise-server@2.22/rest/ - GitHub Enterprise Developer Docs
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 * @see https://docs.github.com/enterprise-server@2.22/rest/
 */
class SDK
{
	public const SERVERS = [
		'https://{protocol}://{hostname}/api/v3',
	];
  	
    /**
     * Endpoints to manage GitHub Actions using the REST API.
     * 
     * @var Actions $$actions
     */
	public Actions $actions;
	
    /**
     * Activity APIs provide access to notifications, subscriptions, and timelines.
     * 
     * @var Activity $$activity
     */
	public Activity $activity;
	
    /**
     * Information for integrations and installations.
     * 
     * @var Apps $$apps
     */
	public Apps $apps;
	
    /**
     * Rich interactions with checks run by your integrations.
     * 
     * @var Checks $$checks
     */
	public Checks $checks;
	
    /**
     * Retrieve code scanning alerts from a repository.
     * 
     * @var CodeScanning $$codeScanning
     */
	public CodeScanning $codeScanning;
	
    /**
     * Insight into codes of conduct for your communities.
     * 
     * @var CodesOfConduct $$codesOfConduct
     */
	public CodesOfConduct $codesOfConduct;
	
    /**
     * List emojis available to use on GitHub.
     * 
     * @var Emojis $$emojis
     */
	public Emojis $emojis;
	
    /**
     * Administer a GitHub enterprise.
     * 
     * @var EnterpriseAdmin $$enterpriseAdmin
     */
	public EnterpriseAdmin $enterpriseAdmin;
	
    /**
     * View, modify your gists.
     * 
     * @var Gists $$gists
     */
	public Gists $gists;
	
    /**
     * Raw Git functionality.
     * 
     * @var Git $$git
     */
	public Git $git;
	
    /**
     * View gitignore templates
     * 
     * @var Gitignore $$gitignore
     */
	public Gitignore $gitignore;
	
    /**
     * Interact with GitHub Issues.
     * 
     * @var Issues $$issues
     */
	public Issues $issues;
	
    /**
     * View various OSS licenses.
     * 
     * @var Licenses $$licenses
     */
	public Licenses $licenses;
	
    /**
     * Render Github flavored markdown
     * 
     * @var Markdown $$markdown
     */
	public Markdown $markdown;
	
    /**
     * Endpoints that give information about the API.
     * 
     * @var Meta $$meta
     */
	public Meta $meta;
	
    /**
     * Manage access of OAuth applications
     * 
     * @var OauthAuthorizations $$oauthAuthorizations
     */
	public OauthAuthorizations $oauthAuthorizations;
	
    /**
     * Interact with GitHub Orgs.
     * 
     * @var Orgs $$orgs
     */
	public Orgs $orgs;
	
    /**
     * Interact with GitHub Projects.
     * 
     * @var Projects $$projects
     */
	public Projects $projects;
	
    /**
     * Interact with GitHub Pull Requests.
     * 
     * @var Pulls $$pulls
     */
	public Pulls $pulls;
	
    /**
     * Check your current rate limit status
     * 
     * @var RateLimit $$rateLimit
     */
	public RateLimit $rateLimit;
	
    /**
     * Interact with reactions to various GitHub entities.
     * 
     * @var Reactions $$reactions
     */
	public Reactions $reactions;
	
    /**
     * Interact with GitHub Repos.
     * 
     * @var Repos $$repos
     */
	public Repos $repos;
	
    /**
     * Look for stuff on GitHub.
     * 
     * @var Search $$search
     */
	public Search $search;
	
    /**
     * Interact with GitHub Teams.
     * 
     * @var Teams $$teams
     */
	public Teams $teams;
	
    /**
     * Interact with and view information about users and also current user.
     * 
     * @var Users $$users
     */
	public Users $users;
		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
		
		$this->actions = new Actions(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->activity = new Activity(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->apps = new Apps(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->checks = new Checks(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->codeScanning = new CodeScanning(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->codesOfConduct = new CodesOfConduct(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->emojis = new Emojis(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->enterpriseAdmin = new EnterpriseAdmin(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->gists = new Gists(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->git = new Git(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->gitignore = new Gitignore(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->issues = new Issues(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->licenses = new Licenses(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->markdown = new Markdown(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->meta = new Meta(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->oauthAuthorizations = new OauthAuthorizations(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->orgs = new Orgs(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->projects = new Projects(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->pulls = new Pulls(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->rateLimit = new RateLimit(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->reactions = new Reactions(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->repos = new Repos(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->search = new Search(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->teams = new Teams(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->users = new Users(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
	}
}