/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JobReleaseTask - A Job Release task to run on job completion on any compute node where the job has run.
 */
public class JobReleaseTask {
    /**
     * Gets or sets the command line of the Job Release task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commandLine")
    public String commandLine;
    public JobReleaseTask withCommandLine(String commandLine) {
        this.commandLine = commandLine;
        return this;
    }
    
    /**
     * Gets or sets a list of environment variable settings for the Job Release task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environmentSettings")
    public EnvironmentSetting[] environmentSettings;
    public JobReleaseTask withEnvironmentSettings(EnvironmentSetting[] environmentSettings) {
        this.environmentSettings = environmentSettings;
        return this;
    }
    
    /**
     * Gets or sets a string that uniquely identifies the Job Release task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public JobReleaseTask withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets or sets the maximum elapsed time that the Job Release task may run on a given compute node, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxWallClockTime")
    public String maxWallClockTime;
    public JobReleaseTask withMaxWallClockTime(String maxWallClockTime) {
        this.maxWallClockTime = maxWallClockTime;
        return this;
    }
    
    /**
     * Gets or sets a list of files that Batch will download to the compute node before running the command line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceFiles")
    public ResourceFile[] resourceFiles;
    public JobReleaseTask withResourceFiles(ResourceFile[] resourceFiles) {
        this.resourceFiles = resourceFiles;
        return this;
    }
    
    /**
     * Gets or sets the minimum time to retain the working directory for the Job Release task on the compute node.  After this time, the Batch service may delete the working directory and all its contents. The default is infinite.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retentionTime")
    public String retentionTime;
    public JobReleaseTask withRetentionTime(String retentionTime) {
        this.retentionTime = retentionTime;
        return this;
    }
    
    /**
     * Gets or sets whether to run the Job Release task in elevated mode. The default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runElevated")
    public Boolean runElevated;
    public JobReleaseTask withRunElevated(Boolean runElevated) {
        this.runElevated = runElevated;
        return this;
    }
    
}
