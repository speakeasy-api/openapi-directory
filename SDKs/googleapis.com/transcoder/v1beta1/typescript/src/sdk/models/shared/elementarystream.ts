/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AudioStream } from "./audiostream";
import { TextStream } from "./textstream";
import { VideoStream } from "./videostream";
import { Expose, Type } from "class-transformer";

/**
 * Encoding of an input file such as an audio, video, or text track. Elementary streams must be packaged before mapping and sharing between different output formats.
 */
export class ElementaryStream extends SpeakeasyBase {
  /**
   * Audio stream resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audioStream" })
  @Type(() => AudioStream)
  audioStream?: AudioStream;

  /**
   * A unique key for this elementary stream.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * Encoding of a text stream. For example, closed captions or subtitles.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textStream" })
  @Type(() => TextStream)
  textStream?: TextStream;

  /**
   * Video stream resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videoStream" })
  @Type(() => VideoStream)
  videoStream?: VideoStream;
}
