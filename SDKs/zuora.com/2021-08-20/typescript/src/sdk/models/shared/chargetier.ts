/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Specifies whether the tier has a fixed price or a per-unit price.
 *
 * @remarks
 *
 */
export enum ChargeTierPriceFormatEnum {
  FlatFee = "FlatFee",
  PerUnit = "PerUnit",
}

export class ChargeTier extends SpeakeasyBase {
  /**
   * Limit on the number of units for which the tier is effective.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endingUnit" })
  endingUnit?: number;

  /**
   * Price or per-unit price of the tier, depending on the value of the `priceFormat` field.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price: number;

  /**
   * Specifies whether the tier has a fixed price or a per-unit price.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceFormat" })
  priceFormat: ChargeTierPriceFormatEnum;

  /**
   * Number of units at which the tier becomes effective.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startingUnit" })
  startingUnit: number;

  /**
   * Index of the tier in the charge.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tier" })
  tier: number;
}
