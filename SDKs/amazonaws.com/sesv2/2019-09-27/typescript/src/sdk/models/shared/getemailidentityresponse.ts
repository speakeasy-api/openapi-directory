/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DkimAttributes } from "./dkimattributes";
import { IdentityTypeEnum } from "./identitytypeenum";
import { MailFromAttributes } from "./mailfromattributes";
import { Tag } from "./tag";
import { VerificationStatusEnum } from "./verificationstatusenum";
import { Expose, Type } from "class-transformer";

/**
 * Details about an email identity.
 */
export class GetEmailIdentityResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ConfigurationSetName" })
  configurationSetName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DkimAttributes" })
  @Type(() => DkimAttributes)
  dkimAttributes?: DkimAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "FeedbackForwardingStatus" })
  feedbackForwardingStatus?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IdentityType" })
  identityType?: IdentityTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MailFromAttributes" })
  @Type(() => MailFromAttributes)
  mailFromAttributes?: MailFromAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "Policies" })
  policies?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "VerificationStatus" })
  verificationStatus?: VerificationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "VerifiedForSendingStatus" })
  verifiedForSendingStatus?: boolean;
}
