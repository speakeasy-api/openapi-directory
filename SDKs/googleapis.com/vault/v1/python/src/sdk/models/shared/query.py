"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountinfo as shared_accountinfo
from ..shared import driveoptions as shared_driveoptions
from ..shared import hangoutschatinfo as shared_hangoutschatinfo
from ..shared import hangoutschatoptions as shared_hangoutschatoptions
from ..shared import mailoptions as shared_mailoptions
from ..shared import orgunitinfo as shared_orgunitinfo
from ..shared import shareddriveinfo as shared_shareddriveinfo
from ..shared import sitesurlinfo as shared_sitesurlinfo
from ..shared import teamdriveinfo as shared_teamdriveinfo
from ..shared import voiceoptions as shared_voiceoptions
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class QueryCorpusEnum(str, Enum):
    r"""The Google Workspace service to search."""
    CORPUS_TYPE_UNSPECIFIED = 'CORPUS_TYPE_UNSPECIFIED'
    DRIVE = 'DRIVE'
    MAIL = 'MAIL'
    GROUPS = 'GROUPS'
    HANGOUTS_CHAT = 'HANGOUTS_CHAT'
    VOICE = 'VOICE'

class QueryDataScopeEnum(str, Enum):
    r"""The data source to search."""
    DATA_SCOPE_UNSPECIFIED = 'DATA_SCOPE_UNSPECIFIED'
    ALL_DATA = 'ALL_DATA'
    HELD_DATA = 'HELD_DATA'
    UNPROCESSED_DATA = 'UNPROCESSED_DATA'

class QueryMethodEnum(str, Enum):
    r"""The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**."""
    SEARCH_METHOD_UNSPECIFIED = 'SEARCH_METHOD_UNSPECIFIED'
    ACCOUNT = 'ACCOUNT'
    ORG_UNIT = 'ORG_UNIT'
    TEAM_DRIVE = 'TEAM_DRIVE'
    ENTIRE_ORG = 'ENTIRE_ORG'
    ROOM = 'ROOM'
    SITES_URL = 'SITES_URL'
    SHARED_DRIVE = 'SHARED_DRIVE'

class QuerySearchMethodEnum(str, Enum):
    r"""The search method to use."""
    SEARCH_METHOD_UNSPECIFIED = 'SEARCH_METHOD_UNSPECIFIED'
    ACCOUNT = 'ACCOUNT'
    ORG_UNIT = 'ORG_UNIT'
    TEAM_DRIVE = 'TEAM_DRIVE'
    ENTIRE_ORG = 'ENTIRE_ORG'
    ROOM = 'ROOM'
    SITES_URL = 'SITES_URL'
    SHARED_DRIVE = 'SHARED_DRIVE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Query:
    r"""The query definition used for search and export."""
    
    account_info: Optional[shared_accountinfo.AccountInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountInfo'), 'exclude': lambda f: f is None }})
    r"""The accounts to search"""  
    corpus: Optional[QueryCorpusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('corpus'), 'exclude': lambda f: f is None }})
    r"""The Google Workspace service to search."""  
    data_scope: Optional[QueryDataScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataScope'), 'exclude': lambda f: f is None }})
    r"""The data source to search."""  
    drive_options: Optional[shared_driveoptions.DriveOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driveOptions'), 'exclude': lambda f: f is None }})
    r"""Additional options for Drive search"""  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""The end time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date."""  
    hangouts_chat_info: Optional[shared_hangoutschatinfo.HangoutsChatInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hangoutsChatInfo'), 'exclude': lambda f: f is None }})
    r"""The Chat spaces to search"""  
    hangouts_chat_options: Optional[shared_hangoutschatoptions.HangoutsChatOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hangoutsChatOptions'), 'exclude': lambda f: f is None }})
    r"""Additional options for Google Chat search"""  
    mail_options: Optional[shared_mailoptions.MailOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mailOptions'), 'exclude': lambda f: f is None }})
    r"""Additional options for Gmail search"""  
    method: Optional[QueryMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**."""  
    org_unit_info: Optional[shared_orgunitinfo.OrgUnitInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orgUnitInfo'), 'exclude': lambda f: f is None }})
    r"""The organizational unit to search"""  
    search_method: Optional[QuerySearchMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('searchMethod'), 'exclude': lambda f: f is None }})
    r"""The search method to use."""  
    shared_drive_info: Optional[shared_shareddriveinfo.SharedDriveInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sharedDriveInfo'), 'exclude': lambda f: f is None }})
    r"""The shared drives to search"""  
    sites_url_info: Optional[shared_sitesurlinfo.SitesURLInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sitesUrlInfo'), 'exclude': lambda f: f is None }})
    r"""The published site URLs of new Google Sites to search"""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""The start time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date."""  
    team_drive_info: Optional[shared_teamdriveinfo.TeamDriveInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('teamDriveInfo'), 'exclude': lambda f: f is None }})
    r"""Team Drives to search"""  
    terms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('terms'), 'exclude': lambda f: f is None }})
    r"""Service-specific [search operators](https://support.google.com/vault/answer/2474474) to filter search results."""  
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeZone'), 'exclude': lambda f: f is None }})
    r"""The time zone name. It should be an IANA TZ name, such as \\"America/Los_Angeles\\". For a list of time zone names, see [Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For more information about how Vault uses time zones, see [the Vault help center](https://support.google.com/vault/answer/6092995#time)."""  
    voice_options: Optional[shared_voiceoptions.VoiceOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voiceOptions'), 'exclude': lambda f: f is None }})
    r"""Additional options for Voice search"""  
    