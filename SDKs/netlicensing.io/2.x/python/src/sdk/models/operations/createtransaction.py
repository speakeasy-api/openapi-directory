"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import netlicensing as shared_netlicensing
from datetime import datetime
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class CreateTransactionSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class CreateTransactionRequestBodySourceEnum(str, Enum):
    r"""AUTO Transaction for internal use only"""
    SHOP = 'SHOP'

class CreateTransactionRequestBodyStatusEnum(str, Enum):
    CANCELLED = 'CANCELLED'
    CLOSED = 'CLOSED'
    PENDING = 'PENDING'


@dataclasses.dataclass
class CreateTransactionRequestBody:
    
    active: bool = dataclasses.field(metadata={'form': { 'field_name': 'active' }})
    r"""Always 'true' for Transactions"""  
    source: CreateTransactionRequestBodySourceEnum = dataclasses.field(metadata={'form': { 'field_name': 'source' }})
    r"""AUTO Transaction for internal use only"""  
    status: CreateTransactionRequestBodyStatusEnum = dataclasses.field(metadata={'form': { 'field_name': 'status' }})  
    date_closed: Optional[datetime] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dateClosed' }})  
    date_created: Optional[datetime] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dateCreated' }})  
    licensee_number: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'licenseeNumber' }})  
    number: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'number' }})
    r"""Unique number (across all Products of a Vendor) that identifies the Transaction"""  
    payment_method: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'paymentMethod' }})  
    

@dataclasses.dataclass
class CreateTransactionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    netlicensing: Optional[shared_netlicensing.Netlicensing] = dataclasses.field(default=None)
    r"""Successful request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    