// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RateAdjustmentTypeEnum - The adjustment type.
type RateAdjustmentTypeEnum string

const (
	RateAdjustmentTypeEnumPercentage RateAdjustmentTypeEnum = "PERCENTAGE"
)

func (e *RateAdjustmentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PERCENTAGE":
		*e = RateAdjustmentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RateAdjustmentTypeEnum: %s", s)
	}
}

type RateAdjustment struct {
	// Unique identifier of this rate adjustment.
	AdjustmentID *string `json:"adjustmentId,omitempty"`
	// The percentage discount between 0 and 100.
	Amount float64 `json:"amount"`
	// A list of conditions for the adjustment to apply.
	Conditions []AdjustmentConditions `json:"conditions"`
	// The adjustment type.
	Type RateAdjustmentTypeEnum `json:"type"`
}
