"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errorresponse as shared_errorresponse
from ..shared import pagedeliveryreport as shared_pagedeliveryreport
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetDeliveryReportsSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class GetDeliveryReportsDeliveryCategoryEnum(str, Enum):
    r"""~"""
    NO_DATA = 'NO_DATA'
    OPTED_OUT = 'OPTED_OUT'
    BOUNCED = 'BOUNCED'
    NO_CREDITS = 'NO_CREDITS'
    DELIVERED = 'DELIVERED'

class GetDeliveryReportsDeliveryStateEnum(str, Enum):
    r"""~"""
    DELIVERED = 'DELIVERED'
    UNSENT_OPTED_OUT_GLOBAL = 'UNSENT_OPTED_OUT_GLOBAL'
    UNSENT_OPTED_OUT_LOCAL = 'UNSENT_OPTED_OUT_LOCAL'
    UNSENT_NO_CREDITS = 'UNSENT_NO_CREDITS'
    GATEWAY_REJECTED = 'GATEWAY_REJECTED'
    CARRIER_REJECTED = 'CARRIER_REJECTED'
    NOT_DELIVERED = 'NOT_DELIVERED'
    UNSENT_INVALID_NUMBER = 'UNSENT_INVALID_NUMBER'
    UNSENT_BAD_DATA = 'UNSENT_BAD_DATA'
    UNSENT_FORCE_STOPPED = 'UNSENT_FORCE_STOPPED'
    UNSENT_PERIOD_LIMIT = 'UNSENT_PERIOD_LIMIT'
    UNSENT_INTERNATIONAL = 'UNSENT_INTERNATIONAL'
    UNSENT_INVALID_TIMEZONE_OR_DNC = 'UNSENT_INVALID_TIMEZONE_OR_DNC'
    UNSENT_ALREADY_SCRUBBED = 'UNSENT_ALREADY_SCRUBBED'
    UNSENT_SYSTEM_ERROR = 'UNSENT_SYSTEM_ERROR'
    UNSENT_NO_WIRELESS_CARRIER = 'UNSENT_NO_WIRELESS_CARRIER'
    UNSENT_MESSAGE_TOO_LONG = 'UNSENT_MESSAGE_TOO_LONG'
    UNSENT_MESSAGE_BLOCKED = 'UNSENT_MESSAGE_BLOCKED'
    UNSENT_QUEUE_LIMIT_REACHED = 'UNSENT_QUEUE_LIMIT_REACHED'
    UNSENT_TOKEN_LIMIT_REACHED = 'UNSENT_TOKEN_LIMIT_REACHED'
    UNSENT_TIME_LIMIT_REACHED = 'UNSENT_TIME_LIMIT_REACHED'
    UNSENT_SCHEDULER_CAPACITY_EXCEEDED = 'UNSENT_SCHEDULER_CAPACITY_EXCEEDED'
    SPAM_DETECTED = 'SPAM_DETECTED'
    UNSENT_NO_GATEWAY = 'UNSENT_NO_GATEWAY'
    UNSENT_DAILY_LIMIT_REACHED = 'UNSENT_DAILY_LIMIT_REACHED'
    ORIGINATED = 'ORIGINATED'
    SUBMITTED = 'SUBMITTED'
    FORWARDED = 'FORWARDED'
    NOT_GIVEN = 'NOT_GIVEN'
    UNKNOWN = 'UNKNOWN'
    RETRY_MMS_AS_SMS = 'RETRY_MMS_AS_SMS'
    QUEUED = 'QUEUED'
    QUEUED_TRANSCODE = 'QUEUED_TRANSCODE'
    ORIGINAL = 'ORIGINAL'
    DUPE = 'DUPE'
    TRUNCATED = 'TRUNCATED'
    REQUEUED_RATE_LIMITED = 'REQUEUED_RATE_LIMITED'
    BUFFERED = 'BUFFERED'
    RATE_LIMIT_EXCEEDED = 'RATE_LIMIT_EXCEEDED'
    SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE'
    SEND_MMS_AS_SMS = 'SEND_MMS_AS_SMS'
    REQUEUED_RECOVERABLE_ERROR = 'REQUEUED_RECOVERABLE_ERROR'
    SEND_WITH_ADDITIONAL_SPID = 'SEND_WITH_ADDITIONAL_SPID'
    UNSENT_FREE_TRIAL = 'UNSENT_FREE_TRIAL'


@dataclasses.dataclass
class GetDeliveryReportsRequest:
    
    campaign_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'campaignId', 'style': 'form', 'explode': True }})
    r"""~"""  
    carrier: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'carrier', 'style': 'form', 'explode': True }})
    r"""~"""  
    delivery_category: Optional[GetDeliveryReportsDeliveryCategoryEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'deliveryCategory', 'style': 'form', 'explode': True }})
    r"""~"""  
    delivery_state: Optional[GetDeliveryReportsDeliveryStateEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'deliveryState', 'style': 'form', 'explode': True }})
    r"""~"""  
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'endDate', 'style': 'form', 'explode': True }})
    r"""~"""  
    from_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fromNumber', 'style': 'form', 'explode': True }})
    r"""~"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""To set the maximum number of records to return in a paged list response. The default is 100"""  
    message_text: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'messageText', 'style': 'form', 'explode': True }})
    r"""~"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API."""  
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'startDate', 'style': 'form', 'explode': True }})
    r"""~"""  
    to_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'toNumber', 'style': 'form', 'explode': True }})
    r"""~"""  
    

@dataclasses.dataclass
class GetDeliveryReportsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Bad request"""  
    page_delivery_report: Optional[shared_pagedeliveryreport.PageDeliveryReport] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    