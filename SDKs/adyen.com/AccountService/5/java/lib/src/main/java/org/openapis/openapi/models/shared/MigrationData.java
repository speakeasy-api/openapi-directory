/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class MigrationData {
    /**
     * The unique identifier of the account holder in the balance platform.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountHolderId")
    public String accountHolderId;

    public MigrationData withAccountHolderId(String accountHolderId) {
        this.accountHolderId = accountHolderId;
        return this;
    }
    
    /**
     * The unique identifier of the balance platfrom to which the account holder was migrated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balancePlatform")
    public String balancePlatform;

    public MigrationData withBalancePlatform(String balancePlatform) {
        this.balancePlatform = balancePlatform;
        return this;
    }
    
    /**
     * Set to **true** if the account holder has been migrated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("migrated")
    public Boolean migrated;

    public MigrationData withMigrated(Boolean migrated) {
        this.migrated = migrated;
        return this;
    }
    
    /**
     * Contains the mapping of virtual account codes (classic integration) to the balance account codes (balance platform) associated with the migrated account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("migratedAccounts")
    public MigratedAccounts[] migratedAccounts;

    public MigrationData withMigratedAccounts(MigratedAccounts[] migratedAccounts) {
        this.migratedAccounts = migratedAccounts;
        return this;
    }
    
    /**
     * Contains the mapping of business lines and stores associated with the migrated account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("migratedStores")
    public MigratedStores[] migratedStores;

    public MigrationData withMigratedStores(MigratedStores[] migratedStores) {
        this.migratedStores = migratedStores;
        return this;
    }
    
    /**
     * The date when account holder was migrated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("migrationDate")
    public OffsetDateTime migrationDate;

    public MigrationData withMigrationDate(OffsetDateTime migrationDate) {
        this.migrationDate = migrationDate;
        return this;
    }
    
    public MigrationData(){}
}
