/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TokenRefreshRequest - The token to refresh.
 */
public class TokenRefreshRequest {
    /**
     * If you specify a cookie type then a content filter cookie will be returned
     * along with the token(s). This is only intended for web based clients which
     * need to pass the cookies to a server to render a page based on the user's
     * content filters e.g subscription code.
     * 
     * If type `Session` the cookie will be session based.
     * If type `Persistent` the cookie will have a medium term lifespan.
     * If undefined no cookies will be set.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cookieType")
    public TokenRefreshRequestCookieTypeEnum cookieType;

    public TokenRefreshRequest withCookieType(TokenRefreshRequestCookieTypeEnum cookieType) {
        this.cookieType = cookieType;
        return this;
    }
    
    /**
     * The token to refresh.
     */
    @JsonProperty("token")
    public String token;

    public TokenRefreshRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    public TokenRefreshRequest(@JsonProperty("token") String token) {
        this.token = token;
  }
}
