"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import nawelcomeface as shared_nawelcomeface
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NAWelcomePerson:
    
    face: Optional[shared_nawelcomeface.NAWelcomeFace] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('face'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Id of the person."""  
    last_seen: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_seen'), 'exclude': lambda f: f is None }})
    r"""Time at which the person was last seen."""  
    out_of_sight: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('out_of_sight'), 'exclude': lambda f: f is None }})
    r"""True if the Person is out of sight."""  
    pseudo: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pseudo'), 'exclude': lambda f: f is None }})
    r"""Name of the person, if pseudo is missing, person is unknown."""  
    