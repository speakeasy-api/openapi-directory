"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import paginationcoverage as shared_paginationcoverage
from ..shared import resourcestatus_enum as shared_resourcestatus_enum
from ..shared import supportedproperty as shared_supportedproperty
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIResourceCoverageCoverage:
    
    downstream_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('downstream_id'), 'exclude': lambda f: f is None }})
    r"""ID of the resource in the Connector's API (downstream)"""  
    downstream_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('downstream_name'), 'exclude': lambda f: f is None }})
    r"""Name of the resource in the Connector's API (downstream)"""  
    pagination: Optional[shared_paginationcoverage.PaginationCoverage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pagination'), 'exclude': lambda f: f is None }})  
    pagination_supported: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pagination_supported'), 'exclude': lambda f: f is None }})
    r"""Indicates if pagination (cursor and limit parameters) is supported on the list endpoint of the resource."""  
    supported_fields: Optional[list[shared_supportedproperty.SupportedProperty]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supported_fields'), 'exclude': lambda f: f is None }})
    r"""Supported fields on the detail endpoint."""  
    supported_filters: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supported_filters'), 'exclude': lambda f: f is None }})
    r"""Supported filters on the list endpoint of the resource."""  
    supported_list_fields: Optional[list[shared_supportedproperty.SupportedProperty]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supported_list_fields'), 'exclude': lambda f: f is None }})
    r"""Supported fields on the list endpoint."""  
    supported_operations: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supported_operations'), 'exclude': lambda f: f is None }})
    r"""List of supported operations on the resource."""  
    supported_sort_by: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supported_sort_by'), 'exclude': lambda f: f is None }})
    r"""Supported sorting properties on the list endpoint of the resource."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIResourceCoverage:
    
    coverage: Optional[list[APIResourceCoverageCoverage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('coverage'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID of the resource, typically a lowercased version of name."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the resource (plural)"""  
    status: Optional[shared_resourcestatus_enum.ResourceStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the resource. Resources with status live or beta are callable."""  
    