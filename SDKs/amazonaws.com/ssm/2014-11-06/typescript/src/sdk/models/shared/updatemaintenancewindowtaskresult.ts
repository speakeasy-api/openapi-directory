/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { AlarmConfiguration } from "./alarmconfiguration";
import { LoggingInfo } from "./logginginfo";
import { MaintenanceWindowTaskCutoffBehaviorEnum } from "./maintenancewindowtaskcutoffbehaviorenum";
import { MaintenanceWindowTaskInvocationParameters } from "./maintenancewindowtaskinvocationparameters";
import { MaintenanceWindowTaskParameterValueExpression } from "./maintenancewindowtaskparametervalueexpression";
import { Target } from "./target";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class UpdateMaintenanceWindowTaskResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AlarmConfiguration" })
  @Type(() => AlarmConfiguration)
  alarmConfiguration?: AlarmConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "CutoffBehavior" })
  cutoffBehavior?: MaintenanceWindowTaskCutoffBehaviorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LoggingInfo" })
  @Type(() => LoggingInfo)
  loggingInfo?: LoggingInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxConcurrency" })
  maxConcurrency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxErrors" })
  maxErrors?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Priority" })
  priority?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceRoleArn" })
  serviceRoleArn?: string;

  @SpeakeasyMetadata({ elemType: Target })
  @Expose({ name: "Targets" })
  @Type(() => Target)
  targets?: Target[];

  @SpeakeasyMetadata()
  @Expose({ name: "TaskArn" })
  taskArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TaskInvocationParameters" })
  @Type(() => MaintenanceWindowTaskInvocationParameters)
  taskInvocationParameters?: MaintenanceWindowTaskInvocationParameters;

  @SpeakeasyMetadata({
    elemType: MaintenanceWindowTaskParameterValueExpression,
  })
  @Expose({ name: "TaskParameters" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, MaintenanceWindowTaskParameterValueExpression> =
        {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          MaintenanceWindowTaskParameterValueExpression
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  taskParameters?: Record<
    string,
    MaintenanceWindowTaskParameterValueExpression
  >;

  @SpeakeasyMetadata()
  @Expose({ name: "WindowId" })
  windowId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WindowTaskId" })
  windowTaskId?: string;
}
