"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import proactiveanomalysummary as shared_proactiveanomalysummary
from ..shared import reactiveanomalysummary as shared_reactiveanomalysummary
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListAnomaliesForInsightResponse:
    r"""Success"""
    
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})  
    proactive_anomalies: Optional[list[shared_proactiveanomalysummary.ProactiveAnomalySummary]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProactiveAnomalies'), 'exclude': lambda f: f is None }})  
    reactive_anomalies: Optional[list[shared_reactiveanomalysummary.ReactiveAnomalySummary]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReactiveAnomalies'), 'exclude': lambda f: f is None }})  
    