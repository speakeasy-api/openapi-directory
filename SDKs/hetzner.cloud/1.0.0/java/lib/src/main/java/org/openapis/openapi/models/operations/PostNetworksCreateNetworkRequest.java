/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostNetworksCreateNetworkRequest {
    /**
     * IP range of the whole network which must span all included subnets. Must be one of the private IPv4 ranges of RFC1918. Minimum network size is /24. We highly recommend that you pick a larger network with a /16 netmask.
     */
    @JsonProperty("ip_range")
    public String ipRange;

    public PostNetworksCreateNetworkRequest withIpRange(String ipRange) {
        this.ipRange = ipRange;
        return this;
    }
    
    /**
     * User-defined labels (key-value pairs)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public PostNetworksCreateNetworkRequestLabels labels;

    public PostNetworksCreateNetworkRequest withLabels(PostNetworksCreateNetworkRequestLabels labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Name of the network
     */
    @JsonProperty("name")
    public String name;

    public PostNetworksCreateNetworkRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Array of routes set in this network. The destination of the route must be one of the private IPv4 ranges of RFC1918. The gateway must be a subnet/IP of the ip_range of the network object. The destination must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. The gateway cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("routes")
    public PostNetworksCreateNetworkRequestRoutes[] routes;

    public PostNetworksCreateNetworkRequest withRoutes(PostNetworksCreateNetworkRequestRoutes[] routes) {
        this.routes = routes;
        return this;
    }
    
    /**
     * Array of subnets allocated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnets")
    public PostNetworksCreateNetworkRequestSubnets[] subnets;

    public PostNetworksCreateNetworkRequest withSubnets(PostNetworksCreateNetworkRequestSubnets[] subnets) {
        this.subnets = subnets;
        return this;
    }
    
    public PostNetworksCreateNetworkRequest(@JsonProperty("ip_range") String ipRange, @JsonProperty("name") String name) {
        this.ipRange = ipRange;
        this.name = name;
  }
}
