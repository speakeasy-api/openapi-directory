<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UpgradeStatus - UpgradeStatus contains information about upgradeAppliance operation.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UpgradeStatus
{
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Status $error
     */
	#[\JMS\Serializer\Annotation\SerializedName('error')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Status')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Status $error = null;
    
    /**
     * The version from which we upgraded.
     * 
     * @var ?string $previousVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('previousVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $previousVersion = null;
    
    /**
     * The time the operation was started.
     * 
     * @var ?string $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTime = null;
    
    /**
     * The state of the upgradeAppliance operation.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UpgradeStatusStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UpgradeStatusStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpgradeStatusStateEnum $state = null;
    
    /**
     * The version to upgrade to.
     * 
     * @var ?string $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $version = null;
    
	public function __construct()
	{
		$this->error = null;
		$this->previousVersion = null;
		$this->startTime = null;
		$this->state = null;
		$this->version = null;
	}
}
