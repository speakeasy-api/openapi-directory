/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GetUsersUserTypeEnum {
  Vendor = "vendor",
  All = "all",
}

export class GetUsersRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
  email?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=user_type",
  })
  userType?: GetUsersUserTypeEnum;
}

export class GetUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * User list
   */
  @SpeakeasyMetadata()
  userList?: shared.UserList;
}
