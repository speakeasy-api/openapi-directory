// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// TagAPIGetCategoryNamesListNameMatchModeEnum
type TagAPIGetCategoryNamesListNameMatchModeEnum string

const (
	TagAPIGetCategoryNamesListNameMatchModeEnumAuto       TagAPIGetCategoryNamesListNameMatchModeEnum = "Auto"
	TagAPIGetCategoryNamesListNameMatchModeEnumPartial    TagAPIGetCategoryNamesListNameMatchModeEnum = "Partial"
	TagAPIGetCategoryNamesListNameMatchModeEnumStartsWith TagAPIGetCategoryNamesListNameMatchModeEnum = "StartsWith"
	TagAPIGetCategoryNamesListNameMatchModeEnumExact      TagAPIGetCategoryNamesListNameMatchModeEnum = "Exact"
	TagAPIGetCategoryNamesListNameMatchModeEnumWords      TagAPIGetCategoryNamesListNameMatchModeEnum = "Words"
)

func (e *TagAPIGetCategoryNamesListNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = TagAPIGetCategoryNamesListNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagAPIGetCategoryNamesListNameMatchModeEnum: %s", s)
	}
}

type TagAPIGetCategoryNamesListQueryParams struct {
	NameMatchMode *TagAPIGetCategoryNamesListNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	Query         *string                                      `queryParam:"style=form,explode=true,name=query"`
}

type TagAPIGetCategoryNamesListRequest struct {
	QueryParams TagAPIGetCategoryNamesListQueryParams
}

type TagAPIGetCategoryNamesListResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TagAPIGetCategoryNamesList200ApplicationJSONStrings []string
	// OK
	TagAPIGetCategoryNamesList200ApplicationJsonpStrings []string
	// OK
	TagAPIGetCategoryNamesList200TextJSONStrings []string
}
