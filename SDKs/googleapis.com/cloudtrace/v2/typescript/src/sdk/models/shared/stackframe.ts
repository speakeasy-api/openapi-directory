/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Module } from "./module";
import { TruncatableString } from "./truncatablestring";
import { Expose, Type } from "class-transformer";

/**
 * Represents a single stack frame in a stack trace.
 */
export class StackFrame extends SpeakeasyBase {
  /**
   * The column number where the function call appears, if available. This is important in JavaScript because of its anonymous functions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "columnNumber" })
  columnNumber?: string;

  /**
   * Represents a string that might be shortened to a specified length.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileName" })
  @Type(() => TruncatableString)
  fileName?: TruncatableString;

  /**
   * Represents a string that might be shortened to a specified length.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "functionName" })
  @Type(() => TruncatableString)
  functionName?: TruncatableString;

  /**
   * The line number in `file_name` where the function call appears.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lineNumber" })
  lineNumber?: string;

  /**
   * Binary module.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "loadModule" })
  @Type(() => Module)
  loadModule?: Module;

  /**
   * Represents a string that might be shortened to a specified length.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originalFunctionName" })
  @Type(() => TruncatableString)
  originalFunctionName?: TruncatableString;

  /**
   * Represents a string that might be shortened to a specified length.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceVersion" })
  @Type(() => TruncatableString)
  sourceVersion?: TruncatableString;
}
