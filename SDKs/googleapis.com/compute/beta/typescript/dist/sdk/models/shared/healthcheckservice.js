"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HealthCheckService = exports.HealthCheckServiceHealthStatusAggregationStrategyEnum = exports.HealthCheckServiceHealthStatusAggregationPolicyEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Optional. Policy for how the results from multiple health checks for the same endpoint are aggregated. Defaults to NO_AGGREGATION if unspecified. - NO_AGGREGATION. An EndpointHealth message is returned for each pair in the health check service. - AND. If any health check of an endpoint reports UNHEALTHY, then UNHEALTHY is the HealthState of the endpoint. If all health checks report HEALTHY, the HealthState of the endpoint is HEALTHY. . This is only allowed with regional HealthCheckService.
 */
var HealthCheckServiceHealthStatusAggregationPolicyEnum;
(function (HealthCheckServiceHealthStatusAggregationPolicyEnum) {
    HealthCheckServiceHealthStatusAggregationPolicyEnum["And"] = "AND";
    HealthCheckServiceHealthStatusAggregationPolicyEnum["NoAggregation"] = "NO_AGGREGATION";
})(HealthCheckServiceHealthStatusAggregationPolicyEnum = exports.HealthCheckServiceHealthStatusAggregationPolicyEnum || (exports.HealthCheckServiceHealthStatusAggregationPolicyEnum = {}));
/**
 * This field is deprecated. Use health_status_aggregation_policy instead. Policy for how the results from multiple health checks for the same endpoint are aggregated. - NO_AGGREGATION. An EndpointHealth message is returned for each backend in the health check service. - AND. If any backend's health check reports UNHEALTHY, then UNHEALTHY is the HealthState of the entire health check service. If all backend's are healthy, the HealthState of the health check service is HEALTHY. .
 */
var HealthCheckServiceHealthStatusAggregationStrategyEnum;
(function (HealthCheckServiceHealthStatusAggregationStrategyEnum) {
    HealthCheckServiceHealthStatusAggregationStrategyEnum["And"] = "AND";
    HealthCheckServiceHealthStatusAggregationStrategyEnum["NoAggregation"] = "NO_AGGREGATION";
})(HealthCheckServiceHealthStatusAggregationStrategyEnum = exports.HealthCheckServiceHealthStatusAggregationStrategyEnum || (exports.HealthCheckServiceHealthStatusAggregationStrategyEnum = {}));
/**
 * Represents a Health-Check as a Service resource.
 */
var HealthCheckService = /** @class */ (function (_super) {
    __extends(HealthCheckService, _super);
    function HealthCheckService() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], HealthCheckService.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], HealthCheckService.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fingerprint" }),
        __metadata("design:type", String)
    ], HealthCheckService.prototype, "fingerprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "healthChecks" }),
        __metadata("design:type", Array)
    ], HealthCheckService.prototype, "healthChecks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "healthStatusAggregationPolicy" }),
        __metadata("design:type", String)
    ], HealthCheckService.prototype, "healthStatusAggregationPolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "healthStatusAggregationStrategy" }),
        __metadata("design:type", String)
    ], HealthCheckService.prototype, "healthStatusAggregationStrategy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], HealthCheckService.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], HealthCheckService.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], HealthCheckService.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "networkEndpointGroups" }),
        __metadata("design:type", Array)
    ], HealthCheckService.prototype, "networkEndpointGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notificationEndpoints" }),
        __metadata("design:type", Array)
    ], HealthCheckService.prototype, "notificationEndpoints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "region" }),
        __metadata("design:type", String)
    ], HealthCheckService.prototype, "region", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], HealthCheckService.prototype, "selfLink", void 0);
    return HealthCheckService;
}(utils_1.SpeakeasyBase));
exports.HealthCheckService = HealthCheckService;
