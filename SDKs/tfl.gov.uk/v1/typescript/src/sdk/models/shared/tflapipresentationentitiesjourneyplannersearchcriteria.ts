/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TflApiPresentationEntitiesJourneyPlannerTimeAdjustments } from "./tflapipresentationentitiesjourneyplannertimeadjustments";
import { Expose, Transform, Type } from "class-transformer";

export enum TflApiPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum {
  Arriving = "Arriving",
  Departing = "Departing",
}

export class TflApiPresentationEntitiesJourneyPlannerSearchCriteria extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dateTimeType" })
  dateTimeType?: TflApiPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "timeAdjustments" })
  @Type(() => TflApiPresentationEntitiesJourneyPlannerTimeAdjustments)
  timeAdjustments?: TflApiPresentationEntitiesJourneyPlannerTimeAdjustments;
}
