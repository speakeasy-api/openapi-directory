// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateFileSystemFromBackupXAmzTargetEnum
type CreateFileSystemFromBackupXAmzTargetEnum string

const (
	CreateFileSystemFromBackupXAmzTargetEnumAwsSimbaAPIServiceV20180301CreateFileSystemFromBackup CreateFileSystemFromBackupXAmzTargetEnum = "AWSSimbaAPIService_v20180301.CreateFileSystemFromBackup"
)

func (e *CreateFileSystemFromBackupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSSimbaAPIService_v20180301.CreateFileSystemFromBackup":
		*e = CreateFileSystemFromBackupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateFileSystemFromBackupXAmzTargetEnum: %s", s)
	}
}

type CreateFileSystemFromBackupHeaders struct {
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateFileSystemFromBackupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateFileSystemFromBackupRequest struct {
	Headers CreateFileSystemFromBackupHeaders
	Request shared.CreateFileSystemFromBackupRequest `request:"mediaType=application/json"`
}

type CreateFileSystemFromBackupResponse struct {
	// ActiveDirectoryError
	ActiveDirectoryError interface{}
	// BackupNotFound
	BackupNotFound interface{}
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// Success
	CreateFileSystemFromBackupResponse *shared.CreateFileSystemFromBackupResponse
	// IncompatibleParameterError
	IncompatibleParameterError interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidNetworkSettings
	InvalidNetworkSettings interface{}
	// InvalidPerUnitStorageThroughput
	InvalidPerUnitStorageThroughput interface{}
	// MissingFileSystemConfiguration
	MissingFileSystemConfiguration interface{}
	// ServiceLimitExceeded
	ServiceLimitExceeded interface{}
	StatusCode           int
	RawResponse          *http.Response
}
