/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SecuritySettings - The authentication and authorization settings for a BackendService.
 */
public class SecuritySettings {
    /**
     * [Deprecated] Use clientTlsPolicy instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authentication")
    public String authentication;

    public SecuritySettings withAuthentication(String authentication) {
        this.authentication = authentication;
        return this;
    }
    
    /**
     * [Deprecated] The authentication settings for the backend service. The authentication settings for the backend service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticationPolicy")
    public AuthenticationPolicy authenticationPolicy;

    public SecuritySettings withAuthenticationPolicy(AuthenticationPolicy authenticationPolicy) {
        this.authenticationPolicy = authenticationPolicy;
        return this;
    }
    
    /**
     * [Deprecated] Authorization configuration provides service-level and method-level access control for a service. control for a service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationConfig")
    public AuthorizationConfig authorizationConfig;

    public SecuritySettings withAuthorizationConfig(AuthorizationConfig authorizationConfig) {
        this.authorizationConfig = authorizationConfig;
        return this;
    }
    
    /**
     * Contains the configurations necessary to generate a signature for access to private storage buckets that support Signature Version 4 for authentication. The service name for generating the authentication header will always default to 's3'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("awsV4Authentication")
    public Awsv4Signature awsV4Authentication;

    public SecuritySettings withAwsV4Authentication(Awsv4Signature awsV4Authentication) {
        this.awsV4Authentication = awsV4Authentication;
        return this;
    }
    
    /**
     * Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that describes how clients should authenticate with this service's backends. clientTlsPolicy only applies to a global BackendService with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank, communications are not encrypted. Note: This field currently has no impact.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientTlsPolicy")
    public String clientTlsPolicy;

    public SecuritySettings withClientTlsPolicy(String clientTlsPolicy) {
        this.clientTlsPolicy = clientTlsPolicy;
        return this;
    }
    
    /**
     * [Deprecated] The client side authentication settings for connection originating from the backend service. the backend service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientTlsSettings")
    public ClientTlsSettings clientTlsSettings;

    public SecuritySettings withClientTlsSettings(ClientTlsSettings clientTlsSettings) {
        this.clientTlsSettings = clientTlsSettings;
        return this;
    }
    
    /**
     * Optional. A list of Subject Alternative Names (SANs) that the client verifies during a mutual TLS handshake with an server/endpoint for this BackendService. When the server presents its X.509 certificate to the client, the client inspects the certificate's subjectAltName field. If the field contains one of the specified values, the communication continues. Otherwise, it fails. This additional check enables the client to verify that the server is authorized to run the requested service. Note that the contents of the server certificate's subjectAltName field are configured by the Public Key Infrastructure which provisions server identities. Only applies to a global BackendService with loadBalancingScheme set to INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached clientTlsPolicy with clientCertificate (mTLS mode). Note: This field currently has no impact.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subjectAltNames")
    public String[] subjectAltNames;

    public SecuritySettings withSubjectAltNames(String[] subjectAltNames) {
        this.subjectAltNames = subjectAltNames;
        return this;
    }
    
    public SecuritySettings(){}
}
