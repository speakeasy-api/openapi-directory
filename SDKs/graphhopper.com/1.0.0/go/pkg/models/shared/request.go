// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Request - The request that contains the vehicle routing problem to be solved.
type Request struct {
	// Use `objectives` instead.
	Algorithm *Algorithm `json:"algorithm,omitempty"`
	// Specifies general configurations that are taken into account when solving the vehicle routing problem.
	Configuration *Configuration `json:"configuration,omitempty"`
	// Specifies your own tranport time and distance matrices.
	CostMatrices []CostMatrix `json:"cost_matrices,omitempty"`
	// Specifies an objective function. The vehicle routing problem is solved in such a way that this objective function is minimized.
	Objectives []Objective `json:"objectives,omitempty"`
	// Defines additional relationships between orders.
	Relations []interface{} `json:"relations,omitempty"`
	// Specifies the orders of the type "service". These are, for example, pick-ups, deliveries or other stops that are to be approached by the specified vehicles. Each of these orders contains only one location.
	Services []Service `json:"services,omitempty"`
	// Specifies the available shipments. Each shipment contains a pickup and a delivery stop, which must be processed one after the other.
	Shipments []Shipment `json:"shipments,omitempty"`
	// Specifies the available vehicle types. These types can be assigned to vehicles.
	VehicleTypes []VehicleType `json:"vehicle_types,omitempty"`
	// Specifies the available vehicles.
	Vehicles []Vehicle `json:"vehicles,omitempty"`
}
