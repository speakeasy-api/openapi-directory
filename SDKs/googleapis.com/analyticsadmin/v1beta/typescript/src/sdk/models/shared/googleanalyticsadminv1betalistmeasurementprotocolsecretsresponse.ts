/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleAnalyticsAdminV1betaMeasurementProtocolSecret } from "./googleanalyticsadminv1betameasurementprotocolsecret";
import { Expose, Type } from "class-transformer";

/**
 * Response message for ListMeasurementProtocolSecret RPC
 */
export class GoogleAnalyticsAdminV1betaListMeasurementProtocolSecretsResponse extends SpeakeasyBase {
  /**
   * A list of secrets for the parent stream specified in the request.
   */
  @SpeakeasyMetadata({
    elemType: GoogleAnalyticsAdminV1betaMeasurementProtocolSecret,
  })
  @Expose({ name: "measurementProtocolSecrets" })
  @Type(() => GoogleAnalyticsAdminV1betaMeasurementProtocolSecret)
  measurementProtocolSecrets?: GoogleAnalyticsAdminV1betaMeasurementProtocolSecret[];

  /**
   * A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
