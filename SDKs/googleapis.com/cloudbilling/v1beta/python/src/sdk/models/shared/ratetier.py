"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import money as shared_money
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RateTier:
    r"""Pricing details for a service tier."""
    
    price: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money with its currency type."""  
    start_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startAmount'), 'exclude': lambda f: f is None }})
    r"""The magnitude of usage in which the tier interval begins. Example: \\"From 100 GiBi the price is $1 per byte\\" implies `start_amount` = 100"""  
    