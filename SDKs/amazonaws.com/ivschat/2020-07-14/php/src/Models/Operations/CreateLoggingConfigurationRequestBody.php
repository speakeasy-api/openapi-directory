<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateLoggingConfigurationRequestBody
{
    /**
     * A complex type that describes a location where chat logs will be stored. Each member represents the configuration of one log destination. For logging, you define only one type of destination (for CloudWatch Logs, Kinesis Firehose, or S3).
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateLoggingConfigurationRequestBodyDestinationConfiguration $destinationConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateLoggingConfigurationRequestBodyDestinationConfiguration')]
    public CreateLoggingConfigurationRequestBodyDestinationConfiguration $destinationConfiguration;
    
    /**
     * Logging-configuration name. The value does not need to be unique.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Tags to attach to the resource. Array of maps, each of the form <code>string:string (key:value)</code>. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging AWS Resources</a> for details, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS Chat has no constraints on tags beyond what is documented there.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->destinationConfiguration = new \OpenAPI\OpenAPI\Models\Operations\CreateLoggingConfigurationRequestBodyDestinationConfiguration();
		$this->name = null;
		$this->tags = null;
	}
}
