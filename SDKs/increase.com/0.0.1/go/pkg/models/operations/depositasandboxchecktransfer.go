// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DepositASandboxCheckTransferRequest struct {
	CheckTransferID string `pathParam:"style=simple,explode=false,name=check_transfer_id"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON13StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine DepositASandboxCheckTransferDefaultApplicationJSON13StatusEnum = "429"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON13TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON13TypeEnumRateLimitedError DepositASandboxCheckTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON13 struct {
	Detail     string                                                         `json:"detail"`
	RetryAfter *int64                                                         `json:"retry_after,omitempty"`
	Status     DepositASandboxCheckTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                         `json:"title"`
	Type       DepositASandboxCheckTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON12StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree DepositASandboxCheckTransferDefaultApplicationJSON12StatusEnum = "403"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON12TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError DepositASandboxCheckTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON12 struct {
	Detail string                                                         `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                         `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON11StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour DepositASandboxCheckTransferDefaultApplicationJSON11StatusEnum = "404"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON11TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError DepositASandboxCheckTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON11 struct {
	Detail string                                                         `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                         `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON10StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON10StatusEnumFourHundred DepositASandboxCheckTransferDefaultApplicationJSON10StatusEnum = "400"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON10TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON10TypeEnumMalformedRequestError DepositASandboxCheckTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON10 struct {
	Detail string                                                         `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                         `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON9StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON9StatusEnumFourHundred DepositASandboxCheckTransferDefaultApplicationJSON9StatusEnum = "400"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON9TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON9TypeEnumInvalidParametersError DepositASandboxCheckTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                      `json:"errors,omitempty"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON8StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine DepositASandboxCheckTransferDefaultApplicationJSON8StatusEnum = "409"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON8TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON8TypeEnumInvalidOperationError DepositASandboxCheckTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON8 struct {
	Detail string                                                        `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON7StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne DepositASandboxCheckTransferDefaultApplicationJSON7StatusEnum = "401"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON7TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError DepositASandboxCheckTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON7 struct {
	Detail string                                                        `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON6StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON6StatusEnumFiveHundred DepositASandboxCheckTransferDefaultApplicationJSON6StatusEnum = "500"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON6TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON6TypeEnumInternalServerError DepositASandboxCheckTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON6 struct {
	Detail string                                                        `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON5StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree DepositASandboxCheckTransferDefaultApplicationJSON5StatusEnum = "403"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON5TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError DepositASandboxCheckTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON5 struct {
	Detail string                                                        `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON4StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo DepositASandboxCheckTransferDefaultApplicationJSON4StatusEnum = "422"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON4TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError DepositASandboxCheckTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON4 struct {
	Detail string                                                        `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON3StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine DepositASandboxCheckTransferDefaultApplicationJSON3StatusEnum = "409"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON3TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError DepositASandboxCheckTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON3 struct {
	Detail string                                                        `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON2StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree DepositASandboxCheckTransferDefaultApplicationJSON2StatusEnum = "403"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON2TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError DepositASandboxCheckTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON2 struct {
	Detail string                                                        `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferDefaultApplicationJSON1StatusEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour DepositASandboxCheckTransferDefaultApplicationJSON1StatusEnum = "404"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON1TypeEnum string

const (
	DepositASandboxCheckTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError DepositASandboxCheckTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *DepositASandboxCheckTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = DepositASandboxCheckTransferDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DepositASandboxCheckTransferDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type DepositASandboxCheckTransferDefaultApplicationJSON1 struct {
	Detail string                                                        `json:"detail"`
	Status DepositASandboxCheckTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   DepositASandboxCheckTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type DepositASandboxCheckTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Check Transfer
	CheckTransfer *shared.CheckTransfer
	// Error
	Error interface{}
}
