// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteEventsIDBehaviourEnum - Whether the delete applies only to this event, to all events within the series from this event or to all events within the series.
type DeleteEventsIDBehaviourEnum string

const (
	DeleteEventsIDBehaviourEnumOne     DeleteEventsIDBehaviourEnum = "one"
	DeleteEventsIDBehaviourEnumForward DeleteEventsIDBehaviourEnum = "forward"
	DeleteEventsIDBehaviourEnumAll     DeleteEventsIDBehaviourEnum = "all"
)

func (e *DeleteEventsIDBehaviourEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "one":
		fallthrough
	case "forward":
		fallthrough
	case "all":
		*e = DeleteEventsIDBehaviourEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteEventsIDBehaviourEnum: %s", s)
	}
}

type DeleteEventsIDRequest struct {
	// Whether the delete applies only to this event, to all events within the series from this event or to all events within the series.
	Behaviour DeleteEventsIDBehaviourEnum `queryParam:"style=form,explode=true,name=behaviour"`
	// The unique identifier of the event.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type DeleteEventsIDResponse struct {
	ContentType string
	// Bad Request
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
