// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateFactorServerList = []string{
	"https://verify.twilio.com",
}

type UpdateFactorSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type UpdateFactorUpdateFactorRequest struct {
	// The optional payload needed to verify the Factor for the first time. E.g. for a TOTP, the numeric code.
	AuthPayload *string                              `form:"name=AuthPayload"`
	ConfigAlg   *shared.FactorEnumTotpAlgorithmsEnum `form:"name=Config.Alg"`
	// Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive
	ConfigCodeLength *int64 `form:"name=Config.CodeLength"`
	// The transport technology used to generate the Notification Token. Can be `apn`, `fcm` or `none`.
	//
	// Required when `factor_type` is `push`.
	ConfigNotificationPlatform *string `form:"name=Config.NotificationPlatform"`
	// For APN, the device token. For FCM, the registration token. It is used to send the push notifications. Required when `factor_type` is `push`. If specified, this value must be between 32 and 255 characters long.
	ConfigNotificationToken *string `form:"name=Config.NotificationToken"`
	// The Verify Push SDK version used to configure the factor
	ConfigSDKVersion *string `form:"name=Config.SdkVersion"`
	// The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive
	ConfigSkew *int64 `form:"name=Config.Skew"`
	// Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive
	ConfigTimeStep *int64 `form:"name=Config.TimeStep"`
	// The new friendly name of this Factor. It can be up to 64 characters.
	FriendlyName *string `form:"name=FriendlyName"`
}

type UpdateFactorRequest struct {
	// Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
	Identity    string                           `pathParam:"style=simple,explode=false,name=Identity"`
	RequestBody *UpdateFactorUpdateFactorRequest `request:"mediaType=application/x-www-form-urlencoded"`
	// The unique SID identifier of the Service.
	ServiceSid string `pathParam:"style=simple,explode=false,name=ServiceSid"`
	// A 34 character string that uniquely identifies this Factor.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

type UpdateFactorResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	VerifyV2ServiceEntityFactor *shared.VerifyV2ServiceEntityFactor
}
