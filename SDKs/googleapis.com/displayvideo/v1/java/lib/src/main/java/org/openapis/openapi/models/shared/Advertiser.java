/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Advertiser - A single advertiser in Display &amp; Video 360 (DV360).
 */
public class Advertiser {
    /**
     * Ad server related settings of an advertiser.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adServerConfig")
    public AdvertiserAdServerConfig adServerConfig;

    public Advertiser withAdServerConfig(AdvertiserAdServerConfig adServerConfig) {
        this.adServerConfig = adServerConfig;
        return this;
    }
    
    /**
     * Output only. The unique ID of the advertiser. Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserId")
    public String advertiserId;

    public Advertiser withAdvertiserId(String advertiserId) {
        this.advertiserId = advertiserId;
        return this;
    }
    
    /**
     * Creatives related settings of an advertiser.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeConfig")
    public AdvertiserCreativeConfig creativeConfig;

    public Advertiser withCreativeConfig(AdvertiserCreativeConfig creativeConfig) {
        this.creativeConfig = creativeConfig;
        return this;
    }
    
    /**
     * Settings that control how advertiser related data may be accessed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataAccessConfig")
    public AdvertiserDataAccessConfig dataAccessConfig;

    public Advertiser withDataAccessConfig(AdvertiserDataAccessConfig dataAccessConfig) {
        this.dataAccessConfig = dataAccessConfig;
        return this;
    }
    
    /**
     * Required. The display name of the advertiser. Must be UTF-8 encoded with a maximum size of 240 bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Advertiser withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Required. Controls whether or not insertion orders and line items of the advertiser can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_PAUSED` and `ENTITY_STATUS_SCHEDULED_FOR_DELETION`. * If set to `ENTITY_STATUS_SCHEDULED_FOR_DELETION`, the advertiser will be deleted 30 days from when it was first scheduled for deletion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entityStatus")
    public AdvertiserEntityStatusEnum entityStatus;

    public Advertiser withEntityStatus(AdvertiserEntityStatusEnum entityStatus) {
        this.entityStatus = entityStatus;
        return this;
    }
    
    /**
     * General settings of an advertiser.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("generalConfig")
    public AdvertiserGeneralConfig generalConfig;

    public Advertiser withGeneralConfig(AdvertiserGeneralConfig generalConfig) {
        this.generalConfig = generalConfig;
        return this;
    }
    
    /**
     * Integration details of an entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integrationDetails")
    public IntegrationDetails integrationDetails;

    public Advertiser withIntegrationDetails(IntegrationDetails integrationDetails) {
        this.integrationDetails = integrationDetails;
        return this;
    }
    
    /**
     * Output only. The resource name of the advertiser.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Advertiser withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Required. Immutable. The unique ID of the partner that the advertiser belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partnerId")
    public String partnerId;

    public Advertiser withPartnerId(String partnerId) {
        this.partnerId = partnerId;
        return this;
    }
    
    /**
     * Whether integration with Mediaocean (Prisma) is enabled. By enabling this, you agree to the following: On behalf of my company, I authorize Mediaocean (Prisma) to send budget segment plans to Google, and I authorize Google to send corresponding reporting and invoices from DV360 to Mediaocean for the purposes of budget planning, billing, and reconciliation for this advertiser.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prismaEnabled")
    public Boolean prismaEnabled;

    public Advertiser withPrismaEnabled(Boolean prismaEnabled) {
        this.prismaEnabled = prismaEnabled;
        return this;
    }
    
    /**
     * Targeting settings related to ad serving of an advertiser.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("servingConfig")
    public AdvertiserTargetingConfig servingConfig;

    public Advertiser withServingConfig(AdvertiserTargetingConfig servingConfig) {
        this.servingConfig = servingConfig;
        return this;
    }
    
    /**
     * Output only. The timestamp when the advertiser was last updated. Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Advertiser withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Advertiser(){}
}
