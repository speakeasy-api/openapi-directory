/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TeamOrganization - Team Organization
 */
public class TeamOrganization {
    @JsonProperty("avatar_url")
    public String avatarUrl;
    public TeamOrganization withAvatarUrl(String avatarUrl) {
        this.avatarUrl = avatarUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billing_email")
    public String billingEmail;
    public TeamOrganization withBillingEmail(String billingEmail) {
        this.billingEmail = billingEmail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blog")
    public String blog;
    public TeamOrganization withBlog(String blog) {
        this.blog = blog;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collaborators")
    public Long collaborators;
    public TeamOrganization withCollaborators(Long collaborators) {
        this.collaborators = collaborators;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company")
    public String company;
    public TeamOrganization withCompany(String company) {
        this.company = company;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public TeamOrganization withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default_repository_permission")
    public String defaultRepositoryPermission;
    public TeamOrganization withDefaultRepositoryPermission(String defaultRepositoryPermission) {
        this.defaultRepositoryPermission = defaultRepositoryPermission;
        return this;
    }
    
    @JsonProperty("description")
    public String description;
    public TeamOrganization withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disk_usage")
    public Long diskUsage;
    public TeamOrganization withDiskUsage(Long diskUsage) {
        this.diskUsage = diskUsage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public TeamOrganization withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonProperty("events_url")
    public String eventsUrl;
    public TeamOrganization withEventsUrl(String eventsUrl) {
        this.eventsUrl = eventsUrl;
        return this;
    }
    
    @JsonProperty("followers")
    public Long followers;
    public TeamOrganization withFollowers(Long followers) {
        this.followers = followers;
        return this;
    }
    
    @JsonProperty("following")
    public Long following;
    public TeamOrganization withFollowing(Long following) {
        this.following = following;
        return this;
    }
    
    @JsonProperty("has_organization_projects")
    public Boolean hasOrganizationProjects;
    public TeamOrganization withHasOrganizationProjects(Boolean hasOrganizationProjects) {
        this.hasOrganizationProjects = hasOrganizationProjects;
        return this;
    }
    
    @JsonProperty("has_repository_projects")
    public Boolean hasRepositoryProjects;
    public TeamOrganization withHasRepositoryProjects(Boolean hasRepositoryProjects) {
        this.hasRepositoryProjects = hasRepositoryProjects;
        return this;
    }
    
    @JsonProperty("hooks_url")
    public String hooksUrl;
    public TeamOrganization withHooksUrl(String hooksUrl) {
        this.hooksUrl = hooksUrl;
        return this;
    }
    
    @JsonProperty("html_url")
    public String htmlUrl;
    public TeamOrganization withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;
    public TeamOrganization withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_verified")
    public Boolean isVerified;
    public TeamOrganization withIsVerified(Boolean isVerified) {
        this.isVerified = isVerified;
        return this;
    }
    
    @JsonProperty("issues_url")
    public String issuesUrl;
    public TeamOrganization withIssuesUrl(String issuesUrl) {
        this.issuesUrl = issuesUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public TeamOrganization withLocation(String location) {
        this.location = location;
        return this;
    }
    
    @JsonProperty("login")
    public String login;
    public TeamOrganization withLogin(String login) {
        this.login = login;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("members_allowed_repository_creation_type")
    public String membersAllowedRepositoryCreationType;
    public TeamOrganization withMembersAllowedRepositoryCreationType(String membersAllowedRepositoryCreationType) {
        this.membersAllowedRepositoryCreationType = membersAllowedRepositoryCreationType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("members_can_create_internal_repositories")
    public Boolean membersCanCreateInternalRepositories;
    public TeamOrganization withMembersCanCreateInternalRepositories(Boolean membersCanCreateInternalRepositories) {
        this.membersCanCreateInternalRepositories = membersCanCreateInternalRepositories;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("members_can_create_pages")
    public Boolean membersCanCreatePages;
    public TeamOrganization withMembersCanCreatePages(Boolean membersCanCreatePages) {
        this.membersCanCreatePages = membersCanCreatePages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("members_can_create_private_pages")
    public Boolean membersCanCreatePrivatePages;
    public TeamOrganization withMembersCanCreatePrivatePages(Boolean membersCanCreatePrivatePages) {
        this.membersCanCreatePrivatePages = membersCanCreatePrivatePages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("members_can_create_private_repositories")
    public Boolean membersCanCreatePrivateRepositories;
    public TeamOrganization withMembersCanCreatePrivateRepositories(Boolean membersCanCreatePrivateRepositories) {
        this.membersCanCreatePrivateRepositories = membersCanCreatePrivateRepositories;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("members_can_create_public_pages")
    public Boolean membersCanCreatePublicPages;
    public TeamOrganization withMembersCanCreatePublicPages(Boolean membersCanCreatePublicPages) {
        this.membersCanCreatePublicPages = membersCanCreatePublicPages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("members_can_create_public_repositories")
    public Boolean membersCanCreatePublicRepositories;
    public TeamOrganization withMembersCanCreatePublicRepositories(Boolean membersCanCreatePublicRepositories) {
        this.membersCanCreatePublicRepositories = membersCanCreatePublicRepositories;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("members_can_create_repositories")
    public Boolean membersCanCreateRepositories;
    public TeamOrganization withMembersCanCreateRepositories(Boolean membersCanCreateRepositories) {
        this.membersCanCreateRepositories = membersCanCreateRepositories;
        return this;
    }
    
    @JsonProperty("members_url")
    public String membersUrl;
    public TeamOrganization withMembersUrl(String membersUrl) {
        this.membersUrl = membersUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public TeamOrganization withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("node_id")
    public String nodeId;
    public TeamOrganization withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owned_private_repos")
    public Long ownedPrivateRepos;
    public TeamOrganization withOwnedPrivateRepos(Long ownedPrivateRepos) {
        this.ownedPrivateRepos = ownedPrivateRepos;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan")
    public TeamOrganizationPlan plan;
    public TeamOrganization withPlan(TeamOrganizationPlan plan) {
        this.plan = plan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("private_gists")
    public Long privateGists;
    public TeamOrganization withPrivateGists(Long privateGists) {
        this.privateGists = privateGists;
        return this;
    }
    
    @JsonProperty("public_gists")
    public Long publicGists;
    public TeamOrganization withPublicGists(Long publicGists) {
        this.publicGists = publicGists;
        return this;
    }
    
    @JsonProperty("public_members_url")
    public String publicMembersUrl;
    public TeamOrganization withPublicMembersUrl(String publicMembersUrl) {
        this.publicMembersUrl = publicMembersUrl;
        return this;
    }
    
    @JsonProperty("public_repos")
    public Long publicRepos;
    public TeamOrganization withPublicRepos(Long publicRepos) {
        this.publicRepos = publicRepos;
        return this;
    }
    
    @JsonProperty("repos_url")
    public String reposUrl;
    public TeamOrganization withReposUrl(String reposUrl) {
        this.reposUrl = reposUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_private_repos")
    public Long totalPrivateRepos;
    public TeamOrganization withTotalPrivateRepos(Long totalPrivateRepos) {
        this.totalPrivateRepos = totalPrivateRepos;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("twitter_username")
    public String twitterUsername;
    public TeamOrganization withTwitterUsername(String twitterUsername) {
        this.twitterUsername = twitterUsername;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("two_factor_requirement_enabled")
    public Boolean twoFactorRequirementEnabled;
    public TeamOrganization withTwoFactorRequirementEnabled(Boolean twoFactorRequirementEnabled) {
        this.twoFactorRequirementEnabled = twoFactorRequirementEnabled;
        return this;
    }
    
    @JsonProperty("type")
    public String type;
    public TeamOrganization withType(String type) {
        this.type = type;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public TeamOrganization withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonProperty("url")
    public String url;
    public TeamOrganization withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
