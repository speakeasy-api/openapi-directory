/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETModifyClientVpnEndpointActionEnum {
  ModifyClientVpnEndpoint = "ModifyClientVpnEndpoint",
}

/**
 * The options for managing connection authorization for new client connections.
 */
export class GETModifyClientVpnEndpointClientConnectOptions extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata({ data: "queryParam, name=LambdaFunctionArn" })
  lambdaFunctionArn?: string;
}

/**
 * Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
 */
export class GETModifyClientVpnEndpointClientLoginBannerOptions extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=BannerText" })
  bannerText?: string;

  @SpeakeasyMetadata({ data: "queryParam, name=Enabled" })
  enabled?: boolean;
}

/**
 * Describes the client connection logging options for the Client VPN endpoint.
 */
export class GETModifyClientVpnEndpointConnectionLogOptions extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=CloudwatchLogGroup" })
  cloudwatchLogGroup?: string;

  @SpeakeasyMetadata({ data: "queryParam, name=CloudwatchLogStream" })
  cloudwatchLogStream?: string;

  @SpeakeasyMetadata({ data: "queryParam, name=Enabled" })
  enabled?: boolean;
}

/**
 * Information about the DNS server to be used.
 */
export class GETModifyClientVpnEndpointDNSServers extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=CustomDnsServers" })
  customDnsServers?: string[];

  @SpeakeasyMetadata({ data: "queryParam, name=Enabled" })
  enabled?: boolean;
}

/**
 * Specify whether to enable the self-service portal for the Client VPN endpoint.
 */
export enum GETModifyClientVpnEndpointSelfServicePortalEnum {
  Enabled = "enabled",
  Disabled = "disabled",
}

export enum GETModifyClientVpnEndpointVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETModifyClientVpnEndpointRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETModifyClientVpnEndpointActionEnum;

  /**
   * The options for managing connection authorization for new client connections.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ClientConnectOptions",
  })
  clientConnectOptions?: GETModifyClientVpnEndpointClientConnectOptions;

  /**
   * Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ClientLoginBannerOptions",
  })
  clientLoginBannerOptions?: GETModifyClientVpnEndpointClientLoginBannerOptions;

  /**
   * The ID of the Client VPN endpoint to modify.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ClientVpnEndpointId",
  })
  clientVpnEndpointId: string;

  /**
   * <p>Information about the client connection logging options.</p> <p>If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:</p> <ul> <li> <p>Client connection requests</p> </li> <li> <p>Client connection results (successful and unsuccessful)</p> </li> <li> <p>Reasons for unsuccessful client connection requests</p> </li> <li> <p>Client connection termination time</p> </li> </ul>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ConnectionLogOptions",
  })
  connectionLogOptions?: GETModifyClientVpnEndpointConnectionLogOptions;

  /**
   * A brief description of the Client VPN endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Description",
  })
  description?: string;

  /**
   * Information about the DNS servers to be used by Client VPN connections. A Client VPN endpoint can have up to two DNS servers.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DnsServers",
  })
  dnsServers?: GETModifyClientVpnEndpointDNSServers;

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The IDs of one or more security groups to apply to the target network.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SecurityGroupId",
  })
  securityGroupId?: string[];

  /**
   * Specify whether to enable the self-service portal for the Client VPN endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SelfServicePortal",
  })
  selfServicePortal?: GETModifyClientVpnEndpointSelfServicePortalEnum;

  /**
   * The ARN of the server certificate to be used. The server certificate must be provisioned in Certificate Manager (ACM).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ServerCertificateArn",
  })
  serverCertificateArn?: string;

  /**
   * <p>The maximum VPN session duration time in hours.</p> <p>Valid values: <code>8 | 10 | 12 | 24</code> </p> <p>Default value: <code>24</code> </p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SessionTimeoutHours",
  })
  sessionTimeoutHours?: number;

  /**
   * <p>Indicates whether the VPN is split-tunnel.</p> <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-tunnel Client VPN endpoint</a> in the <i>Client VPN Administrator Guide</i>.</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SplitTunnel",
  })
  splitTunnel?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETModifyClientVpnEndpointVersionEnum;

  /**
   * The ID of the VPC to associate with the Client VPN endpoint.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=VpcId" })
  vpcId?: string;

  /**
   * <p>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</p> <p>Valid Values: <code>443</code> | <code>1194</code> </p> <p>Default Value: <code>443</code> </p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=VpnPort",
  })
  vpnPort?: number;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETModifyClientVpnEndpointResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
