// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MaintenanceWindowExecutionStatusEnum string

const (
	MaintenanceWindowExecutionStatusEnumPending            MaintenanceWindowExecutionStatusEnum = "PENDING"
	MaintenanceWindowExecutionStatusEnumInProgress         MaintenanceWindowExecutionStatusEnum = "IN_PROGRESS"
	MaintenanceWindowExecutionStatusEnumSuccess            MaintenanceWindowExecutionStatusEnum = "SUCCESS"
	MaintenanceWindowExecutionStatusEnumFailed             MaintenanceWindowExecutionStatusEnum = "FAILED"
	MaintenanceWindowExecutionStatusEnumTimedOut           MaintenanceWindowExecutionStatusEnum = "TIMED_OUT"
	MaintenanceWindowExecutionStatusEnumCancelling         MaintenanceWindowExecutionStatusEnum = "CANCELLING"
	MaintenanceWindowExecutionStatusEnumCancelled          MaintenanceWindowExecutionStatusEnum = "CANCELLED"
	MaintenanceWindowExecutionStatusEnumSkippedOverlapping MaintenanceWindowExecutionStatusEnum = "SKIPPED_OVERLAPPING"
)

func (e *MaintenanceWindowExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "SUCCESS":
		fallthrough
	case "FAILED":
		fallthrough
	case "TIMED_OUT":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "SKIPPED_OVERLAPPING":
		*e = MaintenanceWindowExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MaintenanceWindowExecutionStatusEnum: %s", s)
	}
}
