// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type UpdateTimelineEventHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateTimelineEventRequestBody struct {
	// A token ensuring that the operation is called only once with the specified details.
	ClientToken *string `json:"clientToken,omitempty"`
	// A short description of the event.
	EventData *string `json:"eventData,omitempty"`
	// The ID of the event you are updating. You can find this by using <code>ListTimelineEvents</code>.
	EventID string `json:"eventId"`
	// <p>Updates all existing references in a <code>TimelineEvent</code>. A reference can be an Amazon Web Services resource involved in the incident or in some way associated with it. When you specify a reference, you enter the Amazon Resource Name (ARN) of the resource. You can also specify a related item. As an example, you could specify the ARN of an Amazon DynamoDB (DynamoDB) table. The table for this example is the resource. You could also specify a Amazon CloudWatch metric for that table. The metric is the related item.</p> <important> <p>This update action overrides all existing references. If you want to keep existing references, you must specify them in the call. If you don't, this action removes them and enters only new references.</p> </important>
	EventReferences []shared.EventReference `json:"eventReferences,omitempty"`
	// The time that the event occurred.
	EventTime *time.Time `json:"eventTime,omitempty"`
	// The type of the event. You can update events of type <code>Custom Event</code>.
	EventType *string `json:"eventType,omitempty"`
	// The Amazon Resource Name (ARN) of the incident that includes the timeline event.
	IncidentRecordArn string `json:"incidentRecordArn"`
}

type UpdateTimelineEventRequest struct {
	Headers UpdateTimelineEventHeaders
	Request UpdateTimelineEventRequestBody `request:"mediaType=application/json"`
}

type UpdateTimelineEventResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateTimelineEventOutput map[string]interface{}
	// ValidationException
	ValidationException interface{}
}
