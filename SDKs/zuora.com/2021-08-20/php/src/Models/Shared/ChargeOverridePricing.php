<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ChargeOverridePricing - Pricing information about the charge.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ChargeOverridePricing
{
    /**
     * Container for charge model configuration data.
     * 
     * 
     * **Note**: This field is only available if you have the High Water Mark, Pre-Rated Pricing, or Multi-Attribute Pricing charge models enabled. The charge models are available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChargeModelDataOverride $chargeModelData
     */
	#[\JMS\Serializer\Annotation\SerializedName('chargeModelData')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ChargeModelDataOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChargeModelDataOverride $chargeModelData = null;
    
    /**
     * Pricing information about a discount charge.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DiscountPricingOverride $discount
     */
	#[\JMS\Serializer\Annotation\SerializedName('discount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DiscountPricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DiscountPricingOverride $discount = null;
    
    /**
     * Pricing information about a one-time charge that uses the "flat fee" charge model. In this charge model, the charge has a fixed price.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OneTimeFlatFeePricingOverride $oneTimeFlatFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('oneTimeFlatFee')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OneTimeFlatFeePricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OneTimeFlatFeePricingOverride $oneTimeFlatFee = null;
    
    /**
     * Pricing information about a one-time charge that uses the "per unit" charge model. In this charge model, the charge has a fixed price per unit purchased.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OneTimePerUnitPricingOverride $oneTimePerUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('oneTimePerUnit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OneTimePerUnitPricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OneTimePerUnitPricingOverride $oneTimePerUnit = null;
    
    /**
     * Pricing information about a one-time charge that uses the "tiered pricing" charge model. In this charge model, the charge has cumulative pricing tiers that become effective as units are purchased.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OneTimeTieredPricingOverride $oneTimeTiered
     */
	#[\JMS\Serializer\Annotation\SerializedName('oneTimeTiered')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OneTimeTieredPricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OneTimeTieredPricingOverride $oneTimeTiered = null;
    
    /**
     * Pricing information about a one-time charge that uses the "volume pricing" charge model. In this charge model, the charge has a variable price per unit, depending on how many units are purchased.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OneTimeVolumePricingOverride $oneTimeVolume
     */
	#[\JMS\Serializer\Annotation\SerializedName('oneTimeVolume')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OneTimeVolumePricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OneTimeVolumePricingOverride $oneTimeVolume = null;
    
    /**
     * Pricing information about a recurring charge that uses the "flat fee" charge model. In this charge model, the charge has a fixed price.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RecurringFlatFeePricingOverride $recurringFlatFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('recurringFlatFee')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RecurringFlatFeePricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecurringFlatFeePricingOverride $recurringFlatFee = null;
    
    /**
     * Pricing information about a recurring charge that uses the "per unit" charge model. In this charge model, the charge has a fixed price per unit purchased.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RecurringPerUnitPricingOverride $recurringPerUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('recurringPerUnit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RecurringPerUnitPricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecurringPerUnitPricingOverride $recurringPerUnit = null;
    
    /**
     * Pricing information about a recurring charge that uses the "tiered pricing" charge model. In this charge model, the charge has cumulative pricing tiers that become effective as units are purchased.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RecurringTieredPricingOverride $recurringTiered
     */
	#[\JMS\Serializer\Annotation\SerializedName('recurringTiered')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RecurringTieredPricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecurringTieredPricingOverride $recurringTiered = null;
    
    /**
     * Pricing information about a recurring charge that uses the "volume pricing" charge model. In this charge model, the charge has a variable price per unit, depending on how many units are purchased.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RecurringVolumePricingOverride $recurringVolume
     */
	#[\JMS\Serializer\Annotation\SerializedName('recurringVolume')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RecurringVolumePricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecurringVolumePricingOverride $recurringVolume = null;
    
    /**
     * Pricing information about a usage charge that uses the "flat fee" charge model. In this charge model, the charge has a fixed price.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UsageFlatFeePricingOverride $usageFlatFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('usageFlatFee')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageFlatFeePricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageFlatFeePricingOverride $usageFlatFee = null;
    
    /**
     * Pricing information about a usage charge that uses the "overage" charge model. In this charge model, the charge has an allowance of free units and a fixed price per additional unit consumed.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UsageOveragePricingOverride $usageOverage
     */
	#[\JMS\Serializer\Annotation\SerializedName('usageOverage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageOveragePricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageOveragePricingOverride $usageOverage = null;
    
    /**
     * Pricing information about a usage charge that uses the "per unit" charge model. In this charge model, the charge has a fixed price per unit consumed.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UsagePerUnitPricingOverride $usagePerUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('usagePerUnit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsagePerUnitPricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsagePerUnitPricingOverride $usagePerUnit = null;
    
    /**
     * Pricing information about a usage charge that uses the "tiered pricing" charge model. In this charge model, the charge has cumulative pricing tiers that become effective as units are consumed.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UsageTieredPricingOverride $usageTiered
     */
	#[\JMS\Serializer\Annotation\SerializedName('usageTiered')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageTieredPricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageTieredPricingOverride $usageTiered = null;
    
    /**
     * Pricing information about a usage charge that uses the "tiered with overage" charge model. In this charge model, the charge has cumulative pricing tiers that become effective as units are consumed. The charge also has a fixed price per unit consumed beyond the limit of the final tier.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UsageTieredWithOveragePricingOverride $usageTieredWithOverage
     */
	#[\JMS\Serializer\Annotation\SerializedName('usageTieredWithOverage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageTieredWithOveragePricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageTieredWithOveragePricingOverride $usageTieredWithOverage = null;
    
    /**
     * Pricing information about a usage charge that uses the "volume pricing" charge model. In this charge model, the charge has a variable price per unit, depending on how many units are consumed.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UsageVolumePricingOverride $usageVolume
     */
	#[\JMS\Serializer\Annotation\SerializedName('usageVolume')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageVolumePricingOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageVolumePricingOverride $usageVolume = null;
    
	public function __construct()
	{
		$this->chargeModelData = null;
		$this->discount = null;
		$this->oneTimeFlatFee = null;
		$this->oneTimePerUnit = null;
		$this->oneTimeTiered = null;
		$this->oneTimeVolume = null;
		$this->recurringFlatFee = null;
		$this->recurringPerUnit = null;
		$this->recurringTiered = null;
		$this->recurringVolume = null;
		$this->usageFlatFee = null;
		$this->usageOverage = null;
		$this->usagePerUnit = null;
		$this->usageTiered = null;
		$this->usageTieredWithOverage = null;
		$this->usageVolume = null;
	}
}
