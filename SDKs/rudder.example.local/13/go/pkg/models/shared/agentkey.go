// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AgentKeyStatusEnum - Certification status of the security token (reset to `undefined` to trust a new certificate). If `certified`, inventory signature check will be enforced
type AgentKeyStatusEnum string

const (
	AgentKeyStatusEnumCertified AgentKeyStatusEnum = "certified"
	AgentKeyStatusEnumUndefined AgentKeyStatusEnum = "undefined"
)

func (e *AgentKeyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "certified":
		fallthrough
	case "undefined":
		*e = AgentKeyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AgentKeyStatusEnum: %s", s)
	}
}

// AgentKey - Information about agent key or certificate
type AgentKey struct {
	// Certification status of the security token (reset to `undefined` to trust a new certificate). If `certified`, inventory signature check will be enforced
	Status *AgentKeyStatusEnum `json:"status,omitempty"`
	// Certificate (or public key for <6.0 agents) used by the agent. Be careful write a "\n" after header line and before footer line, JSON does not keep formatting in string.
	Value string `json:"value"`
}
