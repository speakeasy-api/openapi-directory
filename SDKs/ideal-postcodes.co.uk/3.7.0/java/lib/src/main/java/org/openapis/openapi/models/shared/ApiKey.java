/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class ApiKey {
    /**
     * Determines whether the key can be used by the requesting agent. 
     * 
     * Returns false if one of the following conditions are met:
     *   - Key has no lookups remaining
     *   - Daily limit has been reached on the key
     *   - Daily individual limit has been reached
     *   - Key is not being used via an authorised URL
     *   - (Sublicensed key only) Key has a valid licensee attached
     *   - (Sublicensed key only) Key is not being used via an authorised URL specified by licensee
     * 
     */
    @JsonProperty("available")
    public Boolean available;
    public ApiKey withAvailable(Boolean available) {
        this.available = available;
        return this;
    }
    
    /**
     * Returns current context if it is in the list of available contexts for this key.
     * 
     */
    @JsonProperty("context")
    public Object context;
    public ApiKey withContext(Object context) {
        this.context = context;
        return this;
    }
    
    /**
     * A list of available contexts for a key
     */
    @JsonProperty("contexts")
    public AvailableContexts[] contexts;
    public ApiKey withContexts(AvailableContexts[] contexts) {
        this.contexts = contexts;
        return this;
    }
    
}
