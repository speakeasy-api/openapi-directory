// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// MetalsSpotAnnualHistoricalPerformanceGETFormatEnum - to override content negotiation specify a value of json or xml
type MetalsSpotAnnualHistoricalPerformanceGETFormatEnum string

const (
	MetalsSpotAnnualHistoricalPerformanceGETFormatEnumJSON MetalsSpotAnnualHistoricalPerformanceGETFormatEnum = "json"
	MetalsSpotAnnualHistoricalPerformanceGETFormatEnumXML  MetalsSpotAnnualHistoricalPerformanceGETFormatEnum = "xml"
)

func (e MetalsSpotAnnualHistoricalPerformanceGETFormatEnum) ToPointer() *MetalsSpotAnnualHistoricalPerformanceGETFormatEnum {
	return &e
}

func (e *MetalsSpotAnnualHistoricalPerformanceGETFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		*e = MetalsSpotAnnualHistoricalPerformanceGETFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetalsSpotAnnualHistoricalPerformanceGETFormatEnum: %v", v)
	}
}

// MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum - unit of meaure, defaults to troy ounces. allowed values are:
// mg=milligram
// g=gram
// kg=kilogram
// gr=grain
// oz=ounce
// toz=troy ounce
// ct=carat
// dwt=pennyweight
type MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum string

const (
	MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnumMg  MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum = "mg"
	MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnumG   MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum = "g"
	MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnumKg  MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum = "kg"
	MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnumGr  MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum = "gr"
	MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnumOz  MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum = "oz"
	MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnumToz MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum = "toz"
	MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnumCt  MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum = "ct"
	MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnumDwt MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum = "dwt"
)

func (e MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum) ToPointer() *MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum {
	return &e
}

func (e *MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mg":
		fallthrough
	case "g":
		fallthrough
	case "kg":
		fallthrough
	case "gr":
		fallthrough
	case "oz":
		fallthrough
	case "toz":
		fallthrough
	case "ct":
		fallthrough
	case "dwt":
		*e = MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum: %v", v)
	}
}

type MetalsSpotAnnualHistoricalPerformanceGETRequest struct {
	// comma separated list of conversion currencies, defaults to USD
	Currency *string `queryParam:"style=form,explode=true,name=currency"`
	// to override content negotiation specify a value of json or xml
	Format *MetalsSpotAnnualHistoricalPerformanceGETFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// comma separated list of metals
	Metals string `queryParam:"style=form,explode=true,name=metals"`
	// unit of meaure, defaults to troy ounces. allowed values are:
	// mg=milligram
	// g=gram
	// kg=kilogram
	// gr=grain
	// oz=ounce
	// toz=troy ounce
	// ct=carat
	// dwt=pennyweight
	Unitofmeasure *MetalsSpotAnnualHistoricalPerformanceGETUnitofmeasureEnum `queryParam:"style=form,explode=true,name=unitofmeasure"`
	// Number of years of history to return. Defaults to 10.
	Years *int `queryParam:"style=form,explode=true,name=years"`
}

type MetalsSpotAnnualHistoricalPerformanceGETResponse struct {
	Body        []byte
	ContentType string
	// Success
	IntervalCollectionResponses []shared.IntervalCollectionResponse
	StatusCode                  int
	RawResponse                 *http.Response
}
