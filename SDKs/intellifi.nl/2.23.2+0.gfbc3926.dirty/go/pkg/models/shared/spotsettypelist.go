// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SpotSetTypeListRestrictions - Restrict changes spot and brain.
type SpotSetTypeListRestrictions struct {
	// Server can change this set.
	AllowServerEdit *bool `json:"allow_server_edit,omitempty"`
	// Spots can change set, differences from the brain server will be merged with the device
	AllowSpotEdit *bool `json:"allow_spot_edit,omitempty"`
}

// SpotSetTypeListTypeEnum - Spot set type `list`; List of items. Matches this set if Item is part of this list.
type SpotSetTypeListTypeEnum string

const (
	SpotSetTypeListTypeEnumList SpotSetTypeListTypeEnum = "list"
)

func (e *SpotSetTypeListTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "list":
		*e = SpotSetTypeListTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SpotSetTypeListTypeEnum: %s", s)
	}
}

type SpotSetTypeListInput struct {
	// Unique identifier for resource.
	ItemlistID *string `json:"itemlist_id,omitempty"`
	// Number, list limit, default `1000` if not specified.
	Limit *int `json:"limit,omitempty"`
	// Restrict changes spot and brain.
	Restrictions *SpotSetTypeListRestrictions `json:"restrictions,omitempty"`
	// Spot set unique identifier. Must be unique within a single device
	Setid *int64 `json:"setid,omitempty"`
	// Spot set type `list`; List of items. Matches this set if Item is part of this list.
	Type *SpotSetTypeListTypeEnum `json:"type,omitempty"`
}

type SpotSetTypeList struct {
	// Who was responsible for the creation of this spot list. Value determines who's allowed to manages this object.
	CreatedBy *string `json:"created_by,omitempty"`
	// Unique identifier for resource.
	ID *string `json:"id,omitempty"`
	// Unique identifier for resource.
	ItemlistID *string `json:"itemlist_id,omitempty"`
	// Number, list limit, default `1000` if not specified.
	Limit *int `json:"limit,omitempty"`
	// Last mutation that was synchronized to the device. This is used for internal synchronization between the device and the server.
	Mutation *string `json:"mutation,omitempty"`
	// Restrict changes spot and brain.
	Restrictions *SpotSetTypeListRestrictions `json:"restrictions,omitempty"`
	// Spot set unique identifier. Must be unique within a single device
	Setid *int64 `json:"setid,omitempty"`
	// The sha1 checksum of the list. This will change when the list is mutated.
	Sha1 *string `json:"sha1,omitempty"`
	// Unique identifier for resource.
	SpotID *string `json:"spot_id,omitempty"`
	// [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this resource was created.
	TimeCreated *string `json:"time_created,omitempty"`
	// [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this resource was updated.
	TimeUpdated *string `json:"time_updated,omitempty"`
	// Total amount of items in this set
	Total *int64 `json:"total,omitempty"`
	// Spot set type `list`; List of items. Matches this set if Item is part of this list.
	Type *SpotSetTypeListTypeEnum `json:"type,omitempty"`
}
