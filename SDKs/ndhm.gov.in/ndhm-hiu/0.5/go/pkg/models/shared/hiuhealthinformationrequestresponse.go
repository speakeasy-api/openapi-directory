// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type HIUHealthInformationRequestResponseHiRequestSessionStatusEnum string

const (
	HIUHealthInformationRequestResponseHiRequestSessionStatusEnumRequested    HIUHealthInformationRequestResponseHiRequestSessionStatusEnum = "REQUESTED"
	HIUHealthInformationRequestResponseHiRequestSessionStatusEnumAcknowledged HIUHealthInformationRequestResponseHiRequestSessionStatusEnum = "ACKNOWLEDGED"
)

func (e HIUHealthInformationRequestResponseHiRequestSessionStatusEnum) ToPointer() *HIUHealthInformationRequestResponseHiRequestSessionStatusEnum {
	return &e
}

func (e *HIUHealthInformationRequestResponseHiRequestSessionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQUESTED":
		fallthrough
	case "ACKNOWLEDGED":
		*e = HIUHealthInformationRequestResponseHiRequestSessionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HIUHealthInformationRequestResponseHiRequestSessionStatusEnum: %v", v)
	}
}

type HIUHealthInformationRequestResponseHiRequest struct {
	SessionStatus HIUHealthInformationRequestResponseHiRequestSessionStatusEnum `json:"sessionStatus"`
	TransactionID string                                                        `json:"transactionId"`
}

type HIUHealthInformationRequestResponse struct {
	Error     *Error                                        `json:"error,omitempty"`
	HiRequest *HIUHealthInformationRequestResponseHiRequest `json:"hiRequest,omitempty"`
	RequestID string                                        `json:"requestId"`
	Resp      RequestReference                              `json:"resp"`
	// Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
	Timestamp time.Time `json:"timestamp"`
}
