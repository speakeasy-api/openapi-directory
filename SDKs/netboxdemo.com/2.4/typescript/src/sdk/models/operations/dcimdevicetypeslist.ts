/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class DcimDeviceTypesListRequest extends SpeakeasyBase {
  /**
   * Multiple values may be separated by commas.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id__in",
  })
  idIn?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=is_console_server",
  })
  isConsoleServer?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=is_full_depth",
  })
  isFullDepth?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=is_network_device",
  })
  isNetworkDevice?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=is_pdu",
  })
  isPdu?: string;

  /**
   * Number of results to return per page.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=manufacturer",
  })
  manufacturer?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=manufacturer_id",
  })
  manufacturerId?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=model" })
  model?: string;

  /**
   * The initial index from which to return the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=part_number",
  })
  partNumber?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=slug" })
  slug?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=subdevice_role",
  })
  subdeviceRole?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tag" })
  tag?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=u_height",
  })
  uHeight?: number;
}

export class DcimDeviceTypesList200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;

  @SpeakeasyMetadata({ elemType: shared.DeviceType })
  @Expose({ name: "results" })
  @Type(() => shared.DeviceType)
  results: shared.DeviceType[];
}

export class DcimDeviceTypesListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  dcimDeviceTypesList200ApplicationJSONObject?: DcimDeviceTypesList200ApplicationJSON;
}
