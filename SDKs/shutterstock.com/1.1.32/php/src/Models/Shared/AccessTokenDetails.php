<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AccessTokenDetails - Access token details that are currently associated with this user
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AccessTokenDetails
{
    /**
     * Client ID that is associated with the user
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * Contributor ID that is associated with the user
     * 
     * @var ?string $contributorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('contributor_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $contributorId = null;
    
    /**
     * Customer ID that is associated with the user
     * 
     * @var ?string $customerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('customer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customerId = null;
    
    /**
     * Number of seconds until the access token expires; no expiration if this value is null
     * 
     * @var ?int $expiresIn
     */
	#[\JMS\Serializer\Annotation\SerializedName('expires_in')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $expiresIn = null;
    
    /**
     * Organization ID that is associated with the user
     * 
     * @var ?string $organizationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('organization_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $organizationId = null;
    
    /**
     * Type of access token
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AccessTokenDetailsRealmEnum $realm
     */
	#[\JMS\Serializer\Annotation\SerializedName('realm')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AccessTokenDetailsRealmEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccessTokenDetailsRealmEnum $realm = null;
    
    /**
     * Scopes that this access token provides when used as authentication
     * 
     * @var ?array<string> $scopes
     */
	#[\JMS\Serializer\Annotation\SerializedName('scopes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scopes = null;
    
    /**
     * User ID that is associated with the user
     * 
     * @var ?string $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
    /**
     * User name that is associated with the user
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->clientId = null;
		$this->contributorId = null;
		$this->customerId = null;
		$this->expiresIn = null;
		$this->organizationId = null;
		$this->realm = null;
		$this->scopes = null;
		$this->userId = null;
		$this->username = null;
	}
}
