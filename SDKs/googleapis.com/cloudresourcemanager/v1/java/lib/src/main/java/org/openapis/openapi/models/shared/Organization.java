/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Organization - The root node in the resource hierarchy to which a particular entity's (e.g., company) resources belong.
 */
public class Organization {
    /**
     * Timestamp when the Organization was created. Assigned by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTime")
    public String creationTime;

    public Organization withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * A human-readable string that refers to the Organization in the GCP Console UI. This string is set by the server and cannot be changed. The string will be set to the primary domain (for example, "google.com") of the G Suite customer that owns the organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Organization withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The organization's current lifecycle state. Assigned by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lifecycleState")
    public OrganizationLifecycleStateEnum lifecycleState;

    public Organization withLifecycleState(OrganizationLifecycleStateEnum lifecycleState) {
        this.lifecycleState = lifecycleState;
        return this;
    }
    
    /**
     * Output only. The resource name of the organization. This is the organization's relative path in the API. Its format is "organizations/[organization_id]". For example, "organizations/1234".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Organization withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The entity that owns an Organization. The lifetime of the Organization and all of its descendants are bound to the `OrganizationOwner`. If the `OrganizationOwner` is deleted, the Organization and all its descendants will be deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public OrganizationOwner owner;

    public Organization withOwner(OrganizationOwner owner) {
        this.owner = owner;
        return this;
    }
    
    public Organization(){}
}
