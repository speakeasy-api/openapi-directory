/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetOrganizationInsightMonitoredMediaServersRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationId",
  })
  organizationId: string;
}

export class GetOrganizationInsightMonitoredMediaServers200ApplicationJSON extends SpeakeasyBase {
  /**
   * The IP address (IPv4 only) or hostname of the media server to monitor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bestEffortMonitoringEnabled" })
  bestEffortMonitoringEnabled?: boolean;

  /**
   * Monitored media server id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The name of the VoIP provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class GetOrganizationInsightMonitoredMediaServersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({
    elemType: GetOrganizationInsightMonitoredMediaServers200ApplicationJSON,
  })
  getOrganizationInsightMonitoredMediaServers200ApplicationJSONObjects?: GetOrganizationInsightMonitoredMediaServers200ApplicationJSON[];
}
