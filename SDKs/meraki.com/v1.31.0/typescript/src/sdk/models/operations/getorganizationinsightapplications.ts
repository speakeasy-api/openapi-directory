/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetOrganizationInsightApplicationsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationId",
  })
  organizationId: string;
}

export class GetOrganizationInsightApplications200ApplicationJSONThresholdsByNetwork extends SpeakeasyBase {
  /**
   * Number of useful information bits delivered over a network per unit of time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "goodput" })
  goodput?: number;

  /**
   * Network identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "networkId" })
  networkId?: string;

  /**
   * Duration of the response, in milliseconds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "responseDuration" })
  responseDuration?: number;
}

/**
 * Thresholds defined by a user or Meraki models for each application
 */
export class GetOrganizationInsightApplications200ApplicationJSONThresholds extends SpeakeasyBase {
  /**
   * Threshold for each network
   */
  @SpeakeasyMetadata({
    elemType:
      GetOrganizationInsightApplications200ApplicationJSONThresholdsByNetwork,
  })
  @Expose({ name: "byNetwork" })
  @Type(
    () =>
      GetOrganizationInsightApplications200ApplicationJSONThresholdsByNetwork
  )
  byNetwork?: GetOrganizationInsightApplications200ApplicationJSONThresholdsByNetwork[];

  /**
   * Threshold type (static or smart)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class GetOrganizationInsightApplications200ApplicationJSON extends SpeakeasyBase {
  /**
   * Application identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "applicationId" })
  applicationId?: string;

  /**
   * Application name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Thresholds defined by a user or Meraki models for each application
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thresholds" })
  @Type(() => GetOrganizationInsightApplications200ApplicationJSONThresholds)
  thresholds?: GetOrganizationInsightApplications200ApplicationJSONThresholds;
}

export class GetOrganizationInsightApplicationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({
    elemType: GetOrganizationInsightApplications200ApplicationJSON,
  })
  getOrganizationInsightApplications200ApplicationJSONObjects?: GetOrganizationInsightApplications200ApplicationJSON[];
}
