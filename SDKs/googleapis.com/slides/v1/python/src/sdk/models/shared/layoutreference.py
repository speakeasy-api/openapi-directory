"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LayoutReferencePredefinedLayoutEnum(str, Enum):
    r"""Predefined layout."""
    PREDEFINED_LAYOUT_UNSPECIFIED = 'PREDEFINED_LAYOUT_UNSPECIFIED'
    BLANK = 'BLANK'
    CAPTION_ONLY = 'CAPTION_ONLY'
    TITLE = 'TITLE'
    TITLE_AND_BODY = 'TITLE_AND_BODY'
    TITLE_AND_TWO_COLUMNS = 'TITLE_AND_TWO_COLUMNS'
    TITLE_ONLY = 'TITLE_ONLY'
    SECTION_HEADER = 'SECTION_HEADER'
    SECTION_TITLE_AND_DESCRIPTION = 'SECTION_TITLE_AND_DESCRIPTION'
    ONE_COLUMN_TEXT = 'ONE_COLUMN_TEXT'
    MAIN_POINT = 'MAIN_POINT'
    BIG_NUMBER = 'BIG_NUMBER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LayoutReference:
    r"""Slide layout reference. This may reference either: - A predefined layout - One of the layouts in the presentation."""
    
    layout_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('layoutId'), 'exclude': lambda f: f is None }})
    r"""Layout ID: the object ID of one of the layouts in the presentation."""  
    predefined_layout: Optional[LayoutReferencePredefinedLayoutEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predefinedLayout'), 'exclude': lambda f: f is None }})
    r"""Predefined layout."""  
    