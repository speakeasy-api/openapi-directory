/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PutEmployerSecretRequest {
    /**
     * The version of the api to target. Omit or set as &amp;apos;default&amp;apos; to target the current api version.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Api-Version")
    public String apiVersion;

    public PutEmployerSecretRequest withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }
    
    /**
     * The OAuth 1 authorization header. &amp;apos;Auto&amp;apos; enables auto complete.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Authorization")
    public String authorization;

    public PutEmployerSecretRequest withAuthorization(String authorization) {
        this.authorization = authorization;
        return this;
    }
    
    /**
     * The employers' unique identifier. E.g ER001
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=EmployerId")
    public String employerId;

    public PutEmployerSecretRequest withEmployerId(String employerId) {
        this.employerId = employerId;
        return this;
    }
    
    /**
     * The secret unique identifier. E.g ERSEC001
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=SecretId")
    public String secretId;

    public PutEmployerSecretRequest withSecretId(String secretId) {
        this.secretId = secretId;
        return this;
    }
    
    public PutEmployerSecretRequest(@JsonProperty("Api-Version") String apiVersion, @JsonProperty("Authorization") String authorization, @JsonProperty("EmployerId") String employerId, @JsonProperty("SecretId") String secretId) {
        this.apiVersion = apiVersion;
        this.authorization = authorization;
        this.employerId = employerId;
        this.secretId = secretId;
  }
}
