"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldresult as shared_fieldresult
from ..shared import tableresult as shared_tableresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FormRecognitionResult:
    r"""The result of extracting form field values"""
    
    best_match_form_setting_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BestMatchFormSettingName'), 'exclude': lambda f: f is None }})
    r"""Optional; populated when using photo/recognize/form/advanced with the Setting Name of the best-matching highest-relevance form"""  
    diagnostics: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Diagnostics'), 'exclude': lambda f: f is None }})
    r"""Diagnostic images - default is null, enable diagnostics=true to populate this parameter with one image per field"""  
    field_value_extraction_result: Optional[list[shared_fieldresult.FieldResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FieldValueExtractionResult'), 'exclude': lambda f: f is None }})
    r"""Result of form field OCR data extraction"""  
    successful: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Successful'), 'exclude': lambda f: f is None }})
    r"""True if the operation was successful, false otherwise"""  
    table_value_extraction_results: Optional[list[shared_tableresult.TableResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TableValueExtractionResults'), 'exclude': lambda f: f is None }})
    r"""Result of form table OCR data extraction"""  
    