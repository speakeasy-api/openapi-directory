<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class QuoteFxSummaryV3
{
    /**
     * Timestamp of when the quote was created
     * 
     * @var \DateTime $creationTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $creationTime;
    
    /**
     * The timestamp for when the quote will expire
     * 
     * @var ?\DateTime $expiryTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('expiryTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expiryTime = null;
    
    /**
     * Current status of the funding associated with this quote. One of the following values: UNFUNDED, INSTRUCTED, FUNDED
     * 
     * @var string $fundingStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('fundingStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $fundingStatus;
    
    /**
     * The inverse conversion rate (from paymnent currency to source currency)
     * 
     * @var ?float $invertedRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('invertedRate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $invertedRate = null;
    
    /**
     * Valid ISO 4217 3 letter currency code. See the <a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a>ISO specification</a> for details.
     * 
     * @var string $paymentCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $paymentCurrency;
    
    /**
     * The id of the created quote
     * 
     * @var string $quoteId
     */
	#[\JMS\Serializer\Annotation\SerializedName('quoteId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $quoteId;
    
    /**
     * The conversion rate (from the source currency to the payment currency)
     * 
     * @var float $rate
     */
	#[\JMS\Serializer\Annotation\SerializedName('rate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $rate;
    
    /**
     * Valid ISO 4217 3 letter currency code. See the <a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a>ISO specification</a> for details.
     * 
     * @var string $sourceCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceCurrency;
    
    /**
     * Current status of the fx quote. One of the following values: UNQUOTED, QUOTED, EXPIRED, EXECUTED, REJECTED
     * 
     * @var string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $status;
    
    /**
     * The amount (in minor units) that the payee will receive
     * 
     * @var int $totalPaymentAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalPaymentAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $totalPaymentAmount;
    
    /**
     * The amount (in minor units) that will be paid from the source account
     * 
     * @var int $totalSourceAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalSourceAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $totalSourceAmount;
    
	public function __construct()
	{
		$this->creationTime = new \DateTime();
		$this->expiryTime = null;
		$this->fundingStatus = "";
		$this->invertedRate = null;
		$this->paymentCurrency = "";
		$this->quoteId = "";
		$this->rate = 0;
		$this->sourceCurrency = "";
		$this->status = "";
		$this->totalPaymentAmount = 0;
		$this->totalSourceAmount = 0;
	}
}
