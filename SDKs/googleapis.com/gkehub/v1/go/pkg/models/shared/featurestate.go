// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FeatureStateCodeEnum - The high-level, machine-readable status of this Feature.
type FeatureStateCodeEnum string

const (
	FeatureStateCodeEnumCodeUnspecified FeatureStateCodeEnum = "CODE_UNSPECIFIED"
	FeatureStateCodeEnumOk              FeatureStateCodeEnum = "OK"
	FeatureStateCodeEnumWarning         FeatureStateCodeEnum = "WARNING"
	FeatureStateCodeEnumError           FeatureStateCodeEnum = "ERROR"
)

func (e *FeatureStateCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CODE_UNSPECIFIED":
		fallthrough
	case "OK":
		fallthrough
	case "WARNING":
		fallthrough
	case "ERROR":
		*e = FeatureStateCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FeatureStateCodeEnum: %s", s)
	}
}

// FeatureState - FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
type FeatureState struct {
	// The high-level, machine-readable status of this Feature.
	Code *FeatureStateCodeEnum `json:"code,omitempty"`
	// A human-readable description of the current status.
	Description *string `json:"description,omitempty"`
	// The time this status and any related Feature-specific details were updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}
