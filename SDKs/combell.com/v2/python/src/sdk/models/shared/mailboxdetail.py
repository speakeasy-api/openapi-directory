"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import autoforward as shared_autoforward
from ..shared import autoreply as shared_autoreply
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MailboxDetail:
    r"""Success"""
    
    actual_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actual_size'), 'exclude': lambda f: f is None }})
    r"""Used size in MB"""  
    auto_forward: Optional[shared_autoforward.AutoForward] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_forward'), 'exclude': lambda f: f is None }})  
    auto_reply: Optional[shared_autoreply.AutoReply] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_reply'), 'exclude': lambda f: f is None }})  
    login: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('login'), 'exclude': lambda f: f is None }})
    r"""Login to connect with the mailbox"""  
    max_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_size'), 'exclude': lambda f: f is None }})
    r"""Maximum size in MB"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    