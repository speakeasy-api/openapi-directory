// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ImportStatusEnum string

const (
	ImportStatusEnumImportInProgress                ImportStatusEnum = "IMPORT_IN_PROGRESS"
	ImportStatusEnumImportComplete                  ImportStatusEnum = "IMPORT_COMPLETE"
	ImportStatusEnumImportCompleteWithErrors        ImportStatusEnum = "IMPORT_COMPLETE_WITH_ERRORS"
	ImportStatusEnumImportFailed                    ImportStatusEnum = "IMPORT_FAILED"
	ImportStatusEnumImportFailedServerLimitExceeded ImportStatusEnum = "IMPORT_FAILED_SERVER_LIMIT_EXCEEDED"
	ImportStatusEnumImportFailedRecordLimitExceeded ImportStatusEnum = "IMPORT_FAILED_RECORD_LIMIT_EXCEEDED"
	ImportStatusEnumDeleteInProgress                ImportStatusEnum = "DELETE_IN_PROGRESS"
	ImportStatusEnumDeleteComplete                  ImportStatusEnum = "DELETE_COMPLETE"
	ImportStatusEnumDeleteFailed                    ImportStatusEnum = "DELETE_FAILED"
	ImportStatusEnumDeleteFailedLimitExceeded       ImportStatusEnum = "DELETE_FAILED_LIMIT_EXCEEDED"
	ImportStatusEnumInternalError                   ImportStatusEnum = "INTERNAL_ERROR"
)

func (e *ImportStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IMPORT_IN_PROGRESS":
		fallthrough
	case "IMPORT_COMPLETE":
		fallthrough
	case "IMPORT_COMPLETE_WITH_ERRORS":
		fallthrough
	case "IMPORT_FAILED":
		fallthrough
	case "IMPORT_FAILED_SERVER_LIMIT_EXCEEDED":
		fallthrough
	case "IMPORT_FAILED_RECORD_LIMIT_EXCEEDED":
		fallthrough
	case "DELETE_IN_PROGRESS":
		fallthrough
	case "DELETE_COMPLETE":
		fallthrough
	case "DELETE_FAILED":
		fallthrough
	case "DELETE_FAILED_LIMIT_EXCEEDED":
		fallthrough
	case "INTERNAL_ERROR":
		*e = ImportStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ImportStatusEnum: %s", s)
	}
}
