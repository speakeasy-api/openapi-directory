/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ViasAddress } from "./viasaddress";
import { ViasName } from "./viasname";
import { ViasPersonalData } from "./viaspersonaldata";
import { ViasPhoneNumber } from "./viasphonenumber";
import { Expose, Type } from "class-transformer";

/**
 * Specifies how the person is associated with the account holder.
 *
 * @remarks
 *
 * Possible values:
 *
 * * **Owner**: Individuals who directly or indirectly own 25% or more of a company.
 *
 * * **Controller**: Individuals who are members of senior management staff responsible for managing a company or organization.
 */
export enum ShareholderContactShareholderTypeEnum {
  Controller = "Controller",
  Owner = "Owner",
  Signatory = "Signatory",
}

export class ShareholderContact extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => ViasAddress)
  address?: ViasAddress;

  /**
   * The e-mail address of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The phone number of the person provided as a single string.  It will be handled as a landline phone.
   *
   * @remarks
   * Examples: "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fullPhoneNumber" })
  fullPhoneNumber?: string;

  /**
   * Job title of the person. Required when the `shareholderType` is **Controller**.
   *
   * @remarks
   *
   * Example values: **Chief Executive Officer**, **Chief Financial Officer**, **Chief Operating Officer**, **President**, **Vice President**, **Executive President**, **Managing Member**, **Partner**, **Treasurer**, **Director**, or **Other**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobTitle" })
  jobTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  @Type(() => ViasName)
  name?: ViasName;

  @SpeakeasyMetadata()
  @Expose({ name: "personalData" })
  @Type(() => ViasPersonalData)
  personalData?: ViasPersonalData;

  @SpeakeasyMetadata()
  @Expose({ name: "phoneNumber" })
  @Type(() => ViasPhoneNumber)
  phoneNumber?: ViasPhoneNumber;

  /**
   * The unique identifier (UUID) of the shareholder entry.
   *
   * @remarks
   * >**If, during an Account Holder create or update request, this field is left blank (but other fields provided), a new Shareholder will be created with a procedurally-generated UUID.**
   *
   * >**If, during an Account Holder create request, a UUID is provided, the creation of Account Holder will fail with a validation Error..**
   *
   * >**If, during an Account Holder update request, a UUID that is not correlated with an existing Shareholder is provided, the update of the Shareholder will fail.**
   *
   * >**If, during an Account Holder update request, a UUID that is correlated with an existing Shareholder is provided, the existing Shareholder will be updated.**
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shareholderCode" })
  shareholderCode?: string;

  /**
   * Specifies how the person is associated with the account holder.
   *
   * @remarks
   *
   * Possible values:
   *
   * * **Owner**: Individuals who directly or indirectly own 25% or more of a company.
   *
   * * **Controller**: Individuals who are members of senior management staff responsible for managing a company or organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shareholderType" })
  shareholderType?: ShareholderContactShareholderTypeEnum;

  /**
   * The URL of the person's website.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webAddress" })
  webAddress?: string;
}
