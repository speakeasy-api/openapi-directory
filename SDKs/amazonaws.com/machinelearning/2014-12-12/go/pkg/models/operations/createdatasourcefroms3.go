// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateDataSourceFromS3XAmzTargetEnum
type CreateDataSourceFromS3XAmzTargetEnum string

const (
	CreateDataSourceFromS3XAmzTargetEnumAmazonMl20141212CreateDataSourceFromS3 CreateDataSourceFromS3XAmzTargetEnum = "AmazonML_20141212.CreateDataSourceFromS3"
)

func (e *CreateDataSourceFromS3XAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonML_20141212.CreateDataSourceFromS3":
		*e = CreateDataSourceFromS3XAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDataSourceFromS3XAmzTargetEnum: %s", s)
	}
}

type CreateDataSourceFromS3Headers struct {
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateDataSourceFromS3XAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateDataSourceFromS3Request struct {
	Headers CreateDataSourceFromS3Headers
	Request shared.CreateDataSourceFromS3Input `request:"mediaType=application/json"`
}

type CreateDataSourceFromS3Response struct {
	ContentType string
	// Success
	CreateDataSourceFromS3Output *shared.CreateDataSourceFromS3Output
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServerException
	InternalServerException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
