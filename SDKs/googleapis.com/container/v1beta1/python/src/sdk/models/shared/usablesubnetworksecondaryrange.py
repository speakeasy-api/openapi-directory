"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UsableSubnetworkSecondaryRangeStatusEnum(str, Enum):
    r"""This field is to determine the status of the secondary range programmably."""
    UNKNOWN = 'UNKNOWN'
    UNUSED = 'UNUSED'
    IN_USE_SERVICE = 'IN_USE_SERVICE'
    IN_USE_SHAREABLE_POD = 'IN_USE_SHAREABLE_POD'
    IN_USE_MANAGED_POD = 'IN_USE_MANAGED_POD'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsableSubnetworkSecondaryRange:
    r"""Secondary IP range of a usable subnetwork."""
    
    ip_cidr_range: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipCidrRange'), 'exclude': lambda f: f is None }})
    r"""The range of IP addresses belonging to this subnetwork secondary range."""  
    range_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rangeName'), 'exclude': lambda f: f is None }})
    r"""The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance."""  
    status: Optional[UsableSubnetworkSecondaryRangeStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""This field is to determine the status of the secondary range programmably."""  
    