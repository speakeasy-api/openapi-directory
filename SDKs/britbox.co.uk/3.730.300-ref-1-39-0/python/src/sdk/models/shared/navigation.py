"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import naventry as shared_naventry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Navigation:
    
    header: list[shared_naventry.NavEntry] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('header') }})
    r"""The header navigation."""  
    account: Optional[shared_naventry.NavEntry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account'), 'exclude': lambda f: f is None }})  
    copyright: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('copyright'), 'exclude': lambda f: f is None }})
    r"""Copyright information."""  
    custom_fields: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFields'), 'exclude': lambda f: f is None }})
    r"""A map of custom fields defined by a curator for navigation."""  
    footer: Optional[shared_naventry.NavEntry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('footer'), 'exclude': lambda f: f is None }})  
    mobile: Optional[shared_naventry.NavEntry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobile'), 'exclude': lambda f: f is None }})  
    