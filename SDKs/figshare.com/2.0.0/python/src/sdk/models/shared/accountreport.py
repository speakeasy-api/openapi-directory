"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class AccountReportStatusEnum(str, Enum):
    r"""Status of the report"""
    MISSING = 'missing'
    PENDING = 'pending'
    DONE = 'done'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountReport:
    r"""OK. AccountReport created."""
    
    account_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_id') }})
    r"""The ID of the account which generated this report."""  
    created_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_date') }})
    r"""Date when the AccountReport was requested"""  
    download_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download_url') }})
    r"""The download link for the generated XLSX"""  
    group_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_id') }})
    r"""The group ID that was used to filter the report, if any."""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""A unique ID for the AccountRecord"""  
    status: AccountReportStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Status of the report"""  
    