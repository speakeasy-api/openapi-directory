/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PermitRestriction {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxAmount")
    public Amount maxAmount;

    public PermitRestriction withMaxAmount(Amount maxAmount) {
        this.maxAmount = maxAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("singleTransactionLimit")
    public Amount singleTransactionLimit;

    public PermitRestriction withSingleTransactionLimit(Amount singleTransactionLimit) {
        this.singleTransactionLimit = singleTransactionLimit;
        return this;
    }
    
    /**
     * Only a single payment can be made using this permit if set to true, otherwise multiple payments are allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("singleUse")
    public Boolean singleUse;

    public PermitRestriction withSingleUse(Boolean singleUse) {
        this.singleUse = singleUse;
        return this;
    }
    
    public PermitRestriction(){}
}
