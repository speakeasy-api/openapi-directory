/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Dataset - A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated.
 */
public class Dataset {
    /**
     * Output only. Timestamp when this dataset was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Dataset withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * User-provided description of the dataset. The description can be up to 25000 characters long.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Dataset withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Required. The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Dataset withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Used to perform consistent read-modify-write updates. If not set, a blind "overwrite" update happens.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public Dataset withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Output only. The number of examples in the dataset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exampleCount")
    public Integer exampleCount;

    public Dataset withExampleCount(Integer exampleCount) {
        this.exampleCount = exampleCount;
        return this;
    }
    
    /**
     * Dataset metadata that is specific to image classification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageClassificationDatasetMetadata")
    public ImageClassificationDatasetMetadata imageClassificationDatasetMetadata;

    public Dataset withImageClassificationDatasetMetadata(ImageClassificationDatasetMetadata imageClassificationDatasetMetadata) {
        this.imageClassificationDatasetMetadata = imageClassificationDatasetMetadata;
        return this;
    }
    
    /**
     * Dataset metadata specific to image object detection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageObjectDetectionDatasetMetadata")
    public java.util.Map<String, Object> imageObjectDetectionDatasetMetadata;

    public Dataset withImageObjectDetectionDatasetMetadata(java.util.Map<String, Object> imageObjectDetectionDatasetMetadata) {
        this.imageObjectDetectionDatasetMetadata = imageObjectDetectionDatasetMetadata;
        return this;
    }
    
    /**
     * Output only. The resource name of the dataset. Form: `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Dataset withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Metadata for a dataset used for AutoML Tables.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tablesDatasetMetadata")
    public TablesDatasetMetadata tablesDatasetMetadata;

    public Dataset withTablesDatasetMetadata(TablesDatasetMetadata tablesDatasetMetadata) {
        this.tablesDatasetMetadata = tablesDatasetMetadata;
        return this;
    }
    
    /**
     * Dataset metadata for classification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textClassificationDatasetMetadata")
    public TextClassificationDatasetMetadata textClassificationDatasetMetadata;

    public Dataset withTextClassificationDatasetMetadata(TextClassificationDatasetMetadata textClassificationDatasetMetadata) {
        this.textClassificationDatasetMetadata = textClassificationDatasetMetadata;
        return this;
    }
    
    /**
     * Dataset metadata that is specific to text extraction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textExtractionDatasetMetadata")
    public java.util.Map<String, Object> textExtractionDatasetMetadata;

    public Dataset withTextExtractionDatasetMetadata(java.util.Map<String, Object> textExtractionDatasetMetadata) {
        this.textExtractionDatasetMetadata = textExtractionDatasetMetadata;
        return this;
    }
    
    /**
     * Dataset metadata for text sentiment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textSentimentDatasetMetadata")
    public TextSentimentDatasetMetadata textSentimentDatasetMetadata;

    public Dataset withTextSentimentDatasetMetadata(TextSentimentDatasetMetadata textSentimentDatasetMetadata) {
        this.textSentimentDatasetMetadata = textSentimentDatasetMetadata;
        return this;
    }
    
    /**
     * Dataset metadata that is specific to translation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("translationDatasetMetadata")
    public TranslationDatasetMetadata translationDatasetMetadata;

    public Dataset withTranslationDatasetMetadata(TranslationDatasetMetadata translationDatasetMetadata) {
        this.translationDatasetMetadata = translationDatasetMetadata;
        return this;
    }
    
    /**
     * Dataset metadata specific to video classification. All Video Classification datasets are treated as multi label.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoClassificationDatasetMetadata")
    public java.util.Map<String, Object> videoClassificationDatasetMetadata;

    public Dataset withVideoClassificationDatasetMetadata(java.util.Map<String, Object> videoClassificationDatasetMetadata) {
        this.videoClassificationDatasetMetadata = videoClassificationDatasetMetadata;
        return this;
    }
    
    /**
     * Dataset metadata specific to video object tracking.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoObjectTrackingDatasetMetadata")
    public java.util.Map<String, Object> videoObjectTrackingDatasetMetadata;

    public Dataset withVideoObjectTrackingDatasetMetadata(java.util.Map<String, Object> videoObjectTrackingDatasetMetadata) {
        this.videoObjectTrackingDatasetMetadata = videoObjectTrackingDatasetMetadata;
        return this;
    }
    
    public Dataset(){}
}
