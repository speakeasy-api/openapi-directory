/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MultipleValuesSetting } from "./multiplevaluessetting";
import { ObfuscationSetting } from "./obfuscationsetting";
import { SlotValueElicitationSetting } from "./slotvalueelicitationsetting";
import { SubSlotSetting } from "./subslotsetting";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeSlotResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "botId" })
  botId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "botVersion" })
  botVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "intentId" })
  intentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "localeId" })
  localeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "multipleValuesSetting" })
  @Type(() => MultipleValuesSetting)
  multipleValuesSetting?: MultipleValuesSetting;

  @SpeakeasyMetadata()
  @Expose({ name: "obfuscationSetting" })
  @Type(() => ObfuscationSetting)
  obfuscationSetting?: ObfuscationSetting;

  @SpeakeasyMetadata()
  @Expose({ name: "slotId" })
  slotId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slotName" })
  slotName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slotTypeId" })
  slotTypeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subSlotSetting" })
  @Type(() => SubSlotSetting)
  subSlotSetting?: SubSlotSetting;

  @SpeakeasyMetadata()
  @Expose({ name: "valueElicitationSetting" })
  @Type(() => SlotValueElicitationSetting)
  valueElicitationSetting?: SlotValueElicitationSetting;
}
