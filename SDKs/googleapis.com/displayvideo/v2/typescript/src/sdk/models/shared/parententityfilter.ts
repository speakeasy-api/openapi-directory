/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum ParentEntityFilterFileTypeEnum {
  FileTypeUnspecified = "FILE_TYPE_UNSPECIFIED",
  FileTypeCampaign = "FILE_TYPE_CAMPAIGN",
  FileTypeMediaProduct = "FILE_TYPE_MEDIA_PRODUCT",
  FileTypeInsertionOrder = "FILE_TYPE_INSERTION_ORDER",
  FileTypeLineItem = "FILE_TYPE_LINE_ITEM",
  FileTypeAdGroup = "FILE_TYPE_AD_GROUP",
  FileTypeAd = "FILE_TYPE_AD",
}

/**
 * Required. Filter type used to filter fetched entities.
 */
export enum ParentEntityFilterFilterTypeEnum {
  FilterTypeUnspecified = "FILTER_TYPE_UNSPECIFIED",
  FilterTypeNone = "FILTER_TYPE_NONE",
  FilterTypeAdvertiserId = "FILTER_TYPE_ADVERTISER_ID",
  FilterTypeCampaignId = "FILTER_TYPE_CAMPAIGN_ID",
  FilterTypeMediaProductId = "FILTER_TYPE_MEDIA_PRODUCT_ID",
  FilterTypeInsertionOrderId = "FILTER_TYPE_INSERTION_ORDER_ID",
  FilterTypeLineItemId = "FILTER_TYPE_LINE_ITEM_ID",
}

/**
 * A filtering option that filters on selected file types belonging to a chosen set of filter entities.
 */
export class ParentEntityFilter extends SpeakeasyBase {
  /**
   * Required. File types that will be returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileType" })
  fileType?: ParentEntityFilterFileTypeEnum[];

  /**
   * The IDs of the specified filter type. This is used to filter entities to fetch. If filter type is not `FILTER_TYPE_NONE`, at least one ID must be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filterIds" })
  filterIds?: string[];

  /**
   * Required. Filter type used to filter fetched entities.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filterType" })
  filterType?: ParentEntityFilterFilterTypeEnum;
}
