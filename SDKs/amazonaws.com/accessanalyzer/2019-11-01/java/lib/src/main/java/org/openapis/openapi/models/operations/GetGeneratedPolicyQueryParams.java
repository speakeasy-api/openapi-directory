/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetGeneratedPolicyQueryParams {
    /**
     * &lt;p&gt;The level of detail that you want to generate. You can specify whether to generate policies with placeholders for resource ARNs for actions that support resource level granularity in policies.&lt;/p&gt; &lt;p&gt;For example, in the resource section of a policy, you can receive a placeholder such as &lt;code&gt;"Resource":"arn:aws:s3:::${BucketName}"&lt;/code&gt; instead of &lt;code&gt;"*"&lt;/code&gt;.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=includeResourcePlaceholders")
    public Boolean includeResourcePlaceholders;
    public GetGeneratedPolicyQueryParams withIncludeResourcePlaceholders(Boolean includeResourcePlaceholders) {
        this.includeResourcePlaceholders = includeResourcePlaceholders;
        return this;
    }
    
    /**
     * &lt;p&gt;The level of detail that you want to generate. You can specify whether to generate service-level policies. &lt;/p&gt; &lt;p&gt;IAM Access Analyzer uses &lt;code&gt;iam:servicelastaccessed&lt;/code&gt; to identify services that have been used recently to create this service-level template.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=includeServiceLevelTemplate")
    public Boolean includeServiceLevelTemplate;
    public GetGeneratedPolicyQueryParams withIncludeServiceLevelTemplate(Boolean includeServiceLevelTemplate) {
        this.includeServiceLevelTemplate = includeServiceLevelTemplate;
        return this;
    }
    
}
