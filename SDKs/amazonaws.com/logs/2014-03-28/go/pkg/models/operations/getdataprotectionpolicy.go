// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetDataProtectionPolicyXAmzTargetEnum
type GetDataProtectionPolicyXAmzTargetEnum string

const (
	GetDataProtectionPolicyXAmzTargetEnumLogs20140328GetDataProtectionPolicy GetDataProtectionPolicyXAmzTargetEnum = "Logs_20140328.GetDataProtectionPolicy"
)

func (e GetDataProtectionPolicyXAmzTargetEnum) ToPointer() *GetDataProtectionPolicyXAmzTargetEnum {
	return &e
}

func (e *GetDataProtectionPolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Logs_20140328.GetDataProtectionPolicy":
		*e = GetDataProtectionPolicyXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDataProtectionPolicyXAmzTargetEnum: %v", v)
	}
}

type GetDataProtectionPolicyRequest struct {
	GetDataProtectionPolicyRequest shared.GetDataProtectionPolicyRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     GetDataProtectionPolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetDataProtectionPolicyResponse struct {
	ContentType string
	// Success
	GetDataProtectionPolicyResponse *shared.GetDataProtectionPolicyResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// OperationAbortedException
	OperationAbortedException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
}
