/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GcsDestinationConfig - Google Cloud Storage destination configuration
 */
public class GcsDestinationConfig {
    /**
     * AVRO file format configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("avroFileFormat")
    public java.util.Map<String, Object> avroFileFormat;

    public GcsDestinationConfig withAvroFileFormat(java.util.Map<String, Object> avroFileFormat) {
        this.avroFileFormat = avroFileFormat;
        return this;
    }
    
    /**
     * The maximum duration for which new events are added before a file is closed and a new file is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileRotationInterval")
    public String fileRotationInterval;

    public GcsDestinationConfig withFileRotationInterval(String fileRotationInterval) {
        this.fileRotationInterval = fileRotationInterval;
        return this;
    }
    
    /**
     * The maximum file size to be saved in the bucket.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileRotationMb")
    public Integer fileRotationMb;

    public GcsDestinationConfig withFileRotationMb(Integer fileRotationMb) {
        this.fileRotationMb = fileRotationMb;
        return this;
    }
    
    /**
     * File format that data should be written in. Deprecated field (b/169501737) - use file_format instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gcsFileFormat")
    public GcsDestinationConfigGcsFileFormatEnum gcsFileFormat;

    public GcsDestinationConfig withGcsFileFormat(GcsDestinationConfigGcsFileFormatEnum gcsFileFormat) {
        this.gcsFileFormat = gcsFileFormat;
        return this;
    }
    
    /**
     * JSON file format configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jsonFileFormat")
    public JsonFileFormat jsonFileFormat;

    public GcsDestinationConfig withJsonFileFormat(JsonFileFormat jsonFileFormat) {
        this.jsonFileFormat = jsonFileFormat;
        return this;
    }
    
    /**
     * Path inside the Cloud Storage bucket to write data to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;

    public GcsDestinationConfig withPath(String path) {
        this.path = path;
        return this;
    }
    
    public GcsDestinationConfig(){}
}
