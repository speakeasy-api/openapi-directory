/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The value assigned to a feature variation. This structure must contain exactly one field. It can be <code>boolValue</code>, <code>doubleValue</code>, <code>longValue</code>, or <code>stringValue</code>.
 */
export class VariableValue extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "boolValue" })
  boolValue?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "doubleValue" })
  doubleValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "longValue" })
  longValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;
}
