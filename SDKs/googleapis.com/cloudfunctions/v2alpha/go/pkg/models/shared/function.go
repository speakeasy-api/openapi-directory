// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FunctionEnvironmentEnum - Describe whether the function is 1st Gen or 2nd Gen.
type FunctionEnvironmentEnum string

const (
	FunctionEnvironmentEnumEnvironmentUnspecified FunctionEnvironmentEnum = "ENVIRONMENT_UNSPECIFIED"
	FunctionEnvironmentEnumGen1                   FunctionEnvironmentEnum = "GEN_1"
	FunctionEnvironmentEnumGen2                   FunctionEnvironmentEnum = "GEN_2"
)

func (e *FunctionEnvironmentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENVIRONMENT_UNSPECIFIED":
		fallthrough
	case "GEN_1":
		fallthrough
	case "GEN_2":
		*e = FunctionEnvironmentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FunctionEnvironmentEnum: %s", s)
	}
}

// FunctionInput - Describes a Cloud Function that contains user computation executed in response to an event. It encapsulates function and trigger configurations.
type FunctionInput struct {
	// Describes the Build step of the function that builds a container from the given source.
	BuildConfig *BuildConfigInput `json:"buildConfig,omitempty"`
	// User-provided description of a function.
	Description *string `json:"description,omitempty"`
	// Describe whether the function is 1st Gen or 2nd Gen.
	Environment *FunctionEnvironmentEnum `json:"environment,omitempty"`
	// Describes EventTrigger, used to request events to be sent from another service.
	EventTrigger *EventTriggerInput `json:"eventTrigger,omitempty"`
	// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources. It must match the pattern `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
	KmsKeyName *string `json:"kmsKeyName,omitempty"`
	// Labels associated with this Cloud Function.
	Labels map[string]string `json:"labels,omitempty"`
	// A user-defined name of the function. Function names must be unique globally and match pattern `projects/*/locations/*/functions/*`
	Name *string `json:"name,omitempty"`
	// Describes the Service being deployed. Currently Supported : Cloud Run (fully managed). Next tag: 23
	ServiceConfig *ServiceConfigInput `json:"serviceConfig,omitempty"`
}

// FunctionStateEnum - Output only. State of the function.
type FunctionStateEnum string

const (
	FunctionStateEnumStateUnspecified FunctionStateEnum = "STATE_UNSPECIFIED"
	FunctionStateEnumActive           FunctionStateEnum = "ACTIVE"
	FunctionStateEnumFailed           FunctionStateEnum = "FAILED"
	FunctionStateEnumDeploying        FunctionStateEnum = "DEPLOYING"
	FunctionStateEnumDeleting         FunctionStateEnum = "DELETING"
	FunctionStateEnumUnknown          FunctionStateEnum = "UNKNOWN"
)

func (e *FunctionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "FAILED":
		fallthrough
	case "DEPLOYING":
		fallthrough
	case "DELETING":
		fallthrough
	case "UNKNOWN":
		*e = FunctionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FunctionStateEnum: %s", s)
	}
}

// Function - Describes a Cloud Function that contains user computation executed in response to an event. It encapsulates function and trigger configurations.
type Function struct {
	// Describes the Build step of the function that builds a container from the given source.
	BuildConfig *BuildConfig `json:"buildConfig,omitempty"`
	// User-provided description of a function.
	Description *string `json:"description,omitempty"`
	// Describe whether the function is 1st Gen or 2nd Gen.
	Environment *FunctionEnvironmentEnum `json:"environment,omitempty"`
	// Describes EventTrigger, used to request events to be sent from another service.
	EventTrigger *EventTrigger `json:"eventTrigger,omitempty"`
	// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources. It must match the pattern `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
	KmsKeyName *string `json:"kmsKeyName,omitempty"`
	// Labels associated with this Cloud Function.
	Labels map[string]string `json:"labels,omitempty"`
	// A user-defined name of the function. Function names must be unique globally and match pattern `projects/*/locations/*/functions/*`
	Name *string `json:"name,omitempty"`
	// Describes the Service being deployed. Currently Supported : Cloud Run (fully managed). Next tag: 23
	ServiceConfig *ServiceConfig `json:"serviceConfig,omitempty"`
	// Output only. State of the function.
	State *FunctionStateEnum `json:"state,omitempty"`
	// Output only. State Messages for this Cloud Function.
	StateMessages []GoogleCloudFunctionsV2alphaStateMessage `json:"stateMessages,omitempty"`
	// Output only. The last update timestamp of a Cloud Function.
	UpdateTime *string `json:"updateTime,omitempty"`
}
