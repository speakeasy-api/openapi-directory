"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import targettrackingmetricdimension as shared_targettrackingmetricdimension
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TargetTrackingMetric:
    r"""<p>Represents a specific metric.</p> <p>Metric is a property of the <a>TargetTrackingMetricStat</a> object.</p>"""
    
    dimensions: Optional[list[shared_targettrackingmetricdimension.TargetTrackingMetricDimension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Dimensions'), 'exclude': lambda f: f is None }})  
    metric_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MetricName'), 'exclude': lambda f: f is None }})  
    namespace: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Namespace'), 'exclude': lambda f: f is None }})  
    