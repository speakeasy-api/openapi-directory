/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const FetchSyncSyncMapPermissionServerList = [
  "https://preview.twilio.com",
] as const;

export class FetchSyncSyncMapPermissionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class FetchSyncSyncMapPermissionRequest extends SpeakeasyBase {
  /**
   * Arbitrary string identifier representing a user associated with an FPA token, assigned by the developer.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=Identity",
  })
  identity: string;

  /**
   * Identifier of the Sync Map. Either a SID or a unique name.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=MapSid",
  })
  mapSid: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;
}

export class FetchSyncSyncMapPermissionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  previewSyncServiceSyncMapSyncMapPermission?: shared.PreviewSyncServiceSyncMapSyncMapPermission;
}
