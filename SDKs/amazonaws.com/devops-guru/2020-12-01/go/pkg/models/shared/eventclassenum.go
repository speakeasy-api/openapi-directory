// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventClassEnum string

const (
	EventClassEnumInfrastructure EventClassEnum = "INFRASTRUCTURE"
	EventClassEnumDeployment     EventClassEnum = "DEPLOYMENT"
	EventClassEnumSecurityChange EventClassEnum = "SECURITY_CHANGE"
	EventClassEnumConfigChange   EventClassEnum = "CONFIG_CHANGE"
	EventClassEnumSchemaChange   EventClassEnum = "SCHEMA_CHANGE"
)

func (e EventClassEnum) ToPointer() *EventClassEnum {
	return &e
}

func (e *EventClassEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INFRASTRUCTURE":
		fallthrough
	case "DEPLOYMENT":
		fallthrough
	case "SECURITY_CHANGE":
		fallthrough
	case "CONFIG_CHANGE":
		fallthrough
	case "SCHEMA_CHANGE":
		*e = EventClassEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventClassEnum: %v", v)
	}
}
