// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type FlightOfferItineraries struct {
	// duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M for a duration of 2h10m
	Duration *string   `json:"duration,omitempty"`
	Segments []Segment `json:"segments"`
}

type FlightOfferPricingOptions struct {
	// type of fare of the flight-offer
	FareType []PricingOptionsFareTypeEnum `json:"fareType,omitempty"`
	// If true, returns the flight-offers with included checked bags only
	IncludedCheckedBagsOnly *bool `json:"includedCheckedBagsOnly,omitempty"`
	// If true, returns the flight-offers with no penalty fares only
	NoPenaltyFare *bool `json:"noPenaltyFare,omitempty"`
	// If true, returns the flight-offers with no restriction fares only
	NoRestrictionFare *bool `json:"noRestrictionFare,omitempty"`
	// If true, returns the flight-offers with refundable fares only
	RefundableFare *bool `json:"refundableFare,omitempty"`
}

type FlightOfferTravelerPricingFareDetailsBySegmentAdditionalServicesRequest struct {
	// baggageAllowance
	ChargeableCheckedBags *BaggageAllowance `json:"chargeableCheckedBags,omitempty"`
	// seat number
	ChargeableSeatNumber *string `json:"chargeableSeatNumber,omitempty"`
	// Other services to add
	OtherServices []ServiceNameEnum `json:"otherServices,omitempty"`
}

type FlightOfferTravelerPricingFareDetailsBySegmentAllotmentDetails struct {
	TourName      *string `json:"tourName,omitempty"`
	TourReference *string `json:"tourReference,omitempty"`
}

// FlightOfferTravelerPricingFareDetailsBySegment - Fare details of the segment
type FlightOfferTravelerPricingFareDetailsBySegment struct {
	AdditionalServices *FlightOfferTravelerPricingFareDetailsBySegmentAdditionalServicesRequest `json:"additionalServices,omitempty"`
	AllotmentDetails   *FlightOfferTravelerPricingFareDetailsBySegmentAllotmentDetails          `json:"allotmentDetails,omitempty"`
	// The name of the Fare Family corresponding to the fares. Only for the GDS provider and if the airline has fare families filled
	BrandedFare *string `json:"brandedFare,omitempty"`
	// quality of service offered in the cabin where the seat is located in this flight. Economy, premium economy, business or first class
	Cabin *TravelClassEnum `json:"cabin,omitempty"`
	// The code of the booking class, a.k.a. class of service or Reservations/Booking Designator (RBD)
	Class *string `json:"class,omitempty"`
	// Fare basis specifying the rules of a fare. Usually, though not always, is composed of the booking class code followed by a set of letters and digits representing other characteristics of the ticket, such as refundability, minimum stay requirements, discounts or special promotional elements.
	FareBasis *string `json:"fareBasis,omitempty"`
	// baggageAllowance
	IncludedCheckedBags *BaggageAllowance `json:"includedCheckedBags,omitempty"`
	// True if the corresponding booking class is in an allotment
	IsAllotment *bool `json:"isAllotment,omitempty"`
	// Id of the segment
	SegmentID string `json:"segmentId"`
	// slice and Dice indicator, such as Local Availability, Sub OnD(Origin and Destination) 1 Availability and Sub OnD 2 Availability
	SliceDiceIndicator *SliceDiceIndicatorEnum `json:"sliceDiceIndicator,omitempty"`
}

type FlightOfferTravelerPricing struct {
	// if type="HELD_INFANT", corresponds to the adult traveler's id who will share the seat
	AssociatedAdultID    *string                                          `json:"associatedAdultId,omitempty"`
	FareDetailsBySegment []FlightOfferTravelerPricingFareDetailsBySegment `json:"fareDetailsBySegment"`
	// option specifying a group of fares, which may be valid under certain conditons
	// Can be used to specify special fare discount for a passenger
	//
	FareOption TravelerPricingFareOptionEnum `json:"fareOption"`
	Price      *Price                        `json:"price,omitempty"`
	// Id of the traveler
	TravelerID string `json:"travelerId"`
	// traveler type
	// age restrictions : CHILD < 12y, HELD_INFANT < 2y, SEATED_INFANT < 2y, SENIOR >=60y
	//
	TravelerType TravelerTypeEnum `json:"travelerType"`
}

type FlightOffer struct {
	// BOOK step ONLY - If true, allows to book a PNR without pricing. Only for the source "GDS"
	DisablePricing *bool `json:"disablePricing,omitempty"`
	// Id of the flight offer
	ID string `json:"id"`
	// If true, inform that a ticketing will be required at booking step.
	InstantTicketingRequired *bool                    `json:"instantTicketingRequired,omitempty"`
	Itineraries              []FlightOfferItineraries `json:"itineraries,omitempty"`
	// If booked on the same day as the search (with respect to timezone), this flight offer is guaranteed to be thereafter valid for ticketing until this date (included). Unspecified when it does not make sense for this flight offer (e.g. no control over ticketing once booked). YYYY-MM-DD format, e.g. 2019-06-07
	LastTicketingDate *string `json:"lastTicketingDate,omitempty"`
	// If true, upon completion of the booking, this pricing solution is expected to yield multiple records (a record contains booking information confirmed and stored, typically a Passenger Name Record (PNR), in the provider GDS or system)
	NonHomogeneous *bool `json:"nonHomogeneous,omitempty"`
	// Number of seats bookable in a single request. Can not be higher than 9.
	NumberOfBookableSeats *float64 `json:"numberOfBookableSeats,omitempty"`
	// If true, the flight offer fulfills only one originDestination and has to be combined with other oneWays to complete the whole journey.
	OneWay *bool `json:"oneWay,omitempty"`
	// If true, a payment card is mandatory to book this flight offer
	PaymentCardRequired *bool `json:"paymentCardRequired,omitempty"`
	// price information
	Price          *ExtendedPrice             `json:"price,omitempty"`
	PricingOptions *FlightOfferPricingOptions `json:"pricingOptions,omitempty"`
	// source of the flight offer
	Source *FlightOfferSourceEnum `json:"source,omitempty"`
	// Fare information for each traveler/segment
	TravelerPricings []FlightOfferTravelerPricing `json:"travelerPricings,omitempty"`
	// the resource name
	Type string `json:"type"`
	// This option ensures that the system will only consider these airlines.
	ValidatingAirlineCodes []string `json:"validatingAirlineCodes,omitempty"`
}
