"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import eventdestination as shared_eventdestination
from ..shared import messagetype_enum as shared_messagetype_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfigurationSetInformation:
    r"""Information related to a given configuration set in your Amazon Web Services account."""
    
    configuration_set_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfigurationSetArn') }})  
    configuration_set_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfigurationSetName') }})  
    created_timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedTimestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    event_destinations: list[shared_eventdestination.EventDestination] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EventDestinations') }})  
    default_message_type: Optional[shared_messagetype_enum.MessageTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultMessageType'), 'exclude': lambda f: f is None }})  
    default_sender_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultSenderId'), 'exclude': lambda f: f is None }})  
    