// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GCSPayloadInfoFormatEnum - The import job format.
type GCSPayloadInfoFormatEnum string

const (
	GCSPayloadInfoFormatEnumImportJobFormatUnspecified      GCSPayloadInfoFormatEnum = "IMPORT_JOB_FORMAT_UNSPECIFIED"
	GCSPayloadInfoFormatEnumImportJobFormatCmdb             GCSPayloadInfoFormatEnum = "IMPORT_JOB_FORMAT_CMDB"
	GCSPayloadInfoFormatEnumImportJobFormatRvtoolsXlsx      GCSPayloadInfoFormatEnum = "IMPORT_JOB_FORMAT_RVTOOLS_XLSX"
	GCSPayloadInfoFormatEnumImportJobFormatRvtoolsCsv       GCSPayloadInfoFormatEnum = "IMPORT_JOB_FORMAT_RVTOOLS_CSV"
	GCSPayloadInfoFormatEnumImportJobFormatExportedAwsCsv   GCSPayloadInfoFormatEnum = "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV"
	GCSPayloadInfoFormatEnumImportJobFormatExportedAzureCsv GCSPayloadInfoFormatEnum = "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV"
	GCSPayloadInfoFormatEnumImportJobFormatManualCsv        GCSPayloadInfoFormatEnum = "IMPORT_JOB_FORMAT_MANUAL_CSV"
)

func (e GCSPayloadInfoFormatEnum) ToPointer() *GCSPayloadInfoFormatEnum {
	return &e
}

func (e *GCSPayloadInfoFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IMPORT_JOB_FORMAT_UNSPECIFIED":
		fallthrough
	case "IMPORT_JOB_FORMAT_CMDB":
		fallthrough
	case "IMPORT_JOB_FORMAT_RVTOOLS_XLSX":
		fallthrough
	case "IMPORT_JOB_FORMAT_RVTOOLS_CSV":
		fallthrough
	case "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV":
		fallthrough
	case "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV":
		fallthrough
	case "IMPORT_JOB_FORMAT_MANUAL_CSV":
		*e = GCSPayloadInfoFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GCSPayloadInfoFormatEnum: %v", v)
	}
}

// GCSPayloadInfo - A resource that represents a payload hosted on Google Cloud Storage.
type GCSPayloadInfo struct {
	// The import job format.
	Format *GCSPayloadInfoFormatEnum `json:"format,omitempty"`
	// The payload path in Google Cloud Storage.
	Path *string `json:"path,omitempty"`
}
