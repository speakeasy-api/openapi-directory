/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class ContactsCreateStringSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  sakariAuth: string;
}

/**
 * Determines how existing contacts with matching mobile numbers are treated
 */
export enum ContactsCreateStringMergeStrategyEnum {
  Append = "append",
  Core = "core",
  Remove = "remove",
}

export class ContactsCreateStringRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=text/csv" })
  requestBody?: string;

  /**
   * Account to apply operations to
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=accountId",
  })
  accountId: string;

  /**
   * Determines how existing contacts with matching mobile numbers are treated
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=mergeStrategy",
  })
  mergeStrategy?: ContactsCreateStringMergeStrategyEnum;
}

export class ContactsCreateStringResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * successful operation
   */
  @SpeakeasyMetadata()
  contactsCreateString201ApplicationJSONOneOf?: any;
}
