/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IntervalCollection } from "./intervalcollection";
import { Expose, Type } from "class-transformer";

export class IntervalCollectionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => IntervalCollection)
  data?: IntervalCollection;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requestedCurrency" })
  requestedCurrency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requestedSymbol" })
  requestedSymbol?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requestedUnitOfMeasure" })
  requestedUnitOfMeasure?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;
}
