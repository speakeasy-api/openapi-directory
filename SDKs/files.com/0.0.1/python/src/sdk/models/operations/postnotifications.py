"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import notificationentity as shared_notificationentity
from typing import Optional


@dataclasses.dataclass
class PostNotificationsRequestBody:
    
    group_id: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'group_id' }})
    r"""The ID of the group to notify.  Provide `user_id`, `username` or `group_id`."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'message' }})
    r"""Custom message to include in notification emails."""  
    notify_on_copy: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'notify_on_copy' }})
    r"""If `true`, copying or moving resources into this path will trigger a notification, in addition to just uploads."""  
    notify_on_delete: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'notify_on_delete' }})
    r"""Triggers notification when deleting files from this path"""  
    notify_on_download: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'notify_on_download' }})
    r"""Triggers notification when downloading files from this path"""  
    notify_on_move: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'notify_on_move' }})
    r"""Triggers notification when moving files to this path"""  
    notify_on_upload: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'notify_on_upload' }})
    r"""Triggers notification when uploading new files to this path"""  
    notify_user_actions: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'notify_user_actions' }})
    r"""If `true` actions initiated by the user will still result in a notification"""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'path' }})
    r"""Path"""  
    recursive: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'recursive' }})
    r"""If `true`, enable notifications for each subfolder in this path"""  
    send_interval: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'send_interval' }})
    r"""The time interval that notifications are aggregated by.  Can be `five_minutes`, `fifteen_minutes`, `hourly`, or `daily`."""  
    trigger_by_share_recipients: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'trigger_by_share_recipients' }})
    r"""Notify when actions are performed by a share recipient?"""  
    triggering_filenames: Optional[list[str]] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'triggering_filenames' }})
    r"""Array of filenames (possibly with wildcards) to match for action path"""  
    triggering_group_ids: Optional[list[int]] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'triggering_group_ids' }})
    r"""Only notify on actions made by a member of one of the specified groups"""  
    triggering_user_ids: Optional[list[int]] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'triggering_user_ids' }})
    r"""Only notify on actions made one of the specified users"""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'user_id' }})
    r"""The id of the user to notify. Provide `user_id`, `username` or `group_id`."""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'username' }})
    r"""The username of the user to notify.  Provide `user_id`, `username` or `group_id`."""  
    

@dataclasses.dataclass
class PostNotificationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    notification_entity: Optional[shared_notificationentity.NotificationEntity] = dataclasses.field(default=None)
    r"""The Notifications object."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    