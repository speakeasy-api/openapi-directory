// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AdminUpdateAuthEventFeedbackXAmzTargetEnum
type AdminUpdateAuthEventFeedbackXAmzTargetEnum string

const (
	AdminUpdateAuthEventFeedbackXAmzTargetEnumAwsCognitoIdentityProviderServiceAdminUpdateAuthEventFeedback AdminUpdateAuthEventFeedbackXAmzTargetEnum = "AWSCognitoIdentityProviderService.AdminUpdateAuthEventFeedback"
)

func (e AdminUpdateAuthEventFeedbackXAmzTargetEnum) ToPointer() *AdminUpdateAuthEventFeedbackXAmzTargetEnum {
	return &e
}

func (e *AdminUpdateAuthEventFeedbackXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSCognitoIdentityProviderService.AdminUpdateAuthEventFeedback":
		*e = AdminUpdateAuthEventFeedbackXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AdminUpdateAuthEventFeedbackXAmzTargetEnum: %v", v)
	}
}

type AdminUpdateAuthEventFeedbackRequest struct {
	AdminUpdateAuthEventFeedbackRequest shared.AdminUpdateAuthEventFeedbackRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                      *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                            *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                   *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                          AdminUpdateAuthEventFeedbackXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AdminUpdateAuthEventFeedbackResponse struct {
	// Success
	AdminUpdateAuthEventFeedbackResponse map[string]interface{}
	ContentType                          string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UserNotFoundException
	UserNotFoundException interface{}
	// UserPoolAddOnNotEnabledException
	UserPoolAddOnNotEnabledException interface{}
}
