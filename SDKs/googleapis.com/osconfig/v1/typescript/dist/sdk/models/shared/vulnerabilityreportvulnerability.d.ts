import { SpeakeasyBase } from "../../../internal/utils";
import { VulnerabilityReportVulnerabilityDetails } from "./vulnerabilityreportvulnerabilitydetails";
import { VulnerabilityReportVulnerabilityItem } from "./vulnerabilityreportvulnerabilityitem";
/**
 * A vulnerability affecting the VM instance.
 */
export declare class VulnerabilityReportVulnerability extends SpeakeasyBase {
    /**
     * Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. If there is no available fix, the field is empty. The `inventory_item` value specifies the latest `SoftwarePackage` available to the VM that fixes the vulnerability.
     */
    availableInventoryItemIds?: string[];
    /**
     * The timestamp for when the vulnerability was first detected.
     */
    createTime?: string;
    /**
     * Contains metadata information for the vulnerability. This information is collected from the upstream feed of the operating system.
     */
    details?: VulnerabilityReportVulnerabilityDetails;
    /**
     * Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM. This field displays the inventory items affected by this vulnerability. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. For some distros, this field may be empty.
     */
    installedInventoryItemIds?: string[];
    /**
     * List of items affected by the vulnerability.
     */
    items?: VulnerabilityReportVulnerabilityItem[];
    /**
     * The timestamp for when the vulnerability was last modified.
     */
    updateTime?: string;
}
