/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum PatchSpacesIdFoldersFolderIdPersonsMemberIdRequestBodyGroupsEnum {
  Tax = "tax",
  WealthManagement = "wealth management",
  Social = "social",
  SocialManager = "social manager",
  Purchases = "purchases",
  Sales = "sales",
  Legal = "legal",
  Accounting = "accounting",
}

export enum PatchSpacesIdFoldersFolderIdPersonsMemberIdRequestBodyRoleEnum {
  Collaborator = "collaborator",
  Assistant = "assistant",
  Empty = "empty",
}

/**
 * Customer contract to modify
 */
export class PatchSpacesIdFoldersFolderIdPersonsMemberIdRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Groups" })
  groups?: PatchSpacesIdFoldersFolderIdPersonsMemberIdRequestBodyGroupsEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "IsAdmin" })
  isAdmin?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Role" })
  role?: PatchSpacesIdFoldersFolderIdPersonsMemberIdRequestBodyRoleEnum;
}

export class PatchSpacesIdFoldersFolderIdPersonsMemberIdRequest extends SpeakeasyBase {
  /**
   * Customer contract to modify
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PatchSpacesIdFoldersFolderIdPersonsMemberIdRequestBody;

  /**
   * id of the customer folder
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=folderId",
  })
  folderId: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * memberId of the person
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=memberId",
  })
  memberId: string;
}

export class PatchSpacesIdFoldersFolderIdPersonsMemberIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
