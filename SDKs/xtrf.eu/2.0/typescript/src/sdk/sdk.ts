/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as utils from "../internal/utils";
import { Browser } from "./browser";
import { ClientInvoices } from "./clientinvoices";
import { Clients } from "./clients";
import { CurrencyExchangeRates } from "./currencyexchangerates";
import { Dictionaries } from "./dictionaries";
import { Files } from "./files";
import { JobsClassic } from "./jobsclassic";
import { JobsSmartV2 } from "./jobssmartv2";
import { License } from "./license";
import { Macros } from "./macros";
import * as shared from "./models/shared";
import { ProjectsClassic } from "./projectsclassic";
import { ProjectsSmartV2 } from "./projectssmartv2";
import { QuotesClassic } from "./quotesclassic";
import { QuotesSmartV2 } from "./quotessmartv2";
import { Reports } from "./reports";
import { Subscription } from "./subscription";
import { TasksClassic } from "./tasksclassic";
import { Users } from "./users";
import { VendorInvoices } from "./vendorinvoices";
import { Vendors } from "./vendors";
import axios from "axios";
import { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://presentation.s.xtrf.eu/home-api"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * The security details required to authenticate the SDK
   */
  security?: shared.Security;
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href="/home-api/openapi.json">here</a> <br>
 *
 * @remarks
 *   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here:
 */
export class SDK {
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public browser: Browser;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public clientInvoices: ClientInvoices;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public clients: Clients;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public currencyExchangeRates: CurrencyExchangeRates;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public dictionaries: Dictionaries;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public files: Files;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public jobsClassic: JobsClassic;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public jobsSmartV2: JobsSmartV2;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public license: License;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public macros: Macros;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public projectsClassic: ProjectsClassic;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public projectsSmartV2: ProjectsSmartV2;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public quotesClassic: QuotesClassic;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public quotesSmartV2: QuotesSmartV2;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public reports: Reports;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public subscription: Subscription;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public tasksClassic: TasksClassic;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public users: Users;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public vendorInvoices: VendorInvoices;
  /**
   * To change the description use /examples/TagsDescriptions.json
   */
  public vendors: Vendors;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    if (props?.security) {
      let security: shared.Security = props.security;
      if (!(props.security instanceof utils.SpeakeasyBase))
        security = new shared.Security(props.security);
      this._securityClient = utils.createSecurityClient(
        this._defaultClient,
        security
      );
    } else {
      this._securityClient = this._defaultClient;
    }

    this.browser = new Browser(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.clientInvoices = new ClientInvoices(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.clients = new Clients(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.currencyExchangeRates = new CurrencyExchangeRates(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.dictionaries = new Dictionaries(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.files = new Files(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.jobsClassic = new JobsClassic(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.jobsSmartV2 = new JobsSmartV2(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.license = new License(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.macros = new Macros(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.projectsClassic = new ProjectsClassic(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.projectsSmartV2 = new ProjectsSmartV2(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.quotesClassic = new QuotesClassic(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.quotesSmartV2 = new QuotesSmartV2(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.reports = new Reports(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.subscription = new Subscription(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.tasksClassic = new TasksClassic(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.users = new Users(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.vendorInvoices = new VendorInvoices(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.vendors = new Vendors(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
