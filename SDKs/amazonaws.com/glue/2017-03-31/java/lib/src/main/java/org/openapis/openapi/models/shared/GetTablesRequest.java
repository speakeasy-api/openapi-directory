/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GetTablesRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CatalogId")
    public String catalogId;

    public GetTablesRequest withCatalogId(String catalogId) {
        this.catalogId = catalogId;
        return this;
    }
    
    @JsonProperty("DatabaseName")
    public String databaseName;

    public GetTablesRequest withDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Expression")
    public String expression;

    public GetTablesRequest withExpression(String expression) {
        this.expression = expression;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxResults")
    public Long maxResults;

    public GetTablesRequest withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextToken")
    public String nextToken;

    public GetTablesRequest withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("QueryAsOfTime")
    public OffsetDateTime queryAsOfTime;

    public GetTablesRequest withQueryAsOfTime(OffsetDateTime queryAsOfTime) {
        this.queryAsOfTime = queryAsOfTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TransactionId")
    public String transactionId;

    public GetTablesRequest withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    public GetTablesRequest(@JsonProperty("DatabaseName") String databaseName) {
        this.databaseName = databaseName;
  }
}
