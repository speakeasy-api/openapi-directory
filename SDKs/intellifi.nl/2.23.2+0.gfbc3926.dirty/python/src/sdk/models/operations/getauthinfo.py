"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GetAuthinfo200ApplicationJSONAuthMethodEnum(str, Enum):
    r"""What kind of authentication was used"""
    USER_SESSION = 'user_session'
    INTERNAL = 'internal'
    STATIC_API_KEY = 'static_api_key'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAuthinfo200ApplicationJSONPermissions:
    
    mutate: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mutate'), 'exclude': lambda f: f is None }})
    r"""Whether or not this session can mutate resources"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAuthinfo200ApplicationJSON:
    r"""A JSON object containing the authentication information"""
    
    api_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key_id'), 'exclude': lambda f: f is None }})
    r"""Reference to the static API key (/api/keys) used to authenticate this request (when auth_method=static_api_key)"""  
    auth_method: Optional[GetAuthinfo200ApplicationJSONAuthMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auth_method'), 'exclude': lambda f: f is None }})
    r"""What kind of authentication was used"""  
    authenticated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authenticated'), 'exclude': lambda f: f is None }})
    r"""Whether or not you are authenticated"""  
    permissions: Optional[GetAuthinfo200ApplicationJSONPermissions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions'), 'exclude': lambda f: f is None }})  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""Url to the individual resource."""  
    user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_id'), 'exclude': lambda f: f is None }})
    r"""Reference to the user account (/api/users) used to authenticate this request (when auth_method=user_session)"""  
    

@dataclasses.dataclass
class GetAuthinfoResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_authinfo_200_application_json_object: Optional[GetAuthinfo200ApplicationJSON] = dataclasses.field(default=None)
    r"""A JSON object containing the authentication information"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    