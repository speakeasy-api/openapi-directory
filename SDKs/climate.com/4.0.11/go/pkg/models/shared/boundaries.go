// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BoundariesTypeEnum string

const (
	BoundariesTypeEnumFeatureCollection BoundariesTypeEnum = "FeatureCollection"
)

func (e BoundariesTypeEnum) ToPointer() *BoundariesTypeEnum {
	return &e
}

func (e *BoundariesTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FeatureCollection":
		*e = BoundariesTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BoundariesTypeEnum: %v", v)
	}
}

// Boundaries - A batch of boundary results
type Boundaries struct {
	Features []Boundary         `json:"features"`
	Type     BoundariesTypeEnum `json:"type"`
}
