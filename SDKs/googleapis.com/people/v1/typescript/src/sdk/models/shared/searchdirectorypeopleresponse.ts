/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Person } from "./person";
import { Expose, Type } from "class-transformer";

/**
 * The response to a request for people in the authenticated user's domain directory that match the specified query.
 */
export class SearchDirectoryPeopleResponse extends SpeakeasyBase {
  /**
   * A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The list of people in the domain directory that match the query.
   */
  @SpeakeasyMetadata({ elemType: Person })
  @Expose({ name: "people" })
  @Type(() => Person)
  people?: Person[];

  /**
   * The total number of items in the list without pagination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalSize" })
  totalSize?: number;
}
