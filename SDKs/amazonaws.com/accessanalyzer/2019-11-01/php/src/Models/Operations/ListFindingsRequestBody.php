<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class ListFindingsRequestBody
{
    /**
     * The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources">ARN of the analyzer</a> to retrieve findings from.
     * 
     * @var string $analyzerArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('analyzerArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $analyzerArn;
    
    /**
     * A filter to match for the findings to return.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\Criterion> $filter
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\Criterion>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $filter = null;
    
    /**
     * The maximum number of results to return in the response.
     * 
     * @var ?int $maxResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxResults')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxResults = null;
    
    /**
     * A token used for pagination of results returned.
     * 
     * @var ?string $nextToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextToken = null;
    
    /**
     * The criteria used to sort.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListFindingsRequestBodySort $sort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\ListFindingsRequestBodySort')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ListFindingsRequestBodySort $sort = null;
    
	public function __construct()
	{
		$this->analyzerArn = "";
		$this->filter = null;
		$this->maxResults = null;
		$this->nextToken = null;
		$this->sort = null;
	}
}
