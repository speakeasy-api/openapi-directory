<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BankTransferEventListRequest - Defines the request schema for `/bank_transfer/event/list`
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BankTransferEventListRequest
{
    /**
     * The account ID to get events for all transactions to/from an account.
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * Plaidâ€™s unique identifier for a bank transfer.
     * 
     * @var ?string $bankTransferId
     */
	#[\JMS\Serializer\Annotation\SerializedName('bank_transfer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankTransferId = null;
    
    /**
     * The type of bank transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into your origination account; a `credit` indicates a transfer of money out of your origination account.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BankTransferEventListBankTransferTypeEnum $bankTransferType
     */
	#[\JMS\Serializer\Annotation\SerializedName('bank_transfer_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BankTransferEventListBankTransferTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BankTransferEventListBankTransferTypeEnum $bankTransferType = null;
    
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * The maximum number of bank transfer events to return. If the number of events matching the above parameters is greater than `count`, the most recent events will be returned.
     * 
     * @var ?int $count
     */
	#[\JMS\Serializer\Annotation\SerializedName('count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $count = null;
    
    /**
     * Indicates the direction of the transfer: `outbound`: for API-initiated transfers
     * 
     * `inbound`: for payments received by the FBO account.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BankTransferEventListDirectionEnum $direction
     */
	#[\JMS\Serializer\Annotation\SerializedName('direction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BankTransferEventListDirectionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BankTransferEventListDirectionEnum $direction = null;
    
    /**
     * The end datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
     * 
     * @var ?\DateTime $endDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('end_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $endDate = null;
    
    /**
     * Filter events by event type.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BankTransferEventTypeEnum> $eventTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_types')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\BankTransferEventTypeEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $eventTypes = null;
    
    /**
     * The offset into the list of bank transfer events. When `count`=25 and `offset`=0, the first 25 events will be returned. When `count`=25 and `offset`=25, the next 25 bank transfer events will be returned.
     * 
     * @var ?int $offset
     */
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $offset = null;
    
    /**
     * The origination account ID to get events for transfers from a specific origination account.
     * 
     * @var ?string $originationAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('origination_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originationAccountId = null;
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * 
     * @var ?string $secret
     */
	#[\JMS\Serializer\Annotation\SerializedName('secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secret = null;
    
    /**
     * The start datetime of bank transfers to list. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
     * 
     * @var ?\DateTime $startDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $startDate = null;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->bankTransferId = null;
		$this->bankTransferType = null;
		$this->clientId = null;
		$this->count = null;
		$this->direction = null;
		$this->endDate = null;
		$this->eventTypes = null;
		$this->offset = null;
		$this->originationAccountId = null;
		$this->secret = null;
		$this->startDate = null;
	}
}
