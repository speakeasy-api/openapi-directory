// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeRuleGroupXAmzTargetEnum
type DescribeRuleGroupXAmzTargetEnum string

const (
	DescribeRuleGroupXAmzTargetEnumNetworkFirewall20201112DescribeRuleGroup DescribeRuleGroupXAmzTargetEnum = "NetworkFirewall_20201112.DescribeRuleGroup"
)

func (e *DescribeRuleGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NetworkFirewall_20201112.DescribeRuleGroup":
		*e = DescribeRuleGroupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeRuleGroupXAmzTargetEnum: %s", s)
	}
}

type DescribeRuleGroupHeaders struct {
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeRuleGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeRuleGroupRequest struct {
	Headers DescribeRuleGroupHeaders
	Request shared.DescribeRuleGroupRequest `request:"mediaType=application/json"`
}

type DescribeRuleGroupResponse struct {
	ContentType string
	// Success
	DescribeRuleGroupResponse *shared.DescribeRuleGroupResponse
	// InternalServerError
	InternalServerError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
