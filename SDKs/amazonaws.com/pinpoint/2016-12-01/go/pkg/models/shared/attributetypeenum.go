// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AttributeTypeEnum string

const (
	AttributeTypeEnumInclusive AttributeTypeEnum = "INCLUSIVE"
	AttributeTypeEnumExclusive AttributeTypeEnum = "EXCLUSIVE"
	AttributeTypeEnumContains  AttributeTypeEnum = "CONTAINS"
	AttributeTypeEnumBefore    AttributeTypeEnum = "BEFORE"
	AttributeTypeEnumAfter     AttributeTypeEnum = "AFTER"
	AttributeTypeEnumOn        AttributeTypeEnum = "ON"
	AttributeTypeEnumBetween   AttributeTypeEnum = "BETWEEN"
)

func (e AttributeTypeEnum) ToPointer() *AttributeTypeEnum {
	return &e
}

func (e *AttributeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INCLUSIVE":
		fallthrough
	case "EXCLUSIVE":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "BEFORE":
		fallthrough
	case "AFTER":
		fallthrough
	case "ON":
		fallthrough
	case "BETWEEN":
		*e = AttributeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AttributeTypeEnum: %v", v)
	}
}
