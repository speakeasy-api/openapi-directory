/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { DataSource } from "./datasource";
import { ImportModeEnum } from "./importmodeenum";
import { Statistics } from "./statistics";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeDatasetImportJobResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DataSize" })
  dataSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DataSource" })
  @Type(() => DataSource)
  dataSource?: DataSource;

  @SpeakeasyMetadata()
  @Expose({ name: "DatasetArn" })
  datasetArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DatasetImportJobArn" })
  datasetImportJobArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DatasetImportJobName" })
  datasetImportJobName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EstimatedTimeRemainingInMinutes" })
  estimatedTimeRemainingInMinutes?: number;

  @SpeakeasyMetadata({ elemType: Statistics })
  @Expose({ name: "FieldStatistics" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, Statistics> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], Statistics);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  fieldStatistics?: Record<string, Statistics>;

  @SpeakeasyMetadata()
  @Expose({ name: "Format" })
  format?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GeolocationFormat" })
  geolocationFormat?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportMode" })
  importMode?: ImportModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeZone" })
  timeZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TimestampFormat" })
  timestampFormat?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UseGeolocationForTimeZone" })
  useGeolocationForTimeZone?: boolean;
}
