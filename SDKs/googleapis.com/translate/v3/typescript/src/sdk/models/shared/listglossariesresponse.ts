/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Glossary } from "./glossary";
import { Expose, Type } from "class-transformer";

/**
 * Response message for ListGlossaries.
 */
export class ListGlossariesResponse extends SpeakeasyBase {
  /**
   * The list of glossaries for a project.
   */
  @SpeakeasyMetadata({ elemType: Glossary })
  @Expose({ name: "glossaries" })
  @Type(() => Glossary)
  glossaries?: Glossary[];

  /**
   * A token to retrieve a page of results. Pass this value in the [ListGlossariesRequest.page_token] field in the subsequent call to `ListGlossaries` method to retrieve the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
