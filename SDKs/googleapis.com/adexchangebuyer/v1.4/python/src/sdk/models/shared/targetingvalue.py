"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import targetingvaluecreativesize as shared_targetingvaluecreativesize
from ..shared import targetingvaluedayparttargeting as shared_targetingvaluedayparttargeting
from ..shared import targetingvaluedemogagecriteria as shared_targetingvaluedemogagecriteria
from ..shared import targetingvaluedemoggendercriteria as shared_targetingvaluedemoggendercriteria
from ..shared import targetingvaluerequestplatformtargeting as shared_targetingvaluerequestplatformtargeting
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TargetingValue:
    
    creative_size_value: Optional[shared_targetingvaluecreativesize.TargetingValueCreativeSize] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeSizeValue'), 'exclude': lambda f: f is None }})
    r"""Next Id: 7"""  
    day_part_targeting_value: Optional[shared_targetingvaluedayparttargeting.TargetingValueDayPartTargeting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayPartTargetingValue'), 'exclude': lambda f: f is None }})  
    demog_age_criteria_value: Optional[shared_targetingvaluedemogagecriteria.TargetingValueDemogAgeCriteria] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('demogAgeCriteriaValue'), 'exclude': lambda f: f is None }})  
    demog_gender_criteria_value: Optional[shared_targetingvaluedemoggendercriteria.TargetingValueDemogGenderCriteria] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('demogGenderCriteriaValue'), 'exclude': lambda f: f is None }})  
    long_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('longValue'), 'exclude': lambda f: f is None }})
    r"""The long value to exclude/include."""  
    request_platform_targeting_value: Optional[shared_targetingvaluerequestplatformtargeting.TargetingValueRequestPlatformTargeting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestPlatformTargetingValue'), 'exclude': lambda f: f is None }})  
    string_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stringValue'), 'exclude': lambda f: f is None }})
    r"""The string value to exclude/include."""  
    