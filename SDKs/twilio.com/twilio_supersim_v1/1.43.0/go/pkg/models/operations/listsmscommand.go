// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListSmsCommandServerList = []string{
	"https://supersim.twilio.com",
}

type ListSmsCommandSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListSmsCommandRequest struct {
	// The direction of the SMS Command. Can be `to_sim` or `from_sim`. The value of `to_sim` is synonymous with the term `mobile terminated`, and `from_sim` is synonymous with the term `mobile originated`.
	Direction *shared.SmsCommandEnumDirectionEnum `queryParam:"style=form,explode=true,name=Direction"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// The SID or unique name of the Sim resource that SMS Command was sent to or from.
	Sim *string `queryParam:"style=form,explode=true,name=Sim"`
	// The status of the SMS Command. Can be: `queued`, `sent`, `delivered`, `received` or `failed`. See the [SMS Command Status Values](https://www.twilio.com/docs/iot/supersim/api/smscommand-resource#status-values) for a description of each.
	Status *shared.SmsCommandEnumStatusEnum `queryParam:"style=form,explode=true,name=Status"`
}

type ListSmsCommandListSmsCommandResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListSmsCommandListSmsCommandResponse - OK
type ListSmsCommandListSmsCommandResponse struct {
	Meta        *ListSmsCommandListSmsCommandResponseMeta `json:"meta,omitempty"`
	SmsCommands []shared.SupersimV1SmsCommand             `json:"sms_commands,omitempty"`
}

type ListSmsCommandResponse struct {
	ContentType string
	// OK
	ListSmsCommandResponse *ListSmsCommandListSmsCommandResponse
	StatusCode             int
	RawResponse            *http.Response
}
