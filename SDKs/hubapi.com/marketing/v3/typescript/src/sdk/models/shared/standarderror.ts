/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorCategory } from "./errorcategory";
import { ErrorDetail } from "./errordetail";
import { Expose, Type } from "class-transformer";

export class StandardError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  @Type(() => ErrorCategory)
  category: ErrorCategory;

  @SpeakeasyMetadata()
  @Expose({ name: "context" })
  context: Record<string, string[]>;

  @SpeakeasyMetadata({ elemType: ErrorDetail })
  @Expose({ name: "errors" })
  @Type(() => ErrorDetail)
  errors: ErrorDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subCategory" })
  subCategory?: Record<string, any>;
}
