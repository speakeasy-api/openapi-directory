// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ListResponseErrorCodeEnum string

const (
	ListResponseErrorCodeEnumErrorCodeUnspecified                 ListResponseErrorCodeEnum = "ERROR_CODE_UNSPECIFIED"
	ListResponseErrorCodeEnumErrorCodeInvalidQuery                ListResponseErrorCodeEnum = "ERROR_CODE_INVALID_QUERY"
	ListResponseErrorCodeEnumErrorCodeFetchError                  ListResponseErrorCodeEnum = "ERROR_CODE_FETCH_ERROR"
	ListResponseErrorCodeEnumErrorCodeFailedSslValidation         ListResponseErrorCodeEnum = "ERROR_CODE_FAILED_SSL_VALIDATION"
	ListResponseErrorCodeEnumErrorCodeRedirect                    ListResponseErrorCodeEnum = "ERROR_CODE_REDIRECT"
	ListResponseErrorCodeEnumErrorCodeTooLarge                    ListResponseErrorCodeEnum = "ERROR_CODE_TOO_LARGE"
	ListResponseErrorCodeEnumErrorCodeMalformedHTTPResponse       ListResponseErrorCodeEnum = "ERROR_CODE_MALFORMED_HTTP_RESPONSE"
	ListResponseErrorCodeEnumErrorCodeWrongContentType            ListResponseErrorCodeEnum = "ERROR_CODE_WRONG_CONTENT_TYPE"
	ListResponseErrorCodeEnumErrorCodeMalformedContent            ListResponseErrorCodeEnum = "ERROR_CODE_MALFORMED_CONTENT"
	ListResponseErrorCodeEnumErrorCodeSecureAssetIncludesInsecure ListResponseErrorCodeEnum = "ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE"
	ListResponseErrorCodeEnumErrorCodeFetchBudgetExhausted        ListResponseErrorCodeEnum = "ERROR_CODE_FETCH_BUDGET_EXHAUSTED"
)

func (e ListResponseErrorCodeEnum) ToPointer() *ListResponseErrorCodeEnum {
	return &e
}

func (e *ListResponseErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERROR_CODE_UNSPECIFIED":
		fallthrough
	case "ERROR_CODE_INVALID_QUERY":
		fallthrough
	case "ERROR_CODE_FETCH_ERROR":
		fallthrough
	case "ERROR_CODE_FAILED_SSL_VALIDATION":
		fallthrough
	case "ERROR_CODE_REDIRECT":
		fallthrough
	case "ERROR_CODE_TOO_LARGE":
		fallthrough
	case "ERROR_CODE_MALFORMED_HTTP_RESPONSE":
		fallthrough
	case "ERROR_CODE_WRONG_CONTENT_TYPE":
		fallthrough
	case "ERROR_CODE_MALFORMED_CONTENT":
		fallthrough
	case "ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE":
		fallthrough
	case "ERROR_CODE_FETCH_BUDGET_EXHAUSTED":
		*e = ListResponseErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListResponseErrorCodeEnum: %v", v)
	}
}

// ListResponse - Response message for the List call.
type ListResponse struct {
	// Human-readable message containing information intended to help end users understand, reproduce and debug the result. The message will be in English and we are currently not planning to offer any translations. Please note that no guarantees are made about the contents or format of this string. Any aspect of it may be subject to change without notice. You should not attempt to programmatically parse this data. For programmatic access, use the error_code field below.
	DebugString *string `json:"debugString,omitempty"`
	// Error codes that describe the result of the List operation.
	ErrorCode []ListResponseErrorCodeEnum `json:"errorCode,omitempty"`
	// From serving time, how much longer the response should be considered valid barring further updates. REQUIRED
	MaxAge *string `json:"maxAge,omitempty"`
	// A list of all the matching statements that have been found.
	Statements []Statement `json:"statements,omitempty"`
}
