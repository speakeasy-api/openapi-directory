/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Count - Count of documents that match the query. The `COUNT(*)` aggregation function operates on the entire document so it does not require a field reference.
 */
public class Count {
    /**
     * Optional. Optional constraint on the maximum number of documents to count. This provides a way to set an upper bound on the number of documents to scan, limiting latency, and cost. Unspecified is interpreted as no bound. High-Level Example: ``` AGGREGATE COUNT_UP_TO(1000) OVER ( SELECT * FROM k ); ``` Requires: * Must be greater than zero when present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upTo")
    public String upTo;

    public Count withUpTo(String upTo) {
        this.upTo = upTo;
        return this;
    }
    
    public Count(){}
}
