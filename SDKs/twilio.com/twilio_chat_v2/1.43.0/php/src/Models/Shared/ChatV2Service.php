<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ChatV2Service - Created
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ChatV2Service
{
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.
     * 
     * @var ?string $accountSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountSid = null;
    
    /**
     * DEPRECATED. The interval in seconds between consumption reports submission batches from client endpoints.
     * 
     * @var ?int $consumptionReportInterval
     */
	#[\JMS\Serializer\Annotation\SerializedName('consumption_report_interval')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $consumptionReportInterval = null;
    
    /**
     * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     * 
     * @var ?\DateTime $dateCreated
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_created')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $dateCreated = null;
    
    /**
     * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     * 
     * @var ?\DateTime $dateUpdated
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_updated')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $dateUpdated = null;
    
    /**
     * The channel role assigned to a channel creator when they join a new channel. See the [Role resource](https://www.twilio.com/docs/chat/rest/role-resource) for more info about roles.
     * 
     * @var ?string $defaultChannelCreatorRoleSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('default_channel_creator_role_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultChannelCreatorRoleSid = null;
    
    /**
     * The channel role assigned to users when they are added to a channel. See the [Role resource](https://www.twilio.com/docs/chat/rest/role-resource) for more info about roles.
     * 
     * @var ?string $defaultChannelRoleSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('default_channel_role_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultChannelRoleSid = null;
    
    /**
     * The service role assigned to users when they are added to the service. See the [Role resource](https://www.twilio.com/docs/chat/rest/role-resource) for more info about roles.
     * 
     * @var ?string $defaultServiceRoleSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('default_service_role_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultServiceRoleSid = null;
    
    /**
     * The string that you assigned to describe the resource.
     * 
     * @var ?string $friendlyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('friendly_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $friendlyName = null;
    
    /**
     * An object that describes the limits of the service instance. The `limits` object contains  `channel_members` to describe the members/channel limit and `user_channels` to describe the channels/user limit. `channel_members` can be 1,000 or less, with a default of 250. `user_channels` can be 1,000 or less, with a default value of 100.
     * 
     * @var mixed $limits
     */
	#[\JMS\Serializer\Annotation\SerializedName('limits')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $limits = null;
    
    /**
     * The absolute URLs of the Service's [Channels](https://www.twilio.com/docs/chat/channels), [Roles](https://www.twilio.com/docs/chat/rest/role-resource), [Bindings](https://www.twilio.com/docs/chat/rest/binding-resource), and [Users](https://www.twilio.com/docs/chat/rest/user-resource).
     * 
     * @var ?array<string, mixed> $links
     */
	#[\JMS\Serializer\Annotation\SerializedName('links')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $links = null;
    
    /**
     * An object that describes the properties of media that the service supports. The object contains the `size_limit_mb` property, which describes the size of the largest media file in MB; and the `compatibility_message` property, which contains the message text to send when a media message does not have any text.
     * 
     * @var mixed $media
     */
	#[\JMS\Serializer\Annotation\SerializedName('media')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $media = null;
    
    /**
     * The notification configuration for the Service instance. See [Push Notification Configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.
     * 
     * @var mixed $notifications
     */
	#[\JMS\Serializer\Annotation\SerializedName('notifications')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $notifications = null;
    
    /**
     * The number of times to retry a call to the `post_webhook_url` if the request times out (after 5 seconds) or it receives a 429, 503, or 504 HTTP response. The default is 0, which means the call won't be retried.
     * 
     * @var ?int $postWebhookRetryCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('post_webhook_retry_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $postWebhookRetryCount = null;
    
    /**
     * The URL for post-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
     * 
     * @var ?string $postWebhookUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('post_webhook_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postWebhookUrl = null;
    
    /**
     * The number of times to retry a call to the `pre_webhook_url` if the request times out (after 5 seconds) or it receives a 429, 503, or 504 HTTP response. Default retry count is 0 times, which means the call won't be retried.
     * 
     * @var ?int $preWebhookRetryCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('pre_webhook_retry_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $preWebhookRetryCount = null;
    
    /**
     * The URL for pre-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
     * 
     * @var ?string $preWebhookUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('pre_webhook_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $preWebhookUrl = null;
    
    /**
     * Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Service instance. The default is `false`.
     * 
     * @var ?bool $reachabilityEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('reachability_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $reachabilityEnabled = null;
    
    /**
     * Whether the [Message Consumption Horizon](https://www.twilio.com/docs/chat/consumption-horizon) feature is enabled. The default is `true`.
     * 
     * @var ?bool $readStatusEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('read_status_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $readStatusEnabled = null;
    
    /**
     * The unique string that we created to identify the Service resource.
     * 
     * @var ?string $sid
     */
	#[\JMS\Serializer\Annotation\SerializedName('sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sid = null;
    
    /**
     * How long in seconds after a `started typing` event until clients should assume that user is no longer typing, even if no `ended typing` message was received.  The default is 5 seconds.
     * 
     * @var ?int $typingIndicatorTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('typing_indicator_timeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $typingIndicatorTimeout = null;
    
    /**
     * The absolute URL of the Service resource.
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * The list of webhook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
     * 
     * @var ?array<string> $webhookFilters
     */
	#[\JMS\Serializer\Annotation\SerializedName('webhook_filters')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $webhookFilters = null;
    
    /**
     * The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
     * 
     * @var ?string $webhookMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('webhook_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $webhookMethod = null;
    
	public function __construct()
	{
		$this->accountSid = null;
		$this->consumptionReportInterval = null;
		$this->dateCreated = null;
		$this->dateUpdated = null;
		$this->defaultChannelCreatorRoleSid = null;
		$this->defaultChannelRoleSid = null;
		$this->defaultServiceRoleSid = null;
		$this->friendlyName = null;
		$this->limits = null;
		$this->links = null;
		$this->media = null;
		$this->notifications = null;
		$this->postWebhookRetryCount = null;
		$this->postWebhookUrl = null;
		$this->preWebhookRetryCount = null;
		$this->preWebhookUrl = null;
		$this->reachabilityEnabled = null;
		$this->readStatusEnabled = null;
		$this->sid = null;
		$this->typingIndicatorTimeout = null;
		$this->url = null;
		$this->webhookFilters = null;
		$this->webhookMethod = null;
	}
}
