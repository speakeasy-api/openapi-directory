/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GenerateDeviceCameraSnapshotRequestBody {
    /**
     * [optional] If set to "true" the snapshot will be taken at full sensor resolution. This will error if used with timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullframe")
    public Boolean fullframe;

    public GenerateDeviceCameraSnapshotRequestBody withFullframe(Boolean fullframe) {
        this.fullframe = fullframe;
        return this;
    }
    
    /**
     * [optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;

    public GenerateDeviceCameraSnapshotRequestBody withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    public GenerateDeviceCameraSnapshotRequestBody(){}
}
