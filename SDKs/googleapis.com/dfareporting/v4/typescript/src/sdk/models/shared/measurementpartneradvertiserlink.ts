/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * .
 */
export enum MeasurementPartnerAdvertiserLinkLinkStatusEnum {
  MeasurementPartnerUnlinked = "MEASUREMENT_PARTNER_UNLINKED",
  MeasurementPartnerLinked = "MEASUREMENT_PARTNER_LINKED",
  MeasurementPartnerLinkPending = "MEASUREMENT_PARTNER_LINK_PENDING",
  MeasurementPartnerLinkFailure = "MEASUREMENT_PARTNER_LINK_FAILURE",
  MeasurementPartnerLinkOptOut = "MEASUREMENT_PARTNER_LINK_OPT_OUT",
  MeasurementPartnerLinkOptOutPending = "MEASUREMENT_PARTNER_LINK_OPT_OUT_PENDING",
  MeasurementPartnerLinkWrappingPending = "MEASUREMENT_PARTNER_LINK_WRAPPING_PENDING",
  MeasurementPartnerModeChangePending = "MEASUREMENT_PARTNER_MODE_CHANGE_PENDING",
}

/**
 * Measurement partner used for tag wrapping.
 */
export enum MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum {
  None = "NONE",
  IntegralAdScience = "INTEGRAL_AD_SCIENCE",
  DoubleVerify = "DOUBLE_VERIFY",
}

export class MeasurementPartnerAdvertiserLink extends SpeakeasyBase {
  /**
   * .
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkStatus" })
  linkStatus?: MeasurementPartnerAdvertiserLinkLinkStatusEnum;

  /**
   * Measurement partner used for tag wrapping.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "measurementPartner" })
  measurementPartner?: MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum;

  /**
   * .
   */
  @SpeakeasyMetadata()
  @Expose({ name: "partnerAdvertiserId" })
  partnerAdvertiserId?: string;
}
