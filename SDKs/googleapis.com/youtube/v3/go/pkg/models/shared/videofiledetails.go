// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VideoFileDetailsFileTypeEnum - The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded.
type VideoFileDetailsFileTypeEnum string

const (
	VideoFileDetailsFileTypeEnumVideo    VideoFileDetailsFileTypeEnum = "video"
	VideoFileDetailsFileTypeEnumAudio    VideoFileDetailsFileTypeEnum = "audio"
	VideoFileDetailsFileTypeEnumImage    VideoFileDetailsFileTypeEnum = "image"
	VideoFileDetailsFileTypeEnumArchive  VideoFileDetailsFileTypeEnum = "archive"
	VideoFileDetailsFileTypeEnumDocument VideoFileDetailsFileTypeEnum = "document"
	VideoFileDetailsFileTypeEnumProject  VideoFileDetailsFileTypeEnum = "project"
	VideoFileDetailsFileTypeEnumOther    VideoFileDetailsFileTypeEnum = "other"
)

func (e VideoFileDetailsFileTypeEnum) ToPointer() *VideoFileDetailsFileTypeEnum {
	return &e
}

func (e *VideoFileDetailsFileTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "video":
		fallthrough
	case "audio":
		fallthrough
	case "image":
		fallthrough
	case "archive":
		fallthrough
	case "document":
		fallthrough
	case "project":
		fallthrough
	case "other":
		*e = VideoFileDetailsFileTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoFileDetailsFileTypeEnum: %v", v)
	}
}

// VideoFileDetails - Describes original video file properties, including technical details about audio and video streams, but also metadata information like content length, digitization time, or geotagging information.
type VideoFileDetails struct {
	// A list of audio streams contained in the uploaded video file. Each item in the list contains detailed metadata about an audio stream.
	AudioStreams []VideoFileDetailsAudioStream `json:"audioStreams,omitempty"`
	// The uploaded video file's combined (video and audio) bitrate in bits per second.
	BitrateBps *string `json:"bitrateBps,omitempty"`
	// The uploaded video file's container format.
	Container *string `json:"container,omitempty"`
	// The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported: - Date only: YYYY-MM-DD - Naive time: YYYY-MM-DDTHH:MM:SS - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM
	CreationTime *string `json:"creationTime,omitempty"`
	// The length of the uploaded video in milliseconds.
	DurationMs *string `json:"durationMs,omitempty"`
	// The uploaded file's name. This field is present whether a video file or another type of file was uploaded.
	FileName *string `json:"fileName,omitempty"`
	// The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded.
	FileSize *string `json:"fileSize,omitempty"`
	// The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded.
	FileType *VideoFileDetailsFileTypeEnum `json:"fileType,omitempty"`
	// A list of video streams contained in the uploaded video file. Each item in the list contains detailed metadata about a video stream.
	VideoStreams []VideoFileDetailsVideoStream `json:"videoStreams,omitempty"`
}
