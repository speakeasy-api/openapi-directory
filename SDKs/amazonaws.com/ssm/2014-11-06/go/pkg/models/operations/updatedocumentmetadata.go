// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateDocumentMetadataXAmzTargetEnum
type UpdateDocumentMetadataXAmzTargetEnum string

const (
	UpdateDocumentMetadataXAmzTargetEnumAmazonSsmUpdateDocumentMetadata UpdateDocumentMetadataXAmzTargetEnum = "AmazonSSM.UpdateDocumentMetadata"
)

func (e UpdateDocumentMetadataXAmzTargetEnum) ToPointer() *UpdateDocumentMetadataXAmzTargetEnum {
	return &e
}

func (e *UpdateDocumentMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.UpdateDocumentMetadata":
		*e = UpdateDocumentMetadataXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDocumentMetadataXAmzTargetEnum: %v", v)
	}
}

type UpdateDocumentMetadataRequest struct {
	UpdateDocumentMetadataRequest shared.UpdateDocumentMetadataRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    UpdateDocumentMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateDocumentMetadataResponse struct {
	ContentType string
	// InternalServerError
	InternalServerError interface{}
	// InvalidDocument
	InvalidDocument interface{}
	// InvalidDocumentOperation
	InvalidDocumentOperation interface{}
	// InvalidDocumentVersion
	InvalidDocumentVersion interface{}
	StatusCode             int
	RawResponse            *http.Response
	// Success
	UpdateDocumentMetadataResponse map[string]interface{}
}
