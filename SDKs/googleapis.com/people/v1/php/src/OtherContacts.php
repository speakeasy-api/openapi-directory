<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class OtherContacts 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Copies an "Other contact" to a new contact in the user's "myContacts" group Mutate requests for the same user should be sent sequentially to avoid increased latency and failures.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsCopyOtherContactToMyContactsGroupRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsCopyOtherContactToMyContactsGroupSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsCopyOtherContactToMyContactsGroupResponse
     */
	public function peopleOtherContactsCopyOtherContactToMyContactsGroup(
        \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsCopyOtherContactToMyContactsGroupRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsCopyOtherContactToMyContactsGroupSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsCopyOtherContactToMyContactsGroupResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{resourceName}:copyOtherContactToMyContactsGroup', \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsCopyOtherContactToMyContactsGroupRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "copyOtherContactToMyContactsGroupRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsCopyOtherContactToMyContactsGroupRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsCopyOtherContactToMyContactsGroupResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->person = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Person', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List all "Other contacts", that is contacts that are not in a contact group. "Other contacts" are typically auto created contacts from interactions. Sync tokens expire 7 days after the full sync. A request with an expired sync token will get an error with an [google.rpc.ErrorInfo](https://cloud.google.com/apis/design/errors#error_info) with reason "EXPIRED_SYNC_TOKEN". In the case of such an error clients should make a full sync request without a `sync_token`. The first page of a full sync request has an additional quota. If the quota is exceeded, a 429 error will be returned. This quota is fixed and can not be increased. When the `sync_token` is specified, resources deleted since the last sync will be returned as a person with `PersonMetadata.deleted` set to true. When the `page_token` or `sync_token` is specified, all other request parameters must match the first call. Writes may have a propagation delay of several minutes for sync requests. Incremental syncs are not intended for read-after-write use cases. See example usage at [List the user's other contacts that have changed](/people/v1/other-contacts#list_the_users_other_contacts_that_have_changed).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsListResponse
     */
	public function peopleOtherContactsList(
        \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/otherContacts');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listOtherContactsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListOtherContactsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Provides a list of contacts in the authenticated user's other contacts that matches the search query. The query matches on a contact's `names`, `emailAddresses`, and `phoneNumbers` fields that are from the OTHER_CONTACT source. **IMPORTANT**: Before searching, clients should send a warmup request with an empty query to update the cache. See https://developers.google.com/people/v1/other-contacts#search_the_users_other_contacts
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsSearchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsSearchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsSearchResponse
     */
	public function peopleOtherContactsSearch(
        \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsSearchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsSearchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsSearchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/otherContacts:search');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsSearchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PeopleOtherContactsSearchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->searchResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\SearchResponse', 'json');
            }
        }

        return $response;
    }
}