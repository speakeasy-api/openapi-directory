/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListAllPickupPpoints200ApplicationJSON {
    /**
     * Account group ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountGroupId")
    public String accountGroupId;
    public ListAllPickupPpoints200ApplicationJSON withAccountGroupId(String accountGroupId) {
        this.accountGroupId = accountGroupId;
        return this;
    }
    
    /**
     * Account owner ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountOwnerId")
    public String accountOwnerId;
    public ListAllPickupPpoints200ApplicationJSON withAccountOwnerId(String accountOwnerId) {
        this.accountOwnerId = accountOwnerId;
        return this;
    }
    
    /**
     * Account owner name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountOwnerName")
    public String accountOwnerName;
    public ListAllPickupPpoints200ApplicationJSON withAccountOwnerName(String accountOwnerName) {
        this.accountOwnerName = accountOwnerName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public ListAllPickupPpoints200ApplicationJSONAddress address;
    public ListAllPickupPpoints200ApplicationJSON withAddress(ListAllPickupPpoints200ApplicationJSONAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * Business hours information for each day of the week.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("businessHours")
    public ListAllPickupPpoints200ApplicationJSONBusinessHours[] businessHours;
    public ListAllPickupPpoints200ApplicationJSON withBusinessHours(ListAllPickupPpoints200ApplicationJSONBusinessHours[] businessHours) {
        this.businessHours = businessHours;
        return this;
    }
    
    /**
     * Pickup point description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ListAllPickupPpoints200ApplicationJSON withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Distance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distance")
    public Double distance;
    public ListAllPickupPpoints200ApplicationJSON withDistance(Double distance) {
        this.distance = distance;
        return this;
    }
    
    /**
     * Formated address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formatted_address")
    public String formattedAddress;
    public ListAllPickupPpoints200ApplicationJSON withFormattedAddress(String formattedAddress) {
        this.formattedAddress = formattedAddress;
        return this;
    }
    
    /**
     * Pickup point ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ListAllPickupPpoints200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Instructions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instructions")
    public String instructions;
    public ListAllPickupPpoints200ApplicationJSON withInstructions(String instructions) {
        this.instructions = instructions;
        return this;
    }
    
    /**
     * Indicates whether pickup point is active.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isActive")
    public Boolean isActive;
    public ListAllPickupPpoints200ApplicationJSON withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    /**
     * Indicates whether pickup point is third party.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isThirdPartyPickup")
    public Boolean isThirdPartyPickup;
    public ListAllPickupPpoints200ApplicationJSON withIsThirdPartyPickup(Boolean isThirdPartyPickup) {
        this.isThirdPartyPickup = isThirdPartyPickup;
        return this;
    }
    
    /**
     * Pickup point name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ListAllPickupPpoints200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Original ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalId")
    public String originalId;
    public ListAllPickupPpoints200ApplicationJSON withOriginalId(String originalId) {
        this.originalId = originalId;
        return this;
    }
    
    /**
     * Parent account name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentAccountName")
    public String parentAccountName;
    public ListAllPickupPpoints200ApplicationJSON withParentAccountName(String parentAccountName) {
        this.parentAccountName = parentAccountName;
        return this;
    }
    
    /**
     * Holidays which apply for pickup point.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pickupHolidays")
    public String[] pickupHolidays;
    public ListAllPickupPpoints200ApplicationJSON withPickupHolidays(String[] pickupHolidays) {
        this.pickupHolidays = pickupHolidays;
        return this;
    }
    
    /**
     * Seller corresponding to pickup point.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seller")
    public String seller;
    public ListAllPickupPpoints200ApplicationJSON withSeller(String seller) {
        this.seller = seller;
        return this;
    }
    
    /**
     * List of tags.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagsLabel")
    public String[] tagsLabel;
    public ListAllPickupPpoints200ApplicationJSON withTagsLabel(String[] tagsLabel) {
        this.tagsLabel = tagsLabel;
        return this;
    }
    
}
