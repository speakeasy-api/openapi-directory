"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import preparedstatement as shared_preparedstatement
from ..shared import unprocessedpreparedstatementname as shared_unprocessedpreparedstatementname
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchGetPreparedStatementOutput:
    r"""Success"""
    
    prepared_statements: Optional[list[shared_preparedstatement.PreparedStatement]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PreparedStatements'), 'exclude': lambda f: f is None }})  
    unprocessed_prepared_statement_names: Optional[list[shared_unprocessedpreparedstatementname.UnprocessedPreparedStatementName]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnprocessedPreparedStatementNames'), 'exclude': lambda f: f is None }})  
    