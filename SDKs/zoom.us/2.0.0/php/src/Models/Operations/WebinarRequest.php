<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class WebinarRequest
{
    /**
     * Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate), you can retrieve the Occurrence ID from the response of the API call.
     * 
     * @var ?string $occurrenceId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=occurrence_id')]
    public ?string $occurrenceId = null;
    
    /**
     * Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar.
     * 
     * @var ?bool $showPreviousOccurrences
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=show_previous_occurrences')]
    public ?bool $showPreviousOccurrences = null;
    
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON). 
     * 
     * @var int $webinarId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=webinarId')]
    public int $webinarId;
    
	public function __construct()
	{
		$this->occurrenceId = null;
		$this->showPreviousOccurrences = null;
		$this->webinarId = 0;
	}
}
