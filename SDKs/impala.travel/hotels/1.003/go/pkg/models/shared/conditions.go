// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConditionsCancellationPolicyEnum - Type of cancellation policy applicable to the rate
type ConditionsCancellationPolicyEnum string

const (
	ConditionsCancellationPolicyEnumFreeCancellation     ConditionsCancellationPolicyEnum = "FREE_CANCELLATION"
	ConditionsCancellationPolicyEnumFreeCancellation24   ConditionsCancellationPolicyEnum = "FREE_CANCELLATION_24"
	ConditionsCancellationPolicyEnumFreeCancellation48   ConditionsCancellationPolicyEnum = "FREE_CANCELLATION_48"
	ConditionsCancellationPolicyEnumFreeCancellationWeek ConditionsCancellationPolicyEnum = "FREE_CANCELLATION_WEEK"
	ConditionsCancellationPolicyEnumNonRefundable        ConditionsCancellationPolicyEnum = "NON_REFUNDABLE"
	ConditionsCancellationPolicyEnumNull                 ConditionsCancellationPolicyEnum = "null"
)

func (e *ConditionsCancellationPolicyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FREE_CANCELLATION":
		fallthrough
	case "FREE_CANCELLATION_24":
		fallthrough
	case "FREE_CANCELLATION_48":
		fallthrough
	case "FREE_CANCELLATION_WEEK":
		fallthrough
	case "NON_REFUNDABLE":
		fallthrough
	case "null":
		*e = ConditionsCancellationPolicyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConditionsCancellationPolicyEnum: %s", s)
	}
}

// Conditions - Conditions described by the rate plan.
type Conditions struct {
	CancellationDeadline float64 `json:"cancellationDeadline"`
	// Type of cancellation policy applicable to the rate
	CancellationPolicy ConditionsCancellationPolicyEnum `json:"cancellationPolicy"`
}
