"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SurveyPageEnum(str, Enum):
    W = 'w'
    R = 'r'
    S = 's'
    A = 'a'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Survey:
    
    survey_guid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('survey_guid'), 'exclude': lambda f: f is None }})  
    survey_introduction_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('survey_introduction_text'), 'exclude': lambda f: f is None }})  
    survey_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('survey_link'), 'exclude': lambda f: f is None }})  
    survey_page: Optional[SurveyPageEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('survey_page'), 'exclude': lambda f: f is None }})  
    