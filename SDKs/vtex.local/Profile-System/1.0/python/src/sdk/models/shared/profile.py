"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Profile:
    
    document: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document') }})
    r"""Client's document."""  
    document_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentType') }})
    r"""Type of document informed in `document`."""  
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})
    r"""Client's email address."""  
    first_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName') }})
    r"""Client's first name."""  
    last_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName') }})
    r"""Client's last name."""  
    birth_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('birthDate'), 'exclude': lambda f: f is None }})
    r"""Client's birth date in ISO 8601 format."""  
    