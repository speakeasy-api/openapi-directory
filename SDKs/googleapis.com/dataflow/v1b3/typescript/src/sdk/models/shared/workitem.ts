/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MapTask } from "./maptask";
import { Package } from "./package";
import { SeqMapTask } from "./seqmaptask";
import { ShellTask } from "./shelltask";
import { SourceOperationRequest } from "./sourceoperationrequest";
import { StreamingComputationTask } from "./streamingcomputationtask";
import { StreamingConfigTask } from "./streamingconfigtask";
import { StreamingSetupTask } from "./streamingsetuptask";
import { Expose, Type } from "class-transformer";

/**
 * WorkItem represents basic information about a WorkItem to be executed in the cloud.
 */
export class WorkItem extends SpeakeasyBase {
  /**
   * Work item-specific configuration as an opaque blob.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configuration" })
  configuration?: string;

  /**
   * Identifies this WorkItem.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The initial index to use when reporting the status of the WorkItem.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "initialReportIndex" })
  initialReportIndex?: string;

  /**
   * Identifies the workflow job this WorkItem belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobId" })
  jobId?: string;

  /**
   * Time when the lease on this Work will expire.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "leaseExpireTime" })
  leaseExpireTime?: string;

  /**
   * MapTask consists of an ordered set of instructions, each of which describes one particular low-level operation for the worker to perform in order to accomplish the MapTask's WorkItem. Each instruction must appear in the list before any instructions which depends on its output.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mapTask" })
  @Type(() => MapTask)
  mapTask?: MapTask;

  /**
   * Any required packages that need to be fetched in order to execute this WorkItem.
   */
  @SpeakeasyMetadata({ elemType: Package })
  @Expose({ name: "packages" })
  @Type(() => Package)
  packages?: Package[];

  /**
   * Identifies the cloud project this WorkItem belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "projectId" })
  projectId?: string;

  /**
   * Recommended reporting interval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reportStatusInterval" })
  reportStatusInterval?: string;

  /**
   * Describes a particular function to invoke.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seqMapTask" })
  @Type(() => SeqMapTask)
  seqMapTask?: SeqMapTask;

  /**
   * A task which consists of a shell command for the worker to execute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shellTask" })
  @Type(() => ShellTask)
  shellTask?: ShellTask;

  /**
   * A work item that represents the different operations that can be performed on a user-defined Source specification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceOperationTask" })
  @Type(() => SourceOperationRequest)
  sourceOperationTask?: SourceOperationRequest;

  /**
   * A task which describes what action should be performed for the specified streaming computation ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "streamingComputationTask" })
  @Type(() => StreamingComputationTask)
  streamingComputationTask?: StreamingComputationTask;

  /**
   * A task that carries configuration information for streaming computations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "streamingConfigTask" })
  @Type(() => StreamingConfigTask)
  streamingConfigTask?: StreamingConfigTask;

  /**
   * A task which initializes part of a streaming Dataflow job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "streamingSetupTask" })
  @Type(() => StreamingSetupTask)
  streamingSetupTask?: StreamingSetupTask;
}
