/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ConnectorSource - Successful GET on ConnectorSource resource
 */
public class ConnectorSource {
    /**
     * Authentication mechanism to use
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_mechanism")
    public String authMechanism;

    public ConnectorSource withAuthMechanism(String authMechanism) {
        this.authMechanism = authMechanism;
        return this;
    }
    
    /**
     * This source is not used to synchronize the connection
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("disabled")
    public OffsetDateTime disabled;

    public ConnectorSource withDisabled(OffsetDateTime disabled) {
        this.disabled = disabled;
        return this;
    }
    
    /**
     * Comma separated list of capabilities disabled on this connector source
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabled_capabilities")
    public String disabledCapabilities;

    public ConnectorSource withDisabledCapabilities(String disabledCapabilities) {
        this.disabledCapabilities = disabledCapabilities;
        return this;
    }
    
    /**
     * Name of the source this fallback is for
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fallback")
    public String fallback;

    public ConnectorSource withFallback(String fallback) {
        this.fallback = fallback;
        return this;
    }
    
    /**
     * ID of the connector source
     */
    @JsonProperty("id")
    public Long id;

    public ConnectorSource withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * ID of the connector
     */
    @JsonProperty("id_connector")
    public Long idConnector;

    public ConnectorSource withIdConnector(Long idConnector) {
        this.idConnector = idConnector;
        return this;
    }
    
    @JsonProperty("id_weboob")
    public String idWeboob;

    public ConnectorSource withIdWeboob(String idWeboob) {
        this.idWeboob = idWeboob;
        return this;
    }
    
    /**
     * Name of the source
     */
    @JsonProperty("name")
    public String name;

    public ConnectorSource withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The source priority order for the synchronization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public Long priority;

    public ConnectorSource withPriority(Long priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * last known stability
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stability")
    public String stability;

    public ConnectorSource withStability(String stability) {
        this.stability = stability;
        return this;
    }
    
    public ConnectorSource(@JsonProperty("id") Long id, @JsonProperty("id_connector") Long idConnector, @JsonProperty("id_weboob") String idWeboob, @JsonProperty("name") String name) {
        this.id = id;
        this.idConnector = idConnector;
        this.idWeboob = idWeboob;
        this.name = name;
  }
}
