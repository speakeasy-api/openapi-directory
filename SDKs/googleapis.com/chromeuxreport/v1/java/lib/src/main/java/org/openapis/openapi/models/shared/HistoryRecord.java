/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HistoryRecord - HistoryRecord is a timeseries of Chrome UX Report data. It contains user experience statistics for a single url pattern and a set of dimensions.
 */
public class HistoryRecord {
    /**
     * The collection periods indicate when each of the data points reflected in the time series data in metrics was collected. Note that all the time series share the same collection periods, and it is enforced in the CrUX pipeline that every time series has the same number of data points.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collectionPeriods")
    public CollectionPeriod[] collectionPeriods;

    public HistoryRecord withCollectionPeriods(CollectionPeriod[] collectionPeriods) {
        this.collectionPeriods = collectionPeriods;
        return this;
    }
    
    /**
     * Key defines all the dimensions that identify this record as unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public HistoryKey key;

    public HistoryRecord withKey(HistoryKey key) {
        this.key = key;
        return this;
    }
    
    /**
     * Metrics is the map of user experience time series data available for the record defined in the key field. Metrics are keyed on the metric name. Allowed key values: ["first_contentful_paint", "first_input_delay", "largest_contentful_paint", "cumulative_layout_shift", "experimental_time_to_first_byte", "experimental_interaction_to_next_paint"]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metrics")
    public java.util.Map<String, MetricTimeseries> metrics;

    public HistoryRecord withMetrics(java.util.Map<String, MetricTimeseries> metrics) {
        this.metrics = metrics;
        return this;
    }
    
    public HistoryRecord(){}
}
