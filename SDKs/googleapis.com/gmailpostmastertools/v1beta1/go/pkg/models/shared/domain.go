// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DomainPermissionEnum - User’s permission for this domain. Assigned by the server.
type DomainPermissionEnum string

const (
	DomainPermissionEnumPermissionUnspecified DomainPermissionEnum = "PERMISSION_UNSPECIFIED"
	DomainPermissionEnumOwner                 DomainPermissionEnum = "OWNER"
	DomainPermissionEnumReader                DomainPermissionEnum = "READER"
	DomainPermissionEnumNone                  DomainPermissionEnum = "NONE"
)

func (e *DomainPermissionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PERMISSION_UNSPECIFIED":
		fallthrough
	case "OWNER":
		fallthrough
	case "READER":
		fallthrough
	case "NONE":
		*e = DomainPermissionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DomainPermissionEnum: %s", s)
	}
}

// Domain - A registered domain resource in the Postmaster API.
type Domain struct {
	// Timestamp when the user registered this domain. Assigned by the server.
	CreateTime *string `json:"createTime,omitempty"`
	// The resource name of the Domain. Domain names have the form `domains/{domain_name}`, where domain_name is the fully qualified domain name (i.e., mymail.mydomain.com).
	Name *string `json:"name,omitempty"`
	// User’s permission for this domain. Assigned by the server.
	Permission *DomainPermissionEnum `json:"permission,omitempty"`
}
