"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import testcasescenariostatus_enum as shared_testcasescenariostatus_enum
from ..shared import testcasescenariotype_enum as shared_testcasescenariotype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestCaseScenario:
    r"""Provides test case scenario."""
    
    failure: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failure'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_testcasescenariostatus_enum.TestCaseScenarioStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    system_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('systemMessage'), 'exclude': lambda f: f is None }})  
    test_case_scenario_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testCaseScenarioId'), 'exclude': lambda f: f is None }})  
    test_case_scenario_type: Optional[shared_testcasescenariotype_enum.TestCaseScenarioTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testCaseScenarioType'), 'exclude': lambda f: f is None }})  
    