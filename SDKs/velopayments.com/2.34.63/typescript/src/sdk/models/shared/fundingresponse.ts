/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Funding response
 */
export class FundingResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allocationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  allocationDate: Date;

  /**
   * Funding Allocation Type. One of the following values: AUTOMATIC, MANUAL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allocationType" })
  allocationType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * Valid ISO 4217 3 letter currency code. See the <a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a>ISO specification</a> for details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  @SpeakeasyMetadata()
  @Expose({ name: "detectedFundingRef" })
  detectedFundingRef?: string;

  /**
   * Funding Account Type. One of the following values: FBO, WUBS_DECOUPLED, PRIVATE
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fundingAccountType" })
  fundingAccountType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fundingId" })
  fundingId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hiddenDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  hiddenDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "payorId" })
  payorId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "physicalAccountName" })
  physicalAccountName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceAccountId" })
  sourceAccountId?: string;

  /**
   * Current status of the funding. One of the follwing values: PENDING, UNALLOCATED, ALLOCATED, HIDDEN, RETURNED, RETURNING, BULK_RETURN, OTHER
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string;
}
