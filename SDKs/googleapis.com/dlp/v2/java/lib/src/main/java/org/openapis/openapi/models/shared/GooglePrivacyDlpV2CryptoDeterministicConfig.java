/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2CryptoDeterministicConfig - Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
 */
public class GooglePrivacyDlpV2CryptoDeterministicConfig {
    /**
     * General identifier of a data field in a storage service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    public GooglePrivacyDlpV2FieldId context;

    public GooglePrivacyDlpV2CryptoDeterministicConfig withContext(GooglePrivacyDlpV2FieldId context) {
        this.context = context;
        return this;
    }
    
    /**
     * This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cryptoKey")
    public GooglePrivacyDlpV2CryptoKey cryptoKey;

    public GooglePrivacyDlpV2CryptoDeterministicConfig withCryptoKey(GooglePrivacyDlpV2CryptoKey cryptoKey) {
        this.cryptoKey = cryptoKey;
        return this;
    }
    
    /**
     * Type of information detected by the API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("surrogateInfoType")
    public GooglePrivacyDlpV2InfoType surrogateInfoType;

    public GooglePrivacyDlpV2CryptoDeterministicConfig withSurrogateInfoType(GooglePrivacyDlpV2InfoType surrogateInfoType) {
        this.surrogateInfoType = surrogateInfoType;
        return this;
    }
    
    public GooglePrivacyDlpV2CryptoDeterministicConfig(){}
}
