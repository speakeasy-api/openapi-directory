"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequestCancellationReasonEnum(str, Enum):
    r"""Specifies the reason for the cancellation."""
    CANCELLATION_REASON_UNSPECIFIED = 'CANCELLATION_REASON_UNSPECIFIED'
    CANCELLATION_REASON_FRAUD = 'CANCELLATION_REASON_FRAUD'
    CANCELLATION_REASON_REMORSE = 'CANCELLATION_REASON_REMORSE'
    CANCELLATION_REASON_ACCIDENTAL_PURCHASE = 'CANCELLATION_REASON_ACCIDENTAL_PURCHASE'
    CANCELLATION_REASON_PAST_DUE = 'CANCELLATION_REASON_PAST_DUE'
    CANCELLATION_REASON_ACCOUNT_CLOSED = 'CANCELLATION_REASON_ACCOUNT_CLOSED'
    CANCELLATION_REASON_UPGRADE_DOWNGRADE = 'CANCELLATION_REASON_UPGRADE_DOWNGRADE'
    CANCELLATION_REASON_USER_DELINQUENCY = 'CANCELLATION_REASON_USER_DELINQUENCY'
    CANCELLATION_REASON_OTHER = 'CANCELLATION_REASON_OTHER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequest:
    
    cancel_immediately: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancelImmediately'), 'exclude': lambda f: f is None }})
    r"""Optional. If true, Google will cancel the subscription immediately, and may or may not (based on the contract) issue a prorated refund for the remainder of the billing cycle. Otherwise, Google defers the cancelation at renewal_time, and will not issue a refund."""  
    cancellation_reason: Optional[GoogleCloudPaymentsResellerSubscriptionV1CancelSubscriptionRequestCancellationReasonEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancellationReason'), 'exclude': lambda f: f is None }})
    r"""Specifies the reason for the cancellation."""  
    