/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum AvailableVendorsFilterTypesEnum {
  Translator = "translator",
  Proofreader = "proofreader",
  Both = "both",
}

export class AvailableVendorsFilter extends SpeakeasyBase {
  /**
   * Corporate account ID to filter for vendor authorization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "corporateId" })
  corporateId?: number;

  /**
   * Filter vendors for manual work permission
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manualWorkPermission" })
  manualWorkPermission?: boolean;

  /**
   * Source language code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceLanguage" })
  sourceLanguage?: string;

  /**
   * List of target language codes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetLanguages" })
  targetLanguages?: string[];

  /**
   * List of vendor types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "types" })
  types?: AvailableVendorsFilterTypesEnum[];
}
