<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - Configure and manage your Adyen company and merchant accounts, stores, and payment terminals.
 * 
 * ## Authentication
 * Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.
 * 
 * To access the live endpoints, you need to generate a new API key in your live Customer Area.
 * ## Versioning
 * 
 * Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:
 * 
 * ```text
 * https://management-test.adyen.com/v1/companies/{companyId}/webhooks
 * ```
 * 
 * ## Going live
 * 
 * To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:
 * 
 * ```text
 * https://management-live.adyen.com/v1
 * ```
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 */
class SDK
{
	public const SERVERS = [
		'https://management-test.adyen.com/v1',
	];
  	
	public APICredentialsCompanyLevel $apiCredentialsCompanyLevel;
	
	public APICredentialsMerchantLevel $apiCredentialsMerchantLevel;
	
	public APIKeyCompanyLevel $apiKeyCompanyLevel;
	
	public APIKeyMerchantLevel $apiKeyMerchantLevel;
	
	public AccountCompanyLevel $accountCompanyLevel;
	
	public AccountMerchantLevel $accountMerchantLevel;
	
	public AccountStoreLevel $accountStoreLevel;
	
	public AllowedOriginsCompanyLevel $allowedOriginsCompanyLevel;
	
	public AllowedOriginsMerchantLevel $allowedOriginsMerchantLevel;
	
	public ClientKeyCompanyLevel $clientKeyCompanyLevel;
	
	public ClientKeyMerchantLevel $clientKeyMerchantLevel;
	
	public MyAPICredential $myAPICredential;
	
	public PaymentMethodsMerchantLevel $paymentMethodsMerchantLevel;
	
	public PayoutSettingsMerchantLevel $payoutSettingsMerchantLevel;
	
	public TerminalActionsCompanyLevel $terminalActionsCompanyLevel;
	
	public TerminalActionsTerminalLevel $terminalActionsTerminalLevel;
	
	public TerminalOrdersCompanyLevel $terminalOrdersCompanyLevel;
	
	public TerminalOrdersMerchantLevel $terminalOrdersMerchantLevel;
	
	public TerminalSettingsCompanyLevel $terminalSettingsCompanyLevel;
	
	public TerminalSettingsMerchantLevel $terminalSettingsMerchantLevel;
	
	public TerminalSettingsStoreLevel $terminalSettingsStoreLevel;
	
	public TerminalSettingsTerminalLevel $terminalSettingsTerminalLevel;
	
	public TerminalsTerminalLevel $terminalsTerminalLevel;
	
	public UsersCompanyLevel $usersCompanyLevel;
	
	public UsersMerchantLevel $usersMerchantLevel;
	
	public WebhooksCompanyLevel $webhooksCompanyLevel;
	
	public WebhooksMerchantLevel $webhooksMerchantLevel;
		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
		
		$this->apiCredentialsCompanyLevel = new APICredentialsCompanyLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->apiCredentialsMerchantLevel = new APICredentialsMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->apiKeyCompanyLevel = new APIKeyCompanyLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->apiKeyMerchantLevel = new APIKeyMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->accountCompanyLevel = new AccountCompanyLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->accountMerchantLevel = new AccountMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->accountStoreLevel = new AccountStoreLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->allowedOriginsCompanyLevel = new AllowedOriginsCompanyLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->allowedOriginsMerchantLevel = new AllowedOriginsMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->clientKeyCompanyLevel = new ClientKeyCompanyLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->clientKeyMerchantLevel = new ClientKeyMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->myAPICredential = new MyAPICredential(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->paymentMethodsMerchantLevel = new PaymentMethodsMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->payoutSettingsMerchantLevel = new PayoutSettingsMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->terminalActionsCompanyLevel = new TerminalActionsCompanyLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->terminalActionsTerminalLevel = new TerminalActionsTerminalLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->terminalOrdersCompanyLevel = new TerminalOrdersCompanyLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->terminalOrdersMerchantLevel = new TerminalOrdersMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->terminalSettingsCompanyLevel = new TerminalSettingsCompanyLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->terminalSettingsMerchantLevel = new TerminalSettingsMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->terminalSettingsStoreLevel = new TerminalSettingsStoreLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->terminalSettingsTerminalLevel = new TerminalSettingsTerminalLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->terminalsTerminalLevel = new TerminalsTerminalLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->usersCompanyLevel = new UsersCompanyLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->usersMerchantLevel = new UsersMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->webhooksCompanyLevel = new WebhooksCompanyLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->webhooksMerchantLevel = new WebhooksMerchantLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
	}
}