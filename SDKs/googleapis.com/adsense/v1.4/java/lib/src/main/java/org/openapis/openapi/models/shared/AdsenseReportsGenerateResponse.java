/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AdsenseReportsGenerateResponse - Successful response
 */
public class AdsenseReportsGenerateResponse {
    /**
     * The averages of the report. This is the same length as any other row in the report; cells corresponding to dimension columns are empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("averages")
    public String[] averages;

    public AdsenseReportsGenerateResponse withAverages(String[] averages) {
        this.averages = averages;
        return this;
    }
    
    /**
     * The requested end date in yyyy-mm-dd format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endDate")
    public String endDate;

    public AdsenseReportsGenerateResponse withEndDate(String endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * The header information of the columns requested in the report. This is a list of headers; one for each dimension in the request, followed by one for each metric in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public AdsenseReportsGenerateResponseHeaders[] headers;

    public AdsenseReportsGenerateResponse withHeaders(AdsenseReportsGenerateResponseHeaders[] headers) {
        this.headers = headers;
        return this;
    }
    
    /**
     * Kind this is, in this case adsense#report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public AdsenseReportsGenerateResponse withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The output rows of the report. Each row is a list of cells; one for each dimension in the request, followed by one for each metric in the request. The dimension cells contain strings, and the metric cells contain numbers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rows")
    public String[][] rows;

    public AdsenseReportsGenerateResponse withRows(String[][] rows) {
        this.rows = rows;
        return this;
    }
    
    /**
     * The requested start date in yyyy-mm-dd format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startDate")
    public String startDate;

    public AdsenseReportsGenerateResponse withStartDate(String startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * The total number of rows matched by the report request. Fewer rows may be returned in the response due to being limited by the row count requested or the report row limit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalMatchedRows")
    public String totalMatchedRows;

    public AdsenseReportsGenerateResponse withTotalMatchedRows(String totalMatchedRows) {
        this.totalMatchedRows = totalMatchedRows;
        return this;
    }
    
    /**
     * The totals of the report. This is the same length as any other row in the report; cells corresponding to dimension columns are empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totals")
    public String[] totals;

    public AdsenseReportsGenerateResponse withTotals(String[] totals) {
        this.totals = totals;
        return this;
    }
    
    /**
     * Any warnings associated with generation of the report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warnings")
    public String[] warnings;

    public AdsenseReportsGenerateResponse withWarnings(String[] warnings) {
        this.warnings = warnings;
        return this;
    }
    
    public AdsenseReportsGenerateResponse(){}
}
