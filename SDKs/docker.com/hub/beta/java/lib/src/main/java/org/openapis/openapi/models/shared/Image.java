/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Image {
    /**
     * CPU architecture
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("architecture")
    public String architecture;

    public Image withArchitecture(String architecture) {
        this.architecture = architecture;
        return this;
    }
    
    /**
     * image digest
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("digest")
    public String digest;

    public Image withDigest(String digest) {
        this.digest = digest;
        return this;
    }
    
    /**
     * CPU features
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("features")
    public String features;

    public Image withFeatures(String features) {
        this.features = features;
        return this;
    }
    
    /**
     * datetime of last pull
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_pulled")
    public String lastPulled;

    public Image withLastPulled(String lastPulled) {
        this.lastPulled = lastPulled;
        return this;
    }
    
    /**
     * datetime of last push
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_pushed")
    public String lastPushed;

    public Image withLastPushed(String lastPushed) {
        this.lastPushed = lastPushed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("layers")
    public Layer[] layers;

    public Image withLayers(Layer[] layers) {
        this.layers = layers;
        return this;
    }
    
    /**
     * operating system
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("os")
    public String os;

    public Image withOs(String os) {
        this.os = os;
        return this;
    }
    
    /**
     * OS features
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("os_features")
    public String osFeatures;

    public Image withOsFeatures(String osFeatures) {
        this.osFeatures = osFeatures;
        return this;
    }
    
    /**
     * OS version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("os_version")
    public String osVersion;

    public Image withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }
    
    /**
     * size of the image
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Long size;

    public Image withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * Status of the image
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ImageStatusEnum status;

    public Image withStatus(ImageStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * CPU variant
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variant")
    public String variant;

    public Image withVariant(String variant) {
        this.variant = variant;
        return this;
    }
    
    public Image(){}
}
