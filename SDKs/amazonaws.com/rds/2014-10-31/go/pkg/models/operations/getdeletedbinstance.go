// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteDBInstanceActionEnum
type GETDeleteDBInstanceActionEnum string

const (
	GETDeleteDBInstanceActionEnumDeleteDbInstance GETDeleteDBInstanceActionEnum = "DeleteDBInstance"
)

func (e GETDeleteDBInstanceActionEnum) ToPointer() *GETDeleteDBInstanceActionEnum {
	return &e
}

func (e *GETDeleteDBInstanceActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteDBInstance":
		*e = GETDeleteDBInstanceActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteDBInstanceActionEnum: %v", v)
	}
}

// GETDeleteDBInstanceVersionEnum
type GETDeleteDBInstanceVersionEnum string

const (
	GETDeleteDBInstanceVersionEnumTwoThousandAndFourteen1031 GETDeleteDBInstanceVersionEnum = "2014-10-31"
)

func (e GETDeleteDBInstanceVersionEnum) ToPointer() *GETDeleteDBInstanceVersionEnum {
	return &e
}

func (e *GETDeleteDBInstanceVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2014-10-31":
		*e = GETDeleteDBInstanceVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteDBInstanceVersionEnum: %v", v)
	}
}

type GETDeleteDBInstanceRequest struct {
	Action GETDeleteDBInstanceActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing DB instance.</p> </li> </ul>
	DBInstanceIdentifier string `queryParam:"style=form,explode=true,name=DBInstanceIdentifier"`
	// A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.
	DeleteAutomatedBackups *bool `queryParam:"style=form,explode=true,name=DeleteAutomatedBackups"`
	// <p>The <code>DBSnapshotIdentifier</code> of the new <code>DBSnapshot</code> created when the <code>SkipFinalSnapshot</code> parameter is disabled.</p> <note> <p>If you enable this parameter and also enable SkipFinalShapshot, the command results in an error.</p> </note> <p>This setting doesn't apply to RDS Custom.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters or numbers.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Can't be specified when deleting a read replica.</p> </li> </ul>
	FinalDBSnapshotIdentifier *string `queryParam:"style=form,explode=true,name=FinalDBSnapshotIdentifier"`
	// <p>A value that indicates whether to skip the creation of a final DB snapshot before deleting the instance. If you enable this parameter, RDS doesn't create a DB snapshot. If you don't enable this parameter, RDS creates a DB snapshot before the DB instance is deleted. By default, skip isn't enabled, and the DB snapshot is created.</p> <note> <p>If you don't enable this parameter, you must specify the <code>FinalDBSnapshotIdentifier</code> parameter.</p> </note> <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, RDS can delete the instance only if you enable this parameter.</p> <p>If you delete a read replica or an RDS Custom instance, you must enable this setting.</p> <p>This setting is required for RDS Custom.</p>
	SkipFinalSnapshot *bool                          `queryParam:"style=form,explode=true,name=SkipFinalSnapshot"`
	Version           GETDeleteDBInstanceVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteDBInstanceResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
