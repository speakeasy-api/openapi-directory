/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetSettingTemplateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class GetSettingTemplateRequest extends SpeakeasyBase {
  /**
   * Provide the name of the field to use to filter the response. For example, if you provide "description" as the value of the field, you will get a response similar to the following: {“description”: “template description”}.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=custom_query_fields",
  })
  customQueryFields?: string;

  /**
   * Unique identifier of the template.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=templateId",
  })
  templateId: string;
}

export class GetSettingTemplate200ApplicationXMLPolicyAdHocCallRecording extends SpeakeasyBase {
  /**
   * Allow current extension to record and save calls in the cloud.
   */
  @SpeakeasyMetadata()
  enable?: boolean;

  /**
   * Play a prompt to call participants when the recording has started.
   */
  @SpeakeasyMetadata()
  recordingStartPrompt?: boolean;

  /**
   * Allow call recording transcription.
   */
  @SpeakeasyMetadata()
  recordingTranscription?: boolean;
}

export class GetSettingTemplate200ApplicationXMLPolicyAutoCallRecording extends SpeakeasyBase {
  /**
   * Enable automatic call recording.
   */
  @SpeakeasyMetadata()
  enable?: boolean;

  /**
   * Values: inbound, outbound, both.
   */
  @SpeakeasyMetadata()
  recordingCalls?: string;

  /**
   * Play a prompt to call participants when the recording has started.
   */
  @SpeakeasyMetadata()
  recordingStartPrompt?: boolean;

  /**
   * Allow call recording transcription.
   */
  @SpeakeasyMetadata()
  recordingTranscription?: boolean;
}

export class GetSettingTemplate200ApplicationXMLPolicySms extends SpeakeasyBase {
  /**
   * Allow user to send and receive messages.
   */
  @SpeakeasyMetadata()
  enable?: boolean;

  @SpeakeasyMetadata()
  internationalSms?: boolean;
}

export class GetSettingTemplate200ApplicationXMLPolicyVoicemail extends SpeakeasyBase {
  /**
   * Allow voicemail transcription.
   */
  @SpeakeasyMetadata()
  allowTranscription?: boolean;

  /**
   * Allow current extension to access, receive, or share voicemail.
   */
  @SpeakeasyMetadata()
  enable?: boolean;
}

export class GetSettingTemplate200ApplicationXMLPolicy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  adHocCallRecording?: GetSettingTemplate200ApplicationXMLPolicyAdHocCallRecording;

  @SpeakeasyMetadata()
  autoCallRecording?: GetSettingTemplate200ApplicationXMLPolicyAutoCallRecording;

  @SpeakeasyMetadata()
  sms?: GetSettingTemplate200ApplicationXMLPolicySms;

  @SpeakeasyMetadata()
  voicemail?: GetSettingTemplate200ApplicationXMLPolicyVoicemail;
}

export class GetSettingTemplate200ApplicationXMLProfile extends SpeakeasyBase {
  /**
   * The area code from which the phone account was created.
   */
  @SpeakeasyMetadata()
  areaCode?: string;

  /**
   * Name of the country where the template was created.
   */
  @SpeakeasyMetadata()
  country?: string;
}

/**
 * The type of template being queried. Values: `user`, `group`, `auto receptionist` `common area`,`zr`, `interop`.
 */
export enum GetSettingTemplate200ApplicationXMLTypeEnum {
  User = "user",
  Group = "group",
  AutoReceptionist = "autoReceptionist",
  CommonArea = "commonArea",
  Zr = "zr",
  Interop = "interop",
}

/**
 * When a call is not answered:<br>
 *
 * @remarks
 * 0-Forward to voicemail;<br>
 * 1-Play a message, then disconnect; <br>
 * 9-Disconnect; <br>
 * 26-Forward to External Contacts; <br>
 * 50-Forward to another extension
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursBusinessHourActionEnum {
  Zero = "0",
  One = "1",
  Nine = "9",
  TwentySix = "26",
  Fifty = "50",
}

/**
 * Values:<br>
 *
 * @remarks
 * 1-user,<br>
 * 2-callQueue, <br>
 * 3-autoReceptionist,<br>
 * 4-commonAreaPhone,<br>
 * 5-zoomRoom, <br>
 * 7-sharedLineGroup
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursConnectToOperatorTypeEnum {
  User = "user",
  ZoomRoom = "zoomRoom",
  CommonAreaPhone = "commonAreaPhone",
  AutoReceptionist = "autoReceptionist",
  CallQueue = "callQueue",
  SharedLineGroup = "sharedLineGroup",
}

/**
 * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
 */
export class GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursConnectToOperator extends SpeakeasyBase {
  /**
   * Enable connect to operator.
   */
  @SpeakeasyMetadata()
  enable?: boolean;

  /**
   * Phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Values:<br>
   *
   * @remarks
   * 1-user,<br>
   * 2-callQueue, <br>
   * 3-autoReceptionist,<br>
   * 4-commonAreaPhone,<br>
   * 5-zoomRoom, <br>
   * 7-sharedLineGroup
   */
  @SpeakeasyMetadata()
  type?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursConnectToOperatorTypeEnum;
}

/**
 * Values:<br>
 *
 * @remarks
 * 1-24 Hours,<br>
 * 2-customized hours
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursCustomHoursTypeEnum {
  One = "1",
  Two = "2",
}

/**
 * Values: 1-7 sun-sat
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursCustomHoursWeekdayEnum {
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
  Five = "5",
  Six = "6",
  Seven = "7",
}

export class GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursCustomHours extends SpeakeasyBase {
  /**
   * Values:<br>
   *
   * @remarks
   * hh:mm
   */
  @SpeakeasyMetadata()
  from?: string;

  /**
   * Values:<br>
   *
   * @remarks
   * hh:mm
   */
  @SpeakeasyMetadata()
  to?: string;

  /**
   * Values:<br>
   *
   * @remarks
   * 1-24 Hours,<br>
   * 2-customized hours
   */
  @SpeakeasyMetadata()
  type?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursCustomHoursTypeEnum;

  /**
   * Values: 1-7 sun-sat
   */
  @SpeakeasyMetadata()
  weekday?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursCustomHoursWeekdayEnum;
}

/**
 * Call Handling Ring Mode:<br>
 *
 * @remarks
 * 0-Simultaneous,<br>
 * 1-Sequential
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursRingTypeEnum {
  Zero = "0",
  One = "1",
}

/**
 * Ringing Duration for Each Device in seconds. Values:<br>
 *
 * @remarks
 * 15,20,25,30,35,40,45,50,55,60
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursRingingDurationEnum {
  Fifteen = "15",
  Twenty = "20",
  TwentyFive = "25",
  Thirty = "30",
  ThirtyFive = "35",
  Forty = "40",
  FortyFive = "45",
  Fifty = "50",
  FiftyFive = "55",
  Sixty = "60",
}

/**
 * Values:<br>
 *
 * @remarks
 * 1-24 Hours, 7 Days a Week;<br>
 * 2-Custom Hours
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursTypeEnum {
  One = "1",
  Two = "2",
}

export class GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHours extends SpeakeasyBase {
  /**
   * When a call is not answered:<br>
   *
   * @remarks
   * 0-Forward to voicemail;<br>
   * 1-Play a message, then disconnect; <br>
   * 9-Disconnect; <br>
   * 26-Forward to External Contacts; <br>
   * 50-Forward to another extension
   */
  @SpeakeasyMetadata()
  businessHourAction?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursBusinessHourActionEnum;

  /**
   * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
   */
  @SpeakeasyMetadata()
  connectToOperator?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursConnectToOperator;

  @SpeakeasyMetadata({
    elemType:
      GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursCustomHours,
  })
  customHours?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursCustomHours[];

  /**
   * Call Handling Ring Mode:<br>
   *
   * @remarks
   * 0-Simultaneous,<br>
   * 1-Sequential
   */
  @SpeakeasyMetadata()
  ringType?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursRingTypeEnum;

  /**
   * Ringing Duration for Each Device in seconds. Values:<br>
   *
   * @remarks
   * 15,20,25,30,35,40,45,50,55,60
   */
  @SpeakeasyMetadata()
  ringingDuration?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursRingingDurationEnum;

  /**
   * Values:<br>
   *
   * @remarks
   * 1-24 Hours, 7 Days a Week;<br>
   * 2-Custom Hours
   */
  @SpeakeasyMetadata()
  type?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHoursTypeEnum;
}

/**
 * Action to take when a call is not answered:<br>
 *
 * @remarks
 * 0-Forward to voicemail; <br>
 * 1-Play a message, then disconnect; <br>
 * 9-Disconnect; <br>
 * 26-Forward to External Contacts; <br>
 * 50-Forward to another extension
 *
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingCloseHoursCloseHourActionEnum {
  Zero = "0",
  One = "1",
  Nine = "9",
  TwentySix = "26",
  Fifty = "50",
}

/**
 * Values:<br>
 *
 * @remarks
 * 1-user,<br>
 * 2-callQueue, <br>
 * 3-autoReceptionist,<br>
 * 4-commonAreaPhone,<br>
 * 5-zoomRoom, <br>
 * 7-sharedLineGroup
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingCloseHoursConnectToOperatorTypeEnum {
  User = "user",
  ZoomRoom = "zoomRoom",
  CommonAreaPhone = "commonAreaPhone",
  AutoReceptionist = "autoReceptionist",
  CallQueue = "callQueue",
  SharedLineGroup = "sharedLineGroup",
}

/**
 * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
 */
export class GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingCloseHoursConnectToOperator extends SpeakeasyBase {
  @SpeakeasyMetadata()
  enable?: boolean;

  /**
   * Phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Values:<br>
   *
   * @remarks
   * 1-user,<br>
   * 2-callQueue, <br>
   * 3-autoReceptionist,<br>
   * 4-commonAreaPhone,<br>
   * 5-zoomRoom, <br>
   * 7-sharedLineGroup
   */
  @SpeakeasyMetadata()
  type?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingCloseHoursConnectToOperatorTypeEnum;
}

/**
 * Max Wait Time in seconds. Values:<br>
 *
 * @remarks
 * 15,20,25,30,35,40,45,50,55,60
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingCloseHoursMaxWaitTimeEnum {
  Fifteen = "15",
  Twenty = "20",
  TwentyFive = "25",
  Thirty = "30",
  ThirtyFive = "35",
  Forty = "40",
  FortyFive = "45",
  Fifty = "50",
  FiftyFive = "55",
  Sixty = "60",
}

export class GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingCloseHours extends SpeakeasyBase {
  /**
   * Action to take when a call is not answered:<br>
   *
   * @remarks
   * 0-Forward to voicemail; <br>
   * 1-Play a message, then disconnect; <br>
   * 9-Disconnect; <br>
   * 26-Forward to External Contacts; <br>
   * 50-Forward to another extension
   *
   */
  @SpeakeasyMetadata()
  closeHourAction?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingCloseHoursCloseHourActionEnum;

  /**
   * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
   */
  @SpeakeasyMetadata()
  connectToOperator?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingCloseHoursConnectToOperator;

  /**
   * Max Wait Time in seconds. Values:<br>
   *
   * @remarks
   * 15,20,25,30,35,40,45,50,55,60
   */
  @SpeakeasyMetadata()
  maxWaitTime?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingCloseHoursMaxWaitTimeEnum;
}

export class GetSettingTemplate200ApplicationXMLUserSettingsCallHandling extends SpeakeasyBase {
  @SpeakeasyMetadata()
  businessHours?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingBusinessHours;

  @SpeakeasyMetadata()
  closeHours?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandlingCloseHours;
}

export class GetSettingTemplate200ApplicationXMLUserSettingsDeskPhone extends SpeakeasyBase {
  /**
   * Pin code.
   */
  @SpeakeasyMetadata()
  pinCode?: string;
}

/**
 * The value of this field can be either `default` or `disable`.
 *
 * @remarks
 *
 * * `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).
 *
 * * `disable`: This means that the hold music is disabled.
 */
export enum GetSettingTemplate200ApplicationXMLUserSettingsHoldMusicEnum {
  Default = "default",
  Disable = "disable",
}

export class GetSettingTemplate200ApplicationXMLUserSettings extends SpeakeasyBase {
  /**
   * Audio prompt language code.<br> American English: `en-US`<br>
   *
   * @remarks
   * British English: `en-GB`<br>
   * Español americano: `es-US`<br>
   * Français canadien: `fr-CA`<br>
   * Dansk: `da-DK`<br>
   * Deutsch: `de-DE`<br>
   * Español: `es-ES`<br>
   * Français: `fr-FR`<br>
   * Italiano: `it-IT`<br>
   * Nederlands: `nl-NL`<br>
   * Portugues portugal: `pt-PT`<br>
   * Japanese: `ja-JP`<br>
   * Korean: `ko-KO`<br>
   * Portugues brasil: `pt-BR`<br>
   * Chinese: `zh-CN`<br>
   * Taiwanese: `zh-TW`<br>
   */
  @SpeakeasyMetadata()
  audioPromptLanguage?: string;

  /**
   * Block Calls without Caller ID.
   */
  @SpeakeasyMetadata()
  blockCallsWithoutCallerId?: boolean;

  @SpeakeasyMetadata()
  callHandling?: GetSettingTemplate200ApplicationXMLUserSettingsCallHandling;

  @SpeakeasyMetadata()
  deskPhone?: GetSettingTemplate200ApplicationXMLUserSettingsDeskPhone;

  /**
   * The value of this field can be either `default` or `disable`.
   *
   * @remarks
   *
   * * `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).
   *
   * * `disable`: This means that the hold music is disabled.
   */
  @SpeakeasyMetadata()
  holdMusic?: GetSettingTemplate200ApplicationXMLUserSettingsHoldMusicEnum;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * OK
 */
export class GetSettingTemplate200ApplicationXML extends SpeakeasyBase {
  /**
   * The description of the template.
   */
  @SpeakeasyMetadata()
  description?: string;

  /**
   * Specify the template ID.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Specify the name of the template.
   */
  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata()
  policy?: GetSettingTemplate200ApplicationXMLPolicy;

  @SpeakeasyMetadata()
  profile?: GetSettingTemplate200ApplicationXMLProfile;

  /**
   * The type of template being queried. Values: `user`, `group`, `auto receptionist` `common area`,`zr`, `interop`.
   */
  @SpeakeasyMetadata()
  type?: GetSettingTemplate200ApplicationXMLTypeEnum;

  @SpeakeasyMetadata()
  userSettings?: GetSettingTemplate200ApplicationXMLUserSettings;
}

export class GetSettingTemplate200ApplicationJSONPolicyAdHocCallRecording extends SpeakeasyBase {
  /**
   * Allow current extension to record and save calls in the cloud.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enable" })
  enable?: boolean;

  /**
   * Play a prompt to call participants when the recording has started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_start_prompt" })
  recordingStartPrompt?: boolean;

  /**
   * Allow call recording transcription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_transcription" })
  recordingTranscription?: boolean;
}

export class GetSettingTemplate200ApplicationJSONPolicyAutoCallRecording extends SpeakeasyBase {
  /**
   * Enable automatic call recording.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enable" })
  enable?: boolean;

  /**
   * Values: inbound, outbound, both.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_calls" })
  recordingCalls?: string;

  /**
   * Play a prompt to call participants when the recording has started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_start_prompt" })
  recordingStartPrompt?: boolean;

  /**
   * Allow call recording transcription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_transcription" })
  recordingTranscription?: boolean;
}

export class GetSettingTemplate200ApplicationJSONPolicySms extends SpeakeasyBase {
  /**
   * Allow user to send and receive messages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enable" })
  enable?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "international_sms" })
  internationalSms?: boolean;
}

export class GetSettingTemplate200ApplicationJSONPolicyVoicemail extends SpeakeasyBase {
  /**
   * Allow voicemail transcription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_transcription" })
  allowTranscription?: boolean;

  /**
   * Allow current extension to access, receive, or share voicemail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enable" })
  enable?: boolean;
}

export class GetSettingTemplate200ApplicationJSONPolicy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ad_hoc_call_recording" })
  @Type(() => GetSettingTemplate200ApplicationJSONPolicyAdHocCallRecording)
  adHocCallRecording?: GetSettingTemplate200ApplicationJSONPolicyAdHocCallRecording;

  @SpeakeasyMetadata()
  @Expose({ name: "auto_call_recording" })
  @Type(() => GetSettingTemplate200ApplicationJSONPolicyAutoCallRecording)
  autoCallRecording?: GetSettingTemplate200ApplicationJSONPolicyAutoCallRecording;

  @SpeakeasyMetadata()
  @Expose({ name: "sms" })
  @Type(() => GetSettingTemplate200ApplicationJSONPolicySms)
  sms?: GetSettingTemplate200ApplicationJSONPolicySms;

  @SpeakeasyMetadata()
  @Expose({ name: "voicemail" })
  @Type(() => GetSettingTemplate200ApplicationJSONPolicyVoicemail)
  voicemail?: GetSettingTemplate200ApplicationJSONPolicyVoicemail;
}

export class GetSettingTemplate200ApplicationJSONProfile extends SpeakeasyBase {
  /**
   * The area code from which the phone account was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "area_code" })
  areaCode?: string;

  /**
   * Name of the country where the template was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;
}

/**
 * The type of template being queried. Values: `user`, `group`, `auto receptionist` `common area`,`zr`, `interop`.
 */
export enum GetSettingTemplate200ApplicationJSONTypeEnum {
  User = "user",
  Group = "group",
  AutoReceptionist = "autoReceptionist",
  CommonArea = "commonArea",
  Zr = "zr",
  Interop = "interop",
}

/**
 * When a call is not answered:<br>
 *
 * @remarks
 * 0-Forward to voicemail;<br>
 * 1-Play a message, then disconnect; <br>
 * 9-Disconnect; <br>
 * 26-Forward to External Contacts; <br>
 * 50-Forward to another extension
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursBusinessHourActionEnum {
  Zero = "0",
  One = "1",
  Nine = "9",
  TwentySix = "26",
  Fifty = "50",
}

/**
 * Values:<br>
 *
 * @remarks
 * 1-user,<br>
 * 2-callQueue, <br>
 * 3-autoReceptionist,<br>
 * 4-commonAreaPhone,<br>
 * 5-zoomRoom, <br>
 * 7-sharedLineGroup
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursConnectToOperatorTypeEnum {
  User = "user",
  ZoomRoom = "zoomRoom",
  CommonAreaPhone = "commonAreaPhone",
  AutoReceptionist = "autoReceptionist",
  CallQueue = "callQueue",
  SharedLineGroup = "sharedLineGroup",
}

/**
 * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
 */
export class GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursConnectToOperator extends SpeakeasyBase {
  /**
   * Enable connect to operator.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enable" })
  enable?: boolean;

  /**
   * Phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Values:<br>
   *
   * @remarks
   * 1-user,<br>
   * 2-callQueue, <br>
   * 3-autoReceptionist,<br>
   * 4-commonAreaPhone,<br>
   * 5-zoomRoom, <br>
   * 7-sharedLineGroup
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursConnectToOperatorTypeEnum;
}

/**
 * Values:<br>
 *
 * @remarks
 * 1-24 Hours,<br>
 * 2-customized hours
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHoursTypeEnum {
  One = "1",
  Two = "2",
}

/**
 * Values: 1-7 sun-sat
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHoursWeekdayEnum {
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
  Five = "5",
  Six = "6",
  Seven = "7",
}

export class GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHours extends SpeakeasyBase {
  /**
   * Values:<br>
   *
   * @remarks
   * hh:mm
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string;

  /**
   * Values:<br>
   *
   * @remarks
   * hh:mm
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;

  /**
   * Values:<br>
   *
   * @remarks
   * 1-24 Hours,<br>
   * 2-customized hours
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHoursTypeEnum;

  /**
   * Values: 1-7 sun-sat
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weekday" })
  weekday?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHoursWeekdayEnum;
}

/**
 * Call Handling Ring Mode:<br>
 *
 * @remarks
 * 0-Simultaneous,<br>
 * 1-Sequential
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursRingTypeEnum {
  Zero = "0",
  One = "1",
}

/**
 * Ringing Duration for Each Device in seconds. Values:<br>
 *
 * @remarks
 * 15,20,25,30,35,40,45,50,55,60
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursRingingDurationEnum {
  Fifteen = "15",
  Twenty = "20",
  TwentyFive = "25",
  Thirty = "30",
  ThirtyFive = "35",
  Forty = "40",
  FortyFive = "45",
  Fifty = "50",
  FiftyFive = "55",
  Sixty = "60",
}

/**
 * Values:<br>
 *
 * @remarks
 * 1-24 Hours, 7 Days a Week;<br>
 * 2-Custom Hours
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursTypeEnum {
  One = "1",
  Two = "2",
}

export class GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHours extends SpeakeasyBase {
  /**
   * When a call is not answered:<br>
   *
   * @remarks
   * 0-Forward to voicemail;<br>
   * 1-Play a message, then disconnect; <br>
   * 9-Disconnect; <br>
   * 26-Forward to External Contacts; <br>
   * 50-Forward to another extension
   */
  @SpeakeasyMetadata()
  @Expose({ name: "business_hour_action" })
  businessHourAction?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursBusinessHourActionEnum;

  /**
   * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connect_to_operator" })
  @Type(
    () =>
      GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursConnectToOperator
  )
  connectToOperator?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursConnectToOperator;

  @SpeakeasyMetadata({
    elemType:
      GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHours,
  })
  @Expose({ name: "custom_hours" })
  @Type(
    () =>
      GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHours
  )
  customHours?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHours[];

  /**
   * Call Handling Ring Mode:<br>
   *
   * @remarks
   * 0-Simultaneous,<br>
   * 1-Sequential
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ring_type" })
  ringType?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursRingTypeEnum;

  /**
   * Ringing Duration for Each Device in seconds. Values:<br>
   *
   * @remarks
   * 15,20,25,30,35,40,45,50,55,60
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ringing_duration" })
  ringingDuration?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursRingingDurationEnum;

  /**
   * Values:<br>
   *
   * @remarks
   * 1-24 Hours, 7 Days a Week;<br>
   * 2-Custom Hours
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHoursTypeEnum;
}

/**
 * Action to take when a call is not answered:<br>
 *
 * @remarks
 * 0-Forward to voicemail; <br>
 * 1-Play a message, then disconnect; <br>
 * 9-Disconnect; <br>
 * 26-Forward to External Contacts; <br>
 * 50-Forward to another extension
 *
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHoursCloseHourActionEnum {
  Zero = "0",
  One = "1",
  Nine = "9",
  TwentySix = "26",
  Fifty = "50",
}

/**
 * Values:<br>
 *
 * @remarks
 * 1-user,<br>
 * 2-callQueue, <br>
 * 3-autoReceptionist,<br>
 * 4-commonAreaPhone,<br>
 * 5-zoomRoom, <br>
 * 7-sharedLineGroup
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHoursConnectToOperatorTypeEnum {
  User = "user",
  ZoomRoom = "zoomRoom",
  CommonAreaPhone = "commonAreaPhone",
  AutoReceptionist = "autoReceptionist",
  CallQueue = "callQueue",
  SharedLineGroup = "sharedLineGroup",
}

/**
 * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
 */
export class GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHoursConnectToOperator extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enable" })
  enable?: boolean;

  /**
   * Phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Values:<br>
   *
   * @remarks
   * 1-user,<br>
   * 2-callQueue, <br>
   * 3-autoReceptionist,<br>
   * 4-commonAreaPhone,<br>
   * 5-zoomRoom, <br>
   * 7-sharedLineGroup
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHoursConnectToOperatorTypeEnum;
}

/**
 * Max Wait Time in seconds. Values:<br>
 *
 * @remarks
 * 15,20,25,30,35,40,45,50,55,60
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHoursMaxWaitTimeEnum {
  Fifteen = "15",
  Twenty = "20",
  TwentyFive = "25",
  Thirty = "30",
  ThirtyFive = "35",
  Forty = "40",
  FortyFive = "45",
  Fifty = "50",
  FiftyFive = "55",
  Sixty = "60",
}

export class GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHours extends SpeakeasyBase {
  /**
   * Action to take when a call is not answered:<br>
   *
   * @remarks
   * 0-Forward to voicemail; <br>
   * 1-Play a message, then disconnect; <br>
   * 9-Disconnect; <br>
   * 26-Forward to External Contacts; <br>
   * 50-Forward to another extension
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "close_hour_action" })
  closeHourAction?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHoursCloseHourActionEnum;

  /**
   * Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connect_to_operator" })
  @Type(
    () =>
      GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHoursConnectToOperator
  )
  connectToOperator?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHoursConnectToOperator;

  /**
   * Max Wait Time in seconds. Values:<br>
   *
   * @remarks
   * 15,20,25,30,35,40,45,50,55,60
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_wait_time" })
  maxWaitTime?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHoursMaxWaitTimeEnum;
}

export class GetSettingTemplate200ApplicationJSONUserSettingsCallHandling extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "business_hours" })
  @Type(
    () =>
      GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHours
  )
  businessHours?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingBusinessHours;

  @SpeakeasyMetadata()
  @Expose({ name: "close_hours" })
  @Type(
    () => GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHours
  )
  closeHours?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandlingCloseHours;
}

export class GetSettingTemplate200ApplicationJSONUserSettingsDeskPhone extends SpeakeasyBase {
  /**
   * Pin code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pin_code" })
  pinCode?: string;
}

/**
 * The value of this field can be either `default` or `disable`.
 *
 * @remarks
 *
 * * `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).
 *
 * * `disable`: This means that the hold music is disabled.
 */
export enum GetSettingTemplate200ApplicationJSONUserSettingsHoldMusicEnum {
  Default = "default",
  Disable = "disable",
}

export class GetSettingTemplate200ApplicationJSONUserSettings extends SpeakeasyBase {
  /**
   * Audio prompt language code.<br> American English: `en-US`<br>
   *
   * @remarks
   * British English: `en-GB`<br>
   * Español americano: `es-US`<br>
   * Français canadien: `fr-CA`<br>
   * Dansk: `da-DK`<br>
   * Deutsch: `de-DE`<br>
   * Español: `es-ES`<br>
   * Français: `fr-FR`<br>
   * Italiano: `it-IT`<br>
   * Nederlands: `nl-NL`<br>
   * Portugues portugal: `pt-PT`<br>
   * Japanese: `ja-JP`<br>
   * Korean: `ko-KO`<br>
   * Portugues brasil: `pt-BR`<br>
   * Chinese: `zh-CN`<br>
   * Taiwanese: `zh-TW`<br>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audio_prompt_language" })
  audioPromptLanguage?: string;

  /**
   * Block Calls without Caller ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "block_calls_without_caller_id" })
  blockCallsWithoutCallerId?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "call_handling" })
  @Type(() => GetSettingTemplate200ApplicationJSONUserSettingsCallHandling)
  callHandling?: GetSettingTemplate200ApplicationJSONUserSettingsCallHandling;

  @SpeakeasyMetadata()
  @Expose({ name: "desk_phone" })
  @Type(() => GetSettingTemplate200ApplicationJSONUserSettingsDeskPhone)
  deskPhone?: GetSettingTemplate200ApplicationJSONUserSettingsDeskPhone;

  /**
   * The value of this field can be either `default` or `disable`.
   *
   * @remarks
   *
   * * `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).
   *
   * * `disable`: This means that the hold music is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hold_music" })
  holdMusic?: GetSettingTemplate200ApplicationJSONUserSettingsHoldMusicEnum;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * OK
 */
export class GetSettingTemplate200ApplicationJSON extends SpeakeasyBase {
  /**
   * The description of the template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Specify the template ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Specify the name of the template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "policy" })
  @Type(() => GetSettingTemplate200ApplicationJSONPolicy)
  policy?: GetSettingTemplate200ApplicationJSONPolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "profile" })
  @Type(() => GetSettingTemplate200ApplicationJSONProfile)
  profile?: GetSettingTemplate200ApplicationJSONProfile;

  /**
   * The type of template being queried. Values: `user`, `group`, `auto receptionist` `common area`,`zr`, `interop`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetSettingTemplate200ApplicationJSONTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "user_settings" })
  @Type(() => GetSettingTemplate200ApplicationJSONUserSettings)
  userSettings?: GetSettingTemplate200ApplicationJSONUserSettings;
}

export class GetSettingTemplateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * OK
   */
  @SpeakeasyMetadata()
  getSettingTemplate200ApplicationJSONObject?: GetSettingTemplate200ApplicationJSON;

  /**
   * **HTTP Status Code:** `404`<br>
   *
   * @remarks
   * Site does not exist. Settings template does not exist: {templateId}.
   *
   */
  @SpeakeasyMetadata()
  getSettingTemplate404ApplicationJSONAny?: any;
}
