<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ProposedBid - A type that defines the data for a payment amount, such as the sale price.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ProposedBid
{
    /**
     * The base currency applied to the <b>value</b> field to establish a monetary amount.  <br><br>The currency is represented as a 3-letter <a href="https://www.iso.org/iso-4217-currency-codes.html " title="https://www.iso.org " target="_blank">ISO 4217</a> currency code. For example, the code for the Canadian Dollar is <code>CAD</code>.  <br><br><b>Default:</b> The default currency of the eBay marketplace that hosts the listing. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:CurrencyCodeEnum'>eBay API documentation</a>
     * 
     * @var ?string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currency = null;
    
    /**
     * The end of the range specified for the bid.
     * 
     * @var ?string $rangeEnd
     */
	#[\JMS\Serializer\Annotation\SerializedName('rangeEnd')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rangeEnd = null;
    
    /**
     * The start of the range specified for the bid.
     * 
     * @var ?string $rangeStart
     */
	#[\JMS\Serializer\Annotation\SerializedName('rangeStart')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rangeStart = null;
    
    /**
     * The value of the proposed bid.
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
	public function __construct()
	{
		$this->currency = null;
		$this->rangeEnd = null;
		$this->rangeStart = null;
		$this->value = null;
	}
}
