/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetApiActivitySecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  connectToken: string;
}

export class GetApiActivityRequest extends SpeakeasyBase {
  /**
   * How many API Events should be retrieved in a single request.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * How far into the collection of API Events should the response start
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;
}

export class GetApiActivityResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.APIRequest })
  apiRequests?: shared.APIRequest[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid or missing token
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
