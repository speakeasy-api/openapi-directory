<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HttpRouteRouteMatch - RouteMatch defines specifications used to match requests. If multiple match types are set, this RouteMatch will match if ALL type of matches are matched.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HttpRouteRouteMatch
{
    /**
     * The HTTP request path value should exactly match this value. Only one of full_path_match, prefix_match, or regex_match should be used.
     * 
     * @var ?string $fullPathMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('fullPathMatch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fullPathMatch = null;
    
    /**
     * Specifies a list of HTTP request headers to match against. ALL of the supplied headers must be matched.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\HttpRouteHeaderMatch> $headers
     */
	#[\JMS\Serializer\Annotation\SerializedName('headers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\HttpRouteHeaderMatch>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $headers = null;
    
    /**
     * Specifies if prefix_match and full_path_match matches are case sensitive. The default value is false.
     * 
     * @var ?bool $ignoreCase
     */
	#[\JMS\Serializer\Annotation\SerializedName('ignoreCase')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ignoreCase = null;
    
    /**
     * The HTTP request path value must begin with specified prefix_match. prefix_match must begin with a /. Only one of full_path_match, prefix_match, or regex_match should be used.
     * 
     * @var ?string $prefixMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('prefixMatch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $prefixMatch = null;
    
    /**
     * Specifies a list of query parameters to match against. ALL of the query parameters must be matched.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\HttpRouteQueryParameterMatch> $queryParameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('queryParameters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\HttpRouteQueryParameterMatch>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $queryParameters = null;
    
    /**
     * The HTTP request path value must satisfy the regular expression specified by regex_match after removing any query parameters and anchor supplied with the original URL. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax Only one of full_path_match, prefix_match, or regex_match should be used.
     * 
     * @var ?string $regexMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('regexMatch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $regexMatch = null;
    
	public function __construct()
	{
		$this->fullPathMatch = null;
		$this->headers = null;
		$this->ignoreCase = null;
		$this->prefixMatch = null;
		$this->queryParameters = null;
		$this->regexMatch = null;
	}
}
