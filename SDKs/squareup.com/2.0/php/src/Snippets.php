<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Snippets 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * DeleteSnippet
     * 
     * Removes your snippet from a Square Online site.
     * 
     * You can call [ListSites](https://developer.squareup.com/reference/square_2021-08-18/sites-api/list-sites) to get the IDs of the sites that belong to a seller.
     * 
     * 
     * __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DeleteSnippetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DeleteSnippetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DeleteSnippetResponse
     */
	public function deleteSnippet(
        \OpenAPI\OpenAPI\Models\Operations\DeleteSnippetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DeleteSnippetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DeleteSnippetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v2/sites/{site_id}/snippet', \OpenAPI\OpenAPI\Models\Operations\DeleteSnippetRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DeleteSnippetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->deleteSnippetResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\DeleteSnippetResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * RetrieveSnippet
     * 
     * Retrieves your snippet from a Square Online site. A site can contain snippets from multiple snippet applications, but you can retrieve only the snippet that was added by your application.
     * 
     * You can call [ListSites](https://developer.squareup.com/reference/square_2021-08-18/sites-api/list-sites) to get the IDs of the sites that belong to a seller.
     * 
     * 
     * __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\RetrieveSnippetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\RetrieveSnippetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\RetrieveSnippetResponse
     */
	public function retrieveSnippet(
        \OpenAPI\OpenAPI\Models\Operations\RetrieveSnippetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\RetrieveSnippetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\RetrieveSnippetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v2/sites/{site_id}/snippet', \OpenAPI\OpenAPI\Models\Operations\RetrieveSnippetRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\RetrieveSnippetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->retrieveSnippetResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\RetrieveSnippetResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * UpsertSnippet
     * 
     * Adds a snippet to a Square Online site or updates the existing snippet on the site. 
     * The snippet code is appended to the end of the `head` element on every page of the site, except checkout pages. A snippet application can add one snippet to a given site. 
     * 
     * You can call [ListSites](https://developer.squareup.com/reference/square_2021-08-18/sites-api/list-sites) to get the IDs of the sites that belong to a seller.
     * 
     * 
     * __Note:__ Square Online APIs are publicly available as part of an early access program. For more information, see [Early access program for Square Online APIs](https://developer.squareup.com/docs/online-api#early-access-program-for-square-online-apis).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\UpsertSnippetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\UpsertSnippetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\UpsertSnippetResponse
     */
	public function upsertSnippet(
        \OpenAPI\OpenAPI\Models\Operations\UpsertSnippetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\UpsertSnippetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\UpsertSnippetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v2/sites/{site_id}/snippet', \OpenAPI\OpenAPI\Models\Operations\UpsertSnippetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "upsertSnippetRequest", "json");
        if ($body === null) {
            throw new \Exception('Request body is required');
        }
        $options = array_merge_recursive($options, $body);
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\UpsertSnippetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->upsertSnippetResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\UpsertSnippetResponse', 'json');
            }
        }

        return $response;
    }
}