// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum - The compression type for the entries in this set.
type GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum string

const (
	GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnumCompressionTypeUnspecified GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum = "COMPRESSION_TYPE_UNSPECIFIED"
	GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnumRaw                        GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum = "RAW"
	GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnumRice                       GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum = "RICE"
)

func (e GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum) ToPointer() *GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum {
	return &e
}

func (e *GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMPRESSION_TYPE_UNSPECIFIED":
		fallthrough
	case "RAW":
		fallthrough
	case "RICE":
		*e = GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum: %v", v)
	}
}

// GoogleSecuritySafebrowsingV4ThreatEntrySet - A set of threats that should be added or removed from a client's local database.
type GoogleSecuritySafebrowsingV4ThreatEntrySet struct {
	// The compression type for the entries in this set.
	CompressionType *GoogleSecuritySafebrowsingV4ThreatEntrySetCompressionTypeEnum `json:"compressionType,omitempty"`
	// The uncompressed threat entries in hash format of a particular prefix length. Hashes can be anywhere from 4 to 32 bytes in size. A large majority are 4 bytes, but some hashes are lengthened if they collide with the hash of a popular URL. Used for sending ThreatEntrySet to clients that do not support compression, or when sending non-4-byte hashes to clients that do support compression.
	RawHashes *GoogleSecuritySafebrowsingV4RawHashes `json:"rawHashes,omitempty"`
	// A set of raw indices to remove from a local list.
	RawIndices *GoogleSecuritySafebrowsingV4RawIndices `json:"rawIndices,omitempty"`
	// The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or compressed removal indices.
	RiceHashes *GoogleSecuritySafebrowsingV4RiceDeltaEncoding `json:"riceHashes,omitempty"`
	// The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or compressed removal indices.
	RiceIndices *GoogleSecuritySafebrowsingV4RiceDeltaEncoding `json:"riceIndices,omitempty"`
}
