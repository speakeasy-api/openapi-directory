/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The baseline permission that all organization members have on this project. Only present if owner is an organization.
 */
export enum ProjectOrganizationPermissionEnum {
  Read = "read",
  Write = "write",
  Admin = "admin",
  None = "none",
}

/**
 * Projects are a way to organize columns and cards of work.
 */
export class Project extends SpeakeasyBase {
  /**
   * Body of the project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body: string;

  @SpeakeasyMetadata()
  @Expose({ name: "columns_url" })
  columnsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creator" })
  @Type(() => NullableSimpleUser)
  creator: NullableSimpleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Name of the project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number: number;

  /**
   * The baseline permission that all organization members have on this project. Only present if owner is an organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization_permission" })
  organizationPermission?: ProjectOrganizationPermissionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "owner_url" })
  ownerUrl: string;

  /**
   * Whether or not this project can be seen by everyone. Only present if owner is an organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "private" })
  private?: boolean;

  /**
   * State of the project; either 'open' or 'closed'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
