/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FreeBusyRequestItem } from "./freebusyrequestitem";
import { Expose, Transform, Type } from "class-transformer";

export class FreeBusyRequest extends SpeakeasyBase {
  /**
   * Maximal number of calendars for which FreeBusy information is to be provided. Optional. Maximum value is 50.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "calendarExpansionMax" })
  calendarExpansionMax?: number;

  /**
   * Maximal number of calendar identifiers to be provided for a single group. Optional. An error is returned for a group with more members than this value. Maximum value is 100.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupExpansionMax" })
  groupExpansionMax?: number;

  /**
   * List of calendars and/or groups to query.
   */
  @SpeakeasyMetadata({ elemType: FreeBusyRequestItem })
  @Expose({ name: "items" })
  @Type(() => FreeBusyRequestItem)
  items?: FreeBusyRequestItem[];

  /**
   * The end of the interval for the query formatted as per RFC3339.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeMax" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timeMax?: Date;

  /**
   * The start of the interval for the query formatted as per RFC3339.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeMin" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timeMin?: Date;

  /**
   * Time zone used in the response. Optional. The default is UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  timeZone?: string;
}
