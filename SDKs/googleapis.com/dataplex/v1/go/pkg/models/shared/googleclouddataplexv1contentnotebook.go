// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDataplexV1ContentNotebookKernelTypeEnum - Required. Kernel Type of the notebook.
type GoogleCloudDataplexV1ContentNotebookKernelTypeEnum string

const (
	GoogleCloudDataplexV1ContentNotebookKernelTypeEnumKernelTypeUnspecified GoogleCloudDataplexV1ContentNotebookKernelTypeEnum = "KERNEL_TYPE_UNSPECIFIED"
	GoogleCloudDataplexV1ContentNotebookKernelTypeEnumPython3               GoogleCloudDataplexV1ContentNotebookKernelTypeEnum = "PYTHON3"
)

func (e GoogleCloudDataplexV1ContentNotebookKernelTypeEnum) ToPointer() *GoogleCloudDataplexV1ContentNotebookKernelTypeEnum {
	return &e
}

func (e *GoogleCloudDataplexV1ContentNotebookKernelTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KERNEL_TYPE_UNSPECIFIED":
		fallthrough
	case "PYTHON3":
		*e = GoogleCloudDataplexV1ContentNotebookKernelTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDataplexV1ContentNotebookKernelTypeEnum: %v", v)
	}
}

// GoogleCloudDataplexV1ContentNotebook - Configuration for Notebook content.
type GoogleCloudDataplexV1ContentNotebook struct {
	// Required. Kernel Type of the notebook.
	KernelType *GoogleCloudDataplexV1ContentNotebookKernelTypeEnum `json:"kernelType,omitempty"`
}
