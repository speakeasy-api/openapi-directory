// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetTemplateRequest struct {
	// Template unique identifier
	TemplateID int64 `queryParam:"style=form,explode=true,name=templateId"`
}

// GetTemplate500ApplicationJSON - Internal Server Error
type GetTemplate500ApplicationJSON struct {
	// Error description
	Error *string `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// GetTemplate422ApplicationJSONErrorEnum - Error description
type GetTemplate422ApplicationJSONErrorEnum string

const (
	GetTemplate422ApplicationJSONErrorEnumUnableToParseJSONPleaseCheckFormatting               GetTemplate422ApplicationJSONErrorEnum = "Unable to parse JSON, please check formatting"
	GetTemplate422ApplicationJSONErrorEnumRequiredParameterMissing                             GetTemplate422ApplicationJSONErrorEnum = "Required parameter missing"
	GetTemplate422ApplicationJSONErrorEnumRequiredParameterMissingTemplateDefinitionNotDefined GetTemplate422ApplicationJSONErrorEnum = "Required parameter missing: template definition not defined"
	GetTemplate422ApplicationJSONErrorEnumRequiredParameterMissingTemplateNotDefined           GetTemplate422ApplicationJSONErrorEnum = "Required parameter missing: template not defined"
)

func (e *GetTemplate422ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unable to parse JSON, please check formatting":
		fallthrough
	case "Required parameter missing":
		fallthrough
	case "Required parameter missing: template definition not defined":
		fallthrough
	case "Required parameter missing: template not defined":
		*e = GetTemplate422ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTemplate422ApplicationJSONErrorEnum: %s", s)
	}
}

// GetTemplate422ApplicationJSON - Unprocessable Entity
type GetTemplate422ApplicationJSON struct {
	// Error description
	Error *GetTemplate422ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// GetTemplate404ApplicationJSONErrorEnum - Error description
type GetTemplate404ApplicationJSONErrorEnum string

const (
	GetTemplate404ApplicationJSONErrorEnumEntityNotFound                               GetTemplate404ApplicationJSONErrorEnum = "Entity not found"
	GetTemplate404ApplicationJSONErrorEnumResourceNotFound                             GetTemplate404ApplicationJSONErrorEnum = "Resource not found"
	GetTemplate404ApplicationJSONErrorEnumNoneOfTheTemplatesIsAvailableForTheWorkspace GetTemplate404ApplicationJSONErrorEnum = "None of the templates is available for the workspace."
)

func (e *GetTemplate404ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Entity not found":
		fallthrough
	case "Resource not found":
		fallthrough
	case "None of the templates is available for the workspace.":
		*e = GetTemplate404ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTemplate404ApplicationJSONErrorEnum: %s", s)
	}
}

// GetTemplate404ApplicationJSON - Not Found
type GetTemplate404ApplicationJSON struct {
	// Error description
	Error *GetTemplate404ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// GetTemplate403ApplicationJSONErrorEnum - Error description
type GetTemplate403ApplicationJSONErrorEnum string

const (
	GetTemplate403ApplicationJSONErrorEnumYourAccountHasExceededTheMonthlyDocumentGenerationLimit GetTemplate403ApplicationJSONErrorEnum = "Your account has exceeded the monthly document generation limit."
)

func (e *GetTemplate403ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Your account has exceeded the monthly document generation limit.":
		*e = GetTemplate403ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTemplate403ApplicationJSONErrorEnum: %s", s)
	}
}

// GetTemplate403ApplicationJSON - Forbidden
type GetTemplate403ApplicationJSON struct {
	// Error description
	Error *GetTemplate403ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// GetTemplate401ApplicationJSONErrorEnum - Error description
type GetTemplate401ApplicationJSONErrorEnum string

const (
	GetTemplate401ApplicationJSONErrorEnumAuthenticationFailedRequestExpired                        GetTemplate401ApplicationJSONErrorEnum = "Authentication failed: request expired"
	GetTemplate401ApplicationJSONErrorEnumAuthenticationFailedSignatureOrSecretMissing              GetTemplate401ApplicationJSONErrorEnum = "Authentication failed: signature or secret missing"
	GetTemplate401ApplicationJSONErrorEnumAuthenticationFailedWorkspaceMissing                      GetTemplate401ApplicationJSONErrorEnum = "Authentication failed: workspace missing"
	GetTemplate401ApplicationJSONErrorEnumAuthenticationFailedKeyMissing                            GetTemplate401ApplicationJSONErrorEnum = "Authentication failed: key missing"
	GetTemplate401ApplicationJSONErrorEnumAuthenticationFailedPropertyIssIssuerMissingInJwt         GetTemplate401ApplicationJSONErrorEnum = "Authentication failed: property 'iss' (issuer) missing in JWT"
	GetTemplate401ApplicationJSONErrorEnumAuthenticationFailedPropertySubSubjectMissingInJwt        GetTemplate401ApplicationJSONErrorEnum = "Authentication failed: property 'sub' (subject) missing in JWT"
	GetTemplate401ApplicationJSONErrorEnumAuthenticationFailedPropertyExpExpirationTimeMissingInJwt GetTemplate401ApplicationJSONErrorEnum = "Authentication failed: property 'exp' (expiration time) missing in JWT"
	GetTemplate401ApplicationJSONErrorEnumAuthenticationFailedInvalidIssIssuer                      GetTemplate401ApplicationJSONErrorEnum = "Authentication failed: invalid 'iss' (issuer)"
	GetTemplate401ApplicationJSONErrorEnumAuthenticationFailedIncorrectSignature                    GetTemplate401ApplicationJSONErrorEnum = "Authentication failed: incorrect signature"
	GetTemplate401ApplicationJSONErrorEnumAuthenticationFailed                                      GetTemplate401ApplicationJSONErrorEnum = "Authentication failed"
)

func (e *GetTemplate401ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Authentication failed: request expired":
		fallthrough
	case "Authentication failed: signature or secret missing":
		fallthrough
	case "Authentication failed: workspace missing":
		fallthrough
	case "Authentication failed: key missing":
		fallthrough
	case "Authentication failed: property 'iss' (issuer) missing in JWT":
		fallthrough
	case "Authentication failed: property 'sub' (subject) missing in JWT":
		fallthrough
	case "Authentication failed: property 'exp' (expiration time) missing in JWT":
		fallthrough
	case "Authentication failed: invalid 'iss' (issuer)":
		fallthrough
	case "Authentication failed: incorrect signature":
		fallthrough
	case "Authentication failed":
		*e = GetTemplate401ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTemplate401ApplicationJSONErrorEnum: %s", s)
	}
}

// GetTemplate401ApplicationJSON - Unauthorized
type GetTemplate401ApplicationJSON struct {
	// Error description
	Error *GetTemplate401ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// GetTemplate200ApplicationJSON - Template configuration as JSON object
type GetTemplate200ApplicationJSON struct {
	Response *shared.TemplateDefinition `json:"response,omitempty"`
}

type GetTemplateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Template configuration as JSON object
	GetTemplate200ApplicationJSONObject *GetTemplate200ApplicationJSON
	// Unauthorized
	GetTemplate401ApplicationJSONObject *GetTemplate401ApplicationJSON
	// Forbidden
	GetTemplate403ApplicationJSONObject *GetTemplate403ApplicationJSON
	// Not Found
	GetTemplate404ApplicationJSONObject *GetTemplate404ApplicationJSON
	// Unprocessable Entity
	GetTemplate422ApplicationJSONObject *GetTemplate422ApplicationJSON
	// Internal Server Error
	GetTemplate500ApplicationJSONObject *GetTemplate500ApplicationJSON
}
