// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// DeleteUsageReportSubscriptionXAmzTargetEnum
type DeleteUsageReportSubscriptionXAmzTargetEnum string

const (
	DeleteUsageReportSubscriptionXAmzTargetEnumPhotonAdminProxyServiceDeleteUsageReportSubscription DeleteUsageReportSubscriptionXAmzTargetEnum = "PhotonAdminProxyService.DeleteUsageReportSubscription"
)

func (e DeleteUsageReportSubscriptionXAmzTargetEnum) ToPointer() *DeleteUsageReportSubscriptionXAmzTargetEnum {
	return &e
}

func (e *DeleteUsageReportSubscriptionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PhotonAdminProxyService.DeleteUsageReportSubscription":
		*e = DeleteUsageReportSubscriptionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteUsageReportSubscriptionXAmzTargetEnum: %v", v)
	}
}

type DeleteUsageReportSubscriptionRequest struct {
	RequestBody       map[string]interface{}                      `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteUsageReportSubscriptionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteUsageReportSubscriptionResponse struct {
	ContentType string
	// Success
	DeleteUsageReportSubscriptionResult map[string]interface{}
	// InvalidAccountStatusException
	InvalidAccountStatusException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
