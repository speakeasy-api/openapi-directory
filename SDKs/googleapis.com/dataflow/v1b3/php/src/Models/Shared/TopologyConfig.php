<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TopologyConfig - Global topology of the streaming Dataflow job, including all computations and their sharded locations.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TopologyConfig
{
    /**
     * The computations associated with a streaming Dataflow job.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ComputationTopology> $computations
     */
	#[\JMS\Serializer\Annotation\SerializedName('computations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ComputationTopology>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $computations = null;
    
    /**
     * The disks assigned to a streaming Dataflow job.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DataDiskAssignment> $dataDiskAssignments
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataDiskAssignments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DataDiskAssignment>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dataDiskAssignments = null;
    
    /**
     * The size (in bits) of keys that will be assigned to source messages.
     * 
     * @var ?int $forwardingKeyBits
     */
	#[\JMS\Serializer\Annotation\SerializedName('forwardingKeyBits')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $forwardingKeyBits = null;
    
    /**
     * Version number for persistent state.
     * 
     * @var ?int $persistentStateVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('persistentStateVersion')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $persistentStateVersion = null;
    
    /**
     * Maps user stage names to stable computation names.
     * 
     * @var ?array<string, string> $userStageToComputationNameMap
     */
	#[\JMS\Serializer\Annotation\SerializedName('userStageToComputationNameMap')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $userStageToComputationNameMap = null;
    
	public function __construct()
	{
		$this->computations = null;
		$this->dataDiskAssignments = null;
		$this->forwardingKeyBits = null;
		$this->persistentStateVersion = null;
		$this->userStageToComputationNameMap = null;
	}
}
