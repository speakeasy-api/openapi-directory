"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import routingcontrolstate_enum as shared_routingcontrolstate_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RoutingControl:
    r"""A routing control, which is a simple on/off switch that you can use to route traffic to cells. When a routing control state is On, traffic flows to a cell. When the state is Off, traffic does not flow."""
    
    control_panel_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ControlPanelArn'), 'exclude': lambda f: f is None }})  
    control_panel_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ControlPanelName'), 'exclude': lambda f: f is None }})  
    routing_control_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoutingControlArn'), 'exclude': lambda f: f is None }})  
    routing_control_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoutingControlName'), 'exclude': lambda f: f is None }})  
    routing_control_state: Optional[shared_routingcontrolstate_enum.RoutingControlStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoutingControlState'), 'exclude': lambda f: f is None }})  
    