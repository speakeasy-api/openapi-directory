/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetForecastTimeSeriesRequest extends SpeakeasyBase {
  /**
   * optional number of days in string. Will be added to init forecast date
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=days" })
  days?: number;

  /**
   * end date for the forecast ISO string YYYY-MM-DDTHH:mm:SS.SZ
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=endtime",
  })
  endtime?: string;

  /**
   * Direct file I want to extract
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=entryid",
  })
  entryid?: string;

  /**
   * optional number of hours in string. Will be added to init forecast date
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=hours" })
  hours?: number;

  /**
   * initial date for the forecast ISO string YYYY-MM-DDTHH:mm:SS.SZ
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=inittime",
  })
  inittime?: string;

  /**
   * latitude for the forecast
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=latitude",
  })
  latitude: number;

  /**
   * longitude for the forecast
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=longitude",
  })
  longitude: number;

  /**
   *  Comma separated values for the wave parameteres height,direction,period
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=wave" })
  wave?: string;

  /**
   *  Comma separated values for the weather parameteres temperature,rain,wind_u,wind_v,gust,pressure,cloud,humidity&wave=height,direction,period
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=weather",
  })
  weather: string;
}

export class GetForecastTimeSeriesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
