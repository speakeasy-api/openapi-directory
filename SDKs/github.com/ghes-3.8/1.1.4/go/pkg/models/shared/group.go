// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GroupMembers struct {
	// The display name associated with the member
	DisplayName string `json:"displayName"`
	// The local unique identifier for the member
	Value string `json:"value"`
}

type GroupSchemasEnum string

const (
	GroupSchemasEnumUrnIetfParamsScimSchemasCore20Group GroupSchemasEnum = "urn:ietf:params:scim:schemas:core:2.0:Group"
)

func (e GroupSchemasEnum) ToPointer() *GroupSchemasEnum {
	return &e
}

func (e *GroupSchemasEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "urn:ietf:params:scim:schemas:core:2.0:Group":
		*e = GroupSchemasEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupSchemasEnum: %v", v)
	}
}

type Group struct {
	// A human-readable name for a security group.
	DisplayName string `json:"displayName"`
	// A unique identifier for the resource as defined by the provisioning client.
	ExternalID string `json:"externalId"`
	// The group members.
	Members []GroupMembers `json:"members"`
	// The URIs that are used to indicate the namespaces of the SCIM schemas.
	Schemas []GroupSchemasEnum `json:"schemas"`
}
