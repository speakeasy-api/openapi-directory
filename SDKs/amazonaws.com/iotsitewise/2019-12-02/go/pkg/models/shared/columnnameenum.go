// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ColumnNameEnum string

const (
	ColumnNameEnumAlias               ColumnNameEnum = "ALIAS"
	ColumnNameEnumAssetID             ColumnNameEnum = "ASSET_ID"
	ColumnNameEnumPropertyID          ColumnNameEnum = "PROPERTY_ID"
	ColumnNameEnumDataType            ColumnNameEnum = "DATA_TYPE"
	ColumnNameEnumTimestampSeconds    ColumnNameEnum = "TIMESTAMP_SECONDS"
	ColumnNameEnumTimestampNanoOffset ColumnNameEnum = "TIMESTAMP_NANO_OFFSET"
	ColumnNameEnumQuality             ColumnNameEnum = "QUALITY"
	ColumnNameEnumValue               ColumnNameEnum = "VALUE"
)

func (e *ColumnNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ALIAS":
		fallthrough
	case "ASSET_ID":
		fallthrough
	case "PROPERTY_ID":
		fallthrough
	case "DATA_TYPE":
		fallthrough
	case "TIMESTAMP_SECONDS":
		fallthrough
	case "TIMESTAMP_NANO_OFFSET":
		fallthrough
	case "QUALITY":
		fallthrough
	case "VALUE":
		*e = ColumnNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ColumnNameEnum: %s", s)
	}
}
