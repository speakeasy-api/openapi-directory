// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteVpnConnectionRouteActionEnum
type GETDeleteVpnConnectionRouteActionEnum string

const (
	GETDeleteVpnConnectionRouteActionEnumDeleteVpnConnectionRoute GETDeleteVpnConnectionRouteActionEnum = "DeleteVpnConnectionRoute"
)

func (e *GETDeleteVpnConnectionRouteActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteVpnConnectionRoute":
		*e = GETDeleteVpnConnectionRouteActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteVpnConnectionRouteActionEnum: %s", s)
	}
}

// GETDeleteVpnConnectionRouteVersionEnum
type GETDeleteVpnConnectionRouteVersionEnum string

const (
	GETDeleteVpnConnectionRouteVersionEnumTwoThousandAndSixteen1115 GETDeleteVpnConnectionRouteVersionEnum = "2016-11-15"
)

func (e *GETDeleteVpnConnectionRouteVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteVpnConnectionRouteVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteVpnConnectionRouteVersionEnum: %s", s)
	}
}

type GETDeleteVpnConnectionRouteQueryParams struct {
	Action GETDeleteVpnConnectionRouteActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The CIDR block associated with the local subnet of the customer network.
	DestinationCidrBlock string                                 `queryParam:"style=form,explode=true,name=DestinationCidrBlock"`
	Version              GETDeleteVpnConnectionRouteVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The ID of the VPN connection.
	VpnConnectionID string `queryParam:"style=form,explode=true,name=VpnConnectionId"`
}

type GETDeleteVpnConnectionRouteHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteVpnConnectionRouteRequest struct {
	QueryParams GETDeleteVpnConnectionRouteQueryParams
	Headers     GETDeleteVpnConnectionRouteHeaders
}

type GETDeleteVpnConnectionRouteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
