"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import endbalance as shared_endbalance
from ..shared import error as shared_error
from ..shared import startbalance as shared_startbalance
from ..shared import statementline as shared_statementline
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class StatementStatusEnum(str, Enum):
    r"""Current status of statements"""
    PENDING = 'PENDING'
    REJECTED = 'REJECTED'
    DELIVERED = 'DELIVERED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Statement:
    r"""search results matching id for single statement"""
    
    end_balance: Optional[shared_endbalance.EndBalance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endBalance'), 'exclude': lambda f: f is None }})
    r"""The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount."""  
    end_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Closing balance date ISO-8601 YYYY-MM-DD"""  
    errors: Optional[list[shared_error.Error]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})  
    feed_connection_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feedConnectionId'), 'exclude': lambda f: f is None }})
    r"""The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""GUID used to identify the Statement."""  
    start_balance: Optional[shared_startbalance.StartBalance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startBalance'), 'exclude': lambda f: f is None }})
    r"""The starting balance of the statement"""  
    start_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD"""  
    statement_line_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statementLineCount'), 'exclude': lambda f: f is None }})  
    statement_lines: Optional[list[shared_statementline.StatementLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statementLines'), 'exclude': lambda f: f is None }})  
    status: Optional[StatementStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Current status of statements"""  
    