"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AppsUpdateUserPermissionsSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    
class AppsUpdateUserPermissionsRequestBodyPermissionsEnum(str, Enum):
    MANAGER = 'manager'
    DEVELOPER = 'developer'
    VIEWER = 'viewer'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppsUpdateUserPermissionsRequestBody:
    r"""The value to update the user permission for the app."""
    
    permissions: list[AppsUpdateUserPermissionsRequestBodyPermissionsEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions') }})
    r"""The permissions the user has for the app"""  
    

@dataclasses.dataclass
class AppsUpdateUserPermissionsRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    request_body: AppsUpdateUserPermissionsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""The value to update the user permission for the app."""  
    user_email: str = dataclasses.field(metadata={'path_param': { 'field_name': 'user_email', 'style': 'simple', 'explode': False }})
    r"""The user email of the user to patch"""  
    
class AppsUpdateUserPermissionsDefaultApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppsUpdateUserPermissionsDefaultApplicationJSONError:
    
    code: AppsUpdateUserPermissionsDefaultApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppsUpdateUserPermissionsDefaultApplicationJSON:
    r"""BadRequest"""
    
    error: AppsUpdateUserPermissionsDefaultApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    

@dataclasses.dataclass
class AppsUpdateUserPermissionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    apps_update_user_permissions_default_application_json_object: Optional[AppsUpdateUserPermissionsDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""BadRequest"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    