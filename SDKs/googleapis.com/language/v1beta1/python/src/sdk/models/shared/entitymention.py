"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import textspan as shared_textspan
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EntityMentionTypeEnum(str, Enum):
    r"""The type of the entity mention."""
    TYPE_UNKNOWN = 'TYPE_UNKNOWN'
    PROPER = 'PROPER'
    COMMON = 'COMMON'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EntityMention:
    r"""Represents a mention for an entity in the text. Currently, proper noun mentions are supported."""
    
    text: Optional[shared_textspan.TextSpan] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""Represents an output piece of text."""  
    type: Optional[EntityMentionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the entity mention."""  
    