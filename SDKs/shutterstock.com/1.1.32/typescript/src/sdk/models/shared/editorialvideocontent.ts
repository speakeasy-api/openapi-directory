/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EditorialCategory } from "./editorialcategory";
import { EditorialVideoAssets } from "./editorialvideoassets";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Metadata about editorial content
 */
export class EditorialVideoContent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "aspect" })
  aspect?: number;

  /**
   * Asset information, including size and thumbnail URLs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assets" })
  @Type(() => EditorialVideoAssets)
  assets?: EditorialVideoAssets;

  @SpeakeasyMetadata()
  @Expose({ name: "byline" })
  byline?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "caption" })
  caption?: string;

  /**
   * List of categories
   */
  @SpeakeasyMetadata({ elemType: EditorialCategory })
  @Expose({ name: "categories" })
  @Type(() => EditorialCategory)
  categories?: EditorialCategory[];

  @SpeakeasyMetadata()
  @Expose({ name: "date_taken" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTaken?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "keywords" })
  keywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
