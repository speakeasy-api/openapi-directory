/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CollectionStatus - The collectionstatus message.
 */
public class CollectionStatus {
    /**
     * A list of all issues associated with the collection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collectionLevelIssuses")
    public CollectionStatusItemLevelIssue[] collectionLevelIssuses;

    public CollectionStatus withCollectionLevelIssuses(CollectionStatusItemLevelIssue[] collectionLevelIssuses) {
        this.collectionLevelIssuses = collectionLevelIssuses;
        return this;
    }
    
    /**
     * Date on which the collection has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationDate")
    public String creationDate;

    public CollectionStatus withCreationDate(String creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    /**
     * The intended destinations for the collection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationStatuses")
    public CollectionStatusDestinationStatus[] destinationStatuses;

    public CollectionStatus withDestinationStatuses(CollectionStatusDestinationStatus[] destinationStatuses) {
        this.destinationStatuses = destinationStatuses;
        return this;
    }
    
    /**
     * Required. The ID of the collection for which status is reported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public CollectionStatus withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Date on which the collection has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastUpdateDate")
    public String lastUpdateDate;

    public CollectionStatus withLastUpdateDate(String lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
        return this;
    }
    
    public CollectionStatus(){}
}
