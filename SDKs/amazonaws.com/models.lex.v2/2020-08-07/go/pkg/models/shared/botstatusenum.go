// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BotStatusEnum string

const (
	BotStatusEnumCreating   BotStatusEnum = "Creating"
	BotStatusEnumAvailable  BotStatusEnum = "Available"
	BotStatusEnumInactive   BotStatusEnum = "Inactive"
	BotStatusEnumDeleting   BotStatusEnum = "Deleting"
	BotStatusEnumFailed     BotStatusEnum = "Failed"
	BotStatusEnumVersioning BotStatusEnum = "Versioning"
	BotStatusEnumImporting  BotStatusEnum = "Importing"
	BotStatusEnumUpdating   BotStatusEnum = "Updating"
)

func (e BotStatusEnum) ToPointer() *BotStatusEnum {
	return &e
}

func (e *BotStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Creating":
		fallthrough
	case "Available":
		fallthrough
	case "Inactive":
		fallthrough
	case "Deleting":
		fallthrough
	case "Failed":
		fallthrough
	case "Versioning":
		fallthrough
	case "Importing":
		fallthrough
	case "Updating":
		*e = BotStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BotStatusEnum: %v", v)
	}
}
