"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import authenticatedelement_enum as shared_authenticatedelement_enum
from ..shared import unauthenticatedelement_enum as shared_unauthenticatedelement_enum
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetBackendStorageResponseResourceConfigPermissions:
    r"""The authorization configuration for the storage S3 bucket."""
    
    authenticated: list[shared_authenticatedelement_enum.AuthenticatedElementEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Authenticated') }})  
    un_authenticated: Optional[list[shared_unauthenticatedelement_enum.UnAuthenticatedElementEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnAuthenticated'), 'exclude': lambda f: f is None }})  
    
class GetBackendStorageResponseResourceConfigServiceNameEnum(str, Enum):
    r"""The name of the storage service."""
    S3 = 'S3'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetBackendStorageResponseResourceConfig:
    r"""The resource configuration for the backend storage resource."""
    
    imported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Imported') }})  
    service_name: GetBackendStorageResponseResourceConfigServiceNameEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceName') }})  
    bucket_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BucketName'), 'exclude': lambda f: f is None }})  
    permissions: Optional[GetBackendStorageResponseResourceConfigPermissions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Permissions'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetBackendStorageResponse:
    r"""Success"""
    
    app_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AppId'), 'exclude': lambda f: f is None }})  
    backend_environment_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BackendEnvironmentName'), 'exclude': lambda f: f is None }})  
    resource_config: Optional[GetBackendStorageResponseResourceConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceConfig'), 'exclude': lambda f: f is None }})  
    resource_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceName'), 'exclude': lambda f: f is None }})  
    