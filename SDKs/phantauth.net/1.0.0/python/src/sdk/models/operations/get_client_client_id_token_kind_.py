"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetClientClientIDTokenKindKindEnum(str, Enum):
    r"""Token type"""
    REGISTRATION_ = '\'registration\''
    SELFIE_ = '\'selfie\''
    PLAIN_ = '\'plain\''


@dataclasses.dataclass
class GetClientClientIDTokenKindRequest:
    
    client_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'client_id', 'style': 'simple', 'explode': False }})
    r"""A client ID or email."""  
    kind: GetClientClientIDTokenKindKindEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'kind', 'style': 'simple', 'explode': False }})
    r"""Token type"""  
    

@dataclasses.dataclass
class GetClientClientIDTokenKindResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    