"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleFirebaseAppdistroV1Group:
    r"""A group which can contain testers. A group can be invited to test apps in a Firebase project."""
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The display name of the group."""  
    invite_link_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inviteLinkCount'), 'exclude': lambda f: f is None }})
    r"""Output only. The number of invite links for this group."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the group resource. Format: `projects/{project_number}/groups/{group_alias}`"""  
    release_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('releaseCount'), 'exclude': lambda f: f is None }})
    r"""Output only. The number of releases this group is permitted to access."""  
    tester_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testerCount'), 'exclude': lambda f: f is None }})
    r"""Output only. The number of testers who are members of this group."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleFirebaseAppdistroV1GroupInput:
    r"""A group which can contain testers. A group can be invited to test apps in a Firebase project."""
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The display name of the group."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the group resource. Format: `projects/{project_number}/groups/{group_alias}`"""  
    