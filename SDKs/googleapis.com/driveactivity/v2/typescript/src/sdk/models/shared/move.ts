/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TargetReference } from "./targetreference";
import { Expose, Type } from "class-transformer";

/**
 * An object was moved.
 */
export class Move extends SpeakeasyBase {
  /**
   * The added parent object(s).
   */
  @SpeakeasyMetadata({ elemType: TargetReference })
  @Expose({ name: "addedParents" })
  @Type(() => TargetReference)
  addedParents?: TargetReference[];

  /**
   * The removed parent object(s).
   */
  @SpeakeasyMetadata({ elemType: TargetReference })
  @Expose({ name: "removedParents" })
  @Type(() => TargetReference)
  removedParents?: TargetReference[];
}
