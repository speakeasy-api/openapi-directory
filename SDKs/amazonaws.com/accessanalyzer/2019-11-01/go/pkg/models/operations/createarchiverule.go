// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateArchiveRulePathParams struct {
	// The name of the created analyzer.
	AnalyzerName string `pathParam:"style=simple,explode=false,name=analyzerName"`
}

type CreateArchiveRuleHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateArchiveRuleRequestBody struct {
	// A client token.
	ClientToken *string `json:"clientToken,omitempty"`
	// The criteria for the rule.
	Filter map[string]shared.Criterion `json:"filter"`
	// The name of the rule to create.
	RuleName string `json:"ruleName"`
}

type CreateArchiveRuleRequest struct {
	PathParams CreateArchiveRulePathParams
	Headers    CreateArchiveRuleHeaders
	Request    CreateArchiveRuleRequestBody `request:"mediaType=application/json"`
}

type CreateArchiveRuleResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
