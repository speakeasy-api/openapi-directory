"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import route as shared_route
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkFirewallBlackHoleRouteDetectedViolation:
    r"""Violation detail for an internet gateway route with an inactive state in the customer subnet route table or Network Firewall subnet route table."""
    
    route_table_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RouteTableId'), 'exclude': lambda f: f is None }})  
    violating_routes: Optional[list[shared_route.Route]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ViolatingRoutes'), 'exclude': lambda f: f is None }})  
    violation_target: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ViolationTarget'), 'exclude': lambda f: f is None }})  
    vpc_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcId'), 'exclude': lambda f: f is None }})  
    