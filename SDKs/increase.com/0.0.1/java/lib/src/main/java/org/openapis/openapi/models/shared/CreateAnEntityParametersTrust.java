/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateAnEntityParametersTrust - Details of the trust entity to create. Required if `structure` is equal to `trust`.
 */
public class CreateAnEntityParametersTrust {
    /**
     * The trust's address.
     */
    @JsonProperty("address")
    public CreateAnEntityParametersTrustAddress address;
    public CreateAnEntityParametersTrust withAddress(CreateAnEntityParametersTrustAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * Whether the trust is `revocable` or `irrevocable`. Irrevocable trusts require their own Employer Identification Number. Revocable trusts require information about the individual `grantor` who created the trust.
     */
    @JsonProperty("category")
    public CreateAnEntityParametersTrustCategoryEnum category;
    public CreateAnEntityParametersTrust withCategory(CreateAnEntityParametersTrustCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * The identifier of the File containing the formation document of the trust.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formation_document_file_id")
    public String formationDocumentFileId;
    public CreateAnEntityParametersTrust withFormationDocumentFileId(String formationDocumentFileId) {
        this.formationDocumentFileId = formationDocumentFileId;
        return this;
    }
    
    /**
     * The two-letter United States Postal Service (USPS) abbreviation for the state in which the trust was formed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formation_state")
    public String formationState;
    public CreateAnEntityParametersTrust withFormationState(String formationState) {
        this.formationState = formationState;
        return this;
    }
    
    /**
     * The grantor of the trust. Required if `category` is equal to `revocable`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grantor")
    public CreateAnEntityParametersTrustGrantor grantor;
    public CreateAnEntityParametersTrust withGrantor(CreateAnEntityParametersTrustGrantor grantor) {
        this.grantor = grantor;
        return this;
    }
    
    /**
     * The legal name of the trust.
     */
    @JsonProperty("name")
    public String name;
    public CreateAnEntityParametersTrust withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The Employer Identification Number (EIN) for the trust. Required if `category` is equal to `irrevocable`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_identifier")
    public String taxIdentifier;
    public CreateAnEntityParametersTrust withTaxIdentifier(String taxIdentifier) {
        this.taxIdentifier = taxIdentifier;
        return this;
    }
    
    /**
     * The trustees of the trust.
     */
    @JsonProperty("trustees")
    public CreateAnEntityParametersTrustTrustees[] trustees;
    public CreateAnEntityParametersTrust withTrustees(CreateAnEntityParametersTrustTrustees[] trustees) {
        this.trustees = trustees;
        return this;
    }
    
}
