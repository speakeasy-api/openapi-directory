<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibility - Eligibility
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibility
{
    /**
     * Indicates a customer's age is part of eligibility criteria
     * 
     * @var bool $ageRestricted
     */
	#[\JMS\Serializer\Annotation\SerializedName('AgeRestricted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $ageRestricted;
    
    /**
     * Annual Business Turnover
     * 
     * @var ?string $annualBusinessTurnover
     */
	#[\JMS\Serializer\Annotation\SerializedName('AnnualBusinessTurnover')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $annualBusinessTurnover = null;
    
    /**
     * Annual Business Turnover Currency
     * 
     * @var ?string $annualBusinessTurnoverCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('AnnualBusinessTurnoverCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $annualBusinessTurnoverCurrency = null;
    
    /**
     * One paragraph detailing the eligibility
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * Free text description, denotes non standard eligibilities not included in the code list
     * 
     * @var ?string $eligibilityName
     */
	#[\JMS\Serializer\Annotation\SerializedName('EligibilityName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eligibilityName = null;
    
    /**
     * Optional additional notes to supplement the eligibility conditions. Only used for very specific conditions
     * 
     * @var ?string $eligibilityNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('EligibilityNotes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eligibilityNotes = null;
    
    /**
     * Eligibility type
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityEligibilityTypeEnum $eligibilityType
     */
	#[\JMS\Serializer\Annotation\SerializedName('EligibilityType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityEligibilityTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityEligibilityTypeEnum $eligibilityType = null;
    
    /**
     * Stipulates any particular definition of income that applies to the income eligibility and/or method by which income must paid into the account (eg Salary DD)
     * 
     * @var ?string $incomeCondition
     */
	#[\JMS\Serializer\Annotation\SerializedName('IncomeCondition')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $incomeCondition = null;
    
    /**
     * Indicates if eligibility linked to income
     * 
     * @var bool $incomeTurnoverRelated
     */
	#[\JMS\Serializer\Annotation\SerializedName('IncomeTurnoverRelated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $incomeTurnoverRelated;
    
    /**
     * $marketingEligibility
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityMarketingEligibilityEnum> $marketingEligibility
     */
	#[\JMS\Serializer\Annotation\SerializedName('MarketingEligibility')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityMarketingEligibilityEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $marketingEligibility = null;
    
    /**
     * Maximum number of the same prodcut the customer may hold
     * 
     * @var ?string $maxNumberOfAccounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaxNumberOfAccounts')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maxNumberOfAccounts = null;
    
    /**
     * Maximum age, in years, allowed to hold the account
     * 
     * @var ?int $maximumAge
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaximumAge')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maximumAge = null;
    
    /**
     * Maximum age, in years, to open an account
     * 
     * @var ?int $maximumAgeToOpen
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaximumAgeToOpen')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maximumAgeToOpen = null;
    
    /**
     * A maximum amount to be deposited at opening
     * 
     * @var ?bool $maximumOpeningAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaximumOpeningAmount')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $maximumOpeningAmount = null;
    
    /**
     * Minimum Income Amount required to paid into the account
     * 
     * @var ?int $minIncomeTurnoverPaidIntoAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinIncomeTurnoverPaidIntoAccount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minIncomeTurnoverPaidIntoAccount = null;
    
    /**
     * Minimum age, in years, required to hold an account
     * 
     * @var ?int $minimumAge
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumAge')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minimumAge = null;
    
    /**
     * A minimum deposit required to hold this account
     * 
     * @var ?bool $minimumDeposit
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumDeposit')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $minimumDeposit = null;
    
    /**
     * The frequency that the minimum mentioned before is deposited in the account. Yearly is very important for premium accounts
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityMinimumIncomeFrequencyEnum $minimumIncomeFrequency
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumIncomeFrequency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityMinimumIncomeFrequencyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityMinimumIncomeFrequencyEnum $minimumIncomeFrequency = null;
    
    /**
     * Minimum income / Turnover required to hold the product
     * 
     * @var ?string $minimumIncomeTurnoverAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumIncomeTurnoverAmount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minimumIncomeTurnoverAmount = null;
    
    /**
     * Minimum income / Turnover Currency
     * 
     * @var ?string $minimumIncomeTurnoverCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumIncomeTurnoverCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minimumIncomeTurnoverCurrency = null;
    
    /**
     * Minimum Operating Balance
     * 
     * @var ?string $minimumOperatingBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumOperatingBalance')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minimumOperatingBalance = null;
    
    /**
     * Minimum Operating Balance currency
     * 
     * @var ?string $minimumOperatingBalanceCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumOperatingBalanceCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minimumOperatingBalanceCurrency = null;
    
    /**
     * Is there a Minimum Operating Balance?
     * 
     * @var ?bool $minimumOperatingBalanceExists
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumOperatingBalanceExists')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $minimumOperatingBalanceExists = null;
    
    /**
     * Maximum Amount to be depositing at opening
     * 
     * @var ?string $openingDepositMaximumAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('OpeningDepositMaximumAmount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $openingDepositMaximumAmount = null;
    
    /**
     * The currency of the Minimum Amount to be depositing at opening
     * 
     * @var ?string $openingDepositMaximumCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('OpeningDepositMaximumCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $openingDepositMaximumCurrency = null;
    
    /**
     * Minimum Amount to be held on account
     * 
     * @var ?string $openingDepositMinimum
     */
	#[\JMS\Serializer\Annotation\SerializedName('OpeningDepositMinimum')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $openingDepositMinimum = null;
    
    /**
     * The currency of the Minimum Amount to be depositing at opening
     * 
     * @var ?string $openingDepositMinimumCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('OpeningDepositMinimumCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $openingDepositMinimumCurrency = null;
    
    /**
     * Indicates that it is necessary to hold another product with the bank in order to be eligible for this product or feature
     * 
     * @var bool $otherFinancialHoldingRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('OtherFinancialHoldingRequired')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $otherFinancialHoldingRequired;
    
    /**
     * Describes if a previous bankruptcy / insolvency disqualfies for this account Details in ELI-280
     * 
     * @var bool $previousBankruptcy
     */
	#[\JMS\Serializer\Annotation\SerializedName('PreviousBankruptcy')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $previousBankruptcy;
    
    /**
     * Indicates a customer's residency forms part of the eligibility criteria
     * 
     * @var bool $residencyRestricted
     */
	#[\JMS\Serializer\Annotation\SerializedName('ResidencyRestricted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $residencyRestricted;
    
    /**
     * Indicates a customer must be current resident of a geographic area/country
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityResidencyRestrictedRegionEnum $residencyRestrictedRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('ResidencyRestrictedRegion')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityResidencyRestrictedRegionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilityResidencyRestrictedRegionEnum $residencyRestrictedRegion = null;
    
    /**
     * Minimum Income Source. For certain products a minimum income is required. This can be mandated as to the single income or to a joint income. This field describes this
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilitySingleJointIncomeEnum $singleJointIncome
     */
	#[\JMS\Serializer\Annotation\SerializedName('SingleJointIncome')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilitySingleJointIncomeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetUnsecuredSmeLoans200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibilitySingleJointIncomeEnum $singleJointIncome = null;
    
    /**
     * Is the product available to operate as a Clubs or Societies account?
     * 
     * @var bool $thirdSectorOrganisations
     */
	#[\JMS\Serializer\Annotation\SerializedName('ThirdSectorOrganisations')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $thirdSectorOrganisations;
    
	public function __construct()
	{
		$this->ageRestricted = false;
		$this->annualBusinessTurnover = null;
		$this->annualBusinessTurnoverCurrency = null;
		$this->description = "";
		$this->eligibilityName = null;
		$this->eligibilityNotes = null;
		$this->eligibilityType = null;
		$this->incomeCondition = null;
		$this->incomeTurnoverRelated = false;
		$this->marketingEligibility = null;
		$this->maxNumberOfAccounts = null;
		$this->maximumAge = null;
		$this->maximumAgeToOpen = null;
		$this->maximumOpeningAmount = null;
		$this->minIncomeTurnoverPaidIntoAccount = null;
		$this->minimumAge = null;
		$this->minimumDeposit = null;
		$this->minimumIncomeFrequency = null;
		$this->minimumIncomeTurnoverAmount = null;
		$this->minimumIncomeTurnoverCurrency = null;
		$this->minimumOperatingBalance = null;
		$this->minimumOperatingBalanceCurrency = null;
		$this->minimumOperatingBalanceExists = null;
		$this->openingDepositMaximumAmount = null;
		$this->openingDepositMaximumCurrency = null;
		$this->openingDepositMinimum = null;
		$this->openingDepositMinimumCurrency = null;
		$this->otherFinancialHoldingRequired = false;
		$this->previousBankruptcy = false;
		$this->residencyRestricted = false;
		$this->residencyRestrictedRegion = null;
		$this->singleJointIncome = null;
		$this->thirdSectorOrganisations = false;
	}
}
