// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaskTypeEnum string

const (
	TaskTypeEnumArithmetic  TaskTypeEnum = "Arithmetic"
	TaskTypeEnumFilter      TaskTypeEnum = "Filter"
	TaskTypeEnumMap         TaskTypeEnum = "Map"
	TaskTypeEnumMapAll      TaskTypeEnum = "Map_all"
	TaskTypeEnumMask        TaskTypeEnum = "Mask"
	TaskTypeEnumMerge       TaskTypeEnum = "Merge"
	TaskTypeEnumPassthrough TaskTypeEnum = "Passthrough"
	TaskTypeEnumTruncate    TaskTypeEnum = "Truncate"
	TaskTypeEnumValidate    TaskTypeEnum = "Validate"
	TaskTypeEnumPartition   TaskTypeEnum = "Partition"
)

func (e TaskTypeEnum) ToPointer() *TaskTypeEnum {
	return &e
}

func (e *TaskTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Arithmetic":
		fallthrough
	case "Filter":
		fallthrough
	case "Map":
		fallthrough
	case "Map_all":
		fallthrough
	case "Mask":
		fallthrough
	case "Merge":
		fallthrough
	case "Passthrough":
		fallthrough
	case "Truncate":
		fallthrough
	case "Validate":
		fallthrough
	case "Partition":
		*e = TaskTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskTypeEnum: %v", v)
	}
}
