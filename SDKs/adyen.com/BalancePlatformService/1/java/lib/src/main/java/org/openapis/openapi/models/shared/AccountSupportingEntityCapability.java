/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AccountSupportingEntityCapability {
    /**
     * Indicates whether the supporting entity capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowed")
    public Boolean allowed;

    public AccountSupportingEntityCapability withAllowed(Boolean allowed) {
        this.allowed = allowed;
        return this;
    }
    
    /**
     * The capability level that is allowed for the account holder.
     * 
     * Possible values: **notApplicable**, **low**, **medium**, **high**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedLevel")
    public AccountSupportingEntityCapabilityAllowedLevelEnum allowedLevel;

    public AccountSupportingEntityCapability withAllowedLevel(AccountSupportingEntityCapabilityAllowedLevelEnum allowedLevel) {
        this.allowedLevel = allowedLevel;
        return this;
    }
    
    /**
     * Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;

    public AccountSupportingEntityCapability withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * The ID of the supporting entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public AccountSupportingEntityCapability withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requested")
    public Boolean requested;

    public AccountSupportingEntityCapability withRequested(Boolean requested) {
        this.requested = requested;
        return this;
    }
    
    /**
     * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
     * 
     * Possible values: **notApplicable**, **low**, **medium**, **high**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestedLevel")
    public AccountSupportingEntityCapabilityRequestedLevelEnum requestedLevel;

    public AccountSupportingEntityCapability withRequestedLevel(AccountSupportingEntityCapabilityRequestedLevelEnum requestedLevel) {
        this.requestedLevel = requestedLevel;
        return this;
    }
    
    /**
     * The status of the verification checks for the supporting entity capability.
     * 
     * Possible values:
     * 
     * * **pending**: Adyen is running the verification.
     * 
     * * **invalid**: The verification failed. Check if the `errors` array contains more information.
     * 
     * * **valid**: The verification has been successfully completed.
     * 
     * * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verificationStatus")
    public AccountSupportingEntityCapabilityVerificationStatusEnum verificationStatus;

    public AccountSupportingEntityCapability withVerificationStatus(AccountSupportingEntityCapabilityVerificationStatusEnum verificationStatus) {
        this.verificationStatus = verificationStatus;
        return this;
    }
    
    public AccountSupportingEntityCapability(){}
}
