/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListZoomRoomsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * The status of the Zoom Room.
 */
export enum ListZoomRoomsStatusEnum {
  Offline = "Offline",
  Available = "Available",
  InMeeting = "InMeeting",
  UnderConstruction = "UnderConstruction",
}

/**
 * Type of the Zoom Rooms.
 */
export enum ListZoomRoomsTypeEnum {
  ZoomRoom = "ZoomRoom",
  SchedulingDisplayOnly = "SchedulingDisplayOnly",
  DigitalSignageOnly = "DigitalSignageOnly",
}

export class ListZoomRoomsRequest extends SpeakeasyBase {
  /**
   * Parent location ID of the Zoom Room.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=location_id",
  })
  locationId?: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * The status of the Zoom Room.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: ListZoomRoomsStatusEnum;

  /**
   * Type of the Zoom Rooms.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: ListZoomRoomsTypeEnum;

  /**
   * Use this query parameter with a value of `true` if you would like to see Zoom Rooms in your account that have not been assigned to anyone yet.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=unassigned_rooms",
  })
  unassignedRooms?: boolean;
}

/**
 * Status of the Zoom Room.
 */
export enum ListZoomRooms200ApplicationXMLRoomsStatusEnum {
  Offline = "Offline",
  Available = "Available",
  InMeeting = "InMeeting",
  UnderConstruction = "UnderConstruction",
}

export class ListZoomRooms200ApplicationXMLRooms extends SpeakeasyBase {
  /**
   * Activation Code is the code that is used to complete the setup of the Zoom Room.
   */
  @SpeakeasyMetadata()
  activationCode?: string;

  /**
   * Unique Identifier of the Zoom Room.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Unique Identifier of the [location](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) of the room.
   */
  @SpeakeasyMetadata()
  locationId?: string;

  /**
   * Name of the Zoom Room.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.
   */
  @SpeakeasyMetadata()
  roomId?: string;

  /**
   * Status of the Zoom Room.
   */
  @SpeakeasyMetadata()
  status?: ListZoomRooms200ApplicationXMLRoomsStatusEnum;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * A list of Zoom Rooms returned successfully.
 */
export class ListZoomRooms200ApplicationXML extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * List of existing Zoom Rooms.
   */
  @SpeakeasyMetadata({ elemType: ListZoomRooms200ApplicationXMLRooms })
  rooms?: ListZoomRooms200ApplicationXMLRooms[];
}

/**
 * Status of the Zoom Room.
 */
export enum ListZoomRooms200ApplicationJSONRoomsStatusEnum {
  Offline = "Offline",
  Available = "Available",
  InMeeting = "InMeeting",
  UnderConstruction = "UnderConstruction",
}

export class ListZoomRooms200ApplicationJSONRooms extends SpeakeasyBase {
  /**
   * Activation Code is the code that is used to complete the setup of the Zoom Room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activation_code" })
  activationCode?: string;

  /**
   * Unique Identifier of the Zoom Room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Unique Identifier of the [location](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) of the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId?: string;

  /**
   * Name of the Zoom Room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "room_id" })
  roomId?: string;

  /**
   * Status of the Zoom Room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ListZoomRooms200ApplicationJSONRoomsStatusEnum;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * A list of Zoom Rooms returned successfully.
 */
export class ListZoomRooms200ApplicationJSON extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * List of existing Zoom Rooms.
   */
  @SpeakeasyMetadata({ elemType: ListZoomRooms200ApplicationJSONRooms })
  @Expose({ name: "rooms" })
  @Type(() => ListZoomRooms200ApplicationJSONRooms)
  rooms?: ListZoomRooms200ApplicationJSONRooms[];
}

export class ListZoomRoomsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * A list of Zoom Rooms returned successfully.
   */
  @SpeakeasyMetadata()
  listZoomRooms200ApplicationJSONObject?: ListZoomRooms200ApplicationJSON;
}
