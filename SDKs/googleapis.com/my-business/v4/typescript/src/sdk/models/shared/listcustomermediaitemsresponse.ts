/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MediaItem } from "./mediaitem";
import { Expose, Type } from "class-transformer";

/**
 * Response message for Media.ListCustomerMediaItems.
 */
export class ListCustomerMediaItemsResponse extends SpeakeasyBase {
  /**
   * The returned list of media items.
   */
  @SpeakeasyMetadata({ elemType: MediaItem })
  @Expose({ name: "mediaItems" })
  @Type(() => MediaItem)
  mediaItems?: MediaItem[];

  /**
   * If there are more media items than the requested page size, then this field is populated with a token to fetch the next page of media items on a subsequent call to ListCustomerMediaItems.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The total number of media items for this location, irrespective of pagination. This number is approximate, particularly when there are multiple pages of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalMediaItemCount" })
  totalMediaItemCount?: number;
}
