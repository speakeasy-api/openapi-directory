// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConfigurationItemTypeEnum string

const (
	ConfigurationItemTypeEnumServer      ConfigurationItemTypeEnum = "SERVER"
	ConfigurationItemTypeEnumProcess     ConfigurationItemTypeEnum = "PROCESS"
	ConfigurationItemTypeEnumConnection  ConfigurationItemTypeEnum = "CONNECTION"
	ConfigurationItemTypeEnumApplication ConfigurationItemTypeEnum = "APPLICATION"
)

func (e ConfigurationItemTypeEnum) ToPointer() *ConfigurationItemTypeEnum {
	return &e
}

func (e *ConfigurationItemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SERVER":
		fallthrough
	case "PROCESS":
		fallthrough
	case "CONNECTION":
		fallthrough
	case "APPLICATION":
		*e = ConfigurationItemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigurationItemTypeEnum: %v", v)
	}
}
