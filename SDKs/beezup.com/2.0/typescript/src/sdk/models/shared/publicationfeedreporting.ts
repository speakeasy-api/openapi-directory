/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FeedTypeEnum } from "./feedtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Publication feed reporting
 */
export class PublicationFeedReporting extends SpeakeasyBase {
  /**
   * Indicates if the publication is completed or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "completed" })
  completed?: boolean;

  /**
   * The feed publication end time (UTC timezone)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endUtcDate?: Date;

  /**
   * The error message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  /**
   * The product count downloaded from BeezUP Export
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exportedProducts" })
  exportedProducts?: number;

  /**
   * The item count (products or offers) the marketplace flagged as failed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failedItems" })
  failedItems?: number;

  /**
   * The Feed Type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feedType" })
  feedType: FeedTypeEnum;

  /**
   * The error message if the Html Report generation failed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "htmlReportGenerationErrorMessage" })
  htmlReportGenerationErrorMessage?: string;

  /**
   * The Url for the Html Report generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "htmlReportUrl" })
  htmlReportUrl?: string;

  /**
   * The processing status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processingStatus" })
  processingStatus: string;

  /**
   * The item count (products or offers) the marketplace flagged as successful
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publishedItems" })
  publishedItems?: number;

  /**
   * The item count (products or offers) the marketplace flagged as successful with warnings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publishedItemsWithWarning" })
  publishedItemsWithWarning?: number;

  /**
   * The feed publication start time (UTC timezone)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startUtcDate: Date;

  /**
   * The item count (products or offers) sent to the marketplace
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transmittedItems" })
  transmittedItems?: number;
}
