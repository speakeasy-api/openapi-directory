/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class InvoiceItem {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public InvoiceItem withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("asset_account")
    public LinkedLedgerAccount assetAccount;
    public InvoiceItem withAssetAccount(LinkedLedgerAccount assetAccount) {
        this.assetAccount = assetAccount;
        return this;
    }
    
    /**
     * User defined item code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;
    public InvoiceItem withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * The date and time when the object was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public InvoiceItem withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The user who created the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    public String createdBy;
    public InvoiceItem withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * A short description of the item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public InvoiceItem withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expense_account")
    public LinkedLedgerAccount expenseAccount;
    public InvoiceItem withExpenseAccount(LinkedLedgerAccount expenseAccount) {
        this.expenseAccount = expenseAccount;
        return this;
    }
    
    /**
     * The ID of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public InvoiceItem withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("income_account")
    public LinkedLedgerAccount incomeAccount;
    public InvoiceItem withIncomeAccount(LinkedLedgerAccount incomeAccount) {
        this.incomeAccount = incomeAccount;
        return this;
    }
    
    /**
     * The date of opening balance if inventory item is tracked - YYYY-MM-DD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("inventory_date")
    public LocalDate inventoryDate;
    public InvoiceItem withInventoryDate(LocalDate inventoryDate) {
        this.inventoryDate = inventoryDate;
        return this;
    }
    
    /**
     * Item name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public InvoiceItem withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchase_details")
    public InvoiceItemPurchaseDetails purchaseDetails;
    public InvoiceItem withPurchaseDetails(InvoiceItemPurchaseDetails purchaseDetails) {
        this.purchaseDetails = purchaseDetails;
        return this;
    }
    
    /**
     * Item is available for purchase transactions
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchased")
    public Boolean purchased;
    public InvoiceItem withPurchased(Boolean purchased) {
        this.purchased = purchased;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Double quantity;
    public InvoiceItem withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("row_version")
    public String rowVersion;
    public InvoiceItem withRowVersion(String rowVersion) {
        this.rowVersion = rowVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sales_details")
    public InvoiceItemSalesDetails salesDetails;
    public InvoiceItem withSalesDetails(InvoiceItemSalesDetails salesDetails) {
        this.salesDetails = salesDetails;
        return this;
    }
    
    /**
     * Item will be available on sales transactions
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sold")
    public Boolean sold;
    public InvoiceItem withSold(Boolean sold) {
        this.sold = sold;
        return this;
    }
    
    /**
     * Item is inventoried
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracked")
    public Boolean tracked;
    public InvoiceItem withTracked(Boolean tracked) {
        this.tracked = tracked;
        return this;
    }
    
    /**
     * Item type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public InvoiceItemTypeEnum type;
    public InvoiceItem withType(InvoiceItemTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit_price")
    public Double unitPrice;
    public InvoiceItem withUnitPrice(Double unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    /**
     * The date and time when the object was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public InvoiceItem withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The user who last updated the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_by")
    public String updatedBy;
    public InvoiceItem withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
}
