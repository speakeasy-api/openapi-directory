"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import saveaccountconfigrequest as shared_saveaccountconfigrequest
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class SaveaccountconfigRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."""  
    account_name: str = dataclasses.field(metadata={'query_param': { 'field_name': 'accountName', 'style': 'form', 'explode': True }})
    r"""Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Describes the type of the content being sent."""  
    saveaccountconfig_request: shared_saveaccountconfigrequest.SaveaccountconfigRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Saveaccountconfig200ApplicationJSONRules:
    r"""Items and products that belong to sellers."""
    
    item: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Item'), 'exclude': lambda f: f is None }})
    r"""SKUs' ID."""  
    product: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Product'), 'exclude': lambda f: f is None }})
    r"""Product's name."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Saveaccountconfig200ApplicationJSONScore:
    r"""[Matcher's rates](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring) to approve or reject [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) sent by sellers."""
    
    approve: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Approve'), 'exclude': lambda f: f is None }})
    r"""Score to approve SKUs sent by sellers."""  
    reject: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Reject'), 'exclude': lambda f: f is None }})
    r"""Score to reject SKUs sent by sellers."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Saveaccountconfig200ApplicationJSON:
    r"""OK"""
    
    matchers: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Matchers'), 'exclude': lambda f: f is None }})
    r"""[Matchers](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring) configurations for approving and rejecting [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) sent by sellers."""  
    match_flux: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MatchFlux'), 'exclude': lambda f: f is None }})
    r"""Type of approval configuration that apply to received SKUs sent by sellers. The possible values are:
    
    `default`: the matcher approves the SKU. 
    
    `manual`: manual SKU's approvals. 
    
    `AutoApprove`: automatic SKU's approvals.
    """  
    rules: Optional[Saveaccountconfig200ApplicationJSONRules] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Rules'), 'exclude': lambda f: f is None }})
    r"""Items and products that belong to sellers."""  
    score: Optional[Saveaccountconfig200ApplicationJSONScore] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Score'), 'exclude': lambda f: f is None }})
    r"""[Matcher's rates](https://help.vtex.com/en/tutorial/understanding-vtex-matcher-scoring) to approve or reject [received SKUs](https://help.vtex.com/en/tutorial/cataloging-received-skus--tutorials_396) sent by sellers."""  
    specifications_mapping: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpecificationsMapping'), 'exclude': lambda f: f is None }})
    r"""This attribute maps product and SKU's specifications between the marketplace and the seller."""  
    

@dataclasses.dataclass
class SaveaccountconfigResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    saveaccountconfig_200_application_json_object: Optional[Saveaccountconfig200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    