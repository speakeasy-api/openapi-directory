// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateServiceWebhookConfigurationServerList = []string{
	"https://conversations.twilio.com",
}

type UpdateServiceWebhookConfigurationSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type UpdateServiceWebhookConfigurationPathParams struct {
	// The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.
	ChatServiceSid string `pathParam:"style=simple,explode=false,name=ChatServiceSid"`
}

type UpdateServiceWebhookConfigurationUpdateServiceWebhookConfigurationRequest struct {
	// The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.
	Filters []string `form:"name=Filters"`
	// The HTTP method to be used when sending a webhook request. One of `GET` or `POST`.
	Method *string `form:"name=Method"`
	// The absolute url the post-event webhook request should be sent to.
	PostWebhookURL *string `form:"name=PostWebhookUrl"`
	// The absolute url the pre-event webhook request should be sent to.
	PreWebhookURL *string `form:"name=PreWebhookUrl"`
}

type UpdateServiceWebhookConfigurationRequest struct {
	PathParams UpdateServiceWebhookConfigurationPathParams
	Request    *UpdateServiceWebhookConfigurationUpdateServiceWebhookConfigurationRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   UpdateServiceWebhookConfigurationSecurity
	ServerURL  *string
}

type UpdateServiceWebhookConfigurationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration *shared.ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration
}
