// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CreateOrganizationAdaptivePolicyPolicyRequestBodyAcls struct {
	// The ID of the adaptive policy ACL
	ID *string `json:"id,omitempty"`
	// The name of the adaptive policy ACL
	Name *string `json:"name,omitempty"`
}

// CreateOrganizationAdaptivePolicyPolicyRequestBodyDestinationGroup - The destination adaptive policy group (requires one unique attribute)
type CreateOrganizationAdaptivePolicyPolicyRequestBodyDestinationGroup struct {
	// The ID of the destination adaptive policy group
	ID *string `json:"id,omitempty"`
	// The name of the destination adaptive policy group
	Name *string `json:"name,omitempty"`
	// The SGT of the destination adaptive policy group
	Sgt *int64 `json:"sgt,omitempty"`
}

// CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum - The rule to apply if there is no matching ACL (default: "default")
type CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum string

const (
	CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnumAllow   CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum = "allow"
	CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnumDefault CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum = "default"
	CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnumDeny    CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum = "deny"
)

func (e CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum) ToPointer() *CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum {
	return &e
}

func (e *CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "default":
		fallthrough
	case "deny":
		*e = CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum: %v", v)
	}
}

// CreateOrganizationAdaptivePolicyPolicyRequestBodySourceGroup - The source adaptive policy group (requires one unique attribute)
type CreateOrganizationAdaptivePolicyPolicyRequestBodySourceGroup struct {
	// The ID of the source adaptive policy group
	ID *string `json:"id,omitempty"`
	// The name of the source adaptive policy group
	Name *string `json:"name,omitempty"`
	// The SGT of the source adaptive policy group
	Sgt *int64 `json:"sgt,omitempty"`
}

type CreateOrganizationAdaptivePolicyPolicyRequestBody struct {
	// An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy (default: [])
	Acls []CreateOrganizationAdaptivePolicyPolicyRequestBodyAcls `json:"acls,omitempty"`
	// The destination adaptive policy group (requires one unique attribute)
	DestinationGroup CreateOrganizationAdaptivePolicyPolicyRequestBodyDestinationGroup `json:"destinationGroup"`
	// The rule to apply if there is no matching ACL (default: "default")
	LastEntryRule *CreateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum `json:"lastEntryRule,omitempty"`
	// The source adaptive policy group (requires one unique attribute)
	SourceGroup CreateOrganizationAdaptivePolicyPolicyRequestBodySourceGroup `json:"sourceGroup"`
}

type CreateOrganizationAdaptivePolicyPolicyRequest struct {
	RequestBody    CreateOrganizationAdaptivePolicyPolicyRequestBody `request:"mediaType=application/json"`
	OrganizationID string                                            `pathParam:"style=simple,explode=false,name=organizationId"`
}

type CreateOrganizationAdaptivePolicyPolicyResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	CreateOrganizationAdaptivePolicyPolicy201ApplicationJSONObject map[string]interface{}
}
