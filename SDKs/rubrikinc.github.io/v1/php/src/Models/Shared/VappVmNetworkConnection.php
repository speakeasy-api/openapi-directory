<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class VappVmNetworkConnection
{
    /**
     * Method used to allocate IP addresses for the specified vApp network.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VappVmIpAddressingModeEnum $addressingMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('addressingMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VappVmIpAddressingModeEnum>')]
    public VappVmIpAddressingModeEnum $addressingMode;
    
    /**
     * IPv4 address to assign to the specified vApp network connection. Set this value only when the network address allocation method is 'Static'. Otherwise, the value should be empty.
     * 
     * @var ?string $ipAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipAddress = null;
    
    /**
     * Boolean value that indicates whether the specified vApp network connection is enabled. Set the value to 'true' to enable the connection or 'false' to disable the connection.
     * 
     * @var bool $isConnected
     */
	#[\JMS\Serializer\Annotation\SerializedName('isConnected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isConnected;
    
    /**
     * MAC address of the NIC that is used by the specified vApp network connection.
     * 
     * @var ?string $macAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('macAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $macAddress = null;
    
    /**
     * The network adapter type of the NIC.
     * 
     * @var ?string $networkAdapterType
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkAdapterType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkAdapterType = null;
    
    /**
     * Index assigned to the NIC that is used by the specified vApp network connection.
     * 
     * @var int $nicIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('nicIndex')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $nicIndex;
    
    /**
     * Name of the vApp network to which the NIC corresponding to this connection will connect to.
     * 
     * @var ?string $vappNetworkName
     */
	#[\JMS\Serializer\Annotation\SerializedName('vappNetworkName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vappNetworkName = null;
    
	public function __construct()
	{
		$this->addressingMode = \OpenAPI\OpenAPI\Models\Shared\VappVmIpAddressingModeEnum::DHCP;
		$this->ipAddress = null;
		$this->isConnected = false;
		$this->macAddress = null;
		$this->networkAdapterType = null;
		$this->nicIndex = 0;
		$this->vappNetworkName = null;
	}
}
