/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListTeamMemberBookingProfilesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class ListTeamMemberBookingProfilesRequest extends SpeakeasyBase {
  /**
   * Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=bookable_only",
  })
  bookableOnly?: boolean;

  /**
   * The cursor for paginating through the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cursor",
  })
  cursor?: string;

  /**
   * The maximum number of results to return.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Indicates whether to include only team members enabled at the given location in the returned result.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=location_id",
  })
  locationId?: string;
}

export class ListTeamMemberBookingProfilesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listTeamMemberBookingProfilesResponse?: shared.ListTeamMemberBookingProfilesResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
