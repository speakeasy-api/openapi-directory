/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetGroupRequest extends SpeakeasyBase {
  /**
   * Use group name instead of id
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export class GetGroup200ApplicationJSONExtras extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "visible_group_names" })
  visibleGroupNames: any[];
}

export class GetGroup200ApplicationJSONGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allow_membership_requests" })
  allowMembershipRequests: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "allow_unknown_sender_topic_replies" })
  allowUnknownSenderTopicReplies: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "associated_group_ids" })
  associatedGroupIds?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "automatic" })
  automatic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "automatic_membership_email_domains" })
  automaticMembershipEmailDomains: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bio_cooked" })
  bioCooked: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bio_excerpt" })
  bioExcerpt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bio_raw" })
  bioRaw: string;

  @SpeakeasyMetadata()
  @Expose({ name: "can_admin_group" })
  canAdminGroup: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_edit_group" })
  canEditGroup?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_see_members" })
  canSeeMembers: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "default_notification_level" })
  defaultNotificationLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "email_from_alias" })
  emailFromAlias?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email_password" })
  emailPassword: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email_username" })
  emailUsername: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_bg_color" })
  flairBgColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_color" })
  flairColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_url" })
  flairUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "full_name" })
  fullName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "grant_trust_level" })
  grantTrustLevel: string;

  @SpeakeasyMetadata()
  @Expose({ name: "has_messages" })
  hasMessages: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "imap_enabled" })
  imapEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "imap_last_error" })
  imapLastError: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imap_mailbox_name" })
  imapMailboxName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imap_mailboxes" })
  imapMailboxes: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "imap_new_emails" })
  imapNewEmails: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imap_old_emails" })
  imapOldEmails: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imap_port" })
  imapPort: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imap_server" })
  imapServer: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imap_ssl" })
  imapSsl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imap_updated_at" })
  imapUpdatedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imap_updated_by" })
  imapUpdatedBy?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "incoming_email" })
  incomingEmail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_group_owner_display" })
  isGroupOwnerDisplay: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "is_group_user" })
  isGroupUser: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "members_visibility_level" })
  membersVisibilityLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "membership_request_template" })
  membershipRequestTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mentionable" })
  mentionable: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "mentionable_level" })
  mentionableLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "message_count" })
  messageCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "messageable" })
  messageable: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "messageable_level" })
  messageableLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "muted_category_ids" })
  mutedCategoryIds: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "muted_tags" })
  mutedTags?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_group" })
  primaryGroup: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "public_admission" })
  publicAdmission: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "public_exit" })
  publicExit: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "publish_read_state" })
  publishReadState: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "regular_category_ids" })
  regularCategoryIds: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "regular_tags" })
  regularTags?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "smtp_enabled" })
  smtpEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "smtp_port" })
  smtpPort: string;

  @SpeakeasyMetadata()
  @Expose({ name: "smtp_server" })
  smtpServer: string;

  @SpeakeasyMetadata()
  @Expose({ name: "smtp_ssl" })
  smtpSsl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "smtp_updated_at" })
  smtpUpdatedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "smtp_updated_by" })
  smtpUpdatedBy?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tracking_category_ids" })
  trackingCategoryIds: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "tracking_tags" })
  trackingTags?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "user_count" })
  userCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "visibility_level" })
  visibilityLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "watching_category_ids" })
  watchingCategoryIds: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "watching_first_post_category_ids" })
  watchingFirstPostCategoryIds: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "watching_first_post_tags" })
  watchingFirstPostTags?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "watching_tags" })
  watchingTags?: any[];
}

/**
 * success response
 */
export class GetGroup200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "extras" })
  @Type(() => GetGroup200ApplicationJSONExtras)
  extras: GetGroup200ApplicationJSONExtras;

  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(() => GetGroup200ApplicationJSONGroup)
  group: GetGroup200ApplicationJSONGroup;
}

export class GetGroupResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success response
   */
  @SpeakeasyMetadata()
  getGroup200ApplicationJSONObject?: GetGroup200ApplicationJSON;
}
