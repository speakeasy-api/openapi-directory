/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * License - Represents a License resource. A License represents billing and aggregate usage data for public and marketplace images. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 
 */
public class License {
    /**
     * [Output Only] Deprecated. This field no longer reflects whether a license charges a usage fee.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargesUseFee")
    public Boolean chargesUseFee;
    public License withChargesUseFee(Boolean chargesUseFee) {
        this.chargesUseFee = chargesUseFee;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public License withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional textual description of the resource; provided by the client when the resource is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public License withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public License withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of resource. Always compute#license for licenses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public License withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * [Output Only] The unique code used to attach this license to images, snapshots, and disks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("licenseCode")
    public String licenseCode;
    public License withLicenseCode(String licenseCode) {
        this.licenseCode = licenseCode;
        return this;
    }
    
    /**
     * Name of the resource. The name must be 1-63 characters long and comply with RFC1035.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public License withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceRequirements")
    public LicenseResourceRequirements resourceRequirements;
    public License withResourceRequirements(LicenseResourceRequirements resourceRequirements) {
        this.resourceRequirements = resourceRequirements;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public License withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * If false, licenses will not be copied from the source resource when creating an image from a disk, disk from snapshot, or snapshot from disk.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferable")
    public Boolean transferable;
    public License withTransferable(Boolean transferable) {
        this.transferable = transferable;
        return this;
    }
    
}
