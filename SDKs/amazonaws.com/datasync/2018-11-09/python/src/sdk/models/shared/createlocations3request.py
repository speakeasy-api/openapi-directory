"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import s3config as shared_s3config
from ..shared import s3storageclass_enum as shared_s3storageclass_enum
from ..shared import taglistentry as shared_taglistentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateLocationS3Request:
    r"""CreateLocationS3Request"""
    
    s3_bucket_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3BucketArn') }})  
    s3_config: shared_s3config.S3Config = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Config') }})
    r"""<p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role used to access an Amazon S3 bucket.</p> <p>For detailed information about using such a role, see Creating a Location for Amazon S3 in the <i>DataSync User Guide</i>.</p>"""  
    agent_arns: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AgentArns'), 'exclude': lambda f: f is None }})  
    s3_storage_class: Optional[shared_s3storageclass_enum.S3StorageClassEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3StorageClass'), 'exclude': lambda f: f is None }})  
    subdirectory: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Subdirectory'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_taglistentry.TagListEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    