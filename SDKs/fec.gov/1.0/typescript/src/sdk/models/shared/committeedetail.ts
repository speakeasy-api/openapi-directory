/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class CommitteeDetailJfcCommittee extends SpeakeasyBase {
  /**
   *
   * @remarks
   * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "joint_committee_id" })
  jointCommitteeId?: string;

  /**
   * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "joint_committee_name" })
  jointCommitteeName?: string;
}

export class CommitteeDetail extends SpeakeasyBase {
  /**
   *
   * @remarks
   * Affiliated committee or connected organization
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "affiliated_committee_name" })
  affiliatedCommitteeName?: string;

  /**
   *
   * @remarks
   * A unique identifier assigned to each candidate registered with the FEC.
   * If a person runs for several offices, that person will have separate candidate IDs for each office.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_ids" })
  candidateIds?: string[];

  /**
   *
   * @remarks
   * City of committee as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   *
   * @remarks
   * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committee_id" })
  committeeId: string;

  /**
   * The one-letter type code of the organization:
   *
   * @remarks
   *         - C communication cost
   *         - D delegate
   *         - E electioneering communication
   *         - H House
   *         - I independent expenditure filer (not a committee)
   *         - N PAC - nonqualified
   *         - O independent expenditure-only (super PACs)
   *         - P presidential
   *         - Q PAC - qualified
   *         - S Senate
   *         - U single candidate independent expenditure
   *         - V PAC with non-contribution account, nonqualified
   *         - W PAC with non-contribution account, qualified
   *         - X party, nonqualified
   *         - Y party, qualified
   *         - Z national party non-federal account
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committee_type" })
  committeeType?: string;

  /**
   * The one-letter type code of the organization:
   *
   * @remarks
   *         - C communication cost
   *         - D delegate
   *         - E electioneering communication
   *         - H House
   *         - I independent expenditure filer (not a committee)
   *         - N PAC - nonqualified
   *         - O independent expenditure-only (super PACs)
   *         - P presidential
   *         - Q PAC - qualified
   *         - S Senate
   *         - U single candidate independent expenditure
   *         - V PAC with non-contribution account, nonqualified
   *         - W PAC with non-contribution account, qualified
   *         - X party, nonqualified
   *         - Y party, qualified
   *         - Z national party non-federal account
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committee_type_full" })
  committeeTypeFull?: string;

  /**
   *
   * @remarks
   * City of committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_city" })
  custodianCity?: string;

  /**
   *
   * @remarks
   * Name 1 of committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_name_1" })
  custodianName1?: string;

  /**
   *
   * @remarks
   * Name 2 of committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_name_2" })
  custodianName2?: string;

  /**
   *
   * @remarks
   * Full name of committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_name_full" })
  custodianNameFull?: string;

  /**
   *
   * @remarks
   * Middle name of committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_name_middle" })
  custodianNameMiddle?: string;

  /**
   *
   * @remarks
   * Name prefix of committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_name_prefix" })
  custodianNamePrefix?: string;

  /**
   *
   * @remarks
   * Suffix name of the committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_name_suffix" })
  custodianNameSuffix?: string;

  /**
   *
   * @remarks
   * Name title of the committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_name_title" })
  custodianNameTitle?: string;

  /**
   *
   * @remarks
   * Phone number of committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_phone" })
  custodianPhone?: string;

  /**
   *
   * @remarks
   * State of committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_state" })
  custodianState?: string;

  /**
   *
   * @remarks
   * Street address of the committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_street_1" })
  custodianStreet1?: string;

  /**
   *
   * @remarks
   * Second line of the street address of the committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_street_2" })
  custodianStreet2?: string;

  /**
   *
   * @remarks
   * Zip code of the committee custodian as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_zip" })
  custodianZip?: string;

  /**
   *
   * @remarks
   * A two year election cycle that the committee was active- (after original registration
   * date but before expiration date in Form 1s) The cycle begins with
   * an odd year and is named for its ending, even year.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cycles" })
  cycles?: number[];

  /**
   * The one-letter designation code of the organization:
   *
   * @remarks
   *          - A authorized by a candidate
   *          - J joint fundraising committee
   *          - P principal campaign committee of a candidate
   *          - U unauthorized
   *          - B lobbyist/registrant PAC
   *          - D leadership PAC
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "designation" })
  designation?: string;

  /**
   * The one-letter designation code of the organization:
   *
   * @remarks
   *          - A authorized by a candidate
   *          - J joint fundraising committee
   *          - P principal campaign committee of a candidate
   *          - U unauthorized
   *          - B lobbyist/registrant PAC
   *          - D leadership PAC
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "designation_full" })
  designationFull?: string;

  /**
   *
   * @remarks
   * Email as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   *
   * @remarks
   * Fax as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fax" })
  fax?: string;

  /**
   * The one-letter
   *
   * @remarks
   *     code of the filing frequency:
   *          - A Administratively terminated
   *          - D Debt
   *          - M Monthly filer
   *          - Q Quarterly filer
   *          - T Terminated
   *          - W Waived
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filing_frequency" })
  filingFrequency?: string;

  /**
   * The day the FEC received the committee's first Form 1
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_f1_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstF1Date?: Date;

  /**
   * The day the FEC received the committee's first filing. This is usually a Form 1 committee registration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_file_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstFileDate?: Date;

  /**
   * The form where the underlying data comes from, for example, Form 1 would appear as F1:
   *
   * @remarks
   *     - F1   Statement of Organization
   *     - F1M  Notification of Multicandidate Status
   *     - F2   Statement of Candidacy
   *     - F3   Report of Receipts and Disbursements for an Authorized Committee
   *     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President
   *     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs
   *     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee
   *     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention
   *     - F5   Report of Independent Expenditures Made and Contributions Received
   *     - F6   48 Hour Notice of Contributions/Loans Received
   *     - F7   Report of Communication Costs by Corporations and Membership Organizations
   *     - F8   Debt Settlement Plan
   *     - F9   24 Hour Notice of Disbursements for Electioneering Communications
   *     - F13  Report of Donations Accepted for Inaugural Committee
   *     - F99  Miscellaneous Text
   *     - FRQ  Request for Additional Information
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "form_type" })
  formType?: string;

  @SpeakeasyMetadata({ elemType: CommitteeDetailJfcCommittee })
  @Expose({ name: "jfc_committee" })
  @Type(() => CommitteeDetailJfcCommittee)
  jfcCommittee?: CommitteeDetailJfcCommittee[];

  /**
   * The day the FEC received the committee's most recent Form 1
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_f1_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastF1Date?: Date;

  /**
   * The day the FEC received the committee's most recent filing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_file_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastFileDate?: Date;

  /**
   *
   * @remarks
   * Indicates if the committee is a leadership PAC
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "leadership_pac" })
  leadershipPac?: string;

  /**
   *
   * @remarks
   * Indicates if the committee is a lobbyist registrant PAC
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lobbyist_registrant_pac" })
  lobbyistRegistrantPac?: string;

  /**
   * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The one-letter code for the kind for organization:
   *
   * @remarks
   *         - C corporation
   *         - L labor organization
   *         - M membership organization
   *         - T trade association
   *         - V cooperative
   *         - W corporation without capital stock
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization_type" })
  organizationType?: string;

  /**
   * The one-letter code for the kind for organization:
   *
   * @remarks
   *         - C corporation
   *         - L labor organization
   *         - M membership organization
   *         - T trade association
   *         - V cooperative
   *         - W corporation without capital stock
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization_type_full" })
  organizationTypeFull?: string;

  /**
   * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "party" })
  party?: string;

  /**
   * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "party_full" })
  partyFull?: string;

  /**
   *
   * @remarks
   * Code for the type of party the committee is, only if applicable
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "party_type" })
  partyType?: string;

  /**
   *
   * @remarks
   * Description of the type of party the committee is, only if applicable
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "party_type_full" })
  partyTypeFull?: string;

  /**
   *
   * @remarks
   * A unique identifier assigned to each candidate registered with the FEC.
   * If a person runs for several offices, that person will have separate candidate IDs for each office. This is a filter for Leadership PAC sponsor.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sponsor_candidate_ids" })
  sponsorCandidateIds?: string[];

  /**
   *
   * @remarks
   * State of the committee's address as filed on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   *
   * @remarks
   * State of committee as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state_full" })
  stateFull?: string;

  /**
   *
   * @remarks
   * Street address of committee as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street_1" })
  street1?: string;

  /**
   *
   * @remarks
   * Second line of street address of committee as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street_2" })
  street2?: string;

  /**
   *
   * @remarks
   * City of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_city" })
  treasurerCity?: string;

  /**
   * Name of the Committee's treasurer. If multiple treasurers for the committee, the most recent treasurer will be shown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_name" })
  treasurerName?: string;

  /**
   *
   * @remarks
   * Name 1 of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_name_1" })
  treasurerName1?: string;

  /**
   *
   * @remarks
   * Name 2 of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_name_2" })
  treasurerName2?: string;

  /**
   *
   * @remarks
   * Middle name of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_name_middle" })
  treasurerNameMiddle?: string;

  /**
   *
   * @remarks
   * Name Prefix of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_name_prefix" })
  treasurerNamePrefix?: string;

  /**
   *
   * @remarks
   * Name suffix of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_name_suffix" })
  treasurerNameSuffix?: string;

  /**
   *
   * @remarks
   * Name title of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_name_title" })
  treasurerNameTitle?: string;

  /**
   *
   * @remarks
   * Phone of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_phone" })
  treasurerPhone?: string;

  /**
   *
   * @remarks
   * State of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_state" })
  treasurerState?: string;

  /**
   *
   * @remarks
   * Street of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_street_1" })
  treasurerStreet1?: string;

  /**
   *
   * @remarks
   * Second line of the street of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_street_2" })
  treasurerStreet2?: string;

  /**
   *
   * @remarks
   * Zip code of committee treasurer as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "treasurer_zip" })
  treasurerZip?: string;

  /**
   *
   * @remarks
   * Website url as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "website" })
  website?: string;

  /**
   *
   * @remarks
   * Zip code of committee as reported on the Form 1
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zip" })
  zip?: string;
}
