/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class PlanDetailsWebhookOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "includeTriggers" })
  includeTriggers?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "restrictionTypes" })
  restrictionTypes?: string[];
}

export class PlanDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "apiKeys" })
  apiKeys?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "apiTokens" })
  apiTokens?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "colorSchema" })
  colorSchema?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "customDomain" })
  customDomain?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "customName" })
  customName?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "directLinks" })
  directLinks?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ipWhitelist" })
  ipWhitelist?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sharingOptions" })
  sharingOptions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "sshKeys" })
  sshKeys?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "storageAddOn" })
  storageAddOn?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unlimitedUsers" })
  unlimitedUsers?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "userExpiration" })
  userExpiration?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "userImport" })
  userImport?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "webhookOptions" })
  @Type(() => PlanDetailsWebhookOptions)
  webhookOptions?: PlanDetailsWebhookOptions;
}
