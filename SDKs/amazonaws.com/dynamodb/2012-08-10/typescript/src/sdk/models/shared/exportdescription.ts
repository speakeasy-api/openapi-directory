/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExportFormatEnum } from "./exportformatenum";
import { ExportStatusEnum } from "./exportstatusenum";
import { S3SseAlgorithmEnum } from "./s3ssealgorithmenum";
import { Expose, Transform } from "class-transformer";

/**
 * Represents the properties of the exported table.
 */
export class ExportDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BilledSizeBytes" })
  billedSizeBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ClientToken" })
  clientToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ExportArn" })
  exportArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExportFormat" })
  exportFormat?: ExportFormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ExportManifest" })
  exportManifest?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExportStatus" })
  exportStatus?: ExportStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ExportTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  exportTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureCode" })
  failureCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureMessage" })
  failureMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ItemCount" })
  itemCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "S3Bucket" })
  s3Bucket?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3BucketOwner" })
  s3BucketOwner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3Prefix" })
  s3Prefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3SseAlgorithm" })
  s3SseAlgorithm?: S3SseAlgorithmEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "S3SseKmsKeyId" })
  s3SseKmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TableArn" })
  tableArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TableId" })
  tableId?: string;
}
