/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfluenceSpaceToIndexFieldMapping } from "./confluencespacetoindexfieldmapping";
import { Expose, Type } from "class-transformer";

/**
 * Configuration information for indexing Confluence spaces.
 */
export class ConfluenceSpaceConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CrawlArchivedSpaces" })
  crawlArchivedSpaces?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "CrawlPersonalSpaces" })
  crawlPersonalSpaces?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExcludeSpaces" })
  excludeSpaces?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "IncludeSpaces" })
  includeSpaces?: string[];

  @SpeakeasyMetadata({ elemType: ConfluenceSpaceToIndexFieldMapping })
  @Expose({ name: "SpaceFieldMappings" })
  @Type(() => ConfluenceSpaceToIndexFieldMapping)
  spaceFieldMappings?: ConfluenceSpaceToIndexFieldMapping[];
}
