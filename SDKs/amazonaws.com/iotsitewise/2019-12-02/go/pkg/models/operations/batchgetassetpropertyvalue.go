// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type BatchGetAssetPropertyValueQueryParams struct {
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type BatchGetAssetPropertyValueHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type BatchGetAssetPropertyValueRequestBody struct {
	// The list of asset property value entries for the batch get request. You can specify up to 128 entries per request.
	Entries []shared.BatchGetAssetPropertyValueEntry `json:"entries"`
	// The token to be used for the next set of paginated results.
	NextToken *string `json:"nextToken,omitempty"`
}

type BatchGetAssetPropertyValueRequest struct {
	QueryParams BatchGetAssetPropertyValueQueryParams
	Headers     BatchGetAssetPropertyValueHeaders
	Request     BatchGetAssetPropertyValueRequestBody `request:"mediaType=application/json"`
}

type BatchGetAssetPropertyValueResponse struct {
	// Success
	BatchGetAssetPropertyValueResponse *shared.BatchGetAssetPropertyValueResponse
	ContentType                        string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
