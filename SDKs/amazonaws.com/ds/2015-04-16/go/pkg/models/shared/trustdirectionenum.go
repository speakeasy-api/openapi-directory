// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TrustDirectionEnum string

const (
	TrustDirectionEnumOneWayOutgoing TrustDirectionEnum = "One-Way: Outgoing"
	TrustDirectionEnumOneWayIncoming TrustDirectionEnum = "One-Way: Incoming"
	TrustDirectionEnumTwoWay         TrustDirectionEnum = "Two-Way"
)

func (e TrustDirectionEnum) ToPointer() *TrustDirectionEnum {
	return &e
}

func (e *TrustDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "One-Way: Outgoing":
		fallthrough
	case "One-Way: Incoming":
		fallthrough
	case "Two-Way":
		*e = TrustDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TrustDirectionEnum: %v", v)
	}
}
