// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ModifyVolumeResultVolumeModificationModificationStateEnum - The current modification state. The modification state is null for unmodified volumes.
type ModifyVolumeResultVolumeModificationModificationStateEnum string

const (
	ModifyVolumeResultVolumeModificationModificationStateEnumModifying  ModifyVolumeResultVolumeModificationModificationStateEnum = "modifying"
	ModifyVolumeResultVolumeModificationModificationStateEnumOptimizing ModifyVolumeResultVolumeModificationModificationStateEnum = "optimizing"
	ModifyVolumeResultVolumeModificationModificationStateEnumCompleted  ModifyVolumeResultVolumeModificationModificationStateEnum = "completed"
	ModifyVolumeResultVolumeModificationModificationStateEnumFailed     ModifyVolumeResultVolumeModificationModificationStateEnum = "failed"
)

func (e *ModifyVolumeResultVolumeModificationModificationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "modifying":
		fallthrough
	case "optimizing":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = ModifyVolumeResultVolumeModificationModificationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVolumeResultVolumeModificationModificationStateEnum: %s", s)
	}
}

// ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum - The original EBS volume type of the volume.
type ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum string

const (
	ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnumStandard ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum = "standard"
	ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnumIo1      ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum = "io1"
	ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnumIo2      ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum = "io2"
	ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnumGp2      ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum = "gp2"
	ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnumSc1      ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum = "sc1"
	ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnumSt1      ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum = "st1"
	ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnumGp3      ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum = "gp3"
)

func (e *ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "standard":
		fallthrough
	case "io1":
		fallthrough
	case "io2":
		fallthrough
	case "gp2":
		fallthrough
	case "sc1":
		fallthrough
	case "st1":
		fallthrough
	case "gp3":
		*e = ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum: %s", s)
	}
}

// ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum - The target EBS volume type of the volume.
type ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum string

const (
	ModifyVolumeResultVolumeModificationTargetVolumeTypeEnumStandard ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum = "standard"
	ModifyVolumeResultVolumeModificationTargetVolumeTypeEnumIo1      ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum = "io1"
	ModifyVolumeResultVolumeModificationTargetVolumeTypeEnumIo2      ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum = "io2"
	ModifyVolumeResultVolumeModificationTargetVolumeTypeEnumGp2      ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum = "gp2"
	ModifyVolumeResultVolumeModificationTargetVolumeTypeEnumSc1      ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum = "sc1"
	ModifyVolumeResultVolumeModificationTargetVolumeTypeEnumSt1      ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum = "st1"
	ModifyVolumeResultVolumeModificationTargetVolumeTypeEnumGp3      ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum = "gp3"
)

func (e *ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "standard":
		fallthrough
	case "io1":
		fallthrough
	case "io2":
		fallthrough
	case "gp2":
		fallthrough
	case "sc1":
		fallthrough
	case "st1":
		fallthrough
	case "gp3":
		*e = ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum: %s", s)
	}
}

// ModifyVolumeResultVolumeModification - Information about the volume modification.
type ModifyVolumeResultVolumeModification struct {
	EndTime                    *time.Time
	ModificationState          *ModifyVolumeResultVolumeModificationModificationStateEnum
	OriginalIops               *int64
	OriginalMultiAttachEnabled *bool
	OriginalSize               *int64
	OriginalThroughput         *int64
	OriginalVolumeType         *ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum
	Progress                   *int64
	StartTime                  *time.Time
	StatusMessage              *string
	TargetIops                 *int64
	TargetMultiAttachEnabled   *bool
	TargetSize                 *int64
	TargetThroughput           *int64
	TargetVolumeType           *ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum
	VolumeID                   *string
}

// ModifyVolumeResult - Success
type ModifyVolumeResult struct {
	VolumeModification *ModifyVolumeResultVolumeModification
}
