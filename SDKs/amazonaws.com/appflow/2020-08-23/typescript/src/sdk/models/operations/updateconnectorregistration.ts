/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Contains information about the configuration of the connector being registered.
 */
export class UpdateConnectorRegistrationRequestBodyConnectorProvisioningConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "lambda" })
  @Type(() => shared.LambdaConnectorProvisioningConfig)
  lambda?: shared.LambdaConnectorProvisioningConfig;
}

export class UpdateConnectorRegistrationRequestBody extends SpeakeasyBase {
  /**
   * The name of the connector. The name is unique for each connector registration in your AWS account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectorLabel" })
  connectorLabel: string;

  /**
   * Contains information about the configuration of the connector being registered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectorProvisioningConfig" })
  @Type(() => UpdateConnectorRegistrationRequestBodyConnectorProvisioningConfig)
  connectorProvisioningConfig?: UpdateConnectorRegistrationRequestBodyConnectorProvisioningConfig;

  /**
   * A description about the update that you're applying to the connector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;
}

export class UpdateConnectorRegistrationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateConnectorRegistrationRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateConnectorRegistrationResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  /**
   * ConnectorAuthenticationException
   */
  @SpeakeasyMetadata()
  connectorAuthenticationException?: any;

  /**
   * ConnectorServerException
   */
  @SpeakeasyMetadata()
  connectorServerException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ServiceQuotaExceededException
   */
  @SpeakeasyMetadata()
  serviceQuotaExceededException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateConnectorRegistrationResponse?: shared.UpdateConnectorRegistrationResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
