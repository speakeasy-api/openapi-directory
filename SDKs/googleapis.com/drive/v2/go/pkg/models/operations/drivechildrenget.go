// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DriveChildrenGetSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChildrenGetSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChildrenGetSecurityOption3 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChildrenGetSecurityOption4 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChildrenGetSecurityOption5 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChildrenGetSecurityOption6 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChildrenGetSecurityOption7 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChildrenGetSecurity struct {
	Option1 *DriveChildrenGetSecurityOption1 `security:"option"`
	Option2 *DriveChildrenGetSecurityOption2 `security:"option"`
	Option3 *DriveChildrenGetSecurityOption3 `security:"option"`
	Option4 *DriveChildrenGetSecurityOption4 `security:"option"`
	Option5 *DriveChildrenGetSecurityOption5 `security:"option"`
	Option6 *DriveChildrenGetSecurityOption6 `security:"option"`
	Option7 *DriveChildrenGetSecurityOption7 `security:"option"`
}

type DriveChildrenGetPathParams struct {
	// The ID of the child.
	ChildID string `pathParam:"style=simple,explode=false,name=childId"`
	// The ID of the folder.
	FolderID string `pathParam:"style=simple,explode=false,name=folderId"`
}

type DriveChildrenGetQueryParams struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type DriveChildrenGetRequest struct {
	PathParams  DriveChildrenGetPathParams
	QueryParams DriveChildrenGetQueryParams
	Security    DriveChildrenGetSecurity
}

type DriveChildrenGetResponse struct {
	// Successful response
	ChildReference *shared.ChildReference
	ContentType    string
	StatusCode     int
	RawResponse    *http.Response
}
