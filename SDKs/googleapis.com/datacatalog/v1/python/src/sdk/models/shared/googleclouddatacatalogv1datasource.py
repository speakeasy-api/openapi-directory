"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatacatalogv1storageproperties as shared_googleclouddatacatalogv1storageproperties
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatacatalogV1DataSourceServiceEnum(str, Enum):
    r"""Service that physically stores the data."""
    SERVICE_UNSPECIFIED = 'SERVICE_UNSPECIFIED'
    CLOUD_STORAGE = 'CLOUD_STORAGE'
    BIGQUERY = 'BIGQUERY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatacatalogV1DataSource:
    r"""Physical location of an entry."""
    
    resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource'), 'exclude': lambda f: f is None }})
    r"""Full name of a resource as defined by the service. For example: `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`"""  
    service: Optional[GoogleCloudDatacatalogV1DataSourceServiceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service'), 'exclude': lambda f: f is None }})
    r"""Service that physically stores the data."""  
    source_entry: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceEntry'), 'exclude': lambda f: f is None }})
    r"""Output only. Data Catalog entry name, if applicable."""  
    storage_properties: Optional[shared_googleclouddatacatalogv1storageproperties.GoogleCloudDatacatalogV1StorageProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storageProperties'), 'exclude': lambda f: f is None }})
    r"""Details the properties of the underlying storage."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatacatalogV1DataSourceInput:
    r"""Physical location of an entry."""
    
    resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource'), 'exclude': lambda f: f is None }})
    r"""Full name of a resource as defined by the service. For example: `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`"""  
    service: Optional[GoogleCloudDatacatalogV1DataSourceServiceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service'), 'exclude': lambda f: f is None }})
    r"""Service that physically stores the data."""  
    storage_properties: Optional[shared_googleclouddatacatalogv1storageproperties.GoogleCloudDatacatalogV1StorageProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storageProperties'), 'exclude': lambda f: f is None }})
    r"""Details the properties of the underlying storage."""  
    