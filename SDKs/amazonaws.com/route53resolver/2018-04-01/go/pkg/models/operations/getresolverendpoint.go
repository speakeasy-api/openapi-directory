// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetResolverEndpointXAmzTargetEnum
type GetResolverEndpointXAmzTargetEnum string

const (
	GetResolverEndpointXAmzTargetEnumRoute53ResolverGetResolverEndpoint GetResolverEndpointXAmzTargetEnum = "Route53Resolver.GetResolverEndpoint"
)

func (e GetResolverEndpointXAmzTargetEnum) ToPointer() *GetResolverEndpointXAmzTargetEnum {
	return &e
}

func (e *GetResolverEndpointXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Route53Resolver.GetResolverEndpoint":
		*e = GetResolverEndpointXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetResolverEndpointXAmzTargetEnum: %v", v)
	}
}

type GetResolverEndpointRequest struct {
	GetResolverEndpointRequest shared.GetResolverEndpointRequest `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 GetResolverEndpointXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetResolverEndpointResponse struct {
	ContentType string
	// Success
	GetResolverEndpointResponse *shared.GetResolverEndpointResponse
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
