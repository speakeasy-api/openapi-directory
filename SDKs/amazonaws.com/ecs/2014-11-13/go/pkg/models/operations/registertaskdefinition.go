// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterTaskDefinitionXAmzTargetEnum
type RegisterTaskDefinitionXAmzTargetEnum string

const (
	RegisterTaskDefinitionXAmzTargetEnumAmazonEc2ContainerServiceV20141113RegisterTaskDefinition RegisterTaskDefinitionXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.RegisterTaskDefinition"
)

func (e RegisterTaskDefinitionXAmzTargetEnum) ToPointer() *RegisterTaskDefinitionXAmzTargetEnum {
	return &e
}

func (e *RegisterTaskDefinitionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonEC2ContainerServiceV20141113.RegisterTaskDefinition":
		*e = RegisterTaskDefinitionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterTaskDefinitionXAmzTargetEnum: %v", v)
	}
}

type RegisterTaskDefinitionRequest struct {
	RegisterTaskDefinitionRequest shared.RegisterTaskDefinitionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    RegisterTaskDefinitionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RegisterTaskDefinitionResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// InvalidParameterException
	InvalidParameterException interface{}
	// Success
	RegisterTaskDefinitionResponse *shared.RegisterTaskDefinitionResponse
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
}
