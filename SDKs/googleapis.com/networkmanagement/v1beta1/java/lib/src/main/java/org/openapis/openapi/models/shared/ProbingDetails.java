/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProbingDetails - Results of active probing from the last run of the test.
 */
public class ProbingDetails {
    /**
     * The reason probing was aborted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("abortCause")
    public ProbingDetailsAbortCauseEnum abortCause;
    public ProbingDetails withAbortCause(ProbingDetailsAbortCauseEnum abortCause) {
        this.abortCause = abortCause;
        return this;
    }
    
    /**
     * Representation of a network edge location as per https://cloud.google.com/vpc/docs/edge-locations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationEgressLocation")
    public EdgeLocation destinationEgressLocation;
    public ProbingDetails withDestinationEgressLocation(EdgeLocation destinationEgressLocation) {
        this.destinationEgressLocation = destinationEgressLocation;
        return this;
    }
    
    /**
     * For display only. The specification of the endpoints for the test. EndpointInfo is derived from source and destination Endpoint and validated by the backend data plane model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpointInfo")
    public EndpointInfo endpointInfo;
    public ProbingDetails withEndpointInfo(EndpointInfo endpointInfo) {
        this.endpointInfo = endpointInfo;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;
    public ProbingDetails withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * Describes measured latency distribution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("probingLatency")
    public LatencyDistribution probingLatency;
    public ProbingDetails withProbingLatency(LatencyDistribution probingLatency) {
        this.probingLatency = probingLatency;
        return this;
    }
    
    /**
     * The overall result of active probing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    public ProbingDetailsResultEnum result;
    public ProbingDetails withResult(ProbingDetailsResultEnum result) {
        this.result = result;
        return this;
    }
    
    /**
     * Number of probes sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sentProbeCount")
    public Integer sentProbeCount;
    public ProbingDetails withSentProbeCount(Integer sentProbeCount) {
        this.sentProbeCount = sentProbeCount;
        return this;
    }
    
    /**
     * Number of probes that reached the destination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("successfulProbeCount")
    public Integer successfulProbeCount;
    public ProbingDetails withSuccessfulProbeCount(Integer successfulProbeCount) {
        this.successfulProbeCount = successfulProbeCount;
        return this;
    }
    
    /**
     * The time that reachability was assessed through active probing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verifyTime")
    public String verifyTime;
    public ProbingDetails withVerifyTime(String verifyTime) {
        this.verifyTime = verifyTime;
        return this;
    }
    
}
