<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MatchT - Successful response
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MatchT
{
    /**
     * UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of actual match start time.
     * 
     * @var ?int $actualTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('actual_time')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $actualTime = null;
    
    /**
     * A list of alliances, the teams on the alliances, and their score.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MatchAlliances $alliances
     */
	#[\JMS\Serializer\Annotation\SerializedName('alliances')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MatchAlliances')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MatchAlliances $alliances = null;
    
    /**
     * The competition level the match was played at.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\MatchCompLevelEnum $compLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('comp_level')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MatchCompLevelEnum>')]
    public MatchCompLevelEnum $compLevel;
    
    /**
     * Event key of the event the match was played at.
     * 
     * @var string $eventKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventKey;
    
    /**
     * TBA match key with the format `yyyy[EVENT_CODE]_[COMP_LEVEL]m[MATCH_NUMBER]`, where `yyyy` is the year, and `EVENT_CODE` is the event code of the event, `COMP_LEVEL` is (qm, ef, qf, sf, f), and `MATCH_NUMBER` is the match number in the competition level. A set number may be appended to the competition level if more than one match in required per set.
     * 
     * @var string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $key;
    
    /**
     * The match number of the match in the competition level.
     * 
     * @var int $matchNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('match_number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $matchNumber;
    
    /**
     * UNIX timestamp (seconds since 1-Jan-1970 00:00:00) when the match result was posted.
     * 
     * @var ?int $postResultTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('post_result_time')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $postResultTime = null;
    
    /**
     * UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of the TBA predicted match start time.
     * 
     * @var ?int $predictedTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('predicted_time')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $predictedTime = null;
    
    /**
     * Score breakdown for auto, teleop, etc. points. Varies from year to year. May be null.
     * 
     * @var ?array<string, mixed> $scoreBreakdown
     */
	#[\JMS\Serializer\Annotation\SerializedName('score_breakdown')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scoreBreakdown = null;
    
    /**
     * The set number in a series of matches where more than one match is required in the match series.
     * 
     * @var int $setNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('set_number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $setNumber;
    
    /**
     * UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of the scheduled match time, as taken from the published schedule.
     * 
     * @var ?int $time
     */
	#[\JMS\Serializer\Annotation\SerializedName('time')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $time = null;
    
    /**
     * Array of video objects associated with this match.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MatchVideos> $videos
     */
	#[\JMS\Serializer\Annotation\SerializedName('videos')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MatchVideos>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $videos = null;
    
    /**
     * The color (red/blue) of the winning alliance. Will contain an empty string in the event of no winner, or a tie.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MatchWinningAllianceEnum $winningAlliance
     */
	#[\JMS\Serializer\Annotation\SerializedName('winning_alliance')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MatchWinningAllianceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MatchWinningAllianceEnum $winningAlliance = null;
    
	public function __construct()
	{
		$this->actualTime = null;
		$this->alliances = null;
		$this->compLevel = \OpenAPI\OpenAPI\Models\Shared\MatchCompLevelEnum::QM;
		$this->eventKey = "";
		$this->key = "";
		$this->matchNumber = 0;
		$this->postResultTime = null;
		$this->predictedTime = null;
		$this->scoreBreakdown = null;
		$this->setNumber = 0;
		$this->time = null;
		$this->videos = null;
		$this->winningAlliance = null;
	}
}
