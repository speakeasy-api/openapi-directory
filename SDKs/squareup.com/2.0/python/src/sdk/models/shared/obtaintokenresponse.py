"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ObtainTokenResponse:
    r"""Success"""
    
    access_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token'), 'exclude': lambda f: f is None }})
    r"""A valid OAuth access token. OAuth access tokens are 64 bytes long.
    Provide the access token in a header with every request to Connect API
    endpoints. See [OAuth API: Walkthrough](https://developer.squareup.com/docs/oauth-api/walkthrough)
    for more information.
    """  
    expires_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expires_at'), 'exclude': lambda f: f is None }})
    r"""The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format."""  
    id_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id_token'), 'exclude': lambda f: f is None }})
    r"""Then OpenID token belonging to this this person. Only present if the
    OPENID scope is included in the authorize request.
    """  
    merchant_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchant_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the authorizing merchant's business."""  
    plan_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_id'), 'exclude': lambda f: f is None }})
    r"""__LEGACY FIELD__. The ID of the subscription plan the merchant signed
    up for. Only present if the merchant signed up for a subscription during
    authorization.
    """  
    refresh_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refresh_token'), 'exclude': lambda f: f is None }})
    r"""A refresh token. OAuth refresh tokens are 64 bytes long.
    For more information, see [OAuth access token management](https://developer.squareup.com/docs/oauth-api/how-it-works#oauth-access-token-management).
    """  
    short_lived: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('short_lived'), 'exclude': lambda f: f is None }})
    r"""A boolean indicating the access token is a short-lived access token.
    The short-lived access token returned in the response will expire in 24 hours.
    """  
    subscription_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscription_id'), 'exclude': lambda f: f is None }})
    r"""__LEGACY FIELD__. The ID of a subscription plan the merchant signed up
    for. Only present if the merchant signed up for a subscription during authorization.
    """  
    token_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token_type'), 'exclude': lambda f: f is None }})
    r"""This value is always _bearer_."""  
    