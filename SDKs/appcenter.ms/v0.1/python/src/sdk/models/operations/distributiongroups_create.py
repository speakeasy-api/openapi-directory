"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DistributionGroupsCreateSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DistributionGroupsCreateRequestBody:
    r"""The attributes to update for the distribution group"""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the distribution group"""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_name'), 'exclude': lambda f: f is None }})
    r"""The display name of the distribution group. If not specified, the name will be used."""  
    

@dataclasses.dataclass
class DistributionGroupsCreateRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    request_body: DistributionGroupsCreateRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""The attributes to update for the distribution group"""  
    
class DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DistributionGroupsCreateDefaultApplicationJSONError:
    
    code: DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DistributionGroupsCreateDefaultApplicationJSON:
    r"""Error"""
    
    error: DistributionGroupsCreateDefaultApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    
class DistributionGroupsCreate201ApplicationJSONOriginEnum(str, Enum):
    r"""The creation origin of this distribution group"""
    APPCENTER = 'appcenter'
    HOCKEYAPP = 'hockeyapp'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DistributionGroupsCreate201ApplicationJSON:
    r"""Success"""
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The unique ID of the distribution group"""  
    is_public: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_public') }})
    r"""Whether the distribution group is public"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the distribution group used in URLs"""  
    origin: DistributionGroupsCreate201ApplicationJSONOriginEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('origin') }})
    r"""The creation origin of this distribution group"""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_name'), 'exclude': lambda f: f is None }})
    r"""The name of the distribution group"""  
    

@dataclasses.dataclass
class DistributionGroupsCreateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    distribution_groups_create_201_application_json_object: Optional[DistributionGroupsCreate201ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    distribution_groups_create_default_application_json_object: Optional[DistributionGroupsCreateDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    