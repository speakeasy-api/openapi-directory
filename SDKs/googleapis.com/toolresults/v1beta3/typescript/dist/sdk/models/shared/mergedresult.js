"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MergedResult = exports.MergedResultStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
var outcome_1 = require("./outcome");
var testsuiteoverview_1 = require("./testsuiteoverview");
var class_transformer_1 = require("class-transformer");
/**
 * State of the resource
 */
var MergedResultStateEnum;
(function (MergedResultStateEnum) {
    MergedResultStateEnum["UnknownState"] = "unknownState";
    MergedResultStateEnum["Pending"] = "pending";
    MergedResultStateEnum["InProgress"] = "inProgress";
    MergedResultStateEnum["Complete"] = "complete";
})(MergedResultStateEnum = exports.MergedResultStateEnum || (exports.MergedResultStateEnum = {}));
/**
 * Merged test result for environment. If the environment has only one step (no reruns or shards), then the merged result is the same as the step result. If the environment has multiple shards and/or reruns, then the results of shards and reruns that belong to the same environment are merged into one environment result.
 */
var MergedResult = /** @class */ (function (_super) {
    __extends(MergedResult, _super);
    function MergedResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "outcome" }),
        (0, class_transformer_1.Type)(function () { return outcome_1.Outcome; }),
        __metadata("design:type", outcome_1.Outcome)
    ], MergedResult.prototype, "outcome", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], MergedResult.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: testsuiteoverview_1.TestSuiteOverview }),
        (0, class_transformer_1.Expose)({ name: "testSuiteOverviews" }),
        (0, class_transformer_1.Type)(function () { return testsuiteoverview_1.TestSuiteOverview; }),
        __metadata("design:type", Array)
    ], MergedResult.prototype, "testSuiteOverviews", void 0);
    return MergedResult;
}(utils_1.SpeakeasyBase));
exports.MergedResult = MergedResult;
