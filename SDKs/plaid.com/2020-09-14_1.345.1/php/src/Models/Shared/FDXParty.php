<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FDXParty - FDX Participant - an entity or person that is a part of a FDX API transaction
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FDXParty
{
    /**
     * URI for party, where an end user could learn more about the company or application involved in the data sharing chain
     * 
     * @var ?string $homeUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('homeUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $homeUri = null;
    
    /**
     * URI for a logo asset to be displayed to the end user
     * 
     * @var ?string $logoUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('logoUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $logoUri = null;
    
    /**
     * Human recognizable common name
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Registered id of party
     * 
     * @var ?string $registeredEntityId
     */
	#[\JMS\Serializer\Annotation\SerializedName('registeredEntityId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $registeredEntityId = null;
    
    /**
     * Registered name of party
     * 
     * @var ?string $registeredEntityName
     */
	#[\JMS\Serializer\Annotation\SerializedName('registeredEntityName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $registeredEntityName = null;
    
    /**
     * The registry containing the partyâ€™s registration with name and id
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FDXPartyRegistryEnum $registry
     */
	#[\JMS\Serializer\Annotation\SerializedName('registry')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FDXPartyRegistryEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FDXPartyRegistryEnum $registry = null;
    
    /**
     * Identifies the type of a party
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\FDXPartyTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FDXPartyTypeEnum>')]
    public FDXPartyTypeEnum $type;
    
	public function __construct()
	{
		$this->homeUri = null;
		$this->logoUri = null;
		$this->name = "";
		$this->registeredEntityId = null;
		$this->registeredEntityName = null;
		$this->registry = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\FDXPartyTypeEnum::DATA_ACCESS_PLATFORM;
	}
}
