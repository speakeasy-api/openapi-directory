<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudConnectorsV1AuthConfigOauth2AuthCodeFlow - Parameters to support Oauth 2.0 Auth Code Grant Authentication. See https://www.rfc-editor.org/rfc/rfc6749#section-1.3.1 for more details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudConnectorsV1AuthConfigOauth2AuthCodeFlow
{
    /**
     * Authorization code to be exchanged for access and refresh tokens.
     * 
     * @var ?string $authCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('authCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authCode = null;
    
    /**
     * Client ID for user-provided OAuth app.
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * Secret provides a reference to entries in Secret Manager.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudConnectorsV1Secret $clientSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientSecret')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudConnectorsV1Secret')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudConnectorsV1Secret $clientSecret = null;
    
    /**
     * Whether to enable PKCE when the user performs the auth code flow.
     * 
     * @var ?bool $enablePkce
     */
	#[\JMS\Serializer\Annotation\SerializedName('enablePkce')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enablePkce = null;
    
    /**
     * PKCE verifier to be used during the auth code exchange.
     * 
     * @var ?string $pkceVerifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('pkceVerifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pkceVerifier = null;
    
    /**
     * Redirect URI to be provided during the auth code exchange.
     * 
     * @var ?string $redirectUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('redirectUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $redirectUri = null;
    
    /**
     * Scopes the connection will request when the user performs the auth code flow.
     * 
     * @var ?array<string> $scopes
     */
	#[\JMS\Serializer\Annotation\SerializedName('scopes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scopes = null;
    
	public function __construct()
	{
		$this->authCode = null;
		$this->clientId = null;
		$this->clientSecret = null;
		$this->enablePkce = null;
		$this->pkceVerifier = null;
		$this->redirectUri = null;
		$this->scopes = null;
	}
}
