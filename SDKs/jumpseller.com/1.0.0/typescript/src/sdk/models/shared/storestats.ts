/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BestSold } from "./bestsold";
import { CountryOrders } from "./countryorders";
import { DailyVisits } from "./dailyvisits";
import { NewVsReturning } from "./newvsreturning";
import { OrdersData } from "./ordersdata";
import { PaymentMethodFreq } from "./paymentmethodfreq";
import { Referrer } from "./referrer";
import { ShippingMethodFreq } from "./shippingmethodfreq";
import { TrafficType } from "./traffictype";
import { Expose, Type } from "class-transformer";

export class StoreStatsConversions extends SpeakeasyBase {
  /**
   * Total add to cart conversions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "added_to_cart" })
  addedToCart?: number;

  /**
   * Total checkout conversions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "checkout" })
  checkout?: number;

  /**
   * Total paid conversions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paid" })
  paid?: number;
}

export class StoreStatsNewVsReturningCustomers extends SpeakeasyBase {
  /**
   * Global percentage of new vs returning customers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "global" })
  global?: number;

  /**
   * Numbers of new and returning customers per day.
   */
  @SpeakeasyMetadata({ elemType: NewVsReturning })
  @Expose({ name: "per_day" })
  @Type(() => NewVsReturning)
  perDay?: NewVsReturning[];
}

export class StoreStatsNewVsReturningOrders extends SpeakeasyBase {
  /**
   * Global percentage of new vs returning customers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "global" })
  global?: number;

  /**
   * Numbers of new and returning customers per day.
   */
  @SpeakeasyMetadata({ elemType: NewVsReturning })
  @Expose({ name: "per_day" })
  @Type(() => NewVsReturning)
  perDay?: NewVsReturning[];
}

export class StoreStatsOrders extends SpeakeasyBase {
  /**
   * Average order amount.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "average" })
  average?: number;

  /**
   * Total number of orders.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  /**
   * Orders data.
   */
  @SpeakeasyMetadata({ elemType: OrdersData })
  @Expose({ name: "data" })
  @Type(() => OrdersData)
  data?: OrdersData[];

  /**
   * Total amount from all orders.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class StoreStatsRegionOrders extends SpeakeasyBase {
  /**
   * Can be 'regions' when orders are specific of 1 country or 'auto'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_mode" })
  displayMode?: string;

  /**
   * Orders per country and region(inside the country).
   */
  @SpeakeasyMetadata({ elemType: CountryOrders })
  @Expose({ name: "regions_orders" })
  @Type(() => CountryOrders)
  regionsOrders?: CountryOrders[];
}

export class StoreStats extends SpeakeasyBase {
  /**
   * Top 10 best sold products.
   */
  @SpeakeasyMetadata({ elemType: BestSold })
  @Expose({ name: "best_sold" })
  @Type(() => BestSold)
  bestSold?: BestSold[];

  @SpeakeasyMetadata()
  @Expose({ name: "conversions" })
  @Type(() => StoreStatsConversions)
  conversions?: StoreStatsConversions;

  /**
   * Store currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Visits per day.
   */
  @SpeakeasyMetadata({ elemType: DailyVisits })
  @Expose({ name: "daily_visits" })
  @Type(() => DailyVisits)
  dailyVisits?: DailyVisits[];

  /**
   * Statistics start date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "new_vs_returning_customers" })
  @Type(() => StoreStatsNewVsReturningCustomers)
  newVsReturningCustomers?: StoreStatsNewVsReturningCustomers;

  @SpeakeasyMetadata()
  @Expose({ name: "new_vs_returning_orders" })
  @Type(() => StoreStatsNewVsReturningOrders)
  newVsReturningOrders?: StoreStatsNewVsReturningOrders;

  @SpeakeasyMetadata()
  @Expose({ name: "orders" })
  @Type(() => StoreStatsOrders)
  orders?: StoreStatsOrders;

  /**
   * Store payment methods and their frequency.
   */
  @SpeakeasyMetadata({ elemType: PaymentMethodFreq })
  @Expose({ name: "payment_methods" })
  @Type(() => PaymentMethodFreq)
  paymentMethods?: PaymentMethodFreq[];

  /**
   * Top 10 referrer sources and their frequency.
   */
  @SpeakeasyMetadata({ elemType: Referrer })
  @Expose({ name: "referrers" })
  @Type(() => Referrer)
  referrers?: Referrer[];

  @SpeakeasyMetadata()
  @Expose({ name: "region_orders" })
  @Type(() => StoreStatsRegionOrders)
  regionOrders?: StoreStatsRegionOrders;

  /**
   * Number of times each search was conducted under the form of an aggregation query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "search_frequencies_all" })
  searchFrequenciesAll?: any[];

  /**
   * Number of times each search with zero results was conducted under the form of an aggregation query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "search_frequencies_without_results" })
  searchFrequenciesWithoutResults?: any[];

  /**
   * Store shipping methods and their frequency.
   */
  @SpeakeasyMetadata({ elemType: ShippingMethodFreq })
  @Expose({ name: "shipping_methods" })
  @Type(() => ShippingMethodFreq)
  shippingMethods?: ShippingMethodFreq[];

  /**
   * Statistics end date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;

  /**
   * Type of store traffic and its frequency.
   */
  @SpeakeasyMetadata({ elemType: TrafficType })
  @Expose({ name: "traffic_type" })
  @Type(() => TrafficType)
  trafficType?: TrafficType[];

  /**
   * Total number of visits.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visits" })
  visits?: number;
}
