// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RequestPasswordPoliciesForPasswordTypePasswordTypeEnum - Password type
type RequestPasswordPoliciesForPasswordTypePasswordTypeEnum string

const (
	RequestPasswordPoliciesForPasswordTypePasswordTypeEnumLogin      RequestPasswordPoliciesForPasswordTypePasswordTypeEnum = "login"
	RequestPasswordPoliciesForPasswordTypePasswordTypeEnumEncryption RequestPasswordPoliciesForPasswordTypePasswordTypeEnum = "encryption"
	RequestPasswordPoliciesForPasswordTypePasswordTypeEnumShares     RequestPasswordPoliciesForPasswordTypePasswordTypeEnum = "shares"
)

func (e *RequestPasswordPoliciesForPasswordTypePasswordTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "login":
		fallthrough
	case "encryption":
		fallthrough
	case "shares":
		*e = RequestPasswordPoliciesForPasswordTypePasswordTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestPasswordPoliciesForPasswordTypePasswordTypeEnum: %s", s)
	}
}

type RequestPasswordPoliciesForPasswordTypePathParams struct {
	// Password type
	PasswordType RequestPasswordPoliciesForPasswordTypePasswordTypeEnum `pathParam:"style=simple,explode=false,name=password_type"`
}

type RequestPasswordPoliciesForPasswordTypeHeaders struct {
	// Authentication token
	XSdsAuthToken *string `header:"style=simple,explode=false,name=X-Sds-Auth-Token"`
}

type RequestPasswordPoliciesForPasswordTypeRequest struct {
	PathParams RequestPasswordPoliciesForPasswordTypePathParams
	Headers    RequestPasswordPoliciesForPasswordTypeHeaders
}

type RequestPasswordPoliciesForPasswordTypeResponse struct {
	ContentType string
	// Bad Request
	ErrorResponse *shared.ErrorResponse
	// OK
	PasswordPoliciesConfig *shared.PasswordPoliciesConfig
	StatusCode             int
	RawResponse            *http.Response
}
