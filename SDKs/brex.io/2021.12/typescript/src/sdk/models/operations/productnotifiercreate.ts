/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class ProductNotifierCreateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=user_key",
  })
  userKey: string;
}

export class ProductNotifierCreateRequest extends SpeakeasyBase {
  /**
   * ID of the ProductOrder as returned from a /product/buy call - 32 character hex value
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=orderId",
  })
  orderId: string;

  /**
   * Type of the notifier - indicates the action the notifier will perform. Currently GET and POST are supported which performs an http(s) GET/POST to the supplied uri with appended notifierId= and orderId= parameters when the order processing is completed. Upon the POST request the order object is sent as a JSON body
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=type",
  })
  type: string;

  /**
   * URI of the notifier for the 'complete' action. Currently only a GET method HTTP(s) URL is supported. 1 to 250 characters long. Every slash in the URI must be replaced by a ~
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=uri" })
  uri: string;
}

/**
 * Detailed information about the error
 */
export class ProductNotifierCreateDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fault" })
  fault?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  tag: string;
}

/**
 * Details of configured product order notification
 */
export class ProductNotifierCreate200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "callback" })
  callback: string;

  @SpeakeasyMetadata()
  @Expose({ name: "identity" })
  identity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastCallTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastCallTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastResponseCode" })
  lastResponseCode: number;

  @SpeakeasyMetadata()
  @Expose({ name: "notifierType" })
  notifierType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "productOrderIdentity" })
  productOrderIdentity: string;
}

export class ProductNotifierCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Details of configured product order notification
   */
  @SpeakeasyMetadata()
  productNotifierCreate200ApplicationJSONObject?: ProductNotifierCreate200ApplicationJSON;

  /**
   * Detailed information about the error
   */
  @SpeakeasyMetadata()
  productNotifierCreateDefaultApplicationJSONObject?: ProductNotifierCreateDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
