// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteServiceSpecificCredentialActionEnum
type GETDeleteServiceSpecificCredentialActionEnum string

const (
	GETDeleteServiceSpecificCredentialActionEnumDeleteServiceSpecificCredential GETDeleteServiceSpecificCredentialActionEnum = "DeleteServiceSpecificCredential"
)

func (e *GETDeleteServiceSpecificCredentialActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteServiceSpecificCredential":
		*e = GETDeleteServiceSpecificCredentialActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteServiceSpecificCredentialActionEnum: %s", s)
	}
}

// GETDeleteServiceSpecificCredentialVersionEnum
type GETDeleteServiceSpecificCredentialVersionEnum string

const (
	GETDeleteServiceSpecificCredentialVersionEnumTwoThousandAndTen0508 GETDeleteServiceSpecificCredentialVersionEnum = "2010-05-08"
)

func (e *GETDeleteServiceSpecificCredentialVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETDeleteServiceSpecificCredentialVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteServiceSpecificCredentialVersionEnum: %s", s)
	}
}

type GETDeleteServiceSpecificCredentialQueryParams struct {
	Action GETDeleteServiceSpecificCredentialActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The unique identifier of the service-specific credential. You can get this value by calling <a>ListServiceSpecificCredentials</a>.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
	ServiceSpecificCredentialID string `queryParam:"style=form,explode=true,name=ServiceSpecificCredentialId"`
	// <p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
	UserName *string                                       `queryParam:"style=form,explode=true,name=UserName"`
	Version  GETDeleteServiceSpecificCredentialVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteServiceSpecificCredentialHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteServiceSpecificCredentialRequest struct {
	QueryParams GETDeleteServiceSpecificCredentialQueryParams
	Headers     GETDeleteServiceSpecificCredentialHeaders
}

type GETDeleteServiceSpecificCredentialResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
