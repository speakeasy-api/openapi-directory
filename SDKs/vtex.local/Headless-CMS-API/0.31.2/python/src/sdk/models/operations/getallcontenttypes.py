"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class GetAllContentTypesRequest:
    
    builder_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'builderId', 'style': 'simple', 'explode': False }})
    r"""Builder ID specified in the settings of the CMS app."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAllContentTypes200ApplicationJSONContentTypesConfigurationSchemaSets:
    r"""Object with data about a specific Content Type tab."""
    
    configurations: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configurations'), 'exclude': lambda f: f is None }})
    r"""Custom configurations of the Content Type tab. Varies depending on the Content Type schema defined in the FastStore project."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the Content Type tab."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAllContentTypes200ApplicationJSONContentTypes:
    r"""Object with data of a specific Content Type."""
    
    configuration_schema_sets: Optional[list[GetAllContentTypes200ApplicationJSONContentTypesConfigurationSchemaSets]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configurationSchemaSets'), 'exclude': lambda f: f is None }})
    r"""Array with data of the `configurationSchemaSets` tabs specified in the FastStore project."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Content Type identifier specified in the FastStore project."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Content Type name specified in the FastStore project."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAllContentTypes200ApplicationJSON:
    r"""OK"""
    
    content_types: Optional[list[GetAllContentTypes200ApplicationJSONContentTypes]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentTypes'), 'exclude': lambda f: f is None }})
    r"""Array with data of each Content Type."""  
    

@dataclasses.dataclass
class GetAllContentTypesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_all_content_types_200_application_json_object: Optional[GetAllContentTypes200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    