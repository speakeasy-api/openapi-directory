// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EntryThumbContractEntryTypeEnum string

const (
	EntryThumbContractEntryTypeEnumUndefined          EntryThumbContractEntryTypeEnum = "Undefined"
	EntryThumbContractEntryTypeEnumAlbum              EntryThumbContractEntryTypeEnum = "Album"
	EntryThumbContractEntryTypeEnumArtist             EntryThumbContractEntryTypeEnum = "Artist"
	EntryThumbContractEntryTypeEnumDiscussionTopic    EntryThumbContractEntryTypeEnum = "DiscussionTopic"
	EntryThumbContractEntryTypeEnumPv                 EntryThumbContractEntryTypeEnum = "PV"
	EntryThumbContractEntryTypeEnumReleaseEvent       EntryThumbContractEntryTypeEnum = "ReleaseEvent"
	EntryThumbContractEntryTypeEnumReleaseEventSeries EntryThumbContractEntryTypeEnum = "ReleaseEventSeries"
	EntryThumbContractEntryTypeEnumSong               EntryThumbContractEntryTypeEnum = "Song"
	EntryThumbContractEntryTypeEnumSongList           EntryThumbContractEntryTypeEnum = "SongList"
	EntryThumbContractEntryTypeEnumTag                EntryThumbContractEntryTypeEnum = "Tag"
	EntryThumbContractEntryTypeEnumUser               EntryThumbContractEntryTypeEnum = "User"
	EntryThumbContractEntryTypeEnumVenue              EntryThumbContractEntryTypeEnum = "Venue"
)

func (e *EntryThumbContractEntryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Undefined":
		fallthrough
	case "Album":
		fallthrough
	case "Artist":
		fallthrough
	case "DiscussionTopic":
		fallthrough
	case "PV":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "ReleaseEventSeries":
		fallthrough
	case "Song":
		fallthrough
	case "SongList":
		fallthrough
	case "Tag":
		fallthrough
	case "User":
		fallthrough
	case "Venue":
		*e = EntryThumbContractEntryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryThumbContractEntryTypeEnum: %s", s)
	}
}

type EntryThumbContract struct {
	EntryType *EntryThumbContractEntryTypeEnum `json:"entryType,omitempty"`
	ID        *int                             `json:"id,omitempty"`
	Mime      *string                          `json:"mime,omitempty"`
	Version   *int                             `json:"version,omitempty"`
}
