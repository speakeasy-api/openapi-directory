// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MetricTypeEnum string

const (
	MetricTypeEnumQueriesByCount          MetricTypeEnum = "QUERIES_BY_COUNT"
	MetricTypeEnumQueriesByZeroClickRate  MetricTypeEnum = "QUERIES_BY_ZERO_CLICK_RATE"
	MetricTypeEnumQueriesByZeroResultRate MetricTypeEnum = "QUERIES_BY_ZERO_RESULT_RATE"
	MetricTypeEnumDocsByClickCount        MetricTypeEnum = "DOCS_BY_CLICK_COUNT"
	MetricTypeEnumAggQueryDocMetrics      MetricTypeEnum = "AGG_QUERY_DOC_METRICS"
	MetricTypeEnumTrendQueryDocMetrics    MetricTypeEnum = "TREND_QUERY_DOC_METRICS"
)

func (e MetricTypeEnum) ToPointer() *MetricTypeEnum {
	return &e
}

func (e *MetricTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "QUERIES_BY_COUNT":
		fallthrough
	case "QUERIES_BY_ZERO_CLICK_RATE":
		fallthrough
	case "QUERIES_BY_ZERO_RESULT_RATE":
		fallthrough
	case "DOCS_BY_CLICK_COUNT":
		fallthrough
	case "AGG_QUERY_DOC_METRICS":
		fallthrough
	case "TREND_QUERY_DOC_METRICS":
		*e = MetricTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetricTypeEnum: %v", v)
	}
}
