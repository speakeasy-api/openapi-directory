// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateAnalyzerRequestBodyTypeEnum - The type of analyzer to create. Only ACCOUNT and ORGANIZATION analyzers are supported. You can create only one analyzer per account per Region. You can create up to 5 analyzers per organization per Region.
type CreateAnalyzerRequestBodyTypeEnum string

const (
	CreateAnalyzerRequestBodyTypeEnumAccount      CreateAnalyzerRequestBodyTypeEnum = "ACCOUNT"
	CreateAnalyzerRequestBodyTypeEnumOrganization CreateAnalyzerRequestBodyTypeEnum = "ORGANIZATION"
)

func (e *CreateAnalyzerRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCOUNT":
		fallthrough
	case "ORGANIZATION":
		*e = CreateAnalyzerRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnalyzerRequestBodyTypeEnum: %s", s)
	}
}

type CreateAnalyzerRequestBody struct {
	// The name of the analyzer to create.
	AnalyzerName string `json:"analyzerName"`
	// Specifies the archive rules to add for the analyzer. Archive rules automatically archive findings that meet the criteria you define for the rule.
	ArchiveRules []shared.InlineArchiveRule `json:"archiveRules,omitempty"`
	// A client token.
	ClientToken *string `json:"clientToken,omitempty"`
	// The tags to apply to the analyzer.
	Tags map[string]string `json:"tags,omitempty"`
	// The type of analyzer to create. Only ACCOUNT and ORGANIZATION analyzers are supported. You can create only one analyzer per account per Region. You can create up to 5 analyzers per organization per Region.
	Type CreateAnalyzerRequestBodyTypeEnum `json:"type"`
}

type CreateAnalyzerRequest struct {
	RequestBody       CreateAnalyzerRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateAnalyzerResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateAnalyzerResponse *shared.CreateAnalyzerResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
