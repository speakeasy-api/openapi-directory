<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class PostV2ActivitiesCallsJsonRequestBody
{
    /**
     * Action that this call is being logged for. This will validate that the action is still
     * 
     * valid before completing it. The same action can never be successfully passed twice to this endpoint. The
     * action must have a type of 'phone'.
     * 
     * 
     * @var ?int $actionId
     */
	#[SpeakeasyMetadata('form:name=action_id')]
    public ?int $actionId = null;
    
    /**
     * CRM specific parameters. Some parameters are required on a per-team basis. Consume the
     * 
     * CrmActivityFields endpoint to receive a list of valid parameters. The "field" property
     * is passed as the key of this object, and the value of this object is the value that you
     * would like to set.
     * 
     * If CrmActivityField has a non-null value, then that value must be submitted, or excluded
     * from API calls, as these values are automatically applied.
     * 
     * 
     * @var ?array<string, mixed> $crmParams
     */
	#[SpeakeasyMetadata('form:name=crm_params,json=true')]
    public ?array $crmParams = null;
    
    /**
     * The disposition of the call. Can be required on a per-team basis. Must be present in the disposition list.
     * 
     * @var ?string $disposition
     */
	#[SpeakeasyMetadata('form:name=disposition')]
    public ?string $disposition = null;
    
    /**
     * The length of the call, in seconds
     * 
     * @var ?int $duration
     */
	#[SpeakeasyMetadata('form:name=duration')]
    public ?int $duration = null;
    
    /**
     * CallDataRecord associations that will become linked to the created call. It is possible to pass
     * 
     * multiple CallDataRecord ids in this field; this can be used to represent multiple phone calls
     * that made up a single call.
     * 
     * Any call data record that is used must not already be linked to a call. It is not possible
     * to link a call data record to multiple calls, and it is not possible to re-assign a call data
     * record to a different call.
     * 
     * 
     * @var ?array<int> $linkedCallDataRecordIds
     */
	#[SpeakeasyMetadata('form:name=linked_call_data_record_ids')]
    public ?array $linkedCallDataRecordIds = null;
    
    /**
     * Notes to log for the call. This is similar to the notes endpoint, but ensures that the notes get synced to the user's CRM
     * 
     * @var ?string $notes
     */
	#[SpeakeasyMetadata('form:name=notes')]
    public ?string $notes = null;
    
    /**
     * The ID of the person whom this call will be logged for
     * 
     * @var int $personId
     */
	#[SpeakeasyMetadata('form:name=person_id')]
    public int $personId;
    
    /**
     * The sentiment of the call. Can be required on a per-team basis. Must be present in the sentiment list.
     * 
     * @var ?string $sentiment
     */
	#[SpeakeasyMetadata('form:name=sentiment')]
    public ?string $sentiment = null;
    
    /**
     * The phone number that was called
     * 
     * @var ?string $to
     */
	#[SpeakeasyMetadata('form:name=to')]
    public ?string $to = null;
    
    /**
     * Guid of the user whom this call should be logged for. Defaults to the authenticated user. Only team admins can pass another user's guid
     * 
     * @var ?string $userGuid
     */
	#[SpeakeasyMetadata('form:name=user_guid')]
    public ?string $userGuid = null;
    
	public function __construct()
	{
		$this->actionId = null;
		$this->crmParams = null;
		$this->disposition = null;
		$this->duration = null;
		$this->linkedCallDataRecordIds = null;
		$this->notes = null;
		$this->personId = 0;
		$this->sentiment = null;
		$this->to = null;
		$this->userGuid = null;
	}
}
