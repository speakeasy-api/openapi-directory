"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LinuxNodeConfigCgroupModeEnum(str, Enum):
    r"""cgroup_mode specifies the cgroup mode to be used on the node."""
    CGROUP_MODE_UNSPECIFIED = 'CGROUP_MODE_UNSPECIFIED'
    CGROUP_MODE_V1 = 'CGROUP_MODE_V1'
    CGROUP_MODE_V2 = 'CGROUP_MODE_V2'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LinuxNodeConfig:
    r"""Parameters that can be configured on Linux nodes."""
    
    cgroup_mode: Optional[LinuxNodeConfigCgroupModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cgroupMode'), 'exclude': lambda f: f is None }})
    r"""cgroup_mode specifies the cgroup mode to be used on the node."""  
    sysctls: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sysctls'), 'exclude': lambda f: f is None }})
    r"""The Linux kernel parameters to be applied to the nodes and all pods running on the nodes. The following parameters are supported. net.core.busy_poll net.core.busy_read net.core.netdev_max_backlog net.core.rmem_max net.core.wmem_default net.core.wmem_max net.core.optmem_max net.core.somaxconn net.ipv4.tcp_rmem net.ipv4.tcp_wmem net.ipv4.tcp_tw_reuse"""  
    