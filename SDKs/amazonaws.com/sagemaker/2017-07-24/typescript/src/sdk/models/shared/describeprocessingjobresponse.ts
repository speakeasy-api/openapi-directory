/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppSpecification } from "./appspecification";
import { ExperimentConfig } from "./experimentconfig";
import { NetworkConfig } from "./networkconfig";
import { ProcessingInput } from "./processinginput";
import { ProcessingJobStatusEnum } from "./processingjobstatusenum";
import { ProcessingOutputConfig } from "./processingoutputconfig";
import { ProcessingResources } from "./processingresources";
import { ProcessingStoppingCondition } from "./processingstoppingcondition";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeProcessingJobResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AppSpecification" })
  @Type(() => AppSpecification)
  appSpecification: AppSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoMLJobArn" })
  autoMLJobArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Environment" })
  environment?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "ExitMessage" })
  exitMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExperimentConfig" })
  @Type(() => ExperimentConfig)
  experimentConfig?: ExperimentConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringScheduleArn" })
  monitoringScheduleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkConfig" })
  @Type(() => NetworkConfig)
  networkConfig?: NetworkConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  processingEndTime?: Date;

  @SpeakeasyMetadata({ elemType: ProcessingInput })
  @Expose({ name: "ProcessingInputs" })
  @Type(() => ProcessingInput)
  processingInputs?: ProcessingInput[];

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingJobArn" })
  processingJobArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingJobName" })
  processingJobName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingJobStatus" })
  processingJobStatus: ProcessingJobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingOutputConfig" })
  @Type(() => ProcessingOutputConfig)
  processingOutputConfig?: ProcessingOutputConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingResources" })
  @Type(() => ProcessingResources)
  processingResources: ProcessingResources;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  processingStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StoppingCondition" })
  @Type(() => ProcessingStoppingCondition)
  stoppingCondition?: ProcessingStoppingCondition;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingJobArn" })
  trainingJobArn?: string;
}
