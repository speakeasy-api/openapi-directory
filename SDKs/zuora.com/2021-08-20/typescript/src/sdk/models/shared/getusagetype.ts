/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Container for custom fields of a Usage object.
 *
 * @remarks
 *
 */
export class GETUsageType extends SpeakeasyBase {
  /**
   * Customer account ID.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Customer account name.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountName" })
  accountName?: string;

  /**
   * Customer account number.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountNumber" })
  accountNumber?: string;

  /**
   * Number of the rate-plan charge that pays for this usage.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chargeNumber" })
  chargeNumber?: string;

  /**
   * Unique ID for the usage item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Number of units used.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: string;

  /**
   * Source of the usage data. Possible values are: `Import`, `API`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceName" })
  sourceName?: string;

  /**
   * Start date of the time period in which usage is tracked. Zuora uses this field value to determine the usage date.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDateTime?: Date;

  /**
   * Possible values are: `Importing`, `Pending`, `Processed`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Date when usage was submitted.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submissionDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submissionDateTime?: Date;

  /**
   * Number of the subscription covering this usage.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionNumber" })
  subscriptionNumber?: string;

  /**
   * Unit used to measure consumption.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitOfMeasure" })
  unitOfMeasure?: string;
}
