/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A Filestore snapshot.
 */
export class SnapshotInput extends SpeakeasyBase {
  /**
   * A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Resource labels to represent user provided metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;
}

/**
 * Output only. The snapshot state.
 */
export enum SnapshotStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Creating = "CREATING",
  Ready = "READY",
  Deleting = "DELETING",
}

/**
 * A Filestore snapshot.
 */
export class Snapshot extends SpeakeasyBase {
  /**
   * Output only. The time when the snapshot was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Output only. The amount of bytes needed to allocate a full copy of the snapshot content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filesystemUsedBytes" })
  filesystemUsedBytes?: string;

  /**
   * Resource labels to represent user provided metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Output only. The resource name of the snapshot, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/snapshots/{snapshot_id}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The snapshot state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: SnapshotStateEnum;
}
