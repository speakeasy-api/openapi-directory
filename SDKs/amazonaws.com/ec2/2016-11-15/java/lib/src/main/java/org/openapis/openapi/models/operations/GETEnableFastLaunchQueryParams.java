/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETEnableFastLaunchQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETEnableFastLaunchActionEnum action;
    public GETEnableFastLaunchQueryParams withAction(GETEnableFastLaunchActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETEnableFastLaunchQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The ID of the image for which you\u2019re enabling faster launching.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ImageId")
    public String imageId;
    public GETEnableFastLaunchQueryParams withImageId(String imageId) {
        this.imageId = imageId;
        return this;
    }
    
    /**
     * The launch template to use when launching Windows instances from pre-provisioned snapshots. Launch template parameters can include either the name or ID of the launch template, but not both.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=LaunchTemplate")
    public GETEnableFastLaunchLaunchTemplate launchTemplate;
    public GETEnableFastLaunchQueryParams withLaunchTemplate(GETEnableFastLaunchLaunchTemplate launchTemplate) {
        this.launchTemplate = launchTemplate;
        return this;
    }
    
    /**
     * The maximum number of instances that Amazon EC2 can launch at the same time to create pre-provisioned snapshots for Windows faster launching. Value must be &lt;code&gt;6&lt;/code&gt; or greater.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxParallelLaunches")
    public Long maxParallelLaunches;
    public GETEnableFastLaunchQueryParams withMaxParallelLaunches(Long maxParallelLaunches) {
        this.maxParallelLaunches = maxParallelLaunches;
        return this;
    }
    
    /**
     * The type of resource to use for pre-provisioning the Windows AMI for faster launching. Supported values include: &lt;code&gt;snapshot&lt;/code&gt;, which is the default value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ResourceType")
    public String resourceType;
    public GETEnableFastLaunchQueryParams withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    /**
     * Configuration settings for creating and managing the snapshots that are used for pre-provisioning the Windows AMI for faster launching. The associated &lt;code&gt;ResourceType&lt;/code&gt; must be &lt;code&gt;snapshot&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SnapshotConfiguration")
    public GETEnableFastLaunchSnapshotConfiguration snapshotConfiguration;
    public GETEnableFastLaunchQueryParams withSnapshotConfiguration(GETEnableFastLaunchSnapshotConfiguration snapshotConfiguration) {
        this.snapshotConfiguration = snapshotConfiguration;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETEnableFastLaunchVersionEnum version;
    public GETEnableFastLaunchQueryParams withVersion(GETEnableFastLaunchVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
