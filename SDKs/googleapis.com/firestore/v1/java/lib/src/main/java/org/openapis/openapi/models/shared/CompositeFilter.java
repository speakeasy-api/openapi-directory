/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CompositeFilter - A filter that merges multiple other filters using the given operator.
 */
public class CompositeFilter {
    /**
     * The list of filters to combine. Requires: * At least one filter is present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filters")
    public Filter[] filters;

    public CompositeFilter withFilters(Filter[] filters) {
        this.filters = filters;
        return this;
    }
    
    /**
     * The operator for combining multiple filters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("op")
    public CompositeFilterOpEnum op;

    public CompositeFilter withOp(CompositeFilterOpEnum op) {
        this.op = op;
        return this;
    }
    
    public CompositeFilter(){}
}
