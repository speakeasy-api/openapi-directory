<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PostServersIdActionsChangeProtectionActionResponseAction
{
    /**
     * Command executed in the Action
     * 
     * @var string $command
     */
	#[\JMS\Serializer\Annotation\SerializedName('command')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $command;
    
    /**
     * Error message for the Action if error occurred, otherwise null
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PostServersIdActionsChangeProtectionActionResponseActionError $error
     */
	#[\JMS\Serializer\Annotation\SerializedName('error')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\PostServersIdActionsChangeProtectionActionResponseActionError')]
    public PostServersIdActionsChangeProtectionActionResponseActionError $error;
    
    /**
     * Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
     * 
     * @var string $finished
     */
	#[\JMS\Serializer\Annotation\SerializedName('finished')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $finished;
    
    /**
     * ID of the Resource
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * Progress of Action in percent
     * 
     * @var float $progress
     */
	#[\JMS\Serializer\Annotation\SerializedName('progress')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $progress;
    
    /**
     * Resources the Action relates to
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\PostServersIdActionsChangeProtectionActionResponseActionResources> $resources
     */
	#[\JMS\Serializer\Annotation\SerializedName('resources')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\PostServersIdActionsChangeProtectionActionResponseActionResources>')]
    public array $resources;
    
    /**
     * Point in time when the Action was started (in ISO-8601 format)
     * 
     * @var string $started
     */
	#[\JMS\Serializer\Annotation\SerializedName('started')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $started;
    
    /**
     * Status of the Action
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PostServersIdActionsChangeProtectionActionResponseActionStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PostServersIdActionsChangeProtectionActionResponseActionStatusEnum>')]
    public PostServersIdActionsChangeProtectionActionResponseActionStatusEnum $status;
    
	public function __construct()
	{
		$this->command = "";
		$this->error = new \OpenAPI\OpenAPI\Models\Operations\PostServersIdActionsChangeProtectionActionResponseActionError();
		$this->finished = "";
		$this->id = 0;
		$this->progress = 0;
		$this->resources = [];
		$this->started = "";
		$this->status = \OpenAPI\OpenAPI\Models\Operations\PostServersIdActionsChangeProtectionActionResponseActionStatusEnum::SUCCESS;
	}
}
