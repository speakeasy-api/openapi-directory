"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import repeatedenumattributevalue as shared_repeatedenumattributevalue
from ..shared import urlattributevalue as shared_urlattributevalue
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class AttributeValueTypeEnum(str, Enum):
    r"""Output only. The type of value that this attribute contains. This should be used to determine how to interpret the value."""
    ATTRIBUTE_VALUE_TYPE_UNSPECIFIED = 'ATTRIBUTE_VALUE_TYPE_UNSPECIFIED'
    BOOL = 'BOOL'
    ENUM = 'ENUM'
    URL = 'URL'
    REPEATED_ENUM = 'REPEATED_ENUM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Attribute:
    r"""A location attribute. Attributes provide additional information about a location. The attributes that can be set on a location may vary based on the properties of that location (for example, category). Available attributes are determined by Google and may be added and removed without API changes."""
    
    attribute_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributeId'), 'exclude': lambda f: f is None }})
    r"""The ID of the attribute. Attribute IDs are provided by Google."""  
    repeated_enum_value: Optional[shared_repeatedenumattributevalue.RepeatedEnumAttributeValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repeatedEnumValue'), 'exclude': lambda f: f is None }})
    r"""Values for an attribute with a `value_type` of REPEATED_ENUM. This consists of two lists of value IDs: those that are set (true) and those that are unset (false). Values absent are considered unknown. At least one value must be specified."""  
    url_values: Optional[list[shared_urlattributevalue.URLAttributeValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('urlValues'), 'exclude': lambda f: f is None }})
    r"""When the attribute value type is URL, this field contains the value(s) for this attribute, and the other values fields must be empty."""  
    values: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('values'), 'exclude': lambda f: f is None }})
    r"""The values for this attribute. The type of the values supplied must match that expected for that attribute; see [AttributeValueType](/my-business/reference/rest/v4/AttributeValueType). This is a repeated field where multiple attribute values may be provided. Attribute types only support one value."""  
    value_type: Optional[AttributeValueTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('valueType'), 'exclude': lambda f: f is None }})
    r"""Output only. The type of value that this attribute contains. This should be used to determine how to interpret the value."""  
    