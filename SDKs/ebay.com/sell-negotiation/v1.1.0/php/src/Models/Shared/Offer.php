<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Offer - A complex type that defines an offer that a seller makes to eligible buyers.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Offer
{
    /**
     * If set to true, the buyer is allowed to make a counter-offer to the seller's offer.
     * 
     * @var ?bool $allowCounterOffer
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowCounterOffer')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowCounterOffer = null;
    
    /**
     * This complex type identifies an eBay user.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\User $buyer
     */
	#[\JMS\Serializer\Annotation\SerializedName('buyer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\User')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?User $buyer = null;
    
    /**
     * The date and time when the seller's offer was created. The returned timestamp is formatted as an ISO 8601 string, which is based on the 24-hour Coordinated Universal Time (UTC) clock. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z Example: 2018-08-20T07:09:00.000Z
     * 
     * @var ?string $creationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creationDate = null;
    
    /**
     * The eBay UserName of the user (seller) who initiated the offer.
     * 
     * @var ?string $initiatedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('initiatedBy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $initiatedBy = null;
    
    /**
     * The date and time when the offer was last modified. The returned timestamp is formatted as an ISO 8601 string.
     * 
     * @var ?string $lastModifiedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastModifiedDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastModifiedDate = null;
    
    /**
     * A seller-defined message related to the offer being made. This message is sent to the list of &quot;interested&quot; buyers along with the offer message from eBay.
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * A complex type that specifies a period of time using a specified time-measurement unit.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TimeDuration $offerDuration
     */
	#[\JMS\Serializer\Annotation\SerializedName('offerDuration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TimeDuration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TimeDuration $offerDuration = null;
    
    /**
     * A unique eBay-assigned identifier for the offer.
     * 
     * @var ?string $offerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('offerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $offerId = null;
    
    /**
     * The current state, or status, of an offer. Status states include PENDING, COUNTERED, ACCEPTED, and DECLINED. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/negotiation/types/api:OfferStatusEnum'>eBay API documentation</a>
     * 
     * @var ?string $offerStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('offerStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $offerStatus = null;
    
    /**
     * The type of offer being made. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/negotiation/types/api:OfferTypeEnum'>eBay API documentation</a>
     * 
     * @var ?string $offerType
     */
	#[\JMS\Serializer\Annotation\SerializedName('offerType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $offerType = null;
    
    /**
     * The list of items associated with the offer. Currently, the offer list is restricted to a single offer.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OfferedItem> $offeredItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('offeredItems')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OfferedItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $offeredItems = null;
    
    /**
     * A unique, eBay-assigned ID for the revision of the offer.
     * 
     * @var ?string $revision
     */
	#[\JMS\Serializer\Annotation\SerializedName('revision')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revision = null;
    
	public function __construct()
	{
		$this->allowCounterOffer = null;
		$this->buyer = null;
		$this->creationDate = null;
		$this->initiatedBy = null;
		$this->lastModifiedDate = null;
		$this->message = null;
		$this->offerDuration = null;
		$this->offerId = null;
		$this->offerStatus = null;
		$this->offerType = null;
		$this->offeredItems = null;
		$this->revision = null;
	}
}
