"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listusersresponse as shared_listusersresponse
from typing import Optional


@dataclasses.dataclass
class GetListUsersRequest:
    
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""The media type of the body of the request. Default value for license manager protocol is application/json"""  
    num_items: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'numItems', 'style': 'form', 'explode': True }})
    r"""Number of items in the returned page"""  
    page_number: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageNumber', 'style': 'form', 'explode': True }})
    r"""Which page from the whole list will be returned"""  
    sort: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Chooses the field that the list will be sorted by"""  
    sort_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sortType', 'style': 'form', 'explode': True }})
    r"""Defines the sorting order. `ASC` is used for ascendant order. `DSC` is used for descendant order"""  
    

@dataclasses.dataclass
class GetListUsersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_users_response: Optional[shared_listusersresponse.ListUsersResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    