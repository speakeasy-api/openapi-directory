"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import s3sourceadditionaloptions as shared_s3sourceadditionaloptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class S3CatalogSource:
    r"""Specifies an Amazon S3 data store in the Glue Data Catalog."""
    
    database: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Database') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    table: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Table') }})  
    additional_options: Optional[shared_s3sourceadditionaloptions.S3SourceAdditionalOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalOptions'), 'exclude': lambda f: f is None }})  
    partition_predicate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PartitionPredicate'), 'exclude': lambda f: f is None }})  
    