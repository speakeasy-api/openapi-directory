// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UnprocessedErrorCodeEnum string

const (
	UnprocessedErrorCodeEnumInvalidInput  UnprocessedErrorCodeEnum = "INVALID_INPUT"
	UnprocessedErrorCodeEnumAccessDenied  UnprocessedErrorCodeEnum = "ACCESS_DENIED"
	UnprocessedErrorCodeEnumNotFound      UnprocessedErrorCodeEnum = "NOT_FOUND"
	UnprocessedErrorCodeEnumLimitExceeded UnprocessedErrorCodeEnum = "LIMIT_EXCEEDED"
)

func (e *UnprocessedErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INVALID_INPUT":
		fallthrough
	case "ACCESS_DENIED":
		fallthrough
	case "NOT_FOUND":
		fallthrough
	case "LIMIT_EXCEEDED":
		*e = UnprocessedErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UnprocessedErrorCodeEnum: %s", s)
	}
}
