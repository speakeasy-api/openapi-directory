/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Object representing application keys
 */
export class AppKeyItems extends SpeakeasyBase {
  /**
   * AppKey (Access Key in the license manager UI)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appKey" })
  appKey?: string;

  /**
   * AppToken. For security reasons, should always be null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appToken" })
  appToken?: string;

  /**
   * Creation date of the application key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdIn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdIn?: Date;

  /**
   * ID of the application key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * If the application key is active
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive?: boolean;

  /**
   * If the application key is blocked
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isBlocked" })
  isBlocked?: boolean;

  /**
   * Label of the application key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;
}
