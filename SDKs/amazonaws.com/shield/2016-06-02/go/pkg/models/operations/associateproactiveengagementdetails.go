// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AssociateProactiveEngagementDetailsXAmzTargetEnum
type AssociateProactiveEngagementDetailsXAmzTargetEnum string

const (
	AssociateProactiveEngagementDetailsXAmzTargetEnumAwsShield20160616AssociateProactiveEngagementDetails AssociateProactiveEngagementDetailsXAmzTargetEnum = "AWSShield_20160616.AssociateProactiveEngagementDetails"
)

func (e *AssociateProactiveEngagementDetailsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSShield_20160616.AssociateProactiveEngagementDetails":
		*e = AssociateProactiveEngagementDetailsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateProactiveEngagementDetailsXAmzTargetEnum: %s", s)
	}
}

type AssociateProactiveEngagementDetailsHeaders struct {
	XAmzAlgorithm     *string                                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        AssociateProactiveEngagementDetailsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateProactiveEngagementDetailsRequest struct {
	Headers AssociateProactiveEngagementDetailsHeaders
	Request shared.AssociateProactiveEngagementDetailsRequest `request:"mediaType=application/json"`
}

type AssociateProactiveEngagementDetailsResponse struct {
	// Success
	AssociateProactiveEngagementDetailsResponse map[string]interface{}
	ContentType                                 string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidOperationException
	InvalidOperationException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// OptimisticLockException
	OptimisticLockException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
