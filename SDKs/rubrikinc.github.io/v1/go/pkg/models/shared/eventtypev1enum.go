// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EventTypeV1Enum - Type of an event.
type EventTypeV1Enum string

const (
	EventTypeV1EnumArchive            EventTypeV1Enum = "Archive"
	EventTypeV1EnumAudit              EventTypeV1Enum = "Audit"
	EventTypeV1EnumAuthDomain         EventTypeV1Enum = "AuthDomain"
	EventTypeV1EnumAwsEvent           EventTypeV1Enum = "AwsEvent"
	EventTypeV1EnumBackup             EventTypeV1Enum = "Backup"
	EventTypeV1EnumClassification     EventTypeV1Enum = "Classification"
	EventTypeV1EnumCloudNativeSource  EventTypeV1Enum = "CloudNativeSource"
	EventTypeV1EnumCloudNativeVM      EventTypeV1Enum = "CloudNativeVm"
	EventTypeV1EnumConfiguration      EventTypeV1Enum = "Configuration"
	EventTypeV1EnumConnection         EventTypeV1Enum = "Connection"
	EventTypeV1EnumConversion         EventTypeV1Enum = "Conversion"
	EventTypeV1EnumDiagnostic         EventTypeV1Enum = "Diagnostic"
	EventTypeV1EnumDiscovery          EventTypeV1Enum = "Discovery"
	EventTypeV1EnumFailover           EventTypeV1Enum = "Failover"
	EventTypeV1EnumFileset            EventTypeV1Enum = "Fileset"
	EventTypeV1EnumHardware           EventTypeV1Enum = "Hardware"
	EventTypeV1EnumHostEvent          EventTypeV1Enum = "HostEvent"
	EventTypeV1EnumHypervScvmm        EventTypeV1Enum = "HypervScvmm"
	EventTypeV1EnumHypervServer       EventTypeV1Enum = "HypervServer"
	EventTypeV1EnumIndex              EventTypeV1Enum = "Index"
	EventTypeV1EnumInstantiate        EventTypeV1Enum = "Instantiate"
	EventTypeV1EnumLegalHold          EventTypeV1Enum = "LegalHold"
	EventTypeV1EnumMaintenance        EventTypeV1Enum = "Maintenance"
	EventTypeV1EnumNutanixCluster     EventTypeV1Enum = "NutanixCluster"
	EventTypeV1EnumRecovery           EventTypeV1Enum = "Recovery"
	EventTypeV1EnumReplication        EventTypeV1Enum = "Replication"
	EventTypeV1EnumResourceOperations EventTypeV1Enum = "ResourceOperations"
	EventTypeV1EnumStorage            EventTypeV1Enum = "Storage"
	EventTypeV1EnumStorageArray       EventTypeV1Enum = "StorageArray"
	EventTypeV1EnumStormResource      EventTypeV1Enum = "StormResource"
	EventTypeV1EnumSupport            EventTypeV1Enum = "Support"
	EventTypeV1EnumSystem             EventTypeV1Enum = "System"
	EventTypeV1EnumTestFailover       EventTypeV1Enum = "TestFailover"
	EventTypeV1EnumUpgrade            EventTypeV1Enum = "Upgrade"
	EventTypeV1EnumVCenter            EventTypeV1Enum = "VCenter"
	EventTypeV1EnumVcd                EventTypeV1Enum = "Vcd"
	EventTypeV1EnumVolumeGroup        EventTypeV1Enum = "VolumeGroup"
	EventTypeV1EnumUnknownEventType   EventTypeV1Enum = "UnknownEventType"
)

func (e EventTypeV1Enum) ToPointer() *EventTypeV1Enum {
	return &e
}

func (e *EventTypeV1Enum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Archive":
		fallthrough
	case "Audit":
		fallthrough
	case "AuthDomain":
		fallthrough
	case "AwsEvent":
		fallthrough
	case "Backup":
		fallthrough
	case "Classification":
		fallthrough
	case "CloudNativeSource":
		fallthrough
	case "CloudNativeVm":
		fallthrough
	case "Configuration":
		fallthrough
	case "Connection":
		fallthrough
	case "Conversion":
		fallthrough
	case "Diagnostic":
		fallthrough
	case "Discovery":
		fallthrough
	case "Failover":
		fallthrough
	case "Fileset":
		fallthrough
	case "Hardware":
		fallthrough
	case "HostEvent":
		fallthrough
	case "HypervScvmm":
		fallthrough
	case "HypervServer":
		fallthrough
	case "Index":
		fallthrough
	case "Instantiate":
		fallthrough
	case "LegalHold":
		fallthrough
	case "Maintenance":
		fallthrough
	case "NutanixCluster":
		fallthrough
	case "Recovery":
		fallthrough
	case "Replication":
		fallthrough
	case "ResourceOperations":
		fallthrough
	case "Storage":
		fallthrough
	case "StorageArray":
		fallthrough
	case "StormResource":
		fallthrough
	case "Support":
		fallthrough
	case "System":
		fallthrough
	case "TestFailover":
		fallthrough
	case "Upgrade":
		fallthrough
	case "VCenter":
		fallthrough
	case "Vcd":
		fallthrough
	case "VolumeGroup":
		fallthrough
	case "UnknownEventType":
		*e = EventTypeV1Enum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventTypeV1Enum: %v", v)
	}
}
