/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of the field.
 */
export enum FieldTypeFieldNameEnum {
  AccountCode = "accountCode",
  AccountHolderCode = "accountHolderCode",
  AccountHolderDetails = "accountHolderDetails",
  AccountNumber = "accountNumber",
  AccountStateType = "accountStateType",
  AccountStatus = "accountStatus",
  AccountType = "accountType",
  Address = "address",
  BalanceAccount = "balanceAccount",
  BalanceAccountActive = "balanceAccountActive",
  BalanceAccountCode = "balanceAccountCode",
  BalanceAccountId = "balanceAccountId",
  BankAccount = "bankAccount",
  BankAccountCode = "bankAccountCode",
  BankAccountName = "bankAccountName",
  BankAccountUUID = "bankAccountUUID",
  BankBicSwift = "bankBicSwift",
  BankCity = "bankCity",
  BankCode = "bankCode",
  BankName = "bankName",
  BankStatement = "bankStatement",
  BranchCode = "branchCode",
  BusinessContact = "businessContact",
  CardToken = "cardToken",
  CheckCode = "checkCode",
  City = "city",
  CompanyRegistration = "companyRegistration",
  ConstitutionalDocument = "constitutionalDocument",
  Controller = "controller",
  Country = "country",
  CountryCode = "countryCode",
  Currency = "currency",
  CurrencyCode = "currencyCode",
  DateOfBirth = "dateOfBirth",
  DestinationAccountCode = "destinationAccountCode",
  Document = "document",
  DocumentContent = "documentContent",
  DocumentExpirationDate = "documentExpirationDate",
  DocumentIssuerCountry = "documentIssuerCountry",
  DocumentIssuerState = "documentIssuerState",
  DocumentName = "documentName",
  DocumentNumber = "documentNumber",
  DocumentType = "documentType",
  DoingBusinessAs = "doingBusinessAs",
  DrivingLicence = "drivingLicence",
  DrivingLicenceBack = "drivingLicenceBack",
  DrivingLicenceFront = "drivingLicenceFront",
  DrivingLicense = "drivingLicense",
  Email = "email",
  FirstName = "firstName",
  FormType = "formType",
  FullPhoneNumber = "fullPhoneNumber",
  Gender = "gender",
  HopWebserviceUser = "hopWebserviceUser",
  HouseNumberOrName = "houseNumberOrName",
  Iban = "iban",
  IdCard = "idCard",
  IdNumber = "idNumber",
  IdentityDocument = "identityDocument",
  IndividualDetails = "individualDetails",
  Infix = "infix",
  JobTitle = "jobTitle",
  LastName = "lastName",
  LastReviewDate = "lastReviewDate",
  LegalArrangement = "legalArrangement",
  LegalArrangementCode = "legalArrangementCode",
  LegalArrangementEntity = "legalArrangementEntity",
  LegalArrangementEntityCode = "legalArrangementEntityCode",
  LegalArrangementLegalForm = "legalArrangementLegalForm",
  LegalArrangementMember = "legalArrangementMember",
  LegalArrangementMembers = "legalArrangementMembers",
  LegalArrangementName = "legalArrangementName",
  LegalArrangementReference = "legalArrangementReference",
  LegalArrangementRegistrationNumber = "legalArrangementRegistrationNumber",
  LegalArrangementTaxNumber = "legalArrangementTaxNumber",
  LegalArrangementType = "legalArrangementType",
  LegalBusinessName = "legalBusinessName",
  LegalEntity = "legalEntity",
  LegalEntityType = "legalEntityType",
  Logo = "logo",
  MerchantAccount = "merchantAccount",
  MerchantCategoryCode = "merchantCategoryCode",
  MerchantHouseNumber = "merchantHouseNumber",
  MerchantReference = "merchantReference",
  MicroDeposit = "microDeposit",
  Name = "name",
  Nationality = "nationality",
  OriginalReference = "originalReference",
  OwnerCity = "ownerCity",
  OwnerCountryCode = "ownerCountryCode",
  OwnerDateOfBirth = "ownerDateOfBirth",
  OwnerHouseNumberOrName = "ownerHouseNumberOrName",
  OwnerName = "ownerName",
  OwnerPostalCode = "ownerPostalCode",
  OwnerState = "ownerState",
  OwnerStreet = "ownerStreet",
  Passport = "passport",
  PassportNumber = "passportNumber",
  PayoutMethodCode = "payoutMethodCode",
  PayoutSchedule = "payoutSchedule",
  PciSelfAssessment = "pciSelfAssessment",
  PersonalData = "personalData",
  PhoneCountryCode = "phoneCountryCode",
  PhoneNumber = "phoneNumber",
  PostalCode = "postalCode",
  PrimaryCurrency = "primaryCurrency",
  Reason = "reason",
  ReturnUrl = "returnUrl",
  Schedule = "schedule",
  Shareholder = "shareholder",
  ShareholderCode = "shareholderCode",
  ShareholderCodeAndSignatoryCode = "shareholderCodeAndSignatoryCode",
  ShareholderCodeOrSignatoryCode = "shareholderCodeOrSignatoryCode",
  ShareholderType = "shareholderType",
  ShareholderTypes = "shareholderTypes",
  ShopperInteraction = "shopperInteraction",
  Signatory = "signatory",
  SignatoryCode = "signatoryCode",
  SocialSecurityNumber = "socialSecurityNumber",
  SourceAccountCode = "sourceAccountCode",
  SplitAccount = "splitAccount",
  SplitConfigurationUUID = "splitConfigurationUUID",
  SplitCurrency = "splitCurrency",
  SplitValue = "splitValue",
  Splits = "splits",
  StateOrProvince = "stateOrProvince",
  Status = "status",
  StockExchange = "stockExchange",
  StockNumber = "stockNumber",
  StockTicker = "stockTicker",
  Store = "store",
  StoreDetail = "storeDetail",
  StoreName = "storeName",
  StoreReference = "storeReference",
  Street = "street",
  TaxId = "taxId",
  Tier = "tier",
  TierNumber = "tierNumber",
  TransferCode = "transferCode",
  UltimateParentCompany = "ultimateParentCompany",
  UltimateParentCompanyAddressDetails = "ultimateParentCompanyAddressDetails",
  UltimateParentCompanyAddressDetailsCountry = "ultimateParentCompanyAddressDetailsCountry",
  UltimateParentCompanyBusinessDetails = "ultimateParentCompanyBusinessDetails",
  UltimateParentCompanyBusinessDetailsLegalBusinessName = "ultimateParentCompanyBusinessDetailsLegalBusinessName",
  UltimateParentCompanyBusinessDetailsRegistrationNumber = "ultimateParentCompanyBusinessDetailsRegistrationNumber",
  UltimateParentCompanyCode = "ultimateParentCompanyCode",
  UltimateParentCompanyStockExchange = "ultimateParentCompanyStockExchange",
  UltimateParentCompanyStockNumber = "ultimateParentCompanyStockNumber",
  UltimateParentCompanyStockNumberOrStockTicker = "ultimateParentCompanyStockNumberOrStockTicker",
  UltimateParentCompanyStockTicker = "ultimateParentCompanyStockTicker",
  Unknown = "unknown",
  Value = "value",
  VerificationType = "verificationType",
  VirtualAccount = "virtualAccount",
  VisaNumber = "visaNumber",
  WebAddress = "webAddress",
  Year = "year",
}

export class FieldType extends SpeakeasyBase {
  /**
   * The full name of the property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "field" })
  field?: string;

  /**
   * The type of the field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fieldName" })
  fieldName?: FieldTypeFieldNameEnum;

  /**
   * The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shareholderCode" })
  shareholderCode?: string;
}
