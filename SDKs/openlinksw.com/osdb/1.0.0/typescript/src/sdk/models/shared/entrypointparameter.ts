/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of the parameter, indicating its location in the HTTP request.
 */
export enum EntryPointParameterTypeEnum {
  Query = "query",
  Header = "header",
  Uri = "uri",
  Path = "path",
  Body = "body",
}

export class EntryPointParameter extends SpeakeasyBase {
  /**
   * A short description of the parameter for use in the OSDB Action Console. Optional - may be null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * The parameter's display name in the OSDB Action Console. Optional - may be null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The parameter name as present in the HTTP request. e.g. the key name in a query string key-value pair.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameter_name" })
  parameterName: string;

  /**
   * If the parameter accepts only a limited set of values, the allowed set of values. Null if not applicable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permitted_values" })
  permittedValues: string[];

  /**
   * A flag indicating if the parameter is optional.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required: number;

  /**
   * The type of the parameter, indicating its location in the HTTP request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: EntryPointParameterTypeEnum;
}
