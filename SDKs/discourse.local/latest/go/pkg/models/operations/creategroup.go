// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateGroupRequestBodyGroup struct {
	// pipe|separated
	AutomaticMembershipEmailDomains *string `json:"automatic_membership_email_domains,omitempty"`
	// About Group
	BioRaw                   *string `json:"bio_raw,omitempty"`
	DefaultNotificationLevel *int64  `json:"default_notification_level,omitempty"`
	FlairBgColor             *string `json:"flair_bg_color,omitempty"`
	FlairIcon                *string `json:"flair_icon,omitempty"`
	FlairUploadID            *int64  `json:"flair_upload_id,omitempty"`
	FullName                 *string `json:"full_name,omitempty"`
	MutedCategoryIds         []int64 `json:"muted_category_ids,omitempty"`
	Name                     string  `json:"name"`
	// comma,separated
	OwnerUsernames      *string `json:"owner_usernames,omitempty"`
	PrimaryGroup        *bool   `json:"primary_group,omitempty"`
	PublicAdmission     *bool   `json:"public_admission,omitempty"`
	PublicExit          *bool   `json:"public_exit,omitempty"`
	RegularCategoryIds  []int64 `json:"regular_category_ids,omitempty"`
	TrackingCategoryIds []int64 `json:"tracking_category_ids,omitempty"`
	// comma,separated
	Usernames                    *string `json:"usernames,omitempty"`
	VisibilityLevel              *int64  `json:"visibility_level,omitempty"`
	WatchingCategoryIds          []int64 `json:"watching_category_ids,omitempty"`
	WatchingFirstPostCategoryIds []int64 `json:"watching_first_post_category_ids,omitempty"`
}

type CreateGroupRequestBody struct {
	Group CreateGroupRequestBodyGroup `json:"group"`
}

type CreateGroupRequest struct {
	Request *CreateGroupRequestBody `request:"mediaType=application/json"`
}

type CreateGroup200ApplicationJSONBasicGroup struct {
	AllowMembershipRequests   bool   `json:"allow_membership_requests"`
	Automatic                 bool   `json:"automatic"`
	BioCooked                 string `json:"bio_cooked"`
	BioExcerpt                string `json:"bio_excerpt"`
	BioRaw                    string `json:"bio_raw"`
	CanAdminGroup             bool   `json:"can_admin_group"`
	CanEditGroup              *bool  `json:"can_edit_group,omitempty"`
	CanSeeMembers             bool   `json:"can_see_members"`
	DefaultNotificationLevel  int64  `json:"default_notification_level"`
	FlairBgColor              string `json:"flair_bg_color"`
	FlairColor                string `json:"flair_color"`
	FlairURL                  string `json:"flair_url"`
	FullName                  string `json:"full_name"`
	GrantTrustLevel           string `json:"grant_trust_level"`
	HasMessages               bool   `json:"has_messages"`
	ID                        int64  `json:"id"`
	IncomingEmail             string `json:"incoming_email"`
	MembersVisibilityLevel    int64  `json:"members_visibility_level"`
	MembershipRequestTemplate string `json:"membership_request_template"`
	MentionableLevel          int64  `json:"mentionable_level"`
	MessageableLevel          int64  `json:"messageable_level"`
	Name                      string `json:"name"`
	PrimaryGroup              bool   `json:"primary_group"`
	PublicAdmission           bool   `json:"public_admission"`
	PublicExit                bool   `json:"public_exit"`
	PublishReadState          bool   `json:"publish_read_state"`
	Title                     string `json:"title"`
	UserCount                 int64  `json:"user_count"`
	VisibilityLevel           int64  `json:"visibility_level"`
}

// CreateGroup200ApplicationJSON - group created
type CreateGroup200ApplicationJSON struct {
	BasicGroup CreateGroup200ApplicationJSONBasicGroup `json:"basic_group"`
}

type CreateGroupResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// group created
	CreateGroup200ApplicationJSONObject *CreateGroup200ApplicationJSON
}
