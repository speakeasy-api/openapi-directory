/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ImportCertificateRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ActiveDate")
    public OffsetDateTime activeDate;
    public ImportCertificateRequest withActiveDate(OffsetDateTime activeDate) {
        this.activeDate = activeDate;
        return this;
    }
    
    @JsonProperty("Certificate")
    public String certificate;
    public ImportCertificateRequest withCertificate(String certificate) {
        this.certificate = certificate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CertificateChain")
    public String certificateChain;
    public ImportCertificateRequest withCertificateChain(String certificateChain) {
        this.certificateChain = certificateChain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public ImportCertificateRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("InactiveDate")
    public OffsetDateTime inactiveDate;
    public ImportCertificateRequest withInactiveDate(OffsetDateTime inactiveDate) {
        this.inactiveDate = inactiveDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PrivateKey")
    public String privateKey;
    public ImportCertificateRequest withPrivateKey(String privateKey) {
        this.privateKey = privateKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public ImportCertificateRequest withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonProperty("Usage")
    public CertificateUsageTypeEnum usage;
    public ImportCertificateRequest withUsage(CertificateUsageTypeEnum usage) {
        this.usage = usage;
        return this;
    }
    
}
