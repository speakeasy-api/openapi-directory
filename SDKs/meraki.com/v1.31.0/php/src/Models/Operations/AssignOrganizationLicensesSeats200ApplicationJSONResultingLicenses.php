<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class AssignOrganizationLicensesSeats200ApplicationJSONResultingLicenses
{
    /**
     * The date the license started burning
     * 
     * @var ?string $activationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('activationDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $activationDate = null;
    
    /**
     * The date the license was claimed into the organization
     * 
     * @var ?string $claimDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('claimDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $claimDate = null;
    
    /**
     * Serial number of the device the license is assigned to
     * 
     * @var ?string $deviceSerial
     */
	#[\JMS\Serializer\Annotation\SerializedName('deviceSerial')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deviceSerial = null;
    
    /**
     * The duration of the individual license
     * 
     * @var ?int $durationInDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('durationInDays')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $durationInDays = null;
    
    /**
     * The date the license will expire
     * 
     * @var ?string $expirationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('expirationDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expirationDate = null;
    
    /**
     * The id of the head license this license is queued behind. If there is no head license, it returns nil.
     * 
     * @var ?string $headLicenseId
     */
	#[\JMS\Serializer\Annotation\SerializedName('headLicenseId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $headLicenseId = null;
    
    /**
     * License ID
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * License key
     * 
     * @var ?string $licenseKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('licenseKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $licenseKey = null;
    
    /**
     * License type
     * 
     * @var ?string $licenseType
     */
	#[\JMS\Serializer\Annotation\SerializedName('licenseType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $licenseType = null;
    
    /**
     * ID of the network the license is assigned to
     * 
     * @var ?string $networkId
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkId = null;
    
    /**
     * Order number
     * 
     * @var ?string $orderNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('orderNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $orderNumber = null;
    
    /**
     * DEPRECATED List of permanently queued licenses attached to the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial= to retrieved queued licenses for a given device.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\AssignOrganizationLicensesSeats200ApplicationJSONResultingLicensesPermanentlyQueuedLicenses> $permanentlyQueuedLicenses
     */
	#[\JMS\Serializer\Annotation\SerializedName('permanentlyQueuedLicenses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\AssignOrganizationLicensesSeats200ApplicationJSONResultingLicensesPermanentlyQueuedLicenses>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $permanentlyQueuedLicenses = null;
    
    /**
     * The number of seats of the license. Only applicable to SM licenses.
     * 
     * @var ?int $seatCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('seatCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $seatCount = null;
    
    /**
     * The state of the license. All queued licenses have a status of `recentlyQueued`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\AssignOrganizationLicensesSeats200ApplicationJSONResultingLicensesStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\AssignOrganizationLicensesSeats200ApplicationJSONResultingLicensesStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AssignOrganizationLicensesSeats200ApplicationJSONResultingLicensesStateEnum $state = null;
    
    /**
     * The duration of the license plus all permanently queued licenses associated with it
     * 
     * @var ?int $totalDurationInDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalDurationInDays')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalDurationInDays = null;
    
	public function __construct()
	{
		$this->activationDate = null;
		$this->claimDate = null;
		$this->deviceSerial = null;
		$this->durationInDays = null;
		$this->expirationDate = null;
		$this->headLicenseId = null;
		$this->id = null;
		$this->licenseKey = null;
		$this->licenseType = null;
		$this->networkId = null;
		$this->orderNumber = null;
		$this->permanentlyQueuedLicenses = null;
		$this->seatCount = null;
		$this->state = null;
		$this->totalDurationInDays = null;
	}
}
