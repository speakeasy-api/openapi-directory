"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ebssnapshotconfiguration as shared_ebssnapshotconfiguration
from ..shared import ecrrepositoryconfiguration as shared_ecrrepositoryconfiguration
from ..shared import efsfilesystemconfiguration as shared_efsfilesystemconfiguration
from ..shared import iamroleconfiguration as shared_iamroleconfiguration
from ..shared import kmskeyconfiguration as shared_kmskeyconfiguration
from ..shared import rdsdbclustersnapshotconfiguration as shared_rdsdbclustersnapshotconfiguration
from ..shared import rdsdbsnapshotconfiguration as shared_rdsdbsnapshotconfiguration
from ..shared import s3bucketconfiguration as shared_s3bucketconfiguration
from ..shared import secretsmanagersecretconfiguration as shared_secretsmanagersecretconfiguration
from ..shared import snstopicconfiguration as shared_snstopicconfiguration
from ..shared import sqsqueueconfiguration as shared_sqsqueueconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Configuration:
    r"""Access control configuration structures for your resource. You specify the configuration as a type-value pair. You can specify only one type of access control configuration."""
    
    ebs_snapshot: Optional[shared_ebssnapshotconfiguration.EbsSnapshotConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ebsSnapshot'), 'exclude': lambda f: f is None }})  
    ecr_repository: Optional[shared_ecrrepositoryconfiguration.EcrRepositoryConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ecrRepository'), 'exclude': lambda f: f is None }})  
    efs_file_system: Optional[shared_efsfilesystemconfiguration.EfsFileSystemConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('efsFileSystem'), 'exclude': lambda f: f is None }})  
    iam_role: Optional[shared_iamroleconfiguration.IamRoleConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iamRole'), 'exclude': lambda f: f is None }})  
    kms_key: Optional[shared_kmskeyconfiguration.KmsKeyConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kmsKey'), 'exclude': lambda f: f is None }})  
    rds_db_cluster_snapshot: Optional[shared_rdsdbclustersnapshotconfiguration.RdsDbClusterSnapshotConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rdsDbClusterSnapshot'), 'exclude': lambda f: f is None }})  
    rds_db_snapshot: Optional[shared_rdsdbsnapshotconfiguration.RdsDbSnapshotConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rdsDbSnapshot'), 'exclude': lambda f: f is None }})  
    s3_bucket: Optional[shared_s3bucketconfiguration.S3BucketConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('s3Bucket'), 'exclude': lambda f: f is None }})  
    secrets_manager_secret: Optional[shared_secretsmanagersecretconfiguration.SecretsManagerSecretConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secretsManagerSecret'), 'exclude': lambda f: f is None }})  
    sns_topic: Optional[shared_snstopicconfiguration.SnsTopicConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snsTopic'), 'exclude': lambda f: f is None }})  
    sqs_queue: Optional[shared_sqsqueueconfiguration.SqsQueueConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sqsQueue'), 'exclude': lambda f: f is None }})  
    