/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostAuthRenewRequestBody extends SpeakeasyBase {
  /**
   * ID of the client
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=client_id" })
  clientId: string;

  /**
   * secret of the client
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=client_secret" })
  clientSecret: string;

  /**
   * default is "client_credentials"
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=grant_type" })
  grantType?: string;

  /**
   * id of the user to generate a token for
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=id_user" })
  idUser: number;

  /**
   * if true, all other permanent tokens for the user will be deleted
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=revoke_previous" })
  revokePrevious?: boolean;
}

export class PostAuthRenew200ApplicationJSON extends SpeakeasyBase {
  /**
   * the access token transformed from the temporary one
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access_token" })
  accessToken: string;

  /**
   * the access token type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token_type" })
  tokenType: string;
}

export class PostAuthRenewResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  postAuthRenew200ApplicationJSONObject?: PostAuthRenew200ApplicationJSON;
}
