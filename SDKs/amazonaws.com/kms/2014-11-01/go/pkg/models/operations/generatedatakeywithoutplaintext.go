// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GenerateDataKeyWithoutPlaintextXAmzTargetEnum
type GenerateDataKeyWithoutPlaintextXAmzTargetEnum string

const (
	GenerateDataKeyWithoutPlaintextXAmzTargetEnumTrentServiceGenerateDataKeyWithoutPlaintext GenerateDataKeyWithoutPlaintextXAmzTargetEnum = "TrentService.GenerateDataKeyWithoutPlaintext"
)

func (e *GenerateDataKeyWithoutPlaintextXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TrentService.GenerateDataKeyWithoutPlaintext":
		*e = GenerateDataKeyWithoutPlaintextXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GenerateDataKeyWithoutPlaintextXAmzTargetEnum: %s", s)
	}
}

type GenerateDataKeyWithoutPlaintextRequest struct {
	GenerateDataKeyWithoutPlaintextRequest shared.GenerateDataKeyWithoutPlaintextRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                          *string                                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                      *string                                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                         *string                                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                               *string                                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                      *string                                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                          *string                                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                      *string                                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                             GenerateDataKeyWithoutPlaintextXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GenerateDataKeyWithoutPlaintextResponse struct {
	ContentType string
	// DependencyTimeoutException
	DependencyTimeoutException interface{}
	// DisabledException
	DisabledException interface{}
	// Success
	GenerateDataKeyWithoutPlaintextResponse *shared.GenerateDataKeyWithoutPlaintextResponse
	// InvalidGrantTokenException
	InvalidGrantTokenException interface{}
	// InvalidKeyUsageException
	InvalidKeyUsageException interface{}
	// KMSInternalException
	KMSInternalException interface{}
	// KMSInvalidStateException
	KMSInvalidStateException interface{}
	// KeyUnavailableException
	KeyUnavailableException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
}
