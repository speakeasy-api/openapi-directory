<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PaymentResponseV3 - 200 response, request completed okay
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PaymentResponseV3
{
	#[\JMS\Serializer\Annotation\SerializedName('accountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountName = null;
    
    /**
     * The account number for the account which will receive the payment.
     * 
     * @var ?string $accountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountNumber = null;
    
    /**
     * The country code of the payment channel.
     * 
     * @var ?string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('countryCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $countryCode = null;
    
    /**
     * $events
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\PaymentEventResponseV3> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PaymentEventResponseV3>')]
    public array $events;
    
    /**
     * ACH file payment was submitted in, if applicable
     * 
     * @var ?string $filenameReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('filenameReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filenameReference = null;
    
    /**
     * The funding status of the payment. One of the following values: [FUNDED, INSTRUCTED, UNFUNDED
     * 
     * @var string $fundingStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('fundingStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $fundingStatus;
    
    /**
     * The iban for the payment.
     * 
     * @var ?string $iban
     */
	#[\JMS\Serializer\Annotation\SerializedName('iban')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iban = null;
    
    /**
     * Individual Identification Number assigned to the payment in the ACH file, if applicable
     * 
     * @var ?string $individualIdentificationNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('individualIdentificationNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $individualIdentificationNumber = null;
    
    /**
     * The inverted FX rate for the payment, if FX was involved. **Note** that (depending on the role of the caller) this information may not be displayed
     * 
     * @var ?float $invertedRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('invertedRate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $invertedRate = null;
    
    /**
     * The id of the paymeee
     * 
     * @var string $payeeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payeeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $payeeId;
    
    /**
     * The amount which the payee will receive
     * 
     * @var int $paymentAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $paymentAmount;
    
	#[\JMS\Serializer\Annotation\SerializedName('paymentChannelId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentChannelId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('paymentChannelName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentChannelName = null;
    
    /**
     * ISO 3 character currency code
     * 
     * @var ?string $paymentCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentCurrency = null;
    
    /**
     * The id of the payment
     * 
     * @var string $paymentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $paymentId;
    
    /**
     * The payment memo set by the payor
     * 
     * @var ?string $paymentMemo
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentMemo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentMemo = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('paymentScheme')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentScheme = null;
    
    /**
     * The id of the payor
     * 
     * @var string $payorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payorId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $payorId;
    
    /**
     * The name of the payor
     * 
     * @var ?string $payorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('payorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payorName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('payorPaymentId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payorPaymentId = null;
    
    /**
     * The quote Id used for the FX
     * 
     * @var string $quoteId
     */
	#[\JMS\Serializer\Annotation\SerializedName('quoteId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $quoteId;
    
	#[\JMS\Serializer\Annotation\SerializedName('railsBatchId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $railsBatchId = null;
    
    /**
     * The rails ID. Default value is RAILS ID UNAVAILABLE when not populated.
     * 
     * @var string $railsId
     */
	#[\JMS\Serializer\Annotation\SerializedName('railsId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $railsId;
    
	#[\JMS\Serializer\Annotation\SerializedName('railsPaymentId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $railsPaymentId = null;
    
    /**
     * The FX rate for the payment, if FX was involved. **Note** that (depending on the role of the caller) this information may not be displayed
     * 
     * @var ?float $rate
     */
	#[\JMS\Serializer\Annotation\SerializedName('rate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $rate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('rejectionReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rejectionReason = null;
    
    /**
     * The remote id by which the payor refers to the payee. Only populated once payment is confirmed
     * 
     * @var ?string $remoteId
     */
	#[\JMS\Serializer\Annotation\SerializedName('remoteId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $remoteId = null;
    
    /**
     * The return cost if a returned payment.
     * 
     * @var ?int $returnCost
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnCost')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $returnCost = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('returnReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $returnReason = null;
    
    /**
     * The routing number for the payment.
     * 
     * @var ?string $routingNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('routingNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $routingNumber = null;
    
    /**
     * The id of the source account from which the payment was taken
     * 
     * @var string $sourceAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceAccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceAccountId;
    
    /**
     * The name of the source account from which the payment was taken
     * 
     * @var ?string $sourceAccountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceAccountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceAccountName = null;
    
    /**
     * The source amount for the payment (amount debited to make the payment)
     * 
     * @var ?int $sourceAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceAmount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sourceAmount = null;
    
    /**
     * ISO 3 character currency code
     * 
     * @var ?string $sourceCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceCurrency = null;
    
    /**
     * Current status of the payment. One of the following values: ACCEPTED, AWAITING_FUNDS, FUNDED, UNFUNDED, BANK_PAYMENT_REQUESTED, REJECTED, ACCEPTED_BY_RAILS, CONFIRMED, FAILED, WITHDRAWN
     * 
     * @var string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $status;
    
	#[\JMS\Serializer\Annotation\SerializedName('submittedDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $submittedDateTime;
    
    /**
     * Trace Number assigned to the payment in the ACH file, if applicable
     * 
     * @var ?string $traceNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('traceNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $traceNumber = null;
    
	public function __construct()
	{
		$this->accountName = null;
		$this->accountNumber = null;
		$this->countryCode = null;
		$this->events = [];
		$this->filenameReference = null;
		$this->fundingStatus = "";
		$this->iban = null;
		$this->individualIdentificationNumber = null;
		$this->invertedRate = null;
		$this->payeeId = "";
		$this->paymentAmount = 0;
		$this->paymentChannelId = null;
		$this->paymentChannelName = null;
		$this->paymentCurrency = null;
		$this->paymentId = "";
		$this->paymentMemo = null;
		$this->paymentScheme = null;
		$this->payorId = "";
		$this->payorName = null;
		$this->payorPaymentId = null;
		$this->quoteId = "";
		$this->railsBatchId = null;
		$this->railsId = "";
		$this->railsPaymentId = null;
		$this->rate = null;
		$this->rejectionReason = null;
		$this->remoteId = null;
		$this->returnCost = null;
		$this->returnReason = null;
		$this->routingNumber = null;
		$this->sourceAccountId = "";
		$this->sourceAccountName = null;
		$this->sourceAmount = null;
		$this->sourceCurrency = null;
		$this->status = "";
		$this->submittedDateTime = new \DateTime();
		$this->traceNumber = null;
	}
}
