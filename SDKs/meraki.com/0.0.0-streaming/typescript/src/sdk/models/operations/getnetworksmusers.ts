/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetNetworkSmUsersRequest extends SpeakeasyBase {
  /**
   * Filter users by email(s). Multiple emails can be passed in as comma separated values.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=emails",
  })
  emails?: string;

  /**
   * Filter users by id(s). Multiple ids can be passed in as comma separated values.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ids" })
  ids?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;

  /**
   * Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags as comma separated values.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=scope" })
  scope?: string;

  /**
   * Filter users by username(s). Multiple usernames can be passed in as comma separated values.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=usernames",
  })
  usernames?: string;
}

export class GetNetworkSmUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  getNetworkSmUsers200ApplicationJSONObjects?: Record<string, any>[];
}
