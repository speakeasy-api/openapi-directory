<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LifecyclePolicy - LifecyclePolicy describes how to deal with task failures based on different conditions.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LifecyclePolicy
{
    /**
     * Action to execute when ActionCondition is true. When RETRY_TASK is specified, we will retry failed tasks if we notice any exit code match and fail tasks if no match is found. Likewise, when FAIL_TASK is specified, we will fail tasks if we notice any exit code match and retry tasks if no match is found.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LifecyclePolicyActionEnum $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LifecyclePolicyActionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LifecyclePolicyActionEnum $action = null;
    
    /**
     * Conditions for actions to deal with task failures.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ActionCondition $actionCondition
     */
	#[\JMS\Serializer\Annotation\SerializedName('actionCondition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ActionCondition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ActionCondition $actionCondition = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->actionCondition = null;
	}
}
