/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * WebhookResponse - Webhook objects represent the state of an active subscription for a server to be updated with information from Asana. This schema represents the subscription itself, not the objects that are sent to the server. For information on those please refer to the [Event](/docs/tocS_Event) schema.
 */
public class WebhookResponse {
    /**
     * If true, the webhook will send events - if false it is considered inactive and will not generate events.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;

    public WebhookResponse withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * The time at which this resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public WebhookResponse withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filters")
    public WebhookResponseFilters[] filters;

    public WebhookResponse withFilters(WebhookResponseFilters[] filters) {
        this.filters = filters;
        return this;
    }
    
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;

    public WebhookResponse withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    /**
     * The timestamp when the webhook last received an error when sending an event to the target.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("last_failure_at")
    public OffsetDateTime lastFailureAt;

    public WebhookResponse withLastFailureAt(OffsetDateTime lastFailureAt) {
        this.lastFailureAt = lastFailureAt;
        return this;
    }
    
    /**
     * The contents of the last error response sent to the webhook when attempting to deliver events to the target.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_failure_content")
    public String lastFailureContent;

    public WebhookResponse withLastFailureContent(String lastFailureContent) {
        this.lastFailureContent = lastFailureContent;
        return this;
    }
    
    /**
     * The timestamp when the webhook last successfully sent an event to the target.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("last_success_at")
    public OffsetDateTime lastSuccessAt;

    public WebhookResponse withLastSuccessAt(OffsetDateTime lastSuccessAt) {
        this.lastSuccessAt = lastSuccessAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    public AsanaNamedResource resource;

    public WebhookResponse withResource(AsanaNamedResource resource) {
        this.resource = resource;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;

    public WebhookResponse withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    /**
     * The URL to receive the HTTP POST.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target")
    public String target;

    public WebhookResponse withTarget(String target) {
        this.target = target;
        return this;
    }
    
    public WebhookResponse(){}
}
