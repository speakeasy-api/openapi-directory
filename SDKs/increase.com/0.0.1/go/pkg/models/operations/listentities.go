// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListEntitiesRequest struct {
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	Limit  *int64  `queryParam:"style=form,explode=true,name=limit"`
}

type ListEntitiesDefaultApplicationJSON13StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListEntitiesDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ListEntitiesDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ListEntitiesDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON13TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON13TypeEnumRateLimitedError ListEntitiesDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ListEntitiesDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ListEntitiesDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON13 struct {
	Detail     string                                         `json:"detail"`
	RetryAfter *int64                                         `json:"retry_after,omitempty"`
	Status     ListEntitiesDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                         `json:"title"`
	Type       ListEntitiesDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON12StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON12StatusEnumFourHundredAndThree ListEntitiesDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ListEntitiesDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListEntitiesDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON12TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON12TypeEnumPrivateFeatureError ListEntitiesDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ListEntitiesDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ListEntitiesDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON12 struct {
	Detail string                                         `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON11StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON11StatusEnumFourHundredAndFour ListEntitiesDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ListEntitiesDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListEntitiesDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON11TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON11TypeEnumObjectNotFoundError ListEntitiesDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ListEntitiesDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ListEntitiesDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON11 struct {
	Detail string                                         `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON10StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON10StatusEnumFourHundred ListEntitiesDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ListEntitiesDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListEntitiesDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON10TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON10TypeEnumMalformedRequestError ListEntitiesDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ListEntitiesDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ListEntitiesDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON10 struct {
	Detail string                                         `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON9StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON9StatusEnumFourHundred ListEntitiesDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ListEntitiesDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListEntitiesDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON9TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON9TypeEnumInvalidParametersError ListEntitiesDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ListEntitiesDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ListEntitiesDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                      `json:"errors,omitempty"`
	Status ListEntitiesDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON8StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON8StatusEnumFourHundredAndNine ListEntitiesDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ListEntitiesDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListEntitiesDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON8TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON8TypeEnumInvalidOperationError ListEntitiesDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ListEntitiesDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ListEntitiesDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON8 struct {
	Detail string                                        `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON7StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON7StatusEnumFourHundredAndOne ListEntitiesDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ListEntitiesDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ListEntitiesDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON7TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListEntitiesDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ListEntitiesDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ListEntitiesDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON7 struct {
	Detail string                                        `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON6StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON6StatusEnumFiveHundred ListEntitiesDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ListEntitiesDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ListEntitiesDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON6TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON6TypeEnumInternalServerError ListEntitiesDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ListEntitiesDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ListEntitiesDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON6 struct {
	Detail string                                        `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON5StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON5StatusEnumFourHundredAndThree ListEntitiesDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ListEntitiesDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListEntitiesDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON5TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListEntitiesDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ListEntitiesDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ListEntitiesDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON5 struct {
	Detail string                                        `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON4StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListEntitiesDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ListEntitiesDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ListEntitiesDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON4TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListEntitiesDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ListEntitiesDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ListEntitiesDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON4 struct {
	Detail string                                        `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON3StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON3StatusEnumFourHundredAndNine ListEntitiesDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ListEntitiesDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListEntitiesDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON3TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListEntitiesDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ListEntitiesDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ListEntitiesDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON3 struct {
	Detail string                                        `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON2StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON2StatusEnumFourHundredAndThree ListEntitiesDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ListEntitiesDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListEntitiesDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON2TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListEntitiesDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ListEntitiesDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ListEntitiesDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON2 struct {
	Detail string                                        `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListEntitiesDefaultApplicationJSON1StatusEnum string

const (
	ListEntitiesDefaultApplicationJSON1StatusEnumFourHundredAndFour ListEntitiesDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ListEntitiesDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListEntitiesDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON1TypeEnum string

const (
	ListEntitiesDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListEntitiesDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ListEntitiesDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ListEntitiesDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitiesDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ListEntitiesDefaultApplicationJSON1 struct {
	Detail string                                        `json:"detail"`
	Status ListEntitiesDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListEntitiesDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListEntitiesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Entity List
	EntityList *shared.EntityList
	// Error
	Error interface{}
}
