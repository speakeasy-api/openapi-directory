"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import picture as shared_picture
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CategoryMetadataConnectionsChannels:
    r"""Information about the channels related to this category."""
    
    options: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options') }})
    r"""An array of HTTP methods permitted on this URI."""  
    total: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total') }})
    r"""The total number of channels on this connection."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The API URI that resolves to the connection data."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CategoryMetadataConnectionsGroups:
    r"""Information about the groups related to this category."""
    
    options: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options') }})
    r"""An array of HTTP methods permitted on this URI."""  
    total: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total') }})
    r"""The total number of groups on this connection."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The API URI that resolves to the connection data."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CategoryMetadataConnectionsUsers:
    r"""Information about the users related to this category."""
    
    options: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options') }})
    r"""An array of HTTP methods permitted on this URI."""  
    total: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total') }})
    r"""The total number of users on this connection."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The API URI that resolves to the connection data."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CategoryMetadataConnectionsVideos:
    r"""Information about the videos related to this category."""
    
    options: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options') }})
    r"""An array of HTTP methods permitted on this URI."""  
    total: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total') }})
    r"""The total number of videos on this connection."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The API URI that resolves to the connection data."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CategoryMetadataConnections:
    r"""A collection of information that is connected to this resource."""
    
    channels: CategoryMetadataConnectionsChannels = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channels') }})
    r"""Information about the channels related to this category."""  
    groups: CategoryMetadataConnectionsGroups = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groups') }})
    r"""Information about the groups related to this category."""  
    users: CategoryMetadataConnectionsUsers = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('users') }})
    r"""Information about the users related to this category."""  
    videos: CategoryMetadataConnectionsVideos = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videos') }})
    r"""Information about the videos related to this category."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CategoryMetadataInteractionsFollow:
    r"""An action indicating if the authenticated user has followed this category."""
    
    added: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('added') }})
    r"""Whether the authenticated user has followed this category."""  
    added_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('added_time') }})
    r"""The time in ISO 8601 format that the user followed this category, or the null value if the user hasn't followed this category."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The URI for following or unfollowing this category: PUT to this URI to follow the category, or DELETE to this URI to unfollow the category."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CategoryMetadataInteractions:
    r"""The permissible actions related to the category."""
    
    follow: CategoryMetadataInteractionsFollow = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('follow') }})
    r"""An action indicating if the authenticated user has followed this category."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CategoryMetadata:
    r"""Metadata about the category."""
    
    connections: CategoryMetadataConnections = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connections') }})
    r"""A collection of information that is connected to this resource."""  
    interactions: CategoryMetadataInteractions = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interactions') }})
    r"""The permissible actions related to the category."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CategoryParent:
    r"""The container of this category's parent category, if the current category is a subcategory."""
    
    link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link') }})
    r"""The URL to access the parent category in a browser."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The display name that identifies the parent category."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The unique identifier to access the parent of this category resource."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CategorySubcategories:
    
    link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link') }})
    r"""The URL to access the subcategory in a browser."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The display name that identifies the subcategory."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The unique identifier to access the subcategory resource."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Category:
    r"""The category was returned."""
    
    last_video_featured_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_video_featured_time') }})
    r"""The last time, in ISO 8601 format, that a video was featured."""  
    link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link') }})
    r"""The URL to access the category in a browser."""  
    metadata: CategoryMetadata = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata') }})
    r"""Metadata about the category."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The display name that identifies the category."""  
    parent: CategoryParent = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent') }})
    r"""The container of this category's parent category, if the current category is a subcategory."""  
    pictures: shared_picture.Picture = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pictures') }})
    r"""The active picture for this category; defaults to vertical color bars."""  
    resource_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource_key') }})
    r"""The resource key of the category."""  
    top_level: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('top_level') }})
    r"""Whether the category isn't a subcategory of another category."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The unique identifier to access the category resource."""  
    icon: Optional[shared_picture.Picture] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('icon'), 'exclude': lambda f: f is None }})
    r"""The active icon for the category."""  
    subcategories: Optional[list[CategorySubcategories]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subcategories'), 'exclude': lambda f: f is None }})
    r"""All the subcategories that belong to this category, if the current category is a top-level parent."""  
    