/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FutureReservation - Successful response
 */
public class FutureReservation {
    /**
     * [Output Only] The creation timestamp for this future reservation in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public FutureReservation withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the future reservation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public FutureReservation withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output Only] A unique identifier for this future reservation. The server defines this identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public FutureReservation withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#futureReservation for future reservations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public FutureReservation withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public FutureReservation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namePrefix")
    public String namePrefix;
    public FutureReservation withNamePrefix(String namePrefix) {
        this.namePrefix = namePrefix;
        return this;
    }
    
    /**
     * Planning state before being submitted for evaluation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("planningStatus")
    public FutureReservationPlanningStatusEnum planningStatus;
    public FutureReservation withPlanningStatus(FutureReservationPlanningStatusEnum planningStatus) {
        this.planningStatus = planningStatus;
        return this;
    }
    
    /**
     * [Output Only] Server-defined fully-qualified URL for this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public FutureReservation withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource with the resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;
    public FutureReservation withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    /**
     * The share setting for reservations and sole tenancy node groups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareSettings")
    public ShareSettings shareSettings;
    public FutureReservation withShareSettings(ShareSettings shareSettings) {
        this.shareSettings = shareSettings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specificSkuProperties")
    public FutureReservationSpecificSKUProperties specificSkuProperties;
    public FutureReservation withSpecificSkuProperties(FutureReservationSpecificSKUProperties specificSkuProperties) {
        this.specificSkuProperties = specificSkuProperties;
        return this;
    }
    
    /**
     * [Output only] Represents status related to the future reservation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public FutureReservationStatus status;
    public FutureReservation withStatus(FutureReservationStatus status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeWindow")
    public FutureReservationTimeWindow timeWindow;
    public FutureReservation withTimeWindow(FutureReservationTimeWindow timeWindow) {
        this.timeWindow = timeWindow;
        return this;
    }
    
    /**
     * [Output Only] URL of the Zone where this future reservation resides.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;
    public FutureReservation withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
}
