"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetPeersListRequest:
    
    closed_api: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'closedApi', 'style': 'form', 'explode': True }})
    r"""Set to true to show peers not open to be connected"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})  
    unreachable: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'unreachable', 'style': 'form', 'explode': True }})
    r"""Set to true to show unreachable peers in the list"""  
    

@dataclasses.dataclass
class GetPeersListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    get_peers_list_400_wildcard_string: Optional[str] = dataclasses.field(default=None)
    r"""Bad Request"""  
    get_peers_list_401_wildcard_string: Optional[str] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    get_peers_list_404_wildcard_string: Optional[str] = dataclasses.field(default=None)
    r"""Not Found"""  
    get_peers_list_409_wildcard_string: Optional[str] = dataclasses.field(default=None)
    r"""Conflict"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    