"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetCapacityReservationUsageResultInstanceUsages:
    r"""Information about the Capacity Reservation usage."""
    
    account_id: Optional[str] = dataclasses.field(default=None)  
    used_instance_count: Optional[int] = dataclasses.field(default=None)  
    
class GetCapacityReservationUsageResultStateEnum(str, Enum):
    r"""<p>The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:</p> <ul> <li> <p> <code>active</code> - The Capacity Reservation is active and the capacity is available for your use.</p> </li> <li> <p> <code>expired</code> - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>cancelled</code> - The Capacity Reservation was cancelled. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>pending</code> - The Capacity Reservation request was successful but the capacity provisioning is still pending.</p> </li> <li> <p> <code>failed</code> - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.</p> </li> </ul>"""
    ACTIVE = 'active'
    EXPIRED = 'expired'
    CANCELLED = 'cancelled'
    PENDING = 'pending'
    FAILED = 'failed'


@dataclasses.dataclass
class GetCapacityReservationUsageResult:
    r"""Success"""
    
    available_instance_count: Optional[int] = dataclasses.field(default=None)  
    capacity_reservation_id: Optional[str] = dataclasses.field(default=None)  
    instance_type: Optional[str] = dataclasses.field(default=None)  
    instance_usages: Optional[list[GetCapacityReservationUsageResultInstanceUsages]] = dataclasses.field(default=None)  
    next_token: Optional[str] = dataclasses.field(default=None)  
    state: Optional[GetCapacityReservationUsageResultStateEnum] = dataclasses.field(default=None)  
    total_instance_count: Optional[int] = dataclasses.field(default=None)  
    