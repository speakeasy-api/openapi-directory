// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CaptureOrderResponseExecutionStatusEnum - The status of the execution. Only defined if the request was successful. Acceptable values are: * "duplicate" * "executed"
type CaptureOrderResponseExecutionStatusEnum string

const (
	CaptureOrderResponseExecutionStatusEnumExecutionStatusUnspecified CaptureOrderResponseExecutionStatusEnum = "EXECUTION_STATUS_UNSPECIFIED"
	CaptureOrderResponseExecutionStatusEnumExecuted                   CaptureOrderResponseExecutionStatusEnum = "EXECUTED"
	CaptureOrderResponseExecutionStatusEnumDuplicate                  CaptureOrderResponseExecutionStatusEnum = "DUPLICATE"
)

func (e *CaptureOrderResponseExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXECUTION_STATUS_UNSPECIFIED":
		fallthrough
	case "EXECUTED":
		fallthrough
	case "DUPLICATE":
		*e = CaptureOrderResponseExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CaptureOrderResponseExecutionStatusEnum: %s", s)
	}
}

// CaptureOrderResponse - Response message for the CaptureOrder method.
type CaptureOrderResponse struct {
	// The status of the execution. Only defined if the request was successful. Acceptable values are: * "duplicate" * "executed"
	ExecutionStatus *CaptureOrderResponseExecutionStatusEnum `json:"executionStatus,omitempty"`
}
