/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContributorInsightsStatusEnum } from "./contributorinsightsstatusenum";
import { FailureException } from "./failureexception";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeContributorInsightsOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ContributorInsightsRuleList" })
  contributorInsightsRuleList?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ContributorInsightsStatus" })
  contributorInsightsStatus?: ContributorInsightsStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureException" })
  @Type(() => FailureException)
  failureException?: FailureException;

  @SpeakeasyMetadata()
  @Expose({ name: "IndexName" })
  indexName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TableName" })
  tableName?: string;
}
