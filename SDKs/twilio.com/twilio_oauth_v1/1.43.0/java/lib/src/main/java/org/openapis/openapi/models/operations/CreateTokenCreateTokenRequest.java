/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreateTokenCreateTokenRequest {
    /**
     * The credential for confidential OAuth App.
     */
    @SpeakeasyMetadata("form:name=ClientSecret")
    public String clientSecret;

    public CreateTokenCreateTokenRequest withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }
    
    /**
     * A 34 character string that uniquely identifies this OAuth App.
     */
    @SpeakeasyMetadata("form:name=ClientSid")
    public String clientSid;

    public CreateTokenCreateTokenRequest withClientSid(String clientSid) {
        this.clientSid = clientSid;
        return this;
    }
    
    /**
     * JWT token related to the authorization code grant type.
     */
    @SpeakeasyMetadata("form:name=Code")
    public String code;

    public CreateTokenCreateTokenRequest withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * A code which is generation cryptographically.
     */
    @SpeakeasyMetadata("form:name=CodeVerifier")
    public String codeVerifier;

    public CreateTokenCreateTokenRequest withCodeVerifier(String codeVerifier) {
        this.codeVerifier = codeVerifier;
        return this;
    }
    
    /**
     * JWT token related to the device code grant type.
     */
    @SpeakeasyMetadata("form:name=DeviceCode")
    public String deviceCode;

    public CreateTokenCreateTokenRequest withDeviceCode(String deviceCode) {
        this.deviceCode = deviceCode;
        return this;
    }
    
    /**
     * The Id of the device associated with the token (refresh token).
     */
    @SpeakeasyMetadata("form:name=DeviceId")
    public String deviceId;

    public CreateTokenCreateTokenRequest withDeviceId(String deviceId) {
        this.deviceId = deviceId;
        return this;
    }
    
    /**
     * Grant type is a credential representing resource owner's authorization which can be used by client to obtain access token.
     */
    @SpeakeasyMetadata("form:name=GrantType")
    public String grantType;

    public CreateTokenCreateTokenRequest withGrantType(String grantType) {
        this.grantType = grantType;
        return this;
    }
    
    /**
     * JWT token related to the refresh token grant type.
     */
    @SpeakeasyMetadata("form:name=RefreshToken")
    public String refreshToken;

    public CreateTokenCreateTokenRequest withRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }
    
    public CreateTokenCreateTokenRequest(@JsonProperty("ClientSid") String clientSid, @JsonProperty("GrantType") String grantType) {
        this.clientSid = clientSid;
        this.grantType = grantType;
  }
}
