// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type DataSubjectRightExportRequestSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum string

const (
	DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnumBadRequest          DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnumConflict            DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum = "Conflict"
	DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnumNotAcceptable       DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnumNotFound            DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum = "NotFound"
	DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnumInternalServerError DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnumUnauthorized        DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnumTooManyRequests     DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum) ToPointer() *DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type DataSubjectRightExportRequestDefaultApplicationJSONError struct {
	Code    DataSubjectRightExportRequestDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                           `json:"message"`
}

// DataSubjectRightExportRequestDefaultApplicationJSON - Error code with reason
type DataSubjectRightExportRequestDefaultApplicationJSON struct {
	Error DataSubjectRightExportRequestDefaultApplicationJSONError `json:"error"`
}

// DataSubjectRightExportRequest202ApplicationJSON - Data subject right export request has been accepted.
type DataSubjectRightExportRequest202ApplicationJSON struct {
	// ISO 8601 format timestamp of when request was created.
	CreatedAt time.Time `json:"createdAt"`
	// Unique request identifier
	Token string `json:"token"`
}

type DataSubjectRightExportRequestResponse struct {
	ContentType string
	// Data subject right export request has been accepted.
	DataSubjectRightExportRequest202ApplicationJSONObject *DataSubjectRightExportRequest202ApplicationJSON
	// Error code with reason
	DataSubjectRightExportRequestDefaultApplicationJSONObject *DataSubjectRightExportRequestDefaultApplicationJSON
	Headers                                                   map[string][]string
	StatusCode                                                int
	RawResponse                                               *http.Response
}
