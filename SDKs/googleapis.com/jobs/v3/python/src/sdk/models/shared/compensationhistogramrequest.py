"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import numericbucketingoption as shared_numericbucketingoption
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CompensationHistogramRequestTypeEnum(str, Enum):
    r"""Required. Type of the request, representing which field the histogramming should be performed over. A single request can only specify one histogram of each `CompensationHistogramRequestType`."""
    COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED = 'COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED'
    BASE = 'BASE'
    ANNUALIZED_BASE = 'ANNUALIZED_BASE'
    ANNUALIZED_TOTAL = 'ANNUALIZED_TOTAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CompensationHistogramRequest:
    r"""Input only. Compensation based histogram request."""
    
    bucketing_option: Optional[shared_numericbucketingoption.NumericBucketingOption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bucketingOption'), 'exclude': lambda f: f is None }})
    r"""Input only. Use this field to specify bucketing option for the histogram search response."""  
    type: Optional[CompensationHistogramRequestTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Required. Type of the request, representing which field the histogramming should be performed over. A single request can only specify one histogram of each `CompensationHistogramRequestType`."""  
    