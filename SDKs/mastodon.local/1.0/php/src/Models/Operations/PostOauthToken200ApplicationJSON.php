<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * PostOauthToken200ApplicationJSON - Store this access_token for later use with auth-required methods. The token should be passed as an HTTP Authorization header when making API calls, with the value Bearer access_token
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class PostOauthToken200ApplicationJSON
{
	#[\JMS\Serializer\Annotation\SerializedName('access_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accessToken = null;
    
    /**
     * UNIX timestamp
     * 
     * @var ?int $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $createdAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('scope')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scope = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('token_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tokenType = null;
    
	public function __construct()
	{
		$this->accessToken = null;
		$this->createdAt = null;
		$this->scope = null;
		$this->tokenType = null;
	}
}
