/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateExperimentRequestBody {
    /**
     * An optional description of the experiment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public UpdateExperimentRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * An array of structures that defines the metrics used for the experiment, and whether a higher or lower value for each metric is the goal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricGoals")
    public org.openapis.openapi.models.shared.MetricGoalConfig[] metricGoals;
    public UpdateExperimentRequestBody withMetricGoals(org.openapis.openapi.models.shared.MetricGoalConfig[] metricGoals) {
        this.metricGoals = metricGoals;
        return this;
    }
    
    /**
     * A structure that contains the configuration of which variation to use as the "control" version. The "control" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onlineAbConfig")
    public UpdateExperimentRequestBodyOnlineAbConfig onlineAbConfig;
    public UpdateExperimentRequestBody withOnlineAbConfig(UpdateExperimentRequestBodyOnlineAbConfig onlineAbConfig) {
        this.onlineAbConfig = onlineAbConfig;
        return this;
    }
    
    /**
     * When Evidently assigns a particular user session to an experiment, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and &lt;code&gt;randomizationSalt&lt;/code&gt;. If you omit &lt;code&gt;randomizationSalt&lt;/code&gt;, Evidently uses the experiment name as the &lt;code&gt;randomizationSalt&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("randomizationSalt")
    public String randomizationSalt;
    public UpdateExperimentRequestBody withRandomizationSalt(String randomizationSalt) {
        this.randomizationSalt = randomizationSalt;
        return this;
    }
    
    /**
     * Removes a segment from being used in an experiment. You can't use this parameter if the experiment is currently running.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("removeSegment")
    public Boolean removeSegment;
    public UpdateExperimentRequestBody withRemoveSegment(Boolean removeSegment) {
        this.removeSegment = removeSegment;
        return this;
    }
    
    /**
     * &lt;p&gt;The portion of the available audience that you want to allocate to this experiment, in thousandths of a percent. The available audience is the total audience minus the audience that you have allocated to overrides or current launches of this feature.&lt;/p&gt; &lt;p&gt;This is represented in thousandths of a percent. For example, specify 20,000 to allocate 20% of the available audience.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("samplingRate")
    public Long samplingRate;
    public UpdateExperimentRequestBody withSamplingRate(Long samplingRate) {
        this.samplingRate = samplingRate;
        return this;
    }
    
    /**
     * Adds an audience &lt;i&gt;segment&lt;/i&gt; to an experiment. When a segment is used in an experiment, only user sessions that match the segment pattern are used in the experiment. You can't use this parameter if the experiment is currently running.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("segment")
    public String segment;
    public UpdateExperimentRequestBody withSegment(String segment) {
        this.segment = segment;
        return this;
    }
    
    /**
     * An array of structures that define the variations being tested in the experiment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treatments")
    public org.openapis.openapi.models.shared.TreatmentConfig[] treatments;
    public UpdateExperimentRequestBody withTreatments(org.openapis.openapi.models.shared.TreatmentConfig[] treatments) {
        this.treatments = treatments;
        return this;
    }
    
}
