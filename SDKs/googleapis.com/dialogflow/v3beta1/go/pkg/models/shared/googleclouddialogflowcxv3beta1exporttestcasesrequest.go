// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum - The data format of the exported test cases. If not specified, `BLOB` is assumed.
type GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum string

const (
	GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnumDataFormatUnspecified GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum = "DATA_FORMAT_UNSPECIFIED"
	GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnumBlob                  GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum = "BLOB"
	GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnumJSON                  GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum = "JSON"
)

func (e GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum) ToPointer() *GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum {
	return &e
}

func (e *GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DATA_FORMAT_UNSPECIFIED":
		fallthrough
	case "BLOB":
		fallthrough
	case "JSON":
		*e = GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum: %v", v)
	}
}

// GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest - The request message for TestCases.ExportTestCases.
type GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest struct {
	// The data format of the exported test cases. If not specified, `BLOB` is assumed.
	DataFormat *GoogleCloudDialogflowCxV3beta1ExportTestCasesRequestDataFormatEnum `json:"dataFormat,omitempty"`
	// The filter expression used to filter exported test cases, see [API Filtering](https://aip.dev/160). The expression is case insensitive and supports the following syntax: name = [OR name = ] ... For example: * "name = t1 OR name = t2" matches the test case with the exact resource name "t1" or "t2".
	Filter *string `json:"filter,omitempty"`
	// The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the test cases to. The format of this URI must be `gs:///`. If unspecified, the serialized test cases is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
	GcsURI *string `json:"gcsUri,omitempty"`
}
