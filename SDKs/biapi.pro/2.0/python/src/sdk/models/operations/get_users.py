"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import user as shared_user
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetUsersRequest:
    
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search', 'style': 'form', 'explode': True }})
    r"""searches a user by mail (if it contains no '@', '@biapi.pro' will be added at the end)"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetUsers200ApplicationJSON:
    r"""users"""
    
    users: list[shared_user.User] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('users') }})  
    total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""total number of results"""  
    

@dataclasses.dataclass
class GetUsersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_users_200_application_json_object: Optional[GetUsers200ApplicationJSON] = dataclasses.field(default=None)
    r"""users"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    