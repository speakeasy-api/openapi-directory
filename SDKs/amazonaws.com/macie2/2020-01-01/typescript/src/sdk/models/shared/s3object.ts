/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { KeyValuePair } from "./keyvaluepair";
import { ServerSideEncryption } from "./serversideencryption";
import { StorageClassEnum } from "./storageclassenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides information about the S3 object that a finding applies to.
 */
export class S3Object extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bucketArn" })
  bucketArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eTag" })
  eTag?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "extension" })
  extension?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModified?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publicAccess" })
  publicAccess?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "serverSideEncryption" })
  @Type(() => ServerSideEncryption)
  serverSideEncryption?: ServerSideEncryption;

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "storageClass" })
  storageClass?: StorageClassEnum;

  @SpeakeasyMetadata({ elemType: KeyValuePair })
  @Expose({ name: "tags" })
  @Type(() => KeyValuePair)
  tags?: KeyValuePair[];

  @SpeakeasyMetadata()
  @Expose({ name: "versionId" })
  versionId?: string;
}
