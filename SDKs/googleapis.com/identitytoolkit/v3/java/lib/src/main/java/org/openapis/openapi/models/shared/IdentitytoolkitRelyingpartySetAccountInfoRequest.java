/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IdentitytoolkitRelyingpartySetAccountInfoRequest - Request to set the account information.
 */
public class IdentitytoolkitRelyingpartySetAccountInfoRequest {
    /**
     * The captcha challenge.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("captchaChallenge")
    public String captchaChallenge;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withCaptchaChallenge(String captchaChallenge) {
        this.captchaChallenge = captchaChallenge;
        return this;
    }
    
    /**
     * Response to the captcha.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("captchaResponse")
    public String captchaResponse;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withCaptchaResponse(String captchaResponse) {
        this.captchaResponse = captchaResponse;
        return this;
    }
    
    /**
     * The timestamp when the account is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdAt")
    public String createdAt;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The custom attributes to be set in the user's id token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customAttributes")
    public String customAttributes;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withCustomAttributes(String customAttributes) {
        this.customAttributes = customAttributes;
        return this;
    }
    
    /**
     * GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delegatedProjectNumber")
    public String delegatedProjectNumber;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withDelegatedProjectNumber(String delegatedProjectNumber) {
        this.delegatedProjectNumber = delegatedProjectNumber;
        return this;
    }
    
    /**
     * The attributes users request to delete.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteAttribute")
    public String[] deleteAttribute;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withDeleteAttribute(String[] deleteAttribute) {
        this.deleteAttribute = deleteAttribute;
        return this;
    }
    
    /**
     * The IDPs the user request to delete.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteProvider")
    public String[] deleteProvider;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withDeleteProvider(String[] deleteProvider) {
        this.deleteProvider = deleteProvider;
        return this;
    }
    
    /**
     * Whether to disable the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disableUser")
    public Boolean disableUser;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withDisableUser(Boolean disableUser) {
        this.disableUser = disableUser;
        return this;
    }
    
    /**
     * The name of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The email of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Mark the email as verified or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailVerified")
    public Boolean emailVerified;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withEmailVerified(Boolean emailVerified) {
        this.emailVerified = emailVerified;
        return this;
    }
    
    /**
     * The GITKit token of the authenticated user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idToken")
    public String idToken;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withIdToken(String idToken) {
        this.idToken = idToken;
        return this;
    }
    
    /**
     * Instance id token of the app.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceId")
    public String instanceId;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withInstanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }
    
    /**
     * Last login timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastLoginAt")
    public String lastLoginAt;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withLastLoginAt(String lastLoginAt) {
        this.lastLoginAt = lastLoginAt;
        return this;
    }
    
    /**
     * The local ID of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localId")
    public String localId;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withLocalId(String localId) {
        this.localId = localId;
        return this;
    }
    
    /**
     * The out-of-band code of the change email request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oobCode")
    public String oobCode;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withOobCode(String oobCode) {
        this.oobCode = oobCode;
        return this;
    }
    
    /**
     * The new password of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Privileged caller can update user with specified phone number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phoneNumber")
    public String phoneNumber;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * The photo url of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photoUrl")
    public String photoUrl;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withPhotoUrl(String photoUrl) {
        this.photoUrl = photoUrl;
        return this;
    }
    
    /**
     * The associated IDPs of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provider")
    public String[] provider;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withProvider(String[] provider) {
        this.provider = provider;
        return this;
    }
    
    /**
     * Whether return sts id token and refresh token instead of gitkit token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnSecureToken")
    public Boolean returnSecureToken;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withReturnSecureToken(Boolean returnSecureToken) {
        this.returnSecureToken = returnSecureToken;
        return this;
    }
    
    /**
     * Mark the user to upgrade to federated login.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upgradeToFederatedLogin")
    public Boolean upgradeToFederatedLogin;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withUpgradeToFederatedLogin(Boolean upgradeToFederatedLogin) {
        this.upgradeToFederatedLogin = upgradeToFederatedLogin;
        return this;
    }
    
    /**
     * Timestamp in seconds for valid login token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validSince")
    public String validSince;

    public IdentitytoolkitRelyingpartySetAccountInfoRequest withValidSince(String validSince) {
        this.validSince = validSince;
        return this;
    }
    
    public IdentitytoolkitRelyingpartySetAccountInfoRequest(){}
}
