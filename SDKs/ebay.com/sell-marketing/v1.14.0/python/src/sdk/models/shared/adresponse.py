"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import error as shared_error
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AdResponse:
    r"""This type defines the fields returned in an ad response."""
    
    ad_group_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adGroupId'), 'exclude': lambda f: f is None }})
    r"""A unique eBay-assigned ID for an ad group in a Promoted Listings Advanced (PLA) campaign that uses the Cost Per Click (CPC) funding model.<span class=\\"tablenote\\"><b>Note:</b> This field will always be returned for  campaigns that use the CPC funding model. It will not be returned for campaigns that use the Cost Per Sale (CPS) funding model.</span>"""  
    ad_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adId'), 'exclude': lambda f: f is None }})
    r"""A unique eBay-assigned ID for an ad. This ID is generated when an ad is created.<span class=\\"tablenote\\"><b>Note:</b>This field is only returned when an ad is successfully created for the corresponding listing.</span>"""  
    errors: Optional[list[shared_error.Error]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""An array of errors associated with the request."""  
    href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('href'), 'exclude': lambda f: f is None }})
    r"""The getAd URI that points to the ad.<span class=\\"tablenote\\"><b>Note:</b>This field is only returned when an ad is successfully created for the corresponding listing.</span>"""  
    listing_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listingId'), 'exclude': lambda f: f is None }})
    r"""A unique eBay-assigned ID for a listing that is generated when the listing is created."""  
    status_code: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusCode'), 'exclude': lambda f: f is None }})
    r"""An HTTP status code indicating if the corresponding ad was successfully created or not. <code>200 Successful</code> should be returned for successfully created ads.<span class=\\"tablenote\\"><b>Note:</b>A status code is returned for each ad that the seller creates, or attempts to create.</span>"""  
    