/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SqlParameter } from "./sqlparameter";
import { Expose, Type } from "class-transformer";

export class ExecuteStatementInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientToken" })
  clientToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ClusterIdentifier" })
  clusterIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Database" })
  database: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DbUser" })
  dbUser?: string;

  @SpeakeasyMetadata({ elemType: SqlParameter })
  @Expose({ name: "Parameters" })
  @Type(() => SqlParameter)
  parameters?: SqlParameter[];

  @SpeakeasyMetadata()
  @Expose({ name: "SecretArn" })
  secretArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Sql" })
  sql: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StatementName" })
  statementName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WithEvent" })
  withEvent?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkgroupName" })
  workgroupName?: string;
}
