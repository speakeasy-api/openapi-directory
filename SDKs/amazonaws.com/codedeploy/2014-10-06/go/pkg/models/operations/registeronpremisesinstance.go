// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterOnPremisesInstanceXAmzTargetEnum
type RegisterOnPremisesInstanceXAmzTargetEnum string

const (
	RegisterOnPremisesInstanceXAmzTargetEnumCodeDeploy20141006RegisterOnPremisesInstance RegisterOnPremisesInstanceXAmzTargetEnum = "CodeDeploy_20141006.RegisterOnPremisesInstance"
)

func (e *RegisterOnPremisesInstanceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeDeploy_20141006.RegisterOnPremisesInstance":
		*e = RegisterOnPremisesInstanceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterOnPremisesInstanceXAmzTargetEnum: %s", s)
	}
}

type RegisterOnPremisesInstanceHeaders struct {
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        RegisterOnPremisesInstanceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RegisterOnPremisesInstanceRequest struct {
	Headers RegisterOnPremisesInstanceHeaders
	Request shared.RegisterOnPremisesInstanceInput `request:"mediaType=application/json"`
}

type RegisterOnPremisesInstanceResponse struct {
	ContentType string
	// IamArnRequiredException
	IamArnRequiredException interface{}
	// IamSessionArnAlreadyRegisteredException
	IamSessionArnAlreadyRegisteredException interface{}
	// IamUserArnAlreadyRegisteredException
	IamUserArnAlreadyRegisteredException interface{}
	// IamUserArnRequiredException
	IamUserArnRequiredException interface{}
	// InstanceNameAlreadyRegisteredException
	InstanceNameAlreadyRegisteredException interface{}
	// InstanceNameRequiredException
	InstanceNameRequiredException interface{}
	// InvalidIamSessionArnException
	InvalidIamSessionArnException interface{}
	// InvalidIamUserArnException
	InvalidIamUserArnException interface{}
	// InvalidInstanceNameException
	InvalidInstanceNameException interface{}
	// MultipleIamArnsProvidedException
	MultipleIamArnsProvidedException interface{}
	StatusCode                       int
	RawResponse                      *http.Response
}
