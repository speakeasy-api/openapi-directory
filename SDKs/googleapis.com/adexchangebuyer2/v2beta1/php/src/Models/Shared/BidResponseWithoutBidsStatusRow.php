<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BidResponseWithoutBidsStatusRow - The number of impressions with the specified dimension values that were considered to have no applicable bids, as described by the specified status.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BidResponseWithoutBidsStatusRow
{
    /**
     * A metric value, with an expected value and a variance; represents a count that may be either exact or estimated (for example, when sampled).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MetricValue $impressionCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('impressionCount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MetricValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MetricValue $impressionCount = null;
    
    /**
     * A response may include multiple rows, breaking down along various dimensions. Encapsulates the values of all dimensions for a given row.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RowDimensions $rowDimensions
     */
	#[\JMS\Serializer\Annotation\SerializedName('rowDimensions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RowDimensions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RowDimensions $rowDimensions = null;
    
    /**
     * The status specifying why the bid responses were considered to have no applicable bids.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BidResponseWithoutBidsStatusRowStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BidResponseWithoutBidsStatusRowStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BidResponseWithoutBidsStatusRowStatusEnum $status = null;
    
	public function __construct()
	{
		$this->impressionCount = null;
		$this->rowDimensions = null;
		$this->status = null;
	}
}
