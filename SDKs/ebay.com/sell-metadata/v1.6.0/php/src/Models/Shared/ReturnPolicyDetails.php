<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ReturnPolicyDetails - This container defines the category policies that relate to domestic and international return policies (the return shipping is made via a domestic or an international shipping service, respectively).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ReturnPolicyDetails
{
    /**
     * If set to <code>true</code>, this flag indicates you can supply a detailed return policy description within your return policy (for example, by populating the <b>returnInstructions</b> field in the Account API's <b>createReturnPolicy</b>). User-supplied return policy details are allowed only in the DE, ES, FR, and IT marketplaces.
     * 
     * @var ?bool $policyDescriptionEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('policyDescriptionEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $policyDescriptionEnabled = null;
    
    /**
     * A list of refund methods allowed for the associated category.
     * 
     * @var ?array<string> $refundMethods
     */
	#[\JMS\Serializer\Annotation\SerializedName('refundMethods')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $refundMethods = null;
    
    /**
     * A list of return methods allowed for the associated category.
     * 
     * @var ?array<string> $returnMethods
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnMethods')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $returnMethods = null;
    
    /**
     * A list of return periods allowed for the associated category.  <br><br>Note that different APIs require you to enter the return period in different ways. For example, the Account API uses the complex <b>TimeDuration</b> type, which takes two values (a <b>unit</b> and a <b>value</b>), whereas the Trading API takes a single value (such as <code>Days_30</code>).
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TimeDuration> $returnPeriods
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnPeriods')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TimeDuration>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $returnPeriods = null;
    
    /**
     * A list of allowed values for who pays for the return shipping cost.  <br><br>Note that for SNAD returns, the seller is always responsible for the return shipping cost.
     * 
     * @var ?array<string> $returnShippingCostPayers
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnShippingCostPayers')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $returnShippingCostPayers = null;
    
    /**
     * If set to <code>true</code>, this flag indicates the seller can configure how they handle domestic returns.
     * 
     * @var ?bool $returnsAcceptanceEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnsAcceptanceEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $returnsAcceptanceEnabled = null;
    
	public function __construct()
	{
		$this->policyDescriptionEnabled = null;
		$this->refundMethods = null;
		$this->returnMethods = null;
		$this->returnPeriods = null;
		$this->returnShippingCostPayers = null;
		$this->returnsAcceptanceEnabled = null;
	}
}
