// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetACallQueueSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type GetACallQueuePathParams struct {
	// Unique Identifier of the Call Queue. This can be retrieved from [List Call Queues API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-call-queues/listcallqueues).
	CallQueueID string `pathParam:"style=simple,explode=false,name=callQueueId"`
}

type GetACallQueueRequest struct {
	PathParams GetACallQueuePathParams
	Security   GetACallQueueSecurity
}

type GetACallQueue200ApplicationXMLMembersCommonAreaPhones struct {
	// Unique Identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).
	ID *string
	// Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).
	Name *string
}

// GetACallQueue200ApplicationXMLMembersUsersLevelEnum - Level of the user. The value can be one of the following:<br>
// `manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>
// `user`: Regular user without the privileges of a manager.
type GetACallQueue200ApplicationXMLMembersUsersLevelEnum string

const (
	GetACallQueue200ApplicationXMLMembersUsersLevelEnumManager GetACallQueue200ApplicationXMLMembersUsersLevelEnum = "manager"
	GetACallQueue200ApplicationXMLMembersUsersLevelEnumUser    GetACallQueue200ApplicationXMLMembersUsersLevelEnum = "user"
)

func (e *GetACallQueue200ApplicationXMLMembersUsersLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "manager":
		fallthrough
	case "user":
		*e = GetACallQueue200ApplicationXMLMembersUsersLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetACallQueue200ApplicationXMLMembersUsersLevelEnum: %s", s)
	}
}

type GetACallQueue200ApplicationXMLMembersUsers struct {
	// User ID: Unique Identifier of the user.
	ID *string
	// Level of the user. The value can be one of the following:<br>
	// `manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>
	// `user`: Regular user without the privileges of a manager.
	Level *GetACallQueue200ApplicationXMLMembersUsersLevelEnum
	// Name of the user.
	Name *string
	// Determines whether the user can receive calls or not.
	ReceiveCall *bool
}

type GetACallQueue200ApplicationXMLMembers struct {
	CommonAreaPhones []GetACallQueue200ApplicationXMLMembersCommonAreaPhones
	Users            []GetACallQueue200ApplicationXMLMembersUsers
}

// GetACallQueue200ApplicationXMLPhoneNumbersSourceEnum - Source
type GetACallQueue200ApplicationXMLPhoneNumbersSourceEnum string

const (
	GetACallQueue200ApplicationXMLPhoneNumbersSourceEnumInternal GetACallQueue200ApplicationXMLPhoneNumbersSourceEnum = "internal"
	GetACallQueue200ApplicationXMLPhoneNumbersSourceEnumExternal GetACallQueue200ApplicationXMLPhoneNumbersSourceEnum = "external"
)

func (e *GetACallQueue200ApplicationXMLPhoneNumbersSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal":
		fallthrough
	case "external":
		*e = GetACallQueue200ApplicationXMLPhoneNumbersSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetACallQueue200ApplicationXMLPhoneNumbersSourceEnum: %s", s)
	}
}

type GetACallQueue200ApplicationXMLPhoneNumbers struct {
	// Unique Identifier of the number.
	ID *string
	// Phone number.
	Number *string
	// Source
	Source *GetACallQueue200ApplicationXMLPhoneNumbersSourceEnum
}

type GetACallQueue200ApplicationXMLSite struct {
	// Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.
	ID *string
	// Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	Name *string
}

// GetACallQueue200ApplicationXMLStatusEnum - Status of the Call Queue.
type GetACallQueue200ApplicationXMLStatusEnum string

const (
	GetACallQueue200ApplicationXMLStatusEnumActive   GetACallQueue200ApplicationXMLStatusEnum = "active"
	GetACallQueue200ApplicationXMLStatusEnumInactive GetACallQueue200ApplicationXMLStatusEnum = "inactive"
)

func (e *GetACallQueue200ApplicationXMLStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = GetACallQueue200ApplicationXMLStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetACallQueue200ApplicationXMLStatusEnum: %s", s)
	}
}

// GetACallQueue200ApplicationXML - **HTTP Status Code:** `200` **OK**<br>
// Call Queue details retrieved successfully.
type GetACallQueue200ApplicationXML struct {
	// Extension number assigned to the Call Queue.
	ExtensionNumber *int64
	// Unique Identifier of the Call Queue.
	ID      *string
	Members *GetACallQueue200ApplicationXMLMembers
	// Name of the Call Queue.
	Name         *string
	PhoneNumbers []GetACallQueue200ApplicationXMLPhoneNumbers
	Site         *GetACallQueue200ApplicationXMLSite
	// Status of the Call Queue.
	Status *GetACallQueue200ApplicationXMLStatusEnum
}

type GetACallQueue200ApplicationJSONMembersCommonAreaPhones struct {
	// Unique Identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).
	ID *string `json:"id,omitempty"`
	// Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones).
	Name *string `json:"name,omitempty"`
}

// GetACallQueue200ApplicationJSONMembersUsersLevelEnum - Level of the user. The value can be one of the following:<br>
// `manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>
// `user`: Regular user without the privileges of a manager.
type GetACallQueue200ApplicationJSONMembersUsersLevelEnum string

const (
	GetACallQueue200ApplicationJSONMembersUsersLevelEnumManager GetACallQueue200ApplicationJSONMembersUsersLevelEnum = "manager"
	GetACallQueue200ApplicationJSONMembersUsersLevelEnumUser    GetACallQueue200ApplicationJSONMembersUsersLevelEnum = "user"
)

func (e *GetACallQueue200ApplicationJSONMembersUsersLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "manager":
		fallthrough
	case "user":
		*e = GetACallQueue200ApplicationJSONMembersUsersLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetACallQueue200ApplicationJSONMembersUsersLevelEnum: %s", s)
	}
}

type GetACallQueue200ApplicationJSONMembersUsers struct {
	// User ID: Unique Identifier of the user.
	ID *string `json:"id,omitempty"`
	// Level of the user. The value can be one of the following:<br>
	// `manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>
	// `user`: Regular user without the privileges of a manager.
	Level *GetACallQueue200ApplicationJSONMembersUsersLevelEnum `json:"level,omitempty"`
	// Name of the user.
	Name *string `json:"name,omitempty"`
	// Determines whether the user can receive calls or not.
	ReceiveCall *bool `json:"receive_call,omitempty"`
}

type GetACallQueue200ApplicationJSONMembers struct {
	CommonAreaPhones []GetACallQueue200ApplicationJSONMembersCommonAreaPhones `json:"common_area_phones,omitempty"`
	Users            []GetACallQueue200ApplicationJSONMembersUsers            `json:"users,omitempty"`
}

// GetACallQueue200ApplicationJSONPhoneNumbersSourceEnum - Source
type GetACallQueue200ApplicationJSONPhoneNumbersSourceEnum string

const (
	GetACallQueue200ApplicationJSONPhoneNumbersSourceEnumInternal GetACallQueue200ApplicationJSONPhoneNumbersSourceEnum = "internal"
	GetACallQueue200ApplicationJSONPhoneNumbersSourceEnumExternal GetACallQueue200ApplicationJSONPhoneNumbersSourceEnum = "external"
)

func (e *GetACallQueue200ApplicationJSONPhoneNumbersSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal":
		fallthrough
	case "external":
		*e = GetACallQueue200ApplicationJSONPhoneNumbersSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetACallQueue200ApplicationJSONPhoneNumbersSourceEnum: %s", s)
	}
}

type GetACallQueue200ApplicationJSONPhoneNumbers struct {
	// Unique Identifier of the number.
	ID *string `json:"id,omitempty"`
	// Phone number.
	Number *string `json:"number,omitempty"`
	// Source
	Source *GetACallQueue200ApplicationJSONPhoneNumbersSourceEnum `json:"source,omitempty"`
}

type GetACallQueue200ApplicationJSONSite struct {
	// Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.
	ID *string `json:"id,omitempty"`
	// Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	Name *string `json:"name,omitempty"`
}

// GetACallQueue200ApplicationJSONStatusEnum - Status of the Call Queue.
type GetACallQueue200ApplicationJSONStatusEnum string

const (
	GetACallQueue200ApplicationJSONStatusEnumActive   GetACallQueue200ApplicationJSONStatusEnum = "active"
	GetACallQueue200ApplicationJSONStatusEnumInactive GetACallQueue200ApplicationJSONStatusEnum = "inactive"
)

func (e *GetACallQueue200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = GetACallQueue200ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetACallQueue200ApplicationJSONStatusEnum: %s", s)
	}
}

// GetACallQueue200ApplicationJSON - **HTTP Status Code:** `200` **OK**<br>
// Call Queue details retrieved successfully.
type GetACallQueue200ApplicationJSON struct {
	// Extension number assigned to the Call Queue.
	ExtensionNumber *int64 `json:"extension_number,omitempty"`
	// Unique Identifier of the Call Queue.
	ID      *string                                 `json:"id,omitempty"`
	Members *GetACallQueue200ApplicationJSONMembers `json:"members,omitempty"`
	// Name of the Call Queue.
	Name         *string                                       `json:"name,omitempty"`
	PhoneNumbers []GetACallQueue200ApplicationJSONPhoneNumbers `json:"phone_numbers,omitempty"`
	Site         *GetACallQueue200ApplicationJSONSite          `json:"site,omitempty"`
	// Status of the Call Queue.
	Status *GetACallQueue200ApplicationJSONStatusEnum `json:"status,omitempty"`
}

type GetACallQueueResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK**<br>
	// Call Queue details retrieved successfully.
	GetACallQueue200ApplicationJSONObject *GetACallQueue200ApplicationJSON
}
