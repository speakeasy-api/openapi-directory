// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReviewTypeEnum - The type of the review.
type ReviewTypeEnum string

const (
	ReviewTypeEnumUnknown   ReviewTypeEnum = "UNKNOWN"
	ReviewTypeEnumEditorial ReviewTypeEnum = "EDITORIAL"
	ReviewTypeEnumUser      ReviewTypeEnum = "USER"
)

func (e *ReviewTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "EDITORIAL":
		fallthrough
	case "USER":
		*e = ReviewTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReviewTypeEnum: %s", s)
	}
}

// Review - A single review in a VR Listing. NEXT ID: 10
type Review struct {
	// The author of the review.
	Author *string `json:"author,omitempty"`
	// The body of the review.
	Body *string `json:"body,omitempty"`
	// Language of the review, such as "en", "de", etc.
	LanguageCode *string `json:"languageCode,omitempty"`
	// The url of the review.
	Link *string `json:"link,omitempty"`
	// Any ratings associated with this review. This is repeated because reviews can include ratings on different aspects of a listing, e.g. location, cleanliness, etc.
	Rating []Rating `json:"rating,omitempty"`
	// Unix timestamp (in seconds) of the review, in UTC+0.
	ReviewTime *string `json:"reviewTime,omitempty"`
	// The title of the review, for example: Great three bedrooms.
	Title *string `json:"title,omitempty"`
	// The type of the review.
	Type *ReviewTypeEnum `json:"type,omitempty"`
	// Unix timestamp (in seconds) of when the stay was, in UTC+0.
	VisitTime *string `json:"visitTime,omitempty"`
}
