// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StreamingImageStatusCodeEnum - The status code.
type StreamingImageStatusCodeEnum string

const (
	StreamingImageStatusCodeEnumStreamingImageCreateInProgress StreamingImageStatusCodeEnum = "STREAMING_IMAGE_CREATE_IN_PROGRESS"
	StreamingImageStatusCodeEnumStreamingImageReady            StreamingImageStatusCodeEnum = "STREAMING_IMAGE_READY"
	StreamingImageStatusCodeEnumStreamingImageDeleteInProgress StreamingImageStatusCodeEnum = "STREAMING_IMAGE_DELETE_IN_PROGRESS"
	StreamingImageStatusCodeEnumStreamingImageDeleted          StreamingImageStatusCodeEnum = "STREAMING_IMAGE_DELETED"
	StreamingImageStatusCodeEnumStreamingImageUpdateInProgress StreamingImageStatusCodeEnum = "STREAMING_IMAGE_UPDATE_IN_PROGRESS"
	StreamingImageStatusCodeEnumInternalError                  StreamingImageStatusCodeEnum = "INTERNAL_ERROR"
	StreamingImageStatusCodeEnumAccessDenied                   StreamingImageStatusCodeEnum = "ACCESS_DENIED"
)

func (e StreamingImageStatusCodeEnum) ToPointer() *StreamingImageStatusCodeEnum {
	return &e
}

func (e *StreamingImageStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STREAMING_IMAGE_CREATE_IN_PROGRESS":
		fallthrough
	case "STREAMING_IMAGE_READY":
		fallthrough
	case "STREAMING_IMAGE_DELETE_IN_PROGRESS":
		fallthrough
	case "STREAMING_IMAGE_DELETED":
		fallthrough
	case "STREAMING_IMAGE_UPDATE_IN_PROGRESS":
		fallthrough
	case "INTERNAL_ERROR":
		fallthrough
	case "ACCESS_DENIED":
		*e = StreamingImageStatusCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StreamingImageStatusCodeEnum: %v", v)
	}
}
