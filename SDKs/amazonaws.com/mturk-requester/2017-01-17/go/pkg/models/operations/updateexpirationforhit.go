// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateExpirationForHITXAmzTargetEnum
type UpdateExpirationForHITXAmzTargetEnum string

const (
	UpdateExpirationForHITXAmzTargetEnumMTurkRequesterServiceV20170117UpdateExpirationForHit UpdateExpirationForHITXAmzTargetEnum = "MTurkRequesterServiceV20170117.UpdateExpirationForHIT"
)

func (e UpdateExpirationForHITXAmzTargetEnum) ToPointer() *UpdateExpirationForHITXAmzTargetEnum {
	return &e
}

func (e *UpdateExpirationForHITXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MTurkRequesterServiceV20170117.UpdateExpirationForHIT":
		*e = UpdateExpirationForHITXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateExpirationForHITXAmzTargetEnum: %v", v)
	}
}

type UpdateExpirationForHITRequest struct {
	UpdateExpirationForHITRequest shared.UpdateExpirationForHITRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    UpdateExpirationForHITXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateExpirationForHITResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// RequestError
	RequestError interface{}
	// ServiceFault
	ServiceFault interface{}
	// Success
	UpdateExpirationForHITResponse map[string]interface{}
}
