/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AuthorizedOrgsDesc - `AuthorizedOrgsDesc` contains data for an organization's authorization policy.
 */
public class AuthorizedOrgsDesc {
    /**
     * The asset type of this authorized orgs desc. Valid values are `ASSET_TYPE_DEVICE`, and `ASSET_TYPE_CREDENTIAL_STRENGTH`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assetType")
    public AuthorizedOrgsDescAssetTypeEnum assetType;
    public AuthorizedOrgsDesc withAssetType(AuthorizedOrgsDescAssetTypeEnum assetType) {
        this.assetType = assetType;
        return this;
    }
    
    /**
     * The direction of the authorization relationship between this organization and the organizations listed in the `orgs` field. The valid values for this field include the following: `AUTHORIZATION_DIRECTION_FROM`: Allows this organization to evaluate traffic in the organizations listed in the `orgs` field. `AUTHORIZATION_DIRECTION_TO`: Allows the organizations listed in the `orgs` field to evaluate the traffic in this organization. For the authorization relationship to take effect, all of the organizations must authorize and specify the appropriate relationship direction. For example, if organization A authorized organization B and C to evaluate its traffic, by specifying `AUTHORIZATION_DIRECTION_TO` as the authorization direction, organizations B and C must specify `AUTHORIZATION_DIRECTION_FROM` as the authorization direction in their `AuthorizedOrgsDesc` resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationDirection")
    public AuthorizedOrgsDescAuthorizationDirectionEnum authorizationDirection;
    public AuthorizedOrgsDesc withAuthorizationDirection(AuthorizedOrgsDescAuthorizationDirectionEnum authorizationDirection) {
        this.authorizationDirection = authorizationDirection;
        return this;
    }
    
    /**
     * A granular control type for authorization levels. Valid value is `AUTHORIZATION_TYPE_TRUST`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationType")
    public AuthorizedOrgsDescAuthorizationTypeEnum authorizationType;
    public AuthorizedOrgsDesc withAuthorizationType(AuthorizedOrgsDescAuthorizationTypeEnum authorizationType) {
        this.authorizationType = authorizationType;
        return this;
    }
    
    /**
     * Resource name for the `AuthorizedOrgsDesc`. Format: `accessPolicies/{access_policy}/authorizedOrgsDescs/{authorized_orgs_desc}`. The `authorized_orgs_desc` component must begin with a letter, followed by alphanumeric characters or `_`. After you create an `AuthorizedOrgsDesc`, you cannot change its `name`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public AuthorizedOrgsDesc withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The list of organization ids in this AuthorizedOrgsDesc. Format: `organizations/` Example: `organizations/123456`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orgs")
    public String[] orgs;
    public AuthorizedOrgsDesc withOrgs(String[] orgs) {
        this.orgs = orgs;
        return this;
    }
    
}
