// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NotificationTypeEnumEnum - Notification type.
type NotificationTypeEnumEnum string

const (
	NotificationTypeEnumEnumNotificationTypeUnknown NotificationTypeEnumEnum = "NOTIFICATION_TYPE_UNKNOWN"
	NotificationTypeEnumEnumDiagnostic              NotificationTypeEnumEnum = "DIAGNOSTIC"
)

func (e NotificationTypeEnumEnum) ToPointer() *NotificationTypeEnumEnum {
	return &e
}

func (e *NotificationTypeEnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOTIFICATION_TYPE_UNKNOWN":
		fallthrough
	case "DIAGNOSTIC":
		*e = NotificationTypeEnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotificationTypeEnumEnum: %v", v)
	}
}
