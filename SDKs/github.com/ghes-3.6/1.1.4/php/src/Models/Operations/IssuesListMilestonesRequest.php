<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class IssuesListMilestonesRequest
{
    /**
     * The direction of the sort. Either `asc` or `desc`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\IssuesListMilestonesDirectionEnum $direction
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=direction')]
    public ?IssuesListMilestonesDirectionEnum $direction = null;
    
    /**
     * The account owner of the repository. The name is not case sensitive.
     * 
     * @var string $owner
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=owner')]
    public string $owner;
    
    /**
     * Page number of the results to fetch.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * The number of results per page (max 100).
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * The name of the repository. The name is not case sensitive.
     * 
     * @var string $repo
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=repo')]
    public string $repo;
    
    /**
     * What to sort results by. Either `due_on` or `completeness`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\IssuesListMilestonesSortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?IssuesListMilestonesSortEnum $sort = null;
    
    /**
     * The state of the milestone. Either `open`, `closed`, or `all`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\IssuesListMilestonesStateEnum $state
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state')]
    public ?IssuesListMilestonesStateEnum $state = null;
    
	public function __construct()
	{
		$this->direction = null;
		$this->owner = "";
		$this->page = null;
		$this->perPage = null;
		$this->repo = "";
		$this->sort = null;
		$this->state = null;
	}
}
