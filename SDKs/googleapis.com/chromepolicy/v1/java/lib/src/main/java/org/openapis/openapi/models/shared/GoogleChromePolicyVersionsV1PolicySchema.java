/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleChromePolicyVersionsV1PolicySchema - Resource representing a policy schema.
 */
public class GoogleChromePolicyVersionsV1PolicySchema {
    /**
     * Output only. Specific access restrictions related to this policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessRestrictions")
    public String[] accessRestrictions;

    public GoogleChromePolicyVersionsV1PolicySchema withAccessRestrictions(String[] accessRestrictions) {
        this.accessRestrictions = accessRestrictions;
        return this;
    }
    
    /**
     * Output only. Additional key names that will be used to identify the target of the policy value. When specifying a `policyTargetKey`, each of the additional keys specified here will have to be included in the `additionalTargetKeys` map.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalTargetKeyNames")
    public GoogleChromePolicyVersionsV1AdditionalTargetKeyName[] additionalTargetKeyNames;

    public GoogleChromePolicyVersionsV1PolicySchema withAdditionalTargetKeyNames(GoogleChromePolicyVersionsV1AdditionalTargetKeyName[] additionalTargetKeyNames) {
        this.additionalTargetKeyNames = additionalTargetKeyNames;
        return this;
    }
    
    /**
     * Title of the category in which a setting belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryTitle")
    public String categoryTitle;

    public GoogleChromePolicyVersionsV1PolicySchema withCategoryTitle(String categoryTitle) {
        this.categoryTitle = categoryTitle;
        return this;
    }
    
    /**
     * Describes a complete .proto file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("definition")
    public Proto2FileDescriptorProto definition;

    public GoogleChromePolicyVersionsV1PolicySchema withDefinition(Proto2FileDescriptorProto definition) {
        this.definition = definition;
        return this;
    }
    
    /**
     * Output only. Detailed description of each field that is part of the schema.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fieldDescriptions")
    public GoogleChromePolicyVersionsV1PolicySchemaFieldDescription[] fieldDescriptions;

    public GoogleChromePolicyVersionsV1PolicySchema withFieldDescriptions(GoogleChromePolicyVersionsV1PolicySchemaFieldDescription[] fieldDescriptions) {
        this.fieldDescriptions = fieldDescriptions;
        return this;
    }
    
    /**
     * Format: name=customers/{customer}/policySchemas/{schema_namespace}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleChromePolicyVersionsV1PolicySchema withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. Special notice messages related to setting certain values in certain fields in the schema.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notices")
    public GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription[] notices;

    public GoogleChromePolicyVersionsV1PolicySchema withNotices(GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription[] notices) {
        this.notices = notices;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyApiLifecycle")
    public ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle policyApiLifecycle;

    public GoogleChromePolicyVersionsV1PolicySchema withPolicyApiLifecycle(ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle policyApiLifecycle) {
        this.policyApiLifecycle = policyApiLifecycle;
        return this;
    }
    
    /**
     * Output only. Description about the policy schema for user consumption.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyDescription")
    public String policyDescription;

    public GoogleChromePolicyVersionsV1PolicySchema withPolicyDescription(String policyDescription) {
        this.policyDescription = policyDescription;
        return this;
    }
    
    /**
     * Output only. The fully qualified name of the policy schema. This value is used to fill the field `policy_schema` in PolicyValue when calling BatchInheritOrgUnitPolicies BatchModifyOrgUnitPolicies BatchModifyGroupPolicies or BatchDeleteGroupPolicies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schemaName")
    public String schemaName;

    public GoogleChromePolicyVersionsV1PolicySchema withSchemaName(String schemaName) {
        this.schemaName = schemaName;
        return this;
    }
    
    /**
     * Output only. URI to related support article for this schema.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportUri")
    public String supportUri;

    public GoogleChromePolicyVersionsV1PolicySchema withSupportUri(String supportUri) {
        this.supportUri = supportUri;
        return this;
    }
    
    /**
     * Output only. Information about applicable target resources for the policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validTargetResources")
    public GoogleChromePolicyVersionsV1PolicySchemaValidTargetResourcesEnum[] validTargetResources;

    public GoogleChromePolicyVersionsV1PolicySchema withValidTargetResources(GoogleChromePolicyVersionsV1PolicySchemaValidTargetResourcesEnum[] validTargetResources) {
        this.validTargetResources = validTargetResources;
        return this;
    }
    
    public GoogleChromePolicyVersionsV1PolicySchema(){}
}
