// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetWorkspaceIDMembersMemberIDActivitiesSecurity struct {
	Bearer shared.SchemeBearer `security:"scheme,type=apiKey,subtype=header"`
}

type GetWorkspaceIDMembersMemberIDActivitiesPathParams struct {
	MemberID    string `pathParam:"style=simple,explode=false,name=member_id"`
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspace_id"`
}

// GetWorkspaceIDMembersMemberIDActivitiesDirectionEnum
type GetWorkspaceIDMembersMemberIDActivitiesDirectionEnum string

const (
	GetWorkspaceIDMembersMemberIDActivitiesDirectionEnumAsc  GetWorkspaceIDMembersMemberIDActivitiesDirectionEnum = "ASC"
	GetWorkspaceIDMembersMemberIDActivitiesDirectionEnumDesc GetWorkspaceIDMembersMemberIDActivitiesDirectionEnum = "DESC"
)

func (e *GetWorkspaceIDMembersMemberIDActivitiesDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetWorkspaceIDMembersMemberIDActivitiesDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceIDMembersMemberIDActivitiesDirectionEnum: %s", s)
	}
}

// GetWorkspaceIDMembersMemberIDActivitiesItemsEnum
type GetWorkspaceIDMembersMemberIDActivitiesItemsEnum string

const (
	GetWorkspaceIDMembersMemberIDActivitiesItemsEnumTen        GetWorkspaceIDMembersMemberIDActivitiesItemsEnum = "10"
	GetWorkspaceIDMembersMemberIDActivitiesItemsEnumFifty      GetWorkspaceIDMembersMemberIDActivitiesItemsEnum = "50"
	GetWorkspaceIDMembersMemberIDActivitiesItemsEnumOneHundred GetWorkspaceIDMembersMemberIDActivitiesItemsEnum = "100"
)

func (e *GetWorkspaceIDMembersMemberIDActivitiesItemsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "10":
		fallthrough
	case "50":
		fallthrough
	case "100":
		*e = GetWorkspaceIDMembersMemberIDActivitiesItemsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceIDMembersMemberIDActivitiesItemsEnum: %s", s)
	}
}

// GetWorkspaceIDMembersMemberIDActivitiesSortEnum
type GetWorkspaceIDMembersMemberIDActivitiesSortEnum string

const (
	GetWorkspaceIDMembersMemberIDActivitiesSortEnumOccurredAt GetWorkspaceIDMembersMemberIDActivitiesSortEnum = "occurred_at"
	GetWorkspaceIDMembersMemberIDActivitiesSortEnumMember     GetWorkspaceIDMembersMemberIDActivitiesSortEnum = "member"
)

func (e *GetWorkspaceIDMembersMemberIDActivitiesSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "occurred_at":
		fallthrough
	case "member":
		*e = GetWorkspaceIDMembersMemberIDActivitiesSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceIDMembersMemberIDActivitiesSortEnum: %s", s)
	}
}

type GetWorkspaceIDMembersMemberIDActivitiesQueryParams struct {
	ActivityType *string                                               `queryParam:"style=form,explode=true,name=activity_type"`
	Direction    *GetWorkspaceIDMembersMemberIDActivitiesDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	Items        *GetWorkspaceIDMembersMemberIDActivitiesItemsEnum     `queryParam:"style=form,explode=true,name=items"`
	Page         *string                                               `queryParam:"style=form,explode=true,name=page"`
	Sort         *GetWorkspaceIDMembersMemberIDActivitiesSortEnum      `queryParam:"style=form,explode=true,name=sort"`
	Type         *string                                               `queryParam:"style=form,explode=true,name=type"`
}

type GetWorkspaceIDMembersMemberIDActivitiesRequest struct {
	PathParams  GetWorkspaceIDMembersMemberIDActivitiesPathParams
	QueryParams GetWorkspaceIDMembersMemberIDActivitiesQueryParams
	Security    GetWorkspaceIDMembersMemberIDActivitiesSecurity
}

type GetWorkspaceIDMembersMemberIDActivitiesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
