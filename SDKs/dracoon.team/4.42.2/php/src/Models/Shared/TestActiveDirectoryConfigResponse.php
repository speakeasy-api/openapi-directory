<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TestActiveDirectoryConfigResponse - Response model for testing connection for Active Directory configuration
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TestActiveDirectoryConfigResponse
{
    /**
     * Search scope of Active Directory; only users below this node can log on.
     * 
     * @var string $ldapUsersDomain
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldapUsersDomain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ldapUsersDomain;
    
    /**
     * Distinguished Name (DN) of Active Directory administrative account
     * 
     * @var string $serverAdminName
     */
	#[\JMS\Serializer\Annotation\SerializedName('serverAdminName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverAdminName;
    
    /**
     * Password of Active Directory administrative account
     * 
     * @var string $serverAdminPassword
     */
	#[\JMS\Serializer\Annotation\SerializedName('serverAdminPassword')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverAdminPassword;
    
    /**
     * IPv4 or IPv6 address or host name
     * 
     * @var string $serverIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('serverIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverIp;
    
    /**
     * Port
     * 
     * @var int $serverPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('serverPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $serverPort;
    
    /**
     * SSL finger print of Active Directory server.
     * 
     * 
     * Mandatory for LDAPS connections.
     * 
     * Format: `Algorithm/Fingerprint`
     * 
     * @var ?string $sslFingerPrint
     */
	#[\JMS\Serializer\Annotation\SerializedName('sslFingerPrint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sslFingerPrint = null;
    
    /**
     * Determines whether LDAPS should be used instead of plain LDAP.
     * 
     * @var bool $useLdaps
     */
	#[\JMS\Serializer\Annotation\SerializedName('useLdaps')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $useLdaps;
    
	public function __construct()
	{
		$this->ldapUsersDomain = "";
		$this->serverAdminName = "";
		$this->serverAdminPassword = "";
		$this->serverIp = "";
		$this->serverPort = 0;
		$this->sslFingerPrint = null;
		$this->useLdaps = false;
	}
}
