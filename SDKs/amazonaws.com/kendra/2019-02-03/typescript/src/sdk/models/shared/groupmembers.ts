/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MemberGroup } from "./membergroup";
import { MemberUser } from "./memberuser";
import { S3Path } from "./s3path";
import { Expose, Type } from "class-transformer";

/**
 * A list of users or sub groups that belong to a group. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
 */
export class GroupMembers extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: MemberGroup })
  @Expose({ name: "MemberGroups" })
  @Type(() => MemberGroup)
  memberGroups?: MemberGroup[];

  @SpeakeasyMetadata({ elemType: MemberUser })
  @Expose({ name: "MemberUsers" })
  @Type(() => MemberUser)
  memberUsers?: MemberUser[];

  @SpeakeasyMetadata()
  @Expose({ name: "S3PathforGroupMembers" })
  @Type(() => S3Path)
  s3PathforGroupMembers?: S3Path;
}
