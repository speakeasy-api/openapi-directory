// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateACardDisputeDefaultApplicationJSON13StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine CreateACardDisputeDefaultApplicationJSON13StatusEnum = "429"
)

func (e *CreateACardDisputeDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = CreateACardDisputeDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON13TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON13TypeEnumRateLimitedError CreateACardDisputeDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = CreateACardDisputeDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON13 struct {
	Detail     string                                               `json:"detail"`
	RetryAfter *int64                                               `json:"retry_after,omitempty"`
	Status     CreateACardDisputeDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                               `json:"title"`
	Type       CreateACardDisputeDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON12StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON12StatusEnumFourHundredAndThree CreateACardDisputeDefaultApplicationJSON12StatusEnum = "403"
)

func (e *CreateACardDisputeDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateACardDisputeDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON12TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON12TypeEnumPrivateFeatureError CreateACardDisputeDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = CreateACardDisputeDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON12 struct {
	Detail string                                               `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON11StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON11StatusEnumFourHundredAndFour CreateACardDisputeDefaultApplicationJSON11StatusEnum = "404"
)

func (e *CreateACardDisputeDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateACardDisputeDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON11TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON11TypeEnumObjectNotFoundError CreateACardDisputeDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = CreateACardDisputeDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON11 struct {
	Detail string                                               `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON10StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON10StatusEnumFourHundred CreateACardDisputeDefaultApplicationJSON10StatusEnum = "400"
)

func (e *CreateACardDisputeDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateACardDisputeDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON10TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON10TypeEnumMalformedRequestError CreateACardDisputeDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = CreateACardDisputeDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON10 struct {
	Detail string                                               `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON9StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON9StatusEnumFourHundred CreateACardDisputeDefaultApplicationJSON9StatusEnum = "400"
)

func (e *CreateACardDisputeDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateACardDisputeDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON9TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON9TypeEnumInvalidParametersError CreateACardDisputeDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = CreateACardDisputeDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                            `json:"errors,omitempty"`
	Status CreateACardDisputeDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON8StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON8StatusEnumFourHundredAndNine CreateACardDisputeDefaultApplicationJSON8StatusEnum = "409"
)

func (e *CreateACardDisputeDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateACardDisputeDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON8TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON8TypeEnumInvalidOperationError CreateACardDisputeDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = CreateACardDisputeDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON8 struct {
	Detail string                                              `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON7StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON7StatusEnumFourHundredAndOne CreateACardDisputeDefaultApplicationJSON7StatusEnum = "401"
)

func (e *CreateACardDisputeDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = CreateACardDisputeDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON7TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON7TypeEnumInvalidAPIKeyError CreateACardDisputeDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = CreateACardDisputeDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON7 struct {
	Detail string                                              `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON6StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON6StatusEnumFiveHundred CreateACardDisputeDefaultApplicationJSON6StatusEnum = "500"
)

func (e *CreateACardDisputeDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = CreateACardDisputeDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON6TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON6TypeEnumInternalServerError CreateACardDisputeDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = CreateACardDisputeDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON6 struct {
	Detail string                                              `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON5StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON5StatusEnumFourHundredAndThree CreateACardDisputeDefaultApplicationJSON5StatusEnum = "403"
)

func (e *CreateACardDisputeDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateACardDisputeDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON5TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON5TypeEnumInsufficientPermissionsError CreateACardDisputeDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = CreateACardDisputeDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON5 struct {
	Detail string                                              `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON4StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo CreateACardDisputeDefaultApplicationJSON4StatusEnum = "422"
)

func (e *CreateACardDisputeDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = CreateACardDisputeDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON4TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError CreateACardDisputeDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = CreateACardDisputeDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON4 struct {
	Detail string                                              `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON3StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON3StatusEnumFourHundredAndNine CreateACardDisputeDefaultApplicationJSON3StatusEnum = "409"
)

func (e *CreateACardDisputeDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateACardDisputeDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON3TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON3TypeEnumIdempotencyConflictError CreateACardDisputeDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = CreateACardDisputeDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON3 struct {
	Detail string                                              `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON2StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON2StatusEnumFourHundredAndThree CreateACardDisputeDefaultApplicationJSON2StatusEnum = "403"
)

func (e *CreateACardDisputeDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateACardDisputeDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON2TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON2TypeEnumEnvironmentMismatchError CreateACardDisputeDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = CreateACardDisputeDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON2 struct {
	Detail string                                              `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type CreateACardDisputeDefaultApplicationJSON1StatusEnum string

const (
	CreateACardDisputeDefaultApplicationJSON1StatusEnumFourHundredAndFour CreateACardDisputeDefaultApplicationJSON1StatusEnum = "404"
)

func (e *CreateACardDisputeDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateACardDisputeDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON1TypeEnum string

const (
	CreateACardDisputeDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError CreateACardDisputeDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *CreateACardDisputeDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = CreateACardDisputeDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACardDisputeDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type CreateACardDisputeDefaultApplicationJSON1 struct {
	Detail string                                              `json:"detail"`
	Status CreateACardDisputeDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   CreateACardDisputeDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type CreateACardDisputeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Card Dispute
	CardDispute *shared.CardDispute
	// Error
	Error interface{}
}
