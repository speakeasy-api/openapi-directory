// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// StartJobRunRequestBodyConfigurationOverrides - A configuration specification to be used to override existing configurations.
type StartJobRunRequestBodyConfigurationOverrides struct {
	ApplicationConfiguration []shared.Configuration          `json:"applicationConfiguration,omitempty"`
	MonitoringConfiguration  *shared.MonitoringConfiguration `json:"monitoringConfiguration,omitempty"`
}

// StartJobRunRequestBodyJobDriver - Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.
type StartJobRunRequestBodyJobDriver struct {
	SparkSQLJobDriver    *shared.SparkSQLJobDriver    `json:"sparkSqlJobDriver,omitempty"`
	SparkSubmitJobDriver *shared.SparkSubmitJobDriver `json:"sparkSubmitJobDriver,omitempty"`
}

// StartJobRunRequestBodyRetryPolicyConfiguration - The configuration of the retry policy that the job runs on.
type StartJobRunRequestBodyRetryPolicyConfiguration struct {
	MaxAttempts *int64 `json:"maxAttempts,omitempty"`
}

type StartJobRunRequestBody struct {
	// The client idempotency token of the job run request.
	ClientToken string `json:"clientToken"`
	// A configuration specification to be used to override existing configurations.
	ConfigurationOverrides *StartJobRunRequestBodyConfigurationOverrides `json:"configurationOverrides,omitempty"`
	// The execution role ARN for the job run.
	ExecutionRoleArn *string `json:"executionRoleArn,omitempty"`
	// Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.
	JobDriver *StartJobRunRequestBodyJobDriver `json:"jobDriver,omitempty"`
	// The job template ID to be used to start the job run.
	JobTemplateID *string `json:"jobTemplateId,omitempty"`
	// The values of job template parameters to start a job run.
	JobTemplateParameters map[string]string `json:"jobTemplateParameters,omitempty"`
	// The name of the job run.
	Name *string `json:"name,omitempty"`
	// The Amazon EMR release version to use for the job run.
	ReleaseLabel *string `json:"releaseLabel,omitempty"`
	// The configuration of the retry policy that the job runs on.
	RetryPolicyConfiguration *StartJobRunRequestBodyRetryPolicyConfiguration `json:"retryPolicyConfiguration,omitempty"`
	// The tags assigned to job runs.
	Tags map[string]string `json:"tags,omitempty"`
}

type StartJobRunRequest struct {
	RequestBody       StartJobRunRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The virtual cluster ID for which the job run request is submitted.
	VirtualClusterID string `pathParam:"style=simple,explode=false,name=virtualClusterId"`
}

type StartJobRunResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartJobRunResponse *shared.StartJobRunResponse
	StatusCode          int
	RawResponse         *http.Response
	// ValidationException
	ValidationException interface{}
}
