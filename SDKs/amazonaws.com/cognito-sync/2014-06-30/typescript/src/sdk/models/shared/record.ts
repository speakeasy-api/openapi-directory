/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The basic data structure of a dataset.
 */
export class RecordT extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DeviceLastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deviceLastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedBy" })
  lastModifiedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "SyncCount" })
  syncCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value?: string;
}
