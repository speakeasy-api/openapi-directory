"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import monthlyschedule as shared_monthlyschedule
from ..shared import weeklyschedule as shared_weeklyschedule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobScheduleFrequency:
    r"""Specifies the recurrence pattern for running a classification job."""
    
    daily_schedule: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dailySchedule'), 'exclude': lambda f: f is None }})  
    monthly_schedule: Optional[shared_monthlyschedule.MonthlySchedule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('monthlySchedule'), 'exclude': lambda f: f is None }})  
    weekly_schedule: Optional[shared_weeklyschedule.WeeklySchedule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weeklySchedule'), 'exclude': lambda f: f is None }})  
    