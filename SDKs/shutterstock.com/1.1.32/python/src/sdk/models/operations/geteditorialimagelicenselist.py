"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import downloadhistorydatalist as shared_downloadhistorydatalist
from datetime import datetime
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetEditorialImageLicenseListSecurity:
    
    customer_access_code: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetEditorialImageLicenseListDownloadAvailabilityEnum(str, Enum):
    r"""Filter licenses by download availability"""
    ALL = 'all'
    DOWNLOADABLE = 'downloadable'
    NON_DOWNLOADABLE = 'non_downloadable'

class GetEditorialImageLicenseListSortEnum(str, Enum):
    r"""Sort order"""
    NEWEST = 'newest'
    OLDEST = 'oldest'


@dataclasses.dataclass
class GetEditorialImageLicenseListRequest:
    
    download_availability: Optional[GetEditorialImageLicenseListDownloadAvailabilityEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'download_availability', 'style': 'form', 'explode': True }})
    r"""Filter licenses by download availability"""  
    end_date: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_date', 'style': 'form', 'explode': True }})
    r"""Show licenses created before the specified date"""  
    image_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'image_id', 'style': 'form', 'explode': True }})
    r"""Show licenses for the specified editorial image ID"""  
    license: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'license', 'style': 'form', 'explode': True }})
    r"""Show editorial images that are available with the specified license name"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number"""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""Number of results per page"""  
    sort: Optional[GetEditorialImageLicenseListSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Sort order"""  
    start_date: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'start_date', 'style': 'form', 'explode': True }})
    r"""Show licenses created on or after the specified date"""  
    team_history: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'team_history', 'style': 'form', 'explode': True }})
    r"""Set to true to see license history for all members of your team."""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'username', 'style': 'form', 'explode': True }})
    r"""Filter licenses by username of licensee"""  
    

@dataclasses.dataclass
class GetEditorialImageLicenseListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    download_history_data_list: Optional[shared_downloadhistorydatalist.DownloadHistoryDataList] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    