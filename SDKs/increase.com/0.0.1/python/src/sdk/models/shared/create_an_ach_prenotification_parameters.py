"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class CreateAnAchPrenotificationParametersCreditDebitIndicatorEnum(str, Enum):
    r"""Whether the Prenotification is for a future debit or credit."""
    CREDIT = 'credit'
    DEBIT = 'debit'

class CreateAnAchPrenotificationParametersStandardEntryClassCodeEnum(str, Enum):
    r"""The Standard Entry Class (SEC) code to use for the ACH Prenotification."""
    CORPORATE_CREDIT_OR_DEBIT = 'corporate_credit_or_debit'
    PREARRANGED_PAYMENTS_AND_DEPOSIT = 'prearranged_payments_and_deposit'
    INTERNET_INITIATED = 'internet_initiated'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAnAchPrenotificationParameters:
    
    account_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_number') }})
    r"""The account number for the destination account."""  
    routing_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('routing_number') }})
    r"""The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."""  
    addendum: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addendum'), 'exclude': lambda f: f is None }})
    r"""Additional information that will be sent to the recipient."""  
    company_descriptive_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('company_descriptive_date'), 'exclude': lambda f: f is None }})
    r"""The description of the date of the transfer."""  
    company_discretionary_data: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('company_discretionary_data'), 'exclude': lambda f: f is None }})
    r"""The data you choose to associate with the transfer."""  
    company_entry_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('company_entry_description'), 'exclude': lambda f: f is None }})
    r"""The description of the transfer you wish to be shown to the recipient."""  
    company_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('company_name'), 'exclude': lambda f: f is None }})
    r"""The name by which the recipient knows you."""  
    credit_debit_indicator: Optional[CreateAnAchPrenotificationParametersCreditDebitIndicatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('credit_debit_indicator'), 'exclude': lambda f: f is None }})
    r"""Whether the Prenotification is for a future debit or credit."""  
    effective_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effective_date'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The transfer effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format."""  
    individual_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('individual_id'), 'exclude': lambda f: f is None }})
    r"""Your identifer for the transfer recipient."""  
    individual_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('individual_name'), 'exclude': lambda f: f is None }})
    r"""The name of the transfer recipient. This value is information and not verified by the recipient's bank."""  
    standard_entry_class_code: Optional[CreateAnAchPrenotificationParametersStandardEntryClassCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('standard_entry_class_code'), 'exclude': lambda f: f is None }})
    r"""The Standard Entry Class (SEC) code to use for the ACH Prenotification."""  
    