/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ImageScanFinding - Contains details about a vulnerability scan finding.
 */
public class ImageScanFinding {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("awsAccountId")
    public String awsAccountId;

    public ImageScanFinding withAwsAccountId(String awsAccountId) {
        this.awsAccountId = awsAccountId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ImageScanFinding withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("firstObservedAt")
    public OffsetDateTime firstObservedAt;

    public ImageScanFinding withFirstObservedAt(OffsetDateTime firstObservedAt) {
        this.firstObservedAt = firstObservedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fixAvailable")
    public String fixAvailable;

    public ImageScanFinding withFixAvailable(String fixAvailable) {
        this.fixAvailable = fixAvailable;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageBuildVersionArn")
    public String imageBuildVersionArn;

    public ImageScanFinding withImageBuildVersionArn(String imageBuildVersionArn) {
        this.imageBuildVersionArn = imageBuildVersionArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imagePipelineArn")
    public String imagePipelineArn;

    public ImageScanFinding withImagePipelineArn(String imagePipelineArn) {
        this.imagePipelineArn = imagePipelineArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inspectorScore")
    public Double inspectorScore;

    public ImageScanFinding withInspectorScore(Double inspectorScore) {
        this.inspectorScore = inspectorScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inspectorScoreDetails")
    public InspectorScoreDetails inspectorScoreDetails;

    public ImageScanFinding withInspectorScoreDetails(InspectorScoreDetails inspectorScoreDetails) {
        this.inspectorScoreDetails = inspectorScoreDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageVulnerabilityDetails")
    public PackageVulnerabilityDetails packageVulnerabilityDetails;

    public ImageScanFinding withPackageVulnerabilityDetails(PackageVulnerabilityDetails packageVulnerabilityDetails) {
        this.packageVulnerabilityDetails = packageVulnerabilityDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remediation")
    public Remediation remediation;

    public ImageScanFinding withRemediation(Remediation remediation) {
        this.remediation = remediation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severity")
    public String severity;

    public ImageScanFinding withSeverity(String severity) {
        this.severity = severity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public ImageScanFinding withTitle(String title) {
        this.title = title;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public ImageScanFinding withType(String type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;

    public ImageScanFinding withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public ImageScanFinding(){}
}
