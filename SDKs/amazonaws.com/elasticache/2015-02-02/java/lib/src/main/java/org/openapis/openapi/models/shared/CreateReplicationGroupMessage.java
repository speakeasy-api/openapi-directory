/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateReplicationGroupMessage - Represents the input of a &lt;code&gt;CreateReplicationGroup&lt;/code&gt; operation.
 */
public class CreateReplicationGroupMessage {
    
    public Boolean atRestEncryptionEnabled;

    public CreateReplicationGroupMessage withAtRestEncryptionEnabled(Boolean atRestEncryptionEnabled) {
        this.atRestEncryptionEnabled = atRestEncryptionEnabled;
        return this;
    }
    
    
    public String authToken;

    public CreateReplicationGroupMessage withAuthToken(String authToken) {
        this.authToken = authToken;
        return this;
    }
    
    
    public Boolean autoMinorVersionUpgrade;

    public CreateReplicationGroupMessage withAutoMinorVersionUpgrade(Boolean autoMinorVersionUpgrade) {
        this.autoMinorVersionUpgrade = autoMinorVersionUpgrade;
        return this;
    }
    
    
    public Boolean automaticFailoverEnabled;

    public CreateReplicationGroupMessage withAutomaticFailoverEnabled(Boolean automaticFailoverEnabled) {
        this.automaticFailoverEnabled = automaticFailoverEnabled;
        return this;
    }
    
    
    public String cacheNodeType;

    public CreateReplicationGroupMessage withCacheNodeType(String cacheNodeType) {
        this.cacheNodeType = cacheNodeType;
        return this;
    }
    
    
    public String cacheParameterGroupName;

    public CreateReplicationGroupMessage withCacheParameterGroupName(String cacheParameterGroupName) {
        this.cacheParameterGroupName = cacheParameterGroupName;
        return this;
    }
    
    
    public String[] cacheSecurityGroupNames;

    public CreateReplicationGroupMessage withCacheSecurityGroupNames(String[] cacheSecurityGroupNames) {
        this.cacheSecurityGroupNames = cacheSecurityGroupNames;
        return this;
    }
    
    
    public String cacheSubnetGroupName;

    public CreateReplicationGroupMessage withCacheSubnetGroupName(String cacheSubnetGroupName) {
        this.cacheSubnetGroupName = cacheSubnetGroupName;
        return this;
    }
    
    
    public Boolean dataTieringEnabled;

    public CreateReplicationGroupMessage withDataTieringEnabled(Boolean dataTieringEnabled) {
        this.dataTieringEnabled = dataTieringEnabled;
        return this;
    }
    
    
    public String engine;

    public CreateReplicationGroupMessage withEngine(String engine) {
        this.engine = engine;
        return this;
    }
    
    
    public String engineVersion;

    public CreateReplicationGroupMessage withEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }
    
    
    public String globalReplicationGroupId;

    public CreateReplicationGroupMessage withGlobalReplicationGroupId(String globalReplicationGroupId) {
        this.globalReplicationGroupId = globalReplicationGroupId;
        return this;
    }
    
    
    public IpDiscoveryEnum ipDiscovery;

    public CreateReplicationGroupMessage withIpDiscovery(IpDiscoveryEnum ipDiscovery) {
        this.ipDiscovery = ipDiscovery;
        return this;
    }
    
    
    public String kmsKeyId;

    public CreateReplicationGroupMessage withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }
    
    
    public LogDeliveryConfigurationRequestList[] logDeliveryConfigurations;

    public CreateReplicationGroupMessage withLogDeliveryConfigurations(LogDeliveryConfigurationRequestList[] logDeliveryConfigurations) {
        this.logDeliveryConfigurations = logDeliveryConfigurations;
        return this;
    }
    
    
    public Boolean multiAZEnabled;

    public CreateReplicationGroupMessage withMultiAZEnabled(Boolean multiAZEnabled) {
        this.multiAZEnabled = multiAZEnabled;
        return this;
    }
    
    
    public NetworkTypeEnum networkType;

    public CreateReplicationGroupMessage withNetworkType(NetworkTypeEnum networkType) {
        this.networkType = networkType;
        return this;
    }
    
    
    public NodeGroupConfigurationList[] nodeGroupConfiguration;

    public CreateReplicationGroupMessage withNodeGroupConfiguration(NodeGroupConfigurationList[] nodeGroupConfiguration) {
        this.nodeGroupConfiguration = nodeGroupConfiguration;
        return this;
    }
    
    
    public String notificationTopicArn;

    public CreateReplicationGroupMessage withNotificationTopicArn(String notificationTopicArn) {
        this.notificationTopicArn = notificationTopicArn;
        return this;
    }
    
    
    public Long numCacheClusters;

    public CreateReplicationGroupMessage withNumCacheClusters(Long numCacheClusters) {
        this.numCacheClusters = numCacheClusters;
        return this;
    }
    
    
    public Long numNodeGroups;

    public CreateReplicationGroupMessage withNumNodeGroups(Long numNodeGroups) {
        this.numNodeGroups = numNodeGroups;
        return this;
    }
    
    
    public Long port;

    public CreateReplicationGroupMessage withPort(Long port) {
        this.port = port;
        return this;
    }
    
    
    public String[] preferredCacheClusterAZs;

    public CreateReplicationGroupMessage withPreferredCacheClusterAZs(String[] preferredCacheClusterAZs) {
        this.preferredCacheClusterAZs = preferredCacheClusterAZs;
        return this;
    }
    
    
    public String preferredMaintenanceWindow;

    public CreateReplicationGroupMessage withPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        return this;
    }
    
    
    public String primaryClusterId;

    public CreateReplicationGroupMessage withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    
    public Long replicasPerNodeGroup;

    public CreateReplicationGroupMessage withReplicasPerNodeGroup(Long replicasPerNodeGroup) {
        this.replicasPerNodeGroup = replicasPerNodeGroup;
        return this;
    }
    
    
    public String replicationGroupDescription;

    public CreateReplicationGroupMessage withReplicationGroupDescription(String replicationGroupDescription) {
        this.replicationGroupDescription = replicationGroupDescription;
        return this;
    }
    
    
    public String replicationGroupId;

    public CreateReplicationGroupMessage withReplicationGroupId(String replicationGroupId) {
        this.replicationGroupId = replicationGroupId;
        return this;
    }
    
    
    public String[] securityGroupIds;

    public CreateReplicationGroupMessage withSecurityGroupIds(String[] securityGroupIds) {
        this.securityGroupIds = securityGroupIds;
        return this;
    }
    
    
    public String[] snapshotArns;

    public CreateReplicationGroupMessage withSnapshotArns(String[] snapshotArns) {
        this.snapshotArns = snapshotArns;
        return this;
    }
    
    
    public String snapshotName;

    public CreateReplicationGroupMessage withSnapshotName(String snapshotName) {
        this.snapshotName = snapshotName;
        return this;
    }
    
    
    public Long snapshotRetentionLimit;

    public CreateReplicationGroupMessage withSnapshotRetentionLimit(Long snapshotRetentionLimit) {
        this.snapshotRetentionLimit = snapshotRetentionLimit;
        return this;
    }
    
    
    public String snapshotWindow;

    public CreateReplicationGroupMessage withSnapshotWindow(String snapshotWindow) {
        this.snapshotWindow = snapshotWindow;
        return this;
    }
    
    
    public TagList[] tags;

    public CreateReplicationGroupMessage withTags(TagList[] tags) {
        this.tags = tags;
        return this;
    }
    
    
    public Boolean transitEncryptionEnabled;

    public CreateReplicationGroupMessage withTransitEncryptionEnabled(Boolean transitEncryptionEnabled) {
        this.transitEncryptionEnabled = transitEncryptionEnabled;
        return this;
    }
    
    
    public TransitEncryptionModeEnum transitEncryptionMode;

    public CreateReplicationGroupMessage withTransitEncryptionMode(TransitEncryptionModeEnum transitEncryptionMode) {
        this.transitEncryptionMode = transitEncryptionMode;
        return this;
    }
    
    
    public String[] userGroupIds;

    public CreateReplicationGroupMessage withUserGroupIds(String[] userGroupIds) {
        this.userGroupIds = userGroupIds;
        return this;
    }
    
    public CreateReplicationGroupMessage(@JsonProperty("ReplicationGroupDescription") String replicationGroupDescription, @JsonProperty("ReplicationGroupId") String replicationGroupId) {
        this.replicationGroupDescription = replicationGroupDescription;
        this.replicationGroupId = replicationGroupId;
  }
}
