// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCountriesOrderEnum - The direction to sort the result countries by.
type GetCountriesOrderEnum string

const (
	GetCountriesOrderEnumAscending  GetCountriesOrderEnum = "ascending"
	GetCountriesOrderEnumDescending GetCountriesOrderEnum = "descending"
)

func (e *GetCountriesOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ascending":
		fallthrough
	case "descending":
		*e = GetCountriesOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCountriesOrderEnum: %s", s)
	}
}

// GetCountriesSortEnum - The term to sort the result countries by.
type GetCountriesSortEnum string

const (
	GetCountriesSortEnumKey   GetCountriesSortEnum = "key"
	GetCountriesSortEnumLabel GetCountriesSortEnum = "label"
)

func (e *GetCountriesSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "key":
		fallthrough
	case "label":
		*e = GetCountriesSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCountriesSortEnum: %s", s)
	}
}

type GetCountriesRequest struct {
	// MarketId in which the request is being made, and for which responses should be localized
	MarketID string `queryParam:"style=form,explode=true,name=marketId"`
	// The direction to sort the result countries by.
	Order *GetCountriesOrderEnum `queryParam:"style=form,explode=true,name=order"`
	// Restrict countries to this region name; required if regionTypeId is supplied
	RegionName *string `queryParam:"style=form,explode=true,name=regionName"`
	// Restrict countries to this region type; required if regionName is supplied
	RegionTypeID *int64 `queryParam:"style=form,explode=true,name=regionTypeId"`
	// The term to sort the result countries by.
	Sort *GetCountriesSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetCountriesResponse struct {
	// Request was successful
	ArrayOfCountrySummary []shared.CountrySummary
	ContentType           string
	// marketId is required<br>regionTypeId is not a valid integer<br>regionName is required when regionTypeId is provided<br>regionTypeId is required when regionName is provided
	Error *shared.Error
	// Too many requests received within interval
	ErrorLimit  *shared.ErrorLimit
	StatusCode  int
	RawResponse *http.Response
}
