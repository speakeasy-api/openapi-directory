/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetCriticsResourceTypeJsonRequest extends SpeakeasyBase {
  /**
   * all | full-time | part-time | [reviewer-name]
   *
   * @remarks
   *
   * Specify all to get all Times reviewers, or specify full-time or part-time to get that subset. Specify a reviewer's name to get details about a particular reviewer.
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=resource-type",
  })
  resourceType: string;
}

/**
 * An array of Movie Critics
 */
export class GetCriticsResourceTypeJson200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "copyright" })
  copyright?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "num_results" })
  numResults?: number;

  @SpeakeasyMetadata({ elemType: shared.Critic })
  @Expose({ name: "results" })
  @Type(() => shared.Critic)
  results?: shared.Critic[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class GetCriticsResourceTypeJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * An array of Movie Critics
   */
  @SpeakeasyMetadata()
  getCriticsResourceTypeJSON200ApplicationJSONObject?: GetCriticsResourceTypeJson200ApplicationJSON;
}
