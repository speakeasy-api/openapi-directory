/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InterconnectDiagnostics - Diagnostics information about interconnect, contains detailed and current technical information about Google's side of the connection.
 */
public class InterconnectDiagnostics {
    /**
     * A list of InterconnectDiagnostics.ARPEntry objects, describing individual neighbors currently seen by the Google router in the ARP cache for the Interconnect. This will be empty when the Interconnect is not bundled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arpCaches")
    public InterconnectDiagnosticsARPEntry[] arpCaches;
    public InterconnectDiagnostics withArpCaches(InterconnectDiagnosticsARPEntry[] arpCaches) {
        this.arpCaches = arpCaches;
        return this;
    }
    
    /**
     * The aggregation type of the bundle interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bundleAggregationType")
    public InterconnectDiagnosticsBundleAggregationTypeEnum bundleAggregationType;
    public InterconnectDiagnostics withBundleAggregationType(InterconnectDiagnosticsBundleAggregationTypeEnum bundleAggregationType) {
        this.bundleAggregationType = bundleAggregationType;
        return this;
    }
    
    /**
     * The operational status of the bundle interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bundleOperationalStatus")
    public InterconnectDiagnosticsBundleOperationalStatusEnum bundleOperationalStatus;
    public InterconnectDiagnostics withBundleOperationalStatus(InterconnectDiagnosticsBundleOperationalStatusEnum bundleOperationalStatus) {
        this.bundleOperationalStatus = bundleOperationalStatus;
        return this;
    }
    
    /**
     * A list of InterconnectDiagnostics.LinkStatus objects, describing the status for each link on the Interconnect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public InterconnectDiagnosticsLinkStatus[] links;
    public InterconnectDiagnostics withLinks(InterconnectDiagnosticsLinkStatus[] links) {
        this.links = links;
        return this;
    }
    
    /**
     * The MAC address of the Interconnect's bundle interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("macAddress")
    public String macAddress;
    public InterconnectDiagnostics withMacAddress(String macAddress) {
        this.macAddress = macAddress;
        return this;
    }
    
}
