/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class AddVideoTagsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class AddVideoTagsRequestBody extends SpeakeasyBase {
  /**
   * The name of the tag to apply. See our documentation on [batch requests](https://developer.vimeo.com/api/common-formats#batch-requests) for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The page number of the results to show.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  /**
   * The number of items to show on each page of results, up to a maximum of 100.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "per_page" })
  perPage?: number;
}

export class AddVideoTagsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/vnd.vimeo.tag+json",
  })
  requestBody: AddVideoTagsRequestBody;

  /**
   * The ID of the video.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=video_id",
  })
  videoId: number;
}

export class AddVideoTagsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * * The request body wasn't supplied.
   *
   * @remarks
   * * A parameter is invalid.
   * * The request body isn't a JSON-encoded list of tags.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;

  /**
   * The tags that were added.
   */
  @SpeakeasyMetadata({ elemType: shared.Tag })
  tags?: shared.Tag[];
}
