"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AddARoomSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class AddARoomApplicationJSONTypeEnum(str, Enum):
    r"""Type of the Zoom Room."""
    ZOOM_ROOM = 'ZoomRoom'
    SCHEDULING_DISPLAY_ONLY = 'SchedulingDisplayOnly'
    DIGITAL_SIGNAGE_ONLY = 'DigitalSignageOnly'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddARoomApplicationJSON:
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the Zoom Room."""  
    type: AddARoomApplicationJSONTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of the Zoom Room."""  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location_id'), 'exclude': lambda f: f is None }})
    r"""**Optional**<br>Location ID of the lowest level location in the [location hierarchy](https://support.zoom.us/hc/en-us/articles/115000342983-Zoom-Rooms-Location-Hierarchy) where the Zoom Room is to be added. For instance if the structure of the location hierarchy is set up as “country, states, city, campus, building, floor”, a room can only be added under the floor level location.
    
    This ID can be retrieved from the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API.
    """  
    
class AddARoom201ApplicationXMLTypeEnum(str, Enum):
    r"""Type of the Zoom Room."""
    ZOOM_ROOM = 'ZoomRoom'
    SCHEDULING_DISPLAY_ONLY = 'SchedulingDisplayOnly'
    DIGITAL_SIGNAGE_ONLY = 'DigitalSignageOnly'


@dataclasses.dataclass
class AddARoom201ApplicationXML:
    r"""**HTTP Status Code:** `201` **Created**<br>
    Zoom Room added successfully.
    """
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the Zoom Room."""  
    location_id: Optional[str] = dataclasses.field(default=None)
    r"""Location ID of the location where the Zoom Room was added."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the Zoom Room."""  
    room_id: Optional[str] = dataclasses.field(default=None)
    r"""Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**."""  
    type: Optional[AddARoom201ApplicationXMLTypeEnum] = dataclasses.field(default=None)
    r"""Type of the Zoom Room."""  
    
class AddARoom201ApplicationJSONTypeEnum(str, Enum):
    r"""Type of the Zoom Room."""
    ZOOM_ROOM = 'ZoomRoom'
    SCHEDULING_DISPLAY_ONLY = 'SchedulingDisplayOnly'
    DIGITAL_SIGNAGE_ONLY = 'DigitalSignageOnly'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddARoom201ApplicationJSON:
    r"""**HTTP Status Code:** `201` **Created**<br>
    Zoom Room added successfully.
    """
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the Zoom Room."""  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location_id'), 'exclude': lambda f: f is None }})
    r"""Location ID of the location where the Zoom Room was added."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the Zoom Room."""  
    room_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('room_id'), 'exclude': lambda f: f is None }})
    r"""Globally unique identifier of the Zoom Room. Use this ID for the **Dashboard Zoom Room APIs**."""  
    type: Optional[AddARoom201ApplicationJSONTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the Zoom Room."""  
    

@dataclasses.dataclass
class AddARoomResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    add_a_room_201_application_json_object: Optional[AddARoom201ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `201` **Created**<br>
    Zoom Room added successfully.
    """  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    