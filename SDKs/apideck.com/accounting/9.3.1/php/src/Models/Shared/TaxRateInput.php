<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class TaxRateInput
{
    /**
     * Tax code assigned to identify this tax rate.
     * 
     * @var ?string $code
     */
	#[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $code = null;
    
    /**
     * $components
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TaxRateComponents> $components
     */
	#[\JMS\Serializer\Annotation\SerializedName('components')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TaxRateComponents>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $components = null;
    
    /**
     * Description of tax rate
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Effective tax rate
     * 
     * @var ?float $effectiveTaxRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('effective_tax_rate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $effectiveTaxRate = null;
    
    /**
     * ID assigned to identify this tax rate.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Name assigned to identify this tax rate.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.
     * 
     * @var ?string $originalTaxRateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('original_tax_rate_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originalTaxRateId = null;
    
    /**
     * Report Tax type to aggregate tax collected or paid for reporting purposes
     * 
     * @var ?string $reportTaxType
     */
	#[\JMS\Serializer\Annotation\SerializedName('report_tax_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportTaxType = null;
    
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     * 
     * @var ?string $rowVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('row_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rowVersion = null;
    
    /**
     * Tax rate status
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TaxRateTaxRateStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TaxRateTaxRateStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TaxRateTaxRateStatusEnum $status = null;
    
    /**
     * Unique identifier for the account for tax collected.
     * 
     * @var ?string $taxPayableAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax_payable_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxPayableAccountId = null;
    
    /**
     * Unique identifier for the account for tax remitted.
     * 
     * @var ?string $taxRemittedAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax_remitted_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxRemittedAccountId = null;
    
    /**
     * Not compounded sum of the components of a tax rate
     * 
     * @var ?float $totalTaxRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_tax_rate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $totalTaxRate = null;
    
    /**
     * Tax type used to indicate the source of tax collected or paid
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->code = null;
		$this->components = null;
		$this->description = null;
		$this->effectiveTaxRate = null;
		$this->id = null;
		$this->name = null;
		$this->originalTaxRateId = null;
		$this->reportTaxType = null;
		$this->rowVersion = null;
		$this->status = null;
		$this->taxPayableAccountId = null;
		$this->taxRemittedAccountId = null;
		$this->totalTaxRate = null;
		$this->type = null;
	}
}
