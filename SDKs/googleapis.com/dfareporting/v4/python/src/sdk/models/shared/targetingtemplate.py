"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dayparttargeting as shared_dayparttargeting
from ..shared import dimensionvalue as shared_dimensionvalue
from ..shared import geotargeting as shared_geotargeting
from ..shared import keyvaluetargetingexpression as shared_keyvaluetargetingexpression
from ..shared import languagetargeting as shared_languagetargeting
from ..shared import listtargetingexpression as shared_listtargetingexpression
from ..shared import technologytargeting as shared_technologytargeting
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TargetingTemplate:
    r"""Contains properties of a targeting template. A targeting template encapsulates targeting information which can be reused across multiple ads."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""Account ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert."""  
    advertiser_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserId'), 'exclude': lambda f: f is None }})
    r"""Advertiser ID of this targeting template. This is a required field on insert and is read-only after insert."""  
    advertiser_id_dimension_value: Optional[shared_dimensionvalue.DimensionValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserIdDimensionValue'), 'exclude': lambda f: f is None }})
    r"""Represents a DimensionValue resource."""  
    day_part_targeting: Optional[shared_dayparttargeting.DayPartTargeting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayPartTargeting'), 'exclude': lambda f: f is None }})
    r"""Day Part Targeting."""  
    geo_targeting: Optional[shared_geotargeting.GeoTargeting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('geoTargeting'), 'exclude': lambda f: f is None }})
    r"""Geographical Targeting."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID of this targeting template. This is a read-only, auto-generated field."""  
    key_value_targeting_expression: Optional[shared_keyvaluetargetingexpression.KeyValueTargetingExpression] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keyValueTargetingExpression'), 'exclude': lambda f: f is None }})
    r"""Key Value Targeting Expression."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"dfareporting#targetingTemplate\\"."""  
    language_targeting: Optional[shared_languagetargeting.LanguageTargeting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageTargeting'), 'exclude': lambda f: f is None }})
    r"""Language Targeting."""  
    list_targeting_expression: Optional[shared_listtargetingexpression.ListTargetingExpression] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listTargetingExpression'), 'exclude': lambda f: f is None }})
    r"""Remarketing List Targeting Expression."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of this targeting template. This field is required. It must be less than 256 characters long and unique within an advertiser."""  
    subaccount_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subaccountId'), 'exclude': lambda f: f is None }})
    r"""Subaccount ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert."""  
    technology_targeting: Optional[shared_technologytargeting.TechnologyTargeting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('technologyTargeting'), 'exclude': lambda f: f is None }})
    r"""Technology Targeting."""  
    