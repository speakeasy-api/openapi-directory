// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkflowStepTypeEnum string

const (
	WorkflowStepTypeEnumCopy    WorkflowStepTypeEnum = "COPY"
	WorkflowStepTypeEnumCustom  WorkflowStepTypeEnum = "CUSTOM"
	WorkflowStepTypeEnumTag     WorkflowStepTypeEnum = "TAG"
	WorkflowStepTypeEnumDelete  WorkflowStepTypeEnum = "DELETE"
	WorkflowStepTypeEnumDecrypt WorkflowStepTypeEnum = "DECRYPT"
)

func (e WorkflowStepTypeEnum) ToPointer() *WorkflowStepTypeEnum {
	return &e
}

func (e *WorkflowStepTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COPY":
		fallthrough
	case "CUSTOM":
		fallthrough
	case "TAG":
		fallthrough
	case "DELETE":
		fallthrough
	case "DECRYPT":
		*e = WorkflowStepTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowStepTypeEnum: %v", v)
	}
}
