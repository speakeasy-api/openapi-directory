// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateFilesetRequestBody - Specify a template ID and either a host ID or a share ID. When a share ID is provided, the host ID is derived from the host share. Also specify whether or not this backup is a direct archive backup.
type CreateFilesetRequestBody struct {
	ArraySpec *shared.FilesetArraySpec `json:"arraySpec,omitempty"`
	// A Boolean value that determines whether to recognize and dedupe hardlinks in a fileset. When 'true,' performs a hardlink deduplication. When 'false,' performs a normal backup that treats hardlinks as normal files. If not specified, this defaults to false.
	EnableHardlinkSupport *bool `json:"enableHardlinkSupport,omitempty"`
	// A Boolean value that determines whether to resolve symlink in a fileset. When 'true,' performs a symlink resolution. When 'false,' performs no symlink resolution. If not specified, this defaults to false.
	EnableSymlinkResolution *bool `json:"enableSymlinkResolution,omitempty"`
	// ID of the failover cluster app.
	FailoverClusterAppID *string `json:"failoverClusterAppId,omitempty"`
	HostID               *string `json:"hostId,omitempty"`
	// A Boolean value that determines whether to take a direct archive backup. When 'true,' performs a direct archive backup. When 'false,' performs a normal backup. If not specified, this defaults to false.
	IsPassthrough *bool   `json:"isPassthrough,omitempty"`
	ShareID       *string `json:"shareId,omitempty"`
	// Rubrik CDM uses a prefix match to select the latest SnapMirror snapshot that matches this value during a full backup of a SnapMirror destination share.
	SnapMirrorLabelForFullBackup *string `json:"snapMirrorLabelForFullBackup,omitempty"`
	// Rubrik CDM selects the latest SnapMirror snapshot that matches this value using a prefix match during an incremental backup of a SnapMirror destination share.
	SnapMirrorLabelForIncrementalBackup *string `json:"snapMirrorLabelForIncrementalBackup,omitempty"`
	TemplateID                          string  `json:"templateId"`
}

type CreateFilesetResponse struct {
	ContentType string
	// Details of the new fileset.
	FilesetDetail *shared.FilesetDetail
	StatusCode    int
	RawResponse   *http.Response
}
