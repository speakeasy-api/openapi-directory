// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeFleetLocationCapacityXAmzTargetEnum
type DescribeFleetLocationCapacityXAmzTargetEnum string

const (
	DescribeFleetLocationCapacityXAmzTargetEnumGameLiftDescribeFleetLocationCapacity DescribeFleetLocationCapacityXAmzTargetEnum = "GameLift.DescribeFleetLocationCapacity"
)

func (e *DescribeFleetLocationCapacityXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GameLift.DescribeFleetLocationCapacity":
		*e = DescribeFleetLocationCapacityXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeFleetLocationCapacityXAmzTargetEnum: %s", s)
	}
}

type DescribeFleetLocationCapacityHeaders struct {
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeFleetLocationCapacityXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeFleetLocationCapacityRequest struct {
	Headers DescribeFleetLocationCapacityHeaders
	Request shared.DescribeFleetLocationCapacityInput `request:"mediaType=application/json"`
}

type DescribeFleetLocationCapacityResponse struct {
	ContentType string
	// Success
	DescribeFleetLocationCapacityOutput *shared.DescribeFleetLocationCapacityOutput
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
	// UnsupportedRegionException
	UnsupportedRegionException interface{}
}
