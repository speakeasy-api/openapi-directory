<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BurnTokenRequest - Object representing the token to be burned
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BurnTokenRequest
{
    /**
     * Array of objects representing tokens to be burned
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\BurnTokenRequestBurn> $burn
     */
	#[\JMS\Serializer\Annotation\SerializedName('burn')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BurnTokenRequestBurn>')]
    public array $burn;
    
    /**
     * Fee in satoshi to include in the issuance transaction min 10000 (0.0001 NEBL)
     * 
     * @var float $fee
     */
	#[\JMS\Serializer\Annotation\SerializedName('fee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $fee;
    
    /**
     * Array of addresses to send the token from
     * 
     * @var ?array<string> $from
     */
	#[\JMS\Serializer\Annotation\SerializedName('from')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $from = null;
    
    /**
     * $transfer
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BurnTokenRequestTransfer> $transfer
     */
	#[\JMS\Serializer\Annotation\SerializedName('transfer')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BurnTokenRequestTransfer>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $transfer = null;
    
	public function __construct()
	{
		$this->burn = [];
		$this->fee = 0;
		$this->from = null;
		$this->transfer = null;
	}
}
