// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FileSystemLifecycleEnum - The lifecycle status of the file system.
type FileSystemLifecycleEnum string

const (
	FileSystemLifecycleEnumAvailable                FileSystemLifecycleEnum = "AVAILABLE"
	FileSystemLifecycleEnumCreating                 FileSystemLifecycleEnum = "CREATING"
	FileSystemLifecycleEnumFailed                   FileSystemLifecycleEnum = "FAILED"
	FileSystemLifecycleEnumDeleting                 FileSystemLifecycleEnum = "DELETING"
	FileSystemLifecycleEnumMisconfigured            FileSystemLifecycleEnum = "MISCONFIGURED"
	FileSystemLifecycleEnumUpdating                 FileSystemLifecycleEnum = "UPDATING"
	FileSystemLifecycleEnumMisconfiguredUnavailable FileSystemLifecycleEnum = "MISCONFIGURED_UNAVAILABLE"
)

func (e FileSystemLifecycleEnum) ToPointer() *FileSystemLifecycleEnum {
	return &e
}

func (e *FileSystemLifecycleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AVAILABLE":
		fallthrough
	case "CREATING":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETING":
		fallthrough
	case "MISCONFIGURED":
		fallthrough
	case "UPDATING":
		fallthrough
	case "MISCONFIGURED_UNAVAILABLE":
		*e = FileSystemLifecycleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FileSystemLifecycleEnum: %v", v)
	}
}
