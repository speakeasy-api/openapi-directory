"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import imageasset as shared_imageasset
from ..shared import youtubevideodetails as shared_youtubevideodetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CommonInStreamAttribute:
    r"""Common attributes for in-stream, non-skippable and bumper ads."""
    
    action_button_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionButtonLabel'), 'exclude': lambda f: f is None }})
    r"""The text on the call-to-action button."""  
    action_headline: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionHeadline'), 'exclude': lambda f: f is None }})
    r"""The headline of the call-to-action banner."""  
    companion_banner: Optional[shared_imageasset.ImageAsset] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companionBanner'), 'exclude': lambda f: f is None }})
    r"""Meta data of an image asset."""  
    display_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayUrl'), 'exclude': lambda f: f is None }})
    r"""The webpage address that appears with the ad."""  
    final_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finalUrl'), 'exclude': lambda f: f is None }})
    r"""The URL address of the webpage that people reach after they click the ad."""  
    tracking_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trackingUrl'), 'exclude': lambda f: f is None }})
    r"""The URL address loaded in the background for tracking purposes."""  
    video: Optional[shared_youtubevideodetails.YoutubeVideoDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('video'), 'exclude': lambda f: f is None }})
    r"""Details of a YouTube video."""  
    