/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class PortfolioActivations {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentId")
    public String contentId;

    public PortfolioActivations withContentId(String contentId) {
        this.contentId = contentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("end")
    public OffsetDateTime end;

    public PortfolioActivations withEnd(OffsetDateTime end) {
        this.end = end;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public PortfolioActivations withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("info")
    public String info;

    public PortfolioActivations withInfo(String info) {
        this.info = info;
        return this;
    }
    
    /**
     * number of learners in the offering, excluding facilitators and coaches
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("learnersCount")
    public Double learnersCount;

    public PortfolioActivations withLearnersCount(Double learnersCount) {
        this.learnersCount = learnersCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public PortfolioActivationsMetadata metadata;

    public PortfolioActivations withMetadata(PortfolioActivationsMetadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public PortfolioActivations withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("start")
    public OffsetDateTime start;

    public PortfolioActivations withStart(OffsetDateTime start) {
        this.start = start;
        return this;
    }
    
    public PortfolioActivations(){}
}
