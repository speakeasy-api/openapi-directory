// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OrderCreateAPIModelStatusEnum - Order status
type OrderCreateAPIModelStatusEnum string

const (
	OrderCreateAPIModelStatusEnumPendingPayment OrderCreateAPIModelStatusEnum = "PendingPayment"
	OrderCreateAPIModelStatusEnumProcessing     OrderCreateAPIModelStatusEnum = "Processing"
	OrderCreateAPIModelStatusEnumShipped        OrderCreateAPIModelStatusEnum = "Shipped"
	OrderCreateAPIModelStatusEnumCompleted      OrderCreateAPIModelStatusEnum = "Completed"
	OrderCreateAPIModelStatusEnumOnHold         OrderCreateAPIModelStatusEnum = "OnHold"
	OrderCreateAPIModelStatusEnumCancelled      OrderCreateAPIModelStatusEnum = "Cancelled"
	OrderCreateAPIModelStatusEnumRefunded       OrderCreateAPIModelStatusEnum = "Refunded"
	OrderCreateAPIModelStatusEnumFailed         OrderCreateAPIModelStatusEnum = "Failed"
)

func (e *OrderCreateAPIModelStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PendingPayment":
		fallthrough
	case "Processing":
		fallthrough
	case "Shipped":
		fallthrough
	case "Completed":
		fallthrough
	case "OnHold":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Refunded":
		fallthrough
	case "Failed":
		*e = OrderCreateAPIModelStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderCreateAPIModelStatusEnum: %s", s)
	}
}

type OrderCreateAPIModel struct {
	// After payment description
	AfterPaymentDescription *string `json:"AfterPaymentDescription,omitempty" form:"name=AfterPaymentDescription"`
	// List of Order attachments
	Attachments []OrderAttachmentAPIModel `json:"Attachments,omitempty" form:"name=Attachments,json"`
	// Coupon to apply in order to get the discount
	CouponCode *string `json:"CouponCode,omitempty" form:"name=CouponCode"`
	// Foreign key Currency
	CurrencyID *int `json:"CurrencyId,omitempty" form:"name=CurrencyId"`
	// Product description
	Description *string `json:"Description,omitempty" form:"name=Description"`
	// Discount amount
	DiscountAmount *float64 `json:"DiscountAmount,omitempty" form:"name=DiscountAmount"`
	// List of Order items
	Items []OrderItemAPIModel `json:"Items,omitempty" form:"name=Items,json"`
	// Product alias
	Name *string `json:"Name,omitempty" form:"name=Name"`
	// Customer note to seller
	Note                 *string                       `json:"Note,omitempty" form:"name=Note"`
	OrderBillingDetails  *OrderBillingDetailsAPIModel  `json:"OrderBillingDetails,omitempty" form:"name=OrderBillingDetails,json"`
	OrderShippingDetails *OrderShippingDetailsAPIModel `json:"OrderShippingDetails,omitempty" form:"name=OrderShippingDetails,json"`
	// Product id
	ProductID *int `json:"ProductId,omitempty" form:"name=ProductId"`
	// Represent the referral for this order
	Referral *string `json:"Referral,omitempty" form:"name=Referral"`
	// Cost for shipping the product
	ShippingAmount *float64 `json:"ShippingAmount,omitempty" form:"name=ShippingAmount"`
	// Client instructions for shipping
	ShippingDescription *string `json:"ShippingDescription,omitempty" form:"name=ShippingDescription"`
	// Order status
	Status *OrderCreateAPIModelStatusEnum `json:"Status,omitempty" form:"name=Status"`
	// Sub total amount
	SubTotalAmount *float64 `json:"SubTotalAmount,omitempty" form:"name=SubTotalAmount"`
	// Tax amount
	TaxAmount *float64 `json:"TaxAmount,omitempty" form:"name=TaxAmount"`
	// Total amount
	TotalAmount *float64 `json:"TotalAmount,omitempty" form:"name=TotalAmount"`
	// What happens next description
	WhatHappensNextDescription *string `json:"WhatHappensNextDescription,omitempty" form:"name=WhatHappensNextDescription"`
}
