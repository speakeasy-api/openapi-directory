/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InvoicePaymentRequest - Represents a payment request for an [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice). Invoices can specify a maximum
 * of 13 payment requests, with up to 12 `INSTALLMENT` request types. For more information, 
 * see [Payment requests](https://developer.squareup.com/docs/invoices-api/overview#payment-requests).
 * 
 * Adding `INSTALLMENT` payment requests to an invoice requires an 
 * [Invoices Plus subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).
 */
public class InvoicePaymentRequest {
    /**
     * The payment method for an automatic payment.
     * 
     * The default value is `NONE`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automatic_payment_source")
    public String automaticPaymentSource;
    public InvoicePaymentRequest withAutomaticPaymentSource(String automaticPaymentSource) {
        this.automaticPaymentSource = automaticPaymentSource;
        return this;
    }
    
    /**
     * The ID of the credit or debit card on file to charge for the payment request. To get the cards on file for a customer,
     * call [ListCards](https://developer.squareup.com/reference/square_2021-08-18/cards-api/list-cards) and include the `customer_id` of the invoice recipient.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_id")
    public String cardId;
    public InvoicePaymentRequest withCardId(String cardId) {
        this.cardId = cardId;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computed_amount_money")
    public Money computedAmountMoney;
    public InvoicePaymentRequest withComputedAmountMoney(Money computedAmountMoney) {
        this.computedAmountMoney = computedAmountMoney;
        return this;
    }
    
    /**
     * The due date (in the invoice's time zone) for the payment request, in `YYYY-MM-DD` format. This field
     * is required to create a payment request.
     * 
     * After this date, the invoice becomes overdue. For example, a payment `due_date` of 2021-03-09 with a `timezone`
     * of America/Los\_Angeles becomes overdue at midnight on March 9 in America/Los\_Angeles (which equals a UTC
     * timestamp of 2021-03-10T08:00:00Z).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("due_date")
    public String dueDate;
    public InvoicePaymentRequest withDueDate(String dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fixed_amount_requested_money")
    public Money fixedAmountRequestedMoney;
    public InvoicePaymentRequest withFixedAmountRequestedMoney(Money fixedAmountRequestedMoney) {
        this.fixedAmountRequestedMoney = fixedAmountRequestedMoney;
        return this;
    }
    
    /**
     * Specifies the amount for the payment request in percentage:
     * 
     * - When the payment `request_type` is `DEPOSIT`, it is the percentage of the order's total amount.
     * - When the payment `request_type` is `INSTALLMENT`, it is the percentage of the order's total less 
     * the deposit, if requested. The sum of the `percentage_requested` in all installment 
     * payment requests must be equal to 100.
     * 
     * You cannot specify this when the payment `request_type` is `BALANCE` or when the 
     * payment request specifies the `fixed_amount_requested_money` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentage_requested")
    public String percentageRequested;
    public InvoicePaymentRequest withPercentageRequested(String percentageRequested) {
        this.percentageRequested = percentageRequested;
        return this;
    }
    
    /**
     * A list of one or more reminders to send for the payment request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reminders")
    public InvoicePaymentReminder[] reminders;
    public InvoicePaymentRequest withReminders(InvoicePaymentReminder[] reminders) {
        this.reminders = reminders;
        return this;
    }
    
    /**
     * Indicates how Square processes the payment request. DEPRECATED at version 2021-01-21. Replaced by the
     * `Invoice.delivery_method` and `InvoicePaymentRequest.automatic_payment_source` fields.
     * 
     * One of the following is required when creating an invoice:
     * - (Recommended) The `delivery_method` field of the invoice. To configure an automatic payment, the
     * `automatic_payment_source` field of the payment request is also required.
     * - This `request_method` field. Note that `invoice` objects returned in responses do not include `request_method`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("request_method")
    public String requestMethod;
    public InvoicePaymentRequest withRequestMethod(String requestMethod) {
        this.requestMethod = requestMethod;
        return this;
    }
    
    /**
     * Identifies the payment request type. This type defines how the payment request amount is determined. 
     * This field is required to create a payment request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("request_type")
    public String requestType;
    public InvoicePaymentRequest withRequestType(String requestType) {
        this.requestType = requestType;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rounding_adjustment_included_money")
    public Money roundingAdjustmentIncludedMoney;
    public InvoicePaymentRequest withRoundingAdjustmentIncludedMoney(Money roundingAdjustmentIncludedMoney) {
        this.roundingAdjustmentIncludedMoney = roundingAdjustmentIncludedMoney;
        return this;
    }
    
    /**
     * If set to true, the Square-hosted invoice page (the `public_url` field of the invoice) 
     * provides a place for the customer to pay a tip. 
     * 
     * This field is allowed only on the final payment request  
     * and the payment `request_type` must be `BALANCE` or `INSTALLMENT`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tipping_enabled")
    public Boolean tippingEnabled;
    public InvoicePaymentRequest withTippingEnabled(Boolean tippingEnabled) {
        this.tippingEnabled = tippingEnabled;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_completed_amount_money")
    public Money totalCompletedAmountMoney;
    public InvoicePaymentRequest withTotalCompletedAmountMoney(Money totalCompletedAmountMoney) {
        this.totalCompletedAmountMoney = totalCompletedAmountMoney;
        return this;
    }
    
    /**
     * The Square-generated ID of the payment request in an [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;
    public InvoicePaymentRequest withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
}
