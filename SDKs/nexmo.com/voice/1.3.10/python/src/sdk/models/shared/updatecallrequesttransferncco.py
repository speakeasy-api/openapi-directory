"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import requesttransferactionparam_enum as shared_requesttransferactionparam_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateCallRequestTransferNccoDestination:
    
    ncco: list[dict[str, Any]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ncco') }})
    r"""Refer to the [NCCO Guide](https://developer.nexmo.com/voice/voice-api/ncco-reference) for a description of possible NCCO parameters."""  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Always `ncco`"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateCallRequestTransferNcco:
    
    action: shared_requesttransferactionparam_enum.RequestTransferActionParamEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action') }})
    r"""Transfer the call to a new NCCO"""  
    destination: UpdateCallRequestTransferNccoDestination = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destination') }})  
    