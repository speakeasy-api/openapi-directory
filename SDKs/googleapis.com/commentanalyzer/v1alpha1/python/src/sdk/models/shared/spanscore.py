"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import score as shared_score
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpanScore:
    r"""This is a single score for a given span of text."""
    
    begin: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('begin'), 'exclude': lambda f: f is None }})
    r"""\\"begin\\" and \\"end\\" describe the span of the original text that the attribute score applies to. The values are the UTF-16 codepoint range. \\"end\\" is exclusive. For example, with the text \\"Hi there\\", the begin/end pair (0,2) describes the text \\"Hi\\". If \\"begin\\" and \\"end\\" are unset, the score applies to the full text."""  
    end: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end'), 'exclude': lambda f: f is None }})  
    score: Optional[shared_score.Score] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score'), 'exclude': lambda f: f is None }})
    r"""Analysis scores are described by a value and a ScoreType."""  
    