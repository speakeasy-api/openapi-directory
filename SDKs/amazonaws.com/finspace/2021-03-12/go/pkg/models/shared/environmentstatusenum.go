// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EnvironmentStatusEnum string

const (
	EnvironmentStatusEnumCreateRequested EnvironmentStatusEnum = "CREATE_REQUESTED"
	EnvironmentStatusEnumCreating        EnvironmentStatusEnum = "CREATING"
	EnvironmentStatusEnumCreated         EnvironmentStatusEnum = "CREATED"
	EnvironmentStatusEnumDeleteRequested EnvironmentStatusEnum = "DELETE_REQUESTED"
	EnvironmentStatusEnumDeleting        EnvironmentStatusEnum = "DELETING"
	EnvironmentStatusEnumDeleted         EnvironmentStatusEnum = "DELETED"
	EnvironmentStatusEnumFailedCreation  EnvironmentStatusEnum = "FAILED_CREATION"
	EnvironmentStatusEnumRetryDeletion   EnvironmentStatusEnum = "RETRY_DELETION"
	EnvironmentStatusEnumFailedDeletion  EnvironmentStatusEnum = "FAILED_DELETION"
	EnvironmentStatusEnumSuspended       EnvironmentStatusEnum = "SUSPENDED"
)

func (e *EnvironmentStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATE_REQUESTED":
		fallthrough
	case "CREATING":
		fallthrough
	case "CREATED":
		fallthrough
	case "DELETE_REQUESTED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		fallthrough
	case "FAILED_CREATION":
		fallthrough
	case "RETRY_DELETION":
		fallthrough
	case "FAILED_DELETION":
		fallthrough
	case "SUSPENDED":
		*e = EnvironmentStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnvironmentStatusEnum: %s", s)
	}
}
