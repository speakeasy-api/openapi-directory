/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Queue } from "./queue";
import { QueueMessage } from "./queuemessage";
import { Expose, Type } from "class-transformer";

/**
 * Response returned by most Queue API calls.
 */
export class ApiResponse extends SpeakeasyBase {
  /**
   * Count of Queues or QueueMessages returned by the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  /**
   * Informative message intended for client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Queues Messages returned by the call, or empty if not applicable.
   */
  @SpeakeasyMetadata({ elemType: QueueMessage })
  @Expose({ name: "queueMessages" })
  @Type(() => QueueMessage)
  queueMessages?: QueueMessage[];

  /**
   * Queues returned but the call, or empty if not applicable.
   */
  @SpeakeasyMetadata({ elemType: Queue })
  @Expose({ name: "queues" })
  @Type(() => Queue)
  queues?: Queue[];
}
