/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class StoreDetailAndSubmitRequest {
    /**
     * This field contains additional data, which may be required for a particular request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalData")
    public java.util.Map<String, String> additionalData;

    public StoreDetailAndSubmitRequest withAdditionalData(java.util.Map<String, String> additionalData) {
        this.additionalData = additionalData;
        return this;
    }
    
    @JsonProperty("amount")
    public Amount amount;

    public StoreDetailAndSubmitRequest withAmount(Amount amount) {
        this.amount = amount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bank")
    public BankAccount bank;

    public StoreDetailAndSubmitRequest withBank(BankAccount bank) {
        this.bank = bank;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billingAddress")
    public Address billingAddress;

    public StoreDetailAndSubmitRequest withBillingAddress(Address billingAddress) {
        this.billingAddress = billingAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card")
    public Card card;

    public StoreDetailAndSubmitRequest withCard(Card card) {
        this.card = card;
        return this;
    }
    
    /**
     * The date of birth.
     * Format: [ISO-8601](https://www.w3.org/TR/NOTE-datetime); example: YYYY-MM-DD
     * For Paysafecard it must be the same as used when registering the Paysafecard account.
     * &gt; This field is mandatory for natural persons.
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("dateOfBirth")
    public LocalDate dateOfBirth;

    public StoreDetailAndSubmitRequest withDateOfBirth(LocalDate dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
        return this;
    }
    
    /**
     * The type of the entity the payout is processed for.
     */
    @JsonProperty("entityType")
    public StoreDetailAndSubmitRequestEntityTypeEnum entityType;

    public StoreDetailAndSubmitRequest withEntityType(StoreDetailAndSubmitRequestEntityTypeEnum entityType) {
        this.entityType = entityType;
        return this;
    }
    
    /**
     * An integer value that is added to the normal fraud score. The value can be either positive or negative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fraudOffset")
    public Integer fraudOffset;

    public StoreDetailAndSubmitRequest withFraudOffset(Integer fraudOffset) {
        this.fraudOffset = fraudOffset;
        return this;
    }
    
    /**
     * The merchant account identifier, with which you want to process the transaction.
     */
    @JsonProperty("merchantAccount")
    public String merchantAccount;

    public StoreDetailAndSubmitRequest withMerchantAccount(String merchantAccount) {
        this.merchantAccount = merchantAccount;
        return this;
    }
    
    /**
     * The shopper's nationality.
     * 
     * A valid value is an ISO 2-character country code (e.g. 'NL').
     */
    @JsonProperty("nationality")
    public String nationality;

    public StoreDetailAndSubmitRequest withNationality(String nationality) {
        this.nationality = nationality;
        return this;
    }
    
    @JsonProperty("recurring")
    public Recurring recurring;

    public StoreDetailAndSubmitRequest withRecurring(Recurring recurring) {
        this.recurring = recurring;
        return this;
    }
    
    /**
     * The merchant reference for this payment. This reference will be used in all communication to the merchant about the status of the payout. Although it is a good idea to make sure it is unique, this is not a requirement.
     */
    @JsonProperty("reference")
    public String reference;

    public StoreDetailAndSubmitRequest withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The name of the brand to make a payout to.
     * 
     * For Paysafecard it must be set to `paysafecard`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selectedBrand")
    public String selectedBrand;

    public StoreDetailAndSubmitRequest withSelectedBrand(String selectedBrand) {
        this.selectedBrand = selectedBrand;
        return this;
    }
    
    /**
     * The shopper's email address.
     */
    @JsonProperty("shopperEmail")
    public String shopperEmail;

    public StoreDetailAndSubmitRequest withShopperEmail(String shopperEmail) {
        this.shopperEmail = shopperEmail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperName")
    public Name shopperName;

    public StoreDetailAndSubmitRequest withShopperName(Name shopperName) {
        this.shopperName = shopperName;
        return this;
    }
    
    /**
     * The shopper's reference for the payment transaction.
     */
    @JsonProperty("shopperReference")
    public String shopperReference;

    public StoreDetailAndSubmitRequest withShopperReference(String shopperReference) {
        this.shopperReference = shopperReference;
        return this;
    }
    
    /**
     * The description of this payout. This description is shown on the bank statement of the shopper (if this is supported by the chosen payment method).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperStatement")
    public String shopperStatement;

    public StoreDetailAndSubmitRequest withShopperStatement(String shopperStatement) {
        this.shopperStatement = shopperStatement;
        return this;
    }
    
    /**
     * The shopper's social security number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("socialSecurityNumber")
    public String socialSecurityNumber;

    public StoreDetailAndSubmitRequest withSocialSecurityNumber(String socialSecurityNumber) {
        this.socialSecurityNumber = socialSecurityNumber;
        return this;
    }
    
    public StoreDetailAndSubmitRequest(@JsonProperty("amount") Amount amount, @JsonProperty("dateOfBirth") LocalDate dateOfBirth, @JsonProperty("entityType") StoreDetailAndSubmitRequestEntityTypeEnum entityType, @JsonProperty("merchantAccount") String merchantAccount, @JsonProperty("nationality") String nationality, @JsonProperty("recurring") Recurring recurring, @JsonProperty("reference") String reference, @JsonProperty("shopperEmail") String shopperEmail, @JsonProperty("shopperReference") String shopperReference) {
        this.amount = amount;
        this.dateOfBirth = dateOfBirth;
        this.entityType = entityType;
        this.merchantAccount = merchantAccount;
        this.nationality = nationality;
        this.recurring = recurring;
        this.reference = reference;
        this.shopperEmail = shopperEmail;
        this.shopperReference = shopperReference;
  }
}
