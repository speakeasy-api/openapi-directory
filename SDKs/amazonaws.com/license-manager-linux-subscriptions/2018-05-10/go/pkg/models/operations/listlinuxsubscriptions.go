// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListLinuxSubscriptionsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

type ListLinuxSubscriptionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListLinuxSubscriptionsRequestBody struct {
	// <p>An array of structures that you can use to filter the results to those that match one or more sets of key-value pairs that you specify. For example, you can filter by the name of <code>Subscription</code> with an optional operator to see subscriptions that match, partially match, or don't match a certain subscription's name.</p> <p>The valid names for this filter are:</p> <ul> <li> <p> <code>Subscription</code> </p> </li> </ul> <p>The valid Operators for this filter are:</p> <ul> <li> <p> <code>contains</code> </p> </li> <li> <p> <code>equals</code> </p> </li> <li> <p> <code>Notequal</code> </p> </li> </ul>
	Filters []shared.Filter `json:"Filters,omitempty"`
	// Maximum number of results to return in a single call.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// Token for the next set of results.
	NextToken *string `json:"NextToken,omitempty"`
}

type ListLinuxSubscriptionsRequest struct {
	QueryParams ListLinuxSubscriptionsQueryParams
	Headers     ListLinuxSubscriptionsHeaders
	Request     ListLinuxSubscriptionsRequestBody `request:"mediaType=application/json"`
}

type ListLinuxSubscriptionsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListLinuxSubscriptionsResponse *shared.ListLinuxSubscriptionsResponse
	StatusCode                     int
	RawResponse                    *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
