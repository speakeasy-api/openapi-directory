// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SourceTypeEnum - Data source type.
type SourceTypeEnum string

const (
	SourceTypeEnumSourceTypeUnknown       SourceTypeEnum = "SOURCE_TYPE_UNKNOWN"
	SourceTypeEnumSourceTypeUpload        SourceTypeEnum = "SOURCE_TYPE_UPLOAD"
	SourceTypeEnumSourceTypeGuestOsScan   SourceTypeEnum = "SOURCE_TYPE_GUEST_OS_SCAN"
	SourceTypeEnumSourceTypeInventoryScan SourceTypeEnum = "SOURCE_TYPE_INVENTORY_SCAN"
	SourceTypeEnumSourceTypeCustom        SourceTypeEnum = "SOURCE_TYPE_CUSTOM"
)

func (e SourceTypeEnum) ToPointer() *SourceTypeEnum {
	return &e
}

func (e *SourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SOURCE_TYPE_UNKNOWN":
		fallthrough
	case "SOURCE_TYPE_UPLOAD":
		fallthrough
	case "SOURCE_TYPE_GUEST_OS_SCAN":
		fallthrough
	case "SOURCE_TYPE_INVENTORY_SCAN":
		fallthrough
	case "SOURCE_TYPE_CUSTOM":
		*e = SourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceTypeEnum: %v", v)
	}
}

// SourceInput - Source represents an object from which asset information is streamed to Migration Center.
type SourceInput struct {
	// Free-text description.
	Description *string `json:"description,omitempty"`
	// User-friendly display name.
	DisplayName *string `json:"displayName,omitempty"`
	// If `true`, the source is managed by other service(s).
	IsManaged *bool `json:"isManaged,omitempty"`
	// The information confidence of the source. The higher the value, the higher the confidence.
	Priority *int `json:"priority,omitempty"`
	// Data source type.
	Type *SourceTypeEnum `json:"type,omitempty"`
}

// SourceStateEnum - Output only. The state of the source.
type SourceStateEnum string

const (
	SourceStateEnumStateUnspecified SourceStateEnum = "STATE_UNSPECIFIED"
	SourceStateEnumActive           SourceStateEnum = "ACTIVE"
	SourceStateEnumDeleting         SourceStateEnum = "DELETING"
	SourceStateEnumInvalid          SourceStateEnum = "INVALID"
)

func (e SourceStateEnum) ToPointer() *SourceStateEnum {
	return &e
}

func (e *SourceStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETING":
		fallthrough
	case "INVALID":
		*e = SourceStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceStateEnum: %v", v)
	}
}

// Source - Source represents an object from which asset information is streamed to Migration Center.
type Source struct {
	// Output only. The timestamp when the source was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Free-text description.
	Description *string `json:"description,omitempty"`
	// User-friendly display name.
	DisplayName *string `json:"displayName,omitempty"`
	// Output only. The number of frames that were reported by the source and contained errors.
	ErrorFrameCount *int `json:"errorFrameCount,omitempty"`
	// If `true`, the source is managed by other service(s).
	IsManaged *bool `json:"isManaged,omitempty"`
	// Output only. The full name of the source.
	Name *string `json:"name,omitempty"`
	// Output only. Number of frames that are still being processed.
	PendingFrameCount *int `json:"pendingFrameCount,omitempty"`
	// The information confidence of the source. The higher the value, the higher the confidence.
	Priority *int `json:"priority,omitempty"`
	// Output only. The state of the source.
	State *SourceStateEnum `json:"state,omitempty"`
	// Data source type.
	Type *SourceTypeEnum `json:"type,omitempty"`
	// Output only. The timestamp when the source was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}
