// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribePlatformVersionActionEnum
type GETDescribePlatformVersionActionEnum string

const (
	GETDescribePlatformVersionActionEnumDescribePlatformVersion GETDescribePlatformVersionActionEnum = "DescribePlatformVersion"
)

func (e GETDescribePlatformVersionActionEnum) ToPointer() *GETDescribePlatformVersionActionEnum {
	return &e
}

func (e *GETDescribePlatformVersionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribePlatformVersion":
		*e = GETDescribePlatformVersionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribePlatformVersionActionEnum: %v", v)
	}
}

// GETDescribePlatformVersionVersionEnum
type GETDescribePlatformVersionVersionEnum string

const (
	GETDescribePlatformVersionVersionEnumTwoThousandAndTen1201 GETDescribePlatformVersionVersionEnum = "2010-12-01"
)

func (e GETDescribePlatformVersionVersionEnum) ToPointer() *GETDescribePlatformVersionVersionEnum {
	return &e
}

func (e *GETDescribePlatformVersionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETDescribePlatformVersionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribePlatformVersionVersionEnum: %v", v)
	}
}

type GETDescribePlatformVersionRequest struct {
	Action GETDescribePlatformVersionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ARN of the platform version.
	PlatformArn       *string                               `queryParam:"style=form,explode=true,name=PlatformArn"`
	Version           GETDescribePlatformVersionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribePlatformVersionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
