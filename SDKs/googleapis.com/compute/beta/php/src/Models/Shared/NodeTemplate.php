<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NodeTemplate - Represent a sole-tenant Node Template resource. You can use a template to define properties for nodes in a node group. For more information, read Creating node groups and instances.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NodeTemplate
{
    /**
     * $accelerators
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AcceleratorConfig> $accelerators
     */
	#[\JMS\Serializer\Annotation\SerializedName('accelerators')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AcceleratorConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $accelerators = null;
    
    /**
     * CPU overcommit.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NodeTemplateCpuOvercommitTypeEnum $cpuOvercommitType
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpuOvercommitType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NodeTemplateCpuOvercommitTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NodeTemplateCpuOvercommitTypeEnum $cpuOvercommitType = null;
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     * 
     * @var ?string $creationTimestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationTimestamp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creationTimestamp = null;
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * $disks
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\LocalDisk> $disks
     */
	#[\JMS\Serializer\Annotation\SerializedName('disks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LocalDisk>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $disks = null;
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * [Output Only] The type of the resource. Always compute#nodeTemplate for node templates.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Labels to use for node affinity, which will be used in instance scheduling.
     * 
     * @var ?array<string, string> $nodeAffinityLabels
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeAffinityLabels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $nodeAffinityLabels = null;
    
    /**
     * The node type to use for nodes group that are created from this template.
     * 
     * @var ?string $nodeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nodeType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('nodeTypeFlexibility')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NodeTemplateNodeTypeFlexibility')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NodeTemplateNodeTypeFlexibility $nodeTypeFlexibility = null;
    
    /**
     * [Output Only] The name of the region where the node template resides, such as us-central1.
     * 
     * @var ?string $region
     */
	#[\JMS\Serializer\Annotation\SerializedName('region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $region = null;
    
    /**
     * [Output Only] Server-defined URL for the resource.
     * 
     * @var ?string $selfLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfLink')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selfLink = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('serverBinding')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ServerBinding')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ServerBinding $serverBinding = null;
    
    /**
     * [Output Only] The status of the node template. One of the following values: CREATING, READY, and DELETING.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NodeTemplateStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NodeTemplateStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NodeTemplateStatusEnum $status = null;
    
    /**
     * [Output Only] An optional, human-readable explanation of the status.
     * 
     * @var ?string $statusMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('statusMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statusMessage = null;
    
	public function __construct()
	{
		$this->accelerators = null;
		$this->cpuOvercommitType = null;
		$this->creationTimestamp = null;
		$this->description = null;
		$this->disks = null;
		$this->id = null;
		$this->kind = null;
		$this->name = null;
		$this->nodeAffinityLabels = null;
		$this->nodeType = null;
		$this->nodeTypeFlexibility = null;
		$this->region = null;
		$this->selfLink = null;
		$this->serverBinding = null;
		$this->status = null;
		$this->statusMessage = null;
	}
}
