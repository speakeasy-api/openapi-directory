/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Search - Response to a custom search request.
 */
public class Search {
    /**
     * Metadata and refinements associated with the given search engine, including: * The name of the search engine that was used for the query. * A set of [facet objects](https://developers.google.com/custom-search/docs/refinements#create) (refinements) you can use for refining a search.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    public java.util.Map<String, Object> context;

    public Search withContext(java.util.Map<String, Object> context) {
        this.context = context;
        return this;
    }
    
    /**
     * The current set of custom search results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public Result[] items;

    public Search withItems(Result[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Unique identifier for the type of current object. For this API, it is customsearch#search.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Search withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The set of [promotions](https://developers.google.com/custom-search/docs/promotions). Present only if the custom search engine's configuration files define any promotions for the given query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("promotions")
    public Promotion[] promotions;

    public Search withPromotions(Promotion[] promotions) {
        this.promotions = promotions;
        return this;
    }
    
    /**
     * Query metadata for the previous, current, and next pages of results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queries")
    public SearchQueries queries;

    public Search withQueries(SearchQueries queries) {
        this.queries = queries;
        return this;
    }
    
    /**
     * Metadata about a search operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchInformation")
    public SearchSearchInformation searchInformation;

    public Search withSearchInformation(SearchSearchInformation searchInformation) {
        this.searchInformation = searchInformation;
        return this;
    }
    
    /**
     * Spell correction information for a query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spelling")
    public SearchSpelling spelling;

    public Search withSpelling(SearchSpelling spelling) {
        this.spelling = spelling;
        return this;
    }
    
    /**
     * OpenSearch template and URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public SearchUrl url;

    public Search withUrl(SearchUrl url) {
        this.url = url;
        return this;
    }
    
    public Search(){}
}
