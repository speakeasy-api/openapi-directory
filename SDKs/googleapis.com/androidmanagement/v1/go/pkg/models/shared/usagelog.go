// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UsageLogEnabledLogTypesEnum string

const (
	UsageLogEnabledLogTypesEnumLogTypeUnspecified  UsageLogEnabledLogTypesEnum = "LOG_TYPE_UNSPECIFIED"
	UsageLogEnabledLogTypesEnumSecurityLogs        UsageLogEnabledLogTypesEnum = "SECURITY_LOGS"
	UsageLogEnabledLogTypesEnumNetworkActivityLogs UsageLogEnabledLogTypesEnum = "NETWORK_ACTIVITY_LOGS"
)

func (e *UsageLogEnabledLogTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LOG_TYPE_UNSPECIFIED":
		fallthrough
	case "SECURITY_LOGS":
		fallthrough
	case "NETWORK_ACTIVITY_LOGS":
		*e = UsageLogEnabledLogTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UsageLogEnabledLogTypesEnum: %s", s)
	}
}

type UsageLogUploadOnCellularAllowedEnum string

const (
	UsageLogUploadOnCellularAllowedEnumLogTypeUnspecified  UsageLogUploadOnCellularAllowedEnum = "LOG_TYPE_UNSPECIFIED"
	UsageLogUploadOnCellularAllowedEnumSecurityLogs        UsageLogUploadOnCellularAllowedEnum = "SECURITY_LOGS"
	UsageLogUploadOnCellularAllowedEnumNetworkActivityLogs UsageLogUploadOnCellularAllowedEnum = "NETWORK_ACTIVITY_LOGS"
)

func (e *UsageLogUploadOnCellularAllowedEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LOG_TYPE_UNSPECIFIED":
		fallthrough
	case "SECURITY_LOGS":
		fallthrough
	case "NETWORK_ACTIVITY_LOGS":
		*e = UsageLogUploadOnCellularAllowedEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UsageLogUploadOnCellularAllowedEnum: %s", s)
	}
}

// UsageLog - Controls types of device activity logs collected from the device and reported via Pub/Sub notification (https://developers.google.com/android/management/notifications).
type UsageLog struct {
	// Specifies which log types are enabled. Note that users will receive on-device messaging when usage logging is enabled.
	EnabledLogTypes []UsageLogEnabledLogTypesEnum `json:"enabledLogTypes,omitempty"`
	// Specifies which of the enabled log types can be uploaded over mobile data. By default logs are queued for upload when the device connects to WiFi.
	UploadOnCellularAllowed []UsageLogUploadOnCellularAllowedEnum `json:"uploadOnCellularAllowed,omitempty"`
}
