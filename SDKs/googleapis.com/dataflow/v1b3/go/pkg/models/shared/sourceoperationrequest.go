// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// SourceOperationRequest - A work item that represents the different operations that can be performed on a user-defined Source specification.
type SourceOperationRequest struct {
	// A request to compute the SourceMetadata of a Source.
	GetMetadata *SourceGetMetadataRequest `json:"getMetadata,omitempty"`
	// User-provided name of the Read instruction for this source.
	Name *string `json:"name,omitempty"`
	// System-defined name for the Read instruction for this source in the original workflow graph.
	OriginalName *string `json:"originalName,omitempty"`
	// Represents the operation to split a high-level Source specification into bundles (parts for parallel processing). At a high level, splitting of a source into bundles happens as follows: SourceSplitRequest is applied to the source. If it returns SOURCE_SPLIT_OUTCOME_USE_CURRENT, no further splitting happens and the source is used "as is". Otherwise, splitting is applied recursively to each produced DerivedSource. As an optimization, for any Source, if its does_not_need_splitting is true, the framework assumes that splitting this source would return SOURCE_SPLIT_OUTCOME_USE_CURRENT, and doesn't initiate a SourceSplitRequest. This applies both to the initial source being split and to bundles produced from it.
	Split *SourceSplitRequest `json:"split,omitempty"`
	// System-defined name of the stage containing the source operation. Unique across the workflow.
	StageName *string `json:"stageName,omitempty"`
	// System-defined name of the Read instruction for this source. Unique across the workflow.
	SystemName *string `json:"systemName,omitempty"`
}
