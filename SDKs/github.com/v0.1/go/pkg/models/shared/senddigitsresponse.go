// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SendDigitsResponseMessageEnum - Response message
type SendDigitsResponseMessageEnum string

const (
	SendDigitsResponseMessageEnumSendDigitsExecuted           SendDigitsResponseMessageEnum = "SendDigits Executed"
	SendDigitsResponseMessageEnumCallUUIDParameterMissing     SendDigitsResponseMessageEnum = "CallUUID Parameter Missing"
	SendDigitsResponseMessageEnumDigitsParameterMissing       SendDigitsResponseMessageEnum = "Digits Parameter Missing"
	SendDigitsResponseMessageEnumInvalidLegParameter          SendDigitsResponseMessageEnum = "Invalid Leg Parameter"
	SendDigitsResponseMessageEnumSendDigitsFailedCallNotFound SendDigitsResponseMessageEnum = "SendDigits Failed -- Call not found"
	SendDigitsResponseMessageEnumSendDigitsFailed             SendDigitsResponseMessageEnum = "SendDigits Failed"
)

func (e *SendDigitsResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SendDigits Executed":
		fallthrough
	case "CallUUID Parameter Missing":
		fallthrough
	case "Digits Parameter Missing":
		fallthrough
	case "Invalid Leg Parameter":
		fallthrough
	case "SendDigits Failed -- Call not found":
		fallthrough
	case "SendDigits Failed":
		*e = SendDigitsResponseMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SendDigitsResponseMessageEnum: %s", s)
	}
}

// SendDigitsResponse - Response
type SendDigitsResponse struct {
	// Response message
	Message SendDigitsResponseMessageEnum `json:"Message"`
	// Whether the request was successful or not
	Success bool `json:"Success"`
}
