/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Table } from "./table";
import { Expose, Type } from "class-transformer";

/**
 * table group type
 */
export enum CheckDetailsGroupEnum {
  Profile = "profile",
  Legal = "legal",
  Affiliations = "affiliations",
  Vehicle = "vehicle",
  Global = "global",
  Media = "media",
  Unknown = "unknown",
}

/**
 * Database result
 */
export enum CheckDetailsResultEnum {
  Pending = "pending",
  Found = "found",
  NotFound = "not_found",
  Error = "error",
}

/**
 * Represents background check details
 */
export class CheckDetails extends SpeakeasyBase {
  /**
   * Associated background check ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "check_id" })
  checkId: string;

  /**
   * Details dataset
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data_set" })
  dataSet: string;

  /**
   * Database name. Do not use this field to identify the database as its value may vary as the check is completed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "database_name" })
  databaseName: string;

  /**
   * table group type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  group: CheckDetailsGroupEnum;

  /**
   * Detail ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Database result
   */
  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  result: CheckDetailsResultEnum;

  /**
   * Partial detail score. Scores are aggregated later in the background check
   */
  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score: number;

  /**
   * Query detailed information
   */
  @SpeakeasyMetadata({ elemType: Table })
  @Expose({ name: "tables" })
  @Type(() => Table)
  tables: Table[];
}
