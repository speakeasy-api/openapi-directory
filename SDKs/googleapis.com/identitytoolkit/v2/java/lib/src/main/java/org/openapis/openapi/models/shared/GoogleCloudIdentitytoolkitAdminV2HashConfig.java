/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudIdentitytoolkitAdminV2HashConfig - History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.
 */
public class GoogleCloudIdentitytoolkitAdminV2HashConfig {
    /**
     * Output only. Different password hash algorithms used in Identity Toolkit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("algorithm")
    public GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum algorithm;

    public GoogleCloudIdentitytoolkitAdminV2HashConfig withAlgorithm(GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum algorithm) {
        this.algorithm = algorithm;
        return this;
    }
    
    /**
     * Output only. Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memoryCost")
    public Integer memoryCost;

    public GoogleCloudIdentitytoolkitAdminV2HashConfig withMemoryCost(Integer memoryCost) {
        this.memoryCost = memoryCost;
        return this;
    }
    
    /**
     * Output only. How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rounds")
    public Integer rounds;

    public GoogleCloudIdentitytoolkitAdminV2HashConfig withRounds(Integer rounds) {
        this.rounds = rounds;
        return this;
    }
    
    /**
     * Output only. Non-printable character to be inserted between the salt and plain text password in base64.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("saltSeparator")
    public String saltSeparator;

    public GoogleCloudIdentitytoolkitAdminV2HashConfig withSaltSeparator(String saltSeparator) {
        this.saltSeparator = saltSeparator;
        return this;
    }
    
    /**
     * Output only. Signer key in base64.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signerKey")
    public String signerKey;

    public GoogleCloudIdentitytoolkitAdminV2HashConfig withSignerKey(String signerKey) {
        this.signerKey = signerKey;
        return this;
    }
    
    public GoogleCloudIdentitytoolkitAdminV2HashConfig(){}
}
