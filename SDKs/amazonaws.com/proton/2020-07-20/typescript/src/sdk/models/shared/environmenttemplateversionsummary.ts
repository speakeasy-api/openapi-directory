/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TemplateVersionStatusEnum } from "./templateversionstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * A summary of the version of an environment template detail data.
 */
export class EnvironmentTemplateVersionSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "majorVersion" })
  majorVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "minorVersion" })
  minorVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendedMinorVersion" })
  recommendedMinorVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: TemplateVersionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "templateName" })
  templateName: string;
}
