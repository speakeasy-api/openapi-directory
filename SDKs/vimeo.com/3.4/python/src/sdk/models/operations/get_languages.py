"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import language as shared_language
from enum import Enum
from typing import Optional

class GetLanguagesFilterEnum(str, Enum):
    r"""The attribute by which to filter the results.
    
    Option descriptions:
     * `texttracks` - Only return text track supported languages
    """
    TEXTTRACKS = 'texttracks'


@dataclasses.dataclass
class GetLanguagesRequest:
    
    filter: Optional[GetLanguagesFilterEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""The attribute by which to filter the results.
    
    Option descriptions:
     * `texttracks` - Only return text track supported languages
    """  
    

@dataclasses.dataclass
class GetLanguagesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    languages: Optional[list[shared_language.Language]] = dataclasses.field(default=None)
    r"""The languages were returned."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    