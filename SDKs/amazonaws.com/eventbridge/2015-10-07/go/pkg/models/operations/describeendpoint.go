// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeEndpointXAmzTargetEnum
type DescribeEndpointXAmzTargetEnum string

const (
	DescribeEndpointXAmzTargetEnumAwsEventsDescribeEndpoint DescribeEndpointXAmzTargetEnum = "AWSEvents.DescribeEndpoint"
)

func (e DescribeEndpointXAmzTargetEnum) ToPointer() *DescribeEndpointXAmzTargetEnum {
	return &e
}

func (e *DescribeEndpointXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSEvents.DescribeEndpoint":
		*e = DescribeEndpointXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeEndpointXAmzTargetEnum: %v", v)
	}
}

type DescribeEndpointRequest struct {
	DescribeEndpointRequest shared.DescribeEndpointRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              DescribeEndpointXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeEndpointResponse struct {
	ContentType string
	// Success
	DescribeEndpointResponse *shared.DescribeEndpointResponse
	// InternalException
	InternalException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
