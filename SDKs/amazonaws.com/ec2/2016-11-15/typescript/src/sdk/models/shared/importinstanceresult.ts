/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The instance operating system.
 */
export enum ImportInstanceResultConversionTaskImportInstancePlatformEnum {
  Windows = "Windows",
}

/**
 * The disk image format.
 */
export enum ImportInstanceResultConversionTaskImportInstanceVolumesImageFormatEnum {
  Vmdk = "VMDK",
  Raw = "RAW",
  Vhd = "VHD",
}

/**
 * The image.
 */
export class ImportInstanceResultConversionTaskImportInstanceVolumesImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  checksum?: string;

  @SpeakeasyMetadata()
  format?: ImportInstanceResultConversionTaskImportInstanceVolumesImageFormatEnum;

  @SpeakeasyMetadata()
  importManifestUrl?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * The volume.
 */
export class ImportInstanceResultConversionTaskImportInstanceVolumesVolume extends SpeakeasyBase {
  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * Describes an import volume task.
 */
export class ImportInstanceResultConversionTaskImportInstanceVolumes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  bytesConverted?: number;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  image?: ImportInstanceResultConversionTaskImportInstanceVolumesImage;

  @SpeakeasyMetadata()
  status?: string;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata()
  volume?: ImportInstanceResultConversionTaskImportInstanceVolumesVolume;
}

/**
 * If the task is for importing an instance, this contains information about the import instance task.
 */
export class ImportInstanceResultConversionTaskImportInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  platform?: ImportInstanceResultConversionTaskImportInstancePlatformEnum;

  @SpeakeasyMetadata({
    elemType: ImportInstanceResultConversionTaskImportInstanceVolumes,
  })
  volumes?: ImportInstanceResultConversionTaskImportInstanceVolumes[];
}

/**
 * The disk image format.
 */
export enum ImportInstanceResultConversionTaskImportVolumeImageFormatEnum {
  Vmdk = "VMDK",
  Raw = "RAW",
  Vhd = "VHD",
}

/**
 * The image.
 */
export class ImportInstanceResultConversionTaskImportVolumeImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  checksum?: string;

  @SpeakeasyMetadata()
  format?: ImportInstanceResultConversionTaskImportVolumeImageFormatEnum;

  @SpeakeasyMetadata()
  importManifestUrl?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * The volume.
 */
export class ImportInstanceResultConversionTaskImportVolumeVolume extends SpeakeasyBase {
  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * If the task is for importing a volume, this contains information about the import volume task.
 */
export class ImportInstanceResultConversionTaskImportVolume extends SpeakeasyBase {
  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  bytesConverted?: number;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  image?: ImportInstanceResultConversionTaskImportVolumeImage;

  @SpeakeasyMetadata()
  volume?: ImportInstanceResultConversionTaskImportVolumeVolume;
}

/**
 * The state of the conversion task.
 */
export enum ImportInstanceResultConversionTaskStateEnum {
  Active = "active",
  Cancelling = "cancelling",
  Cancelled = "cancelled",
  Completed = "completed",
}

/**
 * Describes a tag.
 */
export class ImportInstanceResultConversionTaskTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Information about the conversion task.
 */
export class ImportInstanceResultConversionTask extends SpeakeasyBase {
  @SpeakeasyMetadata()
  conversionTaskId?: string;

  @SpeakeasyMetadata()
  expirationTime?: string;

  @SpeakeasyMetadata()
  importInstance?: ImportInstanceResultConversionTaskImportInstance;

  @SpeakeasyMetadata()
  importVolume?: ImportInstanceResultConversionTaskImportVolume;

  @SpeakeasyMetadata()
  state?: ImportInstanceResultConversionTaskStateEnum;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata({ elemType: ImportInstanceResultConversionTaskTags })
  tags?: ImportInstanceResultConversionTaskTags[];
}

/**
 * Success
 */
export class ImportInstanceResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  conversionTask?: ImportInstanceResultConversionTask;
}
