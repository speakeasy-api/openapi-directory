// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum - Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
type GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum string

const (
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnumOutputSchemaUnspecified GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum = "OUTPUT_SCHEMA_UNSPECIFIED"
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnumBasicColumns            GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum = "BASIC_COLUMNS"
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnumGcsColumns              GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum = "GCS_COLUMNS"
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnumDatastoreColumns        GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum = "DATASTORE_COLUMNS"
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnumBigQueryColumns         GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum = "BIG_QUERY_COLUMNS"
	GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnumAllColumns              GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum = "ALL_COLUMNS"
)

func (e *GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OUTPUT_SCHEMA_UNSPECIFIED":
		fallthrough
	case "BASIC_COLUMNS":
		fallthrough
	case "GCS_COLUMNS":
		fallthrough
	case "DATASTORE_COLUMNS":
		fallthrough
	case "BIG_QUERY_COLUMNS":
		fallthrough
	case "ALL_COLUMNS":
		*e = GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum: %s", s)
	}
}

// GooglePrivacyDlpV2OutputStorageConfig - Cloud repository for storing output.
type GooglePrivacyDlpV2OutputStorageConfig struct {
	// Schema used for writing the findings for Inspect jobs. This field is only used for Inspect and must be unspecified for Risk jobs. Columns are derived from the `Finding` object. If appending to an existing table, any columns from the predefined schema that are missing will be added. No columns in the existing table will be deleted. If unspecified, then all available columns will be used for a new table or an (existing) table with no schema, and no changes will be made to an existing table that has a schema. Only for use with external storage.
	OutputSchema *GooglePrivacyDlpV2OutputStorageConfigOutputSchemaEnum `json:"outputSchema,omitempty"`
	// Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
	Table *GooglePrivacyDlpV2BigQueryTable `json:"table,omitempty"`
}
