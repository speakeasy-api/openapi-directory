/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DiaryBookingModel } from "./diarybookingmodel";
import { DiaryGuestDetails } from "./diaryguestdetails";
import { Expose, Type } from "class-transformer";

/**
 * Submission Model - Structure to submit the appointment details
 */
export class DiaryAppointmentDetails extends SpeakeasyBase {
  /**
   * Represents a viewing booking slot
   */
  @SpeakeasyMetadata({ data: "form, name=AllocationDetails;json=true" })
  @Expose({ name: "AllocationDetails" })
  @Type(() => DiaryBookingModel)
  allocationDetails?: DiaryBookingModel;

  /**
   * The Appointment Type ID
   */
  @SpeakeasyMetadata({ data: "form, name=AppointmentType" })
  @Expose({ name: "AppointmentType" })
  appointmentType?: string;

  /**
   * Additional appointment comments
   */
  @SpeakeasyMetadata({ data: "form, name=ExtraComments" })
  @Expose({ name: "ExtraComments" })
  extraComments?: string;

  /**
   * A collection of guests linked to the appointment. If none leave empty
   */
  @SpeakeasyMetadata({
    data: "form, name=Guests;json=true",
    elemType: DiaryGuestDetails,
  })
  @Expose({ name: "Guests" })
  @Type(() => DiaryGuestDetails)
  guests?: DiaryGuestDetails[];

  /**
   * The subject of the appointment
   */
  @SpeakeasyMetadata({ data: "form, name=Subject" })
  @Expose({ name: "Subject" })
  subject?: string;
}
