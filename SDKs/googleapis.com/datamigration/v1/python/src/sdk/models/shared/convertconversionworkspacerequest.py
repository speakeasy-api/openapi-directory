"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConvertConversionWorkspaceRequest:
    r"""Request message for 'ConvertConversionWorkspace' request."""
    
    auto_commit: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoCommit'), 'exclude': lambda f: f is None }})
    r"""Specifies whether the conversion workspace is to be committed automatically after the conversion."""  
    filter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filter'), 'exclude': lambda f: f is None }})
    r"""Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering."""  
    