// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum - Output only. Different password hash algorithms used in Identity Toolkit.
type GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum string

const (
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumHashAlgorithmUnspecified GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "HASH_ALGORITHM_UNSPECIFIED"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumHmacSha256               GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "HMAC_SHA256"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumHmacSha1                 GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "HMAC_SHA1"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumHmacMd5                  GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "HMAC_MD5"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumScrypt                   GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "SCRYPT"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumPbkdfSha1                GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "PBKDF_SHA1"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumMd5                      GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "MD5"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumHmacSha512               GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "HMAC_SHA512"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumSha1                     GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "SHA1"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumBcrypt                   GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "BCRYPT"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumPbkdf2Sha256             GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "PBKDF2_SHA256"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumSha256                   GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "SHA256"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumSha512                   GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "SHA512"
	GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnumStandardScrypt           GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum = "STANDARD_SCRYPT"
)

func (e GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum) ToPointer() *GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum {
	return &e
}

func (e *GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HASH_ALGORITHM_UNSPECIFIED":
		fallthrough
	case "HMAC_SHA256":
		fallthrough
	case "HMAC_SHA1":
		fallthrough
	case "HMAC_MD5":
		fallthrough
	case "SCRYPT":
		fallthrough
	case "PBKDF_SHA1":
		fallthrough
	case "MD5":
		fallthrough
	case "HMAC_SHA512":
		fallthrough
	case "SHA1":
		fallthrough
	case "BCRYPT":
		fallthrough
	case "PBKDF2_SHA256":
		fallthrough
	case "SHA256":
		fallthrough
	case "SHA512":
		fallthrough
	case "STANDARD_SCRYPT":
		*e = GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum: %v", v)
	}
}

// GoogleCloudIdentitytoolkitAdminV2HashConfig - History information of the hash algorithm and key. Different accounts' passwords may be generated by different version.
type GoogleCloudIdentitytoolkitAdminV2HashConfig struct {
	// Output only. Different password hash algorithms used in Identity Toolkit.
	Algorithm *GoogleCloudIdentitytoolkitAdminV2HashConfigAlgorithmEnum `json:"algorithm,omitempty"`
	// Output only. Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
	MemoryCost *int `json:"memoryCost,omitempty"`
	// Output only. How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
	Rounds *int `json:"rounds,omitempty"`
	// Output only. Non-printable character to be inserted between the salt and plain text password in base64.
	SaltSeparator *string `json:"saltSeparator,omitempty"`
	// Output only. Signer key in base64.
	SignerKey *string `json:"signerKey,omitempty"`
}
