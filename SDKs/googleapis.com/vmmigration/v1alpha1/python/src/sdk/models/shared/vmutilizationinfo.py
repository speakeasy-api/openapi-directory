"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import vmutilizationmetrics as shared_vmutilizationmetrics
from ..shared import vmwarevmdetails as shared_vmwarevmdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VMUtilizationInfo:
    r"""Utilization information of a single VM."""
    
    utilization: Optional[shared_vmutilizationmetrics.VMUtilizationMetrics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('utilization'), 'exclude': lambda f: f is None }})
    r"""Utilization metrics values for a single VM."""  
    vm_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmId'), 'exclude': lambda f: f is None }})
    r"""The VM's ID in the source."""  
    vmware_vm_details: Optional[shared_vmwarevmdetails.VmwareVMDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmwareVmDetails'), 'exclude': lambda f: f is None }})
    r"""VmwareVmDetails describes a VM in vCenter."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VMUtilizationInfoInput:
    r"""Utilization information of a single VM."""
    
    utilization: Optional[shared_vmutilizationmetrics.VMUtilizationMetrics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('utilization'), 'exclude': lambda f: f is None }})
    r"""Utilization metrics values for a single VM."""  
    vm_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmId'), 'exclude': lambda f: f is None }})
    r"""The VM's ID in the source."""  
    vmware_vm_details: Optional[shared_vmwarevmdetails.VmwareVMDetailsInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmwareVmDetails'), 'exclude': lambda f: f is None }})
    r"""VmwareVmDetails describes a VM in vCenter."""  
    