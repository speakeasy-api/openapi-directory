/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PackageSearchDTO - The PackageSearchDTO Class.
 * Contains relevant fields of PackageSearch DTO by masking actual Package entity's fields in application.
 *                
 */
public class PackageSearchDTO {
    /**
     * Active Status 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeStatus")
    public Boolean activeStatus;

    public PackageSearchDTO withActiveStatus(Boolean activeStatus) {
        this.activeStatus = activeStatus;
        return this;
    }
    
    /**
     * sum of addon fees.
     * incoming values for this filed will ignore.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addonFee")
    public Double addonFee;

    public PackageSearchDTO withAddonFee(Double addonFee) {
        this.addonFee = addonFee;
        return this;
    }
    
    /**
     * Boolean value to indicate wheather package is available in all the gyms.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applyForAllGyms")
    public Boolean applyForAllGyms;

    public PackageSearchDTO withApplyForAllGyms(Boolean applyForAllGyms) {
        this.applyForAllGyms = applyForAllGyms;
        return this;
    }
    
    /**
     * Range of period a member is bound to the contract if he/she choose this package.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bindingPeriod")
    public Integer bindingPeriod;

    public PackageSearchDTO withBindingPeriod(Integer bindingPeriod) {
        this.bindingPeriod = bindingPeriod;
        return this;
    }
    
    /**
     * Package created DateTime.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;

    public PackageSearchDTO withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * Package created user.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdUser")
    public String createdUser;

    public PackageSearchDTO withCreatedUser(String createdUser) {
        this.createdUser = createdUser;
        return this;
    }
    
    /**
     * Common descriptions about package.If there are more instructions can be stored as comma separated values.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public PackageSearchDTO withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * What are the facilities, features available for package.ex:- wifi, ACm etc.Can be stored as comma seperated values.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("features")
    public String features;

    public PackageSearchDTO withFeatures(String features) {
        this.features = features;
        return this;
    }
    
    /**
     * No of months gym member can come without payments.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("freeMonths")
    public Integer freeMonths;

    public PackageSearchDTO withFreeMonths(Integer freeMonths) {
        this.freeMonths = freeMonths;
        return this;
    }
    
    /**
     * Boolean value to indicate member can remove already added addons if he choose this package.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memberCanRemoveAddOns")
    public Boolean memberCanRemoveAddOns;

    public PackageSearchDTO withMemberCanRemoveAddOns(Boolean memberCanRemoveAddOns) {
        this.memberCanRemoveAddOns = memberCanRemoveAddOns;
        return this;
    }
    
    /**
     * Package last modified DateTime.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modifiedDate")
    public OffsetDateTime modifiedDate;

    public PackageSearchDTO withModifiedDate(OffsetDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
        return this;
    }
    
    /**
     * Package last modified user.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modifiedUser")
    public String modifiedUser;

    public PackageSearchDTO withModifiedUser(String modifiedUser) {
        this.modifiedUser = modifiedUser;
        return this;
    }
    
    /**
     * Monthly installment fee if package is not fixed visit.
     * addition of the servicefee and addon fees divided by binding period.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monthlyFee")
    public Double monthlyFee;

    public PackageSearchDTO withMonthlyFee(Double monthlyFee) {
        this.monthlyFee = monthlyFee;
        return this;
    }
    
    /**
     * No of visits for fixed package 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numberOfVisits")
    public Integer numberOfVisits;

    public PackageSearchDTO withNumberOfVisits(Integer numberOfVisits) {
        this.numberOfVisits = numberOfVisits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageId")
    public Integer packageId;

    public PackageSearchDTO withPackageId(Integer packageId) {
        this.packageId = packageId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageName")
    public String packageName;

    public PackageSearchDTO withPackageName(String packageName) {
        this.packageName = packageName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageNumber")
    public Integer packageNumber;

    public PackageSearchDTO withPackageNumber(Integer packageNumber) {
        this.packageNumber = packageNumber;
        return this;
    }
    
    /**
     * Package type can be either fixed visit or unlimited.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageType")
    public String packageType;

    public PackageSearchDTO withPackageType(String packageType) {
        this.packageType = packageType;
        return this;
    }
    
    /**
     * Registartion fee for the package at a gym.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationFee")
    public Double registrationFee;

    public PackageSearchDTO withRegistrationFee(Double registrationFee) {
        this.registrationFee = registrationFee;
        return this;
    }
    
    /**
     * total Service charge of the package for entire period.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceFee")
    public Double serviceFee;

    public PackageSearchDTO withServiceFee(Double serviceFee) {
        this.serviceFee = serviceFee;
        return this;
    }
    
    /**
     * Comma separated string values in case of need of maintain some labels kind of stuff relevant to the package.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String tags;

    public PackageSearchDTO withTags(String tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * total number of recode for particular search 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalCount")
    public Integer totalCount;

    public PackageSearchDTO withTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }
    
    /**
     * total price for the package including Addon fees, service fee and registration fee.
     * incoming values for this field will ignore.
     *             
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalPrice")
    public Double totalPrice;

    public PackageSearchDTO withTotalPrice(Double totalPrice) {
        this.totalPrice = totalPrice;
        return this;
    }
    
    public PackageSearchDTO(){}
}
