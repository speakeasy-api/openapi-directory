/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AppRestrictionsSchemaRestriction - A restriction in the App Restriction Schema represents a piece of configuration that may be pre-applied.
 */
public class AppRestrictionsSchemaRestriction {
    /**
     * A typed value for the restriction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultValue")
    public AppRestrictionsSchemaRestrictionRestrictionValue defaultValue;
    public AppRestrictionsSchemaRestriction withDefaultValue(AppRestrictionsSchemaRestrictionRestrictionValue defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }
    
    /**
     * A longer description of the restriction, giving more detail of what it affects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public AppRestrictionsSchemaRestriction withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * For choice or multiselect restrictions, the list of possible entries' human-readable names.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entry")
    public String[] entry;
    public AppRestrictionsSchemaRestriction withEntry(String[] entry) {
        this.entry = entry;
        return this;
    }
    
    /**
     * For choice or multiselect restrictions, the list of possible entries' machine-readable values. These values should be used in the configuration, either as a single string value for a choice restriction or in a stringArray for a multiselect restriction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entryValue")
    public String[] entryValue;
    public AppRestrictionsSchemaRestriction withEntryValue(String[] entryValue) {
        this.entryValue = entryValue;
        return this;
    }
    
    /**
     * The unique key that the product uses to identify the restriction, e.g. "com.google.android.gm.fieldname".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;
    public AppRestrictionsSchemaRestriction withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * For bundle or bundleArray restrictions, the list of nested restrictions. A bundle restriction is always nested within a bundleArray restriction, and a bundleArray restriction is at most two levels deep.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nestedRestriction")
    public AppRestrictionsSchemaRestriction[] nestedRestriction;
    public AppRestrictionsSchemaRestriction withNestedRestriction(AppRestrictionsSchemaRestriction[] nestedRestriction) {
        this.nestedRestriction = nestedRestriction;
        return this;
    }
    
    /**
     * The type of the restriction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restrictionType")
    public AppRestrictionsSchemaRestrictionRestrictionTypeEnum restrictionType;
    public AppRestrictionsSchemaRestriction withRestrictionType(AppRestrictionsSchemaRestrictionRestrictionTypeEnum restrictionType) {
        this.restrictionType = restrictionType;
        return this;
    }
    
    /**
     * The name of the restriction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public AppRestrictionsSchemaRestriction withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
