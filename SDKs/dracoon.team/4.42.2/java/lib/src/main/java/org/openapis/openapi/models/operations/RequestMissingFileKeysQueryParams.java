/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class RequestMissingFileKeysQueryParams {
    /**
     * File ID
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=file_id")
    public Long fileId;
    public RequestMissingFileKeysQueryParams withFileId(Long fileId) {
        this.fileId = fileId;
        return this;
    }
    
    /**
     * Range limit.
     * 
     * Maximum 500.
     * 
     *  For more results please use paging (`offset` + `limit`).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;
    public RequestMissingFileKeysQueryParams withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Range offset
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;
    public RequestMissingFileKeysQueryParams withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Room ID
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=room_id")
    public Long roomId;
    public RequestMissingFileKeysQueryParams withRoomId(Long roomId) {
        this.roomId = roomId;
        return this;
    }
    
    /**
     * Determines which key should be used (NEW)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=use_key")
    public RequestMissingFileKeysUseKeyEnum useKey;
    public RequestMissingFileKeysQueryParams withUseKey(RequestMissingFileKeysUseKeyEnum useKey) {
        this.useKey = useKey;
        return this;
    }
    
    /**
     * User ID
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=user_id")
    public Long userId;
    public RequestMissingFileKeysQueryParams withUserId(Long userId) {
        this.userId = userId;
        return this;
    }
    
}
