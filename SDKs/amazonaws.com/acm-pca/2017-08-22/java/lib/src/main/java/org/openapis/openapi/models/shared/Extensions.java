/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Extensions - Contains X.509 extension information for a certificate.
 */
public class Extensions {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CertificatePolicies")
    public PolicyInformation[] certificatePolicies;

    public Extensions withCertificatePolicies(PolicyInformation[] certificatePolicies) {
        this.certificatePolicies = certificatePolicies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomExtensions")
    public CustomExtension[] customExtensions;

    public Extensions withCustomExtensions(CustomExtension[] customExtensions) {
        this.customExtensions = customExtensions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExtendedKeyUsage")
    public ExtendedKeyUsage[] extendedKeyUsage;

    public Extensions withExtendedKeyUsage(ExtendedKeyUsage[] extendedKeyUsage) {
        this.extendedKeyUsage = extendedKeyUsage;
        return this;
    }
    
    /**
     * Defines one or more purposes for which the key contained in the certificate can be used. Default value for each option is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KeyUsage")
    public KeyUsage keyUsage;

    public Extensions withKeyUsage(KeyUsage keyUsage) {
        this.keyUsage = keyUsage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubjectAlternativeNames")
    public GeneralName[] subjectAlternativeNames;

    public Extensions withSubjectAlternativeNames(GeneralName[] subjectAlternativeNames) {
        this.subjectAlternativeNames = subjectAlternativeNames;
        return this;
    }
    
    public Extensions(){}
}
