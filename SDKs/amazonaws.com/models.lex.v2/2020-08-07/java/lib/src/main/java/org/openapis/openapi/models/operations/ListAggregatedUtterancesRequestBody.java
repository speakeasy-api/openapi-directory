/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListAggregatedUtterancesRequestBody {
    /**
     * Provides parameters for setting the time window and duration for aggregating utterance data.
     */
    @JsonProperty("aggregationDuration")
    public ListAggregatedUtterancesRequestBodyAggregationDuration aggregationDuration;

    public ListAggregatedUtterancesRequestBody withAggregationDuration(ListAggregatedUtterancesRequestBodyAggregationDuration aggregationDuration) {
        this.aggregationDuration = aggregationDuration;
        return this;
    }
    
    /**
     * The identifier of the bot alias associated with this request. If you specify the bot alias, you can't specify the bot version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("botAliasId")
    public String botAliasId;

    public ListAggregatedUtterancesRequestBody withBotAliasId(String botAliasId) {
        this.botAliasId = botAliasId;
        return this;
    }
    
    /**
     * The identifier of the bot version associated with this request. If you specify the bot version, you can't specify the bot alias.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("botVersion")
    public String botVersion;

    public ListAggregatedUtterancesRequestBody withBotVersion(String botVersion) {
        this.botVersion = botVersion;
        return this;
    }
    
    /**
     * Provides the specification of a filter used to limit the utterances in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filters")
    public org.openapis.openapi.models.shared.AggregatedUtterancesFilter[] filters;

    public ListAggregatedUtterancesRequestBody withFilters(org.openapis.openapi.models.shared.AggregatedUtterancesFilter[] filters) {
        this.filters = filters;
        return this;
    }
    
    /**
     * The identifier of the language and locale where the utterances were collected. For more information, see &lt;a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html"&gt;Supported languages&lt;/a&gt;.
     */
    @JsonProperty("localeId")
    public String localeId;

    public ListAggregatedUtterancesRequestBody withLocaleId(String localeId) {
        this.localeId = localeId;
        return this;
    }
    
    /**
     * The maximum number of utterances to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned. If you don't specify the &lt;code&gt;maxResults&lt;/code&gt; parameter, 1,000 results are returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxResults")
    public Long maxResults;

    public ListAggregatedUtterancesRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * If the response from the &lt;code&gt;ListAggregatedUtterances&lt;/code&gt; operation contains more results that specified in the &lt;code&gt;maxResults&lt;/code&gt; parameter, a token is returned in the response. Use that token in the &lt;code&gt;nextToken&lt;/code&gt; parameter to return the next page of results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextToken")
    public String nextToken;

    public ListAggregatedUtterancesRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * Specifies attributes for sorting a list of utterances.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortBy")
    public ListAggregatedUtterancesRequestBodySortBy sortBy;

    public ListAggregatedUtterancesRequestBody withSortBy(ListAggregatedUtterancesRequestBodySortBy sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    public ListAggregatedUtterancesRequestBody(@JsonProperty("aggregationDuration") ListAggregatedUtterancesRequestBodyAggregationDuration aggregationDuration, @JsonProperty("localeId") String localeId) {
        this.aggregationDuration = aggregationDuration;
        this.localeId = localeId;
  }
}
