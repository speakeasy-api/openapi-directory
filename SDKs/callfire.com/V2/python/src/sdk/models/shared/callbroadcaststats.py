"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CallBroadcastStats:
    r"""~"""
    
    answering_machine_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answeringMachineCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    billed_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billedAmount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    billed_duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billedDuration'), 'exclude': lambda f: f is None }})
    r"""~"""  
    busy_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('busyCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    calls_attempted: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callsAttempted'), 'exclude': lambda f: f is None }})
    r"""~"""  
    calls_awaiting_redial: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callsAwaitingRedial'), 'exclude': lambda f: f is None }})
    r"""~"""  
    calls_duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callsDuration'), 'exclude': lambda f: f is None }})
    r"""~"""  
    calls_live_answer: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callsLiveAnswer'), 'exclude': lambda f: f is None }})
    r"""~"""  
    calls_placed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callsPlaced'), 'exclude': lambda f: f is None }})
    r"""~"""  
    calls_remaining: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callsRemaining'), 'exclude': lambda f: f is None }})
    r"""~"""  
    dialed_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dialedCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    do_not_call_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doNotCallCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    error_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    live_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('liveCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    misc_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('miscCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    no_answer_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('noAnswerCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    remaining_outbound_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remainingOutboundCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    response_rate_percent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseRatePercent'), 'exclude': lambda f: f is None }})
    r"""~"""  
    total_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    total_outbound_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalOutboundCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    transfer_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferCount'), 'exclude': lambda f: f is None }})
    r"""~"""  
    