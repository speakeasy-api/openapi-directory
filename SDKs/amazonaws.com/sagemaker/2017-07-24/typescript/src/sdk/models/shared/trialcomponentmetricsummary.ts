/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * A summary of the metrics of a trial component.
 */
export class TrialComponentMetricSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Avg" })
  avg?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Count" })
  count?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Last" })
  last?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Max" })
  max?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MetricName" })
  metricName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Min" })
  min?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceArn" })
  sourceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StdDev" })
  stdDev?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeStamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timeStamp?: Date;
}
