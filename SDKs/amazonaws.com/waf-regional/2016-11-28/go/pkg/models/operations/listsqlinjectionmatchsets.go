// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListSQLInjectionMatchSetsXAmzTargetEnum
type ListSQLInjectionMatchSetsXAmzTargetEnum string

const (
	ListSQLInjectionMatchSetsXAmzTargetEnumAwswafRegional20161128ListSQLInjectionMatchSets ListSQLInjectionMatchSetsXAmzTargetEnum = "AWSWAF_Regional_20161128.ListSqlInjectionMatchSets"
)

func (e ListSQLInjectionMatchSetsXAmzTargetEnum) ToPointer() *ListSQLInjectionMatchSetsXAmzTargetEnum {
	return &e
}

func (e *ListSQLInjectionMatchSetsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSWAF_Regional_20161128.ListSqlInjectionMatchSets":
		*e = ListSQLInjectionMatchSetsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSQLInjectionMatchSetsXAmzTargetEnum: %v", v)
	}
}

type ListSQLInjectionMatchSetsRequest struct {
	ListSQLInjectionMatchSetsRequest shared.ListSQLInjectionMatchSetsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       ListSQLInjectionMatchSetsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListSQLInjectionMatchSetsResponse struct {
	ContentType string
	// Success
	ListSQLInjectionMatchSetsResponse *shared.ListSQLInjectionMatchSetsResponse
	StatusCode                        int
	RawResponse                       *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
}
