/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpacesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  gmaAuth: string;
}

export class PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpacesRequestBodyLogo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Content64Encoded" })
  content64Encoded?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;
}

export enum PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpacesRequestBodyTypeEnum {
  Enterprise = "enterprise",
  Company = "company",
  Association = "association",
}

/**
 * Space to add (except private)
 */
export class PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpacesRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Logo" })
  @Type(
    () =>
      PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpacesRequestBodyLogo
  )
  logo?: PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpacesRequestBodyLogo;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateSpaceId" })
  templateSpaceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpacesRequestBodyTypeEnum;
}

export class PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpacesRequest extends SpeakeasyBase {
  /**
   * Space to add (except private)
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpacesRequestBody;

  /**
   * Id of the folder customer
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=folderId",
  })
  folderId: string;

  /**
   * Id of the group
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the person customer
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=personId",
  })
  personId: string;

  /**
   * Id of the company space which contains the customer folder
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

/**
 * Id of space created
 */
export class PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpaces201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;
}

export class PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpacesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Id of space created
   */
  @SpeakeasyMetadata()
  postBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpaces201ApplicationJSONObject?: PostBusinessGroupsIdSpacesSpaceIdLegalEntitiesPersonIdCustomersFolderIdSpaces201ApplicationJSON;
}
