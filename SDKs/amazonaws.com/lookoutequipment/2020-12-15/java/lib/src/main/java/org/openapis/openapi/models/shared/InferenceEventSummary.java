/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * InferenceEventSummary - Contains information about the specific inference event, including start and end time, diagnostics information, event duration and so on.
 */
public class InferenceEventSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Diagnostics")
    public String diagnostics;
    public InferenceEventSummary withDiagnostics(String diagnostics) {
        this.diagnostics = diagnostics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EventDurationInSeconds")
    public Long eventDurationInSeconds;
    public InferenceEventSummary withEventDurationInSeconds(Long eventDurationInSeconds) {
        this.eventDurationInSeconds = eventDurationInSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EventEndTime")
    public OffsetDateTime eventEndTime;
    public InferenceEventSummary withEventEndTime(OffsetDateTime eventEndTime) {
        this.eventEndTime = eventEndTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EventStartTime")
    public OffsetDateTime eventStartTime;
    public InferenceEventSummary withEventStartTime(OffsetDateTime eventStartTime) {
        this.eventStartTime = eventStartTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InferenceSchedulerArn")
    public String inferenceSchedulerArn;
    public InferenceEventSummary withInferenceSchedulerArn(String inferenceSchedulerArn) {
        this.inferenceSchedulerArn = inferenceSchedulerArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InferenceSchedulerName")
    public String inferenceSchedulerName;
    public InferenceEventSummary withInferenceSchedulerName(String inferenceSchedulerName) {
        this.inferenceSchedulerName = inferenceSchedulerName;
        return this;
    }
    
}
