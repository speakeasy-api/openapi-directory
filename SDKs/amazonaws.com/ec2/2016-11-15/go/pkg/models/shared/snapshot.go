// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// SnapshotStateEnum - The snapshot state.
type SnapshotStateEnum string

const (
	SnapshotStateEnumPending     SnapshotStateEnum = "pending"
	SnapshotStateEnumCompleted   SnapshotStateEnum = "completed"
	SnapshotStateEnumError       SnapshotStateEnum = "error"
	SnapshotStateEnumRecoverable SnapshotStateEnum = "recoverable"
	SnapshotStateEnumRecovering  SnapshotStateEnum = "recovering"
)

func (e SnapshotStateEnum) ToPointer() *SnapshotStateEnum {
	return &e
}

func (e *SnapshotStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "completed":
		fallthrough
	case "error":
		fallthrough
	case "recoverable":
		fallthrough
	case "recovering":
		*e = SnapshotStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SnapshotStateEnum: %v", v)
	}
}

// SnapshotStorageTierEnum - The storage tier in which the snapshot is stored. <code>standard</code> indicates that the snapshot is stored in the standard snapshot storage tier and that it is ready for use. <code>archive</code> indicates that the snapshot is currently archived and that it must be restored before it can be used.
type SnapshotStorageTierEnum string

const (
	SnapshotStorageTierEnumArchive  SnapshotStorageTierEnum = "archive"
	SnapshotStorageTierEnumStandard SnapshotStorageTierEnum = "standard"
)

func (e SnapshotStorageTierEnum) ToPointer() *SnapshotStorageTierEnum {
	return &e
}

func (e *SnapshotStorageTierEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "archive":
		fallthrough
	case "standard":
		*e = SnapshotStorageTierEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SnapshotStorageTierEnum: %v", v)
	}
}

// SnapshotTags - Describes a tag.
type SnapshotTags struct {
	Key   *string
	Value *string
}

// Snapshot - Describes a snapshot.
type Snapshot struct {
	DataEncryptionKeyID *string
	Description         *string
	Encrypted           *bool
	KmsKeyID            *string
	OutpostArn          *string
	OwnerAlias          *string
	OwnerID             *string
	Progress            *string
	RestoreExpiryTime   *time.Time
	SnapshotID          *string
	StartTime           *time.Time
	State               *SnapshotStateEnum
	StateMessage        *string
	StorageTier         *SnapshotStorageTierEnum
	Tags                []SnapshotTags
	VolumeID            *string
	VolumeSize          *int64
}
