// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SpaceStatusEnum string

const (
	SpaceStatusEnumDeleting     SpaceStatusEnum = "Deleting"
	SpaceStatusEnumFailed       SpaceStatusEnum = "Failed"
	SpaceStatusEnumInService    SpaceStatusEnum = "InService"
	SpaceStatusEnumPending      SpaceStatusEnum = "Pending"
	SpaceStatusEnumUpdating     SpaceStatusEnum = "Updating"
	SpaceStatusEnumUpdateFailed SpaceStatusEnum = "Update_Failed"
	SpaceStatusEnumDeleteFailed SpaceStatusEnum = "Delete_Failed"
)

func (e SpaceStatusEnum) ToPointer() *SpaceStatusEnum {
	return &e
}

func (e *SpaceStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Deleting":
		fallthrough
	case "Failed":
		fallthrough
	case "InService":
		fallthrough
	case "Pending":
		fallthrough
	case "Updating":
		fallthrough
	case "Update_Failed":
		fallthrough
	case "Delete_Failed":
		*e = SpaceStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SpaceStatusEnum: %v", v)
	}
}
