<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * UpdateNetworkWirelessSsidRequestBodyLocalRadiusCertificateAuthentication - The current setting for certificate verification.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class UpdateNetworkWirelessSsidRequestBodyLocalRadiusCertificateAuthentication
{
    /**
     * The Client CA Certificate used to sign the client certificate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidRequestBodyLocalRadiusCertificateAuthenticationClientRootCaCertificate $clientRootCaCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientRootCaCertificate')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidRequestBodyLocalRadiusCertificateAuthenticationClientRootCaCertificate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidRequestBodyLocalRadiusCertificateAuthenticationClientRootCaCertificate $clientRootCaCertificate = null;
    
    /**
     * Whether or not to use EAP-TLS certificate-based authentication to validate wireless clients.
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * (Optional) The URL of the OCSP responder to verify client certificate status.
     * 
     * @var ?string $ocspResponderUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('ocspResponderUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ocspResponderUrl = null;
    
    /**
     * Whether or not to verify the certificate with LDAP.
     * 
     * @var ?bool $useLdap
     */
	#[\JMS\Serializer\Annotation\SerializedName('useLdap')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useLdap = null;
    
    /**
     * Whether or not to verify the certificate with OCSP.
     * 
     * @var ?bool $useOcsp
     */
	#[\JMS\Serializer\Annotation\SerializedName('useOcsp')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useOcsp = null;
    
	public function __construct()
	{
		$this->clientRootCaCertificate = null;
		$this->enabled = null;
		$this->ocspResponderUrl = null;
		$this->useLdap = null;
		$this->useOcsp = null;
	}
}
