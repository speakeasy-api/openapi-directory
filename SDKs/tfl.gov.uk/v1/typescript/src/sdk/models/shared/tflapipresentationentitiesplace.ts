/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TflApiPresentationEntitiesAdditionalProperties } from "./tflapipresentationentitiesadditionalproperties";
import { Expose, Type } from "class-transformer";

/**
 * OK
 */
export class TflApiPresentationEntitiesPlace extends SpeakeasyBase {
  /**
   * A bag of additional key/value pairs with extra information about this place.
   */
  @SpeakeasyMetadata({
    elemType: TflApiPresentationEntitiesAdditionalProperties,
  })
  @Expose({ name: "additionalProperties" })
  @Type(() => TflApiPresentationEntitiesAdditionalProperties)
  additionalProperties?: TflApiPresentationEntitiesAdditionalProperties[];

  @SpeakeasyMetadata({ elemType: TflApiPresentationEntitiesPlace })
  @Expose({ name: "children" })
  @Type(() => TflApiPresentationEntitiesPlace)
  children?: TflApiPresentationEntitiesPlace[];

  @SpeakeasyMetadata()
  @Expose({ name: "childrenUrls" })
  childrenUrls?: string[];

  /**
   * A human readable name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commonName" })
  commonName?: string;

  /**
   * The distance of the place from its search point, if this is the result
   *
   * @remarks
   *             of a geographical search, otherwise zero.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distance" })
  distance?: number;

  /**
   * A unique identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * WGS84 latitude of the location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lat" })
  lat?: number;

  /**
   * WGS84 longitude of the location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lon" })
  lon?: number;

  /**
   * The type of Place. See /Place/Meta/placeTypes for possible values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "placeType" })
  placeType?: string;

  /**
   * The unique location of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
