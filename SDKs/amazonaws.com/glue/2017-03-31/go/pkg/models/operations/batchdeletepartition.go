// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// BatchDeletePartitionXAmzTargetEnum
type BatchDeletePartitionXAmzTargetEnum string

const (
	BatchDeletePartitionXAmzTargetEnumAwsGlueBatchDeletePartition BatchDeletePartitionXAmzTargetEnum = "AWSGlue.BatchDeletePartition"
)

func (e BatchDeletePartitionXAmzTargetEnum) ToPointer() *BatchDeletePartitionXAmzTargetEnum {
	return &e
}

func (e *BatchDeletePartitionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.BatchDeletePartition":
		*e = BatchDeletePartitionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchDeletePartitionXAmzTargetEnum: %v", v)
	}
}

type BatchDeletePartitionRequest struct {
	BatchDeletePartitionRequest shared.BatchDeletePartitionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  BatchDeletePartitionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type BatchDeletePartitionResponse struct {
	// Success
	BatchDeletePartitionResponse *shared.BatchDeletePartitionResponse
	ContentType                  string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
