/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Money } from "./money";
import { Expose, Type } from "class-transformer";

/**
 * Represents a tax being returned that applies to one or more return line items in an order.
 *
 * @remarks
 *
 * Fixed-amount, order-scoped taxes are distributed across all non-zero return line item totals.
 * The amount distributed to each return line item is relative to that itemâ€™s contribution to the
 * order subtotal.
 */
export class OrderReturnTax extends SpeakeasyBase {
  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "applied_money" })
  @Type(() => Money)
  appliedMoney?: Money;

  /**
   * The catalog object ID referencing [CatalogTax](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogTax).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "catalog_object_id" })
  catalogObjectId?: string;

  /**
   * The version of the catalog object that this tax references.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "catalog_version" })
  catalogVersion?: number;

  /**
   * The tax's name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The percentage of the tax, as a string representation of a decimal number.
   *
   * @remarks
   * For example, a value of `"7.25"` corresponds to a percentage of 7.25%.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "percentage" })
  percentage?: string;

  /**
   * Indicates the level at which the `OrderReturnTax` applies. For `ORDER` scoped
   *
   * @remarks
   * taxes, Square generates references in `applied_taxes` on all
   * `OrderReturnLineItem`s. For `LINE_ITEM` scoped taxes, the tax is only applied to
   * `OrderReturnLineItem`s with references in their `applied_discounts` field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * The tax `uid` from the order that contains the original tax charge.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_tax_uid" })
  sourceTaxUid?: string;

  /**
   * Indicates the calculation method used to apply the tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * A unique ID that identifies the returned tax only within this order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;
}
