"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import experimentreport as shared_experimentreport
from ..shared import experimentresultsdata as shared_experimentresultsdata
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetExperimentResultsResponse:
    r"""Success"""
    
    details: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('details'), 'exclude': lambda f: f is None }})  
    reports: Optional[list[shared_experimentreport.ExperimentReport]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reports'), 'exclude': lambda f: f is None }})  
    results_data: Optional[list[shared_experimentresultsdata.ExperimentResultsData]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultsData'), 'exclude': lambda f: f is None }})  
    timestamps: Optional[list[datetime]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamps'), 'exclude': lambda f: f is None }})  
    