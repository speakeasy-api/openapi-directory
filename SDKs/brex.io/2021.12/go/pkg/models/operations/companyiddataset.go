// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CompanyIDDatasetSecurity struct {
	UserKey shared.SchemeUserKey `security:"scheme,type=apiKey,subtype=header"`
}

// CompanyIDDatasetDatasetEnum - company master data by id
type CompanyIDDatasetDatasetEnum string

const (
	CompanyIDDatasetDatasetEnumUnknown CompanyIDDatasetDatasetEnum = ""
	CompanyIDDatasetDatasetEnumMini    CompanyIDDatasetDatasetEnum = "mini"
	CompanyIDDatasetDatasetEnumMaster  CompanyIDDatasetDatasetEnum = "master"
	CompanyIDDatasetDatasetEnumFull    CompanyIDDatasetDatasetEnum = "full"
	CompanyIDDatasetDatasetEnumRefresh CompanyIDDatasetDatasetEnum = "refresh"
)

func (e *CompanyIDDatasetDatasetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "":
		fallthrough
	case "mini":
		fallthrough
	case "master":
		fallthrough
	case "full":
		fallthrough
	case "refresh":
		*e = CompanyIDDatasetDatasetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CompanyIDDatasetDatasetEnum: %s", s)
	}
}

type CompanyIDDatasetPathParams struct {
	// company master data by id
	Dataset CompanyIDDatasetDatasetEnum `pathParam:"style=simple,explode=false,name=dataset"`
	// company master data by id
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// CompanyIDDatasetLangEnum - Optional data translation (only available in limited jurisdictions)
type CompanyIDDatasetLangEnum string

const (
	CompanyIDDatasetLangEnumUnknown CompanyIDDatasetLangEnum = ""
	CompanyIDDatasetLangEnumEn      CompanyIDDatasetLangEnum = "EN"
	CompanyIDDatasetLangEnumEs      CompanyIDDatasetLangEnum = "ES"
	CompanyIDDatasetLangEnumFr      CompanyIDDatasetLangEnum = "FR"
)

func (e *CompanyIDDatasetLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "":
		fallthrough
	case "EN":
		fallthrough
	case "ES":
		fallthrough
	case "FR":
		*e = CompanyIDDatasetLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CompanyIDDatasetLangEnum: %s", s)
	}
}

type CompanyIDDatasetQueryParams struct {
	// Try to retrieve additional stock information for this company. (Only available on refresh)
	CheckStockListing *bool `queryParam:"style=form,explode=true,name=check_stock_listing"`
	// Optional data translation (only available in limited jurisdictions)
	Lang *CompanyIDDatasetLangEnum `queryParam:"style=form,explode=true,name=lang"`
}

type CompanyIDDatasetRequest struct {
	PathParams  CompanyIDDatasetPathParams
	QueryParams CompanyIDDatasetQueryParams
	Security    CompanyIDDatasetSecurity
}

// CompanyIDDatasetDefaultApplicationJSON - Detailed information about the error
type CompanyIDDatasetDefaultApplicationJSON struct {
	Code    int     `json:"code"`
	Fault   *string `json:"fault,omitempty"`
	Message string  `json:"message"`
	Tag     string  `json:"tag"`
}

type CompanyIDDatasetResponse struct {
	// Detailed information about the error
	CompanyIDDatasetDefaultApplicationJSONObject                                                                           *CompanyIDDatasetDefaultApplicationJSON
	ContentType                                                                                                            string
	StatusCode                                                                                                             int
	RawResponse                                                                                                            *http.Response
	Oneapi1v11company1deepsearch1lei1Percent7BnumberPercent7DGetResponses200ContentApplication1jsonSchemaPropertiesCompany *shared.Oneapi1v11company1deepsearch1lei1Percent7BnumberPercent7DGetResponses200ContentApplication1jsonSchemaPropertiesCompany
}
