// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BulkCallResponseMessageEnum - Response message
type BulkCallResponseMessageEnum string

const (
	BulkCallResponseMessageEnumBulkCallsRequestExecuted                    BulkCallResponseMessageEnum = "BulkCalls Request Executed"
	BulkCallResponseMessageEnumMandatoryParametersMissing                  BulkCallResponseMessageEnum = "Mandatory Parameters Missing"
	BulkCallResponseMessageEnumThisDelimiterIsNotAllowed                   BulkCallResponseMessageEnum = "This Delimiter is not allowed"
	BulkCallResponseMessageEnumBulkCallsShouldBeUsedForAtLeast2Numbers     BulkCallResponseMessageEnum = "BulkCalls should be used for at least 2 numbers"
	BulkCallResponseMessageEnumToParameterLengthDoesNotMatchGatewaysLength BulkCallResponseMessageEnum = "'To' parameter length does not match 'Gateways' Length"
	BulkCallResponseMessageEnumAnswerURLIsNotValid                         BulkCallResponseMessageEnum = "AnswerUrl is not Valid"
	BulkCallResponseMessageEnumHangupURLIsNotValid                         BulkCallResponseMessageEnum = "HangupUrl is not Valid"
	BulkCallResponseMessageEnumRingURLIsNotValid                           BulkCallResponseMessageEnum = "RingUrl is not Valid"
	BulkCallResponseMessageEnumUnknownCoreUUID                             BulkCallResponseMessageEnum = "Unknown Core UUID"
)

func (e *BulkCallResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BulkCalls Request Executed":
		fallthrough
	case "Mandatory Parameters Missing":
		fallthrough
	case "This Delimiter is not allowed":
		fallthrough
	case "BulkCalls should be used for at least 2 numbers":
		fallthrough
	case "'To' parameter length does not match 'Gateways' Length":
		fallthrough
	case "AnswerUrl is not Valid":
		fallthrough
	case "HangupUrl is not Valid":
		fallthrough
	case "RingUrl is not Valid":
		fallthrough
	case "Unknown Core UUID":
		*e = BulkCallResponseMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BulkCallResponseMessageEnum: %s", s)
	}
}

// BulkCallResponse - Response
type BulkCallResponse struct {
	// Response message
	Message BulkCallResponseMessageEnum `json:"Message"`
	// Unique identifiers of each Call request (UUIDv4)
	RequestUUID []string `json:"RequestUUID"`
	// API server which handled this request (an Eqivo extension)
	RestAPIServer string `json:"RestApiServer"`
	// Whether the request was successful or not
	Success bool `json:"Success"`
}
