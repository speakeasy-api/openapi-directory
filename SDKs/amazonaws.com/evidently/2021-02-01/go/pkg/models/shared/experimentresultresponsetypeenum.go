// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExperimentResultResponseTypeEnum string

const (
	ExperimentResultResponseTypeEnumMean                         ExperimentResultResponseTypeEnum = "Mean"
	ExperimentResultResponseTypeEnumTreatmentEffect              ExperimentResultResponseTypeEnum = "TreatmentEffect"
	ExperimentResultResponseTypeEnumConfidenceIntervalUpperBound ExperimentResultResponseTypeEnum = "ConfidenceIntervalUpperBound"
	ExperimentResultResponseTypeEnumConfidenceIntervalLowerBound ExperimentResultResponseTypeEnum = "ConfidenceIntervalLowerBound"
	ExperimentResultResponseTypeEnumPValue                       ExperimentResultResponseTypeEnum = "PValue"
)

func (e *ExperimentResultResponseTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Mean":
		fallthrough
	case "TreatmentEffect":
		fallthrough
	case "ConfidenceIntervalUpperBound":
		fallthrough
	case "ConfidenceIntervalLowerBound":
		fallthrough
	case "PValue":
		*e = ExperimentResultResponseTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExperimentResultResponseTypeEnum: %s", s)
	}
}
