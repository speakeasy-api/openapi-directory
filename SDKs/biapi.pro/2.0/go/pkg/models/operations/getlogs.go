// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type GetLogsQueryParams struct {
	// UUID of a connector
	ConnectorUUID *string `queryParam:"style=form,explode=true,name=connector_uuid"`
	// connections log error filter
	Error  *string `queryParam:"style=form,explode=true,name=error"`
	Expand *string `queryParam:"style=form,explode=true,name=expand"`
	// ID of a connection
	IDConnection *int64 `queryParam:"style=form,explode=true,name=id_connection"`
	// ID of a connector
	IDConnector *int64 `queryParam:"style=form,explode=true,name=id_connector"`
	// filter "id" of logs, maximum id to return
	IDMax *int64 `queryParam:"style=form,explode=true,name=id_max"`
	// ID of a source
	IDSource *int64 `queryParam:"style=form,explode=true,name=id_source"`
	// ID of a user
	IDUser *int64 `queryParam:"style=form,explode=true,name=id_user"`
	// limit number of results
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// maximum date
	MaxDate *types.Date `queryParam:"style=form,explode=true,name=max_date"`
	// minimal date
	MinDate *types.Date `queryParam:"style=form,explode=true,name=min_date"`
	// offset of first result
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// period to group logs
	Period *string `queryParam:"style=form,explode=true,name=period"`
}

type GetLogsRequest struct {
	QueryParams GetLogsQueryParams
}

// GetLogs200ApplicationJSON - connectionlogs
type GetLogs200ApplicationJSON struct {
	Connectionlogs []shared.ConnectionLog `json:"connectionlogs"`
	// total number of results
	Total *float64 `json:"total,omitempty"`
}

type GetLogsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// connectionlogs
	GetLogs200ApplicationJSONObject *GetLogs200ApplicationJSON
}
