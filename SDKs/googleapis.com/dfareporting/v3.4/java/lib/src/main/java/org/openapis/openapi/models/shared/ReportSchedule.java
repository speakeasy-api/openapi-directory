/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * ReportSchedule - The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the relative date range is not "TODAY".
 */
public class ReportSchedule {
    /**
     * Whether the schedule is active or not. Must be set to either true or false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;

    public ReportSchedule withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * Defines every how many days, weeks or months the report should be run. Needs to be set when "repeats" is either "DAILY", "WEEKLY" or "MONTHLY".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("every")
    public Integer every;

    public ReportSchedule withEvery(Integer every) {
        this.every = every;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("expirationDate")
    public LocalDate expirationDate;

    public ReportSchedule withExpirationDate(LocalDate expirationDate) {
        this.expirationDate = expirationDate;
        return this;
    }
    
    /**
     * The interval for which the report is repeated. Note: - "DAILY" also requires field "every" to be set. - "WEEKLY" also requires fields "every" and "repeatsOnWeekDays" to be set. - "MONTHLY" also requires fields "every" and "runsOnDayOfMonth" to be set. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repeats")
    public String repeats;

    public ReportSchedule withRepeats(String repeats) {
        this.repeats = repeats;
        return this;
    }
    
    /**
     * List of week days "WEEKLY" on which scheduled reports should run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repeatsOnWeekDays")
    public ReportScheduleRepeatsOnWeekDaysEnum[] repeatsOnWeekDays;

    public ReportSchedule withRepeatsOnWeekDays(ReportScheduleRepeatsOnWeekDaysEnum[] repeatsOnWeekDays) {
        this.repeatsOnWeekDays = repeatsOnWeekDays;
        return this;
    }
    
    /**
     * Enum to define for "MONTHLY" scheduled reports whether reports should be repeated on the same day of the month as "startDate" or the same day of the week of the month. Example: If 'startDate' is Monday, April 2nd 2012 (2012-04-02), "DAY_OF_MONTH" would run subsequent reports on the 2nd of every Month, and "WEEK_OF_MONTH" would run subsequent reports on the first Monday of the month.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runsOnDayOfMonth")
    public ReportScheduleRunsOnDayOfMonthEnum runsOnDayOfMonth;

    public ReportSchedule withRunsOnDayOfMonth(ReportScheduleRunsOnDayOfMonthEnum runsOnDayOfMonth) {
        this.runsOnDayOfMonth = runsOnDayOfMonth;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("startDate")
    public LocalDate startDate;

    public ReportSchedule withStartDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }
    
    public ReportSchedule(){}
}
