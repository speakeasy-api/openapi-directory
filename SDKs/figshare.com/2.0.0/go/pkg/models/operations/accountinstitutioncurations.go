// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AccountInstitutionCurationsSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// AccountInstitutionCurationsStatusEnum - Filter by the status of the review
type AccountInstitutionCurationsStatusEnum string

const (
	AccountInstitutionCurationsStatusEnumPending  AccountInstitutionCurationsStatusEnum = "pending"
	AccountInstitutionCurationsStatusEnumApproved AccountInstitutionCurationsStatusEnum = "approved"
	AccountInstitutionCurationsStatusEnumRejected AccountInstitutionCurationsStatusEnum = "rejected"
	AccountInstitutionCurationsStatusEnumClosed   AccountInstitutionCurationsStatusEnum = "closed"
)

func (e *AccountInstitutionCurationsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "approved":
		fallthrough
	case "rejected":
		fallthrough
	case "closed":
		*e = AccountInstitutionCurationsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountInstitutionCurationsStatusEnum: %s", s)
	}
}

type AccountInstitutionCurationsRequest struct {
	// Retrieve the reviews for this article
	ArticleID *int64 `queryParam:"style=form,explode=true,name=article_id"`
	// Filter by the group ID
	GroupID *int64 `queryParam:"style=form,explode=true,name=group_id"`
	// Number of results included on a page. Used for pagination with query
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Where to start the listing(the offset of the first result). Used for pagination with limit
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Filter by the status of the review
	Status *AccountInstitutionCurationsStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type AccountInstitutionCurationsResponse struct {
	ContentType string
	// OK. A list of curation reviews.
	Curation *shared.Curation
	// Forbidden
	ErrorMessage *shared.ErrorMessage
	StatusCode   int
	RawResponse  *http.Response
}
