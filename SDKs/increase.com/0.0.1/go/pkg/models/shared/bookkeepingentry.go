// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BookkeepingEntryTypeEnum - A constant representing the object's type. For this resource it will always be `bookkeeping_entry`.
type BookkeepingEntryTypeEnum string

const (
	BookkeepingEntryTypeEnumBookkeepingEntry BookkeepingEntryTypeEnum = "bookkeeping_entry"
)

func (e BookkeepingEntryTypeEnum) ToPointer() *BookkeepingEntryTypeEnum {
	return &e
}

func (e *BookkeepingEntryTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bookkeeping_entry":
		*e = BookkeepingEntryTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BookkeepingEntryTypeEnum: %v", v)
	}
}

// BookkeepingEntry - Entries are T-account entries recording debits and credits.
type BookkeepingEntry struct {
	// The identifier for the Account the Entry belongs to.
	AccountID string `json:"account_id"`
	// The Entry amount in the minor unit of its currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The identifier for the Account the Entry belongs to.
	EntrySetID string `json:"entry_set_id"`
	// The entry identifier.
	ID string `json:"id"`
	// A constant representing the object's type. For this resource it will always be `bookkeeping_entry`.
	Type BookkeepingEntryTypeEnum `json:"type"`
}
