/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Specifies how Zuora changes the price of the charge each time the subscription renews.
 *
 * @remarks
 *
 * If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
 *
 */
export enum UsageOveragePricingUpdatePriceChangeOptionEnum {
  NoChange = "NoChange",
  SpecificPercentageValue = "SpecificPercentageValue",
  UseLatestProductCatalogPricing = "UseLatestProductCatalogPricing",
}

export class UsageOveragePricingUpdate extends SpeakeasyBase {
  /**
   * A certain quantity of units for free in the overage charge model. It cannot be negative. It must be 0 and above. Decimals are allowed.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includedUnits" })
  includedUnits?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "overagePrice" })
  overagePrice?: number;

  /**
   * Specifies how Zuora changes the price of the charge each time the subscription renews.
   *
   * @remarks
   *
   * If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceChangeOption" })
  priceChangeOption?: UsageOveragePricingUpdatePriceChangeOptionEnum;

  /**
   * Specifies the percentage by which the price of the charge should change each time the subscription renews. Only applicable if the value of the `priceChangeOption` field is `SpecificPercentageValue`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceIncreasePercentage" })
  priceIncreasePercentage?: number;
}
