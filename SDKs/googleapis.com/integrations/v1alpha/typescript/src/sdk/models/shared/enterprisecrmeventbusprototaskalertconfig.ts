/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList } from "./enterprisecrmeventbusprotobasealertconfigerrorenumlist";
import { EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue } from "./enterprisecrmeventbusprotobasealertconfigthresholdvalue";
import { Expose, Type } from "class-transformer";

export enum EnterpriseCrmEventbusProtoTaskAlertConfigMetricTypeEnum {
  MetricTypeUnspecified = "METRIC_TYPE_UNSPECIFIED",
  TaskErrorRate = "TASK_ERROR_RATE",
  TaskWarningRate = "TASK_WARNING_RATE",
  TaskRate = "TASK_RATE",
  TaskAverageDuration = "TASK_AVERAGE_DURATION",
  TaskPercentileDuration = "TASK_PERCENTILE_DURATION",
}

/**
 * The threshold type for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
 */
export enum EnterpriseCrmEventbusProtoTaskAlertConfigThresholdTypeEnum {
  UnspecifiedThresholdType = "UNSPECIFIED_THRESHOLD_TYPE",
  ExpectedMin = "EXPECTED_MIN",
  ExpectedMax = "EXPECTED_MAX",
}

/**
 * Message to be used to configure alerting in the {@code TaskConfig} protos for tasks in an event.
 */
export class EnterpriseCrmEventbusProtoTaskAlertConfig extends SpeakeasyBase {
  /**
   * The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregationPeriod" })
  aggregationPeriod?: string;

  /**
   * Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alertDisabled" })
  alertDisabled?: boolean;

  /**
   * A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique in within the scope of the containing workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alertName" })
  alertName?: string;

  /**
   * Client associated with this alert configuration. Must be a client enabled in one of the containing workflow's triggers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * Should be specified only for TASK_AVERAGE_DURATION and TASK_PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "durationThresholdMs" })
  durationThresholdMs?: string;

  /**
   * List of error enums for alerts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorEnumList" })
  @Type(() => EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList)
  errorEnumList?: EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList;

  @SpeakeasyMetadata()
  @Expose({ name: "metricType" })
  metricType?: EnterpriseCrmEventbusProtoTaskAlertConfigMetricTypeEnum;

  /**
   * For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numAggregationPeriods" })
  numAggregationPeriods?: number;

  /**
   * Only count final task attempts, not retries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "onlyFinalAttempt" })
  onlyFinalAttempt?: boolean;

  /**
   * Link to a playbook for resolving the issue that triggered this alert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "playbookUrl" })
  playbookUrl?: string;

  /**
   * The threshold type for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thresholdType" })
  thresholdType?: EnterpriseCrmEventbusProtoTaskAlertConfigThresholdTypeEnum;

  /**
   * The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thresholdValue" })
  @Type(() => EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue)
  thresholdValue?: EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue;

  /**
   * List of error enums for alerts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warningEnumList" })
  @Type(() => EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList)
  warningEnumList?: EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList;
}
