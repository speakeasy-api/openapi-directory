// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDPathParams struct {
	// Id of the document
	DocumentID string `pathParam:"style=simple,explode=false,name=documentId"`
	// Id of the folder
	FolderID string `pathParam:"style=simple,explode=false,name=folderId"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum string

const (
	PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnumCommercialInvoice   PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum = "commercial-invoice"
	PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnumCreditNote          PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum = "credit-note"
	PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnumAmendingInvoice     PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum = "amending-invoice"
	PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnumSelfBilling         PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum = "self-billing"
	PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnumCreditSelfBilling   PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum = "credit-self-billing"
	PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnumDownPaymentInvoice  PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum = "down-payment-invoice"
	PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnumInformationsInvoice PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum = "informations-invoice"
)

func (e *PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "commercial-invoice":
		fallthrough
	case "credit-note":
		fallthrough
	case "amending-invoice":
		fallthrough
	case "self-billing":
		fallthrough
	case "credit-self-billing":
		fallthrough
	case "down-payment-invoice":
		fallthrough
	case "informations-invoice":
		*e = PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum: %s", s)
	}
}

// PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBody - A invoice to modify
type PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBody struct {
	BeforeVAT   *float64                                                                `json:"BeforeVAT,omitempty"`
	DueDate     *string                                                                 `json:"DueDate,omitempty"`
	InclVAT     *float64                                                                `json:"InclVAT,omitempty"`
	InvoiceDate *string                                                                 `json:"InvoiceDate,omitempty"`
	Number      *string                                                                 `json:"Number,omitempty"`
	PaymentDate *string                                                                 `json:"PaymentDate,omitempty"`
	Type        *PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBodyTypeEnum `json:"Type,omitempty"`
	Vat         *float64                                                                `json:"VAT,omitempty"`
}

type PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequest struct {
	PathParams PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDPathParams
	// A invoice to modify
	Request *PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDRequestBody `request:"mediaType=application/json"`
}

type PatchSpacesSpaceIDFoldersFolderIDInvoicesDocumentIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
