/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetV4LayersScoutingObservationsScoutingObservationIdSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Api-Key",
  })
  apiKey?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2AuthorizationCode?: string;
}

export class GetV4LayersScoutingObservationsScoutingObservationIdRequest extends SpeakeasyBase {
  /**
   * Unique identifier of the Scouting Observation.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=scoutingObservationId",
  })
  scoutingObservationId: string;
}

export class GetV4LayersScoutingObservationsScoutingObservationIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad Input
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * Returns the requested scouting observation.
   */
  @SpeakeasyMetadata()
  scoutingObservation?: shared.ScoutingObservation;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
