/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudIntegrationsV1alphaCredential } from "./googlecloudintegrationsv1alphacredential";
import { Expose, Type } from "class-transformer";

/**
 * Credential type of the encrypted credential.
 */
export enum GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum {
  CredentialTypeUnspecified = "CREDENTIAL_TYPE_UNSPECIFIED",
  UsernameAndPassword = "USERNAME_AND_PASSWORD",
  ApiKey = "API_KEY",
  Oauth2AuthorizationCode = "OAUTH2_AUTHORIZATION_CODE",
  Oauth2Implicit = "OAUTH2_IMPLICIT",
  Oauth2ClientCredentials = "OAUTH2_CLIENT_CREDENTIALS",
  Oauth2ResourceOwnerCredentials = "OAUTH2_RESOURCE_OWNER_CREDENTIALS",
  Jwt = "JWT",
  AuthToken = "AUTH_TOKEN",
  ServiceAccount = "SERVICE_ACCOUNT",
  ClientCertificateOnly = "CLIENT_CERTIFICATE_ONLY",
  OidcToken = "OIDC_TOKEN",
}

/**
 * The status of the auth config.
 */
export enum GoogleCloudIntegrationsV1alphaAuthConfigStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Valid = "VALID",
  Invalid = "INVALID",
  SoftDeleted = "SOFT_DELETED",
  Expired = "EXPIRED",
  Unauthorized = "UNAUTHORIZED",
  Unsupported = "UNSUPPORTED",
}

/**
 * The visibility of the auth config.
 */
export enum GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum {
  AuthConfigVisibilityUnspecified = "AUTH_CONFIG_VISIBILITY_UNSPECIFIED",
  Private = "PRIVATE",
  ClientVisible = "CLIENT_VISIBLE",
}

/**
 * The AuthConfig resource use to hold channels and connection config data.
 */
export class GoogleCloudIntegrationsV1alphaAuthConfig extends SpeakeasyBase {
  /**
   * Certificate id for client certificate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certificateId" })
  certificateId?: string;

  /**
   * Output only. The timestamp when the auth config is created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creatorEmail" })
  creatorEmail?: string;

  /**
   * Credential type of the encrypted credential.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "credentialType" })
  credentialType?: GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum;

  /**
   * Defines parameters for a single, canonical credential.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "decryptedCredential" })
  @Type(() => GoogleCloudIntegrationsV1alphaCredential)
  decryptedCredential?: GoogleCloudIntegrationsV1alphaCredential;

  /**
   * A description of the auth config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The name of the auth config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptedCredential" })
  encryptedCredential?: string;

  /**
   * User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiryNotificationDuration" })
  expiryNotificationDuration?: string[];

  /**
   * The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastModifierEmail" })
  lastModifierEmail?: string;

  /**
   * Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overrideValidTime" })
  overrideValidTime?: string;

  /**
   * The reason / details of the current status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  /**
   * The status of the auth config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: GoogleCloudIntegrationsV1alphaAuthConfigStateEnum;

  /**
   * Output only. The timestamp when the auth config is modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * The time until the auth config is valid. Empty or max value is considered the auth config won't expire.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validTime" })
  validTime?: string;

  /**
   * The visibility of the auth config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum;
}

/**
 * The AuthConfig resource use to hold channels and connection config data.
 */
export class GoogleCloudIntegrationsV1alphaAuthConfigInput extends SpeakeasyBase {
  /**
   * Certificate id for client certificate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certificateId" })
  certificateId?: string;

  /**
   * The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creatorEmail" })
  creatorEmail?: string;

  /**
   * Credential type of the encrypted credential.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "credentialType" })
  credentialType?: GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum;

  /**
   * Defines parameters for a single, canonical credential.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "decryptedCredential" })
  @Type(() => GoogleCloudIntegrationsV1alphaCredential)
  decryptedCredential?: GoogleCloudIntegrationsV1alphaCredential;

  /**
   * A description of the auth config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The name of the auth config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptedCredential" })
  encryptedCredential?: string;

  /**
   * User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiryNotificationDuration" })
  expiryNotificationDuration?: string[];

  /**
   * The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastModifierEmail" })
  lastModifierEmail?: string;

  /**
   * Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overrideValidTime" })
  overrideValidTime?: string;

  /**
   * The reason / details of the current status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  /**
   * The status of the auth config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: GoogleCloudIntegrationsV1alphaAuthConfigStateEnum;

  /**
   * The time until the auth config is valid. Empty or max value is considered the auth config won't expire.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validTime" })
  validTime?: string;

  /**
   * The visibility of the auth config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum;
}
