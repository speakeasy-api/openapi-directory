"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetMapVersionNumberCopyrightsFormatFormatEnum(str, Enum):
    r"""Format of the response"""
    JSON = 'json'
    JSONP = 'jsonp'
    XML = 'xml'

class GetMapVersionNumberCopyrightsFormatVersionNumberEnum(str, Enum):
    r"""Version of the service to call. The current version is 1"""
    ONE = '1'


@dataclasses.dataclass
class GetMapVersionNumberCopyrightsFormatRequest:
    
    format: GetMapVersionNumberCopyrightsFormatFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Format of the response"""  
    version_number: GetMapVersionNumberCopyrightsFormatVersionNumberEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'versionNumber', 'style': 'simple', 'explode': False }})
    r"""Version of the service to call. The current version is 1"""  
    callback: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'callback', 'style': 'form', 'explode': True }})
    r"""Specifies the jsonp callback method. Only used when format is jsonp"""  
    

@dataclasses.dataclass
class GetMapVersionNumberCopyrightsFormatResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    