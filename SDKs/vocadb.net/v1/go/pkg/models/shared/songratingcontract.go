// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SongRatingContractRatingEnum string

const (
	SongRatingContractRatingEnumNothing  SongRatingContractRatingEnum = "Nothing"
	SongRatingContractRatingEnumDislike  SongRatingContractRatingEnum = "Dislike"
	SongRatingContractRatingEnumLike     SongRatingContractRatingEnum = "Like"
	SongRatingContractRatingEnumFavorite SongRatingContractRatingEnum = "Favorite"
)

func (e *SongRatingContractRatingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Dislike":
		fallthrough
	case "Like":
		fallthrough
	case "Favorite":
		*e = SongRatingContractRatingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongRatingContractRatingEnum: %s", s)
	}
}

// SongRatingContract - Rating to be given. Possible values are Nothing, Like, Favorite.
type SongRatingContract struct {
	Rating *SongRatingContractRatingEnum `json:"rating,omitempty" form:"name=rating"`
}
