// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeConfigurationRecordersXAmzTargetEnum
type DescribeConfigurationRecordersXAmzTargetEnum string

const (
	DescribeConfigurationRecordersXAmzTargetEnumStarlingDoveServiceDescribeConfigurationRecorders DescribeConfigurationRecordersXAmzTargetEnum = "StarlingDoveService.DescribeConfigurationRecorders"
)

func (e DescribeConfigurationRecordersXAmzTargetEnum) ToPointer() *DescribeConfigurationRecordersXAmzTargetEnum {
	return &e
}

func (e *DescribeConfigurationRecordersXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "StarlingDoveService.DescribeConfigurationRecorders":
		*e = DescribeConfigurationRecordersXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeConfigurationRecordersXAmzTargetEnum: %v", v)
	}
}

type DescribeConfigurationRecordersRequest struct {
	DescribeConfigurationRecordersRequest shared.DescribeConfigurationRecordersRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            DescribeConfigurationRecordersXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeConfigurationRecordersResponse struct {
	ContentType string
	// Success
	DescribeConfigurationRecordersResponse *shared.DescribeConfigurationRecordersResponse
	// NoSuchConfigurationRecorderException
	NoSuchConfigurationRecorderException interface{}
	StatusCode                           int
	RawResponse                          *http.Response
}
