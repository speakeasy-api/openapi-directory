<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class GetItemInput
{
    /**
     * List of <code>Attribute</code> names. If attribute names are not specified then all attributes will be returned. If some attributes are not found, they will not appear in the result.
     * 
     * @var ?array<string> $attributesToGet
     */
	#[\JMS\Serializer\Annotation\SerializedName('AttributesToGet')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $attributesToGet = null;
    
    /**
     * If set to <code>true</code>, then a consistent read is issued. Otherwise eventually-consistent is used.
     * 
     * @var ?bool $consistentRead
     */
	#[\JMS\Serializer\Annotation\SerializedName('ConsistentRead')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $consistentRead = null;
    
    /**
     * The primary key that uniquely identifies each item in a table. A primary key can be a one attribute (hash) primary key or a two attribute (hash-and-range) primary key.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Key $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('Key')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Key')]
    public Key $key;
    
	#[\JMS\Serializer\Annotation\SerializedName('TableName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $tableName;
    
	public function __construct()
	{
		$this->attributesToGet = null;
		$this->consistentRead = null;
		$this->key = new \OpenAPI\OpenAPI\Models\Shared\Key();
		$this->tableName = "";
	}
}
