<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETCreateTrafficMirrorFilterRuleRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETCreateTrafficMirrorFilterRuleActionEnum $action;
    
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.
     * 
     * @var ?string $clientToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ClientToken')]
    public ?string $clientToken = null;
    
    /**
     * The description of the Traffic Mirror rule.
     * 
     * @var ?string $description
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Description')]
    public ?string $description = null;
    
    /**
     * The destination CIDR block to assign to the Traffic Mirror rule.
     * 
     * @var string $destinationCidrBlock
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DestinationCidrBlock')]
    public string $destinationCidrBlock;
    
    /**
     * The destination port range.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GETCreateTrafficMirrorFilterRuleDestinationPortRange $destinationPortRange
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DestinationPortRange')]
    public ?GETCreateTrafficMirrorFilterRuleDestinationPortRange $destinationPortRange = null;
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
     * 
     * @var ?bool $dryRun
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DryRun')]
    public ?bool $dryRun = null;
    
    /**
     * <p>The protocol, for example UDP, to assign to the Traffic Mirror rule.</p> <p>For information about the protocol value, see <a href="https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a> on the Internet Assigned Numbers Authority (IANA) website.</p>
     * 
     * @var ?int $protocol
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Protocol')]
    public ?int $protocol = null;
    
    /**
     * The action to take on the filtered traffic.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GETCreateTrafficMirrorFilterRuleRuleActionEnum $ruleAction
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=RuleAction')]
    public GETCreateTrafficMirrorFilterRuleRuleActionEnum $ruleAction;
    
    /**
     * The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
     * 
     * @var int $ruleNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=RuleNumber')]
    public int $ruleNumber;
    
    /**
     * The source CIDR block to assign to the Traffic Mirror rule.
     * 
     * @var string $sourceCidrBlock
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SourceCidrBlock')]
    public string $sourceCidrBlock;
    
    /**
     * The source port range.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GETCreateTrafficMirrorFilterRuleSourcePortRange $sourcePortRange
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SourcePortRange')]
    public ?GETCreateTrafficMirrorFilterRuleSourcePortRange $sourcePortRange = null;
    
    /**
     * The type of traffic.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum $trafficDirection
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TrafficDirection')]
    public GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum $trafficDirection;
    
    /**
     * The ID of the filter that this rule is associated with.
     * 
     * @var string $trafficMirrorFilterId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TrafficMirrorFilterId')]
    public string $trafficMirrorFilterId;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETCreateTrafficMirrorFilterRuleVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETCreateTrafficMirrorFilterRuleActionEnum::CREATE_TRAFFIC_MIRROR_FILTER_RULE;
		$this->clientToken = null;
		$this->description = null;
		$this->destinationCidrBlock = "";
		$this->destinationPortRange = null;
		$this->dryRun = null;
		$this->protocol = null;
		$this->ruleAction = \OpenAPI\OpenAPI\Models\Operations\GETCreateTrafficMirrorFilterRuleRuleActionEnum::ACCEPT;
		$this->ruleNumber = 0;
		$this->sourceCidrBlock = "";
		$this->sourcePortRange = null;
		$this->trafficDirection = \OpenAPI\OpenAPI\Models\Operations\GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum::INGRESS;
		$this->trafficMirrorFilterId = "";
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETCreateTrafficMirrorFilterRuleVersionEnum::TWO_THOUSAND_AND_SIXTEEN1115;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
