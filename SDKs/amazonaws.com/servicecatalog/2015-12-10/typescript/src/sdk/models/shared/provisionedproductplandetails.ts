/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProvisionedProductPlanStatusEnum } from "./provisionedproductplanstatusenum";
import { ProvisionedProductPlanTypeEnum } from "./provisionedproductplantypeenum";
import { Tag } from "./tag";
import { UpdateProvisioningParameter } from "./updateprovisioningparameter";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about a plan.
 */
export class ProvisionedProductPlanDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "NotificationArns" })
  notificationArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "PathId" })
  pathId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PlanId" })
  planId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PlanName" })
  planName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PlanType" })
  planType?: ProvisionedProductPlanTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductId" })
  productId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisionProductId" })
  provisionProductId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisionProductName" })
  provisionProductName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisioningArtifactId" })
  provisioningArtifactId?: string;

  @SpeakeasyMetadata({ elemType: UpdateProvisioningParameter })
  @Expose({ name: "ProvisioningParameters" })
  @Type(() => UpdateProvisioningParameter)
  provisioningParameters?: UpdateProvisioningParameter[];

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: ProvisionedProductPlanStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedTime?: Date;
}
