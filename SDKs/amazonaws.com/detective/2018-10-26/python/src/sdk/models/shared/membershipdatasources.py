"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timestampforcollection as shared_timestampforcollection
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MembershipDatasources:
    r"""Details on data source packages for members of the behavior graph."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountId'), 'exclude': lambda f: f is None }})  
    datasource_package_ingest_history: Optional[dict[str, dict[str, shared_timestampforcollection.TimestampForCollection]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DatasourcePackageIngestHistory'), 'exclude': lambda f: f is None }})  
    graph_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GraphArn'), 'exclude': lambda f: f is None }})  
    