/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InsightsV1CallAnnotation - OK
 */
public class InsightsV1CallAnnotation {
    /**
     * The unique SID identifier of the Account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public InsightsV1CallAnnotation withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("answered_by")
    public AnnotationEnumAnsweredByEnum answeredBy;
    public InsightsV1CallAnnotation withAnsweredBy(AnnotationEnumAnsweredByEnum answeredBy) {
        this.answeredBy = answeredBy;
        return this;
    }
    
    /**
     * Specify the call score. This is of type integer. Use a range of 1-5 to indicate the call experience score, with the following mapping as a reference for rating the call [5: Excellent, 4: Good, 3 : Fair, 2 : Poor, 1: Bad].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("call_score")
    public Long callScore;
    public InsightsV1CallAnnotation withCallScore(Long callScore) {
        this.callScore = callScore;
        return this;
    }
    
    /**
     * The unique SID identifier of the Call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("call_sid")
    public String callSid;
    public InsightsV1CallAnnotation withCallSid(String callSid) {
        this.callSid = callSid;
        return this;
    }
    
    /**
     * Specify any comments pertaining to the call. This of type string with a max limit of 100 characters. Twilio does not treat this field as PII, so don\u2019t put any PII in here.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public InsightsV1CallAnnotation withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectivity_issue")
    public AnnotationEnumConnectivityIssueEnum connectivityIssue;
    public InsightsV1CallAnnotation withConnectivityIssue(AnnotationEnumConnectivityIssueEnum connectivityIssue) {
        this.connectivityIssue = connectivityIssue;
        return this;
    }
    
    /**
     * Associate this call with an incident or support ticket. This is of type string with a max limit of 100 characters. Twilio does not treat this field as PII, so don\u2019t put any PII in here.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("incident")
    public String incident;
    public InsightsV1CallAnnotation withIncident(String incident) {
        this.incident = incident;
        return this;
    }
    
    /**
     * Specify if the call had any subjective quality issues. Possible values, one or more of:  no_quality_issue, low_volume, choppy_robotic, echo, dtmf, latency, owa, static_noise. Use comma separated values to indicate multiple quality issues for the same call
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quality_issues")
    public String[] qualityIssues;
    public InsightsV1CallAnnotation withQualityIssues(String[] qualityIssues) {
        this.qualityIssues = qualityIssues;
        return this;
    }
    
    /**
     * Specify if the call was a spam call. Use this to provide feedback on whether calls placed from your account were marked as spam, or if inbound calls received by your account were unwanted spam. Is of type Boolean: true, false. Use true if the call was a spam call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spam")
    public Boolean spam;
    public InsightsV1CallAnnotation withSpam(Boolean spam) {
        this.spam = spam;
        return this;
    }
    
    /**
     * The URL of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public InsightsV1CallAnnotation withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
