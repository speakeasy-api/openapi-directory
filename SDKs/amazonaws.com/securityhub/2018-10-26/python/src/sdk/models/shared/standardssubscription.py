"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import standardsstatus_enum as shared_standardsstatus_enum
from ..shared import standardsstatusreason as shared_standardsstatusreason
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StandardsSubscription:
    r"""A resource that represents your subscription to a supported standard."""
    
    standards_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StandardsArn') }})  
    standards_input: dict[str, str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StandardsInput') }})  
    standards_status: shared_standardsstatus_enum.StandardsStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StandardsStatus') }})  
    standards_subscription_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StandardsSubscriptionArn') }})  
    standards_status_reason: Optional[shared_standardsstatusreason.StandardsStatusReason] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StandardsStatusReason'), 'exclude': lambda f: f is None }})  
    