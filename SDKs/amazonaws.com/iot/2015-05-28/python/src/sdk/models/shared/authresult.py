"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import allowed as shared_allowed
from ..shared import authdecision_enum as shared_authdecision_enum
from ..shared import authinfo as shared_authinfo
from ..shared import denied as shared_denied
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AuthResult:
    r"""The authorizer result."""
    
    allowed: Optional[shared_allowed.Allowed] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowed'), 'exclude': lambda f: f is None }})  
    auth_decision: Optional[shared_authdecision_enum.AuthDecisionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authDecision'), 'exclude': lambda f: f is None }})  
    auth_info: Optional[shared_authinfo.AuthInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authInfo'), 'exclude': lambda f: f is None }})  
    denied: Optional[shared_denied.Denied] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('denied'), 'exclude': lambda f: f is None }})  
    missing_context_values: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('missingContextValues'), 'exclude': lambda f: f is None }})  
    