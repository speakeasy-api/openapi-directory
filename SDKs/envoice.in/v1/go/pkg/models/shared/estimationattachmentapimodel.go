// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EstimationAttachmentAPIModelTypeEnum - Type of the link (Attached or external)
type EstimationAttachmentAPIModelTypeEnum string

const (
	EstimationAttachmentAPIModelTypeEnumExternal EstimationAttachmentAPIModelTypeEnum = "External"
	EstimationAttachmentAPIModelTypeEnumUploaded EstimationAttachmentAPIModelTypeEnum = "Uploaded"
)

func (e EstimationAttachmentAPIModelTypeEnum) ToPointer() *EstimationAttachmentAPIModelTypeEnum {
	return &e
}

func (e *EstimationAttachmentAPIModelTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "External":
		fallthrough
	case "Uploaded":
		*e = EstimationAttachmentAPIModelTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EstimationAttachmentAPIModelTypeEnum: %v", v)
	}
}

type EstimationAttachmentAPIModel struct {
	// Id of estimation attachment
	ID *int `json:"Id,omitempty"`
	// Link to the file
	Link *string `json:"Link,omitempty"`
	// Hashed file name to avoid url wildguessing
	ObfuscatedFileName *string `json:"ObfuscatedFileName,omitempty"`
	// Name of the file
	OriginalFileName *string `json:"OriginalFileName,omitempty"`
	// File size number in bytes
	Size *int64 `json:"Size,omitempty"`
	// Type of the link (Attached or external)
	Type *EstimationAttachmentAPIModelTypeEnum `json:"Type,omitempty"`
}
