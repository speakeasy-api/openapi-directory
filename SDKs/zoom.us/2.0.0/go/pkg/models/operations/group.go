// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GroupSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type GroupPathParams struct {
	// The group ID.<br>
	// Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
}

type GroupRequest struct {
	PathParams GroupPathParams
	Security   GroupSecurity
}

// Group200ApplicationXML - **HTTP Status Code:** `200`<br> Group returned.<br>
// **Error Code:** `200`<br>
// Only available for Paid account,{accountId}.
type Group200ApplicationXML struct {
	// Group ID.
	ID *string
	// Group name.
	Name *string
	// Total count of members in the group.
	TotalMembers *int64
}

// Group200ApplicationJSON - **HTTP Status Code:** `200`<br> Group returned.<br>
// **Error Code:** `200`<br>
// Only available for Paid account,{accountId}.
type Group200ApplicationJSON struct {
	// Group ID.
	ID *string `json:"id,omitempty"`
	// Group name.
	Name *string `json:"name,omitempty"`
	// Total count of members in the group.
	TotalMembers *int64 `json:"total_members,omitempty"`
}

type GroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br> Group returned.<br>
	// **Error Code:** `200`<br>
	// Only available for Paid account,{accountId}.
	Group200ApplicationJSONObject *Group200ApplicationJSON
}
