/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDebitMemosQueryParams {
    /**
     * This parameter filters the response based on the `accountId` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=accountId")
    public String accountId;
    public GETDebitMemosQueryParams withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `amount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=amount")
    public Double amount;
    public GETDebitMemosQueryParams withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `balance` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=balance")
    public Double balance;
    public GETDebitMemosQueryParams withBalance(Double balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `beAppliedAmount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=beAppliedAmount")
    public Double beAppliedAmount;
    public GETDebitMemosQueryParams withBeAppliedAmount(Double beAppliedAmount) {
        this.beAppliedAmount = beAppliedAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `createdById` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createdById")
    public String createdById;
    public GETDebitMemosQueryParams withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `createdDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createdDate")
    public OffsetDateTime createdDate;
    public GETDebitMemosQueryParams withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `currency` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=currency")
    public String currency;
    public GETDebitMemosQueryParams withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `debitMemoDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=debitMemoDate")
    public LocalDate debitMemoDate;
    public GETDebitMemosQueryParams withDebitMemoDate(LocalDate debitMemoDate) {
        this.debitMemoDate = debitMemoDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `dueDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=dueDate")
    public LocalDate dueDate;
    public GETDebitMemosQueryParams withDueDate(LocalDate dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `number` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=number")
    public String number;
    public GETDebitMemosQueryParams withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * Number of rows returned per page.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Long pageSize;
    public GETDebitMemosQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `referredInvoiceId` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=referredInvoiceId")
    public String referredInvoiceId;
    public GETDebitMemosQueryParams withReferredInvoiceId(String referredInvoiceId) {
        this.referredInvoiceId = referredInvoiceId;
        return this;
    }
    
    /**
     * This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
     * 
     * A sortable field uses the following form: 
     * 
     * *operator* *field_name*
     * 
     * You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
     * 
     * *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
     * 
     *   - The `-` operator indicates an ascending order.
     *   - The `+` operator indicates a descending order.
     * 
     * By default, the response data is displayed in descending order by debit memo number.
     * 
     * *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
     * 
     *   - number
     *   - accountId
     *   - debitMemoDate
     *   - targetDate
     *   - dueDate
     *   - amount
     *   - taxAmount
     *   - totalTaxExemptAmount
     *   - balance
     *   - beAppliedAmount
     *   - referredInvoiceId
     *   - createdDate
     *   - createdById
     *   - updatedDate
     *   - updatedById
     *   
     * Examples:
     * 
     * - /v1/debitmemos?sort=+number
     * 
     * - /v1/debitmemos?status=Processed&amp;sort=-number,+amount
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public GETDebitMemosQueryParams withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `status` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=status")
    public GETDebitMemosStatusEnum status;
    public GETDebitMemosQueryParams withStatus(GETDebitMemosStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `targetDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=targetDate")
    public LocalDate targetDate;
    public GETDebitMemosQueryParams withTargetDate(LocalDate targetDate) {
        this.targetDate = targetDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `taxAmount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=taxAmount")
    public Double taxAmount;
    public GETDebitMemosQueryParams withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `totalTaxExemptAmount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=totalTaxExemptAmount")
    public Double totalTaxExemptAmount;
    public GETDebitMemosQueryParams withTotalTaxExemptAmount(Double totalTaxExemptAmount) {
        this.totalTaxExemptAmount = totalTaxExemptAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `updatedById` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=updatedById")
    public String updatedById;
    public GETDebitMemosQueryParams withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `updatedDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=updatedDate")
    public OffsetDateTime updatedDate;
    public GETDebitMemosQueryParams withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
