// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum - The current state of the gateway association.
type ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum string

const (
	ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnumAssociated     ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum = "associated"
	ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnumNotAssociated  ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum = "not-associated"
	ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnumAssociating    ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum = "associating"
	ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnumDisassociating ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum = "disassociating"
)

func (e ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum) ToPointer() *ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum {
	return &e
}

func (e *ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associated":
		fallthrough
	case "not-associated":
		fallthrough
	case "associating":
		fallthrough
	case "disassociating":
		*e = ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum: %v", v)
	}
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnum - Indicates whether the VPN tunnels process IPv4 or IPv6 traffic.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnum string

const (
	ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnumIpv4 ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnum = "ipv4"
	ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnumIpv6 ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnum = "ipv6"
)

func (e ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnum) ToPointer() *ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnum {
	return &e
}

func (e *ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ipv4":
		fallthrough
	case "ipv6":
		*e = ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnum: %v", v)
	}
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsIkeVersions - The internet key exchange (IKE) version permitted for the VPN tunnel.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsIkeVersions struct {
	Value *string
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions - Options for sending VPN tunnel logs to CloudWatch.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions struct {
	LogEnabled      *bool
	LogGroupArn     *string
	LogOutputFormat *string
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsLogOptions - Options for logging VPN tunnel activity.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsLogOptions struct {
	CloudWatchLogOptions *ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers - The Diffie-Hellmann group number for phase 1 IKE negotiations.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers struct {
	Value *int64
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms - The encryption algorithm for phase 1 IKE negotiations.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms struct {
	Value *string
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms - The integrity algorithm for phase 1 IKE negotiations.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms struct {
	Value *string
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers - The Diffie-Hellmann group number for phase 2 IKE negotiations.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers struct {
	Value *int64
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms - The encryption algorithm for phase 2 IKE negotiations.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms struct {
	Value *string
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms - The integrity algorithm for phase 2 IKE negotiations.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms struct {
	Value *string
}

// ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptions - The VPN tunnel options.
type ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptions struct {
	DpdTimeoutAction             *string
	DpdTimeoutSeconds            *int64
	EnableTunnelLifecycleControl *bool
	IkeVersions                  []ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsIkeVersions
	LogOptions                   *ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsLogOptions
	OutsideIPAddress             *string
	Phase1DHGroupNumbers         []ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers
	Phase1EncryptionAlgorithms   []ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms
	Phase1IntegrityAlgorithms    []ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms
	Phase1LifetimeSeconds        *int64
	Phase2DHGroupNumbers         []ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers
	Phase2EncryptionAlgorithms   []ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms
	Phase2IntegrityAlgorithms    []ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms
	Phase2LifetimeSeconds        *int64
	PreSharedKey                 *string
	RekeyFuzzPercentage          *int64
	RekeyMarginTimeSeconds       *int64
	ReplayWindowSize             *int64
	StartupAction                *string
	TunnelInsideCidr             *string
	TunnelInsideIpv6Cidr         *string
}

// ModifyVpnConnectionResultVpnConnectionOptions - The VPN connection options.
type ModifyVpnConnectionResultVpnConnectionOptions struct {
	EnableAcceleration                  *bool
	LocalIpv4NetworkCidr                *string
	LocalIpv6NetworkCidr                *string
	OutsideIPAddressType                *string
	RemoteIpv4NetworkCidr               *string
	RemoteIpv6NetworkCidr               *string
	StaticRoutesOnly                    *bool
	TransportTransitGatewayAttachmentID *string
	TunnelInsideIPVersion               *ModifyVpnConnectionResultVpnConnectionOptionsTunnelInsideIPVersionEnum
	TunnelOptions                       []ModifyVpnConnectionResultVpnConnectionOptionsTunnelOptions
}

// ModifyVpnConnectionResultVpnConnectionRoutesSourceEnum - Indicates how the routes were provided.
type ModifyVpnConnectionResultVpnConnectionRoutesSourceEnum string

const (
	ModifyVpnConnectionResultVpnConnectionRoutesSourceEnumStatic ModifyVpnConnectionResultVpnConnectionRoutesSourceEnum = "Static"
)

func (e ModifyVpnConnectionResultVpnConnectionRoutesSourceEnum) ToPointer() *ModifyVpnConnectionResultVpnConnectionRoutesSourceEnum {
	return &e
}

func (e *ModifyVpnConnectionResultVpnConnectionRoutesSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Static":
		*e = ModifyVpnConnectionResultVpnConnectionRoutesSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionResultVpnConnectionRoutesSourceEnum: %v", v)
	}
}

// ModifyVpnConnectionResultVpnConnectionRoutesStateEnum - The current state of the static route.
type ModifyVpnConnectionResultVpnConnectionRoutesStateEnum string

const (
	ModifyVpnConnectionResultVpnConnectionRoutesStateEnumPending   ModifyVpnConnectionResultVpnConnectionRoutesStateEnum = "pending"
	ModifyVpnConnectionResultVpnConnectionRoutesStateEnumAvailable ModifyVpnConnectionResultVpnConnectionRoutesStateEnum = "available"
	ModifyVpnConnectionResultVpnConnectionRoutesStateEnumDeleting  ModifyVpnConnectionResultVpnConnectionRoutesStateEnum = "deleting"
	ModifyVpnConnectionResultVpnConnectionRoutesStateEnumDeleted   ModifyVpnConnectionResultVpnConnectionRoutesStateEnum = "deleted"
)

func (e ModifyVpnConnectionResultVpnConnectionRoutesStateEnum) ToPointer() *ModifyVpnConnectionResultVpnConnectionRoutesStateEnum {
	return &e
}

func (e *ModifyVpnConnectionResultVpnConnectionRoutesStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = ModifyVpnConnectionResultVpnConnectionRoutesStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionResultVpnConnectionRoutesStateEnum: %v", v)
	}
}

// ModifyVpnConnectionResultVpnConnectionRoutes - Describes a static route for a VPN connection.
type ModifyVpnConnectionResultVpnConnectionRoutes struct {
	DestinationCidrBlock *string
	Source               *ModifyVpnConnectionResultVpnConnectionRoutesSourceEnum
	State                *ModifyVpnConnectionResultVpnConnectionRoutesStateEnum
}

// ModifyVpnConnectionResultVpnConnectionStateEnum - The current state of the VPN connection.
type ModifyVpnConnectionResultVpnConnectionStateEnum string

const (
	ModifyVpnConnectionResultVpnConnectionStateEnumPending   ModifyVpnConnectionResultVpnConnectionStateEnum = "pending"
	ModifyVpnConnectionResultVpnConnectionStateEnumAvailable ModifyVpnConnectionResultVpnConnectionStateEnum = "available"
	ModifyVpnConnectionResultVpnConnectionStateEnumDeleting  ModifyVpnConnectionResultVpnConnectionStateEnum = "deleting"
	ModifyVpnConnectionResultVpnConnectionStateEnumDeleted   ModifyVpnConnectionResultVpnConnectionStateEnum = "deleted"
)

func (e ModifyVpnConnectionResultVpnConnectionStateEnum) ToPointer() *ModifyVpnConnectionResultVpnConnectionStateEnum {
	return &e
}

func (e *ModifyVpnConnectionResultVpnConnectionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = ModifyVpnConnectionResultVpnConnectionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionResultVpnConnectionStateEnum: %v", v)
	}
}

// ModifyVpnConnectionResultVpnConnectionTags - Describes a tag.
type ModifyVpnConnectionResultVpnConnectionTags struct {
	Key   *string
	Value *string
}

// ModifyVpnConnectionResultVpnConnectionTypeEnum - The type of VPN connection.
type ModifyVpnConnectionResultVpnConnectionTypeEnum string

const (
	ModifyVpnConnectionResultVpnConnectionTypeEnumIpsec1 ModifyVpnConnectionResultVpnConnectionTypeEnum = "ipsec.1"
)

func (e ModifyVpnConnectionResultVpnConnectionTypeEnum) ToPointer() *ModifyVpnConnectionResultVpnConnectionTypeEnum {
	return &e
}

func (e *ModifyVpnConnectionResultVpnConnectionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ipsec.1":
		*e = ModifyVpnConnectionResultVpnConnectionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionResultVpnConnectionTypeEnum: %v", v)
	}
}

// ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnum - The status of the VPN tunnel.
type ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnum string

const (
	ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnumUp   ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnum = "UP"
	ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnumDown ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnum = "DOWN"
)

func (e ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnum) ToPointer() *ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnum {
	return &e
}

func (e *ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UP":
		fallthrough
	case "DOWN":
		*e = ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnum: %v", v)
	}
}

// ModifyVpnConnectionResultVpnConnectionVgwTelemetry - Describes telemetry for a VPN tunnel.
type ModifyVpnConnectionResultVpnConnectionVgwTelemetry struct {
	AcceptedRouteCount *int64
	CertificateArn     *string
	LastStatusChange   *time.Time
	OutsideIPAddress   *string
	Status             *ModifyVpnConnectionResultVpnConnectionVgwTelemetryStatusEnum
	StatusMessage      *string
}

// ModifyVpnConnectionResultVpnConnection - Information about the VPN connection.
type ModifyVpnConnectionResultVpnConnection struct {
	Category                     *string
	CoreNetworkArn               *string
	CoreNetworkAttachmentArn     *string
	CustomerGatewayConfiguration *string
	CustomerGatewayID            *string
	GatewayAssociationState      *ModifyVpnConnectionResultVpnConnectionGatewayAssociationStateEnum
	Options                      *ModifyVpnConnectionResultVpnConnectionOptions
	Routes                       []ModifyVpnConnectionResultVpnConnectionRoutes
	State                        *ModifyVpnConnectionResultVpnConnectionStateEnum
	Tags                         []ModifyVpnConnectionResultVpnConnectionTags
	TransitGatewayID             *string
	Type                         *ModifyVpnConnectionResultVpnConnectionTypeEnum
	VgwTelemetry                 []ModifyVpnConnectionResultVpnConnectionVgwTelemetry
	VpnConnectionID              *string
	VpnGatewayID                 *string
}

// ModifyVpnConnectionResult - Success
type ModifyVpnConnectionResult struct {
	VpnConnection *ModifyVpnConnectionResultVpnConnection
}
