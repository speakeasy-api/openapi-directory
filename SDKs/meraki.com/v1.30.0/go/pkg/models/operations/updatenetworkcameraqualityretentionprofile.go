// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateNetworkCameraQualityRetentionProfilePathParams struct {
	NetworkID                 string `pathParam:"style=simple,explode=false,name=networkId"`
	QualityRetentionProfileID string `pathParam:"style=simple,explode=false,name=qualityRetentionProfileId"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnum - Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnumOneThousandTwoHundredAndEightyx720   UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnum = "1280x720"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnumOneThousandNineHundredAndTwentyx1080 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnum = "1920x1080"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1280x720":
		fallthrough
	case "1920x1080":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72 - Quality and resolution for MV12/MV22/MV72 camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72 struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnum - Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnumOneThousandTwoHundredAndEightyx720   UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnum = "1280x720"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnumOneThousandNineHundredAndTwentyx1080 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnum = "1920x1080"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1280x720":
		fallthrough
	case "1920x1080":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WE - Quality and resolution for MV12WE camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WE struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnum - Resolution of the camera. Can be one of '1080x1080' or '2688x1512'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnumOneThousandAndEightyx1080                UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnum = "1080x1080"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnumTwoThousandSixHundredAndEightyEightx1512 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnum = "2688x1512"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1080x1080":
		fallthrough
	case "2688x1512":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13 - Quality and resolution for MV13 camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13 struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1080x1080' or '2688x1512'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71ResolutionEnum - Resolution of the camera. Can be one of '1280x720'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71ResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71ResolutionEnumOneThousandTwoHundredAndEightyx720 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71ResolutionEnum = "1280x720"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71ResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1280x720":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71ResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71ResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71 - Quality and resolution for MV21/MV71 camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71 struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1280x720'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71ResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum - Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnumOneThousandTwoHundredAndEightyx720       UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum = "1280x720"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnumOneThousandNineHundredAndTwentyx1080     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum = "1920x1080"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnumTwoThousandSixHundredAndEightyEightx1512 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum = "2688x1512"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1280x720":
		fallthrough
	case "1920x1080":
		fallthrough
	case "2688x1512":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72X - Quality and resolution for MV22X/MV72X camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72X struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnum - Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnumOneThousandAndEightyx1080     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnum = "1080x1080"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnumTwoThousandAndFiftyEightx2058 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnum = "2058x2058"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1080x1080":
		fallthrough
	case "2058x2058":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32 - Quality and resolution for MV32 camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32 struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnum - Resolution of the camera. Can be one of '1080x1080' or '2112x2112'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnumOneThousandAndEightyx1080           UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnum = "1080x1080"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnumTwoThousandOneHundredAndTwelvex2112 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnum = "2112x2112"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1080x1080":
		fallthrough
	case "2112x2112":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33 - Quality and resolution for MV33 camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33 struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1080x1080' or '2112x2112'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum - Resolution of the camera. Can be one of '1280x720', '1920x1080', '2688x1512' or '3840x2160'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnumOneThousandTwoHundredAndEightyx720       UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum = "1280x720"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnumOneThousandNineHundredAndTwentyx1080     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum = "1920x1080"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnumTwoThousandSixHundredAndEightyEightx1512 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum = "2688x1512"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnumThreeThousandEightHundredAndFortyx2160   UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum = "3840x2160"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1280x720":
		fallthrough
	case "1920x1080":
		fallthrough
	case "2688x1512":
		fallthrough
	case "3840x2160":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52 - Quality and resolution for MV52 camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52 struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1280x720', '1920x1080', '2688x1512' or '3840x2160'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnum - Resolution of the camera. Can be one of '1920x1080' or '2688x1512'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnumOneThousandNineHundredAndTwentyx1080     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnum = "1920x1080"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnumTwoThousandSixHundredAndEightyEightx1512 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnum = "2688x1512"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1920x1080":
		fallthrough
	case "2688x1512":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63 - Quality and resolution for MV63 camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63 struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1920x1080' or '2688x1512'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum - Resolution of the camera. Can be one of '1920x1080', '2688x1512' or '3840x2160'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnumOneThousandNineHundredAndTwentyx1080     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum = "1920x1080"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnumTwoThousandSixHundredAndEightyEightx1512 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum = "2688x1512"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnumThreeThousandEightHundredAndFortyx2160   UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum = "3840x2160"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1920x1080":
		fallthrough
	case "2688x1512":
		fallthrough
	case "3840x2160":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63X - Quality and resolution for MV63X camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63X struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1920x1080', '2688x1512' or '3840x2160'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnum - Resolution of the camera. Can be one of '1080x1080' or '2112x2112'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnumOneThousandAndEightyx1080           UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnum = "1080x1080"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnumTwoThousandOneHundredAndTwelvex2112 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnum = "2112x2112"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1080x1080":
		fallthrough
	case "2112x2112":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93 - Quality and resolution for MV93 camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93 struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1080x1080' or '2112x2112'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum - Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnumEnhanced UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum = "Enhanced"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnumHigh     UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum = "High"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnumStandard UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum = "Standard"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enhanced":
		fallthrough
	case "High":
		fallthrough
	case "Standard":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum - Resolution of the camera. Can be one of '1080x1080', '2112x2112' or '2880x2880'.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum string

const (
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnumOneThousandAndEightyx1080             UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum = "1080x1080"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnumTwoThousandOneHundredAndTwelvex2112   UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum = "2112x2112"
	UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnumTwoThousandEightHundredAndEightyx2880 UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum = "2880x2880"
)

func (e *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1080x1080":
		fallthrough
	case "2112x2112":
		fallthrough
	case "2880x2880":
		*e = UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum: %s", s)
	}
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93X - Quality and resolution for MV93X camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93X struct {
	// Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'.
	Quality UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum `json:"quality"`
	// Resolution of the camera. Can be one of '1080x1080', '2112x2112' or '2880x2880'.
	Resolution UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum `json:"resolution"`
}

// UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettings - Video quality and resolution settings for all the camera models.
type UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettings struct {
	// Quality and resolution for MV12/MV22/MV72 camera models.
	Mv12Mv22Mv72 *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72 `json:"MV12/MV22/MV72,omitempty"`
	// Quality and resolution for MV12WE camera models.
	Mv12We *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WE `json:"MV12WE,omitempty"`
	// Quality and resolution for MV13 camera models.
	Mv13 *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13 `json:"MV13,omitempty"`
	// Quality and resolution for MV21/MV71 camera models.
	Mv21Mv71 *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71 `json:"MV21/MV71,omitempty"`
	// Quality and resolution for MV22X/MV72X camera models.
	Mv22XMv72X *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72X `json:"MV22X/MV72X,omitempty"`
	// Quality and resolution for MV32 camera models.
	Mv32 *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32 `json:"MV32,omitempty"`
	// Quality and resolution for MV33 camera models.
	Mv33 *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33 `json:"MV33,omitempty"`
	// Quality and resolution for MV52 camera models.
	Mv52 *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52 `json:"MV52,omitempty"`
	// Quality and resolution for MV63 camera models.
	Mv63 *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63 `json:"MV63,omitempty"`
	// Quality and resolution for MV63X camera models.
	Mv63X *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63X `json:"MV63X,omitempty"`
	// Quality and resolution for MV93 camera models.
	Mv93 *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93 `json:"MV93,omitempty"`
	// Quality and resolution for MV93X camera models.
	Mv93X *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93X `json:"MV93X,omitempty"`
}

type UpdateNetworkCameraQualityRetentionProfileRequestBody struct {
	// Whether or not to record audio. Can be either true or false. Defaults to false.
	AudioRecordingEnabled *bool `json:"audioRecordingEnabled,omitempty"`
	// Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false.
	CloudArchiveEnabled *bool `json:"cloudArchiveEnabled,omitempty"`
	// The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days.
	MaxRetentionDays *int64 `json:"maxRetentionDays,omitempty"`
	// Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras.
	MotionBasedRetentionEnabled *bool `json:"motionBasedRetentionEnabled,omitempty"`
	// The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
	MotionDetectorVersion *int64 `json:"motionDetectorVersion,omitempty"`
	// The name of the new profile. Must be unique.
	Name *string `json:"name,omitempty"`
	// Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras.
	RestrictedBandwidthModeEnabled *bool `json:"restrictedBandwidthModeEnabled,omitempty"`
	// Schedule for which this camera will record video, or 'null' to always record.
	ScheduleID *string `json:"scheduleId,omitempty"`
	// Video quality and resolution settings for all the camera models.
	VideoSettings *UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettings `json:"videoSettings,omitempty"`
}

type UpdateNetworkCameraQualityRetentionProfileRequest struct {
	PathParams UpdateNetworkCameraQualityRetentionProfilePathParams
	Request    *UpdateNetworkCameraQualityRetentionProfileRequestBody `request:"mediaType=application/json"`
}

type UpdateNetworkCameraQualityRetentionProfileResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkCameraQualityRetentionProfile200ApplicationJSONObject map[string]interface{}
}
