/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class KeyRevokeRequest extends SpeakeasyBase {
  /**
   * Public Signing Key - Authentiq ID (43 chars)
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=PK" })
  pk: string;

  /**
   * revokation secret
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=secret",
  })
  secret: string;
}

/**
 * Successful response
 */
export class KeyRevoke200ApplicationJSON extends SpeakeasyBase {
  /**
   * done
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class KeyRevokeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Key not found / wrong code `auth-error`
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  keyRevoke200ApplicationJSONObject?: KeyRevoke200ApplicationJSON;
}
