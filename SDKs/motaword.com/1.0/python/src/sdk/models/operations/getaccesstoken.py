"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import token as shared_token
from ..shared import tokenerror as shared_tokenerror
from typing import Optional


@dataclasses.dataclass
class GetAccessTokenSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class GetAccessTokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    token: Optional[shared_token.Token] = dataclasses.field(default=None)
    r"""Authentication response"""  
    token_error: Optional[shared_tokenerror.TokenError] = dataclasses.field(default=None)
    r"""Authentication error - for vendor auth, it will also fail if their account is not approved yet. In that case, the error response will include \\"account_status\\" key."""  
    