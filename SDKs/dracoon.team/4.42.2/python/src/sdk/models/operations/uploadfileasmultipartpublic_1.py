"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import chunkuploadresponse as shared_chunkuploadresponse
from ..shared import errorresponse as shared_errorresponse
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class UploadFileAsMultipartPublic1RequestBodyFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file' }})  
    

@dataclasses.dataclass
class UploadFileAsMultipartPublic1RequestBody:
    
    file: UploadFileAsMultipartPublic1RequestBodyFile = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""File"""  
    
class UploadFileAsMultipartPublic1XSdsDateFormatEnum(str, Enum):
    r"""Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"""
    UTC = 'UTC'
    LOCAL = 'LOCAL'
    OFFSET = 'OFFSET'
    EPOCH = 'EPOCH'
    LEET = 'LEET'


@dataclasses.dataclass
class UploadFileAsMultipartPublic1Request:
    
    access_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'access_key', 'style': 'simple', 'explode': False }})
    r"""Access key"""  
    upload_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'upload_id', 'style': 'simple', 'explode': False }})
    r"""Upload channel ID"""  
    content_range: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Content-Range', 'style': 'simple', 'explode': False }})
    r"""Content-Range
    
    e.g. `bytes 0-999/3980`
    """  
    request_body: Optional[UploadFileAsMultipartPublic1RequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    x_sds_date_format: Optional[UploadFileAsMultipartPublic1XSdsDateFormatEnum] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Sds-Date-Format', 'style': 'simple', 'explode': False }})
    r"""Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"""  
    

@dataclasses.dataclass
class UploadFileAsMultipartPublic1Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    chunk_upload_response: Optional[shared_chunkuploadresponse.ChunkUploadResponse] = dataclasses.field(default=None)
    r"""OK"""  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Bad Request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    