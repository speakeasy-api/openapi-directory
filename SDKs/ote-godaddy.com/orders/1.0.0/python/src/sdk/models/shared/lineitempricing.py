"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import orderfee as shared_orderfee
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LineItemPricing:
    
    discount: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discount') }})
    r"""Discount off of sale price for given `quantity` and `period` <pre>`discount` = `sale` - `subtotal`</pre>"""  
    fees: shared_orderfee.OrderFee = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fees') }})  
    list_: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('list') }})
    r"""List price for given `quantity` and `period`"""  
    sale: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sale') }})
    r"""Actual price for the current product"""  
    savings: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('savings') }})
    r"""Savings off of list price for given `quantity` and `period` <pre>`savings` = `list` - `subtotal`</pre>"""  
    subtotal: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subtotal') }})
    r"""Price with any discounts and without taxes or fees for given `quantity` and `period`"""  
    taxes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxes') }})
    r"""Taxes for given `quantity` and `period`"""  
    unit: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit') }})
    r"""Pricing for a single unit of the given item"""  
    