// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// EcommerceOrderFulfillmentStatusEnum - Current fulfillment status of the order.
type EcommerceOrderFulfillmentStatusEnum string

const (
	EcommerceOrderFulfillmentStatusEnumPending   EcommerceOrderFulfillmentStatusEnum = "pending"
	EcommerceOrderFulfillmentStatusEnumShipped   EcommerceOrderFulfillmentStatusEnum = "shipped"
	EcommerceOrderFulfillmentStatusEnumPartial   EcommerceOrderFulfillmentStatusEnum = "partial"
	EcommerceOrderFulfillmentStatusEnumDelivered EcommerceOrderFulfillmentStatusEnum = "delivered"
	EcommerceOrderFulfillmentStatusEnumCancelled EcommerceOrderFulfillmentStatusEnum = "cancelled"
	EcommerceOrderFulfillmentStatusEnumReturned  EcommerceOrderFulfillmentStatusEnum = "returned"
	EcommerceOrderFulfillmentStatusEnumUnknown   EcommerceOrderFulfillmentStatusEnum = "unknown"
)

func (e *EcommerceOrderFulfillmentStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "shipped":
		fallthrough
	case "partial":
		fallthrough
	case "delivered":
		fallthrough
	case "cancelled":
		fallthrough
	case "returned":
		fallthrough
	case "unknown":
		*e = EcommerceOrderFulfillmentStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EcommerceOrderFulfillmentStatusEnum: %s", s)
	}
}

// EcommerceOrderPaymentStatusEnum - Current payment status of the order.
type EcommerceOrderPaymentStatusEnum string

const (
	EcommerceOrderPaymentStatusEnumPending    EcommerceOrderPaymentStatusEnum = "pending"
	EcommerceOrderPaymentStatusEnumAuthorized EcommerceOrderPaymentStatusEnum = "authorized"
	EcommerceOrderPaymentStatusEnumPaid       EcommerceOrderPaymentStatusEnum = "paid"
	EcommerceOrderPaymentStatusEnumPartial    EcommerceOrderPaymentStatusEnum = "partial"
	EcommerceOrderPaymentStatusEnumRefunded   EcommerceOrderPaymentStatusEnum = "refunded"
	EcommerceOrderPaymentStatusEnumVoided     EcommerceOrderPaymentStatusEnum = "voided"
	EcommerceOrderPaymentStatusEnumUnknown    EcommerceOrderPaymentStatusEnum = "unknown"
)

func (e *EcommerceOrderPaymentStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "authorized":
		fallthrough
	case "paid":
		fallthrough
	case "partial":
		fallthrough
	case "refunded":
		fallthrough
	case "voided":
		fallthrough
	case "unknown":
		*e = EcommerceOrderPaymentStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EcommerceOrderPaymentStatusEnum: %s", s)
	}
}

type EcommerceOrder struct {
	// An object representing a shipping or billing address.
	BillingAddress *EcommerceAddress `json:"billing_address,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *CurrencyEnum `json:"currency,omitempty"`
	// The customer this entity is linked to.
	Customer  *LinkedEcommerceCustomer `json:"customer,omitempty"`
	Discounts []EcommerceDiscount      `json:"discounts,omitempty"`
	// Current fulfillment status of the order.
	FulfillmentStatus *EcommerceOrderFulfillmentStatusEnum `json:"fulfillment_status,omitempty"`
	// A unique identifier for an object.
	ID        string                   `json:"id"`
	LineItems []EcommerceOrderLineItem `json:"line_items,omitempty"`
	// Note for the order.
	Note *string `json:"note,omitempty"`
	// Order number, if any.
	OrderNumber *string `json:"order_number,omitempty"`
	// Payment method used for this order.
	PaymentMethod *string `json:"payment_method,omitempty"`
	// Current payment status of the order.
	PaymentStatus *EcommerceOrderPaymentStatusEnum `json:"payment_status,omitempty"`
	// An object representing a shipping or billing address.
	ShippingAddress *EcommerceAddress `json:"shipping_address,omitempty"`
	// Shipping cost, if any.
	ShippingCost *string `json:"shipping_cost,omitempty"`
	// Current status of the order.
	Status *EcommerceOrderStatusEnum `json:"status,omitempty"`
	// Sub-total amount, normally before tax.
	SubTotal *string `json:"sub_total,omitempty"`
	// Total amount due.
	TotalAmount *string `json:"total_amount,omitempty"`
	// Total discount, if any.
	TotalDiscount *string `json:"total_discount,omitempty"`
	// Total tax, if any.
	TotalTax *string `json:"total_tax,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}
