"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ResponseStatusCodeStatusClassEnum(str, Enum):
    r"""A class of status codes to accept."""
    STATUS_CLASS_UNSPECIFIED = 'STATUS_CLASS_UNSPECIFIED'
    STATUS_CLASS_1_XX = 'STATUS_CLASS_1XX'
    STATUS_CLASS_2_XX = 'STATUS_CLASS_2XX'
    STATUS_CLASS_3_XX = 'STATUS_CLASS_3XX'
    STATUS_CLASS_4_XX = 'STATUS_CLASS_4XX'
    STATUS_CLASS_5_XX = 'STATUS_CLASS_5XX'
    STATUS_CLASS_ANY = 'STATUS_CLASS_ANY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResponseStatusCode:
    r"""A status to accept. Either a status code class like \\"2xx\\", or an integer status code like \\"200\\"."""
    
    status_class: Optional[ResponseStatusCodeStatusClassEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusClass'), 'exclude': lambda f: f is None }})
    r"""A class of status codes to accept."""  
    status_value: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusValue'), 'exclude': lambda f: f is None }})
    r"""A status code to accept."""  
    