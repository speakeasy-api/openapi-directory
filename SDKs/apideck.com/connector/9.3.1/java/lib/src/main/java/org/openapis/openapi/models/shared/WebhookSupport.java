/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WebhookSupport - How webhooks are supported for the connector. Sometimes the connector natively supports webhooks, other times Apideck virtualizes them based on polling.
 */
public class WebhookSupport {
    /**
     * How the subscription is managed in the downstream.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("managed_via")
    public WebhookSupportManagedViaEnum managedVia;

    public WebhookSupport withManagedVia(WebhookSupportManagedViaEnum managedVia) {
        this.managedVia = managedVia;
        return this;
    }
    
    /**
     * Mode of the webhook support.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mode")
    public WebhookSupportModeEnum mode;

    public WebhookSupport withMode(WebhookSupportModeEnum mode) {
        this.mode = mode;
        return this;
    }
    
    /**
     * Received events are scoped to connection or across integration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscription_level")
    public WebhookSupportSubscriptionLevelEnum subscriptionLevel;

    public WebhookSupport withSubscriptionLevel(WebhookSupportSubscriptionLevelEnum subscriptionLevel) {
        this.subscriptionLevel = subscriptionLevel;
        return this;
    }
    
    /**
     * Virtual webhook config for the connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("virtual_webhooks")
    public WebhookSupportVirtualWebhooks virtualWebhooks;

    public WebhookSupport withVirtualWebhooks(WebhookSupportVirtualWebhooks virtualWebhooks) {
        this.virtualWebhooks = virtualWebhooks;
        return this;
    }
    
    public WebhookSupport(){}
}
