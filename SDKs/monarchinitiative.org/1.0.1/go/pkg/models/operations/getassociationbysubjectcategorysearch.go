// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAssociationBySubjectCategorySearchPathParams struct {
	// Category of entity at link Subject (source), e.g. gene, disease, phenotype
	SubjectCategory string `pathParam:"style=simple,explode=false,name=subject_category"`
}

type GetAssociationBySubjectCategorySearchQueryParams struct {
	// Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2
	Evidence *string `queryParam:"style=form,explode=true,name=evidence"`
	// If true, excludes associations that involve IEAs (ECO:0000501)
	ExcludeAutomaticAssertions *bool `queryParam:"style=form,explode=true,name=exclude_automatic_assertions"`
	// Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)
	ObjectTaxon *string `queryParam:"style=form,explode=true,name=object_taxon"`
	// Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc.
	Relation *string `queryParam:"style=form,explode=true,name=relation"`
	// number of rows
	Rows *int64 `queryParam:"style=form,explode=true,name=rows"`
	// beginning row
	Start *int64 `queryParam:"style=form,explode=true,name=start"`
	// Subject taxon ID, e.g. NCBITaxon:9606 (Includes inferred associations, by default)
	SubjectTaxon *string `queryParam:"style=form,explode=true,name=subject_taxon"`
	// If true, excludes evidence objects in response
	UnselectEvidence *bool `queryParam:"style=form,explode=true,name=unselect_evidence"`
	// If true, returns results in compact associations format
	UseCompactAssociations *bool `queryParam:"style=form,explode=true,name=use_compact_associations"`
}

type GetAssociationBySubjectCategorySearchRequest struct {
	PathParams  GetAssociationBySubjectCategorySearchPathParams
	QueryParams GetAssociationBySubjectCategorySearchQueryParams
}

type GetAssociationBySubjectCategorySearchResponse struct {
	// Success
	AssociationResults []shared.AssociationResults
	ContentType        string
	StatusCode         int
	RawResponse        *http.Response
}
