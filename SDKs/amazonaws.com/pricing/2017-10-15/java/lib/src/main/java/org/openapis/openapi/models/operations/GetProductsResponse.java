/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class GetProductsResponse {
    
    public String contentType;
    public GetProductsResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * ExpiredNextTokenException
     */
    
    public Object expiredNextTokenException;
    public GetProductsResponse withExpiredNextTokenException(Object expiredNextTokenException) {
        this.expiredNextTokenException = expiredNextTokenException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.GetProductsResponse getProductsResponse;
    public GetProductsResponse withGetProductsResponse(org.openapis.openapi.models.shared.GetProductsResponse getProductsResponse) {
        this.getProductsResponse = getProductsResponse;
        return this;
    }
    
    /**
     * InternalErrorException
     */
    
    public Object internalErrorException;
    public GetProductsResponse withInternalErrorException(Object internalErrorException) {
        this.internalErrorException = internalErrorException;
        return this;
    }
    
    /**
     * InvalidNextTokenException
     */
    
    public Object invalidNextTokenException;
    public GetProductsResponse withInvalidNextTokenException(Object invalidNextTokenException) {
        this.invalidNextTokenException = invalidNextTokenException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;
    public GetProductsResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * NotFoundException
     */
    
    public Object notFoundException;
    public GetProductsResponse withNotFoundException(Object notFoundException) {
        this.notFoundException = notFoundException;
        return this;
    }
    
    
    public Integer statusCode;
    public GetProductsResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public GetProductsResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
}
