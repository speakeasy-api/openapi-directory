<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateCardRequest - Creates a card from the source (nonce, payment id, etc). Accessible via
 * 
 * HTTP requests at POST https://connect.squareup.com/v2/cards
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateCardRequest
{
    /**
     * Represents the payment details of a card to be used for payments. These
     * 
     * details are determined by the payment token generated by Web Payments SDK.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Card $card
     */
	#[\JMS\Serializer\Annotation\SerializedName('card')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Card')]
    public Card $card;
    
    /**
     * A unique string that identifies this CreateCard request. Keys can be
     * 
     * any valid string and must be unique for every request.
     * 
     * Max: 45 characters
     * 
     * See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
     * 
     * @var string $idempotencyKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('idempotency_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $idempotencyKey;
    
    /**
     * The ID of the source which represents the card information to be stored. This can be a card nonce or a payment id.
     * 
     * @var string $sourceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceId;
    
    /**
     * An identifying token generated by [Payments.verifyBuyer()](https://developer.squareup.com/reference/sdks/web/payments/objects/Payments#Payments.verifyBuyer).
     * 
     * Verification tokens encapsulate customer device information and 3-D Secure
     * challenge results to indicate that Square has verified the buyer identity.
     * 
     * See the [SCA Overview](https://developer.squareup.com/docs/sca-overview).
     * 
     * @var ?string $verificationToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('verification_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $verificationToken = null;
    
	public function __construct()
	{
		$this->card = new \OpenAPI\OpenAPI\Models\Shared\Card();
		$this->idempotencyKey = "";
		$this->sourceId = "";
		$this->verificationToken = null;
	}
}
