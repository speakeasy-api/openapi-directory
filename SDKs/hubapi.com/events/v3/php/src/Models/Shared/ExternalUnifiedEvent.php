<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ExternalUnifiedEvent - Used to represent any event. With this format, the `objectType` and `eventType` values are stringified CRM types. Example object:
 * 
 * <br/>
 * ```
 *  {
 *       "objectType": "CONTACT",
 *       "objectId": 208451632,
 *       "eventType": "e_visited_page",
 *       "occurredAt": 1567377501421,
 *       "id": "leviathan-be3335d3-46f1-3985-988e-ff38e6e7b9d8",
 *       "properties": {
 *           "hs_url": "https://some-website.com/",
 *           "hs_title": "Home",
 *           "hs_referrer": "https://some-other-website.com/blog/why-we-love-big-data-and-you-should-too",
 *           "hs_userAgent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36",
 *           "hs_city": "lund",
 *           "hs_region": "m",
 *           "hs_country": "se",
 *           "hs_session_id" : "leviathan-be3335d3-46f1-3985-988e-ff38e6e7b9d8",
 *           "hs_session_source" : "DIRECT"
 *       }
 *   }      
 * ```
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ExternalUnifiedEvent
{
    /**
     * The format of the `eventType` string is `ae{appId}_{eventTypeLabel}`, `pe{portalId}_{eventTypeLabel}`, or just `e_{eventTypeLabel}` for HubSpot events.
     * 
     * @var string $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventType;
    
    /**
     * A unique identifier for the event.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The objectId of the object which did the event.
     * 
     * @var string $objectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $objectId;
    
    /**
     * The objectType for the object which did the event.
     * 
     * @var string $objectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $objectType;
    
    /**
     * An ISO 8601 timestamp when the event occurred.
     * 
     * @var \DateTime $occurredAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('occurredAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $occurredAt;
    
    /**
     * $properties
     * 
     * @var array<string, string> $properties
     */
	#[\JMS\Serializer\Annotation\SerializedName('properties')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $properties;
    
	public function __construct()
	{
		$this->eventType = "";
		$this->id = "";
		$this->objectId = "";
		$this->objectType = "";
		$this->occurredAt = new \DateTime();
		$this->properties = [];
	}
}
