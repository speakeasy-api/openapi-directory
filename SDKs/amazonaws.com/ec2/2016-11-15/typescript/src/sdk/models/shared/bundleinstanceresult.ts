/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { S3Storage } from "./s3storage";

/**
 * If the task fails, a description of the error.
 */
export class BundleInstanceResultBundleTaskBundleTaskError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: string;

  @SpeakeasyMetadata()
  message?: string;
}

/**
 * The state of the task.
 */
export enum BundleInstanceResultBundleTaskStateEnum {
  Pending = "pending",
  WaitingForShutdown = "waiting-for-shutdown",
  Bundling = "bundling",
  Storing = "storing",
  Cancelling = "cancelling",
  Complete = "complete",
  Failed = "failed",
}

/**
 * The Amazon S3 storage locations.
 */
export class BundleInstanceResultBundleTaskStorage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  s3?: S3Storage;
}

/**
 * Information about the bundle task.
 */
export class BundleInstanceResultBundleTask extends SpeakeasyBase {
  @SpeakeasyMetadata()
  bundleId?: string;

  @SpeakeasyMetadata()
  bundleTaskError?: BundleInstanceResultBundleTaskBundleTaskError;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  progress?: string;

  @SpeakeasyMetadata()
  startTime?: Date;

  @SpeakeasyMetadata()
  state?: BundleInstanceResultBundleTaskStateEnum;

  @SpeakeasyMetadata()
  storage?: BundleInstanceResultBundleTaskStorage;

  @SpeakeasyMetadata()
  updateTime?: Date;
}

/**
 * Contains the output of BundleInstance.
 */
export class BundleInstanceResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  bundleTask?: BundleInstanceResultBundleTask;
}
