/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PostAuthJwtRequestBody {
    /**
     * id of the client
     */
    @SpeakeasyMetadata("multipartForm:name=client_id")
    public String clientId;

    public PostAuthJwtRequestBody withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * secret for the client
     */
    @SpeakeasyMetadata("multipartForm:name=client_secret")
    public String clientSecret;

    public PostAuthJwtRequestBody withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }
    
    /**
     * if set to True, the token will expire n minutes after its creation, n being the value of configuration key auth.default_token_expire (default: True)
     */
    @SpeakeasyMetadata("multipartForm:name=expire")
    public Boolean expire;

    public PostAuthJwtRequestBody withExpire(Boolean expire) {
        this.expire = expire;
        return this;
    }
    
    /**
     * user for whom the token has to be generated. If not supplied, a user will be created
     */
    @SpeakeasyMetadata("multipartForm:name=id_user")
    public Long idUser;

    public PostAuthJwtRequestBody withIdUser(Long idUser) {
        this.idUser = idUser;
        return this;
    }
    
    /**
     * scope requested for the token
     */
    @SpeakeasyMetadata("multipartForm:name=scope")
    public String scope;

    public PostAuthJwtRequestBody withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    public PostAuthJwtRequestBody(){}
}
