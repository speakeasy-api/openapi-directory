<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * IssueTokenRequest - Object representing the token to be created
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class IssueTokenRequest
{
    /**
     * Number of tokens to issue
     * 
     * @var float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $amount;
    
    /**
     * Number of decimal places the token should be divisble by (0-7)
     * 
     * @var float $divisibility
     */
	#[\JMS\Serializer\Annotation\SerializedName('divisibility')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $divisibility;
    
    /**
     * Fee in satoshi to include in the issuance transaction min 1000000000 (10 NEBL)
     * 
     * @var float $fee
     */
	#[\JMS\Serializer\Annotation\SerializedName('fee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $fee;
    
    /**
     * Object representing flags that potentialy modify this transaction
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IssueTokenRequestFlags $flags
     */
	#[\JMS\Serializer\Annotation\SerializedName('flags')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\IssueTokenRequestFlags')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IssueTokenRequestFlags $flags = null;
    
    /**
     * Address issuing the token
     * 
     * @var string $issueAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('issueAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issueAddress;
    
    /**
     * Object representing all metadata at token issuance
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IssueTokenRequestMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\IssueTokenRequestMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IssueTokenRequestMetadata $metadata = null;
    
    /**
     * whether the token should be reissuable
     * 
     * @var bool $reissuable
     */
	#[\JMS\Serializer\Annotation\SerializedName('reissuable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $reissuable;
    
    /**
     * $transfer
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\IssueTokenRequestTransfer> $transfer
     */
	#[\JMS\Serializer\Annotation\SerializedName('transfer')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\IssueTokenRequestTransfer>')]
    public array $transfer;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->divisibility = 0;
		$this->fee = 0;
		$this->flags = null;
		$this->issueAddress = "";
		$this->metadata = null;
		$this->reissuable = false;
		$this->transfer = [];
	}
}
