/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2LikelihoodAdjustment } from "./googleprivacydlpv2likelihoodadjustment";
import { GooglePrivacyDlpV2Proximity } from "./googleprivacydlpv2proximity";
import { GooglePrivacyDlpV2Regex } from "./googleprivacydlpv2regex";
import { Expose, Type } from "class-transformer";

/**
 * The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
 */
export class GooglePrivacyDlpV2HotwordRule extends SpeakeasyBase {
  /**
   * Message defining a custom regular expression.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hotwordRegex" })
  @Type(() => GooglePrivacyDlpV2Regex)
  hotwordRegex?: GooglePrivacyDlpV2Regex;

  /**
   * Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "likelihoodAdjustment" })
  @Type(() => GooglePrivacyDlpV2LikelihoodAdjustment)
  likelihoodAdjustment?: GooglePrivacyDlpV2LikelihoodAdjustment;

  /**
   * Message for specifying a window around a finding to apply a detection rule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "proximity" })
  @Type(() => GooglePrivacyDlpV2Proximity)
  proximity?: GooglePrivacyDlpV2Proximity;
}
