"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDataplexV1LakeMetastoreStatusStateEnum(str, Enum):
    r"""Current state of association."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    NONE = 'NONE'
    READY = 'READY'
    UPDATING = 'UPDATING'
    ERROR = 'ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDataplexV1LakeMetastoreStatus:
    r"""Status of Lake and Dataproc Metastore service instance association."""
    
    endpoint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endpoint'), 'exclude': lambda f: f is None }})
    r"""The URI of the endpoint used to access the Metastore service."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""Additional information about the current status."""  
    state: Optional[GoogleCloudDataplexV1LakeMetastoreStatusStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Current state of association."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Last update time of the metastore status of the lake."""  
    