/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthorizationCode } from "./authorizationcode";
import { Money } from "./money";
import { RegistrationInput } from "./registration";
import { Expose, Type } from "class-transformer";

export enum TransferDomainRequestContactNoticesEnum {
  ContactNoticeUnspecified = "CONTACT_NOTICE_UNSPECIFIED",
  PublicContactDataAcknowledgement = "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT",
}

/**
 * Request for the `TransferDomain` method.
 */
export class TransferDomainRequestInput extends SpeakeasyBase {
  /**
   * Defines an authorization code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorizationCode" })
  @Type(() => AuthorizationCode)
  authorizationCode?: AuthorizationCode;

  /**
   * The list of contact notices that you acknowledge. The notices needed here depend on the values specified in `registration.contact_settings`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contactNotices" })
  contactNotices?: TransferDomainRequestContactNoticesEnum[];

  /**
   * The `Registration` resource facilitates managing and configuring domain name registrations. There are several ways to create a new `Registration` resource: To create a new `Registration` resource, find a suitable domain name by calling the `SearchDomains` method with a query to see available domain name options. After choosing a name, call `RetrieveRegisterParameters` to ensure availability and obtain information like pricing, which is needed to build a call to `RegisterDomain`. Another way to create a new `Registration` is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call `RetrieveTransferParameters` to confirm that the domain is unlocked and to get values needed to build a call to `TransferDomain`. Finally, you can create a new `Registration` by importing an existing domain managed with [Google Domains](https://domains.google/). First, call `RetrieveImportableDomains` to list domains to which the calling user has sufficient access. Then call `ImportDomain` on any domain names you want to use with Cloud Domains.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registration" })
  @Type(() => RegistrationInput)
  registration?: RegistrationInput;

  /**
   * Validate the request without actually transferring the domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validateOnly" })
  validateOnly?: boolean;

  /**
   * Represents an amount of money with its currency type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "yearlyPrice" })
  @Type(() => Money)
  yearlyPrice?: Money;
}
