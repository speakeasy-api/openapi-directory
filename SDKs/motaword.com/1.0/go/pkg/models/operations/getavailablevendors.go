// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAvailableVendorsWithEnum string

const (
	GetAvailableVendorsWithEnumUser GetAvailableVendorsWithEnum = "user"
)

func (e *GetAvailableVendorsWithEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		*e = GetAvailableVendorsWithEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAvailableVendorsWithEnum: %s", s)
	}
}

type GetAvailableVendorsQueryParams struct {
	// Include detailed information. Possible values 'user'. Requesting user info enrichment takes much longer.
	With []GetAvailableVendorsWithEnum `queryParam:"style=form,explode=true,name=with[]"`
}

type GetAvailableVendorsRequest struct {
	QueryParams GetAvailableVendorsQueryParams
	Request     *shared.AvailableVendorsFilter `request:"mediaType=application/json"`
}

type GetAvailableVendorsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// User list
	UserList *shared.UserList
}
