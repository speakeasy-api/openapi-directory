/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PhonePlaybackRequestBody extends SpeakeasyBase {
  /**
   * A URL to a valid audio file. Accepted audio formats are: <ul> <li>MP3</li> <li>WAV</li> <li>OGG</li> </ul>You can use the following MP3 URL for testing: <br>https://www.neutrinoapi.com/test-files/test1.mp3
   */
  @SpeakeasyMetadata({ data: "form, name=audio-url" })
  audioUrl: string;

  /**
   * Limit the total number of calls allowed to the supplied phone number, if the limit is reached within the TTL then error code 14 will be returned
   */
  @SpeakeasyMetadata({ data: "form, name=limit" })
  limit?: number;

  /**
   * Set the TTL in number of days that the 'limit' option will remember a phone number (the default is 1 day and the maximum is 365 days)
   */
  @SpeakeasyMetadata({ data: "form, name=limit-ttl" })
  limitTtl?: number;

  /**
   * The phone number to call. Must be in valid international format
   */
  @SpeakeasyMetadata({ data: "form, name=number" })
  number: string;
}

export class PhonePlaybackResponse extends SpeakeasyBase {
  /**
   * Your API request has been rejected. Check error code for details
   */
  @SpeakeasyMetadata()
  apiError?: shared.APIError;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  phonePlaybackResponse?: shared.PhonePlaybackResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
