// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListDashboardsActionEnum
type GETListDashboardsActionEnum string

const (
	GETListDashboardsActionEnumListDashboards GETListDashboardsActionEnum = "ListDashboards"
)

func (e GETListDashboardsActionEnum) ToPointer() *GETListDashboardsActionEnum {
	return &e
}

func (e *GETListDashboardsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListDashboards":
		*e = GETListDashboardsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListDashboardsActionEnum: %v", v)
	}
}

// GETListDashboardsVersionEnum
type GETListDashboardsVersionEnum string

const (
	GETListDashboardsVersionEnumTwoThousandAndTen0801 GETListDashboardsVersionEnum = "2010-08-01"
)

func (e GETListDashboardsVersionEnum) ToPointer() *GETListDashboardsVersionEnum {
	return &e
}

func (e *GETListDashboardsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-08-01":
		*e = GETListDashboardsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListDashboardsVersionEnum: %v", v)
	}
}

type GETListDashboardsRequest struct {
	Action GETListDashboardsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// If you specify this parameter, only the dashboards with names starting with the specified string are listed. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, ".", "-", and "_".
	DashboardNamePrefix *string `queryParam:"style=form,explode=true,name=DashboardNamePrefix"`
	// The token returned by a previous call to indicate that there is more data available.
	NextToken         *string                      `queryParam:"style=form,explode=true,name=NextToken"`
	Version           GETListDashboardsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListDashboardsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
