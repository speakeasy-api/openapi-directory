// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type KeyStateEnum string

const (
	KeyStateEnumCreating               KeyStateEnum = "Creating"
	KeyStateEnumEnabled                KeyStateEnum = "Enabled"
	KeyStateEnumDisabled               KeyStateEnum = "Disabled"
	KeyStateEnumPendingDeletion        KeyStateEnum = "PendingDeletion"
	KeyStateEnumPendingImport          KeyStateEnum = "PendingImport"
	KeyStateEnumPendingReplicaDeletion KeyStateEnum = "PendingReplicaDeletion"
	KeyStateEnumUnavailable            KeyStateEnum = "Unavailable"
	KeyStateEnumUpdating               KeyStateEnum = "Updating"
)

func (e *KeyStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Creating":
		fallthrough
	case "Enabled":
		fallthrough
	case "Disabled":
		fallthrough
	case "PendingDeletion":
		fallthrough
	case "PendingImport":
		fallthrough
	case "PendingReplicaDeletion":
		fallthrough
	case "Unavailable":
		fallthrough
	case "Updating":
		*e = KeyStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for KeyStateEnum: %s", s)
	}
}
