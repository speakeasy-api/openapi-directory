// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// VoiceXMLEnum - Decides whether the parameter "text" is plain text or XML. The default value is 0.
type VoiceXMLEnum string

const (
	VoiceXMLEnumOne  VoiceXMLEnum = "1"
	VoiceXMLEnumZero VoiceXMLEnum = "0"
)

func (e *VoiceXMLEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "0":
		*e = VoiceXMLEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VoiceXMLEnum: %s", s)
	}
}

type VoiceQueryParams struct {
	// Sets the sender. Must be a verified sender. Use an inbound number of yours or one of ours.
	From *string `queryParam:"style=form,explode=true,name=from"`
	// The text to convert to a voice message. Accepts valid XML too.
	Text string `queryParam:"style=form,explode=true,name=text"`
	// Determines the receiver. Must be a valid phone number or contact from the address book.
	To string `queryParam:"style=form,explode=true,name=to"`
	// Decides whether the parameter "text" is plain text or XML. The default value is 0.
	XML *VoiceXMLEnum `queryParam:"style=form,explode=true,name=xml"`
}

type VoiceRequest struct {
	QueryParams VoiceQueryParams
}

type VoiceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	Voice200TextPlainString *string
}
