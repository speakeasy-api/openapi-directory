// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StandardIdentifierEnum string

const (
	StandardIdentifierEnumProfile    StandardIdentifierEnum = "PROFILE"
	StandardIdentifierEnumAsset      StandardIdentifierEnum = "ASSET"
	StandardIdentifierEnumCase       StandardIdentifierEnum = "CASE"
	StandardIdentifierEnumUnique     StandardIdentifierEnum = "UNIQUE"
	StandardIdentifierEnumSecondary  StandardIdentifierEnum = "SECONDARY"
	StandardIdentifierEnumLookupOnly StandardIdentifierEnum = "LOOKUP_ONLY"
	StandardIdentifierEnumNewOnly    StandardIdentifierEnum = "NEW_ONLY"
	StandardIdentifierEnumOrder      StandardIdentifierEnum = "ORDER"
)

func (e StandardIdentifierEnum) ToPointer() *StandardIdentifierEnum {
	return &e
}

func (e *StandardIdentifierEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROFILE":
		fallthrough
	case "ASSET":
		fallthrough
	case "CASE":
		fallthrough
	case "UNIQUE":
		fallthrough
	case "SECONDARY":
		fallthrough
	case "LOOKUP_ONLY":
		fallthrough
	case "NEW_ONLY":
		fallthrough
	case "ORDER":
		*e = StandardIdentifierEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StandardIdentifierEnum: %v", v)
	}
}
