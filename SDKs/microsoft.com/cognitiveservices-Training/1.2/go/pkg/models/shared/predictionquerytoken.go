// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PredictionQueryTokenOrderByEnum string

const (
	PredictionQueryTokenOrderByEnumNewest    PredictionQueryTokenOrderByEnum = "Newest"
	PredictionQueryTokenOrderByEnumOldest    PredictionQueryTokenOrderByEnum = "Oldest"
	PredictionQueryTokenOrderByEnumSuggested PredictionQueryTokenOrderByEnum = "Suggested"
)

func (e PredictionQueryTokenOrderByEnum) ToPointer() *PredictionQueryTokenOrderByEnum {
	return &e
}

func (e *PredictionQueryTokenOrderByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Newest":
		fallthrough
	case "Oldest":
		fallthrough
	case "Suggested":
		*e = PredictionQueryTokenOrderByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PredictionQueryTokenOrderByEnum: %v", v)
	}
}

// PredictionQueryTokenInput - Parameters used to query the predictions. Limited to combining 2 tags
type PredictionQueryTokenInput struct {
	Application  *string                          `json:"Application,omitempty" form:"name=Application"`
	Continuation *string                          `json:"Continuation,omitempty" form:"name=Continuation"`
	EndTime      *time.Time                       `json:"EndTime,omitempty" form:"name=EndTime"`
	IterationID  *string                          `json:"IterationId,omitempty" form:"name=IterationId"`
	MaxCount     *int                             `json:"MaxCount,omitempty" form:"name=MaxCount"`
	OrderBy      *PredictionQueryTokenOrderByEnum `json:"OrderBy,omitempty" form:"name=OrderBy"`
	Session      *string                          `json:"Session,omitempty" form:"name=Session"`
	StartTime    *time.Time                       `json:"StartTime,omitempty" form:"name=StartTime"`
}

type PredictionQueryToken struct {
	Application  *string                          `json:"Application,omitempty"`
	Continuation *string                          `json:"Continuation,omitempty"`
	EndTime      *time.Time                       `json:"EndTime,omitempty"`
	IterationID  *string                          `json:"IterationId,omitempty"`
	MaxCount     *int                             `json:"MaxCount,omitempty"`
	OrderBy      *PredictionQueryTokenOrderByEnum `json:"OrderBy,omitempty"`
	Session      *string                          `json:"Session,omitempty"`
	StartTime    *time.Time                       `json:"StartTime,omitempty"`
	Tags         []PredictionQueryTag             `json:"Tags,omitempty"`
}
