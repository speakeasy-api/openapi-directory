// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartReplicationTaskAssessmentXAmzTargetEnum
type StartReplicationTaskAssessmentXAmzTargetEnum string

const (
	StartReplicationTaskAssessmentXAmzTargetEnumAmazonDmSv20160101StartReplicationTaskAssessment StartReplicationTaskAssessmentXAmzTargetEnum = "AmazonDMSv20160101.StartReplicationTaskAssessment"
)

func (e StartReplicationTaskAssessmentXAmzTargetEnum) ToPointer() *StartReplicationTaskAssessmentXAmzTargetEnum {
	return &e
}

func (e *StartReplicationTaskAssessmentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonDMSv20160101.StartReplicationTaskAssessment":
		*e = StartReplicationTaskAssessmentXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartReplicationTaskAssessmentXAmzTargetEnum: %v", v)
	}
}

type StartReplicationTaskAssessmentRequest struct {
	StartReplicationTaskAssessmentMessage shared.StartReplicationTaskAssessmentMessage `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            StartReplicationTaskAssessmentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartReplicationTaskAssessmentResponse struct {
	ContentType string
	// InvalidResourceStateFault
	InvalidResourceStateFault interface{}
	// ResourceNotFoundFault
	ResourceNotFoundFault interface{}
	// Success
	StartReplicationTaskAssessmentResponse *shared.StartReplicationTaskAssessmentResponse
	StatusCode                             int
	RawResponse                            *http.Response
}
