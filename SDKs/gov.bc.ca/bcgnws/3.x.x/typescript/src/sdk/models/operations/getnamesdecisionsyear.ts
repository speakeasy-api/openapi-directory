/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * A flag to indicate whether to embed the corresponding 'feature' into each matching name
 */
export enum GetNamesDecisionsYearEmbedEnum {
  Zero = "0",
  One = "1",
}

/**
 * The format of the output.
 */
export enum GetNamesDecisionsYearOutputFormatEnum {
  Json = "json",
  Xml = "xml",
  Kml = "kml",
  Csv = "csv",
}

/**
 * The EPSG code of the spatial reference system (SRS) to use for output geometries.
 */
export enum GetNamesDecisionsYearOutputSrsEnum {
  FourThousandThreeHundredAndTwentySix = "4326",
  FourThousandTwoHundredAndSixtyNine = "4269",
  ThreeThousandAndFive = "3005",
  ThreeThousandEightHundredAndFiftySeven = "3857",
  TwentySixThousandNineHundredAndSeven = "26907",
  TwentySixThousandNineHundredAndEight = "26908",
  TwentySixThousandNineHundredAndNine = "26909",
  TwentySixThousandNineHundredAndTen = "26910",
  TwentySixThousandNineHundredAndEleven = "26911",
}

/**
 * A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)
 */
export enum GetNamesDecisionsYearOutputStyleEnum {
  Summary = "summary",
  Detail = "detail",
}

/**
 * The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
 */
export enum GetNamesDecisionsYearSortByEnum {
  Name = "name",
  FeatureType = "featureType",
  DecisionDate = "decisionDate",
}

export class GetNamesDecisionsYearRequest extends SpeakeasyBase {
  /**
   * A flag to indicate whether to embed the corresponding 'feature' into each matching name
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=embed" })
  embed?: GetNamesDecisionsYearEmbedEnum;

  /**
   * A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=featureCategory",
  })
  featureCategory?: string;

  /**
   * A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=featureClass",
  })
  featureClass?: string;

  /**
   * A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=featureType",
  })
  featureType?: string;

  /**
   * The number of search results to return (1-200)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=itemsPerPage",
  })
  itemsPerPage?: number;

  /**
   * The format of the output.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=outputFormat",
  })
  outputFormat: GetNamesDecisionsYearOutputFormatEnum;

  /**
   * The EPSG code of the spatial reference system (SRS) to use for output geometries.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=outputSRS",
  })
  outputSRS?: GetNamesDecisionsYearOutputSrsEnum;

  /**
   * A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=outputStyle",
  })
  outputStyle?: GetNamesDecisionsYearOutputStyleEnum;

  /**
   * The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sortBy",
  })
  sortBy?: GetNamesDecisionsYearSortByEnum;

  /**
   * The index of the first record to be returned (>= 1)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startIndex",
  })
  startIndex?: number;

  /**
   * The year in which to search for names affected by naming decisions'.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year: number;
}

export class GetNamesDecisionsYearResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
