"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import campaignwrapped as shared_campaignwrapped
from typing import Optional


@dataclasses.dataclass
class GetResourcesCampaignsJSONRequest:
    
    max: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max', 'style': 'form', 'explode': False }})
    r"""The maximum number of records to return"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': False }})
    r"""The offset of the records set to return for pagination"""  
    sort: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': False }})
    r"""* Set of fields to sort the records by."""  
    

@dataclasses.dataclass
class GetResourcesCampaignsJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    campaign_wrapped: Optional[shared_campaignwrapped.CampaignWrapped] = dataclasses.field(default=None)
    r"""Returns the list of Campaigns."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    