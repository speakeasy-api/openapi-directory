<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PerformanceThreshold - A PerformanceThreshold is used when each window is good when that window has a sufficiently high performance.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PerformanceThreshold
{
    /**
     * An SLI measuring performance on a well-known service type. Performance will be computed on the basis of pre-defined metrics. The type of the service_resource determines the metrics to use and the service_resource.labels and metric_labels are used to construct a monitoring filter to filter that metric down to just the data relevant to this service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BasicSli $basicSliPerformance
     */
	#[\JMS\Serializer\Annotation\SerializedName('basicSliPerformance')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BasicSli')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BasicSli $basicSliPerformance = null;
    
    /**
     * Service Level Indicators for which atomic units of service are counted directly.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RequestBasedSli $performance
     */
	#[\JMS\Serializer\Annotation\SerializedName('performance')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RequestBasedSli')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RequestBasedSli $performance = null;
    
    /**
     * If window performance >= threshold, the window is counted as good.
     * 
     * @var ?float $threshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('threshold')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $threshold = null;
    
	public function __construct()
	{
		$this->basicSliPerformance = null;
		$this->performance = null;
		$this->threshold = null;
	}
}
