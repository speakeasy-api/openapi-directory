// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BooksVolumesGetSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// BooksVolumesGetProjectionEnum - Restrict information returned to a set of selected fields.
type BooksVolumesGetProjectionEnum string

const (
	BooksVolumesGetProjectionEnumProjectionUndefined BooksVolumesGetProjectionEnum = "PROJECTION_UNDEFINED"
	BooksVolumesGetProjectionEnumFull                BooksVolumesGetProjectionEnum = "FULL"
	BooksVolumesGetProjectionEnumLite                BooksVolumesGetProjectionEnum = "LITE"
)

func (e BooksVolumesGetProjectionEnum) ToPointer() *BooksVolumesGetProjectionEnum {
	return &e
}

func (e *BooksVolumesGetProjectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROJECTION_UNDEFINED":
		fallthrough
	case "FULL":
		fallthrough
	case "LITE":
		*e = BooksVolumesGetProjectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BooksVolumesGetProjectionEnum: %v", v)
	}
}

type BooksVolumesGetRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// ISO-3166-1 code to override the IP-based location.
	Country *string `queryParam:"style=form,explode=true,name=country"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Set to true to include non-comics series. Defaults to false.
	IncludeNonComicsSeries *bool `queryParam:"style=form,explode=true,name=includeNonComicsSeries"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Brand results for partner ID.
	Partner *string `queryParam:"style=form,explode=true,name=partner"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Restrict information returned to a set of selected fields.
	Projection *BooksVolumesGetProjectionEnum `queryParam:"style=form,explode=true,name=projection"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// string to identify the originator of this request.
	Source *string `queryParam:"style=form,explode=true,name=source"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol            *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	UserLibraryConsistentRead *bool   `queryParam:"style=form,explode=true,name=user_library_consistent_read"`
	// ID of volume to retrieve.
	VolumeID string `pathParam:"style=simple,explode=false,name=volumeId"`
}

type BooksVolumesGetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	Volume *shared.Volume
}
