"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventbatchrecordfailure as shared_eventbatchrecordfailure
from ..shared import eventrecordfailure as shared_eventrecordfailure
from ..shared import playerevent as shared_playerevent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventUpdateResponse:
    r"""An event period update resource."""
    
    batch_failures: Optional[list[shared_eventbatchrecordfailure.EventBatchRecordFailure]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchFailures'), 'exclude': lambda f: f is None }})
    r"""Any batch-wide failures which occurred applying updates."""  
    event_failures: Optional[list[shared_eventrecordfailure.EventRecordFailure]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventFailures'), 'exclude': lambda f: f is None }})
    r"""Any failures updating a particular event."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateResponse`."""  
    player_events: Optional[list[shared_playerevent.PlayerEvent]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('playerEvents'), 'exclude': lambda f: f is None }})
    r"""The current status of any updated events"""  
    