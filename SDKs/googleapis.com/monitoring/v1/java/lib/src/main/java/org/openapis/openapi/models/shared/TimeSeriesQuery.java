/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TimeSeriesQuery - TimeSeriesQuery collects the set of supported methods for querying time series data from the Stackdriver metrics API.
 */
public class TimeSeriesQuery {
    /**
     * A query used to fetch time series with PromQL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prometheusQuery")
    public String prometheusQuery;
    public TimeSeriesQuery withPrometheusQuery(String prometheusQuery) {
        this.prometheusQuery = prometheusQuery;
        return this;
    }
    
    /**
     * A filter that defines a subset of time series data that is displayed in a widget. Time series data is fetched using the ListTimeSeries (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeSeriesFilter")
    public TimeSeriesFilter timeSeriesFilter;
    public TimeSeriesQuery withTimeSeriesFilter(TimeSeriesFilter timeSeriesFilter) {
        this.timeSeriesFilter = timeSeriesFilter;
        return this;
    }
    
    /**
     * A pair of time series filters that define a ratio computation. The output time series is the pair-wise division of each aligned element from the numerator and denominator time series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeSeriesFilterRatio")
    public TimeSeriesFilterRatio timeSeriesFilterRatio;
    public TimeSeriesQuery withTimeSeriesFilterRatio(TimeSeriesFilterRatio timeSeriesFilterRatio) {
        this.timeSeriesFilterRatio = timeSeriesFilterRatio;
        return this;
    }
    
    /**
     * A query used to fetch time series with MQL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeSeriesQueryLanguage")
    public String timeSeriesQueryLanguage;
    public TimeSeriesQuery withTimeSeriesQueryLanguage(String timeSeriesQueryLanguage) {
        this.timeSeriesQueryLanguage = timeSeriesQueryLanguage;
        return this;
    }
    
    /**
     * The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the unit (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in MetricDescriptor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitOverride")
    public String unitOverride;
    public TimeSeriesQuery withUnitOverride(String unitOverride) {
        this.unitOverride = unitOverride;
        return this;
    }
    
}
