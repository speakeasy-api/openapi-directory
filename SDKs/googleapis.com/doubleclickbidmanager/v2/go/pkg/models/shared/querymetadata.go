// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// QueryMetadataFormatEnum - Format of the generated report.
type QueryMetadataFormatEnum string

const (
	QueryMetadataFormatEnumFormatUnspecified QueryMetadataFormatEnum = "FORMAT_UNSPECIFIED"
	QueryMetadataFormatEnumCsv               QueryMetadataFormatEnum = "CSV"
	QueryMetadataFormatEnumXlsx              QueryMetadataFormatEnum = "XLSX"
)

func (e *QueryMetadataFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FORMAT_UNSPECIFIED":
		fallthrough
	case "CSV":
		fallthrough
	case "XLSX":
		*e = QueryMetadataFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryMetadataFormatEnum: %s", s)
	}
}

// QueryMetadata - Query metadata.
type QueryMetadata struct {
	// Report data range.
	DataRange *DataRange `json:"dataRange,omitempty"`
	// Format of the generated report.
	Format *QueryMetadataFormatEnum `json:"format,omitempty"`
	// Whether to send an email notification when a report is ready. Defaults to false.
	SendNotification *bool `json:"sendNotification,omitempty"`
	// List of email addresses which are sent email notifications when the report is finished. Separate from send_notification.
	ShareEmailAddress []string `json:"shareEmailAddress,omitempty"`
	// Query title. It is used to name the reports generated from this query.
	Title *string `json:"title,omitempty"`
}
