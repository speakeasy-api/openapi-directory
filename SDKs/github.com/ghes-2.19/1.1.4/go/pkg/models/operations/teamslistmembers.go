// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// TeamsListMembersRoleEnum - Filters members returned by their role in the team. Can be one of:
// \* `member` - normal members of the team.
// \* `maintainer` - team maintainers.
// \* `all` - all members of the team.
type TeamsListMembersRoleEnum string

const (
	TeamsListMembersRoleEnumMember     TeamsListMembersRoleEnum = "member"
	TeamsListMembersRoleEnumMaintainer TeamsListMembersRoleEnum = "maintainer"
	TeamsListMembersRoleEnumAll        TeamsListMembersRoleEnum = "all"
)

func (e *TeamsListMembersRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "member":
		fallthrough
	case "maintainer":
		fallthrough
	case "all":
		*e = TeamsListMembersRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamsListMembersRoleEnum: %s", s)
	}
}

type TeamsListMembersRequest struct {
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Results per page (max 100)
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Filters members returned by their role in the team. Can be one of:
	// \* `member` - normal members of the team.
	// \* `maintainer` - team maintainers.
	// \* `all` - all members of the team.
	Role   *TeamsListMembersRoleEnum `queryParam:"style=form,explode=true,name=role"`
	TeamID int64                     `pathParam:"style=simple,explode=false,name=team_id"`
}

type TeamsListMembersResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	SimpleUsers []shared.SimpleUser
}
