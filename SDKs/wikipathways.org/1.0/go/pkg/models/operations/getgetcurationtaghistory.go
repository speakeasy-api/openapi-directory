// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetGetCurationTagHistoryFormatEnum
type GetGetCurationTagHistoryFormatEnum string

const (
	GetGetCurationTagHistoryFormatEnumJSON GetGetCurationTagHistoryFormatEnum = "json"
	GetGetCurationTagHistoryFormatEnumXML  GetGetCurationTagHistoryFormatEnum = "xml"
	GetGetCurationTagHistoryFormatEnumHTML GetGetCurationTagHistoryFormatEnum = "html"
	GetGetCurationTagHistoryFormatEnumDump GetGetCurationTagHistoryFormatEnum = "dump"
	GetGetCurationTagHistoryFormatEnumJpg  GetGetCurationTagHistoryFormatEnum = "jpg"
	GetGetCurationTagHistoryFormatEnumPdf  GetGetCurationTagHistoryFormatEnum = "pdf"
)

func (e *GetGetCurationTagHistoryFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetGetCurationTagHistoryFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGetCurationTagHistoryFormatEnum: %s", s)
	}
}

type GetGetCurationTagHistoryQueryParams struct {
	Format *GetGetCurationTagHistoryFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The pathway identifier
	PwID string `queryParam:"style=form,explode=true,name=pwId"`
	// Only include history from after the given date
	Timestamp *string `queryParam:"style=form,explode=true,name=timestamp"`
}

type GetGetCurationTagHistoryRequest struct {
	QueryParams GetGetCurationTagHistoryQueryParams
}

type GetGetCurationTagHistoryResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
