/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InventoryAdjustmentGroup } from "./inventoryadjustmentgroup";
import { Money } from "./money";
import { SourceApplication } from "./sourceapplication";
import { Expose, Type } from "class-transformer";

/**
 * Represents a change in state or quantity of product inventory at a
 *
 * @remarks
 * particular time and location.
 */
export class InventoryAdjustment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "adjustment_group" })
  @Type(() => InventoryAdjustmentGroup)
  adjustmentGroup?: InventoryAdjustmentGroup;

  /**
   * The Square-generated ID of the
   *
   * @remarks
   * [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) being tracked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "catalog_object_id" })
  catalogObjectId?: string;

  /**
   * The [type](https://developer.squareup.com/reference/square_2021-08-18/enums/CatalogObjectType) of the
   *
   * @remarks
   * [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) being tracked. Tracking is only
   * supported for the `ITEM_VARIATION` type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "catalog_object_type" })
  catalogObjectType?: string;

  /**
   * An RFC 3339-formatted timestamp that indicates when the inventory adjustment is received.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * The Square-generated ID of the [Employee](https://developer.squareup.com/reference/square_2021-08-18/objects/Employee) responsible for the
   *
   * @remarks
   * inventory adjustment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "employee_id" })
  employeeId?: string;

  /**
   * The [inventory state](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryState) of the related quantity
   *
   * @remarks
   * of items before the adjustment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from_state" })
  fromState?: string;

  /**
   * The Square-generated ID of the goods receipt that caused the
   *
   * @remarks
   * adjustment. Only relevant for state transitions from the Square for Retail
   * app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "goods_receipt_id" })
  goodsReceiptId?: string;

  /**
   * A unique ID generated by Square for the
   *
   * @remarks
   * `InventoryAdjustment`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The Square-generated ID of the [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) where the related
   *
   * @remarks
   * quantity of items is being tracked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId?: string;

  /**
   * A client-generated RFC 3339-formatted timestamp that indicates when
   *
   * @remarks
   * the inventory adjustment took place. For inventory adjustment updates, the `occurred_at`
   * timestamp cannot be older than 24 hours or in the future relative to the
   * time of the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "occurred_at" })
  occurredAt?: string;

  /**
   * The Square-generated ID of the purchase order that caused the
   *
   * @remarks
   * adjustment. Only relevant for state transitions from the Square for Retail
   * app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purchase_order_id" })
  purchaseOrderId?: string;

  /**
   * The number of items affected by the adjustment as a decimal string.
   *
   * @remarks
   * Can support up to 5 digits after the decimal point.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: string;

  /**
   * An optional ID provided by the application to tie the
   *
   * @remarks
   * `InventoryAdjustment` to an external
   * system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference_id" })
  referenceId?: string;

  /**
   * The Square-generated ID of the [Refund][#type-refund] that
   *
   * @remarks
   * caused the adjustment. Only relevant for refund-related state
   * transitions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refund_id" })
  refundId?: string;

  /**
   * Provides information about the application used to generate a change.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => SourceApplication)
  source?: SourceApplication;

  /**
   * The [inventory state](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryState) of the related quantity
   *
   * @remarks
   * of items after the adjustment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to_state" })
  toState?: string;

  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_price_money" })
  @Type(() => Money)
  totalPriceMoney?: Money;

  /**
   * The Square-generated ID of the [Transaction][#type-transaction] that
   *
   * @remarks
   * caused the adjustment. Only relevant for payment-related state
   * transitions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId?: string;
}
