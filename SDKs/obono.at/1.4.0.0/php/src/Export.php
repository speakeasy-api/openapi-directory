<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Export 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * getExportCsvRegistrierkassenRegistrierkasseUuidBelege
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetExportCsvRegistrierkassenRegistrierkasseUuidBelegeRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetExportCsvRegistrierkassenRegistrierkasseUuidBelegeResponse
     */
	public function getExportCsvRegistrierkassenRegistrierkasseUuidBelege(
        \OpenAPI\OpenAPI\Models\Operations\GetExportCsvRegistrierkassenRegistrierkasseUuidBelegeRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetExportCsvRegistrierkassenRegistrierkasseUuidBelegeResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/export/csv/registrierkassen/{registrierkasseUuid}/belege', \OpenAPI\OpenAPI\Models\Operations\GetExportCsvRegistrierkassenRegistrierkasseUuidBelegeRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetExportCsvRegistrierkassenRegistrierkasseUuidBelegeRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetExportCsvRegistrierkassenRegistrierkasseUuidBelegeResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * getExportDep131RegistrierkassenRegistrierkasseUuidBelege
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetExportDep131RegistrierkassenRegistrierkasseUuidBelegeRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetExportDep131RegistrierkassenRegistrierkasseUuidBelegeResponse
     */
	public function getExportDep131RegistrierkassenRegistrierkasseUuidBelege(
        \OpenAPI\OpenAPI\Models\Operations\GetExportDep131RegistrierkassenRegistrierkasseUuidBelegeRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetExportDep131RegistrierkassenRegistrierkasseUuidBelegeResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/export/dep131/registrierkassen/{registrierkasseUuid}/belege', \OpenAPI\OpenAPI\Models\Operations\GetExportDep131RegistrierkassenRegistrierkasseUuidBelegeRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetExportDep131RegistrierkassenRegistrierkasseUuidBelegeRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetExportDep131RegistrierkassenRegistrierkasseUuidBelegeResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * getExportDep7RegistrierkassenRegistrierkasseUuidBelege
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetExportDep7RegistrierkassenRegistrierkasseUuidBelegeRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetExportDep7RegistrierkassenRegistrierkasseUuidBelegeResponse
     */
	public function getExportDep7RegistrierkassenRegistrierkasseUuidBelege(
        \OpenAPI\OpenAPI\Models\Operations\GetExportDep7RegistrierkassenRegistrierkasseUuidBelegeRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetExportDep7RegistrierkassenRegistrierkasseUuidBelegeResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/export/dep7/registrierkassen/{registrierkasseUuid}/belege', \OpenAPI\OpenAPI\Models\Operations\GetExportDep7RegistrierkassenRegistrierkasseUuidBelegeRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetExportDep7RegistrierkassenRegistrierkasseUuidBelegeRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetExportDep7RegistrierkassenRegistrierkasseUuidBelegeResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * getExportGobdRegistrierkassenRegistrierkasseUuid
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetExportGobdRegistrierkassenRegistrierkasseUuidRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetExportGobdRegistrierkassenRegistrierkasseUuidResponse
     */
	public function getExportGobdRegistrierkassenRegistrierkasseUuid(
        \OpenAPI\OpenAPI\Models\Operations\GetExportGobdRegistrierkassenRegistrierkasseUuidRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetExportGobdRegistrierkassenRegistrierkasseUuidResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/export/gobd/registrierkassen/{registrierkasseUuid}', \OpenAPI\OpenAPI\Models\Operations\GetExportGobdRegistrierkassenRegistrierkasseUuidRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetExportGobdRegistrierkassenRegistrierkasseUuidRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetExportGobdRegistrierkassenRegistrierkasseUuidResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * getExportHtmlBelegeBelegUuid
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetExportHtmlBelegeBelegUuidRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetExportHtmlBelegeBelegUuidResponse
     */
	public function getExportHtmlBelegeBelegUuid(
        \OpenAPI\OpenAPI\Models\Operations\GetExportHtmlBelegeBelegUuidRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetExportHtmlBelegeBelegUuidResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/export/html/belege/{belegUuid}', \OpenAPI\OpenAPI\Models\Operations\GetExportHtmlBelegeBelegUuidRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetExportHtmlBelegeBelegUuidResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * getExportPdfBelegeBelegUuid
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetExportPdfBelegeBelegUuidRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetExportPdfBelegeBelegUuidResponse
     */
	public function getExportPdfBelegeBelegUuid(
        \OpenAPI\OpenAPI\Models\Operations\GetExportPdfBelegeBelegUuidRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetExportPdfBelegeBelegUuidResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/export/pdf/belege/{belegUuid}', \OpenAPI\OpenAPI\Models\Operations\GetExportPdfBelegeBelegUuidRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetExportPdfBelegeBelegUuidResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * getExportQrBelegeBelegUuid
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetExportQrBelegeBelegUuidRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetExportQrBelegeBelegUuidResponse
     */
	public function getExportQrBelegeBelegUuid(
        \OpenAPI\OpenAPI\Models\Operations\GetExportQrBelegeBelegUuidRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetExportQrBelegeBelegUuidResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/export/qr/belege/{belegUuid}', \OpenAPI\OpenAPI\Models\Operations\GetExportQrBelegeBelegUuidRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetExportQrBelegeBelegUuidResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * getExportThermalPrintBelegeBelegUuid
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetExportThermalPrintBelegeBelegUuidRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetExportThermalPrintBelegeBelegUuidResponse
     */
	public function getExportThermalPrintBelegeBelegUuid(
        \OpenAPI\OpenAPI\Models\Operations\GetExportThermalPrintBelegeBelegUuidRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetExportThermalPrintBelegeBelegUuidResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/export/thermal-print/belege/{belegUuid}', \OpenAPI\OpenAPI\Models\Operations\GetExportThermalPrintBelegeBelegUuidRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetExportThermalPrintBelegeBelegUuidRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetExportThermalPrintBelegeBelegUuidResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * getExportXlsRegistrierkassenRegistrierkasseUuidBelege
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetExportXlsRegistrierkassenRegistrierkasseUuidBelegeRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetExportXlsRegistrierkassenRegistrierkasseUuidBelegeResponse
     */
	public function getExportXlsRegistrierkassenRegistrierkasseUuidBelege(
        \OpenAPI\OpenAPI\Models\Operations\GetExportXlsRegistrierkassenRegistrierkasseUuidBelegeRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetExportXlsRegistrierkassenRegistrierkasseUuidBelegeResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/export/xls/registrierkassen/{registrierkasseUuid}/belege', \OpenAPI\OpenAPI\Models\Operations\GetExportXlsRegistrierkassenRegistrierkasseUuidBelegeRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetExportXlsRegistrierkassenRegistrierkasseUuidBelegeRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetExportXlsRegistrierkassenRegistrierkasseUuidBelegeResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
}