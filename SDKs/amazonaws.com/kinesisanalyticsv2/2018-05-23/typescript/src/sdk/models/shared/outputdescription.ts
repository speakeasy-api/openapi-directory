/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DestinationSchema } from "./destinationschema";
import { KinesisFirehoseOutputDescription } from "./kinesisfirehoseoutputdescription";
import { KinesisStreamsOutputDescription } from "./kinesisstreamsoutputdescription";
import { LambdaOutputDescription } from "./lambdaoutputdescription";
import { Expose, Type } from "class-transformer";

/**
 * For a SQL-based Kinesis Data Analytics application, describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream.
 */
export class OutputDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DestinationSchema" })
  @Type(() => DestinationSchema)
  destinationSchema?: DestinationSchema;

  @SpeakeasyMetadata()
  @Expose({ name: "KinesisFirehoseOutputDescription" })
  @Type(() => KinesisFirehoseOutputDescription)
  kinesisFirehoseOutputDescription?: KinesisFirehoseOutputDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "KinesisStreamsOutputDescription" })
  @Type(() => KinesisStreamsOutputDescription)
  kinesisStreamsOutputDescription?: KinesisStreamsOutputDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "LambdaOutputDescription" })
  @Type(() => LambdaOutputDescription)
  lambdaOutputDescription?: LambdaOutputDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputId" })
  outputId?: string;
}
