/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BiddingFunction } from "./biddingfunction";
import { Expose, Type } from "class-transformer";

/**
 * A response containing a list of a bidder's bidding functions.
 */
export class ListBiddingFunctionsResponse extends SpeakeasyBase {
  /**
   * A list of a bidder's bidding functions.
   */
  @SpeakeasyMetadata({ elemType: BiddingFunction })
  @Expose({ name: "biddingFunctions" })
  @Type(() => BiddingFunction)
  biddingFunctions?: BiddingFunction[];

  /**
   * A token which can be passed to a subsequent call to the `ListBiddingFunctions` method to retrieve the next page of results in ListBiddingFunctionsRequest.pageToken.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
