/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ConfigPropertyRepresentation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultValue")
    public java.util.Map<String, Object> defaultValue;
    public ConfigPropertyRepresentation withDefaultValue(java.util.Map<String, Object> defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("helpText")
    public String helpText;
    public ConfigPropertyRepresentation withHelpText(String helpText) {
        this.helpText = helpText;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;
    public ConfigPropertyRepresentation withLabel(String label) {
        this.label = label;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ConfigPropertyRepresentation withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public String[] options;
    public ConfigPropertyRepresentation withOptions(String[] options) {
        this.options = options;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public Boolean secret;
    public ConfigPropertyRepresentation withSecret(Boolean secret) {
        this.secret = secret;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public ConfigPropertyRepresentation withType(String type) {
        this.type = type;
        return this;
    }
    
}
