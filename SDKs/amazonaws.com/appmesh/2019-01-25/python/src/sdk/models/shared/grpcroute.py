"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import grpcretrypolicy as shared_grpcretrypolicy
from ..shared import grpcrouteaction as shared_grpcrouteaction
from ..shared import grpcroutematch as shared_grpcroutematch
from ..shared import grpctimeout as shared_grpctimeout
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GrpcRoute:
    r"""An object that represents a gRPC route type."""
    
    action: shared_grpcrouteaction.GrpcRouteAction = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action') }})  
    match: shared_grpcroutematch.GrpcRouteMatch = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('match') }})  
    retry_policy: Optional[shared_grpcretrypolicy.GrpcRetryPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retryPolicy'), 'exclude': lambda f: f is None }})  
    timeout: Optional[shared_grpctimeout.GrpcTimeout] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeout'), 'exclude': lambda f: f is None }})  
    