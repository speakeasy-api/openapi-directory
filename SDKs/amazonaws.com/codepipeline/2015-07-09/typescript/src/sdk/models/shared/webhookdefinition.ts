/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WebhookAuthConfiguration } from "./webhookauthconfiguration";
import { WebhookAuthenticationTypeEnum } from "./webhookauthenticationtypeenum";
import { WebhookFilterRule } from "./webhookfilterrule";
import { Expose, Type } from "class-transformer";

/**
 * Represents information about a webhook and its definition.
 */
export class WebhookDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  authentication: WebhookAuthenticationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "authenticationConfiguration" })
  @Type(() => WebhookAuthConfiguration)
  authenticationConfiguration: WebhookAuthConfiguration;

  @SpeakeasyMetadata({ elemType: WebhookFilterRule })
  @Expose({ name: "filters" })
  @Type(() => WebhookFilterRule)
  filters: WebhookFilterRule[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "targetAction" })
  targetAction: string;

  @SpeakeasyMetadata()
  @Expose({ name: "targetPipeline" })
  targetPipeline: string;
}
