/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CatalogCustomAttributeDefinitionSelectionConfig - Configuration associated with `SELECTION`-type custom attribute definitions.
 */
public class CatalogCustomAttributeDefinitionSelectionConfig {
    /**
     * The set of valid `CatalogCustomAttributeSelections`. Up to a maximum of 100
     * selections can be defined. Can be modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowed_selections")
    public CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection[] allowedSelections;

    public CatalogCustomAttributeDefinitionSelectionConfig withAllowedSelections(CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection[] allowedSelections) {
        this.allowedSelections = allowedSelections;
        return this;
    }
    
    /**
     * The maximum number of selections that can be set. The maximum value for this
     * attribute is 100. The default value is 1. The value can be modified, but changing the value will not
     * affect existing custom attribute values on objects. Clients need to
     * handle custom attributes with more selected values than allowed by this limit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_allowed_selections")
    public Long maxAllowedSelections;

    public CatalogCustomAttributeDefinitionSelectionConfig withMaxAllowedSelections(Long maxAllowedSelections) {
        this.maxAllowedSelections = maxAllowedSelections;
        return this;
    }
    
    public CatalogCustomAttributeDefinitionSelectionConfig(){}
}
