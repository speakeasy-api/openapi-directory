// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetcampaignaudiencesHeaders struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Describes the type of the content being sent.
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

type GetcampaignaudiencesRequest struct {
	Headers GetcampaignaudiencesHeaders
}

// Getcampaignaudiences200ApplicationJSONLastModified - Object with information about the most recent update of the campaign audience.
type Getcampaignaudiences200ApplicationJSONLastModified struct {
	// Date of the most recent update in UTC format.
	DateUtc *string `json:"dateUtc,omitempty"`
	// Email of the user who updated the campaign audience for the latest time.
	User *string `json:"user,omitempty"`
}

// Getcampaignaudiences200ApplicationJSONTargetConfigurationsAffiliates - Object with information of the affiliate.
type Getcampaignaudiences200ApplicationJSONTargetConfigurationsAffiliates struct {
	// Affiliate ID.
	ID *string `json:"id,omitempty"`
	// Affiliate Name.
	Name *string `json:"name,omitempty"`
}

// Getcampaignaudiences200ApplicationJSONTargetConfigurationsBrands - Object with information of the brand.
type Getcampaignaudiences200ApplicationJSONTargetConfigurationsBrands struct {
	// Brand ID.
	ID *string `json:"id,omitempty"`
	// Brand Name.
	Name *string `json:"name,omitempty"`
}

// Getcampaignaudiences200ApplicationJSONTargetConfigurationsCategories - Object with information of the category.
type Getcampaignaudiences200ApplicationJSONTargetConfigurationsCategories struct {
	// Category ID.
	ID *string `json:"id,omitempty"`
	// Category Name.
	Name *string `json:"name,omitempty"`
}

// Getcampaignaudiences200ApplicationJSONTargetConfigurationsCollections - Object with information of the collection.
type Getcampaignaudiences200ApplicationJSONTargetConfigurationsCollections struct {
	// Collection ID.
	ID *string `json:"id,omitempty"`
	// Collection Name.
	Name *string `json:"name,omitempty"`
}

// Getcampaignaudiences200ApplicationJSONTargetConfigurationsPaymentsMethods - Object with information of the Payment Method.
type Getcampaignaudiences200ApplicationJSONTargetConfigurationsPaymentsMethods struct {
	// Payment Method ID.
	ID *string `json:"id,omitempty"`
	// Payment Method Name.
	Name *string `json:"name,omitempty"`
}

// Getcampaignaudiences200ApplicationJSONTargetConfigurationsProducts - Object with information of the product.
type Getcampaignaudiences200ApplicationJSONTargetConfigurationsProducts struct {
	// Product ID.
	ID *string `json:"id,omitempty"`
	// Product Name.
	Name *string `json:"name,omitempty"`
}

// Getcampaignaudiences200ApplicationJSONTargetConfigurationsSkus - Object with information of the SKU.
type Getcampaignaudiences200ApplicationJSONTargetConfigurationsSkus struct {
	// SKU ID.
	ID *string `json:"id,omitempty"`
	// SKU Name.
	Name *string `json:"name,omitempty"`
}

// Getcampaignaudiences200ApplicationJSONTargetConfigurationsZipCodeRanges - Zip code that applies the campaign audience.
type Getcampaignaudiences200ApplicationJSONTargetConfigurationsZipCodeRanges struct {
	// Defines if the zip code applies the campaign audience.
	Inclusive *bool `json:"inclusive,omitempty"`
}

// Getcampaignaudiences200ApplicationJSONTargetConfigurations - Object with information about the target audience.
type Getcampaignaudiences200ApplicationJSONTargetConfigurations struct {
	// Marketplace order identifier. The discount will apply to selected affiliates.
	Affiliates []Getcampaignaudiences200ApplicationJSONTargetConfigurationsAffiliates `json:"affiliates,omitempty"`
	// Defines if the trade policy IDs are exclusive.
	AreSalesChannelIdsExclusive *bool `json:"areSalesChannelIdsExclusive,omitempty"`
	// Object composed by the brands that will activate or deactivate the campaign audience.
	Brands []Getcampaignaudiences200ApplicationJSONTargetConfigurationsBrands `json:"brands,omitempty"`
	// If set to `true`, this campaign audience will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this campaign audience not to be applied.
	BrandsAreInclusive *bool `json:"brandsAreInclusive,omitempty"`
	// Campaign Audiences that activate this promotion.
	Campaigns   []interface{} `json:"campaigns,omitempty"`
	CardIssuers []interface{} `json:"cardIssuers,omitempty"`
	// Object composed by the categories that will activate or deactivate the campaign audience.
	Categories []Getcampaignaudiences200ApplicationJSONTargetConfigurationsCategories `json:"categories,omitempty"`
	// If set to `true`, this campaign audience will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this campaign audience not to be applied.
	CategoriesAreInclusive *bool `json:"categoriesAreInclusive,omitempty"`
	// An expression to use with clusters.
	ClusterExpressions []string `json:"clusterExpressions,omitempty"`
	ClusterOperator    *string  `json:"clusterOperator,omitempty"`
	// Object composed by the collections that will activate or deactivate the campaign audience.
	Collections []Getcampaignaudiences200ApplicationJSONTargetConfigurationsCollections `json:"collections,omitempty"`
	// Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.
	Collections1BuyTogether []string      `json:"collections1BuyTogether,omitempty"`
	Collections2BuyTogether []interface{} `json:"collections2BuyTogether,omitempty"`
	// If set to `true`, this campaign audience will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this campaign audience not to be applied.
	CollectionsIsInclusive *bool `json:"collectionsIsInclusive,omitempty"`
	// If the **List Price** and **Price** are the same.
	CompareListPriceAndPrice *bool         `json:"compareListPriceAndPrice,omitempty"`
	Coupon                   []interface{} `json:"coupon,omitempty"`
	// Number of days that are considered to add the purchase history.
	DaysAgoOfPurchases *int64 `json:"daysAgoOfPurchases,omitempty"`
	// Enable **Buy Together** per SKU.
	EnableBuyTogetherPerSku *bool `json:"enableBuyTogetherPerSku,omitempty"`
	// Defines if the target audience is featured (`true`) or not (`false`).
	Featured *bool `json:"featured,omitempty"`
	// Applies the discount even if the user is not logged.
	FirstBuyIsProfileOptimistic *bool `json:"firstBuyIsProfileOptimistic,omitempty"`
	// Gifts List Type.
	GiftListTypes []string `json:"giftListTypes,omitempty"`
	// Target audience ID.
	ID *string `json:"id,omitempty"`
	// Defines if at least one of the sellers must be valid to active the campaign audience.
	IDSellerIsInclusive *bool `json:"idSellerIsInclusive,omitempty"`
	// Array with all the trade policies that activate the campaign audience.
	IdsSalesChannel []string `json:"idsSalesChannel,omitempty"`
	Installment     *int64   `json:"installment,omitempty"`
	// Applies the campaign audience only if the list price and price is different.
	IsDifferentListPriceAndPrice *bool `json:"isDifferentListPriceAndPrice,omitempty"`
	// Applies the discount only if it's a first buy.
	IsFirstBuy *bool `json:"isFirstBuy,omitempty"`
	// Set if the campaign audience will be applied considering a minimum and maximum values for installments.
	IsMinMaxInstallments *bool `json:"isMinMaxInstallments,omitempty"`
	// Applies selected discount only when one of the defined shipping method is selected by the customer.
	IsSLASelected *bool `json:"isSlaSelected,omitempty"`
	// Maximum price of the item.
	ItemMaxPrice *float64 `json:"itemMaxPrice,omitempty"`
	// Minimum price of the item.
	ItemMinPrice *float64 `json:"itemMinPrice,omitempty"`
	// Brand first list for the promotion **Buy Together.
	ListBrand1BuyTogether []interface{} `json:"listBrand1BuyTogether,omitempty"`
	// Category first list for the promotion **Buy Together**.
	ListCategory1BuyTogether []interface{} `json:"listCategory1BuyTogether,omitempty"`
	// SKU first list for the promotion **Buy Together**.
	ListSku1BuyTogether []interface{} `json:"listSku1BuyTogether,omitempty"`
	// SKU second list for the promotion **Buy Together**.
	ListSku2BuyTogether []interface{} `json:"listSku2BuyTogether,omitempty"`
	// Array with all the campaign audience's marketing tags.
	MarketingTags []string `json:"marketingTags,omitempty"`
	// Defines if marketing tags are not inclusive.
	MarketingTagsAreNotInclusive *bool `json:"marketingTagsAreNotInclusive,omitempty"`
	// Maximum value for installment.
	MaxInstallment *int64 `json:"maxInstallment,omitempty"`
	// Defines how many times the campaign audience can be used.
	MaxUsage *int64 `json:"maxUsage,omitempty"`
	// Defines if the campaign audience can be used multiple times per client.
	MaxUsagePerClient *int64        `json:"maxUsagePerClient,omitempty"`
	Merchants         []interface{} `json:"merchants,omitempty"`
	// Minimum value for installment.
	MinInstallment *int64 `json:"minInstallment,omitempty"`
	// Minimum quantity for **Buy Together** promotion.
	MinimumQuantityBuyTogether *int64 `json:"minimumQuantityBuyTogether,omitempty"`
	// Defines if the campaign audience can be used multiple times per client.
	MultipleUsePerClient *bool `json:"multipleUsePerClient,omitempty"`
	// Target audience name.
	Name *string `json:"name,omitempty"`
	// Shows the campaign audience origin, `Marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.
	Origin *string `json:"origin,omitempty"`
	// Array composed by all the Payments Methods.
	PaymentsMethods []Getcampaignaudiences200ApplicationJSONTargetConfigurationsPaymentsMethods `json:"paymentsMethods,omitempty"`
	PaymentsRules   []interface{}                                                               `json:"paymentsRules,omitempty"`
	// Percentual discount value list.
	PercentualDiscountValueList []float64 `json:"percentualDiscountValueList,omitempty"`
	// Object composed by the products that will activate or deactivate the campaign audience.
	Products []Getcampaignaudiences200ApplicationJSONTargetConfigurationsProducts `json:"products,omitempty"`
	// If set to `true`, this campaign audience will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this campaign audience not to be applied.
	ProductsAreInclusive   *bool         `json:"productsAreInclusive,omitempty"`
	ProductsSpecifications []interface{} `json:"productsSpecifications,omitempty"`
	// Quantity to affect **Buy Together** promotion.
	QuantityToAffectBuyTogether *int64 `json:"quantityToAffectBuyTogether,omitempty"`
	// The discount will be granted if the card's BIN is given.
	RestrictionsBins []string `json:"restrictionsBins,omitempty"`
	// Should distribute discount among matched items.
	ShouldDistributeDiscountAmongMatchedItems *bool `json:"shouldDistributeDiscountAmongMatchedItems,omitempty"`
	// Object composed by the SKUs that will activate or deactivate the campaign audience.
	Skus []Getcampaignaudiences200ApplicationJSONTargetConfigurationsSkus `json:"skus,omitempty"`
	// If set to `true`, this campaign audience will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this campaign audience not to be applied.
	SkusAreInclusive *bool `json:"skusAreInclusive,omitempty"`
	// The discount will be granted if the shipping method is the same as the one given.
	SlasIds            []string      `json:"slasIds,omitempty"`
	Stores             []interface{} `json:"stores,omitempty"`
	StoresAreInclusive *bool         `json:"storesAreInclusive,omitempty"`
	// Maximum chart value to active the campaign audience.
	TotalValueCeling *float64 `json:"totalValueCeling,omitempty"`
	// Minimum chart value to active the campaign audience.
	TotalValueFloor           *float64 `json:"totalValueFloor,omitempty"`
	TotalValueIncludeAllItems *bool    `json:"totalValueIncludeAllItems,omitempty"`
	// Total chart value to active the campaign audience.
	TotalValueMode *string `json:"totalValueMode,omitempty"`
	// Total value a client must have in past orders to active the campaign audience.
	TotalValuePurchase *float64 `json:"totalValuePurchase,omitempty"`
	// Use new progressive algorithm.
	UseNewProgressiveAlgorithm *bool `json:"useNewProgressiveAlgorithm,omitempty"`
	// Range of the zip code that applies the campaign audience.
	ZipCodeRanges []Getcampaignaudiences200ApplicationJSONTargetConfigurationsZipCodeRanges `json:"zipCodeRanges,omitempty"`
}

// Getcampaignaudiences200ApplicationJSON - Object containing information about the campaign audience.
type Getcampaignaudiences200ApplicationJSON struct {
	// Start date of the campaign audience in UTC format.
	BeginDateUtc *string `json:"beginDateUtc,omitempty"`
	// End date of the campaign audience in UTC format.
	EndDateUtc *string `json:"endDateUtc,omitempty"`
	// Campaign audience ID.
	ID *string `json:"id,omitempty"`
	// Defines if the campaign audience is active (`true`) or not (`false`).
	IsActive *bool `json:"isActive,omitempty"`
	// When `true`, determines that all the `targetConfigurations` need to be valid for the campaign audience to be active. When `false`, determines that if at least one of the `targetConfigurations` is valid, the campaign audience will be active.
	IsAndOperator *bool `json:"isAndOperator,omitempty"`
	// Defines if the campaign audience is archived (`true`) or not (`false`).
	IsArchived *bool `json:"isArchived,omitempty"`
	// Object with information about the most recent update of the campaign audience.
	LastModified *Getcampaignaudiences200ApplicationJSONLastModified `json:"lastModified,omitempty"`
	// Campaign audience name.
	Name *string `json:"name,omitempty"`
	// Array that contains all target audience that the campaign audience will be valid.
	TargetConfigurations []Getcampaignaudiences200ApplicationJSONTargetConfigurations `json:"targetConfigurations,omitempty"`
}

type GetcampaignaudiencesResponse struct {
	ContentType string
	// OK
	Getcampaignaudiences200ApplicationJSONObjects []Getcampaignaudiences200ApplicationJSON
	StatusCode                                    int
	RawResponse                                   *http.Response
}
