/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ObjectExpiration } from "./objectexpiration";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Request model for updating file's metadata
 */
export class UpdateFileRequest extends SpeakeasyBase {
  /**
   * Classification ID:
   *
   * @remarks
   *
   * * `1` - public
   *
   * * `2` - internal
   *
   * * `3` - confidential
   *
   * * `4` - strictly confidential
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classification" })
  classification?: number;

  /**
   * Expiration information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiration" })
  @Type(() => ObjectExpiration)
  expiration?: ObjectExpiration;

  /**
   * File name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * User notes
   *
   * @remarks
   *
   * Use empty string to remove.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * &#128640; Since v4.22.0
   *
   * @remarks
   *
   * Time the node was created on external file system
   *
   * (default: current server datetime in UTC format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestampCreation" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestampCreation?: Date;

  /**
   * &#128640; Since v4.22.0
   *
   * @remarks
   *
   * Time the content of a node was last modified on external file system
   *
   * (default: current server datetime in UTC format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestampModification" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestampModification?: Date;
}
