"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class DescribeTrunkInterfaceAssociationsResultInterfaceAssociationsInterfaceProtocolEnum(str, Enum):
    r"""The interface protocol. Valid values are <code>VLAN</code> and <code>GRE</code>."""
    VLAN = 'VLAN'
    GRE = 'GRE'


@dataclasses.dataclass
class DescribeTrunkInterfaceAssociationsResultInterfaceAssociationsTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeTrunkInterfaceAssociationsResultInterfaceAssociations:
    r"""<note> <p>Currently available in <b>limited preview only</b>. If you are interested in using this feature, contact your account manager.</p> </note> <p>Information about an association between a branch network interface with a trunk network interface.</p>"""
    
    association_id: Optional[str] = dataclasses.field(default=None)  
    branch_interface_id: Optional[str] = dataclasses.field(default=None)  
    gre_key: Optional[int] = dataclasses.field(default=None)  
    interface_protocol: Optional[DescribeTrunkInterfaceAssociationsResultInterfaceAssociationsInterfaceProtocolEnum] = dataclasses.field(default=None)  
    tags: Optional[list[DescribeTrunkInterfaceAssociationsResultInterfaceAssociationsTags]] = dataclasses.field(default=None)  
    trunk_interface_id: Optional[str] = dataclasses.field(default=None)  
    vlan_id: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeTrunkInterfaceAssociationsResult:
    r"""Success"""
    
    interface_associations: Optional[list[DescribeTrunkInterfaceAssociationsResultInterfaceAssociations]] = dataclasses.field(default=None)  
    next_token: Optional[str] = dataclasses.field(default=None)  
    