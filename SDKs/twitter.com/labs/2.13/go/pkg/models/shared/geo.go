// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GeoTypeEnum string

const (
	GeoTypeEnumFeature GeoTypeEnum = "Feature"
)

func (e *GeoTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Feature":
		*e = GeoTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GeoTypeEnum: %s", s)
	}
}

type Geo struct {
	Bbox []float64 `json:"bbox"`
	// A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) geometry object.
	Geometry   *Point                 `json:"geometry,omitempty"`
	Properties map[string]interface{} `json:"properties"`
	Type       GeoTypeEnum            `json:"type"`
}
