"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import actiondeclaration as shared_actiondeclaration
from ..shared import blockerdeclaration as shared_blockerdeclaration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StageDeclaration:
    r"""Represents information about a stage and its definition."""
    
    actions: list[shared_actiondeclaration.ActionDeclaration] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actions') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    blockers: Optional[list[shared_blockerdeclaration.BlockerDeclaration]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blockers'), 'exclude': lambda f: f is None }})  
    