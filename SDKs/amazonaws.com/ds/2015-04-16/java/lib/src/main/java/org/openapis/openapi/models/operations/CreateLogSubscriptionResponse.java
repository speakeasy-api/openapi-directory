/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class CreateLogSubscriptionResponse {
    /**
     * ClientException
     */
    
    public Object clientException;
    public CreateLogSubscriptionResponse withClientException(Object clientException) {
        this.clientException = clientException;
        return this;
    }
    
    
    public String contentType;
    public CreateLogSubscriptionResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> createLogSubscriptionResult;
    public CreateLogSubscriptionResponse withCreateLogSubscriptionResult(java.util.Map<String, Object> createLogSubscriptionResult) {
        this.createLogSubscriptionResult = createLogSubscriptionResult;
        return this;
    }
    
    /**
     * EntityAlreadyExistsException
     */
    
    public Object entityAlreadyExistsException;
    public CreateLogSubscriptionResponse withEntityAlreadyExistsException(Object entityAlreadyExistsException) {
        this.entityAlreadyExistsException = entityAlreadyExistsException;
        return this;
    }
    
    /**
     * EntityDoesNotExistException
     */
    
    public Object entityDoesNotExistException;
    public CreateLogSubscriptionResponse withEntityDoesNotExistException(Object entityDoesNotExistException) {
        this.entityDoesNotExistException = entityDoesNotExistException;
        return this;
    }
    
    /**
     * InsufficientPermissionsException
     */
    
    public Object insufficientPermissionsException;
    public CreateLogSubscriptionResponse withInsufficientPermissionsException(Object insufficientPermissionsException) {
        this.insufficientPermissionsException = insufficientPermissionsException;
        return this;
    }
    
    
    public Integer statusCode;
    public CreateLogSubscriptionResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public CreateLogSubscriptionResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ServiceException
     */
    
    public Object serviceException;
    public CreateLogSubscriptionResponse withServiceException(Object serviceException) {
        this.serviceException = serviceException;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;
    public CreateLogSubscriptionResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
}
