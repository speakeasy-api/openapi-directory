/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GlossaryTermsPair } from "./glossarytermspair";
import { GlossaryTermsSet } from "./glossarytermsset";
import { Expose, Type } from "class-transformer";

/**
 * Represents a single entry in a glossary.
 */
export class GlossaryEntry extends SpeakeasyBase {
  /**
   * Describes the glossary entry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Required. The resource name of the entry. Format: "projects/* /locations/* /glossaries/* /glossaryEntries/*"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Represents a single entry for an unidirectional glossary.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "termsPair" })
  @Type(() => GlossaryTermsPair)
  termsPair?: GlossaryTermsPair;

  /**
   * Represents a single entry for an equivalent term set glossary. This is used for equivalent term sets where each term can be replaced by the other terms in the set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "termsSet" })
  @Type(() => GlossaryTermsSet)
  termsSet?: GlossaryTermsSet;
}
