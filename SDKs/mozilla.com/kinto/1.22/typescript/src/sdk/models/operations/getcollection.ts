/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetCollectionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=If-Match",
  })
  ifMatch?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=If-None-Match",
  })
  ifNoneMatch?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=_fields",
  })
  fields?: string[];

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=bucket_id",
  })
  bucketId: string;

  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

/**
 * The request is invalid.
 */
export class GetCollectionErrorSchema extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: number;

  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "errno" })
  errno: number;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error: string;

  @SpeakeasyMetadata()
  @Expose({ name: "info" })
  info?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class GetCollectionObjectSchemaData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cache_expires" })
  cacheExpires?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "schema" })
  schema?: Record<string, any>;
}

export class GetCollectionObjectSchemaPermissions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "read" })
  read?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "record:create" })
  recordCreate?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "write" })
  write?: string[];
}

/**
 * Return the target object.
 */
export class GetCollectionObjectSchema extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => GetCollectionObjectSchemaData)
  data?: GetCollectionObjectSchemaData;

  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => GetCollectionObjectSchemaPermissions)
  permissions?: GetCollectionObjectSchemaPermissions;
}

export class GetCollectionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The request is invalid.
   */
  @SpeakeasyMetadata()
  errorSchema?: GetCollectionErrorSchema;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * Return the target object.
   */
  @SpeakeasyMetadata()
  objectSchema?: GetCollectionObjectSchema;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
