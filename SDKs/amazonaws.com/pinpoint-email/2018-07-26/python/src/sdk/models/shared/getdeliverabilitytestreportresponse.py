"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deliverabilitytestreport as shared_deliverabilitytestreport
from ..shared import ispplacement as shared_ispplacement
from ..shared import placementstatistics as shared_placementstatistics
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetDeliverabilityTestReportResponse:
    r"""The results of the predictive inbox placement test."""
    
    deliverability_test_report: shared_deliverabilitytestreport.DeliverabilityTestReport = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliverabilityTestReport') }})  
    isp_placements: list[shared_ispplacement.IspPlacement] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IspPlacements') }})  
    overall_placement: shared_placementstatistics.PlacementStatistics = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OverallPlacement') }})  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    