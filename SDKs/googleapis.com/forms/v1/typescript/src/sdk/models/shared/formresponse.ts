/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { Answer } from "./answer";
import { Expose, Transform } from "class-transformer";

/**
 * A form response.
 */
export class FormResponse extends SpeakeasyBase {
  /**
   * Output only. The actual answers to the questions, keyed by question_id.
   */
  @SpeakeasyMetadata({ elemType: Answer })
  @Expose({ name: "answers" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, Answer> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], Answer);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  answers?: Record<string, Answer>;

  /**
   * Output only. Timestamp for the first time the response was submitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. The form ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formId" })
  formId?: string;

  /**
   * Output only. Timestamp for the most recent time the response was submitted. Does not track changes to grades.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastSubmittedTime" })
  lastSubmittedTime?: string;

  /**
   * Output only. The email address (if collected) for the respondent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "respondentEmail" })
  respondentEmail?: string;

  /**
   * Output only. The response ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "responseId" })
  responseId?: string;

  /**
   * Output only. The total number of points the respondent received for their submission Only set if the form was a quiz and the response was graded. This includes points automatically awarded via autograding adjusted by any manual corrections entered by the form owner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalScore" })
  totalScore?: number;
}
