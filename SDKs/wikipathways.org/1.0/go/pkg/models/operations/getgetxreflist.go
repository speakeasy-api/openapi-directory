// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetGetXrefListFormatEnum
type GetGetXrefListFormatEnum string

const (
	GetGetXrefListFormatEnumJSON GetGetXrefListFormatEnum = "json"
	GetGetXrefListFormatEnumXML  GetGetXrefListFormatEnum = "xml"
	GetGetXrefListFormatEnumHTML GetGetXrefListFormatEnum = "html"
	GetGetXrefListFormatEnumDump GetGetXrefListFormatEnum = "dump"
	GetGetXrefListFormatEnumJpg  GetGetXrefListFormatEnum = "jpg"
	GetGetXrefListFormatEnumPdf  GetGetXrefListFormatEnum = "pdf"
)

func (e GetGetXrefListFormatEnum) ToPointer() *GetGetXrefListFormatEnum {
	return &e
}

func (e *GetGetXrefListFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetGetXrefListFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGetXrefListFormatEnum: %v", v)
	}
}

type GetGetXrefListRequest struct {
	// The database code to translate to (e.g. 'S' for UniProt).
	Code   string                    `queryParam:"style=form,explode=true,name=code"`
	Format *GetGetXrefListFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The pathway identifier.
	PwID string `queryParam:"style=form,explode=true,name=pwId"`
}

type GetGetXrefListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
