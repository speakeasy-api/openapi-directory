/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListSystemsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-rh-identity",
  })
  rhIdentity: string;
}

/**
 * Sort field
 */
export enum ListSystemsSortEnum {
  Id = "id",
  DisplayName = "display_name",
  LastEvaluation = "last_evaluation",
  LastUpload = "last_upload",
  RhsaCount = "rhsa_count",
  RhbaCount = "rhba_count",
  RheaCount = "rhea_count",
  OtherCount = "other_count",
  Stale = "stale",
  PackagesInstalled = "packages_installed",
  PackagesUpdatable = "packages_updatable",
}

export class ListSystemsRequest extends SpeakeasyBase {
  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[created]",
  })
  filterCreated?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[culled_timestamp]",
  })
  filterCulledTimestamp?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[display_name]",
  })
  filterDisplayName?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[id]",
  })
  filterId?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[insights_id]",
  })
  filterInsightsId?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[last_evaluation]",
  })
  filterLastEvaluation?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[last_upload]",
  })
  filterLastUpload?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[other_count]",
  })
  filterOtherCount?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[packages_installed]",
  })
  filterPackagesInstalled?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[packages_updatable]",
  })
  filterPackagesUpdatable?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[rhba_count]",
  })
  filterRhbaCount?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[rhea_count]",
  })
  filterRheaCount?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[rhsa_count]",
  })
  filterRhsaCount?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[stale]",
  })
  filterStale?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[stale_timestamp]",
  })
  filterStaleTimestamp?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[stale_warning_timestamp]",
  })
  filterStaleWarningTimestamp?: string;

  /**
   * Filter systems by their SAP SIDs
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[system_profile][sap_sids][in]",
  })
  filterSystemProfileSapSidsIn?: string[];

  /**
   * Filter only SAP systems
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[system_profile][sap_system]",
  })
  filterSystemProfileSapSystem?: string;

  /**
   * Limit for paging, set -1 to return all
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Offset for paging
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Find matching text
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search?: string;

  /**
   * Sort field
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: ListSystemsSortEnum;

  /**
   * Tag filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tags" })
  tags?: string[];
}

export class ListSystemsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  controllersSystemsResponse?: shared.ControllersSystemsResponse;
}
