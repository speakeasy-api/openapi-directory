/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Additional phone base plans.
 */
export class AccountPlanAddonCreateApplicationJson2PhonePlanPlanBase extends SpeakeasyBase {
  /**
   * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callout_countries" })
  calloutCountries?: string;

  /**
   * Additional phone base <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class AccountPlanAddonCreateApplicationJson2PhonePlanPlanCalling extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "hosts" })
  hosts?: number;

  /**
   * Additional phone calling <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class AccountPlanAddonCreateApplicationJson2PhonePlanPlanNumber extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "hosts" })
  hosts?: number;

  /**
   * Additional phone number <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans">plan type.</a>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Phone Plan Object
 */
export class AccountPlanAddonCreateApplicationJson2PhonePlan extends SpeakeasyBase {
  /**
   * Additional phone base plans.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_base" })
  @Type(() => AccountPlanAddonCreateApplicationJson2PhonePlanPlanBase)
  planBase?: AccountPlanAddonCreateApplicationJson2PhonePlanPlanBase;

  /**
   * Additional phone calling plans.
   */
  @SpeakeasyMetadata({
    elemType: AccountPlanAddonCreateApplicationJson2PhonePlanPlanCalling,
  })
  @Expose({ name: "plan_calling" })
  @Type(() => AccountPlanAddonCreateApplicationJson2PhonePlanPlanCalling)
  planCalling?: AccountPlanAddonCreateApplicationJson2PhonePlanPlanCalling[];

  /**
   * Additional phone number plans.
   */
  @SpeakeasyMetadata({
    elemType: AccountPlanAddonCreateApplicationJson2PhonePlanPlanNumber,
  })
  @Expose({ name: "plan_number" })
  @Type(() => AccountPlanAddonCreateApplicationJson2PhonePlanPlanNumber)
  planNumber?: AccountPlanAddonCreateApplicationJson2PhonePlanPlanNumber[];
}

/**
 * Zoom Phone Plan Object
 */
export class AccountPlanAddonCreateApplicationJson2 extends SpeakeasyBase {
  /**
   * Phone Plan Object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_details" })
  @Type(() => AccountPlanAddonCreateApplicationJson2PhonePlan)
  planDetails: AccountPlanAddonCreateApplicationJson2PhonePlan;

  /**
   * Zoom Phone Plan `plan_phone`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

/**
 * Account plan object.
 */
export class AccountPlanAddonCreateApplicationJson1 extends SpeakeasyBase {
  /**
   * Number of hosts for this plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hosts" })
  hosts: number;

  /**
   * Account <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans">plan type.</a>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class AccountPlanAddonCreateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: any;

  /**
   * The account ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=accountId",
  })
  accountId: string;
}

export class AccountPlanAddonCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
