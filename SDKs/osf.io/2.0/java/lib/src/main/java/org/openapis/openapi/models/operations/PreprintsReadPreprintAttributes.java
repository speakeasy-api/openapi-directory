/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;

/**
 * PreprintsReadPreprintAttributes - The properties of the preprint entity.
 */
public class PreprintsReadPreprintAttributes {
    /**
     * The time at which the preprint was created, as an iso8601 formatted timestamp.
     */
    
    public OffsetDateTime dateCreated;
    public PreprintsReadPreprintAttributes withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The time at which the preprint was last modified, as an iso8601 formatted timestamp.
     */
    
    public OffsetDateTime dateModified;
    public PreprintsReadPreprintAttributes withDateModified(OffsetDateTime dateModified) {
        this.dateModified = dateModified;
        return this;
    }
    
    /**
     * The time at which the preprint was published, as an iso8601 formatted timestamp.
     */
    
    public OffsetDateTime datePublished;
    public PreprintsReadPreprintAttributes withDatePublished(OffsetDateTime datePublished) {
        this.datePublished = datePublished;
        return this;
    }
    
    /**
     * The DOI of the associated journal article, as entered by the user, if the preprint is published.
     */
    
    public String doi;
    public PreprintsReadPreprintAttributes withDoi(String doi) {
        this.doi = doi;
        return this;
    }
    
    /**
     * Whether or not the preprint is orphaned. A preprint can be orphaned if it's primary file was removed from the preprint node. This field may be deprecated in future versions.
     */
    
    public Boolean isPreprintOrphan;
    public PreprintsReadPreprintAttributes withIsPreprintOrphan(Boolean isPreprintOrphan) {
        this.isPreprintOrphan = isPreprintOrphan;
        return this;
    }
    
    /**
     * The metadata (copyright year and holder) associated with a license, required for certain licenses.
     */
    
    public String licenseRecord;
    public PreprintsReadPreprintAttributes withLicenseRecord(String licenseRecord) {
        this.licenseRecord = licenseRecord;
        return this;
    }
    
    /**
     * A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
     */
    
    public String[] subjects;
    public PreprintsReadPreprintAttributes withSubjects(String[] subjects) {
        this.subjects = subjects;
        return this;
    }
    
}
