// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LabelDescriptorValueTypeEnum - The type of data that can be assigned to the label.
type LabelDescriptorValueTypeEnum string

const (
	LabelDescriptorValueTypeEnumString LabelDescriptorValueTypeEnum = "STRING"
	LabelDescriptorValueTypeEnumBool   LabelDescriptorValueTypeEnum = "BOOL"
	LabelDescriptorValueTypeEnumInt64  LabelDescriptorValueTypeEnum = "INT64"
)

func (e *LabelDescriptorValueTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STRING":
		fallthrough
	case "BOOL":
		fallthrough
	case "INT64":
		*e = LabelDescriptorValueTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LabelDescriptorValueTypeEnum: %s", s)
	}
}

// LabelDescriptor - A description of a label.
type LabelDescriptor struct {
	// A human-readable description for the label.
	Description *string `json:"description,omitempty"`
	// The key for this label. The key must meet the following criteria: Does not exceed 100 characters. Matches the following regular expression: [a-zA-Z][a-zA-Z0-9_]* The first character must be an upper- or lower-case letter. The remaining characters must be letters, digits, or underscores.
	Key *string `json:"key,omitempty"`
	// The type of data that can be assigned to the label.
	ValueType *LabelDescriptorValueTypeEnum `json:"valueType,omitempty"`
}
