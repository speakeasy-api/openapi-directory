"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import logicalnetworkinterface as shared_logicalnetworkinterface
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudBaremetalsolutionV2LogicalInterface:
    r"""Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface."""
    
    interface_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interfaceIndex'), 'exclude': lambda f: f is None }})
    r"""The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated."""  
    logical_network_interfaces: Optional[list[shared_logicalnetworkinterface.LogicalNetworkInterface]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logicalNetworkInterfaces'), 'exclude': lambda f: f is None }})
    r"""List of logical network interfaces within a logical interface."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Interface name. This is of syntax or and forms part of the network template name."""  
    