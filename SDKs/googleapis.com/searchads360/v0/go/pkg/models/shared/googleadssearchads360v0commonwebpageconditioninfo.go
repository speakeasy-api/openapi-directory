// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum - Operand of webpage targeting condition.
type GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum string

const (
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnumUnspecified GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum = "UNSPECIFIED"
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnumUnknown     GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum = "UNKNOWN"
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnumURL         GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum = "URL"
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnumCategory    GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum = "CATEGORY"
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnumPageTitle   GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum = "PAGE_TITLE"
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnumPageContent GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum = "PAGE_CONTENT"
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnumCustomLabel GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum = "CUSTOM_LABEL"
)

func (e *GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "URL":
		fallthrough
	case "CATEGORY":
		fallthrough
	case "PAGE_TITLE":
		fallthrough
	case "PAGE_CONTENT":
		fallthrough
	case "CUSTOM_LABEL":
		*e = GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum: %s", s)
	}
}

// GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnum - Operator of webpage targeting condition.
type GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnum string

const (
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnumUnspecified GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnum = "UNSPECIFIED"
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnumUnknown     GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnum = "UNKNOWN"
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnumEquals      GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnum = "EQUALS"
	GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnumContains    GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnum = "CONTAINS"
)

func (e *GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "EQUALS":
		fallthrough
	case "CONTAINS":
		*e = GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnum: %s", s)
	}
}

// GoogleAdsSearchads360V0CommonWebpageConditionInfo - Logical expression for targeting webpages of an advertiser's website.
type GoogleAdsSearchads360V0CommonWebpageConditionInfo struct {
	// Argument of webpage targeting condition.
	Argument *string `json:"argument,omitempty"`
	// Operand of webpage targeting condition.
	Operand *GoogleAdsSearchads360V0CommonWebpageConditionInfoOperandEnum `json:"operand,omitempty"`
	// Operator of webpage targeting condition.
	Operator *GoogleAdsSearchads360V0CommonWebpageConditionInfoOperatorEnum `json:"operator,omitempty"`
}
