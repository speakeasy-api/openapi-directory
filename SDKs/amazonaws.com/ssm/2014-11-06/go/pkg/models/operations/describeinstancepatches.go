// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeInstancePatchesXAmzTargetEnum
type DescribeInstancePatchesXAmzTargetEnum string

const (
	DescribeInstancePatchesXAmzTargetEnumAmazonSsmDescribeInstancePatches DescribeInstancePatchesXAmzTargetEnum = "AmazonSSM.DescribeInstancePatches"
)

func (e *DescribeInstancePatchesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.DescribeInstancePatches":
		*e = DescribeInstancePatchesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeInstancePatchesXAmzTargetEnum: %s", s)
	}
}

type DescribeInstancePatchesRequest struct {
	DescribeInstancePatchesRequest shared.DescribeInstancePatchesRequest `request:"mediaType=application/json"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                               `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeInstancePatchesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeInstancePatchesResponse struct {
	ContentType string
	// Success
	DescribeInstancePatchesResult *shared.DescribeInstancePatchesResult
	// InternalServerError
	InternalServerError interface{}
	// InvalidFilter
	InvalidFilter interface{}
	// InvalidInstanceId
	InvalidInstanceID interface{}
	// InvalidNextToken
	InvalidNextToken interface{}
	StatusCode       int
	RawResponse      *http.Response
}
