/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ScoreRevision - A score revision metadata
 */
public class ScoreRevision {
    /**
     * True if this revision was automatically generated by Flat and not on
     * purpose by the user.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autosave")
    public Boolean autosave;

    public ScoreRevision withAutosave(Boolean autosave) {
        this.autosave = autosave;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collaborators")
    public String[] collaborators;

    public ScoreRevision withCollaborators(String[] collaborators) {
        this.collaborators = collaborators;
        return this;
    }
    
    /**
     * The date when this revision was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationDate")
    public OffsetDateTime creationDate;

    public ScoreRevision withCreationDate(OffsetDateTime creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    /**
     * A description associated to the revision
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ScoreRevision withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The last event (action id) of the revision
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event")
    public String event;

    public ScoreRevision withEvent(String event) {
        this.event = event;
        return this;
    }
    
    /**
     * The unique identifier of the revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public ScoreRevision withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The statistics related to the score revision (additions and deletions)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statistics")
    public ScoreRevisionStatistics statistics;

    public ScoreRevision withStatistics(ScoreRevisionStatistics statistics) {
        this.statistics = statistics;
        return this;
    }
    
    /**
     * The user identifier who created the revision
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public String user;

    public ScoreRevision withUser(String user) {
        this.user = user;
        return this;
    }
    
    public ScoreRevision(){}
}
