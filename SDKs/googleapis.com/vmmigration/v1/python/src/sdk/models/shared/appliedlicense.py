"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AppliedLicenseTypeEnum(str, Enum):
    r"""The license type that was used in OS adaptation."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    NONE = 'NONE'
    PAYG = 'PAYG'
    BYOL = 'BYOL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppliedLicense:
    r"""AppliedLicense holds the license data returned by adaptation module report."""
    
    os_license: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('osLicense'), 'exclude': lambda f: f is None }})
    r"""The OS license returned from the adaptation module's report."""  
    type: Optional[AppliedLicenseTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The license type that was used in OS adaptation."""  
    