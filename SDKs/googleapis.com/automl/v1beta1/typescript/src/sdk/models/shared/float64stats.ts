/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HistogramBucket } from "./histogrambucket";
import { Expose, Type } from "class-transformer";

/**
 * The data statistics of a series of FLOAT64 values.
 */
export class Float64Stats extends SpeakeasyBase {
  /**
   * Histogram buckets of the data series. Sorted by the min value of the bucket, ascendingly, and the number of the buckets is dynamically generated. The buckets are non-overlapping and completely cover whole FLOAT64 range with min of first bucket being `"-Infinity"`, and max of the last one being `"Infinity"`.
   */
  @SpeakeasyMetadata({ elemType: HistogramBucket })
  @Expose({ name: "histogramBuckets" })
  @Type(() => HistogramBucket)
  histogramBuckets?: HistogramBucket[];

  /**
   * The mean of the series.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mean" })
  mean?: number;

  /**
   * Ordered from 0 to k k-quantile values of the data series of n values. The value at index i is, approximately, the i*n/k-th smallest value in the series; for i = 0 and i = k these are, respectively, the min and max values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantiles" })
  quantiles?: number[];

  /**
   * The standard deviation of the series.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "standardDeviation" })
  standardDeviation?: number;
}
