/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Amount } from "./amount";
import { Name } from "./name";
import { Recurring } from "./recurring";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The type of the entity the payout is processed for.
 *
 * @remarks
 *
 * Allowed values:
 * * NaturalPerson
 * * Company
 * > This field is required to update the existing `entityType` that is associated with this recurring contract.
 */
export enum SubmitRequestEntityTypeEnum {
  NaturalPerson = "NaturalPerson",
  Company = "Company",
}

export class SubmitRequest extends SpeakeasyBase {
  /**
   * This field contains additional data, which may be required for a particular request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalData" })
  additionalData?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  @Type(() => Amount)
  amount: Amount;

  /**
   * The date of birth.
   *
   * @remarks
   * Format: ISO-8601; example: YYYY-MM-DD
   *
   * For Paysafecard it must be the same as used when registering the Paysafecard account.
   *
   * > This field is mandatory for natural persons.
   * > This field is required to update the existing `dateOfBirth` that is associated with this recurring contract.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateOfBirth" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateOfBirth?: Date;

  /**
   * The type of the entity the payout is processed for.
   *
   * @remarks
   *
   * Allowed values:
   * * NaturalPerson
   * * Company
   * > This field is required to update the existing `entityType` that is associated with this recurring contract.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entityType" })
  entityType?: SubmitRequestEntityTypeEnum;

  /**
   * An integer value that is added to the normal fraud score. The value can be either positive or negative.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fraudOffset" })
  fraudOffset?: number;

  /**
   * The merchant account identifier you want to process the transaction request with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantAccount" })
  merchantAccount: string;

  /**
   * The shopper's nationality.
   *
   * @remarks
   *
   * A valid value is an ISO 2-character country code (e.g. 'NL').
   *
   * > This field is required to update the existing nationality that is associated with this recurring contract.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nationality" })
  nationality?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recurring" })
  @Type(() => Recurring)
  recurring: Recurring;

  /**
   * The merchant reference for this payout. This reference will be used in all communication to the merchant about the status of the payout. Although it is a good idea to make sure it is unique, this is not a requirement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference: string;

  /**
   * This is the `recurringDetailReference` you want to use for this payout.
   *
   * @remarks
   *
   * You can use the value LATEST to select the most recently used recurring detail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedRecurringDetailReference" })
  selectedRecurringDetailReference: string;

  /**
   * The shopper's email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperEmail" })
  shopperEmail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shopperName" })
  @Type(() => Name)
  shopperName?: Name;

  /**
   * The shopper's reference for the payout transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperReference" })
  shopperReference: string;

  /**
   * The description of this payout. This description is shown on the bank statement of the shopper (if this is supported by the chosen payment method).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperStatement" })
  shopperStatement?: string;

  /**
   * The shopper's social security number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "socialSecurityNumber" })
  socialSecurityNumber?: string;
}
