/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IpAddressMembershipCriteria } from "./ipaddressmembershipcriteria";
import { SearchMembershipCriteria } from "./searchmembershipcriteria";
import { Expose, Type } from "class-transformer";

export enum GroupMembershipCriteriaMembershipTypeEnum {
  SearchMembershipCriteria = "SearchMembershipCriteria",
  IPAddressMembershipCriteria = "IPAddressMembershipCriteria",
}

/**
 * EntityType currently restricted to VirtualMachine
 */
export class GroupMembershipCriteria extends SpeakeasyBase {
  /**
   * Ip Address membership definition
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ip_address_membership_criteria" })
  @Type(() => IpAddressMembershipCriteria)
  ipAddressMembershipCriteria?: IpAddressMembershipCriteria;

  @SpeakeasyMetadata()
  @Expose({ name: "membership_type" })
  membershipType?: GroupMembershipCriteriaMembershipTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "search_membership_criteria" })
  @Type(() => SearchMembershipCriteria)
  searchMembershipCriteria?: SearchMembershipCriteria;
}
