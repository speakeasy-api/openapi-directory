/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETPurchaseReservedInstancesOfferingQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETPurchaseReservedInstancesOfferingActionEnum action;
    public GETPurchaseReservedInstancesOfferingQueryParams withAction(GETPurchaseReservedInstancesOfferingActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETPurchaseReservedInstancesOfferingQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The number of Reserved Instances to purchase.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=InstanceCount")
    public Long instanceCount;
    public GETPurchaseReservedInstancesOfferingQueryParams withInstanceCount(Long instanceCount) {
        this.instanceCount = instanceCount;
        return this;
    }
    
    /**
     * Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=LimitPrice")
    public GETPurchaseReservedInstancesOfferingLimitPrice limitPrice;
    public GETPurchaseReservedInstancesOfferingQueryParams withLimitPrice(GETPurchaseReservedInstancesOfferingLimitPrice limitPrice) {
        this.limitPrice = limitPrice;
        return this;
    }
    
    /**
     * The time at which to purchase the Reserved Instance, in UTC format (for example, &lt;i&gt;YYYY&lt;/i&gt;-&lt;i&gt;MM&lt;/i&gt;-&lt;i&gt;DD&lt;/i&gt;T&lt;i&gt;HH&lt;/i&gt;:&lt;i&gt;MM&lt;/i&gt;:&lt;i&gt;SS&lt;/i&gt;Z).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PurchaseTime")
    public OffsetDateTime purchaseTime;
    public GETPurchaseReservedInstancesOfferingQueryParams withPurchaseTime(OffsetDateTime purchaseTime) {
        this.purchaseTime = purchaseTime;
        return this;
    }
    
    /**
     * The ID of the Reserved Instance offering to purchase.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ReservedInstancesOfferingId")
    public String reservedInstancesOfferingId;
    public GETPurchaseReservedInstancesOfferingQueryParams withReservedInstancesOfferingId(String reservedInstancesOfferingId) {
        this.reservedInstancesOfferingId = reservedInstancesOfferingId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETPurchaseReservedInstancesOfferingVersionEnum version;
    public GETPurchaseReservedInstancesOfferingQueryParams withVersion(GETPurchaseReservedInstancesOfferingVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
