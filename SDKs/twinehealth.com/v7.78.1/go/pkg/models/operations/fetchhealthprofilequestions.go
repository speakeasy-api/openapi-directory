// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// FetchHealthProfileQuestionsIncludeEnum - List of related resources to include in the response
type FetchHealthProfileQuestionsIncludeEnum string

const (
	FetchHealthProfileQuestionsIncludeEnumQuestionDefinition FetchHealthProfileQuestionsIncludeEnum = "question_definition"
	FetchHealthProfileQuestionsIncludeEnumAnswer             FetchHealthProfileQuestionsIncludeEnum = "answer"
)

func (e *FetchHealthProfileQuestionsIncludeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "question_definition":
		fallthrough
	case "answer":
		*e = FetchHealthProfileQuestionsIncludeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FetchHealthProfileQuestionsIncludeEnum: %s", s)
	}
}

type FetchHealthProfileQuestionsRequest struct {
	// Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
	//
	FilterGroups *string `queryParam:"style=form,explode=true,name=filter[groups]"`
	// Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
	//
	FilterOrganization *string `queryParam:"style=form,explode=true,name=filter[organization]"`
	// Patient id to fetch healt profile questions. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
	//
	FilterPatient *string `queryParam:"style=form,explode=true,name=filter[patient]"`
	// List of related resources to include in the response
	Include *FetchHealthProfileQuestionsIncludeEnum `queryParam:"style=form,explode=true,name=include"`
}

type FetchHealthProfileQuestionsResponse struct {
	ContentType string
	// Unauthorized
	FetchErrorResponse *shared.FetchErrorResponse
	// OK
	FetchHealthProfileQuestionsResponse *shared.FetchHealthProfileQuestionsResponse
	StatusCode                          int
	RawResponse                         *http.Response
}
