/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * UpdateBookingRequest - Specifies the room you want to book for your guest.
 */
public class UpdateBookingRequest {
    /**
     * Details of your guest (will be provided to the hotel in case of questions).
     */
    @JsonProperty("bookingContact")
    public PersonInfo bookingContact;

    public UpdateBookingRequest withBookingContact(PersonInfo bookingContact) {
        this.bookingContact = bookingContact;
        return this;
    }
    
    /**
     * The last day of the desired stay range in ISO 8601 format YYYY-MM-DD.
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("end")
    public LocalDate end;

    public UpdateBookingRequest withEnd(LocalDate end) {
        this.end = end;
        return this;
    }
    
    /**
     * Notes allow sellers to their guests to communicate relevant information to the hotel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public NotesBooking notes;

    public UpdateBookingRequest withNotes(NotesBooking notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * How will the guest make payment for this booking?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentType")
    public UpdateBookingRequestPaymentTypeEnum paymentType;

    public UpdateBookingRequest withPaymentType(UpdateBookingRequestPaymentTypeEnum paymentType) {
        this.paymentType = paymentType;
        return this;
    }
    
    /**
     * List of room type identifiers to be booked.
     */
    @JsonProperty("rooms")
    public UpdateBookingRequestRooms[] rooms;

    public UpdateBookingRequest withRooms(UpdateBookingRequestRooms[] rooms) {
        this.rooms = rooms;
        return this;
    }
    
    /**
     * The first day of the desired stay range in ISO 8601 format YYYY-MM-DD.
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("start")
    public LocalDate start;

    public UpdateBookingRequest withStart(LocalDate start) {
        this.start = start;
        return this;
    }
    
    /**
     * The timestamp of when the booking was last updated
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updateBookingVersionAtTimestamp")
    public OffsetDateTime updateBookingVersionAtTimestamp;

    public UpdateBookingRequest withUpdateBookingVersionAtTimestamp(OffsetDateTime updateBookingVersionAtTimestamp) {
        this.updateBookingVersionAtTimestamp = updateBookingVersionAtTimestamp;
        return this;
    }
    
    public UpdateBookingRequest(@JsonProperty("bookingContact") PersonInfo bookingContact, @JsonProperty("end") LocalDate end, @JsonProperty("rooms") UpdateBookingRequestRooms[] rooms, @JsonProperty("start") LocalDate start, @JsonProperty("updateBookingVersionAtTimestamp") OffsetDateTime updateBookingVersionAtTimestamp) {
        this.bookingContact = bookingContact;
        this.end = end;
        this.rooms = rooms;
        this.start = start;
        this.updateBookingVersionAtTimestamp = updateBookingVersionAtTimestamp;
  }
}
