"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import snmp2cconfig as shared_snmp2cconfig
from ..shared import snmp3config as shared_snmp3config
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SNMPConfigSNMPVersionEnum(str, Enum):
    V2C = 'v2c'
    V3 = 'v3'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SNMPConfig:
    r"""OK"""
    
    config_snmp_2c: Optional[shared_snmp2cconfig.Snmp2cConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('config_snmp_2c'), 'exclude': lambda f: f is None }})  
    config_snmp_3: Optional[shared_snmp3config.Snmp3Config] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('config_snmp_3'), 'exclude': lambda f: f is None }})  
    snmp_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snmp_enabled'), 'exclude': lambda f: f is None }})  
    snmp_version: Optional[SNMPConfigSNMPVersionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snmp_version'), 'exclude': lambda f: f is None }})  
    