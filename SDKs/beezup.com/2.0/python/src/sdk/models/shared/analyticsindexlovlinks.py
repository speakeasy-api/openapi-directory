"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import beezup_common_lovlink3 as shared_beezup_common_lovlink3
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsIndexLovLinks:
    
    analytics_numerical_product_column_filter_operator_name_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analyticsNumericalProductColumnFilterOperatorNameLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    analytics_product_column_filter_operator_name_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analyticsProductColumnFilterOperatorNameLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    analytics_string_product_column_filter_operator_name_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analyticsStringProductColumnFilterOperatorNameLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    performance_indicator_filter_operator_name_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('performanceIndicatorFilterOperatorNameLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    performance_indicator_formula_operator_name_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('performanceIndicatorFormulaOperatorNameLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    performance_indicator_formula_parameter_type_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('performanceIndicatorFormulaParameterTypeLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    performance_indicator_type_for_reports_by_category_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('performanceIndicatorTypeForReportsByCategoryLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    performance_indicator_type_for_reports_by_channel_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('performanceIndicatorTypeForReportsByChannelLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    performance_indicator_type_for_reports_by_product_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('performanceIndicatorTypeForReportsByProductLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    performance_indicator_type_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('performanceIndicatorTypeLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    store_optimisation_rule_execution_status_lov: Optional[shared_beezup_common_lovlink3.BeezUPCommonLOVLink3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storeOptimisationRuleExecutionStatusLov'), 'exclude': lambda f: f is None }})
    r"""Describe the way you have to follow to get access to the LOV"""  
    