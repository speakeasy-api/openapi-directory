// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

// CreateAPIApplicationNewAPIApplication - Details of the new API Application
type CreateAPIApplicationNewAPIApplication struct {
	// A name for the API Application to help you identify it
	ApplicationName *string `json:"applicationName,omitempty"`
	// Whether or not this API Application can be used
	Enabled *bool `json:"enabled,omitempty"`
	// The date that this API Application can no longer be used.
	Expiry *time.Time `json:"expiry,omitempty"`
	// The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.
	Ican *int64 `json:"ican,omitempty"`
	// Number of approvals required to create a payee in a batch
	NumberOfPayeeApprovalsRequired *int64 `json:"numberOfPayeeApprovalsRequired,omitempty"`
	// Number of approvals required to process a payment in a batch
	NumberOfPaymentApprovalsRequired *int64 `json:"numberOfPaymentApprovalsRequired,omitempty"`
	// The list of permissions required
	Permissions []string `json:"permissions,omitempty"`
}

type CreateAPIApplicationRequest struct {
	// Details of the new API Application
	Request CreateAPIApplicationNewAPIApplication `request:"mediaType=application/json"`
}

// CreateAPIApplicationAPIApplication - API Application created successfully
type CreateAPIApplicationAPIApplication struct {
	// The ID of the API Application
	ApplicationID *int64 `json:"applicationId,omitempty"`
	// The Client ID of the new API Application
	ClientID *string `json:"clientId,omitempty"`
	// The Client Key of the new API Application
	ClientKey *string `json:"clientKey,omitempty"`
	// Whether or not this API Application can be used
	Enabled *bool `json:"enabled,omitempty"`
	// The date that this API Application can no longer be used.
	Expiry *time.Time `json:"expiry,omitempty"`
	// The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.
	Ican *int64 `json:"ican,omitempty"`
	// Number of approvals required to create a payee in a batch
	NumberOfPayeeApprovalsRequired *int64 `json:"numberOfPayeeApprovalsRequired,omitempty"`
	// Number of approvals required to process a payment in a batch
	NumberOfPaymentApprovalsRequired *int64 `json:"numberOfPaymentApprovalsRequired,omitempty"`
	// The Refresh Token of the new API Application
	RefreshToken *string `json:"refreshToken,omitempty"`
}

type CreateAPIApplicationResponse struct {
	// API Application created successfully
	APIApplication *CreateAPIApplicationAPIApplication
	ContentType    string
	StatusCode     int
	RawResponse    *http.Response
}
