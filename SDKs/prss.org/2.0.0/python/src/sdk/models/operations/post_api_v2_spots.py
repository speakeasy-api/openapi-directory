"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import spot as shared_spot
from typing import Optional


@dataclasses.dataclass
class PostAPIV2SpotsSecurity:
    
    cd_oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PostAPIV2SpotsRequestBody:
    
    cd_drive_uri: str = dataclasses.field(metadata={'form': { 'field_name': 'cdDriveUri' }})
    r"""The URI to the spot content in CD Drive. Format should be 'cddrive:id:{value}' or 'cddrive://{path}'."""  
    name: str = dataclasses.field(metadata={'form': { 'field_name': 'name' }})
    r"""The name of the spot to create/update."""  
    notes: str = dataclasses.field(metadata={'form': { 'field_name': 'notes' }})
    r"""Notes pertaining to the spot."""  
    

@dataclasses.dataclass
class PostAPIV2SpotsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""The request is missing required data or invalid."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    spot: Optional[shared_spot.Spot] = dataclasses.field(default=None)
    r"""The created spot with fields populated."""  
    