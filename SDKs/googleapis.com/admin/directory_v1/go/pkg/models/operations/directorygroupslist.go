// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DirectoryGroupsListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DirectoryGroupsListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DirectoryGroupsListSecurity struct {
	Option1 *DirectoryGroupsListSecurityOption1 `security:"option"`
	Option2 *DirectoryGroupsListSecurityOption2 `security:"option"`
}

// DirectoryGroupsListOrderByEnum - Column to use for sorting results
type DirectoryGroupsListOrderByEnum string

const (
	DirectoryGroupsListOrderByEnumEmail DirectoryGroupsListOrderByEnum = "email"
)

func (e DirectoryGroupsListOrderByEnum) ToPointer() *DirectoryGroupsListOrderByEnum {
	return &e
}

func (e *DirectoryGroupsListOrderByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "email":
		*e = DirectoryGroupsListOrderByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DirectoryGroupsListOrderByEnum: %v", v)
	}
}

// DirectoryGroupsListSortOrderEnum - Whether to return results in ascending or descending order. Only of use when orderBy is also used
type DirectoryGroupsListSortOrderEnum string

const (
	DirectoryGroupsListSortOrderEnumAscending  DirectoryGroupsListSortOrderEnum = "ASCENDING"
	DirectoryGroupsListSortOrderEnumDescending DirectoryGroupsListSortOrderEnum = "DESCENDING"
)

func (e DirectoryGroupsListSortOrderEnum) ToPointer() *DirectoryGroupsListSortOrderEnum {
	return &e
}

func (e *DirectoryGroupsListSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = DirectoryGroupsListSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DirectoryGroupsListSortOrderEnum: %v", v)
	}
}

type DirectoryGroupsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// The unique ID for the customer's Google Workspace account. In case of a multi-domain account, to fetch all groups for a customer, use this field instead of `domain`. You can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users](/admin-sdk/directory/v1/reference/users) resource. You must provide either the `customer` or the `domain` parameter.
	Customer *string `queryParam:"style=form,explode=true,name=customer"`
	// The domain name. Use this field to get groups from only one domain. To return all domains for a customer account, use the `customer` query parameter instead.
	Domain *string `queryParam:"style=form,explode=true,name=domain"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Maximum number of results to return. Max allowed value is 200.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Column to use for sorting results
	OrderBy *DirectoryGroupsListOrderByEnum `queryParam:"style=form,explode=true,name=orderBy"`
	// Token to specify next page in the list
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Query string search. Should be of the form "". Complete documentation is at https: //developers.google.com/admin-sdk/directory/v1/guides/search-groups
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Whether to return results in ascending or descending order. Only of use when orderBy is also used
	SortOrder *DirectoryGroupsListSortOrderEnum `queryParam:"style=form,explode=true,name=sortOrder"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Email or immutable ID of the user if only those groups are to be listed, the given user is a member of. If it's an ID, it should match with the ID of the user object.
	UserKey *string `queryParam:"style=form,explode=true,name=userKey"`
}

type DirectoryGroupsListResponse struct {
	ContentType string
	// Successful response
	Groups      *shared.Groups
	StatusCode  int
	RawResponse *http.Response
}
