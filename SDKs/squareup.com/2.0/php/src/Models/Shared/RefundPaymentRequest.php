<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RefundPaymentRequest - Describes a request to refund a payment using [RefundPayment](https://developer.squareup.com/reference/square_2021-08-18/refunds-api/refund-payment).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RefundPaymentRequest
{
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Money $amountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    public Money $amountMoney;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $appFeeMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('app_fee_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $appFeeMoney = null;
    
    /**
     *  A unique string that identifies this `RefundPayment` request. The key can be any valid string
     * 
     * but must be unique for every `RefundPayment` request.
     * 
     * For more information, see [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
     * 
     * @var string $idempotencyKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('idempotency_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $idempotencyKey;
    
    /**
     * The unique ID of the payment being refunded.
     * 
     * @var string $paymentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $paymentId;
    
    /**
     * A description of the reason for the refund.
     * 
     * @var ?string $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reason = null;
    
	public function __construct()
	{
		$this->amountMoney = new \OpenAPI\OpenAPI\Models\Shared\Money();
		$this->appFeeMoney = null;
		$this->idempotencyKey = "";
		$this->paymentId = "";
		$this->reason = null;
	}
}
