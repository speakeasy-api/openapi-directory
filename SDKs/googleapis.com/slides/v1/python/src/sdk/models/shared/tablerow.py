"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimension as shared_dimension
from ..shared import tablecell as shared_tablecell
from ..shared import tablerowproperties as shared_tablerowproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TableRow:
    r"""Properties and contents of each row in a table."""
    
    row_height: Optional[shared_dimension.Dimension] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowHeight'), 'exclude': lambda f: f is None }})
    r"""A magnitude in a single direction in the specified units."""  
    table_cells: Optional[list[shared_tablecell.TableCell]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableCells'), 'exclude': lambda f: f is None }})
    r"""Properties and contents of each cell. Cells that span multiple columns are represented only once with a column_span greater than 1. As a result, the length of this collection does not always match the number of columns of the entire table."""  
    table_row_properties: Optional[shared_tablerowproperties.TableRowProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableRowProperties'), 'exclude': lambda f: f is None }})
    r"""Properties of each row in a table."""  
    