/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateDomainNameRequestBody {
    /**
     * A string with a length between [1-512].
     */
    @JsonProperty("domainName")
    public String domainName;

    public CreateDomainNameRequestBody withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }
    
    /**
     * The domain name configurations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domainNameConfigurations")
    public org.openapis.openapi.models.shared.DomainNameConfiguration[] domainNameConfigurations;

    public CreateDomainNameRequestBody withDomainNameConfigurations(org.openapis.openapi.models.shared.DomainNameConfiguration[] domainNameConfigurations) {
        this.domainNameConfigurations = domainNameConfigurations;
        return this;
    }
    
    /**
     * The mutual TLS authentication configuration for a custom domain name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mutualTlsAuthentication")
    public CreateDomainNameRequestBodyMutualTlsAuthentication mutualTlsAuthentication;

    public CreateDomainNameRequestBody withMutualTlsAuthentication(CreateDomainNameRequestBodyMutualTlsAuthentication mutualTlsAuthentication) {
        this.mutualTlsAuthentication = mutualTlsAuthentication;
        return this;
    }
    
    /**
     * Represents a collection of tags associated with the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateDomainNameRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateDomainNameRequestBody(@JsonProperty("domainName") String domainName) {
        this.domainName = domainName;
  }
}
