/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDocumentaiV1Document - Document represents the canonical document resource in Document AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document AI to iterate and optimize for quality.
 */
public class GoogleCloudDocumentaiV1Document {
    /**
     * Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;

    public GoogleCloudDocumentaiV1Document withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entities")
    public GoogleCloudDocumentaiV1DocumentEntity[] entities;

    public GoogleCloudDocumentaiV1Document withEntities(GoogleCloudDocumentaiV1DocumentEntity[] entities) {
        this.entities = entities;
        return this;
    }
    
    /**
     * Placeholder. Relationship among Document.entities.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entityRelations")
    public GoogleCloudDocumentaiV1DocumentEntityRelation[] entityRelations;

    public GoogleCloudDocumentaiV1Document withEntityRelations(GoogleCloudDocumentaiV1DocumentEntityRelation[] entityRelations) {
        this.entityRelations = entityRelations;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public GoogleRpcStatus error;

    public GoogleCloudDocumentaiV1Document withError(GoogleRpcStatus error) {
        this.error = error;
        return this;
    }
    
    /**
     * An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mimeType")
    public String mimeType;

    public GoogleCloudDocumentaiV1Document withMimeType(String mimeType) {
        this.mimeType = mimeType;
        return this;
    }
    
    /**
     * Visual page layout for the Document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pages")
    public GoogleCloudDocumentaiV1DocumentPage[] pages;

    public GoogleCloudDocumentaiV1Document withPages(GoogleCloudDocumentaiV1DocumentPage[] pages) {
        this.pages = pages;
        return this;
    }
    
    /**
     * Placeholder. Revision history of this document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revisions")
    public GoogleCloudDocumentaiV1DocumentRevision[] revisions;

    public GoogleCloudDocumentaiV1Document withRevisions(GoogleCloudDocumentaiV1DocumentRevision[] revisions) {
        this.revisions = revisions;
        return this;
    }
    
    /**
     * For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shardInfo")
    public GoogleCloudDocumentaiV1DocumentShardInfo shardInfo;

    public GoogleCloudDocumentaiV1Document withShardInfo(GoogleCloudDocumentaiV1DocumentShardInfo shardInfo) {
        this.shardInfo = shardInfo;
        return this;
    }
    
    /**
     * Optional. UTF-8 encoded text in reading order from the document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public String text;

    public GoogleCloudDocumentaiV1Document withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * Placeholder. A list of text corrections made to Document.text. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textChanges")
    public GoogleCloudDocumentaiV1DocumentTextChange[] textChanges;

    public GoogleCloudDocumentaiV1Document withTextChanges(GoogleCloudDocumentaiV1DocumentTextChange[] textChanges) {
        this.textChanges = textChanges;
        return this;
    }
    
    /**
     * Styles for the Document.text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textStyles")
    public GoogleCloudDocumentaiV1DocumentStyle[] textStyles;

    public GoogleCloudDocumentaiV1Document withTextStyles(GoogleCloudDocumentaiV1DocumentStyle[] textStyles) {
        this.textStyles = textStyles;
        return this;
    }
    
    /**
     * Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. For more information, refer to [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uri")
    public String uri;

    public GoogleCloudDocumentaiV1Document withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
    public GoogleCloudDocumentaiV1Document(){}
}
