"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ShopperUpdateMarketIDEnum(str, Enum):
    DA_DK = 'da-DK'
    DE_AT = 'de-AT'
    DE_CH = 'de-CH'
    DE_DE = 'de-DE'
    EL_GR = 'el-GR'
    EN_AE = 'en-AE'
    EN_AU = 'en-AU'
    EN_CA = 'en-CA'
    EN_GB = 'en-GB'
    EN_HK = 'en-HK'
    EN_IE = 'en-IE'
    EN_IL = 'en-IL'
    EN_IN = 'en-IN'
    EN_MY = 'en-MY'
    EN_NZ = 'en-NZ'
    EN_PH = 'en-PH'
    EN_PK = 'en-PK'
    EN_SG = 'en-SG'
    EN_US = 'en-US'
    EN_ZA = 'en-ZA'
    ES_AR = 'es-AR'
    ES_CL = 'es-CL'
    ES_CO = 'es-CO'
    ES_ES = 'es-ES'
    ES_MX = 'es-MX'
    ES_PE = 'es-PE'
    ES_US = 'es-US'
    ES_VE = 'es-VE'
    FI_FI = 'fi-FI'
    FR_BE = 'fr-BE'
    FR_CA = 'fr-CA'
    FR_CH = 'fr-CH'
    FR_FR = 'fr-FR'
    HI_IN = 'hi-IN'
    ID_ID = 'id-ID'
    IT_CH = 'it-CH'
    IT_IT = 'it-IT'
    JA_JP = 'ja-JP'
    KO_KR = 'ko-KR'
    MR_IN = 'mr-IN'
    NB_NO = 'nb-NO'
    NL_BE = 'nl-BE'
    NL_NL = 'nl-NL'
    PL_PL = 'pl-PL'
    PT_BR = 'pt-BR'
    PT_PT = 'pt-PT'
    RU_RU = 'ru-RU'
    SV_SE = 'sv-SE'
    TA_IN = 'ta-IN'
    TH_TH = 'th-TH'
    TR_TR = 'tr-TR'
    UK_UA = 'uk-UA'
    VI_VN = 'vi-VN'
    ZH_HK = 'zh-HK'
    ZH_SG = 'zh-SG'
    ZH_TW = 'zh-TW'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShopperUpdate:
    r"""The Shopper details to update"""
    
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})  
    external_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalId'), 'exclude': lambda f: f is None }})  
    market_id: Optional[ShopperUpdateMarketIDEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketId'), 'exclude': lambda f: f is None }})  
    name_first: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameFirst'), 'exclude': lambda f: f is None }})  
    name_last: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameLast'), 'exclude': lambda f: f is None }})  
    