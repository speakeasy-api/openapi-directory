// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeClusterVersionsActionEnum
type GETDescribeClusterVersionsActionEnum string

const (
	GETDescribeClusterVersionsActionEnumDescribeClusterVersions GETDescribeClusterVersionsActionEnum = "DescribeClusterVersions"
)

func (e GETDescribeClusterVersionsActionEnum) ToPointer() *GETDescribeClusterVersionsActionEnum {
	return &e
}

func (e *GETDescribeClusterVersionsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeClusterVersions":
		*e = GETDescribeClusterVersionsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeClusterVersionsActionEnum: %v", v)
	}
}

// GETDescribeClusterVersionsVersionEnum
type GETDescribeClusterVersionsVersionEnum string

const (
	GETDescribeClusterVersionsVersionEnumTwoThousandAndTwelve1201 GETDescribeClusterVersionsVersionEnum = "2012-12-01"
)

func (e GETDescribeClusterVersionsVersionEnum) ToPointer() *GETDescribeClusterVersionsVersionEnum {
	return &e
}

func (e *GETDescribeClusterVersionsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = GETDescribeClusterVersionsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeClusterVersionsVersionEnum: %v", v)
	}
}

type GETDescribeClusterVersionsRequest struct {
	Action GETDescribeClusterVersionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of a specific cluster parameter group family to return details for.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 alphanumeric characters</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>
	ClusterParameterGroupFamily *string `queryParam:"style=form,explode=true,name=ClusterParameterGroupFamily"`
	// <p>The specific cluster version to return.</p> <p>Example: <code>1.0</code> </p>
	ClusterVersion *string `queryParam:"style=form,explode=true,name=ClusterVersion"`
	// An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterVersions</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// <p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>
	MaxRecords        *int64                                `queryParam:"style=form,explode=true,name=MaxRecords"`
	Version           GETDescribeClusterVersionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeClusterVersionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
