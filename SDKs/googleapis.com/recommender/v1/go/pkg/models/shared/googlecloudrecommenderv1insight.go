// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRecommenderV1InsightCategoryEnum - Category being targeted by the insight.
type GoogleCloudRecommenderV1InsightCategoryEnum string

const (
	GoogleCloudRecommenderV1InsightCategoryEnumCategoryUnspecified GoogleCloudRecommenderV1InsightCategoryEnum = "CATEGORY_UNSPECIFIED"
	GoogleCloudRecommenderV1InsightCategoryEnumCost                GoogleCloudRecommenderV1InsightCategoryEnum = "COST"
	GoogleCloudRecommenderV1InsightCategoryEnumSecurity            GoogleCloudRecommenderV1InsightCategoryEnum = "SECURITY"
	GoogleCloudRecommenderV1InsightCategoryEnumPerformance         GoogleCloudRecommenderV1InsightCategoryEnum = "PERFORMANCE"
	GoogleCloudRecommenderV1InsightCategoryEnumManageability       GoogleCloudRecommenderV1InsightCategoryEnum = "MANAGEABILITY"
	GoogleCloudRecommenderV1InsightCategoryEnumSustainability      GoogleCloudRecommenderV1InsightCategoryEnum = "SUSTAINABILITY"
	GoogleCloudRecommenderV1InsightCategoryEnumReliability         GoogleCloudRecommenderV1InsightCategoryEnum = "RELIABILITY"
)

func (e *GoogleCloudRecommenderV1InsightCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CATEGORY_UNSPECIFIED":
		fallthrough
	case "COST":
		fallthrough
	case "SECURITY":
		fallthrough
	case "PERFORMANCE":
		fallthrough
	case "MANAGEABILITY":
		fallthrough
	case "SUSTAINABILITY":
		fallthrough
	case "RELIABILITY":
		*e = GoogleCloudRecommenderV1InsightCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRecommenderV1InsightCategoryEnum: %s", s)
	}
}

// GoogleCloudRecommenderV1InsightSeverityEnum - Insight's severity.
type GoogleCloudRecommenderV1InsightSeverityEnum string

const (
	GoogleCloudRecommenderV1InsightSeverityEnumSeverityUnspecified GoogleCloudRecommenderV1InsightSeverityEnum = "SEVERITY_UNSPECIFIED"
	GoogleCloudRecommenderV1InsightSeverityEnumLow                 GoogleCloudRecommenderV1InsightSeverityEnum = "LOW"
	GoogleCloudRecommenderV1InsightSeverityEnumMedium              GoogleCloudRecommenderV1InsightSeverityEnum = "MEDIUM"
	GoogleCloudRecommenderV1InsightSeverityEnumHigh                GoogleCloudRecommenderV1InsightSeverityEnum = "HIGH"
	GoogleCloudRecommenderV1InsightSeverityEnumCritical            GoogleCloudRecommenderV1InsightSeverityEnum = "CRITICAL"
)

func (e *GoogleCloudRecommenderV1InsightSeverityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SEVERITY_UNSPECIFIED":
		fallthrough
	case "LOW":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "HIGH":
		fallthrough
	case "CRITICAL":
		*e = GoogleCloudRecommenderV1InsightSeverityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRecommenderV1InsightSeverityEnum: %s", s)
	}
}

// GoogleCloudRecommenderV1Insight - An insight along with the information used to derive the insight. The insight may have associated recommendations as well.
type GoogleCloudRecommenderV1Insight struct {
	// Recommendations derived from this insight.
	AssociatedRecommendations []GoogleCloudRecommenderV1InsightRecommendationReference `json:"associatedRecommendations,omitempty"`
	// Category being targeted by the insight.
	Category *GoogleCloudRecommenderV1InsightCategoryEnum `json:"category,omitempty"`
	// A struct of custom fields to explain the insight. Example: "grantedPermissionsCount": "1000"
	Content map[string]interface{} `json:"content,omitempty"`
	// Free-form human readable summary in English. The maximum length is 500 characters.
	Description *string `json:"description,omitempty"`
	// Fingerprint of the Insight. Provides optimistic locking when updating states.
	Etag *string `json:"etag,omitempty"`
	// Insight subtype. Insight content schema will be stable for a given subtype.
	InsightSubtype *string `json:"insightSubtype,omitempty"`
	// Timestamp of the latest data used to generate the insight.
	LastRefreshTime *string `json:"lastRefreshTime,omitempty"`
	// Name of the insight.
	Name *string `json:"name,omitempty"`
	// Observation period that led to the insight. The source data used to generate the insight ends at last_refresh_time and begins at (last_refresh_time - observation_period).
	ObservationPeriod *string `json:"observationPeriod,omitempty"`
	// Insight's severity.
	Severity *GoogleCloudRecommenderV1InsightSeverityEnum `json:"severity,omitempty"`
	// Information related to insight state.
	StateInfo *GoogleCloudRecommenderV1InsightStateInfo `json:"stateInfo,omitempty"`
	// Fully qualified resource names that this insight is targeting.
	TargetResources []string `json:"targetResources,omitempty"`
}
