/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomConnectorDestinationProperties } from "./customconnectordestinationproperties";
import { CustomerProfilesDestinationProperties } from "./customerprofilesdestinationproperties";
import { EventBridgeDestinationProperties } from "./eventbridgedestinationproperties";
import { HoneycodeDestinationProperties } from "./honeycodedestinationproperties";
import { MarketoDestinationProperties } from "./marketodestinationproperties";
import { RedshiftDestinationProperties } from "./redshiftdestinationproperties";
import { S3DestinationProperties } from "./s3destinationproperties";
import { SalesforceDestinationProperties } from "./salesforcedestinationproperties";
import { SAPODataDestinationProperties } from "./sapodatadestinationproperties";
import { SnowflakeDestinationProperties } from "./snowflakedestinationproperties";
import { UpsolverDestinationProperties } from "./upsolverdestinationproperties";
import { ZendeskDestinationProperties } from "./zendeskdestinationproperties";
import { Expose, Type } from "class-transformer";

/**
 *  This stores the information that is required to query a particular connector.
 */
export class DestinationConnectorProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CustomConnector" })
  @Type(() => CustomConnectorDestinationProperties)
  customConnector?: CustomConnectorDestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomerProfiles" })
  @Type(() => CustomerProfilesDestinationProperties)
  customerProfiles?: CustomerProfilesDestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "EventBridge" })
  @Type(() => EventBridgeDestinationProperties)
  eventBridge?: EventBridgeDestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "Honeycode" })
  @Type(() => HoneycodeDestinationProperties)
  honeycode?: HoneycodeDestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "LookoutMetrics" })
  lookoutMetrics?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "Marketo" })
  @Type(() => MarketoDestinationProperties)
  marketo?: MarketoDestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "Redshift" })
  @Type(() => RedshiftDestinationProperties)
  redshift?: RedshiftDestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "S3" })
  @Type(() => S3DestinationProperties)
  s3?: S3DestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "SAPOData" })
  @Type(() => SAPODataDestinationProperties)
  sapoData?: SAPODataDestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "Salesforce" })
  @Type(() => SalesforceDestinationProperties)
  salesforce?: SalesforceDestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "Snowflake" })
  @Type(() => SnowflakeDestinationProperties)
  snowflake?: SnowflakeDestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "Upsolver" })
  @Type(() => UpsolverDestinationProperties)
  upsolver?: UpsolverDestinationProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "Zendesk" })
  @Type(() => ZendeskDestinationProperties)
  zendesk?: ZendeskDestinationProperties;
}
