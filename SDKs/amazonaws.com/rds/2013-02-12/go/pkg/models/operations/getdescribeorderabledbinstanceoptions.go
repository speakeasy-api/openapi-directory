// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeOrderableDBInstanceOptionsActionEnum
type GETDescribeOrderableDBInstanceOptionsActionEnum string

const (
	GETDescribeOrderableDBInstanceOptionsActionEnumDescribeOrderableDbInstanceOptions GETDescribeOrderableDBInstanceOptionsActionEnum = "DescribeOrderableDBInstanceOptions"
)

func (e GETDescribeOrderableDBInstanceOptionsActionEnum) ToPointer() *GETDescribeOrderableDBInstanceOptionsActionEnum {
	return &e
}

func (e *GETDescribeOrderableDBInstanceOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeOrderableDBInstanceOptions":
		*e = GETDescribeOrderableDBInstanceOptionsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeOrderableDBInstanceOptionsActionEnum: %v", v)
	}
}

// GETDescribeOrderableDBInstanceOptionsVersionEnum
type GETDescribeOrderableDBInstanceOptionsVersionEnum string

const (
	GETDescribeOrderableDBInstanceOptionsVersionEnumTwoThousandAndThirteen0212 GETDescribeOrderableDBInstanceOptionsVersionEnum = "2013-02-12"
)

func (e GETDescribeOrderableDBInstanceOptionsVersionEnum) ToPointer() *GETDescribeOrderableDBInstanceOptionsVersionEnum {
	return &e
}

func (e *GETDescribeOrderableDBInstanceOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-02-12":
		*e = GETDescribeOrderableDBInstanceOptionsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeOrderableDBInstanceOptionsVersionEnum: %v", v)
	}
}

type GETDescribeOrderableDBInstanceOptionsRequest struct {
	Action            GETDescribeOrderableDBInstanceOptionsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DBInstanceClass   *string                                          `queryParam:"style=form,explode=true,name=DBInstanceClass"`
	Engine            string                                           `queryParam:"style=form,explode=true,name=Engine"`
	EngineVersion     *string                                          `queryParam:"style=form,explode=true,name=EngineVersion"`
	LicenseModel      *string                                          `queryParam:"style=form,explode=true,name=LicenseModel"`
	Marker            *string                                          `queryParam:"style=form,explode=true,name=Marker"`
	MaxRecords        *int64                                           `queryParam:"style=form,explode=true,name=MaxRecords"`
	Version           GETDescribeOrderableDBInstanceOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	Vpc               *bool                                            `queryParam:"style=form,explode=true,name=Vpc"`
	XAmzAlgorithm     *string                                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeOrderableDBInstanceOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
