/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class UpdateTaskUpdateTaskRequest {
    @SpeakeasyMetadata("form:name=AssignmentStatus")
    public org.openapis.openapi.models.shared.TaskEnumStatusEnum assignmentStatus;
    public UpdateTaskUpdateTaskRequest withAssignmentStatus(org.openapis.openapi.models.shared.TaskEnumStatusEnum assignmentStatus) {
        this.assignmentStatus = assignmentStatus;
        return this;
    }
    
    /**
     * The JSON string that describes the custom attributes of the task.
     */
    @SpeakeasyMetadata("form:name=Attributes")
    public String attributes;
    public UpdateTaskUpdateTaskRequest withAttributes(String attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * The Task's new priority value. When supplied, the Task takes on the specified priority unless it matches a Workflow Target with a Priority set. Value can be 0 to 2^31^ (2,147,483,647).
     */
    @SpeakeasyMetadata("form:name=Priority")
    public Long priority;
    public UpdateTaskUpdateTaskRequest withPriority(Long priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * The reason that the Task was canceled or completed. This parameter is required only if the Task is canceled or completed. Setting this value queues the task for deletion and logs the reason.
     */
    @SpeakeasyMetadata("form:name=Reason")
    public String reason;
    public UpdateTaskUpdateTaskRequest withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * When MultiTasking is enabled, specify the TaskChannel with the task to update. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`.
     */
    @SpeakeasyMetadata("form:name=TaskChannel")
    public String taskChannel;
    public UpdateTaskUpdateTaskRequest withTaskChannel(String taskChannel) {
        this.taskChannel = taskChannel;
        return this;
    }
    
}
