// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// XSSAttackVectorEnum - The attack vector of the payload triggering this XSS.
type XSSAttackVectorEnum string

const (
	XSSAttackVectorEnumAttackVectorUnspecified XSSAttackVectorEnum = "ATTACK_VECTOR_UNSPECIFIED"
	XSSAttackVectorEnumLocalStorage            XSSAttackVectorEnum = "LOCAL_STORAGE"
	XSSAttackVectorEnumSessionStorage          XSSAttackVectorEnum = "SESSION_STORAGE"
	XSSAttackVectorEnumWindowName              XSSAttackVectorEnum = "WINDOW_NAME"
	XSSAttackVectorEnumReferrer                XSSAttackVectorEnum = "REFERRER"
	XSSAttackVectorEnumFormInput               XSSAttackVectorEnum = "FORM_INPUT"
	XSSAttackVectorEnumCookie                  XSSAttackVectorEnum = "COOKIE"
	XSSAttackVectorEnumPostMessage             XSSAttackVectorEnum = "POST_MESSAGE"
	XSSAttackVectorEnumGetParameters           XSSAttackVectorEnum = "GET_PARAMETERS"
	XSSAttackVectorEnumURLFragment             XSSAttackVectorEnum = "URL_FRAGMENT"
	XSSAttackVectorEnumHTMLComment             XSSAttackVectorEnum = "HTML_COMMENT"
	XSSAttackVectorEnumPostParameters          XSSAttackVectorEnum = "POST_PARAMETERS"
	XSSAttackVectorEnumProtocol                XSSAttackVectorEnum = "PROTOCOL"
	XSSAttackVectorEnumStoredXSS               XSSAttackVectorEnum = "STORED_XSS"
	XSSAttackVectorEnumSameOrigin              XSSAttackVectorEnum = "SAME_ORIGIN"
	XSSAttackVectorEnumUserControllableURL     XSSAttackVectorEnum = "USER_CONTROLLABLE_URL"
)

func (e XSSAttackVectorEnum) ToPointer() *XSSAttackVectorEnum {
	return &e
}

func (e *XSSAttackVectorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ATTACK_VECTOR_UNSPECIFIED":
		fallthrough
	case "LOCAL_STORAGE":
		fallthrough
	case "SESSION_STORAGE":
		fallthrough
	case "WINDOW_NAME":
		fallthrough
	case "REFERRER":
		fallthrough
	case "FORM_INPUT":
		fallthrough
	case "COOKIE":
		fallthrough
	case "POST_MESSAGE":
		fallthrough
	case "GET_PARAMETERS":
		fallthrough
	case "URL_FRAGMENT":
		fallthrough
	case "HTML_COMMENT":
		fallthrough
	case "POST_PARAMETERS":
		fallthrough
	case "PROTOCOL":
		fallthrough
	case "STORED_XSS":
		fallthrough
	case "SAME_ORIGIN":
		fallthrough
	case "USER_CONTROLLABLE_URL":
		*e = XSSAttackVectorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for XSSAttackVectorEnum: %v", v)
	}
}

// XSS - Information reported for an XSS.
type XSS struct {
	// The attack vector of the payload triggering this XSS.
	AttackVector *XSSAttackVectorEnum `json:"attackVector,omitempty"`
	// An error message generated by a javascript breakage.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// Stack traces leading to the point where the XSS occurred.
	StackTraces []string `json:"stackTraces,omitempty"`
	// The reproduction url for the seeding POST request of a Stored XSS.
	StoredXSSSeedingURL *string `json:"storedXssSeedingUrl,omitempty"`
}
