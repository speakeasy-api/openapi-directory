// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReplacementTypeEnumEnum string

const (
	ReplacementTypeEnumEnumKeepBase        ReplacementTypeEnumEnum = "KEEP_BASE"
	ReplacementTypeEnumEnumKeepSource      ReplacementTypeEnumEnum = "KEEP_SOURCE"
	ReplacementTypeEnumEnumKeepDestination ReplacementTypeEnumEnum = "KEEP_DESTINATION"
	ReplacementTypeEnumEnumUseNewContent   ReplacementTypeEnumEnum = "USE_NEW_CONTENT"
)

func (e *ReplacementTypeEnumEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "KEEP_BASE":
		fallthrough
	case "KEEP_SOURCE":
		fallthrough
	case "KEEP_DESTINATION":
		fallthrough
	case "USE_NEW_CONTENT":
		*e = ReplacementTypeEnumEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplacementTypeEnumEnum: %s", s)
	}
}
