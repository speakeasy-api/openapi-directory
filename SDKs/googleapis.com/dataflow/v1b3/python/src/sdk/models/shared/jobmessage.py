"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class JobMessageMessageImportanceEnum(str, Enum):
    r"""Importance level of the message."""
    JOB_MESSAGE_IMPORTANCE_UNKNOWN = 'JOB_MESSAGE_IMPORTANCE_UNKNOWN'
    JOB_MESSAGE_DEBUG = 'JOB_MESSAGE_DEBUG'
    JOB_MESSAGE_DETAILED = 'JOB_MESSAGE_DETAILED'
    JOB_MESSAGE_BASIC = 'JOB_MESSAGE_BASIC'
    JOB_MESSAGE_WARNING = 'JOB_MESSAGE_WARNING'
    JOB_MESSAGE_ERROR = 'JOB_MESSAGE_ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobMessage:
    r"""A particular message pertaining to a Dataflow job."""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Deprecated."""  
    message_importance: Optional[JobMessageMessageImportanceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messageImportance'), 'exclude': lambda f: f is None }})
    r"""Importance level of the message."""  
    message_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messageText'), 'exclude': lambda f: f is None }})
    r"""The text of the message."""  
    time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time'), 'exclude': lambda f: f is None }})
    r"""The timestamp of the message."""  
    