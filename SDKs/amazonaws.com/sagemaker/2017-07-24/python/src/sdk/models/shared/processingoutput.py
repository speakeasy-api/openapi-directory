"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import processingfeaturestoreoutput as shared_processingfeaturestoreoutput
from ..shared import processings3output as shared_processings3output
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProcessingOutput:
    r"""Describes the results of a processing job. The processing output must specify exactly one of either <code>S3Output</code> or <code>FeatureStoreOutput</code> types."""
    
    output_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputName') }})  
    app_managed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AppManaged'), 'exclude': lambda f: f is None }})  
    feature_store_output: Optional[shared_processingfeaturestoreoutput.ProcessingFeatureStoreOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeatureStoreOutput'), 'exclude': lambda f: f is None }})  
    s3_output: Optional[shared_processings3output.ProcessingS3Output] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Output'), 'exclude': lambda f: f is None }})  
    