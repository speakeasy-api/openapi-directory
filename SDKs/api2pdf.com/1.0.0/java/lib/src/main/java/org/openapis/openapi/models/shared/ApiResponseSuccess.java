/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApiResponseSuccess - A JSON object containing the url to the PDF and other meta data
 */
public class ApiResponseSuccess {
    /**
     * Cost of the operation (mbIn + mbOut) * $.001
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cost")
    public Double cost;
    public ApiResponseSuccess withCost(Double cost) {
        this.cost = cost;
        return this;
    }
    
    /**
     * The amount of megabytes of bandwidth used to process the pdf
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mbIn")
    public Double mbIn;
    public ApiResponseSuccess withMbIn(Double mbIn) {
        this.mbIn = mbIn;
        return this;
    }
    
    /**
     * The amount of megabytes of bandwidth generated from the resulting pdf
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mbOut")
    public Double mbOut;
    public ApiResponseSuccess withMbOut(Double mbOut) {
        this.mbOut = mbOut;
        return this;
    }
    
    /**
     * A url to the PDF that will exist only for 24 hours
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pdf")
    public String pdf;
    public ApiResponseSuccess withPdf(String pdf) {
        this.pdf = pdf;
        return this;
    }
    
    /**
     * Will be true if the operation suceeded
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public ApiResponseSuccess withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
}
