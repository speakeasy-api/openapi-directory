/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum VoiceWebhooksEndpointTypeEnum {
  AnswerUrl = "answer_url",
  EventUrl = "event_url",
}

/**
 * The HTTP method used to send event information to the `event_url` or `answer_url`.
 */
export enum VoiceWebhooksHttpMethodEnum {
  Get = "GET",
  Post = "POST",
}

export class VoiceWebhooks extends SpeakeasyBase {
  /**
   * `answer_url`: The URL where your webhook delivers the Nexmo Call Control Object that governs this call. As soon as your user answers a call Nexmo makes a request to answer_url. `event_url`: Nexmo sends event information asynchronously to this URL when status changes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endpoint" })
  endpoint: string;

  @SpeakeasyMetadata()
  @Expose({ name: "endpoint_type" })
  endpointType: VoiceWebhooksEndpointTypeEnum;

  /**
   * The HTTP method used to send event information to the `event_url` or `answer_url`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "http_method" })
  httpMethod: VoiceWebhooksHttpMethodEnum;
}

/**
 * The Nexmo product that you access with this application.
 */
export class Voice extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: VoiceWebhooks })
  @Expose({ name: "webhooks" })
  @Type(() => VoiceWebhooks)
  webhooks?: VoiceWebhooks[];
}
