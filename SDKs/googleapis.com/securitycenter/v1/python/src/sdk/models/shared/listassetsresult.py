"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import asset as shared_asset
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ListAssetsResultStateChangeEnum(str, Enum):
    r"""State change of the asset between the points in time."""
    UNUSED = 'UNUSED'
    ADDED = 'ADDED'
    REMOVED = 'REMOVED'
    ACTIVE = 'ACTIVE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListAssetsResult:
    r"""Result containing the Asset and its State."""
    
    asset: Optional[shared_asset.Asset] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('asset'), 'exclude': lambda f: f is None }})
    r"""Security Command Center representation of a Google Cloud resource. The Asset is a Security Command Center resource that captures information about a single Google Cloud resource. All modifications to an Asset are only within the context of Security Command Center and don't affect the referenced Google Cloud resource."""  
    state_change: Optional[ListAssetsResultStateChangeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateChange'), 'exclude': lambda f: f is None }})
    r"""State change of the asset between the points in time."""  
    