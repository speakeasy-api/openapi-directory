/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Webhook - Successful DELETE on Webhook resource
 */
public class Webhook {
    /**
     * json value to describe data to add
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("add_to_data")
    public String addToData;
    public Webhook withAddToData(String addToData) {
        this.addToData = addToData;
        return this;
    }
    
    /**
     * Date of the webhook creation
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;
    public Webhook withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    /**
     * Date of the webhook deletion
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("deleted")
    public OffsetDateTime deleted;
    public Webhook withDeleted(OffsetDateTime deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * json value to store last related webhook data flushing fail
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flush_fail")
    public String flushFail;
    public Webhook withFlushFail(String flushFail) {
        this.flushFail = flushFail;
        return this;
    }
    
    /**
     * ID of the webhook
     */
    @JsonProperty("id")
    public Long id;
    public Webhook withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * ID of the authentication process
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_auth")
    public Long idAuth;
    public Webhook withIdAuth(Long idAuth) {
        this.idAuth = idAuth;
        return this;
    }
    
    /**
     * ID of the webhook event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_event")
    public Long idEvent;
    public Webhook withIdEvent(Long idEvent) {
        this.idEvent = idEvent;
        return this;
    }
    
    /**
     * ID of the service
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_service")
    public Long idService;
    public Webhook withIdService(Long idService) {
        this.idService = idService;
        return this;
    }
    
    /**
     * ID of the emitter user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_user")
    public Long idUser;
    public Webhook withIdUser(Long idUser) {
        this.idUser = idUser;
        return this;
    }
    
    /**
     * Date of the webhook last update
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated")
    public OffsetDateTime updated;
    public Webhook withUpdated(OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }
    
    /**
     * URL of the webhook
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public Webhook withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
