"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Group = exports.GroupTypeEnum = exports.GroupActivationStatusEnum = exports.GroupAchDebitStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * If the Group is allowed to create ACH debits.
 */
var GroupAchDebitStatusEnum;
(function (GroupAchDebitStatusEnum) {
    GroupAchDebitStatusEnum["Disabled"] = "disabled";
    GroupAchDebitStatusEnum["Enabled"] = "enabled";
})(GroupAchDebitStatusEnum = exports.GroupAchDebitStatusEnum || (exports.GroupAchDebitStatusEnum = {}));
/**
 * If the Group is activated or not.
 */
var GroupActivationStatusEnum;
(function (GroupActivationStatusEnum) {
    GroupActivationStatusEnum["Unactivated"] = "unactivated";
    GroupActivationStatusEnum["Activated"] = "activated";
})(GroupActivationStatusEnum = exports.GroupActivationStatusEnum || (exports.GroupActivationStatusEnum = {}));
/**
 * A constant representing the object's type. For this resource it will always be `group`.
 */
var GroupTypeEnum;
(function (GroupTypeEnum) {
    GroupTypeEnum["Group"] = "group";
})(GroupTypeEnum = exports.GroupTypeEnum || (exports.GroupTypeEnum = {}));
/**
 * Groups represent organizations using Increase. You can retrieve information about your own organization via the API, or (more commonly) OAuth platforms can retrieve information about the organizations that have granted them access.
 */
var Group = /** @class */ (function (_super) {
    __extends(Group, _super);
    function Group() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ach_debit_status" }),
        __metadata("design:type", String)
    ], Group.prototype, "achDebitStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "activation_status" }),
        __metadata("design:type", String)
    ], Group.prototype, "activationStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Group.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Group.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Group.prototype, "type", void 0);
    return Group;
}(utils_1.SpeakeasyBase));
exports.Group = Group;
