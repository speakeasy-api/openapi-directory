<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ServingCorpusKey
{
    /**
     * The Corpus ID.
     * 
     * @var ?int $corpusId
     */
	#[\JMS\Serializer\Annotation\SerializedName('corpusId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $corpusId = null;
    
    /**
     * The Customer ID.
     * 
     * @var ?int $customerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('customerId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $customerId = null;
    
    /**
     * Weights on custom dimensions for the corpus.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\VectaraservingCustomDimension> $dim
     */
	#[\JMS\Serializer\Annotation\SerializedName('dim')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VectaraservingCustomDimension>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dim = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('metadataFilter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $metadataFilter = null;
    
    /**
     * Semantics controls the interpretation of the query string by the
     * 
     * server, and can be used to override the default semantics assigned
     * in the corpus definition.
     * 
     * 
     * 
     * 
     *  - DEFAULT: Use corpus-assigned semantics.  This is the most common setting.
     *  - QUERY: Use query semantics.  This is also common.
     *  - RESPONSE: Use response semantics.  Usage of this is rare.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CorpusKeySemanticsEnum $semantics
     */
	#[\JMS\Serializer\Annotation\SerializedName('semantics')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CorpusKeySemanticsEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CorpusKeySemanticsEnum $semantics = null;
    
	public function __construct()
	{
		$this->corpusId = null;
		$this->customerId = null;
		$this->dim = null;
		$this->metadataFilter = null;
		$this->semantics = null;
	}
}
