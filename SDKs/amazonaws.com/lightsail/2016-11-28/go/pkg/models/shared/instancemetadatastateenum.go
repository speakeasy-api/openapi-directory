// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceMetadataStateEnum string

const (
	InstanceMetadataStateEnumPending InstanceMetadataStateEnum = "pending"
	InstanceMetadataStateEnumApplied InstanceMetadataStateEnum = "applied"
)

func (e InstanceMetadataStateEnum) ToPointer() *InstanceMetadataStateEnum {
	return &e
}

func (e *InstanceMetadataStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "applied":
		*e = InstanceMetadataStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceMetadataStateEnum: %v", v)
	}
}
