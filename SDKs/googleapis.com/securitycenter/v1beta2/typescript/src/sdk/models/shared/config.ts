/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The state of enablement for the module at its level of the resource hierarchy.
 */
export enum ConfigModuleEnablementStateEnum {
  EnablementStateUnspecified = "ENABLEMENT_STATE_UNSPECIFIED",
  Inherited = "INHERITED",
  Enabled = "ENABLED",
  Disabled = "DISABLED",
}

/**
 * Configuration of a module.
 */
export class Config extends SpeakeasyBase {
  /**
   * The state of enablement for the module at its level of the resource hierarchy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "moduleEnablementState" })
  moduleEnablementState?: ConfigModuleEnablementStateEnum;

  /**
   * The configuration value for the module. The absence of this field implies its inheritance from the parent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: Record<string, any>;
}
