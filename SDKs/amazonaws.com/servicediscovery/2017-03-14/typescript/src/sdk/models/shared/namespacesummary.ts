/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NamespaceProperties } from "./namespaceproperties";
import { NamespaceTypeEnum } from "./namespacetypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A complex type that contains information about a namespace.
 */
export class NamespaceSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Properties" })
  @Type(() => NamespaceProperties)
  properties?: NamespaceProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceCount" })
  serviceCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: NamespaceTypeEnum;
}
