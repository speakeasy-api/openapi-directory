/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PeriodicPayment - Periodic Payment Serializer.
 */
public class PeriodicPayment {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("day_of_execution")
    public String dayOfExecution;

    public PeriodicPayment withDayOfExecution(String dayOfExecution) {
        this.dayOfExecution = dayOfExecution;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("end_date")
    public LocalDate endDate;

    public PeriodicPayment withEndDate(LocalDate endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * Behavior when periodic payment dates fall on holiday.
     * 
     * * `following` - following
     * * `preceding` - preceding
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("execution_rule")
    public PeriodicPaymentExecutionRuleEnum executionRule;

    public PeriodicPayment withExecutionRule(PeriodicPaymentExecutionRuleEnum executionRule) {
        this.executionRule = executionRule;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frequency")
    public PeriodicPaymentFrequencyEnum frequency;

    public PeriodicPayment withFrequency(PeriodicPaymentFrequencyEnum frequency) {
        this.frequency = frequency;
        return this;
    }
    
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("start_date")
    public LocalDate startDate;

    public PeriodicPayment withStartDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }
    
    public PeriodicPayment(@JsonProperty("start_date") LocalDate startDate) {
        this.startDate = startDate;
  }
}
