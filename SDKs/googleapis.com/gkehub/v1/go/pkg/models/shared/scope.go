// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Scope - Scope represents a Scope in a Fleet.
type Scope struct {
	// Output only. When the scope was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. When the scope was deleted.
	DeleteTime *string `json:"deleteTime,omitempty"`
	// The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`
	Name *string `json:"name,omitempty"`
	// ScopeLifecycleState describes the state of a Scope resource.
	State *ScopeLifecycleState `json:"state,omitempty"`
	// Output only. Google-generated UUID for this resource. This is unique across all scope resources. If a scope resource is deleted and another resource with the same name is created, it gets a different uid.
	UID *string `json:"uid,omitempty"`
	// Output only. When the scope was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// ScopeInput - Scope represents a Scope in a Fleet.
type ScopeInput struct {
	// The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`
	Name *string `json:"name,omitempty"`
}
