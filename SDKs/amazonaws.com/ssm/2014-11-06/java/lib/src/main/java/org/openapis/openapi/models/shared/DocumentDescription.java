/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DocumentDescription - Describes an Amazon Web Services Systems Manager document (SSM document). 
 */
public class DocumentDescription {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ApprovedVersion")
    public String approvedVersion;
    public DocumentDescription withApprovedVersion(String approvedVersion) {
        this.approvedVersion = approvedVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AttachmentsInformation")
    public AttachmentInformation[] attachmentsInformation;
    public DocumentDescription withAttachmentsInformation(AttachmentInformation[] attachmentsInformation) {
        this.attachmentsInformation = attachmentsInformation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Author")
    public String author;
    public DocumentDescription withAuthor(String author) {
        this.author = author;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Category")
    public String[] category;
    public DocumentDescription withCategory(String[] category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CategoryEnum")
    public String[] categoryEnum;
    public DocumentDescription withCategoryEnum(String[] categoryEnum) {
        this.categoryEnum = categoryEnum;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public DocumentDescription withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultVersion")
    public String defaultVersion;
    public DocumentDescription withDefaultVersion(String defaultVersion) {
        this.defaultVersion = defaultVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public DocumentDescription withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisplayName")
    public String displayName;
    public DocumentDescription withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentFormat")
    public DocumentFormatEnum documentFormat;
    public DocumentDescription withDocumentFormat(DocumentFormatEnum documentFormat) {
        this.documentFormat = documentFormat;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentType")
    public DocumentTypeEnum documentType;
    public DocumentDescription withDocumentType(DocumentTypeEnum documentType) {
        this.documentType = documentType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentVersion")
    public String documentVersion;
    public DocumentDescription withDocumentVersion(String documentVersion) {
        this.documentVersion = documentVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Hash")
    public String hash;
    public DocumentDescription withHash(String hash) {
        this.hash = hash;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HashType")
    public DocumentHashTypeEnum hashType;
    public DocumentDescription withHashType(DocumentHashTypeEnum hashType) {
        this.hashType = hashType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LatestVersion")
    public String latestVersion;
    public DocumentDescription withLatestVersion(String latestVersion) {
        this.latestVersion = latestVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public DocumentDescription withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Owner")
    public String owner;
    public DocumentDescription withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Parameters")
    public DocumentParameter[] parameters;
    public DocumentDescription withParameters(DocumentParameter[] parameters) {
        this.parameters = parameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PendingReviewVersion")
    public String pendingReviewVersion;
    public DocumentDescription withPendingReviewVersion(String pendingReviewVersion) {
        this.pendingReviewVersion = pendingReviewVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlatformTypes")
    public PlatformTypeEnum[] platformTypes;
    public DocumentDescription withPlatformTypes(PlatformTypeEnum[] platformTypes) {
        this.platformTypes = platformTypes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Requires")
    public DocumentRequires[] requires;
    public DocumentDescription withRequires(DocumentRequires[] requires) {
        this.requires = requires;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReviewInformation")
    public ReviewInformation[] reviewInformation;
    public DocumentDescription withReviewInformation(ReviewInformation[] reviewInformation) {
        this.reviewInformation = reviewInformation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReviewStatus")
    public ReviewStatusEnum reviewStatus;
    public DocumentDescription withReviewStatus(ReviewStatusEnum reviewStatus) {
        this.reviewStatus = reviewStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SchemaVersion")
    public String schemaVersion;
    public DocumentDescription withSchemaVersion(String schemaVersion) {
        this.schemaVersion = schemaVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sha1")
    public String sha1;
    public DocumentDescription withSha1(String sha1) {
        this.sha1 = sha1;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public DocumentStatusEnum status;
    public DocumentDescription withStatus(DocumentStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatusInformation")
    public String statusInformation;
    public DocumentDescription withStatusInformation(String statusInformation) {
        this.statusInformation = statusInformation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public DocumentDescription withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetType")
    public String targetType;
    public DocumentDescription withTargetType(String targetType) {
        this.targetType = targetType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VersionName")
    public String versionName;
    public DocumentDescription withVersionName(String versionName) {
        this.versionName = versionName;
        return this;
    }
    
}
