"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import affinetransform as shared_affinetransform
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UpdatePageElementTransformRequestApplyModeEnum(str, Enum):
    r"""The apply mode of the transform update."""
    APPLY_MODE_UNSPECIFIED = 'APPLY_MODE_UNSPECIFIED'
    RELATIVE = 'RELATIVE'
    ABSOLUTE = 'ABSOLUTE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdatePageElementTransformRequest:
    r"""Updates the transform of a page element. Updating the transform of a group will change the absolute transform of the page elements in that group, which can change their visual appearance. See the documentation for PageElement.transform for more details."""
    
    apply_mode: Optional[UpdatePageElementTransformRequestApplyModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applyMode'), 'exclude': lambda f: f is None }})
    r"""The apply mode of the transform update."""  
    object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectId'), 'exclude': lambda f: f is None }})
    r"""The object ID of the page element to update."""  
    transform: Optional[shared_affinetransform.AffineTransform] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transform'), 'exclude': lambda f: f is None }})
    r"""AffineTransform uses a 3x3 matrix with an implied last row of [ 0 0 1 ] to transform source coordinates (x,y) into destination coordinates (x', y') according to: x' x = shear_y scale_y translate_y 1 [ 1 ] After transformation, x' = scale_x * x + shear_x * y + translate_x; y' = scale_y * y + shear_y * x + translate_y; This message is therefore composed of these six matrix elements."""  
    