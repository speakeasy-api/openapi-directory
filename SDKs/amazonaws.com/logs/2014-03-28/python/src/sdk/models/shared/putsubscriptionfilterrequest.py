"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import distribution_enum as shared_distribution_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutSubscriptionFilterRequest:
    
    destination_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationArn') }})  
    filter_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filterName') }})  
    filter_pattern: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filterPattern') }})  
    log_group_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logGroupName') }})  
    distribution: Optional[shared_distribution_enum.DistributionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distribution'), 'exclude': lambda f: f is None }})  
    role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roleArn'), 'exclude': lambda f: f is None }})  
    