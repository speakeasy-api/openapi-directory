// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateDataSourceFromRDSXAmzTargetEnum
type CreateDataSourceFromRDSXAmzTargetEnum string

const (
	CreateDataSourceFromRDSXAmzTargetEnumAmazonMl20141212CreateDataSourceFromRds CreateDataSourceFromRDSXAmzTargetEnum = "AmazonML_20141212.CreateDataSourceFromRDS"
)

func (e *CreateDataSourceFromRDSXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonML_20141212.CreateDataSourceFromRDS":
		*e = CreateDataSourceFromRDSXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDataSourceFromRDSXAmzTargetEnum: %s", s)
	}
}

type CreateDataSourceFromRDSHeaders struct {
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateDataSourceFromRDSXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateDataSourceFromRDSRequest struct {
	Headers CreateDataSourceFromRDSHeaders
	Request shared.CreateDataSourceFromRDSInput `request:"mediaType=application/json"`
}

type CreateDataSourceFromRDSResponse struct {
	ContentType string
	// Success
	CreateDataSourceFromRDSOutput *shared.CreateDataSourceFromRDSOutput
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServerException
	InternalServerException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
