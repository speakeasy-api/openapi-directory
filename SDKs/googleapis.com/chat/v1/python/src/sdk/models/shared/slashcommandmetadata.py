"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import user as shared_user
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SlashCommandMetadataTypeEnum(str, Enum):
    r"""The type of slash command."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    ADD = 'ADD'
    INVOKE = 'INVOKE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SlashCommandMetadata:
    r"""Annotation metadata for slash commands (/)."""
    
    bot: Optional[shared_user.User] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bot'), 'exclude': lambda f: f is None }})
    r"""A user in Google Chat."""  
    command_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commandId'), 'exclude': lambda f: f is None }})
    r"""The command id of the invoked slash command."""  
    command_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commandName'), 'exclude': lambda f: f is None }})
    r"""The name of the invoked slash command."""  
    triggers_dialog: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggersDialog'), 'exclude': lambda f: f is None }})
    r"""Indicating whether the slash command is for a dialog."""  
    type: Optional[SlashCommandMetadataTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of slash command."""  
    