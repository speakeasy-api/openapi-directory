/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Accelerator } from "./accelerator";
import { AttachedDisk } from "./attacheddisk";
import { Disk } from "./disk";
import { Expose, Type } from "class-transformer";

/**
 * The provisioning model.
 */
export enum InstancePolicyProvisioningModelEnum {
  ProvisioningModelUnspecified = "PROVISIONING_MODEL_UNSPECIFIED",
  Standard = "STANDARD",
  Spot = "SPOT",
  Preemptible = "PREEMPTIBLE",
}

/**
 * InstancePolicy describes an instance type and resources attached to each VM created by this InstancePolicy.
 */
export class InstancePolicy extends SpeakeasyBase {
  /**
   * The accelerators attached to each VM instance.
   */
  @SpeakeasyMetadata({ elemType: Accelerator })
  @Expose({ name: "accelerators" })
  @Type(() => Accelerator)
  accelerators?: Accelerator[];

  /**
   * A new persistent disk or a local ssd. A VM can only have one local SSD setting but multiple local SSD partitions. See https://cloud.google.com/compute/docs/disks#pdspecs and https://cloud.google.com/compute/docs/disks#localssds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bootDisk" })
  @Type(() => Disk)
  bootDisk?: Disk;

  /**
   * Non-boot disks to be attached for each VM created by this InstancePolicy. New disks will be deleted when the VM is deleted.
   */
  @SpeakeasyMetadata({ elemType: AttachedDisk })
  @Expose({ name: "disks" })
  @Type(() => AttachedDisk)
  disks?: AttachedDisk[];

  /**
   * The Compute Engine machine type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "machineType" })
  machineType?: string;

  /**
   * The minimum CPU platform. See https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform. Not yet implemented.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minCpuPlatform" })
  minCpuPlatform?: string;

  /**
   * The provisioning model.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provisioningModel" })
  provisioningModel?: InstancePolicyProvisioningModelEnum;
}
