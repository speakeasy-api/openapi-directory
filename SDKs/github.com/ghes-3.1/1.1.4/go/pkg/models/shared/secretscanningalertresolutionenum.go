// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SecretScanningAlertResolutionEnum - **Required when the `state` is `resolved`.** The reason for resolving the alert.
type SecretScanningAlertResolutionEnum string

const (
	SecretScanningAlertResolutionEnumNull          SecretScanningAlertResolutionEnum = "null"
	SecretScanningAlertResolutionEnumFalsePositive SecretScanningAlertResolutionEnum = "false_positive"
	SecretScanningAlertResolutionEnumWontFix       SecretScanningAlertResolutionEnum = "wont_fix"
	SecretScanningAlertResolutionEnumRevoked       SecretScanningAlertResolutionEnum = "revoked"
	SecretScanningAlertResolutionEnumUsedInTests   SecretScanningAlertResolutionEnum = "used_in_tests"
)

func (e *SecretScanningAlertResolutionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "null":
		fallthrough
	case "false_positive":
		fallthrough
	case "wont_fix":
		fallthrough
	case "revoked":
		fallthrough
	case "used_in_tests":
		*e = SecretScanningAlertResolutionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SecretScanningAlertResolutionEnum: %s", s)
	}
}
