"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import oauth2error as shared_oauth2error
from ..shared import token as shared_token
from typing import Optional


@dataclasses.dataclass
class TokenRequestBody:
    
    client_id: str = dataclasses.field(metadata={'form': { 'field_name': 'client_id' }})
    r"""The registered client ID."""  
    client_secret: str = dataclasses.field(metadata={'form': { 'field_name': 'client_secret' }})
    r"""The registered client ID secret."""  
    code: str = dataclasses.field(metadata={'form': { 'field_name': 'code' }})
    r"""The authorization code previously obtained from the Authentication endpoint."""  
    grant_type: str = dataclasses.field(metadata={'form': { 'field_name': 'grant_type' }})
    r"""The authorization grant type, must be `authorization_code`."""  
    redirect_uri: str = dataclasses.field(metadata={'form': { 'field_name': 'redirect_uri' }})
    r"""The redirect URL that was used previously with the Authentication endpoint."""  
    

@dataclasses.dataclass
class TokenRequest:
    
    request_body: TokenRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    authorization: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Authorization', 'style': 'simple', 'explode': False }})
    r"""HTTP Basic authorization header."""  
    

@dataclasses.dataclass
class TokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    o_auth2_error: Optional[shared_oauth2error.OAuth2Error] = dataclasses.field(default=None)
    r"""OAuth 2.0 error response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    token: Optional[shared_token.Token] = dataclasses.field(default=None)
    r"""Token response"""  
    