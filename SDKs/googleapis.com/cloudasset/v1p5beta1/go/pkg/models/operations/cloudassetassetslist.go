// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CloudassetAssetsListSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type CloudassetAssetsListPathParams struct {
	// Required. Name of the organization or project the assets belong to. Format: "organizations/[organization-number]" (such as "organizations/123"), "projects/[project-id]" (such as "projects/my-project-id"), or "projects/[project-number]" (such as "projects/12345").
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
}

// CloudassetAssetsListContentTypeEnum - Asset content type. If not specified, no content but the asset name will be returned.
type CloudassetAssetsListContentTypeEnum string

const (
	CloudassetAssetsListContentTypeEnumContentTypeUnspecified CloudassetAssetsListContentTypeEnum = "CONTENT_TYPE_UNSPECIFIED"
	CloudassetAssetsListContentTypeEnumResource               CloudassetAssetsListContentTypeEnum = "RESOURCE"
	CloudassetAssetsListContentTypeEnumIamPolicy              CloudassetAssetsListContentTypeEnum = "IAM_POLICY"
	CloudassetAssetsListContentTypeEnumOrgPolicy              CloudassetAssetsListContentTypeEnum = "ORG_POLICY"
	CloudassetAssetsListContentTypeEnumAccessPolicy           CloudassetAssetsListContentTypeEnum = "ACCESS_POLICY"
)

func (e *CloudassetAssetsListContentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONTENT_TYPE_UNSPECIFIED":
		fallthrough
	case "RESOURCE":
		fallthrough
	case "IAM_POLICY":
		fallthrough
	case "ORG_POLICY":
		fallthrough
	case "ACCESS_POLICY":
		*e = CloudassetAssetsListContentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudassetAssetsListContentTypeEnum: %s", s)
	}
}

type CloudassetAssetsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// A list of asset types to take a snapshot for. For example: "compute.googleapis.com/Disk". Regular expression is also supported. For example: * "compute.googleapis.com.*" snapshots resources whose asset type starts with "compute.googleapis.com". * ".*Instance" snapshots resources whose asset type ends with "Instance". * ".*Instance.*" snapshots resources whose asset type contains "Instance". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular expression syntax. If the regular expression does not match any supported asset type, an INVALID_ARGUMENT error will be returned. If specified, only matching assets will be returned, otherwise, it will snapshot all asset types. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types.
	AssetTypes []string `queryParam:"style=form,explode=true,name=assetTypes"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Asset content type. If not specified, no content but the asset name will be returned.
	ContentType *CloudassetAssetsListContentTypeEnum `queryParam:"style=form,explode=true,name=contentType"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of assets to be returned in a single response. Default is 100, minimum is 1, and maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// The `next_page_token` returned from the previous `ListAssetsResponse`, or unspecified for the first `ListAssetsRequest`. It is a continuation of a prior `ListAssets` call, and the API should return the next page of assets.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Timestamp to take an asset snapshot. This can only be set to a timestamp between the current time and the current time minus 35 days (inclusive). If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.
	ReadTime *string `queryParam:"style=form,explode=true,name=readTime"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type CloudassetAssetsListRequest struct {
	PathParams  CloudassetAssetsListPathParams
	QueryParams CloudassetAssetsListQueryParams
	Security    CloudassetAssetsListSecurity
}

type CloudassetAssetsListResponse struct {
	ContentType string
	// Successful response
	ListAssetsResponse *shared.ListAssetsResponse
	StatusCode         int
	RawResponse        *http.Response
}
