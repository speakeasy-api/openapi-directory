// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OriginAccessControlSigningBehaviorsEnum string

const (
	OriginAccessControlSigningBehaviorsEnumNever      OriginAccessControlSigningBehaviorsEnum = "never"
	OriginAccessControlSigningBehaviorsEnumAlways     OriginAccessControlSigningBehaviorsEnum = "always"
	OriginAccessControlSigningBehaviorsEnumNoOverride OriginAccessControlSigningBehaviorsEnum = "no-override"
)

func (e OriginAccessControlSigningBehaviorsEnum) ToPointer() *OriginAccessControlSigningBehaviorsEnum {
	return &e
}

func (e *OriginAccessControlSigningBehaviorsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "never":
		fallthrough
	case "always":
		fallthrough
	case "no-override":
		*e = OriginAccessControlSigningBehaviorsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OriginAccessControlSigningBehaviorsEnum: %v", v)
	}
}
