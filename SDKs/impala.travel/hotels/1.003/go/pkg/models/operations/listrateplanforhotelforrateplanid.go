// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListRatePlanForHotelForRatePlanIDRequest struct {
	// Start date of the considered time window for the returned rate plan.
	End *string `queryParam:"style=form,explode=true,name=end"`
	// The uuid of hotel for which rate plans are being fetched.
	HotelID string `pathParam:"style=simple,explode=false,name=hotelId"`
	// Offset from the first rate plan in the result (for pagination).
	Offset *float64 `queryParam:"style=form,explode=true,name=offset"`
	// The id of requested rateplan
	RatePlanID int64 `pathParam:"style=simple,explode=false,name=ratePlanId"`
	// The uuid of room for which rate plans are being fetched.
	RoomTypeID *string `queryParam:"style=form,explode=true,name=roomTypeId"`
	// Number of rate plans returned on a given page (pagination).
	Size *float64 `queryParam:"style=form,explode=true,name=size"`
	// Start date of the considered time window for the returned rate plan.
	Start *string `queryParam:"style=form,explode=true,name=start"`
	// Returns rate plans changed after the supplied date.
	UpdatedAt map[string]interface{} `queryParam:"style=deepObject,explode=true,name=updatedAt"`
}

type ListRatePlanForHotelForRatePlanIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Not Found
	GenericError *shared.GenericError
	RatePlan     *shared.RatePlan
	// Your request wasn't formatted correctly and therefore couldn't be processed. This most frequently happens when query parameters or request body values are missing, incorrectly formatted or added where they don't exist (e.g. due to typos). We're including a list of `validations` to point out where things are going wrong and should be fixed.
	ValidationError *shared.ValidationError
}
