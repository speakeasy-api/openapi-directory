// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GetIosPostInstallAttributionResponseAttributionConfidenceEnum - The confidence of the returned attribution.
type GetIosPostInstallAttributionResponseAttributionConfidenceEnum string

const (
	GetIosPostInstallAttributionResponseAttributionConfidenceEnumUnknownAttributionConfidence GetIosPostInstallAttributionResponseAttributionConfidenceEnum = "UNKNOWN_ATTRIBUTION_CONFIDENCE"
	GetIosPostInstallAttributionResponseAttributionConfidenceEnumWeak                         GetIosPostInstallAttributionResponseAttributionConfidenceEnum = "WEAK"
	GetIosPostInstallAttributionResponseAttributionConfidenceEnumDefault                      GetIosPostInstallAttributionResponseAttributionConfidenceEnum = "DEFAULT"
	GetIosPostInstallAttributionResponseAttributionConfidenceEnumUnique                       GetIosPostInstallAttributionResponseAttributionConfidenceEnum = "UNIQUE"
)

func (e *GetIosPostInstallAttributionResponseAttributionConfidenceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN_ATTRIBUTION_CONFIDENCE":
		fallthrough
	case "WEAK":
		fallthrough
	case "DEFAULT":
		fallthrough
	case "UNIQUE":
		*e = GetIosPostInstallAttributionResponseAttributionConfidenceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetIosPostInstallAttributionResponseAttributionConfidenceEnum: %s", s)
	}
}

// GetIosPostInstallAttributionResponseRequestIPVersionEnum - Which IP version the request was made from.
type GetIosPostInstallAttributionResponseRequestIPVersionEnum string

const (
	GetIosPostInstallAttributionResponseRequestIPVersionEnumUnknownIPVersion GetIosPostInstallAttributionResponseRequestIPVersionEnum = "UNKNOWN_IP_VERSION"
	GetIosPostInstallAttributionResponseRequestIPVersionEnumIPV4             GetIosPostInstallAttributionResponseRequestIPVersionEnum = "IP_V4"
	GetIosPostInstallAttributionResponseRequestIPVersionEnumIPV6             GetIosPostInstallAttributionResponseRequestIPVersionEnum = "IP_V6"
)

func (e *GetIosPostInstallAttributionResponseRequestIPVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN_IP_VERSION":
		fallthrough
	case "IP_V4":
		fallthrough
	case "IP_V6":
		*e = GetIosPostInstallAttributionResponseRequestIPVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetIosPostInstallAttributionResponseRequestIPVersionEnum: %s", s)
	}
}

// GetIosPostInstallAttributionResponse - Response for iSDK to execute strong match flow for post-install attribution.
type GetIosPostInstallAttributionResponse struct {
	// The minimum version for app, specified by dev through ?imv= parameter. Return to iSDK to allow app to evaluate if current version meets this.
	AppMinimumVersion *string `json:"appMinimumVersion,omitempty"`
	// The confidence of the returned attribution.
	AttributionConfidence *GetIosPostInstallAttributionResponseAttributionConfidenceEnum `json:"attributionConfidence,omitempty"`
	// The deep-link attributed post-install via one of several techniques (fingerprint, copy unique).
	DeepLink *string `json:"deepLink,omitempty"`
	// User-agent specific custom-scheme URIs for iSDK to open. This will be set according to the user-agent tha the click was originally made in. There is no Safari-equivalent custom-scheme open URLs. ie: googlechrome://www.example.com ie: firefox://open-url?url=http://www.example.com ie: opera-http://example.com
	ExternalBrowserDestinationLink *string `json:"externalBrowserDestinationLink,omitempty"`
	// The link to navigate to update the app if min version is not met. This is either (in order): 1) fallback link (from ?ifl= parameter, if specified by developer) or 2) AppStore URL (from ?isi= parameter, if specified), or 3) the payload link (from required link= parameter).
	FallbackLink *string `json:"fallbackLink,omitempty"`
	// Invitation ID attributed post-install via one of several techniques (fingerprint, copy unique).
	InvitationID *string `json:"invitationId,omitempty"`
	// Instruction for iSDK to attemmpt to perform strong match. For instance, if browser does not support/allow cookie or outside of support browsers, this will be false.
	IsStrongMatchExecutable *bool `json:"isStrongMatchExecutable,omitempty"`
	// Describes why match failed, ie: "discarded due to low confidence". This message will be publicly visible.
	MatchMessage *string `json:"matchMessage,omitempty"`
	// Which IP version the request was made from.
	RequestIPVersion *GetIosPostInstallAttributionResponseRequestIPVersionEnum `json:"requestIpVersion,omitempty"`
	// Entire FDL (short or long) attributed post-install via one of several techniques (fingerprint, copy unique).
	RequestedLink *string `json:"requestedLink,omitempty"`
	// The entire FDL, expanded from a short link. It is the same as the requested_link, if it is long. Parameters from this should not be used directly (ie: server can default utm_[campaign|medium|source] to a value when requested_link lack them, server determine the best fallback_link when requested_link specifies >1 fallback links).
	ResolvedLink *string `json:"resolvedLink,omitempty"`
	// Scion campaign value to be propagated by iSDK to Scion at post-install.
	UtmCampaign *string `json:"utmCampaign,omitempty"`
	// Scion content value to be propagated by iSDK to Scion at app-reopen.
	UtmContent *string `json:"utmContent,omitempty"`
	// Scion medium value to be propagated by iSDK to Scion at post-install.
	UtmMedium *string `json:"utmMedium,omitempty"`
	// Scion source value to be propagated by iSDK to Scion at post-install.
	UtmSource *string `json:"utmSource,omitempty"`
	// Scion term value to be propagated by iSDK to Scion at app-reopen.
	UtmTerm *string `json:"utmTerm,omitempty"`
}
