// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CheckAvailabilityOfFundsSecurity struct {
	BearerAuthOAuth *shared.SchemeBearerAuthOAuth `security:"scheme,type=http,subtype=bearer"`
}

type CheckAvailabilityOfFundsHeaders struct {
	// This field  might be used in case where a consent was agreed between ASPSP and PSU through an OAuth2 based protocol,
	// facilitated by the TPP.
	//
	Authorization *string `header:"style=simple,explode=false,name=Authorization"`
	// Is contained if and only if the "Signature" element is contained in the header of the request.
	Digest *string `header:"style=simple,explode=false,name=Digest"`
	// A signature of the request by the TPP on application level. This might be mandated by ASPSP.
	//
	Signature *string `header:"style=simple,explode=false,name=Signature"`
	// The certificate used for signing the request, in base64 encoding.
	// Must be contained if a signature is contained.
	//
	TPPSignatureCertificate *string `header:"style=simple,explode=false,name=TPP-Signature-Certificate"`
	// ID of the request, unique to the call, as determined by the initiating party.
	XRequestID string `header:"style=simple,explode=false,name=X-Request-ID"`
}

type CheckAvailabilityOfFundsRequest struct {
	Headers CheckAvailabilityOfFundsHeaders
	// Request body for a confirmation of funds request.
	//
	Request  shared.ConfirmationOfFunds `request:"mediaType=application/json"`
	Security CheckAvailabilityOfFundsSecurity
}

// CheckAvailabilityOfFunds200ApplicationJSON - Equals "true" if sufficient funds are available at the time of the request,
// "false" otherwise.
type CheckAvailabilityOfFunds200ApplicationJSON struct {
	// Equals true if sufficient funds are available at the time of the request, false otherwise.
	//
	// This datalemenet is allways contained in a confirmation of funds response.
	//
	// This data element is contained in a payment status response,
	// if supported by the ASPSP, if a funds check has been performed and
	// if the transactionStatus is "ACTC", "ACWC" or "ACCP".
	//
	FundsAvailable bool `json:"fundsAvailable"`
}

type CheckAvailabilityOfFundsResponse struct {
	ContentType string
	// Bad Request
	Error400AIS *shared.Error400AIS
	// Bad Request
	Error400NGAIS *shared.Error400NGAIS
	// Unauthorized
	Error401NGPIIS *shared.Error401NGPIIS
	// Unauthorized
	Error401PIIS *shared.Error401PIIS
	// Forbidden
	Error403NGPIIS *shared.Error403NGPIIS
	// Forbidden
	Error403PIIS *shared.Error403PIIS
	// Not found
	Error404NGPIIS *shared.Error404NGPIIS
	// Not found
	Error404PIIS *shared.Error404PIIS
	// Method Not Allowed
	Error405NGPIIS *shared.Error405NGPIIS
	// Method Not Allowed
	Error405PIIS *shared.Error405PIIS
	// Conflict
	Error409NGPIIS *shared.Error409NGPIIS
	// Conflict
	Error409PIIS *shared.Error409PIIS
	Headers      map[string][]string
	StatusCode   int
	RawResponse  *http.Response
	// OK
	CheckAvailabilityOfFunds200ApplicationJSONObject *CheckAvailabilityOfFunds200ApplicationJSON
}
