"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class ProtocolSnmpv3UserAddRequest:
    
    agent_num: int = dataclasses.field(metadata={'path_param': { 'field_name': 'agentNum', 'style': 'simple', 'explode': False }})
    r"""Agent to add the SNMPv3 user"""  
    auth_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'authKey', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 user authentication key"""  
    auth_protocol: str = dataclasses.field(metadata={'path_param': { 'field_name': 'authProtocol', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 user authentication protocol"""  
    priv_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'privKey', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 user privacy encryption key"""  
    priv_protocol: str = dataclasses.field(metadata={'path_param': { 'field_name': 'privProtocol', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 user privacy encryption protocol"""  
    security_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'securityName', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 user security name"""  
    user_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'userName', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 user name"""  
    

@dataclasses.dataclass
class ProtocolSnmpv3UserAddResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    protocol_snmpv3_user_add_200_application_json_string: Optional[str] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    