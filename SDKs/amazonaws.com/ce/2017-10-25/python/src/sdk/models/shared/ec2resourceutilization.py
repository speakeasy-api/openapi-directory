"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import diskresourceutilization as shared_diskresourceutilization
from ..shared import ebsresourceutilization as shared_ebsresourceutilization
from ..shared import networkresourceutilization as shared_networkresourceutilization
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Ec2ResourceUtilization:
    r"""Utilization metrics for the instance."""
    
    disk_resource_utilization: Optional[shared_diskresourceutilization.DiskResourceUtilization] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DiskResourceUtilization'), 'exclude': lambda f: f is None }})  
    ebs_resource_utilization: Optional[shared_ebsresourceutilization.EBSResourceUtilization] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EBSResourceUtilization'), 'exclude': lambda f: f is None }})  
    max_cpu_utilization_percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxCpuUtilizationPercentage'), 'exclude': lambda f: f is None }})  
    max_memory_utilization_percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxMemoryUtilizationPercentage'), 'exclude': lambda f: f is None }})  
    max_storage_utilization_percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxStorageUtilizationPercentage'), 'exclude': lambda f: f is None }})  
    network_resource_utilization: Optional[shared_networkresourceutilization.NetworkResourceUtilization] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NetworkResourceUtilization'), 'exclude': lambda f: f is None }})  
    