/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateGroupIfNotExistsForUsingGETResponse {
    
    public String contentType;

    public CreateGroupIfNotExistsForUsingGETResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateGroupIfNotExistsForUsingGETResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateGroupIfNotExistsForUsingGETResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ok (code 0)
     */
    
    public CreateGroupIfNotExistsForUsingGET200ApplicationJSON createGroupIfNotExistsForUsingGET200ApplicationJSONObject;

    public CreateGroupIfNotExistsForUsingGETResponse withCreateGroupIfNotExistsForUsingGET200ApplicationJSONObject(CreateGroupIfNotExistsForUsingGET200ApplicationJSON createGroupIfNotExistsForUsingGET200ApplicationJSONObject) {
        this.createGroupIfNotExistsForUsingGET200ApplicationJSONObject = createGroupIfNotExistsForUsingGET200ApplicationJSONObject;
        return this;
    }
    
    /**
     * generic api error (code 1)
     */
    
    public CreateGroupIfNotExistsForUsingGET400ApplicationJSON createGroupIfNotExistsForUsingGET400ApplicationJSONObject;

    public CreateGroupIfNotExistsForUsingGETResponse withCreateGroupIfNotExistsForUsingGET400ApplicationJSONObject(CreateGroupIfNotExistsForUsingGET400ApplicationJSON createGroupIfNotExistsForUsingGET400ApplicationJSONObject) {
        this.createGroupIfNotExistsForUsingGET400ApplicationJSONObject = createGroupIfNotExistsForUsingGET400ApplicationJSONObject;
        return this;
    }
    
    /**
     * no or wrong API key (code 4)
     */
    
    public CreateGroupIfNotExistsForUsingGET401ApplicationJSON createGroupIfNotExistsForUsingGET401ApplicationJSONObject;

    public CreateGroupIfNotExistsForUsingGETResponse withCreateGroupIfNotExistsForUsingGET401ApplicationJSONObject(CreateGroupIfNotExistsForUsingGET401ApplicationJSON createGroupIfNotExistsForUsingGET401ApplicationJSONObject) {
        this.createGroupIfNotExistsForUsingGET401ApplicationJSONObject = createGroupIfNotExistsForUsingGET401ApplicationJSONObject;
        return this;
    }
    
    /**
     * internal api error (code 2)
     */
    
    public CreateGroupIfNotExistsForUsingGET500ApplicationJSON createGroupIfNotExistsForUsingGET500ApplicationJSONObject;

    public CreateGroupIfNotExistsForUsingGETResponse withCreateGroupIfNotExistsForUsingGET500ApplicationJSONObject(CreateGroupIfNotExistsForUsingGET500ApplicationJSON createGroupIfNotExistsForUsingGET500ApplicationJSONObject) {
        this.createGroupIfNotExistsForUsingGET500ApplicationJSONObject = createGroupIfNotExistsForUsingGET500ApplicationJSONObject;
        return this;
    }
    
    public CreateGroupIfNotExistsForUsingGETResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
