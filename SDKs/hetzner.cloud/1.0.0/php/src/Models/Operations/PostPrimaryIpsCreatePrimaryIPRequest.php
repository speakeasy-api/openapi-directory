<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * PostPrimaryIpsCreatePrimaryIPRequest - The `type` argument is required while `datacenter` and `assignee_id` are mutually exclusive.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class PostPrimaryIpsCreatePrimaryIPRequest
{
    /**
     * ID of the resource the Primary IP should be assigned to. Omitted if it should not be assigned.
     * 
     * @var ?int $assigneeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignee_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $assigneeId = null;
    
    /**
     * Resource type the Primary IP can be assigned to
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PostPrimaryIpsCreatePrimaryIPRequestAssigneeTypeEnum $assigneeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignee_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PostPrimaryIpsCreatePrimaryIPRequestAssigneeTypeEnum>')]
    public PostPrimaryIpsCreatePrimaryIPRequestAssigneeTypeEnum $assigneeType;
    
    /**
     * Delete the Primary IP when the Server it is assigned to is deleted. If omitted defaults to `false`.
     * 
     * @var ?bool $autoDelete
     */
	#[\JMS\Serializer\Annotation\SerializedName('auto_delete')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoDelete = null;
    
    /**
     * ID or name of Datacenter the Primary IP will be bound to. Needs to be omitted if `assignee_id` is passed.
     * 
     * @var ?string $datacenter
     */
	#[\JMS\Serializer\Annotation\SerializedName('datacenter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $datacenter = null;
    
    /**
     * User-defined labels (key-value pairs)
     * 
     * @var ?array<string, mixed> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Primary IP type
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PostPrimaryIpsCreatePrimaryIPRequestTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PostPrimaryIpsCreatePrimaryIPRequestTypeEnum>')]
    public PostPrimaryIpsCreatePrimaryIPRequestTypeEnum $type;
    
	public function __construct()
	{
		$this->assigneeId = null;
		$this->assigneeType = \OpenAPI\OpenAPI\Models\Operations\PostPrimaryIpsCreatePrimaryIPRequestAssigneeTypeEnum::SERVER;
		$this->autoDelete = null;
		$this->datacenter = null;
		$this->labels = null;
		$this->name = "";
		$this->type = \OpenAPI\OpenAPI\Models\Operations\PostPrimaryIpsCreatePrimaryIPRequestTypeEnum::IPV4;
	}
}
