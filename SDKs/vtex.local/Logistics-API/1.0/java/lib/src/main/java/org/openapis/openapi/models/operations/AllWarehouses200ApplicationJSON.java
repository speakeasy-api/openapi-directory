/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

public class AllWarehouses200ApplicationJSON {
    /**
     * Code that identifies a warehouse.
     */
    @JsonProperty("id")
    public String id;

    public AllWarehouses200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Shows if the warehouse is active (`true`) or inactive (`false`).
     */
    @JsonProperty("isActive")
    public Boolean isActive;

    public AllWarehouses200ApplicationJSON withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    /**
     * Name of the warehouse.
     */
    @JsonProperty("name")
    public String name;

    public AllWarehouses200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * This field returns a list of the [pickup points' IDs](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) associated with the given warehouse.
     */
    @JsonProperty("pickupPointIds")
    public Object[] pickupPointIds;

    public AllWarehouses200ApplicationJSON withPickupPointIds(Object[] pickupPointIds) {
        this.pickupPointIds = pickupPointIds;
        return this;
    }
    
    /**
     * If the warehouse was configured as a priority. When no priority was set, the value returns`0`.
     */
    @JsonProperty("priority")
    public Long priority;

    public AllWarehouses200ApplicationJSON withPriority(Long priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * Information related to the docks available for the warehouses.
     */
    @JsonProperty("warehouseDocks")
    public AllWarehouses200ApplicationJSONWarehouseDock1[] warehouseDocks;

    public AllWarehouses200ApplicationJSON withWarehouseDocks(AllWarehouses200ApplicationJSONWarehouseDock1[] warehouseDocks) {
        this.warehouseDocks = warehouseDocks;
        return this;
    }
    
    public AllWarehouses200ApplicationJSON(@JsonProperty("id") String id, @JsonProperty("isActive") Boolean isActive, @JsonProperty("name") String name, @JsonProperty("pickupPointIds") Object[] pickupPointIds, @JsonProperty("priority") Long priority, @JsonProperty("warehouseDocks") AllWarehouses200ApplicationJSONWarehouseDock1[] warehouseDocks) {
        this.id = id;
        this.isActive = isActive;
        this.name = name;
        this.pickupPointIds = pickupPointIds;
        this.priority = priority;
        this.warehouseDocks = warehouseDocks;
  }
}
