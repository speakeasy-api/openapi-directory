// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConferenceEnumReasonConferenceEndedEnum string

const (
	ConferenceEnumReasonConferenceEndedEnumConferenceEndedViaAPI                    ConferenceEnumReasonConferenceEndedEnum = "conference-ended-via-api"
	ConferenceEnumReasonConferenceEndedEnumParticipantWithEndConferenceOnExitLeft   ConferenceEnumReasonConferenceEndedEnum = "participant-with-end-conference-on-exit-left"
	ConferenceEnumReasonConferenceEndedEnumParticipantWithEndConferenceOnExitKicked ConferenceEnumReasonConferenceEndedEnum = "participant-with-end-conference-on-exit-kicked"
	ConferenceEnumReasonConferenceEndedEnumLastParticipantKicked                    ConferenceEnumReasonConferenceEndedEnum = "last-participant-kicked"
	ConferenceEnumReasonConferenceEndedEnumLastParticipantLeft                      ConferenceEnumReasonConferenceEndedEnum = "last-participant-left"
)

func (e *ConferenceEnumReasonConferenceEndedEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "conference-ended-via-api":
		fallthrough
	case "participant-with-end-conference-on-exit-left":
		fallthrough
	case "participant-with-end-conference-on-exit-kicked":
		fallthrough
	case "last-participant-kicked":
		fallthrough
	case "last-participant-left":
		*e = ConferenceEnumReasonConferenceEndedEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConferenceEnumReasonConferenceEndedEnum: %s", s)
	}
}
