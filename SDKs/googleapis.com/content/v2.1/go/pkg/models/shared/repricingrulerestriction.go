// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// RepricingRuleRestriction - Definition of a rule restriction. At least one of the following needs to be true: (1) use_auto_pricing_min_price is true (2) floor.price_delta exists (3) floor.percentage_delta exists If floor.price_delta and floor.percentage_delta are both set on a rule, the highest value will be chosen by the Repricer. In other words, for a product with a price of $50, if the `floor.percentage_delta` is "-10" and the floor.price_delta is "-12", the offer price will only be lowered $5 (10% lower than the original offer price).
type RepricingRuleRestriction struct {
	// Definition of a boundary.
	Floor *RepricingRuleRestrictionBoundary `json:"floor,omitempty"`
	// If true, use the AUTO_PRICING_MIN_PRICE offer attribute as the lower bound of the rule. If use_auto_pricing_min_price is true, then only offers with `AUTO_PRICING_MIN_PRICE` existing on the offer will get Repricer treatment, even if a floor value is set on the rule. Also, if use_auto_pricing_min_price is true, the floor restriction will be ignored.
	UseAutoPricingMinPrice *bool `json:"useAutoPricingMinPrice,omitempty"`
}
