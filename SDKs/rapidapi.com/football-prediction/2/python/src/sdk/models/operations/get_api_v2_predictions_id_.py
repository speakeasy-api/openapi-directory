"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class GetAPIV2PredictionsIDRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""ID of match"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAPIV2PredictionsID404ApplicationJSON:
    r"""Bad request, check response for detailed errors."""
    
    errors: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAPIV2PredictionsID200ApplicationJSON:
    r"""Good request, returns object that contains all the predictions for a certain event."""
    
    data: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetAPIV2PredictionsIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_api_v2_predictions_id_200_application_json_object: Optional[GetAPIV2PredictionsID200ApplicationJSON] = dataclasses.field(default=None)
    r"""Good request, returns object that contains all the predictions for a certain event."""  
    get_api_v2_predictions_id_404_application_json_object: Optional[GetAPIV2PredictionsID404ApplicationJSON] = dataclasses.field(default=None)
    r"""Bad request, check response for detailed errors."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    