/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AppConfig - The list of available pages
 */
public class AppConfig {
    /**
     * The map of classification ratings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classification")
    public java.util.Map<String, Classification> classification;

    public AppConfig withClassification(java.util.Map<String, Classification> classification) {
        this.classification = classification;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display")
    public AppConfigDisplay display;

    public AppConfig withDisplay(AppConfigDisplay display) {
        this.display = display;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("general")
    public AppConfigGeneral general;

    public AppConfig withGeneral(AppConfigGeneral general) {
        this.general = general;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("i18n")
    public AppConfigI18n i18n;

    public AppConfig withI18n(AppConfigI18n i18n) {
        this.i18n = i18n;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linear")
    public AppConfigLinear linear;

    public AppConfig withLinear(AppConfigLinear linear) {
        this.linear = linear;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("navigation")
    public Navigation navigation;

    public AppConfig withNavigation(Navigation navigation) {
        this.navigation = navigation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("playback")
    public AppConfigPlayback playback;

    public AppConfig withPlayback(AppConfigPlayback playback) {
        this.playback = playback;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sitemap")
    public PageSummary[] sitemap;

    public AppConfig withSitemap(PageSummary[] sitemap) {
        this.sitemap = sitemap;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscription")
    public AppConfigSubscription subscription;

    public AppConfig withSubscription(AppConfigSubscription subscription) {
        this.subscription = subscription;
        return this;
    }
    
    public AppConfig(){}
}
