/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * User - A user in Google Chat.
 */
public class User {
    /**
     * Output only. The user's display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public User withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Unique identifier of the user's Google Workspace domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domainId")
    public String domainId;

    public User withDomainId(String domainId) {
        this.domainId = domainId;
        return this;
    }
    
    /**
     * Output only. When `true`, the user is deleted or their profile is not visible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isAnonymous")
    public Boolean isAnonymous;

    public User withIsAnonymous(Boolean isAnonymous) {
        this.isAnonymous = isAnonymous;
        return this;
    }
    
    /**
     * Resource name for a Google Chat user. Format: `users/{user}`. `users/app` can be used as an alias for the calling app bot user. For human users, `{user}` is the same user identifier as: - the `{person_id`} for the [Person](https://developers.google.com/people/api/rest/v1/people) in the People API, where the Person `resource_name` is `people/{person_id}`. For example, `users/123456789` in Chat API represents the same person as `people/123456789` in People API. - the `id` for a [user](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users) in the Admin SDK Directory API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public User withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * User type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public UserTypeEnum type;

    public User withType(UserTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public User(){}
}
