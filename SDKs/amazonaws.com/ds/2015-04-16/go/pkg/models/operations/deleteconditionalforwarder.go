// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteConditionalForwarderXAmzTargetEnum
type DeleteConditionalForwarderXAmzTargetEnum string

const (
	DeleteConditionalForwarderXAmzTargetEnumDirectoryService20150416DeleteConditionalForwarder DeleteConditionalForwarderXAmzTargetEnum = "DirectoryService_20150416.DeleteConditionalForwarder"
)

func (e *DeleteConditionalForwarderXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DirectoryService_20150416.DeleteConditionalForwarder":
		*e = DeleteConditionalForwarderXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteConditionalForwarderXAmzTargetEnum: %s", s)
	}
}

type DeleteConditionalForwarderHeaders struct {
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteConditionalForwarderXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteConditionalForwarderRequest struct {
	Headers DeleteConditionalForwarderHeaders
	Request shared.DeleteConditionalForwarderRequest `request:"mediaType=application/json"`
}

type DeleteConditionalForwarderResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// Success
	DeleteConditionalForwarderResult map[string]interface{}
	// DirectoryUnavailableException
	DirectoryUnavailableException interface{}
	// EntityDoesNotExistException
	EntityDoesNotExistException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceException
	ServiceException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
