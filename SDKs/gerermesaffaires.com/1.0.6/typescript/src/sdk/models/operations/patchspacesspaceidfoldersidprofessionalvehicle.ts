/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum PatchSpacesSpaceIdFoldersIdProfessionalVehicleRequestBodyLevelEnum {
  Confidential = "confidential",
  Regular = "regular",
  Public = "public",
}

/**
 * Professional vehicle to modify (except name, class and archivaldate)
 */
export class PatchSpacesSpaceIdFoldersIdProfessionalVehicleRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "About" })
  about?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Brand" })
  brand?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CompanyTax" })
  companyTax?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "DateIn" })
  dateIn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DateOut" })
  dateOut?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Designation" })
  designation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Home" })
  home?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Keywords" })
  keywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Level" })
  level?: PatchSpacesSpaceIdFoldersIdProfessionalVehicleRequestBodyLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Model" })
  model?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RegistrationDate" })
  registrationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RegistrationNumber" })
  registrationNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value?: number;
}

export class PatchSpacesSpaceIdFoldersIdProfessionalVehicleRequest extends SpeakeasyBase {
  /**
   * Professional vehicle to modify (except name, class and archivaldate)
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PatchSpacesSpaceIdFoldersIdProfessionalVehicleRequestBody;

  /**
   * Id of the folder
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

export class PatchSpacesSpaceIdFoldersIdProfessionalVehicleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
