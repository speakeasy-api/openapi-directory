<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MerchandisedProduct - The type that defines the fields for product information, including price, condition, ratings, etc.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MerchandisedProduct
{
    /**
     * The average rating for the product based on eBay user ratings.
     * 
     * @var ?string $averageRating
     */
	
    public ?string $averageRating = null;
    
    /**
     * The eBay product identifier of a product from the eBay product catalog. You can use this value in the Browse API <b>search</b> method to retrieve items for this product.
     * 
     * @var ?string $epid
     */
	
    public ?string $epid = null;
    
    /**
     * Type the defines the details of an image, such as size and URL. Currently only <b> imageUrl</b> is getting populated. The <b> height</b> and <b> width</b> were added for future use.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Image $image
     */
	
    public ?Image $image = null;
    
    /**
     * An array of containers for the product market price details, such as condition and market price.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MarketPriceDetail> $marketPriceDetails
     */
	
    public ?array $marketPriceDetails = null;
    
    /**
     * An array of containers for ratings of the product aspects, such as "Is it a good value".
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RatingAspect> $ratingAspects
     */
	
    public ?array $ratingAspects = null;
    
    /**
     * The total number of eBay users that rated the product.
     * 
     * @var ?int $ratingCount
     */
	
    public ?int $ratingCount = null;
    
    /**
     * The total number of eBay users that wrote a review for the product. 
     * 
     * @var ?int $reviewCount
     */
	
    public ?int $reviewCount = null;
    
    /**
     * The title of the product.
     * 
     * @var ?string $title
     */
	
    public ?string $title = null;
    
	public function __construct()
	{
		$this->averageRating = null;
		$this->epid = null;
		$this->image = null;
		$this->marketPriceDetails = null;
		$this->ratingAspects = null;
		$this->ratingCount = null;
		$this->reviewCount = null;
		$this->title = null;
	}
}
