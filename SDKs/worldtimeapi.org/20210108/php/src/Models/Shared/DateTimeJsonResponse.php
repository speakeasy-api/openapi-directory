<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DateTimeJsonResponse - the current time for the timezone requested in JSON format
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DateTimeJsonResponse
{
    /**
     * the abbreviated name of the timezone
     * 
     * @var string $abbreviation
     */
	#[\JMS\Serializer\Annotation\SerializedName('abbreviation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $abbreviation;
    
    /**
     * the IP of the client making the request
     * 
     * @var string $clientIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_ip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $clientIp;
    
    /**
     * an ISO8601-valid string representing the current, local date/time
     * 
     * @var string $datetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('datetime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $datetime;
    
    /**
     * current day number of the week, where sunday is 0
     * 
     * @var int $dayOfWeek
     */
	#[\JMS\Serializer\Annotation\SerializedName('day_of_week')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $dayOfWeek;
    
    /**
     * ordinal date of the current year
     * 
     * @var int $dayOfYear
     */
	#[\JMS\Serializer\Annotation\SerializedName('day_of_year')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $dayOfYear;
    
    /**
     * flag indicating whether the local time is in daylight savings
     * 
     * @var bool $dst
     */
	#[\JMS\Serializer\Annotation\SerializedName('dst')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $dst;
    
    /**
     * an ISO8601-valid string representing the datetime when daylight savings started for this timezone
     * 
     * @var ?string $dstFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('dst_from')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dstFrom = null;
    
    /**
     * the difference in seconds between the current local time and daylight saving time for the location
     * 
     * @var int $dstOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('dst_offset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $dstOffset;
    
    /**
     * an ISO8601-valid string representing the datetime when daylight savings will end for this timezone
     * 
     * @var ?string $dstUntil
     */
	#[\JMS\Serializer\Annotation\SerializedName('dst_until')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dstUntil = null;
    
    /**
     * the difference in seconds between the current local time and the time in UTC, excluding any daylight saving difference (see dst_offset)
     * 
     * @var ?int $rawOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('raw_offset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $rawOffset = null;
    
    /**
     * timezone in `Area/Location` or `Area/Location/Region` format
     * 
     * @var string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $timezone;
    
    /**
     * number of seconds since the Epoch
     * 
     * @var int $unixtime
     */
	#[\JMS\Serializer\Annotation\SerializedName('unixtime')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $unixtime;
    
    /**
     * an ISO8601-valid string representing the current date/time in UTC
     * 
     * @var string $utcDatetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('utc_datetime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $utcDatetime;
    
    /**
     * an ISO8601-valid string representing the offset from UTC
     * 
     * @var string $utcOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('utc_offset')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $utcOffset;
    
    /**
     * the current week number
     * 
     * @var int $weekNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('week_number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $weekNumber;
    
	public function __construct()
	{
		$this->abbreviation = "";
		$this->clientIp = "";
		$this->datetime = "";
		$this->dayOfWeek = 0;
		$this->dayOfYear = 0;
		$this->dst = false;
		$this->dstFrom = null;
		$this->dstOffset = 0;
		$this->dstUntil = null;
		$this->rawOffset = null;
		$this->timezone = "";
		$this->unixtime = 0;
		$this->utcDatetime = "";
		$this->utcOffset = "";
		$this->weekNumber = 0;
	}
}
