/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The path component.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsLoadBalancers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes additional settings for a stateful rule.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  keyword?: string;

  @SpeakeasyMetadata()
  settings?: string[];
}

/**
 * Describes the rule options for a stateful rule group.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupRuleOptionsPairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions,
  })
  ruleOptions?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions[];
}

/**
 * Describes the type of a stateful rule group.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupTypePairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata()
  ruleGroupType?: string;
}

/**
 * Describes additional settings for a stateful rule.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  keyword?: string;

  @SpeakeasyMetadata()
  settings?: string[];
}

/**
 * The VPC endpoint service.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsVpcEndpointService extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an additional detail for a path analysis. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/additional-detail-codes.html">Reachability Analyzer additional detail codes</a>.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  additionalDetailType?: string;

  @SpeakeasyMetadata()
  component?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsComponent;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsLoadBalancers,
  })
  loadBalancers?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsLoadBalancers[];

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupRuleOptionsPairs,
  })
  ruleGroupRuleOptionsPairs?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupRuleOptionsPairs[];

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupTypePairs,
  })
  ruleGroupTypePairs?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupTypePairs[];

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleOptions,
  })
  ruleOptions?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleOptions[];

  @SpeakeasyMetadata()
  serviceName?: string;

  @SpeakeasyMetadata()
  vpcEndpointService?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsVpcEndpointService;
}

/**
 * The resource to which the path component is attached.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The component.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network ACL.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsAcl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The resource to which the component is attached.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The listener for a Classic Load Balancer.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsClassicLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instancePort?: number;

  @SpeakeasyMetadata()
  loadBalancerPort?: number;
}

/**
 * The component.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The customer gateway.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsCustomerGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * The route table.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsIngressRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The internet gateway.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsInternetGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Information about the instance.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The target.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTarget extends SpeakeasyBase {
  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  instance?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetInstance;

  @SpeakeasyMetadata()
  port?: number;
}

/**
 * The target group.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The NAT gateway.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsNatGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network interface.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsNetworkInterface extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The prefix list.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsPrefixList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table route.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The security group.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The port range.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * Describes a path component.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The source VPC.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table for the subnet.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSubnetRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway attachment.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayAttachment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table route.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC endpoint.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpcEndpoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC peering connection.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpcPeeringConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN connection.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpnConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN gateway.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpnGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an explanation code for an unreachable path. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  acl?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsAcl;

  @SpeakeasyMetadata()
  aclRule?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsAclRule;

  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  addresses?: string[];

  @SpeakeasyMetadata()
  attachedTo?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsAttachedTo;

  @SpeakeasyMetadata()
  availabilityZones?: string[];

  @SpeakeasyMetadata()
  cidrs?: string[];

  @SpeakeasyMetadata()
  classicLoadBalancerListener?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsClassicLoadBalancerListener;

  @SpeakeasyMetadata()
  component?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsComponent;

  @SpeakeasyMetadata()
  componentAccount?: string;

  @SpeakeasyMetadata()
  componentRegion?: string;

  @SpeakeasyMetadata()
  customerGateway?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsCustomerGateway;

  @SpeakeasyMetadata()
  destination?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsDestination;

  @SpeakeasyMetadata()
  destinationVpc?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsDestinationVpc;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsElasticLoadBalancerListener;

  @SpeakeasyMetadata()
  explanationCode?: string;

  @SpeakeasyMetadata()
  firewallStatefulRule?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRule;

  @SpeakeasyMetadata()
  ingressRouteTable?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsIngressRouteTable;

  @SpeakeasyMetadata()
  internetGateway?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsInternetGateway;

  @SpeakeasyMetadata()
  loadBalancerArn?: string;

  @SpeakeasyMetadata()
  loadBalancerListenerPort?: number;

  @SpeakeasyMetadata()
  loadBalancerTarget?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTarget;

  @SpeakeasyMetadata()
  loadBalancerTargetGroup?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetGroup;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetGroups,
  })
  loadBalancerTargetGroups?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetGroups[];

  @SpeakeasyMetadata()
  loadBalancerTargetPort?: number;

  @SpeakeasyMetadata()
  missingComponent?: string;

  @SpeakeasyMetadata()
  natGateway?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsNatGateway;

  @SpeakeasyMetadata()
  networkInterface?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsNetworkInterface;

  @SpeakeasyMetadata()
  packetField?: string;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsPortRanges,
  })
  portRanges?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsPortRanges[];

  @SpeakeasyMetadata()
  prefixList?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsPrefixList;

  @SpeakeasyMetadata()
  protocols?: string[];

  @SpeakeasyMetadata()
  routeTable?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsRouteTable;

  @SpeakeasyMetadata()
  routeTableRoute?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroup?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroup;

  @SpeakeasyMetadata()
  securityGroupRule?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroupRule;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroups,
  })
  securityGroups?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroups[];

  @SpeakeasyMetadata()
  sourceVpc?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSourceVpc;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  subnet?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSubnet;

  @SpeakeasyMetadata()
  subnetRouteTable?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSubnetRouteTable;

  @SpeakeasyMetadata()
  transitGateway?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayAttachment?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayAttachment;

  @SpeakeasyMetadata()
  transitGatewayRouteTable?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayRouteTable;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpc;

  @SpeakeasyMetadata()
  vpcEndpoint?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpcEndpoint;

  @SpeakeasyMetadata()
  vpcPeeringConnection?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpcPeeringConnection;

  @SpeakeasyMetadata()
  vpnConnection?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpnConnection;

  @SpeakeasyMetadata()
  vpnGateway?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpnGateway;
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeaderDestinationPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeaderSourcePortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The inbound header.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeader extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeaderDestinationPortRanges,
  })
  destinationPortRanges?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeaderDestinationPortRanges[];

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeaderSourcePortRanges,
  })
  sourcePortRanges?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeaderSourcePortRanges[];
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeaderDestinationPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeaderSourcePortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The outbound header.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeader extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeaderDestinationPortRanges,
  })
  destinationPortRanges?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeaderDestinationPortRanges[];

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeaderSourcePortRanges,
  })
  sourcePortRanges?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeaderSourcePortRanges[];
}

/**
 * The route table route.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The port range.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * The source VPC.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route in a transit gateway route table.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponents extends SpeakeasyBase {
  @SpeakeasyMetadata()
  aclRule?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAclRule;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetails,
  })
  additionalDetails?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetails[];

  @SpeakeasyMetadata()
  attachedTo?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAttachedTo;

  @SpeakeasyMetadata()
  component?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsComponent;

  @SpeakeasyMetadata()
  destinationVpc?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsDestinationVpc;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsElasticLoadBalancerListener;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanations,
  })
  explanations?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanations[];

  @SpeakeasyMetadata()
  firewallStatefulRule?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRule;

  @SpeakeasyMetadata()
  inboundHeader?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeader;

  @SpeakeasyMetadata()
  outboundHeader?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeader;

  @SpeakeasyMetadata()
  routeTableRoute?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroupRule?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSecurityGroupRule;

  @SpeakeasyMetadata()
  sequenceNumber?: number;

  @SpeakeasyMetadata()
  serviceName?: string;

  @SpeakeasyMetadata()
  sourceVpc?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSourceVpc;

  @SpeakeasyMetadata()
  subnet?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSubnet;

  @SpeakeasyMetadata()
  transitGateway?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsVpc;
}

/**
 * Describes a finding for a Network Access Scope.
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindings extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponents,
  })
  findingComponents?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponents[];

  @SpeakeasyMetadata()
  findingId?: string;

  @SpeakeasyMetadata()
  networkInsightsAccessScopeAnalysisId?: string;

  @SpeakeasyMetadata()
  networkInsightsAccessScopeId?: string;
}

/**
 * The status of Network Access Scope Analysis.
 */
export enum GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisStatusEnum {
  Running = "running",
  Succeeded = "succeeded",
  Failed = "failed",
}

/**
 * Success
 */
export class GetNetworkInsightsAccessScopeAnalysisFindingsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindings,
  })
  analysisFindings?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindings[];

  @SpeakeasyMetadata()
  analysisStatus?: GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisStatusEnum;

  @SpeakeasyMetadata()
  networkInsightsAccessScopeAnalysisId?: string;

  @SpeakeasyMetadata()
  nextToken?: string;
}
