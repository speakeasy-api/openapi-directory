/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QueryAssetsRequest - QueryAssets request.
 */
public class QueryAssetsRequest {
    /**
     * Optional. Reference to the query job, which is from the `QueryAssetsResponse` of previous `QueryAssets` call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobReference")
    public String jobReference;
    public QueryAssetsRequest withJobReference(String jobReference) {
        this.jobReference = jobReference;
        return this;
    }
    
    /**
     * Output configuration query assets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputConfig")
    public QueryAssetsOutputConfig outputConfig;
    public QueryAssetsRequest withOutputConfig(QueryAssetsOutputConfig outputConfig) {
        this.outputConfig = outputConfig;
        return this;
    }
    
    /**
     * Optional. The maximum number of rows to return in the results. Responses are limited to 10 MB and 1000 rows. By default, the maximum row count is 1000. When the byte or row count limit is reached, the rest of the query results will be paginated. The field will be ignored when [output_config] is specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageSize")
    public Integer pageSize;
    public QueryAssetsRequest withPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Optional. A page token received from previous `QueryAssets`. The field will be ignored when [output_config] is specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageToken")
    public String pageToken;
    public QueryAssetsRequest withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Optional. Queries cloud assets as they appeared at the specified point in time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readTime")
    public String readTime;
    public QueryAssetsRequest withReadTime(String readTime) {
        this.readTime = readTime;
        return this;
    }
    
    /**
     * A time window specified by its `start_time` and `end_time`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readTimeWindow")
    public TimeWindow readTimeWindow;
    public QueryAssetsRequest withReadTimeWindow(TimeWindow readTimeWindow) {
        this.readTimeWindow = readTimeWindow;
        return this;
    }
    
    /**
     * Optional. A SQL statement that's compatible with [BigQuery Standard SQL](http://cloud/bigquery/docs/reference/standard-sql/enabling-standard-sql).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statement")
    public String statement;
    public QueryAssetsRequest withStatement(String statement) {
        this.statement = statement;
        return this;
    }
    
    /**
     * Optional. Specifies the maximum amount of time that the client is willing to wait for the query to complete. By default, this limit is 5 min for the first query, and 1 minute for the following queries. If the query is complete, the `done` field in the `QueryAssetsResponse` is true, otherwise false. Like BigQuery [jobs.query API](https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query#queryrequest) The call is not guaranteed to wait for the specified timeout; it typically returns after around 200 seconds (200,000 milliseconds), even if the query is not complete. The field will be ignored when [output_config] is specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeout")
    public String timeout;
    public QueryAssetsRequest withTimeout(String timeout) {
        this.timeout = timeout;
        return this;
    }
    
}
