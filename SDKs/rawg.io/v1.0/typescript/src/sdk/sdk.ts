/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CreatorRoles } from "./creatorroles";
import { Creators } from "./creators";
import { Developers } from "./developers";
import { Games } from "./games";
import { Genres } from "./genres";
import { Platforms } from "./platforms";
import { Publishers } from "./publishers";
import { Stores } from "./stores";
import { Tags } from "./tags";
import axios from "axios";
import { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://api.rawg.io/api"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 *
 * @remarks
 * The largest open video games database.
 *
 * ### Why build on RAWG
 * - More than 350,000 games for 50 platforms including mobiles.
 * - Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates,
 * Metacritic ratings.
 * - Where to buy: links to digital distribution services
 * - Similar games based on visual similarity.
 * - Player activity data: Steam average playtime and RAWG player counts and ratings.
 * - Actively developing and constantly getting better by user contribution and our algorithms.
 *
 * ### Terms of Use
 * - Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active
 * hyperlink from every page where the data of RAWG is used.
 * - Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000
 * page views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for
 * commercial terms.
 * - No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy
 * to say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt,
 * and we will talk it through.
 * - You must include an API key with every request. The key can be obtained at https://rawg.io/apidocs.
 * If you donâ€™t provide it, we may ban your requests.
 *
 * __[Read more](https://rawg.io/apidocs)__.
 *
 */
export class SDK {
  public creatorRoles: CreatorRoles;
  public creators: Creators;
  public developers: Developers;
  public games: Games;
  public genres: Genres;
  public platforms: Platforms;
  public publishers: Publishers;
  public stores: Stores;
  public tags: Tags;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.creatorRoles = new CreatorRoles(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.creators = new Creators(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.developers = new Developers(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.games = new Games(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.genres = new Genres(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.platforms = new Platforms(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.publishers = new Publishers(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.stores = new Stores(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.tags = new Tags(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
