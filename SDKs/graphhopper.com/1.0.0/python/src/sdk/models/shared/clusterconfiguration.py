"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import clusterconfigurationclustering as shared_clusterconfigurationclustering
from ..shared import clusterconfigurationrouting as shared_clusterconfigurationrouting
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClusterConfiguration:
    
    clustering: Optional[shared_clusterconfigurationclustering.ClusterConfigurationClustering] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clustering'), 'exclude': lambda f: f is None }})  
    response_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response_type'), 'exclude': lambda f: f is None }})
    r"""Specifies the response format. You can either choose `geojson` or `json`."""  
    routing: Optional[shared_clusterconfigurationrouting.ClusterConfigurationRouting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('routing'), 'exclude': lambda f: f is None }})  
    