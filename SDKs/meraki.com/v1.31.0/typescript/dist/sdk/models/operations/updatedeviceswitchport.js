"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateDeviceSwitchPortResponse = exports.UpdateDeviceSwitchPort200ApplicationJSON = exports.UpdateDeviceSwitchPort200ApplicationJSONUdldEnum = exports.UpdateDeviceSwitchPort200ApplicationJSONTypeEnum = exports.UpdateDeviceSwitchPort200ApplicationJSONStpGuardEnum = exports.UpdateDeviceSwitchPort200ApplicationJSONProfile = exports.UpdateDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum = exports.UpdateDeviceSwitchPortRequest = exports.UpdateDeviceSwitchPortRequestBody = exports.UpdateDeviceSwitchPortRequestBodyUdldEnum = exports.UpdateDeviceSwitchPortRequestBodyTypeEnum = exports.UpdateDeviceSwitchPortRequestBodyStpGuardEnum = exports.UpdateDeviceSwitchPortRequestBodyProfile = exports.UpdateDeviceSwitchPortRequestBodyAccessPolicyTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
 */
var UpdateDeviceSwitchPortRequestBodyAccessPolicyTypeEnum;
(function (UpdateDeviceSwitchPortRequestBodyAccessPolicyTypeEnum) {
    UpdateDeviceSwitchPortRequestBodyAccessPolicyTypeEnum["CustomAccessPolicy"] = "Custom access policy";
    UpdateDeviceSwitchPortRequestBodyAccessPolicyTypeEnum["MACAllowList"] = "MAC allow list";
    UpdateDeviceSwitchPortRequestBodyAccessPolicyTypeEnum["Open"] = "Open";
    UpdateDeviceSwitchPortRequestBodyAccessPolicyTypeEnum["StickyMACAllowList"] = "Sticky MAC allow list";
})(UpdateDeviceSwitchPortRequestBodyAccessPolicyTypeEnum = exports.UpdateDeviceSwitchPortRequestBodyAccessPolicyTypeEnum || (exports.UpdateDeviceSwitchPortRequestBodyAccessPolicyTypeEnum = {}));
/**
 * Profile attributes
 */
var UpdateDeviceSwitchPortRequestBodyProfile = /** @class */ (function (_super) {
    __extends(UpdateDeviceSwitchPortRequestBodyProfile, _super);
    function UpdateDeviceSwitchPortRequestBodyProfile() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPortRequestBodyProfile.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBodyProfile.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iname" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBodyProfile.prototype, "iname", void 0);
    return UpdateDeviceSwitchPortRequestBodyProfile;
}(utils_1.SpeakeasyBase));
exports.UpdateDeviceSwitchPortRequestBodyProfile = UpdateDeviceSwitchPortRequestBodyProfile;
/**
 * The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
 */
var UpdateDeviceSwitchPortRequestBodyStpGuardEnum;
(function (UpdateDeviceSwitchPortRequestBodyStpGuardEnum) {
    UpdateDeviceSwitchPortRequestBodyStpGuardEnum["BpduGuard"] = "bpdu guard";
    UpdateDeviceSwitchPortRequestBodyStpGuardEnum["Disabled"] = "disabled";
    UpdateDeviceSwitchPortRequestBodyStpGuardEnum["LoopGuard"] = "loop guard";
    UpdateDeviceSwitchPortRequestBodyStpGuardEnum["RootGuard"] = "root guard";
})(UpdateDeviceSwitchPortRequestBodyStpGuardEnum = exports.UpdateDeviceSwitchPortRequestBodyStpGuardEnum || (exports.UpdateDeviceSwitchPortRequestBodyStpGuardEnum = {}));
/**
 * The type of the switch port ('trunk' or 'access').
 */
var UpdateDeviceSwitchPortRequestBodyTypeEnum;
(function (UpdateDeviceSwitchPortRequestBodyTypeEnum) {
    UpdateDeviceSwitchPortRequestBodyTypeEnum["Access"] = "access";
    UpdateDeviceSwitchPortRequestBodyTypeEnum["Trunk"] = "trunk";
})(UpdateDeviceSwitchPortRequestBodyTypeEnum = exports.UpdateDeviceSwitchPortRequestBodyTypeEnum || (exports.UpdateDeviceSwitchPortRequestBodyTypeEnum = {}));
/**
 * The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
 */
var UpdateDeviceSwitchPortRequestBodyUdldEnum;
(function (UpdateDeviceSwitchPortRequestBodyUdldEnum) {
    UpdateDeviceSwitchPortRequestBodyUdldEnum["AlertOnly"] = "Alert only";
    UpdateDeviceSwitchPortRequestBodyUdldEnum["Enforce"] = "Enforce";
})(UpdateDeviceSwitchPortRequestBodyUdldEnum = exports.UpdateDeviceSwitchPortRequestBodyUdldEnum || (exports.UpdateDeviceSwitchPortRequestBodyUdldEnum = {}));
var UpdateDeviceSwitchPortRequestBody = /** @class */ (function (_super) {
    __extends(UpdateDeviceSwitchPortRequestBody, _super);
    function UpdateDeviceSwitchPortRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accessPolicyNumber" }),
        __metadata("design:type", Number)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "accessPolicyNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accessPolicyType" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "accessPolicyType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "adaptivePolicyGroupId" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "adaptivePolicyGroupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowedVlans" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "allowedVlans", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "daiTrusted" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "daiTrusted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "flexibleStackingEnabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "flexibleStackingEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isolationEnabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "isolationEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linkNegotiation" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "linkNegotiation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "macAllowList" }),
        __metadata("design:type", Array)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "macAllowList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "peerSgtCapable" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "peerSgtCapable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "poeEnabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "poeEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "portScheduleId" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "portScheduleId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "profile" }),
        (0, class_transformer_1.Type)(function () { return UpdateDeviceSwitchPortRequestBodyProfile; }),
        __metadata("design:type", UpdateDeviceSwitchPortRequestBodyProfile)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "profile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rstpEnabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "rstpEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stickyMacAllowList" }),
        __metadata("design:type", Array)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "stickyMacAllowList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stickyMacAllowListLimit" }),
        __metadata("design:type", Number)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "stickyMacAllowListLimit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stormControlEnabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "stormControlEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stpGuard" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "stpGuard", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        __metadata("design:type", Array)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "udld" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "udld", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vlan" }),
        __metadata("design:type", Number)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "vlan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "voiceVlan" }),
        __metadata("design:type", Number)
    ], UpdateDeviceSwitchPortRequestBody.prototype, "voiceVlan", void 0);
    return UpdateDeviceSwitchPortRequestBody;
}(utils_1.SpeakeasyBase));
exports.UpdateDeviceSwitchPortRequestBody = UpdateDeviceSwitchPortRequestBody;
var UpdateDeviceSwitchPortRequest = /** @class */ (function (_super) {
    __extends(UpdateDeviceSwitchPortRequest, _super);
    function UpdateDeviceSwitchPortRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", UpdateDeviceSwitchPortRequestBody)
    ], UpdateDeviceSwitchPortRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=portId",
        }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequest.prototype, "portId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=serial",
        }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortRequest.prototype, "serial", void 0);
    return UpdateDeviceSwitchPortRequest;
}(utils_1.SpeakeasyBase));
exports.UpdateDeviceSwitchPortRequest = UpdateDeviceSwitchPortRequest;
/**
 * The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
 */
var UpdateDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum;
(function (UpdateDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum) {
    UpdateDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum["CustomAccessPolicy"] = "Custom access policy";
    UpdateDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum["MACAllowList"] = "MAC allow list";
    UpdateDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum["Open"] = "Open";
    UpdateDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum["StickyMACAllowList"] = "Sticky MAC allow list";
})(UpdateDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum = exports.UpdateDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum || (exports.UpdateDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum = {}));
/**
 * Profile attributes
 */
var UpdateDeviceSwitchPort200ApplicationJSONProfile = /** @class */ (function (_super) {
    __extends(UpdateDeviceSwitchPort200ApplicationJSONProfile, _super);
    function UpdateDeviceSwitchPort200ApplicationJSONProfile() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPort200ApplicationJSONProfile.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSONProfile.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iname" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSONProfile.prototype, "iname", void 0);
    return UpdateDeviceSwitchPort200ApplicationJSONProfile;
}(utils_1.SpeakeasyBase));
exports.UpdateDeviceSwitchPort200ApplicationJSONProfile = UpdateDeviceSwitchPort200ApplicationJSONProfile;
/**
 * The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
 */
var UpdateDeviceSwitchPort200ApplicationJSONStpGuardEnum;
(function (UpdateDeviceSwitchPort200ApplicationJSONStpGuardEnum) {
    UpdateDeviceSwitchPort200ApplicationJSONStpGuardEnum["BpduGuard"] = "bpdu guard";
    UpdateDeviceSwitchPort200ApplicationJSONStpGuardEnum["Disabled"] = "disabled";
    UpdateDeviceSwitchPort200ApplicationJSONStpGuardEnum["LoopGuard"] = "loop guard";
    UpdateDeviceSwitchPort200ApplicationJSONStpGuardEnum["RootGuard"] = "root guard";
})(UpdateDeviceSwitchPort200ApplicationJSONStpGuardEnum = exports.UpdateDeviceSwitchPort200ApplicationJSONStpGuardEnum || (exports.UpdateDeviceSwitchPort200ApplicationJSONStpGuardEnum = {}));
/**
 * The type of the switch port ('trunk' or 'access').
 */
var UpdateDeviceSwitchPort200ApplicationJSONTypeEnum;
(function (UpdateDeviceSwitchPort200ApplicationJSONTypeEnum) {
    UpdateDeviceSwitchPort200ApplicationJSONTypeEnum["Access"] = "access";
    UpdateDeviceSwitchPort200ApplicationJSONTypeEnum["Trunk"] = "trunk";
})(UpdateDeviceSwitchPort200ApplicationJSONTypeEnum = exports.UpdateDeviceSwitchPort200ApplicationJSONTypeEnum || (exports.UpdateDeviceSwitchPort200ApplicationJSONTypeEnum = {}));
/**
 * The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
 */
var UpdateDeviceSwitchPort200ApplicationJSONUdldEnum;
(function (UpdateDeviceSwitchPort200ApplicationJSONUdldEnum) {
    UpdateDeviceSwitchPort200ApplicationJSONUdldEnum["AlertOnly"] = "Alert only";
    UpdateDeviceSwitchPort200ApplicationJSONUdldEnum["Enforce"] = "Enforce";
})(UpdateDeviceSwitchPort200ApplicationJSONUdldEnum = exports.UpdateDeviceSwitchPort200ApplicationJSONUdldEnum || (exports.UpdateDeviceSwitchPort200ApplicationJSONUdldEnum = {}));
/**
 * Successful operation
 */
var UpdateDeviceSwitchPort200ApplicationJSON = /** @class */ (function (_super) {
    __extends(UpdateDeviceSwitchPort200ApplicationJSON, _super);
    function UpdateDeviceSwitchPort200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accessPolicyNumber" }),
        __metadata("design:type", Number)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "accessPolicyNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accessPolicyType" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "accessPolicyType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "adaptivePolicyGroupId" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "adaptivePolicyGroupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowedVlans" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "allowedVlans", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "daiTrusted" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "daiTrusted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "flexibleStackingEnabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "flexibleStackingEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isolationEnabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "isolationEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linkNegotiation" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "linkNegotiation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linkNegotiationCapabilities" }),
        __metadata("design:type", Array)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "linkNegotiationCapabilities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "macAllowList" }),
        __metadata("design:type", Array)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "macAllowList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "peerSgtCapable" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "peerSgtCapable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "poeEnabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "poeEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "portId" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "portId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "portScheduleId" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "portScheduleId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "profile" }),
        (0, class_transformer_1.Type)(function () { return UpdateDeviceSwitchPort200ApplicationJSONProfile; }),
        __metadata("design:type", UpdateDeviceSwitchPort200ApplicationJSONProfile)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "profile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rstpEnabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "rstpEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stickyMacAllowList" }),
        __metadata("design:type", Array)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "stickyMacAllowList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stickyMacAllowListLimit" }),
        __metadata("design:type", Number)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "stickyMacAllowListLimit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stormControlEnabled" }),
        __metadata("design:type", Boolean)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "stormControlEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stpGuard" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "stpGuard", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        __metadata("design:type", Array)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "udld" }),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "udld", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vlan" }),
        __metadata("design:type", Number)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "vlan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "voiceVlan" }),
        __metadata("design:type", Number)
    ], UpdateDeviceSwitchPort200ApplicationJSON.prototype, "voiceVlan", void 0);
    return UpdateDeviceSwitchPort200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.UpdateDeviceSwitchPort200ApplicationJSON = UpdateDeviceSwitchPort200ApplicationJSON;
var UpdateDeviceSwitchPortResponse = /** @class */ (function (_super) {
    __extends(UpdateDeviceSwitchPortResponse, _super);
    function UpdateDeviceSwitchPortResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], UpdateDeviceSwitchPortResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], UpdateDeviceSwitchPortResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateDeviceSwitchPortResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", UpdateDeviceSwitchPort200ApplicationJSON)
    ], UpdateDeviceSwitchPortResponse.prototype, "updateDeviceSwitchPort200ApplicationJSONObject", void 0);
    return UpdateDeviceSwitchPortResponse;
}(utils_1.SpeakeasyBase));
exports.UpdateDeviceSwitchPortResponse = UpdateDeviceSwitchPortResponse;
