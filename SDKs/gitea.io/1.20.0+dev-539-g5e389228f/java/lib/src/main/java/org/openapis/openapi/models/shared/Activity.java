/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Activity {
    /**
     * User represents a user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("act_user")
    public User actUser;

    public Activity withActUser(User actUser) {
        this.actUser = actUser;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("act_user_id")
    public Long actUserId;

    public Activity withActUserId(Long actUserId) {
        this.actUserId = actUserId;
        return this;
    }
    
    /**
     * Comment represents a comment on a commit or issue
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public Comment comment;

    public Activity withComment(Comment comment) {
        this.comment = comment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment_id")
    public Long commentId;

    public Activity withCommentId(Long commentId) {
        this.commentId = commentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;

    public Activity withContent(String content) {
        this.content = content;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public Activity withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public Activity withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_private")
    public Boolean isPrivate;

    public Activity withIsPrivate(Boolean isPrivate) {
        this.isPrivate = isPrivate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("op_type")
    public String opType;

    public Activity withOpType(String opType) {
        this.opType = opType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ref_name")
    public String refName;

    public Activity withRefName(String refName) {
        this.refName = refName;
        return this;
    }
    
    /**
     * Repository represents a repository
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repo")
    public Repository repo;

    public Activity withRepo(Repository repo) {
        this.repo = repo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repo_id")
    public Long repoId;

    public Activity withRepoId(Long repoId) {
        this.repoId = repoId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public Long userId;

    public Activity withUserId(Long userId) {
        this.userId = userId;
        return this;
    }
    
    public Activity(){}
}
