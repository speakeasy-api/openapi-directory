// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ImportClientBrandingXAmzTargetEnum
type ImportClientBrandingXAmzTargetEnum string

const (
	ImportClientBrandingXAmzTargetEnumWorkspacesServiceImportClientBranding ImportClientBrandingXAmzTargetEnum = "WorkspacesService.ImportClientBranding"
)

func (e ImportClientBrandingXAmzTargetEnum) ToPointer() *ImportClientBrandingXAmzTargetEnum {
	return &e
}

func (e *ImportClientBrandingXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WorkspacesService.ImportClientBranding":
		*e = ImportClientBrandingXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImportClientBrandingXAmzTargetEnum: %v", v)
	}
}

type ImportClientBrandingRequest struct {
	ImportClientBrandingRequest shared.ImportClientBrandingRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  ImportClientBrandingXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ImportClientBrandingResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	ImportClientBrandingResult *shared.ImportClientBrandingResult
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceLimitExceededException
	ResourceLimitExceededException interface{}
}
