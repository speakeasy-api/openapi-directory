<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GETPublicEmailTemplateResponse - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GETPublicEmailTemplateResponse
{
    /**
     * The status of the email template.
     * 
     * @var ?bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
    /**
     * Email BCC address.
     * 
     * @var ?string $bccEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('bccEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bccEmailAddress = null;
    
    /**
     * Email CC address.
     * 
     * @var ?string $ccEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('ccEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ccEmailAddress = null;
    
    /**
     * Email cc type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETPublicEmailTemplateResponseCcEmailTypeEnum $ccEmailType
     */
	#[\JMS\Serializer\Annotation\SerializedName('ccEmailType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETPublicEmailTemplateResponseCcEmailTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPublicEmailTemplateResponseCcEmailTypeEnum $ccEmailType = null;
    
    /**
     * The ID of the user who created the notification definition.
     * 
     * @var ?string $createdBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdBy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdBy = null;
    
    /**
     * The time when the notification definition was created. Specified in the UTC timezone in the ISO860 format (YYYY-MM-DDThh:mm:ss.sTZD). E.g. 1997-07-16T19:20:30.45+00:00
     * 
     * @var ?\DateTime $createdOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdOn = null;
    
    /**
     * The description of the email template.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The email body. You can add merge fields in the email object using angle brackets. 
     * 
     * User can also embed html tags if 'isHtml' is true.
     * 
     * @var ?string $emailBody
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailBody')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $emailBody = null;
    
    /**
     * The email subject. You can add merge fields in the email subject using angle brackets.
     * 
     * @var ?string $emailSubject
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailSubject')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $emailSubject = null;
    
    /**
     * The endcode type of the email body.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETPublicEmailTemplateResponseEncodingTypeEnum $encodingType
     */
	#[\JMS\Serializer\Annotation\SerializedName('encodingType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETPublicEmailTemplateResponseEncodingTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPublicEmailTemplateResponseEncodingTypeEnum $encodingType = null;
    
    /**
     * The name of the event type.
     * 
     * @var ?string $eventTypeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventTypeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventTypeName = null;
    
    /**
     * The namespace of the `eventTypeName` field. 
     * 
     * 
     * 
     * @var ?string $eventTypeNamespace
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventTypeNamespace')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventTypeNamespace = null;
    
    /**
     * If formEmailType is SpecificEmail, this field is required.
     * 
     * @var ?string $fromEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromEmailAddress = null;
    
    /**
     * The from email type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETPublicEmailTemplateResponseFromEmailTypeEnum $fromEmailType
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromEmailType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETPublicEmailTemplateResponseFromEmailTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPublicEmailTemplateResponseFromEmailTypeEnum $fromEmailType = null;
    
    /**
     * The name of email sender.
     * 
     * @var ?string $fromName
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromName = null;
    
    /**
     * The filter rule associated with this notification definition.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Specified whether the style of email body is HTML.
     * 
     * @var ?bool $isHtml
     */
	#[\JMS\Serializer\Annotation\SerializedName('isHtml')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isHtml = null;
    
    /**
     * The name of the email template.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * If replyToEmailType is SpecificEmail, this field is required
     * 
     * @var ?string $replyToEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('replyToEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replyToEmailAddress = null;
    
    /**
     * The reply email type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETPublicEmailTemplateResponseReplyToEmailTypeEnum $replyToEmailType
     */
	#[\JMS\Serializer\Annotation\SerializedName('replyToEmailType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETPublicEmailTemplateResponseReplyToEmailTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPublicEmailTemplateResponseReplyToEmailTypeEnum $replyToEmailType = null;
    
    /**
     * If toEmailType is SpecificEmail, this field is required.
     * 
     * @var ?string $toEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('toEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $toEmailAddress = null;
    
    /**
     * Email receive type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETPublicEmailTemplateResponseToEmailTypeEnum $toEmailType
     */
	#[\JMS\Serializer\Annotation\SerializedName('toEmailType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETPublicEmailTemplateResponseToEmailTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPublicEmailTemplateResponseToEmailTypeEnum $toEmailType = null;
    
    /**
     * The ID of the user who updated the notification definition.
     * 
     * @var ?string $updatedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedBy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedBy = null;
    
    /**
     * The time when the notification definition was updated. Specified in the UTC timezone in the ISO860 format (YYYY-MM-DDThh:mm:ss.sTZD). E.g. 1997-07-16T19:20:30.45+00:00
     * 
     * @var ?\DateTime $updatedOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedOn = null;
    
	public function __construct()
	{
		$this->active = null;
		$this->bccEmailAddress = null;
		$this->ccEmailAddress = null;
		$this->ccEmailType = null;
		$this->createdBy = null;
		$this->createdOn = null;
		$this->description = null;
		$this->emailBody = null;
		$this->emailSubject = null;
		$this->encodingType = null;
		$this->eventTypeName = null;
		$this->eventTypeNamespace = null;
		$this->fromEmailAddress = null;
		$this->fromEmailType = null;
		$this->fromName = null;
		$this->id = null;
		$this->isHtml = null;
		$this->name = null;
		$this->replyToEmailAddress = null;
		$this->replyToEmailType = null;
		$this->toEmailAddress = null;
		$this->toEmailType = null;
		$this->updatedBy = null;
		$this->updatedOn = null;
	}
}
