// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRestoreDBInstanceFromDBSnapshotActionEnum
type GETRestoreDBInstanceFromDBSnapshotActionEnum string

const (
	GETRestoreDBInstanceFromDBSnapshotActionEnumRestoreDbInstanceFromDbSnapshot GETRestoreDBInstanceFromDBSnapshotActionEnum = "RestoreDBInstanceFromDBSnapshot"
)

func (e *GETRestoreDBInstanceFromDBSnapshotActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RestoreDBInstanceFromDBSnapshot":
		*e = GETRestoreDBInstanceFromDBSnapshotActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRestoreDBInstanceFromDBSnapshotActionEnum: %s", s)
	}
}

// GETRestoreDBInstanceFromDBSnapshotVersionEnum
type GETRestoreDBInstanceFromDBSnapshotVersionEnum string

const (
	GETRestoreDBInstanceFromDBSnapshotVersionEnumTwoThousandAndThirteen0212 GETRestoreDBInstanceFromDBSnapshotVersionEnum = "2013-02-12"
)

func (e *GETRestoreDBInstanceFromDBSnapshotVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-02-12":
		*e = GETRestoreDBInstanceFromDBSnapshotVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRestoreDBInstanceFromDBSnapshotVersionEnum: %s", s)
	}
}

type GETRestoreDBInstanceFromDBSnapshotQueryParams struct {
	Action                  GETRestoreDBInstanceFromDBSnapshotActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	AutoMinorVersionUpgrade *bool                                         `queryParam:"style=form,explode=true,name=AutoMinorVersionUpgrade"`
	AvailabilityZone        *string                                       `queryParam:"style=form,explode=true,name=AvailabilityZone"`
	DBInstanceClass         *string                                       `queryParam:"style=form,explode=true,name=DBInstanceClass"`
	DBInstanceIdentifier    string                                        `queryParam:"style=form,explode=true,name=DBInstanceIdentifier"`
	DBName                  *string                                       `queryParam:"style=form,explode=true,name=DBName"`
	DBSnapshotIdentifier    string                                        `queryParam:"style=form,explode=true,name=DBSnapshotIdentifier"`
	DBSubnetGroupName       *string                                       `queryParam:"style=form,explode=true,name=DBSubnetGroupName"`
	Engine                  *string                                       `queryParam:"style=form,explode=true,name=Engine"`
	Iops                    *int64                                        `queryParam:"style=form,explode=true,name=Iops"`
	LicenseModel            *string                                       `queryParam:"style=form,explode=true,name=LicenseModel"`
	MultiAZ                 *bool                                         `queryParam:"style=form,explode=true,name=MultiAZ"`
	OptionGroupName         *string                                       `queryParam:"style=form,explode=true,name=OptionGroupName"`
	Port                    *int64                                        `queryParam:"style=form,explode=true,name=Port"`
	PubliclyAccessible      *bool                                         `queryParam:"style=form,explode=true,name=PubliclyAccessible"`
	Version                 GETRestoreDBInstanceFromDBSnapshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETRestoreDBInstanceFromDBSnapshotHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRestoreDBInstanceFromDBSnapshotRequest struct {
	QueryParams GETRestoreDBInstanceFromDBSnapshotQueryParams
	Headers     GETRestoreDBInstanceFromDBSnapshotHeaders
}

type GETRestoreDBInstanceFromDBSnapshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
