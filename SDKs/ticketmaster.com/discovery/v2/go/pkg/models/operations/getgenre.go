// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetGenrePathParams struct {
	// ID of the genre
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// GetGenreIncludeLicensedContentEnum - True if you want to display licensed content
type GetGenreIncludeLicensedContentEnum string

const (
	GetGenreIncludeLicensedContentEnumYes GetGenreIncludeLicensedContentEnum = "yes"
	GetGenreIncludeLicensedContentEnumNo  GetGenreIncludeLicensedContentEnum = " no"
)

func (e *GetGenreIncludeLicensedContentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "yes":
		fallthrough
	case " no":
		*e = GetGenreIncludeLicensedContentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGenreIncludeLicensedContentEnum: %s", s)
	}
}

type GetGenreQueryParams struct {
	// True if you want to display licensed content
	IncludeLicensedContent *GetGenreIncludeLicensedContentEnum `queryParam:"style=form,explode=true,name=includeLicensedContent"`
	// The locale in ISO code format. Multiple comma-separated values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used. When using a '*' it matches all locales. '*' can only be used at the end (e.g. 'en-us,en,*')
	Locale *string `queryParam:"style=form,explode=true,name=locale"`
}

type GetGenreRequest struct {
	PathParams  GetGenrePathParams
	QueryParams GetGenreQueryParams
}

type GetGenreResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
