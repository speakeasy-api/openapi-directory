/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RequestBasedSli - Service Level Indicators for which atomic units of service are counted directly.
 */
public class RequestBasedSli {
    /**
     * A DistributionCut defines a TimeSeries and thresholds used for measuring good service and total service. The TimeSeries must have ValueType = DISTRIBUTION and MetricKind = DELTA or MetricKind = CUMULATIVE. The computed good_service will be the estimated count of values in the Distribution that fall within the specified min and max.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distributionCut")
    public DistributionCut distributionCut;
    public RequestBasedSli withDistributionCut(DistributionCut distributionCut) {
        this.distributionCut = distributionCut;
        return this;
    }
    
    /**
     * A TimeSeriesRatio specifies two TimeSeries to use for computing the good_service / total_service ratio. The specified TimeSeries must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE. The TimeSeriesRatio must specify exactly two of good, bad, and total, and the relationship good_service + bad_service = total_service will be assumed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("goodTotalRatio")
    public TimeSeriesRatio goodTotalRatio;
    public RequestBasedSli withGoodTotalRatio(TimeSeriesRatio goodTotalRatio) {
        this.goodTotalRatio = goodTotalRatio;
        return this;
    }
    
}
