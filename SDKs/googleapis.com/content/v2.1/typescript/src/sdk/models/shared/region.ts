/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RegionGeoTargetArea } from "./regiongeotargetarea";
import { RegionPostalCodeArea } from "./regionpostalcodearea";
import { Expose, Type } from "class-transformer";

/**
 * Represents a geographic region that you can use as a target with both the `RegionalInventory` and `ShippingSettings` services. You can define regions as collections of either postal codes or, in some countries, using predefined geotargets.
 */
export class RegionInput extends SpeakeasyBase {
  /**
   * The display name of the region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * A list of geotargets that defines the region area.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geotargetArea" })
  @Type(() => RegionGeoTargetArea)
  geotargetArea?: RegionGeoTargetArea;

  /**
   * A list of postal codes that defines the region area. Note: All regions defined using postal codes are accessible via the account's `ShippingSettings.postalCodeGroups` resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCodeArea" })
  @Type(() => RegionPostalCodeArea)
  postalCodeArea?: RegionPostalCodeArea;
}

/**
 * Represents a geographic region that you can use as a target with both the `RegionalInventory` and `ShippingSettings` services. You can define regions as collections of either postal codes or, in some countries, using predefined geotargets.
 */
export class Region extends SpeakeasyBase {
  /**
   * The display name of the region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * A list of geotargets that defines the region area.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geotargetArea" })
  @Type(() => RegionGeoTargetArea)
  geotargetArea?: RegionGeoTargetArea;

  /**
   * Output only. Immutable. Merchant that owns the region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantId" })
  merchantId?: string;

  /**
   * A list of postal codes that defines the region area. Note: All regions defined using postal codes are accessible via the account's `ShippingSettings.postalCodeGroups` resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCodeArea" })
  @Type(() => RegionPostalCodeArea)
  postalCodeArea?: RegionPostalCodeArea;

  /**
   * Output only. Immutable. The ID uniquely identifying each region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "regionId" })
  regionId?: string;

  /**
   * Output only. Indicates if the region is eligible to use in the Regional Inventory configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "regionalInventoryEligible" })
  regionalInventoryEligible?: boolean;

  /**
   * Output only. Indicates if the region is eligible to use in the Shipping Services configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shippingEligible" })
  shippingEligible?: boolean;
}
