"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListPhoneUsersSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListPhoneUsersRequest:
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'next_page_token', 'style': 'form', 'explode': True }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of records returned from a single API call."""  
    site_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'site_id', 'style': 'form', 'explode': True }})
    r"""Unique Identifier of the site. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/listphonesites) API."""  
    

@dataclasses.dataclass
class ListPhoneUsers200ApplicationXMLUsersCallingPlans:
    
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the calling plan that user is enrolled in."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""Type of calling plan that user is enrolled in."""  
    

@dataclasses.dataclass
class ListPhoneUsers200ApplicationXMLUsersSite:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the site."""  
    

@dataclasses.dataclass
class ListPhoneUsers200ApplicationXMLUsers:
    
    calling_plans: Optional[list[ListPhoneUsers200ApplicationXMLUsersCallingPlans]] = dataclasses.field(default=None)  
    email: Optional[str] = dataclasses.field(default=None)
    r"""Email address of the user."""  
    extension_number: Optional[int] = dataclasses.field(default=None)
    r"""Extension number assigned to the user's Zoom phone number."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the user (userId)."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the user."""  
    phone_user_id: Optional[str] = dataclasses.field(default=None)
    r"""Zoom Phone Identifier of the user."""  
    site: Optional[ListPhoneUsers200ApplicationXMLUsersSite] = dataclasses.field(default=None)  
    status: Optional[str] = dataclasses.field(default=None)
    r"""Displays the status of the user's Zoom Phone license. The value can be either of the following:<br>
    `activate`: Active Zoom phone user.<br>
    `deactivate`: User with Zoom phone license disabled. This type of user can't make or receive calls.
    """  
    

@dataclasses.dataclass
class ListPhoneUsers200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Phone users retrieved successfully.
    """
    
    next_page_token: Optional[str] = dataclasses.field(default=None)
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None)
    r"""The number of records returned from a single API call."""  
    total_records: Optional[int] = dataclasses.field(default=None)
    r"""The total records found for this query."""  
    users: Optional[list[ListPhoneUsers200ApplicationXMLUsers]] = dataclasses.field(default=None)  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPhoneUsers200ApplicationJSONUsersCallingPlans:
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the calling plan that user is enrolled in."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of calling plan that user is enrolled in."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPhoneUsers200ApplicationJSONUsersSite:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the site."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPhoneUsers200ApplicationJSONUsers:
    
    calling_plans: Optional[list[ListPhoneUsers200ApplicationJSONUsersCallingPlans]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calling_plans'), 'exclude': lambda f: f is None }})  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Email address of the user."""  
    extension_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_number'), 'exclude': lambda f: f is None }})
    r"""Extension number assigned to the user's Zoom phone number."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the user (userId)."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the user."""  
    phone_user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone_user_id'), 'exclude': lambda f: f is None }})
    r"""Zoom Phone Identifier of the user."""  
    site: Optional[ListPhoneUsers200ApplicationJSONUsersSite] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site'), 'exclude': lambda f: f is None }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Displays the status of the user's Zoom Phone license. The value can be either of the following:<br>
    `activate`: Active Zoom phone user.<br>
    `deactivate`: User with Zoom phone license disabled. This type of user can't make or receive calls.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPhoneUsers200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Phone users retrieved successfully.
    """
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_token'), 'exclude': lambda f: f is None }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size'), 'exclude': lambda f: f is None }})
    r"""The number of records returned from a single API call."""  
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""The total records found for this query."""  
    users: Optional[list[ListPhoneUsers200ApplicationJSONUsers]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('users'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class ListPhoneUsersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_phone_users_200_application_json_object: Optional[ListPhoneUsers200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK**<br>
    Phone users retrieved successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    