// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCheckDNSAvailabilityActionEnum
type POSTCheckDNSAvailabilityActionEnum string

const (
	POSTCheckDNSAvailabilityActionEnumCheckDNSAvailability POSTCheckDNSAvailabilityActionEnum = "CheckDNSAvailability"
)

func (e POSTCheckDNSAvailabilityActionEnum) ToPointer() *POSTCheckDNSAvailabilityActionEnum {
	return &e
}

func (e *POSTCheckDNSAvailabilityActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CheckDNSAvailability":
		*e = POSTCheckDNSAvailabilityActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCheckDNSAvailabilityActionEnum: %v", v)
	}
}

// POSTCheckDNSAvailabilityVersionEnum
type POSTCheckDNSAvailabilityVersionEnum string

const (
	POSTCheckDNSAvailabilityVersionEnumTwoThousandAndTen1201 POSTCheckDNSAvailabilityVersionEnum = "2010-12-01"
)

func (e POSTCheckDNSAvailabilityVersionEnum) ToPointer() *POSTCheckDNSAvailabilityVersionEnum {
	return &e
}

func (e *POSTCheckDNSAvailabilityVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = POSTCheckDNSAvailabilityVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCheckDNSAvailabilityVersionEnum: %v", v)
	}
}

type POSTCheckDNSAvailabilityRequest struct {
	Action            POSTCheckDNSAvailabilityActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                              `request:"mediaType=text/xml"`
	Version           POSTCheckDNSAvailabilityVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCheckDNSAvailabilityResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
