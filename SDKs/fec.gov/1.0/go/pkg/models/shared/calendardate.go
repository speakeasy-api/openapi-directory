// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type CalendarDate struct {
	AllDay *bool `json:"all_day,omitempty"`
	// Each type of event has a calendar category with an integer id. Options are: Open Meetings: 32, Executive Sessions: 39, Public Hearings: 40,
	// Conferences: 33, Roundtables: 34, Election Dates: 36, Federal Holidays: 37, FEA Periods: 38, Commission Meetings: 20,
	// Reporting Deadlines: 21, Conferences and Outreach: 22, AOs and Rules: 23, Other: 24, Quarterly: 25, Monthly: 26,
	// Pre and Post-Elections: 27, EC Periods:28, and IE Periods: 29
	//
	CalendarCategoryID *int `json:"calendar_category_id,omitempty"`
	// Each type of event has a calendar category with an integer id. Options are: Open Meetings: 32, Executive Sessions: 39, Public Hearings: 40,
	// Conferences: 33, Roundtables: 34, Election Dates: 36, Federal Holidays: 37, FEA Periods: 38, Commission Meetings: 20,
	// Reporting Deadlines: 21, Conferences and Outreach: 22, AOs and Rules: 23, Other: 24, Quarterly: 25, Monthly: 26,
	// Pre and Post-Elections: 27, EC Periods:28, and IE Periods: 29
	//
	Category    *string `json:"category,omitempty"`
	Description *string `json:"description,omitempty"`
	EndDate     *string `json:"end_date,omitempty"`
	// An unique ID for an event. Useful for downloading a single event to your calendar. This ID is not a permanent, persistent ID.
	EventID *int `json:"event_id,omitempty"`
	// Can be state address or room.
	//
	Location  *string `json:"location,omitempty"`
	StartDate *string `json:"start_date,omitempty"`
	// The state field only applies to election dates and reporting deadlines, reporting periods and all other dates do not have the array of states to filter on
	State   []string `json:"state,omitempty"`
	Summary *string  `json:"summary,omitempty"`
	// A url for that event
	//
	URL *string `json:"url,omitempty"`
}
