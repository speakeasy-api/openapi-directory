/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SearchUserActivityRequest - The request to fetch User Report from Reporting API `userActivity:get` call.
 */
public class SearchUserActivityRequest {
    /**
     * Set of all activity types being requested. Only acvities matching these types will be returned in the response. If empty, all activies will be returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activityTypes")
    public SearchUserActivityRequestActivityTypesEnum[] activityTypes;

    public SearchUserActivityRequest withActivityTypes(SearchUserActivityRequestActivityTypesEnum[] activityTypes) {
        this.activityTypes = activityTypes;
        return this;
    }
    
    /**
     * A contiguous set of days: startDate, startDate + 1 day, ..., endDate. The start and end dates are specified in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) date format `YYYY-MM-DD`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateRange")
    public DateRange dateRange;

    public SearchUserActivityRequest withDateRange(DateRange dateRange) {
        this.dateRange = dateRange;
        return this;
    }
    
    /**
     * Page size is for paging and specifies the maximum number of returned rows. Page size should be &gt; 0. If the value is 0 or if the field isn't specified, the request returns the default of 1000 rows per page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageSize")
    public Integer pageSize;

    public SearchUserActivityRequest withPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * A continuation token to get the next page of the results. Adding this to the request will return the rows after the pageToken. The pageToken should be the value returned in the nextPageToken parameter in the response to the [SearchUserActivityRequest](#SearchUserActivityRequest) request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageToken")
    public String pageToken;

    public SearchUserActivityRequest withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Contains information to identify a particular user uniquely.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public User user;

    public SearchUserActivityRequest withUser(User user) {
        this.user = user;
        return this;
    }
    
    /**
     * Required. The Analytics [view ID](https://support.google.com/analytics/answer/1009618) from which to retrieve data. Every [SearchUserActivityRequest](#SearchUserActivityRequest) must contain the `viewId`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("viewId")
    public String viewId;

    public SearchUserActivityRequest withViewId(String viewId) {
        this.viewId = viewId;
        return this;
    }
    
    public SearchUserActivityRequest(){}
}
