<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Header - A [`Header`](https://firebase.google.com/docs/hosting/full-config#headers) specifies a URL pattern that, if matched to the request URL path, triggers Hosting to apply the specified custom response headers.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Header
{
    /**
     * The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.
     * 
     * @var ?string $glob
     */
	#[\JMS\Serializer\Annotation\SerializedName('glob')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $glob = null;
    
    /**
     * Required. The additional headers to add to the response.
     * 
     * @var ?array<string, string> $headers
     */
	#[\JMS\Serializer\Annotation\SerializedName('headers')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $headers = null;
    
    /**
     * The user-supplied RE2 regular expression to match against the request URL path.
     * 
     * @var ?string $regex
     */
	#[\JMS\Serializer\Annotation\SerializedName('regex')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $regex = null;
    
	public function __construct()
	{
		$this->glob = null;
		$this->headers = null;
		$this->regex = null;
	}
}
