"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import localtime as shared_localtime
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WeeklySchedule:
    r"""Weekly schedule allows to schedule operations by day of week and time of the day"""
    
    days_of_week: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('daysOfWeek'), 'exclude': lambda f: f is None }})
    r"""A scheduled days when operation will trigger"""  
    start_time_of_day: Optional[shared_localtime.LocalTime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTimeOfDay'), 'exclude': lambda f: f is None }})
    r"""Represents a time part of a given date"""  
    stop_time_of_day: Optional[shared_localtime.LocalTime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stopTimeOfDay'), 'exclude': lambda f: f is None }})
    r"""Represents a time part of a given date"""  
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeZone'), 'exclude': lambda f: f is None }})
    r"""A user's timezone"""  
    