/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PlaceGetOverlayPathParams {
    /**
     * Automatically added
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=Lat")
    public String lat;
    public PlaceGetOverlayPathParams withLat(String lat) {
        this.lat = lat;
        return this;
    }
    
    /**
     * Automatically added
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=Lon")
    public String lon;
    public PlaceGetOverlayPathParams withLon(String lon) {
        this.lon = lon;
        return this;
    }
    
    /**
     * The height of the requested overlay.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=height")
    public Integer height;
    public PlaceGetOverlayPathParams withHeight(Integer height) {
        this.height = height;
        return this;
    }
    
    /**
     * The place type (a valid list of place types can be obtained from the /Place/Meta/placeTypes endpoint)
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=type")
    public String[] type;
    public PlaceGetOverlayPathParams withType(String[] type) {
        this.type = type;
        return this;
    }
    
    /**
     * The width of the requested overlay.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=width")
    public Integer width;
    public PlaceGetOverlayPathParams withWidth(Integer width) {
        this.width = width;
        return this;
    }
    
    /**
     * The zoom level
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=z")
    public Integer z;
    public PlaceGetOverlayPathParams withZ(Integer z) {
        this.z = z;
        return this;
    }
    
}
