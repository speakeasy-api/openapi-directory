/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Reservation - Represents a reservation resource. A reservation ensures that capacity is held in a specific zone even if the reserved VMs are not running. For more information, read Reserving zonal resources.
 */
public class Reservation {
    /**
     * [Output Only] Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commitment")
    public String commitment;
    public Reservation withCommitment(String commitment) {
        this.commitment = commitment;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public Reservation withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Reservation withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Reservation withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#reservations for reservations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Reservation withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Reservation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Resource policies to be added to this reservation. The key is defined by user, and the value is resource policy url. This is to define placement policy with reservation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourcePolicies")
    public java.util.Map<String, String> resourcePolicies;
    public Reservation withResourcePolicies(java.util.Map<String, String> resourcePolicies) {
        this.resourcePolicies = resourcePolicies;
        return this;
    }
    
    /**
     * [Output Only] Contains output only fields.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceStatus")
    public AllocationResourceStatus resourceStatus;
    public Reservation withResourceStatus(AllocationResourceStatus resourceStatus) {
        this.resourceStatus = resourceStatus;
        return this;
    }
    
    /**
     * [Output Only] Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;
    public Reservation withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    /**
     * [Output Only] Server-defined fully-qualified URL for this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public Reservation withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * The share setting for reservations and sole tenancy node groups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareSettings")
    public ShareSettings shareSettings;
    public Reservation withShareSettings(ShareSettings shareSettings) {
        this.shareSettings = shareSettings;
        return this;
    }
    
    /**
     * This reservation type allows to pre allocate specific instance configuration. Next ID: 6
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specificReservation")
    public AllocationSpecificSKUReservation specificReservation;
    public Reservation withSpecificReservation(AllocationSpecificSKUReservation specificReservation) {
        this.specificReservation = specificReservation;
        return this;
    }
    
    /**
     * Indicates whether the reservation can be consumed by VMs with affinity for "any" reservation. If the field is set, then only VMs that target the reservation by name can consume from this reservation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specificReservationRequired")
    public Boolean specificReservationRequired;
    public Reservation withSpecificReservationRequired(Boolean specificReservationRequired) {
        this.specificReservationRequired = specificReservationRequired;
        return this;
    }
    
    /**
     * [Output Only] The status of the reservation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ReservationStatusEnum status;
    public Reservation withStatus(ReservationStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Zone in which the reservation resides. A zone must be provided if the reservation is created within a commitment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;
    public Reservation withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
}
