/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ActiveContext - &lt;p&gt;Contains information about the contexts that a user is using in a session. You can configure Amazon Lex V2 to set a context when an intent is fulfilled, or you can set a context using the , , or operations.&lt;/p&gt; &lt;p&gt;Use a context to indicate to Amazon Lex V2 intents that should be used as follow-up intents. For example, if the active context is &lt;code&gt;order-fulfilled&lt;/code&gt;, only intents that have &lt;code&gt;order-fulfilled&lt;/code&gt; configured as a trigger are considered for follow up.&lt;/p&gt;
 */
public class ActiveContext {
    @JsonProperty("contextAttributes")
    public java.util.Map<String, String> contextAttributes;

    public ActiveContext withContextAttributes(java.util.Map<String, String> contextAttributes) {
        this.contextAttributes = contextAttributes;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public ActiveContext withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("timeToLive")
    public ActiveContextTimeToLive timeToLive;

    public ActiveContext withTimeToLive(ActiveContextTimeToLive timeToLive) {
        this.timeToLive = timeToLive;
        return this;
    }
    
    public ActiveContext(@JsonProperty("contextAttributes") java.util.Map<String, String> contextAttributes, @JsonProperty("name") String name, @JsonProperty("timeToLive") ActiveContextTimeToLive timeToLive) {
        this.contextAttributes = contextAttributes;
        this.name = name;
        this.timeToLive = timeToLive;
  }
}
