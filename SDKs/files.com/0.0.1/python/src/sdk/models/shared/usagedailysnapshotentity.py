"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsageDailySnapshotEntity:
    r"""List Usage Daily Snapshots"""
    
    api_usage_available: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_usage_available'), 'exclude': lambda f: f is None }})
    r"""True if the API usage fields `read_api_usage` and `write_api_usage` can be relied upon.  If this is false, we suggest hiding that value from any UI."""  
    current_storage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('current_storage'), 'exclude': lambda f: f is None }})
    r"""GB of Files Native Storage used on this day."""  
    date_: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date of this usage record"""  
    deleted_files_counted_in_minimum: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deleted_files_counted_in_minimum'), 'exclude': lambda f: f is None }})
    r"""GB of Files Native Storage used on this day for files that have been permanently deleted but were uploaded less than 30 days ago, and are still billable."""  
    deleted_files_storage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deleted_files_storage'), 'exclude': lambda f: f is None }})
    r"""GB of Files Native Storage used on this day for files that have been deleted and are stored as backups."""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID of the usage record"""  
    read_api_usage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('read_api_usage'), 'exclude': lambda f: f is None }})
    r"""Read API Calls used on this day. Note: only updated for days before the current day."""  
    root_storage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('root_storage'), 'exclude': lambda f: f is None }})
    r"""GB of Files Native Storage used for the root folder.  Included here because this value will not be part of `usage_by_top_level_dir`"""  
    usage_by_top_level_dir: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usage_by_top_level_dir'), 'exclude': lambda f: f is None }})
    r"""Usage broken down by each top-level folder"""  
    user_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_count'), 'exclude': lambda f: f is None }})
    r"""Number of billable users as of this day."""  
    write_api_usage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('write_api_usage'), 'exclude': lambda f: f is None }})
    r"""Write API Calls used on this day. Note: only updated for days before the current day."""  
    