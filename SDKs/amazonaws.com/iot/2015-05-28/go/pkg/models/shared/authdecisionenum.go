// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AuthDecisionEnum string

const (
	AuthDecisionEnumAllowed      AuthDecisionEnum = "ALLOWED"
	AuthDecisionEnumExplicitDeny AuthDecisionEnum = "EXPLICIT_DENY"
	AuthDecisionEnumImplicitDeny AuthDecisionEnum = "IMPLICIT_DENY"
)

func (e AuthDecisionEnum) ToPointer() *AuthDecisionEnum {
	return &e
}

func (e *AuthDecisionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALLOWED":
		fallthrough
	case "EXPLICIT_DENY":
		fallthrough
	case "IMPLICIT_DENY":
		*e = AuthDecisionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthDecisionEnum: %v", v)
	}
}
