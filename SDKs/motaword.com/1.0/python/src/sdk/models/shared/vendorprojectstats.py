"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VendorProjectStats:
    
    invited: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invited'), 'exclude': lambda f: f is None }})
    r"""total number of projects that this user was invited to. TODO this key is to replace \\"total\\" key due to naming ambiguity."""  
    total: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""total number of projects that this user was invited to."""  
    worked: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('worked'), 'exclude': lambda f: f is None }})
    r"""total number of projects that this user actually worked on."""  
    