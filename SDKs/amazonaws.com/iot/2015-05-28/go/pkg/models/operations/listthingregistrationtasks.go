// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListThingRegistrationTasksStatusEnum - The status of the bulk thing provisioning task.
type ListThingRegistrationTasksStatusEnum string

const (
	ListThingRegistrationTasksStatusEnumInProgress ListThingRegistrationTasksStatusEnum = "InProgress"
	ListThingRegistrationTasksStatusEnumCompleted  ListThingRegistrationTasksStatusEnum = "Completed"
	ListThingRegistrationTasksStatusEnumFailed     ListThingRegistrationTasksStatusEnum = "Failed"
	ListThingRegistrationTasksStatusEnumCancelled  ListThingRegistrationTasksStatusEnum = "Cancelled"
	ListThingRegistrationTasksStatusEnumCancelling ListThingRegistrationTasksStatusEnum = "Cancelling"
)

func (e ListThingRegistrationTasksStatusEnum) ToPointer() *ListThingRegistrationTasksStatusEnum {
	return &e
}

func (e *ListThingRegistrationTasksStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InProgress":
		fallthrough
	case "Completed":
		fallthrough
	case "Failed":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Cancelling":
		*e = ListThingRegistrationTasksStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListThingRegistrationTasksStatusEnum: %v", v)
	}
}

type ListThingRegistrationTasksRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The maximum number of results to return at one time.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// The status of the bulk thing provisioning task.
	Status *ListThingRegistrationTasksStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type ListThingRegistrationTasksResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListThingRegistrationTasksResponse *shared.ListThingRegistrationTasksResponse
	StatusCode                         int
	RawResponse                        *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
