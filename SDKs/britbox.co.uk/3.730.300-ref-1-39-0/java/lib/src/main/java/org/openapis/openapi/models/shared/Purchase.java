/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Purchase {
    /**
     * The date the purchase was authorized.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("authorizationDate")
    public OffsetDateTime authorizationDate;
    public Purchase withAuthorizationDate(OffsetDateTime authorizationDate) {
        this.authorizationDate = authorizationDate;
        return this;
    }
    
    /**
     * The date the purchase was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationDate")
    public OffsetDateTime creationDate;
    public Purchase withCreationDate(OffsetDateTime creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    /**
     * The currency code used to make the purchase.
     */
    @JsonProperty("currency")
    public String currency;
    public Purchase withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The identifier of the purchase.
     */
    @JsonProperty("id")
    public String id;
    public Purchase withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("item")
    public ItemPurchase item;
    public Purchase withItem(ItemPurchase item) {
        this.item = item;
        return this;
    }
    
    /**
     * The identifier of the payment method used to make the purchase.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentMethodId")
    public String paymentMethodId;
    public Purchase withPaymentMethodId(String paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan")
    public PlanPurchase plan;
    public Purchase withPlan(PlanPurchase plan) {
        this.plan = plan;
        return this;
    }
    
    /**
     * The total cost of the purchase.
     */
    @JsonProperty("total")
    public Float total;
    public Purchase withTotal(Float total) {
        this.total = total;
        return this;
    }
    
}
