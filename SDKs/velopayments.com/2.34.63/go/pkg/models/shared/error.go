// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ErrorLocationTypeEnum - the location type in the request that was the cause of the error
type ErrorLocationTypeEnum string

const (
	ErrorLocationTypeEnumRequestBody  ErrorLocationTypeEnum = "requestBody"
	ErrorLocationTypeEnumQueryParam   ErrorLocationTypeEnum = "queryParam"
	ErrorLocationTypeEnumRequestParam ErrorLocationTypeEnum = "requestParam"
	ErrorLocationTypeEnumHeader       ErrorLocationTypeEnum = "header"
	ErrorLocationTypeEnumPathParam    ErrorLocationTypeEnum = "pathParam"
)

func (e *ErrorLocationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "requestBody":
		fallthrough
	case "queryParam":
		fallthrough
	case "requestParam":
		fallthrough
	case "header":
		fallthrough
	case "pathParam":
		*e = ErrorLocationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorLocationTypeEnum: %s", s)
	}
}

type Error struct {
	// Unique numeric code that can be used for switching client behavior or to drive translated or customised error messages
	ErrorCode *string    `json:"errorCode,omitempty"`
	ErrorData *ErrorData `json:"errorData,omitempty"`
	// English language message indicating the nature of the error
	ErrorMessage        *string              `json:"errorMessage,omitempty"`
	LocalisationDetails *LocalisationDetails `json:"localisationDetails,omitempty"`
	// the property or object that caused the error
	Location *string `json:"location,omitempty"`
	// the location type in the request that was the cause of the error
	//
	LocationType *ErrorLocationTypeEnum `json:"locationType,omitempty"`
	// a camel-cased string that can be used by clients to localise client error messages (deprecated)
	ReasonCode *string `json:"reasonCode,omitempty"`
}
