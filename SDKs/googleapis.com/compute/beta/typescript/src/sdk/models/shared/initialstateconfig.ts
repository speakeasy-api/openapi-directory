/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FileContentBuffer } from "./filecontentbuffer";
import { Expose, Type } from "class-transformer";

/**
 * Initial State for shielded instance, these are public keys which are safe to store in public
 */
export class InitialStateConfig extends SpeakeasyBase {
  /**
   * The Key Database (db).
   */
  @SpeakeasyMetadata({ elemType: FileContentBuffer })
  @Expose({ name: "dbs" })
  @Type(() => FileContentBuffer)
  dbs?: FileContentBuffer[];

  /**
   * The forbidden key database (dbx).
   */
  @SpeakeasyMetadata({ elemType: FileContentBuffer })
  @Expose({ name: "dbxs" })
  @Type(() => FileContentBuffer)
  dbxs?: FileContentBuffer[];

  /**
   * The Key Exchange Key (KEK).
   */
  @SpeakeasyMetadata({ elemType: FileContentBuffer })
  @Expose({ name: "keks" })
  @Type(() => FileContentBuffer)
  keks?: FileContentBuffer[];

  @SpeakeasyMetadata()
  @Expose({ name: "pk" })
  @Type(() => FileContentBuffer)
  pk?: FileContentBuffer;
}
