/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FargateProfileSelector } from "./fargateprofileselector";
import { FargateProfileStatusEnum } from "./fargateprofilestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An object representing an Fargate profile.
 */
export class FargateProfile extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "clusterName" })
  clusterName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "fargateProfileArn" })
  fargateProfileArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fargateProfileName" })
  fargateProfileName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "podExecutionRoleArn" })
  podExecutionRoleArn?: string;

  @SpeakeasyMetadata({ elemType: FargateProfileSelector })
  @Expose({ name: "selectors" })
  @Type(() => FargateProfileSelector)
  selectors?: FargateProfileSelector[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: FargateProfileStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "subnets" })
  subnets?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
