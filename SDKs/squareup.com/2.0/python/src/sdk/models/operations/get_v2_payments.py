"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listpaymentsresponse as shared_listpaymentsresponse
from typing import Optional


@dataclasses.dataclass
class GetV2PaymentsSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetV2PaymentsRequest:
    
    begin_time: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'begin_time', 'style': 'form', 'explode': True }})
    r"""The timestamp for the beginning of the reporting period, in RFC 3339 format.
    Inclusive. Default: The current time minus one year.
    """  
    card_brand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'card_brand', 'style': 'form', 'explode': True }})
    r"""The brand of the payment card (for example, VISA)."""  
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""A pagination cursor returned by a previous call to this endpoint.
    Provide this cursor to retrieve the next set of results for the original query.
    
    For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
    """  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_time', 'style': 'form', 'explode': True }})
    r"""The timestamp for the end of the reporting period, in RFC 3339 format.
    
    Default: The current time.
    """  
    last_4: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'last_4', 'style': 'form', 'explode': True }})
    r"""The last four digits of a payment card."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""The maximum number of results to be returned in a single page.
    It is possible to receive fewer results than the specified limit on a given page.
    
    The default value of 100 is also the maximum allowed value. If the provided value is 
    greater than 100, it is ignored and the default value is used instead.
    
    Default: `100`
    """  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'location_id', 'style': 'form', 'explode': True }})
    r"""Limit results to the location supplied. By default, results are returned
    for the default (main) location associated with the seller.
    """  
    sort_order: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_order', 'style': 'form', 'explode': True }})
    r"""The order in which results are listed:
    - `ASC` - Oldest to newest.
    - `DESC` - Newest to oldest (default).
    """  
    total: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'total', 'style': 'form', 'explode': True }})
    r"""The exact amount in the `total_money` for a payment."""  
    

@dataclasses.dataclass
class GetV2PaymentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_payments_response: Optional[shared_listpaymentsresponse.ListPaymentsResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    