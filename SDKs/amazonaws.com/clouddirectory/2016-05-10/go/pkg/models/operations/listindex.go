// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListIndexRequestBodyIndexReference - The reference that identifies an object.
type ListIndexRequestBodyIndexReference struct {
	Selector *string `json:"Selector,omitempty"`
}

type ListIndexRequestBody struct {
	// The reference that identifies an object.
	IndexReference ListIndexRequestBodyIndexReference `json:"IndexReference"`
	// The maximum number of objects in a single page to retrieve from the index during a request. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html#limits_cd">AWS Directory Service Limits</a>.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The pagination token.
	NextToken *string `json:"NextToken,omitempty"`
	// Specifies the ranges of indexed values that you want to query.
	RangesOnIndexedValues []shared.ObjectAttributeRange `json:"RangesOnIndexedValues,omitempty"`
}

// ListIndexXAmzConsistencyLevelEnum - The consistency level to execute the request at.
type ListIndexXAmzConsistencyLevelEnum string

const (
	ListIndexXAmzConsistencyLevelEnumSerializable ListIndexXAmzConsistencyLevelEnum = "SERIALIZABLE"
	ListIndexXAmzConsistencyLevelEnumEventual     ListIndexXAmzConsistencyLevelEnum = "EVENTUAL"
)

func (e ListIndexXAmzConsistencyLevelEnum) ToPointer() *ListIndexXAmzConsistencyLevelEnum {
	return &e
}

func (e *ListIndexXAmzConsistencyLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SERIALIZABLE":
		fallthrough
	case "EVENTUAL":
		*e = ListIndexXAmzConsistencyLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListIndexXAmzConsistencyLevelEnum: %v", v)
	}
}

type ListIndexRequest struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string              `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       ListIndexRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The consistency level to execute the request at.
	XAmzConsistencyLevel *ListIndexXAmzConsistencyLevelEnum `header:"style=simple,explode=false,name=x-amz-consistency-level"`
	// The ARN of the directory that the index exists in.
	XAmzDataPartition string `header:"style=simple,explode=false,name=x-amz-data-partition"`
}

type ListIndexResponse struct {
	// AccessDeniedException
	AccessDeniedException *shared.AccessDeniedException
	ContentType           string
	// DirectoryNotEnabledException
	DirectoryNotEnabledException *shared.DirectoryNotEnabledException
	// FacetValidationException
	FacetValidationException *shared.FacetValidationException
	// InternalServiceException
	InternalServiceException *shared.InternalServiceException
	// InvalidArnException
	InvalidArnException *shared.InvalidArnException
	// InvalidNextTokenException
	InvalidNextTokenException *shared.InvalidNextTokenException
	// LimitExceededException
	LimitExceededException *shared.LimitExceededException
	// Success
	ListIndexResponse *shared.ListIndexResponse
	// NotIndexException
	NotIndexException *shared.NotIndexException
	StatusCode        int
	RawResponse       *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException *shared.ResourceNotFoundException
	// RetryableConflictException
	RetryableConflictException *shared.RetryableConflictException
	// ValidationException
	ValidationException *shared.ValidationException
}
