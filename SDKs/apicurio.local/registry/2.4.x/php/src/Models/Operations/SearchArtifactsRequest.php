<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class SearchArtifactsRequest
{
    /**
     * Filter by contentId.
     * 
     * @var ?int $contentId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=contentId')]
    public ?int $contentId = null;
    
    /**
     * Filter by description.
     * 
     * @var ?string $description
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=description')]
    public ?string $description = null;
    
    /**
     * Filter by globalId.
     * 
     * @var ?int $globalId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=globalId')]
    public ?int $globalId = null;
    
    /**
     * Filter by artifact group.
     * 
     * @var ?string $group
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=group')]
    public ?string $group = null;
    
    /**
     * Filter by label.  Include one or more label to only return artifacts containing all of the
     * 
     * specified labels.
     * 
     * @var ?array<string> $labels
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=labels')]
    public ?array $labels = null;
    
    /**
     * The number of artifacts to return.  Defaults to 20.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Filter by artifact name.
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?string $name = null;
    
    /**
     * The number of artifacts to skip before starting to collect the result set.  Defaults to 0.
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * Sort order, ascending (`asc`) or descending (`desc`).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SortOrderEnum $order
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order')]
    public ?\OpenAPI\OpenAPI\Models\Shared\SortOrderEnum $order = null;
    
    /**
     * The field to sort by.  Can be one of:
     * 
     * 
     * * `name`
     * * `createdOn`
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SortByEnum $orderby
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=orderby')]
    public ?\OpenAPI\OpenAPI\Models\Shared\SortByEnum $orderby = null;
    
    /**
     * Filter by one or more name/value property.  Separate each name/value pair using a colon.  For
     * 
     * example `properties=foo:bar` will return only artifacts with a custom property named `foo`
     * and value `bar`.
     * 
     * @var ?array<string> $properties
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=properties')]
    public ?array $properties = null;
    
	public function __construct()
	{
		$this->contentId = null;
		$this->description = null;
		$this->globalId = null;
		$this->group = null;
		$this->labels = null;
		$this->limit = null;
		$this->name = null;
		$this->offset = null;
		$this->order = null;
		$this->orderby = null;
		$this->properties = null;
	}
}
