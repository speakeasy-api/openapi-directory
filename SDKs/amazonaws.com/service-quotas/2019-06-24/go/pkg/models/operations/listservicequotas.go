// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListServiceQuotasQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListServiceQuotasXAmzTargetEnum
type ListServiceQuotasXAmzTargetEnum string

const (
	ListServiceQuotasXAmzTargetEnumServiceQuotasV20190624ListServiceQuotas ListServiceQuotasXAmzTargetEnum = "ServiceQuotasV20190624.ListServiceQuotas"
)

func (e *ListServiceQuotasXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ServiceQuotasV20190624.ListServiceQuotas":
		*e = ListServiceQuotasXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListServiceQuotasXAmzTargetEnum: %s", s)
	}
}

type ListServiceQuotasHeaders struct {
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListServiceQuotasXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListServiceQuotasRequest struct {
	QueryParams ListServiceQuotasQueryParams
	Headers     ListServiceQuotasHeaders
	Request     shared.ListServiceQuotasRequest `request:"mediaType=application/json"`
}

type ListServiceQuotasResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// IllegalArgumentException
	IllegalArgumentException interface{}
	// InvalidPaginationTokenException
	InvalidPaginationTokenException interface{}
	// Success
	ListServiceQuotasResponse *shared.ListServiceQuotasResponse
	// NoSuchResourceException
	NoSuchResourceException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
