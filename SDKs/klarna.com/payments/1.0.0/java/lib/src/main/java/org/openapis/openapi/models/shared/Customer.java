/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Customer {
    /**
     * Customer\u2019s date of birth. The format is \u2018yyyy-mm-dd\u2019
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_of_birth")
    public String dateOfBirth;

    public Customer withDateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
        return this;
    }
    
    /**
     * Customer\u2019s gender - \u2018male\u2019 or \u2018female\u2019
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gender")
    public String gender;

    public Customer withGender(String gender) {
        this.gender = gender;
        return this;
    }
    
    /**
     * Last four digits of the customer's social security number. This value is available for US customers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_four_ssn")
    public String lastFourSsn;

    public Customer withLastFourSsn(String lastFourSsn) {
        this.lastFourSsn = lastFourSsn;
        return this;
    }
    
    /**
     * The customer's national identification number. This value is available for EU customers utilizing national identification numbers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("national_identification_number")
    public String nationalIdentificationNumber;

    public Customer withNationalIdentificationNumber(String nationalIdentificationNumber) {
        this.nationalIdentificationNumber = nationalIdentificationNumber;
        return this;
    }
    
    /**
     * Organization entity type. Only applicable for B2B customers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization_entity_type")
    public CustomerOrganizationEntityTypeEnum organizationEntityType;

    public Customer withOrganizationEntityType(CustomerOrganizationEntityTypeEnum organizationEntityType) {
        this.organizationEntityType = organizationEntityType;
        return this;
    }
    
    /**
     * Organization registration id. Only applicable for B2B customers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization_registration_id")
    public String organizationRegistrationId;

    public Customer withOrganizationRegistrationId(String organizationRegistrationId) {
        this.organizationRegistrationId = organizationRegistrationId;
        return this;
    }
    
    /**
     * Customer\u2019s Title. Allowed values per country:
     * UK - "Mr", "Ms"
     * DE - "Herr", "Frau"
     * AT: "Herr, "Frau"
     * CH: de-CH: "Herr, "Frau" it-CH: "Sig.", "Sig.ra" fr-CH: "M", "Mme" 
     * BE: "Dhr.", "Mevr."
     * NL: "Dhr.", "Mevr."
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public Customer withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Type of customer in the session. If nothing is added, a B2C session will be the default. If it is a b2b-session, you should enter organization to trigger a B2B session.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public Customer withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * VAT ID. Only applicable for B2B customers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vat_id")
    public String vatId;

    public Customer withVatId(String vatId) {
        this.vatId = vatId;
        return this;
    }
    
    public Customer(){}
}
