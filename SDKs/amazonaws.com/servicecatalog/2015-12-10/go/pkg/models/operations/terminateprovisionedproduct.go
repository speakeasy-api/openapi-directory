// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// TerminateProvisionedProductXAmzTargetEnum
type TerminateProvisionedProductXAmzTargetEnum string

const (
	TerminateProvisionedProductXAmzTargetEnumAws242ServiceCatalogServiceTerminateProvisionedProduct TerminateProvisionedProductXAmzTargetEnum = "AWS242ServiceCatalogService.TerminateProvisionedProduct"
)

func (e *TerminateProvisionedProductXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS242ServiceCatalogService.TerminateProvisionedProduct":
		*e = TerminateProvisionedProductXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TerminateProvisionedProductXAmzTargetEnum: %s", s)
	}
}

type TerminateProvisionedProductRequest struct {
	TerminateProvisionedProductInput shared.TerminateProvisionedProductInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       TerminateProvisionedProductXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type TerminateProvisionedProductResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	TerminateProvisionedProductOutput *shared.TerminateProvisionedProductOutput
}
