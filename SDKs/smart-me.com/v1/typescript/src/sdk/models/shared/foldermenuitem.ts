/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutoExportSettings } from "./autoexportsettings";
import { Expose, Type } from "class-transformer";

/**
 * The folder type of the item
 */
export enum FolderMenuItemFolderTypeEnum {
  Folder = "Folder",
  Location = "Location",
  Factory = "Factory",
  House = "House",
  Office = "Office",
  Machine = "Machine",
  VirtualMeter = "VirtualMeter",
  ElecticityFolder = "ElecticityFolder",
  WaterFolder = "WaterFolder",
  HeatFolder = "HeatFolder",
  GasFolder = "GasFolder",
  TemperatureFolder = "TemperatureFolder",
  Sun = "Sun",
  Light = "Light",
  Ice = "Ice",
  Sofa = "Sofa",
  Food = "Food",
  Coffee = "Coffee",
  Car = "Car",
  ChargingStation = "ChargingStation",
  Meter = "Meter",
  User = "User",
  Trash = "Trash",
  GridPhotovoltaicPowerSystem = "GridPhotovoltaicPowerSystem",
}

/**
 * A folder menu item
 */
export class FolderMenuItem extends SpeakeasyBase {
  /**
   * Settings for the auto export functionality of a meter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AutoExportSettings" })
  @Type(() => AutoExportSettings)
  autoExportSettings?: AutoExportSettings;

  /**
   * Children folder menu items (sub folder menu items)
   */
  @SpeakeasyMetadata({ elemType: FolderMenuItem })
  @Expose({ name: "Children" })
  @Type(() => FolderMenuItem)
  children?: FolderMenuItem[];

  /**
   * The Description of the folder
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * The folder type of the item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FolderType" })
  folderType?: FolderMenuItemFolderTypeEnum;

  /**
   * The path to the Icon of this folder
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Icon" })
  icon?: string;

  /**
   * The id of the folder menu item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  /**
   * The serial number if the folder menu item is a meter.
   *
   * @remarks
   *             Serial number is handled as a string, as javascript on client side cannot handle long integers properly.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MeterSerialNumber" })
  meterSerialNumber?: string;

  /**
   * The Name of the item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * The ID of the user of this folder (only for foldertype user)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UserId" })
  userId?: string;
}
