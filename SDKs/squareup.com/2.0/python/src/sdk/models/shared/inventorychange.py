"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import catalogmeasurementunit as shared_catalogmeasurementunit
from ..shared import inventoryadjustment as shared_inventoryadjustment
from ..shared import inventoryphysicalcount as shared_inventoryphysicalcount
from ..shared import inventorytransfer as shared_inventorytransfer
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InventoryChange:
    r"""Represents a single physical count, inventory, adjustment, or transfer
    that is part of the history of inventory changes for a particular
    [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) instance.
    """
    
    adjustment: Optional[shared_inventoryadjustment.InventoryAdjustment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adjustment'), 'exclude': lambda f: f is None }})
    r"""Represents a change in state or quantity of product inventory at a
    particular time and location.
    """  
    measurement_unit: Optional[shared_catalogmeasurementunit.CatalogMeasurementUnit] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('measurement_unit'), 'exclude': lambda f: f is None }})
    r"""Represents the unit used to measure a `CatalogItemVariation` and
    specifies the precision for decimal quantities.
    """  
    measurement_unit_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('measurement_unit_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the [CatalogMeasurementUnit](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogMeasurementUnit) object representing the catalog measurement unit associated with the inventory change."""  
    physical_count: Optional[shared_inventoryphysicalcount.InventoryPhysicalCount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('physical_count'), 'exclude': lambda f: f is None }})
    r"""Represents the quantity of an item variation that is physically present
    at a specific location, verified by a seller or a seller's employee. For example,
    a physical count might come from an employee counting the item variations on
    hand or from syncing with an external system.
    """  
    transfer: Optional[shared_inventorytransfer.InventoryTransfer] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transfer'), 'exclude': lambda f: f is None }})
    r"""Represents the transfer of a quantity of product inventory at a
    particular time from one location to another.
    """  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Indicates how the inventory change is applied. See
    [InventoryChangeType](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryChangeType) for all possible values.
    """  
    