// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetVPCEConfigurationXAmzTargetEnum
type GetVPCEConfigurationXAmzTargetEnum string

const (
	GetVPCEConfigurationXAmzTargetEnumDeviceFarm20150623GetVpceConfiguration GetVPCEConfigurationXAmzTargetEnum = "DeviceFarm_20150623.GetVPCEConfiguration"
)

func (e GetVPCEConfigurationXAmzTargetEnum) ToPointer() *GetVPCEConfigurationXAmzTargetEnum {
	return &e
}

func (e *GetVPCEConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceFarm_20150623.GetVPCEConfiguration":
		*e = GetVPCEConfigurationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVPCEConfigurationXAmzTargetEnum: %v", v)
	}
}

type GetVPCEConfigurationRequest struct {
	GetVPCEConfigurationRequest shared.GetVPCEConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  GetVPCEConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetVPCEConfigurationResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// Success
	GetVPCEConfigurationResult *shared.GetVPCEConfigurationResult
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServiceAccountException
	ServiceAccountException interface{}
}
