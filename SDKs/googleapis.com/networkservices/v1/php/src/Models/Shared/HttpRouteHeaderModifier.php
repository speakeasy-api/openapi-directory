<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HttpRouteHeaderModifier - The specification for modifying HTTP header in HTTP request and HTTP response.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HttpRouteHeaderModifier
{
    /**
     * Add the headers with given map where key is the name of the header, value is the value of the header.
     * 
     * @var ?array<string, string> $add
     */
	#[\JMS\Serializer\Annotation\SerializedName('add')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $add = null;
    
    /**
     * Remove headers (matching by header names) specified in the list.
     * 
     * @var ?array<string> $remove
     */
	#[\JMS\Serializer\Annotation\SerializedName('remove')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $remove = null;
    
    /**
     * Completely overwrite/replace the headers with given map where key is the name of the header, value is the value of the header.
     * 
     * @var ?array<string, string> $set
     */
	#[\JMS\Serializer\Annotation\SerializedName('set')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $set = null;
    
	public function __construct()
	{
		$this->add = null;
		$this->remove = null;
		$this->set = null;
	}
}
