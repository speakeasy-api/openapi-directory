// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type LicenseVideosSecurity struct {
	CustomerAccessCode string `security:"scheme,type=oauth2,name=Authorization"`
}

// LicenseVideosSizeEnum - The size of the video to license
type LicenseVideosSizeEnum string

const (
	LicenseVideosSizeEnumWeb   LicenseVideosSizeEnum = "web"
	LicenseVideosSizeEnumSd    LicenseVideosSizeEnum = "sd"
	LicenseVideosSizeEnumHd    LicenseVideosSizeEnum = "hd"
	LicenseVideosSizeEnumFourk LicenseVideosSizeEnum = "4k"
)

func (e LicenseVideosSizeEnum) ToPointer() *LicenseVideosSizeEnum {
	return &e
}

func (e *LicenseVideosSizeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "web":
		fallthrough
	case "sd":
		fallthrough
	case "hd":
		fallthrough
	case "4k":
		*e = LicenseVideosSizeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseVideosSizeEnum: %v", v)
	}
}

type LicenseVideosRequest struct {
	// List of videos to request licenses for and information about each license transaction; these values override the defaults in the query parameters
	LicenseVideoRequest shared.LicenseVideoRequest `request:"mediaType=application/json"`
	// The Search ID that led to this licensing event
	SearchID *string `queryParam:"style=form,explode=true,name=search_id"`
	// The size of the video to license
	Size *LicenseVideosSizeEnum `queryParam:"style=form,explode=true,name=size"`
	// The subscription ID to use for licensing
	SubscriptionID *string `queryParam:"style=form,explode=true,name=subscription_id"`
}

type LicenseVideosResponse struct {
	ContentType string
	// OK
	LicenseVideoResultDataList *shared.LicenseVideoResultDataList
	StatusCode                 int
	RawResponse                *http.Response
}
