/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PolicyRepresentation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("config")
    public java.util.Map<String, Object> config;
    public PolicyRepresentation withConfig(java.util.Map<String, Object> config) {
        this.config = config;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("decisionStrategy")
    public PolicyRepresentationDecisionStrategyEnum decisionStrategy;
    public PolicyRepresentation withDecisionStrategy(PolicyRepresentationDecisionStrategyEnum decisionStrategy) {
        this.decisionStrategy = decisionStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public PolicyRepresentation withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public PolicyRepresentation withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logic")
    public PolicyRepresentationLogicEnum logic;
    public PolicyRepresentation withLogic(PolicyRepresentationLogicEnum logic) {
        this.logic = logic;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PolicyRepresentation withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public String owner;
    public PolicyRepresentation withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policies")
    public String[] policies;
    public PolicyRepresentation withPolicies(String[] policies) {
        this.policies = policies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resources")
    public String[] resources;
    public PolicyRepresentation withResources(String[] resources) {
        this.resources = resources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourcesData")
    public ResourceRepresentation[] resourcesData;
    public PolicyRepresentation withResourcesData(ResourceRepresentation[] resourcesData) {
        this.resourcesData = resourcesData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scopes")
    public String[] scopes;
    public PolicyRepresentation withScopes(String[] scopes) {
        this.scopes = scopes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scopesData")
    public ScopeRepresentation[] scopesData;
    public PolicyRepresentation withScopesData(ScopeRepresentation[] scopesData) {
        this.scopesData = scopesData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public PolicyRepresentation withType(String type) {
        this.type = type;
        return this;
    }
    
}
