// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TypeEnum string

const (
	TypeEnumRelationship TypeEnum = "RELATIONSHIP"
	TypeEnumString       TypeEnum = "STRING"
	TypeEnumLong         TypeEnum = "LONG"
	TypeEnumBoolean      TypeEnum = "BOOLEAN"
	TypeEnumInteger      TypeEnum = "INTEGER"
	TypeEnumDouble       TypeEnum = "DOUBLE"
	TypeEnumList         TypeEnum = "LIST"
	TypeEnumMap          TypeEnum = "MAP"
)

func (e *TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RELATIONSHIP":
		fallthrough
	case "STRING":
		fallthrough
	case "LONG":
		fallthrough
	case "BOOLEAN":
		fallthrough
	case "INTEGER":
		fallthrough
	case "DOUBLE":
		fallthrough
	case "LIST":
		fallthrough
	case "MAP":
		*e = TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TypeEnum: %s", s)
	}
}
