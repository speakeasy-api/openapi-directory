/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContainerFeatures } from "./containerfeatures";
import { Expose, Type } from "class-transformer";

export enum ContainerUsageContextEnum {
  UsageContextUnspecified = "usageContextUnspecified",
  Web = "web",
  Android = "android",
  Ios = "ios",
  AndroidSdk5 = "androidSdk5",
  IosSdk5 = "iosSdk5",
  Amp = "amp",
  Server = "server",
}

/**
 * Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.
 */
export class Container extends SpeakeasyBase {
  /**
   * GTM Account ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * The Container ID uniquely identifies the GTM Container.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "containerId" })
  containerId?: string;

  /**
   * List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domainName" })
  domainName?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "features" })
  @Type(() => ContainerFeatures)
  features?: ContainerFeatures;

  /**
   * The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fingerprint" })
  fingerprint?: string;

  /**
   * Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * GTM Container's API relative path.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * Container Public ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publicId" })
  publicId?: string;

  /**
   * All Tag IDs that refer to this Container.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tagIds" })
  tagIds?: string[];

  /**
   * Auto generated link to the tag manager UI
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tagManagerUrl" })
  tagManagerUrl?: string;

  /**
   * List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taggingServerUrls" })
  taggingServerUrls?: string[];

  /**
   * List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usageContext" })
  usageContext?: ContainerUsageContextEnum[];
}
