// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RelativeFileVersionEnumEnum string

const (
	RelativeFileVersionEnumEnumBefore RelativeFileVersionEnumEnum = "BEFORE"
	RelativeFileVersionEnumEnumAfter  RelativeFileVersionEnumEnum = "AFTER"
)

func (e RelativeFileVersionEnumEnum) ToPointer() *RelativeFileVersionEnumEnum {
	return &e
}

func (e *RelativeFileVersionEnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BEFORE":
		fallthrough
	case "AFTER":
		*e = RelativeFileVersionEnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RelativeFileVersionEnumEnum: %v", v)
	}
}
