// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SQLInstancesStartExternalSyncRequestSyncModeEnum - External sync mode.
type SQLInstancesStartExternalSyncRequestSyncModeEnum string

const (
	SQLInstancesStartExternalSyncRequestSyncModeEnumExternalSyncModeUnspecified SQLInstancesStartExternalSyncRequestSyncModeEnum = "EXTERNAL_SYNC_MODE_UNSPECIFIED"
	SQLInstancesStartExternalSyncRequestSyncModeEnumOnline                      SQLInstancesStartExternalSyncRequestSyncModeEnum = "ONLINE"
	SQLInstancesStartExternalSyncRequestSyncModeEnumOffline                     SQLInstancesStartExternalSyncRequestSyncModeEnum = "OFFLINE"
)

func (e *SQLInstancesStartExternalSyncRequestSyncModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXTERNAL_SYNC_MODE_UNSPECIFIED":
		fallthrough
	case "ONLINE":
		fallthrough
	case "OFFLINE":
		*e = SQLInstancesStartExternalSyncRequestSyncModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SQLInstancesStartExternalSyncRequestSyncModeEnum: %s", s)
	}
}

type SQLInstancesStartExternalSyncRequest struct {
	// MySQL-specific external server sync settings.
	MysqlSyncConfig *MySQLSyncConfig `json:"mysqlSyncConfig,omitempty"`
	// Whether to skip the verification step (VESS).
	SkipVerification *bool `json:"skipVerification,omitempty"`
	// External sync mode.
	SyncMode *SQLInstancesStartExternalSyncRequestSyncModeEnum `json:"syncMode,omitempty"`
}
