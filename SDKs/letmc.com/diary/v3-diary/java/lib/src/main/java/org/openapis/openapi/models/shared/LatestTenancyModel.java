/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * LatestTenancyModel - Holds information on the most recent tenancy linked to the property.
 */
public class LatestTenancyModel {
    /**
     * Access Arrangements
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessArrangements")
    public String accessArrangements;

    public LatestTenancyModel withAccessArrangements(String accessArrangements) {
        this.accessArrangements = accessArrangements;
        return this;
    }
    
    /**
     * Arrange access Mobile 1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessMobile1")
    public String accessMobile1;

    public LatestTenancyModel withAccessMobile1(String accessMobile1) {
        this.accessMobile1 = accessMobile1;
        return this;
    }
    
    /**
     * Arrange access Mobile 2
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessMobile2")
    public String accessMobile2;

    public LatestTenancyModel withAccessMobile2(String accessMobile2) {
        this.accessMobile2 = accessMobile2;
        return this;
    }
    
    /**
     * Arrange access Mobile 3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessMobile3")
    public String accessMobile3;

    public LatestTenancyModel withAccessMobile3(String accessMobile3) {
        this.accessMobile3 = accessMobile3;
        return this;
    }
    
    /**
     * Arrange access contact name 1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessName1")
    public String accessName1;

    public LatestTenancyModel withAccessName1(String accessName1) {
        this.accessName1 = accessName1;
        return this;
    }
    
    /**
     * Arrange access contact name 2
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessName2")
    public String accessName2;

    public LatestTenancyModel withAccessName2(String accessName2) {
        this.accessName2 = accessName2;
        return this;
    }
    
    /**
     * Arrange access contact name 3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessName3")
    public String accessName3;

    public LatestTenancyModel withAccessName3(String accessName3) {
        this.accessName3 = accessName3;
        return this;
    }
    
    /**
     * ETag
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ETag")
    public String eTag;

    public LatestTenancyModel withETag(String eTag) {
        this.eTag = eTag;
        return this;
    }
    
    /**
     * The end date of the Tenancy
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndDate")
    public OffsetDateTime endDate;

    public LatestTenancyModel withEndDate(OffsetDateTime endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * The fixed date of the Tenancy
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("FixedDate")
    public OffsetDateTime fixedDate;

    public LatestTenancyModel withFixedDate(OffsetDateTime fixedDate) {
        this.fixedDate = fixedDate;
        return this;
    }
    
    /**
     * The unique global reference of the Tenancy
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalReference")
    public String globalReference;

    public LatestTenancyModel withGlobalReference(String globalReference) {
        this.globalReference = globalReference;
        return this;
    }
    
    /**
     * Has the Tenancy ended?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsTenancyEnded")
    public Boolean isTenancyEnded;

    public LatestTenancyModel withIsTenancyEnded(Boolean isTenancyEnded) {
        this.isTenancyEnded = isTenancyEnded;
        return this;
    }
    
    /**
     * Is the tenancy Proposed?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsTenancyProposed")
    public Boolean isTenancyProposed;

    public LatestTenancyModel withIsTenancyProposed(Boolean isTenancyProposed) {
        this.isTenancyProposed = isTenancyProposed;
        return this;
    }
    
    /**
     * Is the tenancy signed?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsTenancySigned")
    public Boolean isTenancySigned;

    public LatestTenancyModel withIsTenancySigned(Boolean isTenancySigned) {
        this.isTenancySigned = isTenancySigned;
        return this;
    }
    
    /**
     * A collection of tenants linked to the tenancy:-
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LinkedTenants")
    public LinkedTenantModel[] linkedTenants;

    public LatestTenancyModel withLinkedTenants(LinkedTenantModel[] linkedTenants) {
        this.linkedTenants = linkedTenants;
        return this;
    }
    
    /**
     * OID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OID")
    public String oid;

    public LatestTenancyModel withOid(String oid) {
        this.oid = oid;
        return this;
    }
    
    /**
     * The start date of the Tenancy
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartDate")
    public OffsetDateTime startDate;

    public LatestTenancyModel withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }
    
    public LatestTenancyModel(){}
}
