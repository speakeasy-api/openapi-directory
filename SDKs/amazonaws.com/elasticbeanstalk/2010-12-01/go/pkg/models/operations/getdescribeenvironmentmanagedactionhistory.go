// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeEnvironmentManagedActionHistoryActionEnum
type GETDescribeEnvironmentManagedActionHistoryActionEnum string

const (
	GETDescribeEnvironmentManagedActionHistoryActionEnumDescribeEnvironmentManagedActionHistory GETDescribeEnvironmentManagedActionHistoryActionEnum = "DescribeEnvironmentManagedActionHistory"
)

func (e GETDescribeEnvironmentManagedActionHistoryActionEnum) ToPointer() *GETDescribeEnvironmentManagedActionHistoryActionEnum {
	return &e
}

func (e *GETDescribeEnvironmentManagedActionHistoryActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeEnvironmentManagedActionHistory":
		*e = GETDescribeEnvironmentManagedActionHistoryActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEnvironmentManagedActionHistoryActionEnum: %v", v)
	}
}

// GETDescribeEnvironmentManagedActionHistoryVersionEnum
type GETDescribeEnvironmentManagedActionHistoryVersionEnum string

const (
	GETDescribeEnvironmentManagedActionHistoryVersionEnumTwoThousandAndTen1201 GETDescribeEnvironmentManagedActionHistoryVersionEnum = "2010-12-01"
)

func (e GETDescribeEnvironmentManagedActionHistoryVersionEnum) ToPointer() *GETDescribeEnvironmentManagedActionHistoryVersionEnum {
	return &e
}

func (e *GETDescribeEnvironmentManagedActionHistoryVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETDescribeEnvironmentManagedActionHistoryVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEnvironmentManagedActionHistoryVersionEnum: %v", v)
	}
}

type GETDescribeEnvironmentManagedActionHistoryRequest struct {
	Action GETDescribeEnvironmentManagedActionHistoryActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The environment ID of the target environment.
	EnvironmentID *string `queryParam:"style=form,explode=true,name=EnvironmentId"`
	// The name of the target environment.
	EnvironmentName *string `queryParam:"style=form,explode=true,name=EnvironmentName"`
	// The maximum number of items to return for a single request.
	MaxItems *int64 `queryParam:"style=form,explode=true,name=MaxItems"`
	// The pagination token returned by a previous request.
	NextToken         *string                                               `queryParam:"style=form,explode=true,name=NextToken"`
	Version           GETDescribeEnvironmentManagedActionHistoryVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeEnvironmentManagedActionHistoryResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
