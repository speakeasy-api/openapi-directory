<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Clip - A clip is a container for a specific type of asset, i.e. a title, image, video, audio or html. You use a Clip to define when an asset will display on the timeline, how long it will play for and transitions, filters and effects to apply to it.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Clip
{
    /**
     * The type of asset to display for the duration of this Clip. Value must be one of <b>TitleAsset</b>, <b>ImageAsset</b>, <b>VideoAsset</b>, <b>HtmlAsset</b>, <b>AudioAsset</b> or <b>LumaAsset</b>
     * 
     * @var mixed $asset
     */
	#[\JMS\Serializer\Annotation\SerializedName('asset')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $asset;
    
    /**
     * A motion effect to apply to the Clip. <ul>
     * 
     *   <li>`zoomIn` - slow zoom in</li>
     *   <li>`zoomOut` - slow zoom out</li>
     *   <li>`slideLeft` - slow slide (pan) left</li>
     *   <li>`slideRight` - slow slide (pan) right</li>
     *   <li>`slideUp` - slow slide (pan) up</li>
     *   <li>`slideDown` - slow slide (pan) down</li>
     * </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ClipEffectEnum $effect
     */
	#[\JMS\Serializer\Annotation\SerializedName('effect')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ClipEffectEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ClipEffectEnum $effect = null;
    
    /**
     * A filter effect to apply to the Clip. <ul>
     * 
     *   <li>`boost` - boost contrast and saturation</li>
     *   <li>`contrast` - increase contrast</li>
     *   <li>`darken` - darken the scene</li>
     *   <li>`greyscale` - remove colour</li>
     *   <li>`lighten` - lighten the scene</li>
     *   <li>`muted` - reduce saturation and contrast</li>
     *   <li>`invert` - invert colors</li>
     * </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ClipFilterEnum $filter
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ClipFilterEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ClipFilterEnum $filter = null;
    
    /**
     * Set how the asset should be scaled to fit the viewport using one of the following options: 
     * 
     *   <ul>
     *     <li>`cover` - stretch the asset to fill the viewport without maintaining the aspect ratio.</li>
     *     <li>`contain` - fit the entire asset within the viewport while maintaining the original aspect ratio.</li>
     *     <li>`crop` - scale the asset to fill the viewport while maintaining the aspect ratio. The asset will be cropped if it exceeds the bounds of the viewport.</li>
     *     <li>`none` - preserves the original asset dimensions and does not apply any scaling.</li>
     *   </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ClipFitEnum $fit
     */
	#[\JMS\Serializer\Annotation\SerializedName('fit')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ClipFitEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ClipFitEnum $fit = null;
    
    /**
     * The length, in seconds, the Clip should play for.
     * 
     * @var float $length
     */
	#[\JMS\Serializer\Annotation\SerializedName('length')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $length;
    
    /**
     * Offsets the position of an asset horizontally or vertically by a relative distance.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Offset $offset
     */
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Offset')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Offset $offset = null;
    
    /**
     * Sets the opacity of the Clip where 1 is opaque and 0 is transparent.
     * 
     * @var ?float $opacity
     */
	#[\JMS\Serializer\Annotation\SerializedName('opacity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $opacity = null;
    
    /**
     * Place the asset in one of nine predefined positions of the viewport. This is most effective for when the asset is scaled and you want to position the element to a specific position. <ul>
     * 
     *   <li>`top` - top (center)</li>
     *   <li>`topRight` - top right</li>
     *   <li>`right` - right (center)</li>
     *   <li>`bottomRight` - bottom right</li>
     *   <li>`bottom` - bottom (center)</li>
     *   <li>`bottomLeft` - bottom left</li>
     *   <li>`left` - left (center)</li>
     *   <li>`topLeft` - top left</li>
     *   <li>`center` - center</li>
     * </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ClipPositionEnum $position
     */
	#[\JMS\Serializer\Annotation\SerializedName('position')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ClipPositionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ClipPositionEnum $position = null;
    
    /**
     * Scale the asset to a fraction of the viewport size - i.e. setting the scale to 0.5 will scale asset to half the size of the viewport. This is useful for picture-in-picture video and  scaling images such as logos and watermarks.
     * 
     * @var ?float $scale
     */
	#[\JMS\Serializer\Annotation\SerializedName('scale')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $scale = null;
    
    /**
     * The start position of the Clip on the timeline, in seconds.
     * 
     * @var float $start
     */
	#[\JMS\Serializer\Annotation\SerializedName('start')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $start;
    
    /**
     * In and out transitions for a clip - i.e. fade in and fade out
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Transition $transition
     */
	#[\JMS\Serializer\Annotation\SerializedName('transition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Transition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Transition $transition = null;
    
	public function __construct()
	{
		$this->asset = null;
		$this->effect = null;
		$this->filter = null;
		$this->fit = null;
		$this->length = 0;
		$this->offset = null;
		$this->opacity = null;
		$this->position = null;
		$this->scale = null;
		$this->start = 0;
		$this->transition = null;
	}
}
