// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListTagsForResourceHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListTagsForResourceRequestBody struct {
	// If you specify this parameter and the result of a <code>ListTagsForResource</code> call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags.
	NextToken *string `json:"NextToken,omitempty"`
	// The Amazon Resource Name (ARN) of the signaling channel for which you want to list tags.
	ResourceARN string `json:"ResourceARN"`
}

type ListTagsForResourceRequest struct {
	Headers ListTagsForResourceHeaders
	Request ListTagsForResourceRequestBody `request:"mediaType=application/json"`
}

type ListTagsForResourceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientLimitExceededException
	ClientLimitExceededException interface{}
	ContentType                  string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// Success
	ListTagsForResourceOutput *shared.ListTagsForResourceOutput
	StatusCode                int
	RawResponse               *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
