// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListThingRegistrationTaskReportsReportTypeEnum - The type of task report.
type ListThingRegistrationTaskReportsReportTypeEnum string

const (
	ListThingRegistrationTaskReportsReportTypeEnumErrors  ListThingRegistrationTaskReportsReportTypeEnum = "ERRORS"
	ListThingRegistrationTaskReportsReportTypeEnumResults ListThingRegistrationTaskReportsReportTypeEnum = "RESULTS"
)

func (e *ListThingRegistrationTaskReportsReportTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ERRORS":
		fallthrough
	case "RESULTS":
		*e = ListThingRegistrationTaskReportsReportTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListThingRegistrationTaskReportsReportTypeEnum: %s", s)
	}
}

type ListThingRegistrationTaskReportsRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The maximum number of results to return per request.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// The type of task report.
	ReportType ListThingRegistrationTaskReportsReportTypeEnum `queryParam:"style=form,explode=true,name=reportType"`
	// The id of the task.
	TaskID string `pathParam:"style=simple,explode=false,name=taskId"`
}

type ListThingRegistrationTaskReportsResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListThingRegistrationTaskReportsResponse *shared.ListThingRegistrationTaskReportsResponse
	StatusCode                               int
	RawResponse                              *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
