/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The type for this transaction
 */
export enum TransactionTypeEnum {
  Payment = "payment",
  Refund = "refund",
}

/**
 * A transaction for an app initiated by a user
 */
export class Transaction extends SpeakeasyBase {
  /**
   * The total amount paid in cents
   */
  @SpeakeasyMetadata()
  amount: number;

  /**
   * The id of the app involved with this transaction
   */
  @SpeakeasyMetadata()
  appId: string;

  /**
   * A custom JSON object that you can create and attach to this record
   */
  @SpeakeasyMetadata()
  customData?: Record<string, any>;

  /**
   * The date (in millis) of when this transaction occurred
   */
  @SpeakeasyMetadata()
  date: number;

  /**
   * The total amount paid to the developer in cents
   */
  @SpeakeasyMetadata()
  developerAmount?: number;

  /**
   * The id of the developer involved with this transaction
   */
  @SpeakeasyMetadata()
  developerId: string;

  /**
   * The total amount paid to payment processing fees in cents
   */
  @SpeakeasyMetadata()
  feeAmount?: number;

  /**
   * The total amount paid to the marketplace owner in cents
   */
  @SpeakeasyMetadata()
  marketplaceAmount?: number;

  /**
   * The id for the ownership associated with this transaction
   */
  @SpeakeasyMetadata()
  ownershipId: string;

  /**
   * The id for this transaction
   */
  @SpeakeasyMetadata()
  transactionId: string;

  /**
   * The type for this transaction
   */
  @SpeakeasyMetadata()
  type: TransactionTypeEnum;

  /**
   * The id of the user making the transaction
   */
  @SpeakeasyMetadata()
  userId: string;
}
