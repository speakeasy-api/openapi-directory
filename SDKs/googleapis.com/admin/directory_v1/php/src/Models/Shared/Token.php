<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Token - JSON template for token resource in Directory API.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Token
{
    /**
     * Whether the application is registered with Google. The value is `true` if the application has an anonymous Client ID.
     * 
     * @var ?bool $anonymous
     */
	#[\JMS\Serializer\Annotation\SerializedName('anonymous')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $anonymous = null;
    
    /**
     * The Client ID of the application the token is issued to.
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * The displayable name of the application the token is issued to.
     * 
     * @var ?string $displayText
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayText = null;
    
    /**
     * ETag of the resource.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * The type of the API resource. This is always `admin#directory#token`.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Whether the token is issued to an installed application. The value is `true` if the application is installed to a desktop or mobile device.
     * 
     * @var ?bool $nativeApp
     */
	#[\JMS\Serializer\Annotation\SerializedName('nativeApp')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $nativeApp = null;
    
    /**
     * A list of authorization scopes the application is granted.
     * 
     * @var ?array<string> $scopes
     */
	#[\JMS\Serializer\Annotation\SerializedName('scopes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scopes = null;
    
    /**
     * The unique ID of the user that issued the token.
     * 
     * @var ?string $userKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('userKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userKey = null;
    
	public function __construct()
	{
		$this->anonymous = null;
		$this->clientId = null;
		$this->displayText = null;
		$this->etag = null;
		$this->kind = null;
		$this->nativeApp = null;
		$this->scopes = null;
		$this->userKey = null;
	}
}
