"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import contactaddress as shared_contactaddress
from ..shared import phonenumber as shared_phonenumber
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Contact:
    r"""This complex type contains contact information for an individual buyer or seller."""
    
    company_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companyName'), 'exclude': lambda f: f is None }})
    r"""The company name with which the contact is associated."""  
    contact_address: Optional[shared_contactaddress.ContactAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactAddress'), 'exclude': lambda f: f is None }})
    r"""This complex type specifies the details of a geographical address."""  
    full_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullName'), 'exclude': lambda f: f is None }})
    r"""The contact's full name."""  
    primary_phone: Optional[shared_phonenumber.PhoneNumber] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryPhone'), 'exclude': lambda f: f is None }})
    r"""This complex type contains a string field representing a telephone number."""  
    