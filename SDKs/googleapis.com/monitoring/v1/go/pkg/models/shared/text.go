// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TextFormatEnum - How the text content is formatted.
type TextFormatEnum string

const (
	TextFormatEnumFormatUnspecified TextFormatEnum = "FORMAT_UNSPECIFIED"
	TextFormatEnumMarkdown          TextFormatEnum = "MARKDOWN"
	TextFormatEnumRaw               TextFormatEnum = "RAW"
)

func (e *TextFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FORMAT_UNSPECIFIED":
		fallthrough
	case "MARKDOWN":
		fallthrough
	case "RAW":
		*e = TextFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TextFormatEnum: %s", s)
	}
}

// Text - A widget that displays textual content.
type Text struct {
	// The text content to be displayed.
	Content *string `json:"content,omitempty"`
	// How the text content is formatted.
	Format *TextFormatEnum `json:"format,omitempty"`
}
