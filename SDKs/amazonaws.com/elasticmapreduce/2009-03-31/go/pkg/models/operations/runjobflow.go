// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RunJobFlowXAmzTargetEnum
type RunJobFlowXAmzTargetEnum string

const (
	RunJobFlowXAmzTargetEnumElasticMapReduceRunJobFlow RunJobFlowXAmzTargetEnum = "ElasticMapReduce.RunJobFlow"
)

func (e RunJobFlowXAmzTargetEnum) ToPointer() *RunJobFlowXAmzTargetEnum {
	return &e
}

func (e *RunJobFlowXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ElasticMapReduce.RunJobFlow":
		*e = RunJobFlowXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RunJobFlowXAmzTargetEnum: %v", v)
	}
}

type RunJobFlowRequest struct {
	RunJobFlowInput   shared.RunJobFlowInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        RunJobFlowXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RunJobFlowResponse struct {
	ContentType string
	// InternalServerError
	InternalServerError interface{}
	// Success
	RunJobFlowOutput *shared.RunJobFlowOutput
	StatusCode       int
	RawResponse      *http.Response
}
