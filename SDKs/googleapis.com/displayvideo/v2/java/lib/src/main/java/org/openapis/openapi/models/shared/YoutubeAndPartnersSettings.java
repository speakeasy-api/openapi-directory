/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * YoutubeAndPartnersSettings - Settings for YouTube and Partners line items.
 */
public class YoutubeAndPartnersSettings {
    /**
     * Settings that control the bid strategy for YouTube and Partners resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("biddingStrategy")
    public YoutubeAndPartnersBiddingStrategy biddingStrategy;

    public YoutubeAndPartnersSettings withBiddingStrategy(YoutubeAndPartnersBiddingStrategy biddingStrategy) {
        this.biddingStrategy = biddingStrategy;
        return this;
    }
    
    /**
     * The kind of content on which the YouTube and Partners ads will be shown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentCategory")
    public YoutubeAndPartnersSettingsContentCategoryEnum contentCategory;

    public YoutubeAndPartnersSettings withContentCategory(YoutubeAndPartnersSettingsContentCategoryEnum contentCategory) {
        this.contentCategory = contentCategory;
        return this;
    }
    
    /**
     * Settings that control what YouTube related inventories the YouTube and Partners line item will target.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventorySourceSettings")
    public YoutubeAndPartnersInventorySourceConfig inventorySourceSettings;

    public YoutubeAndPartnersSettings withInventorySourceSettings(YoutubeAndPartnersInventorySourceConfig inventorySourceSettings) {
        this.inventorySourceSettings = inventorySourceSettings;
        return this;
    }
    
    /**
     * The ID of the form to generate leads.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("leadFormId")
    public String leadFormId;

    public YoutubeAndPartnersSettings withLeadFormId(String leadFormId) {
        this.leadFormId = leadFormId;
        return this;
    }
    
    /**
     * The ID of the merchant which is linked to the line item for product feed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedMerchantId")
    public String linkedMerchantId;

    public YoutubeAndPartnersSettings withLinkedMerchantId(String linkedMerchantId) {
        this.linkedMerchantId = linkedMerchantId;
        return this;
    }
    
    /**
     * The IDs of the videos appear below the primary video ad when the ad is playing in the YouTube app on mobile devices.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedVideoIds")
    public String[] relatedVideoIds;

    public YoutubeAndPartnersSettings withRelatedVideoIds(String[] relatedVideoIds) {
        this.relatedVideoIds = relatedVideoIds;
        return this;
    }
    
    /**
     * Setting that controls the average number of times the ads will show to the same person over a certain period of time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetFrequency")
    public TargetFrequency targetFrequency;

    public YoutubeAndPartnersSettings withTargetFrequency(TargetFrequency targetFrequency) {
        this.targetFrequency = targetFrequency;
        return this;
    }
    
    /**
     * Settings that control what third-party vendors are measuring specific line item metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thirdPartyMeasurementSettings")
    public YoutubeAndPartnersThirdPartyMeasurementSettings thirdPartyMeasurementSettings;

    public YoutubeAndPartnersSettings withThirdPartyMeasurementSettings(YoutubeAndPartnersThirdPartyMeasurementSettings thirdPartyMeasurementSettings) {
        this.thirdPartyMeasurementSettings = thirdPartyMeasurementSettings;
        return this;
    }
    
    /**
     * Settings related to VideoAdSequence.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoAdSequenceSettings")
    public VideoAdSequenceSettings videoAdSequenceSettings;

    public YoutubeAndPartnersSettings withVideoAdSequenceSettings(VideoAdSequenceSettings videoAdSequenceSettings) {
        this.videoAdSequenceSettings = videoAdSequenceSettings;
        return this;
    }
    
    /**
     * Settings that control the number of times a user may be shown with the same ad during a given time period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("viewFrequencyCap")
    public FrequencyCap viewFrequencyCap;

    public YoutubeAndPartnersSettings withViewFrequencyCap(FrequencyCap viewFrequencyCap) {
        this.viewFrequencyCap = viewFrequencyCap;
        return this;
    }
    
    public YoutubeAndPartnersSettings(){}
}
