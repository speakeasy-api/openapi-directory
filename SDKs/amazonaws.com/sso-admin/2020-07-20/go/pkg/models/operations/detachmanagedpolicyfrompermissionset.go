// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DetachManagedPolicyFromPermissionSetXAmzTargetEnum
type DetachManagedPolicyFromPermissionSetXAmzTargetEnum string

const (
	DetachManagedPolicyFromPermissionSetXAmzTargetEnumSwbExternalServiceDetachManagedPolicyFromPermissionSet DetachManagedPolicyFromPermissionSetXAmzTargetEnum = "SWBExternalService.DetachManagedPolicyFromPermissionSet"
)

func (e DetachManagedPolicyFromPermissionSetXAmzTargetEnum) ToPointer() *DetachManagedPolicyFromPermissionSetXAmzTargetEnum {
	return &e
}

func (e *DetachManagedPolicyFromPermissionSetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SWBExternalService.DetachManagedPolicyFromPermissionSet":
		*e = DetachManagedPolicyFromPermissionSetXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DetachManagedPolicyFromPermissionSetXAmzTargetEnum: %v", v)
	}
}

type DetachManagedPolicyFromPermissionSetRequest struct {
	DetachManagedPolicyFromPermissionSetRequest shared.DetachManagedPolicyFromPermissionSetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                               *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                           *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                              *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                    *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                           *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                               *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                           *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                  DetachManagedPolicyFromPermissionSetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DetachManagedPolicyFromPermissionSetResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	DetachManagedPolicyFromPermissionSetResponse map[string]interface{}
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
