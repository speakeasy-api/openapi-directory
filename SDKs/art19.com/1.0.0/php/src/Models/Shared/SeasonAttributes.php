<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SeasonAttributes
{
    /**
     * This will be replaced by the relationship `cascaded_cover_image` in a future update.<br/>
     * 
     * The image ID of the cover art for this season. If there is no specific cover for the season,
     * the image ID of the series' cover art will be returned.
     * The `/images` endpoint provideds details to the image.
     * 
     * 
     * @var ?string $cascadedCoverImageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('cascaded_cover_image_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cascadedCoverImageId = null;
    
    /**
     * This will be replaced by the relationship `cover_image` in a future update.<br/>
     * 
     * The image ID of the cover art for this season. The `/images` endpoint provideds details to the image.
     * 
     * 
     * @var ?string $coverImageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('cover_image_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $coverImageId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * The description of the season eventually in HTML format
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Determines whether `description` is in HTML format or plain.
     * 
     * @var ?bool $descriptionIsHtml
     */
	#[\JMS\Serializer\Annotation\SerializedName('description_is_html')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $descriptionIsHtml = null;
    
    /**
     * The description with all HTML markup removed. If the description does not contain markup
     * 
     * this is identitcal to `description`.
     * 
     * 
     * @var ?string $descriptionPlain
     */
	#[\JMS\Serializer\Annotation\SerializedName('description_plain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $descriptionPlain = null;
    
    /**
     * This will be replaced by the relationship `first_released_episode` in a future update.<br/>
     * 
     * The ID of the first released episode within the season
     * 
     * 
     * @var ?string $firstReleasedEpisodeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('first_released_episode_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstReleasedEpisodeId = null;
    
    /**
     * This will be replaced by the relationship `last_released_episode` in a future update.<br/>
     * 
     * The ID of the most recently released episode within the season
     * 
     * 
     * @var ?string $lastReleasedEpisodeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_released_episode_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastReleasedEpisodeId = null;
    
    /**
     * The number of the season. This could be `null` as well.
     * 
     * @var ?int $seasonNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('season_number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $seasonNumber = null;
    
    /**
     * The title of the season modified for sorting. This converts all characters to
     * 
     * lower case, removes an eventually leading `The` as well as leading and trailling whitespace characters.
     * 
     * 
     * @var ?string $sortTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort_title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sortTitle = null;
    
    /**
     * The current status of the season
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SeasonAttributesStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SeasonAttributesStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SeasonAttributesStatusEnum $status = null;
    
    /**
     * The title of the season
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
	public function __construct()
	{
		$this->cascadedCoverImageId = null;
		$this->coverImageId = null;
		$this->createdAt = null;
		$this->description = null;
		$this->descriptionIsHtml = null;
		$this->descriptionPlain = null;
		$this->firstReleasedEpisodeId = null;
		$this->lastReleasedEpisodeId = null;
		$this->seasonNumber = null;
		$this->sortTitle = null;
		$this->status = null;
		$this->title = null;
		$this->updatedAt = null;
	}
}
