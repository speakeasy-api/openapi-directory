// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListJobExecutionsForJobPathParams struct {
	// The unique identifier you assigned to this job when it was created.
	JobID string `pathParam:"style=simple,explode=false,name=jobId"`
}

// ListJobExecutionsForJobStatusEnum - The status of the job.
type ListJobExecutionsForJobStatusEnum string

const (
	ListJobExecutionsForJobStatusEnumQueued     ListJobExecutionsForJobStatusEnum = "QUEUED"
	ListJobExecutionsForJobStatusEnumInProgress ListJobExecutionsForJobStatusEnum = "IN_PROGRESS"
	ListJobExecutionsForJobStatusEnumSucceeded  ListJobExecutionsForJobStatusEnum = "SUCCEEDED"
	ListJobExecutionsForJobStatusEnumFailed     ListJobExecutionsForJobStatusEnum = "FAILED"
	ListJobExecutionsForJobStatusEnumTimedOut   ListJobExecutionsForJobStatusEnum = "TIMED_OUT"
	ListJobExecutionsForJobStatusEnumRejected   ListJobExecutionsForJobStatusEnum = "REJECTED"
	ListJobExecutionsForJobStatusEnumRemoved    ListJobExecutionsForJobStatusEnum = "REMOVED"
	ListJobExecutionsForJobStatusEnumCanceled   ListJobExecutionsForJobStatusEnum = "CANCELED"
)

func (e *ListJobExecutionsForJobStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "QUEUED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "TIMED_OUT":
		fallthrough
	case "REJECTED":
		fallthrough
	case "REMOVED":
		fallthrough
	case "CANCELED":
		*e = ListJobExecutionsForJobStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListJobExecutionsForJobStatusEnum: %s", s)
	}
}

type ListJobExecutionsForJobQueryParams struct {
	// The maximum number of results to be returned per request.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The token to retrieve the next set of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// The status of the job.
	Status *ListJobExecutionsForJobStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type ListJobExecutionsForJobHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListJobExecutionsForJobRequest struct {
	PathParams  ListJobExecutionsForJobPathParams
	QueryParams ListJobExecutionsForJobQueryParams
	Headers     ListJobExecutionsForJobHeaders
}

type ListJobExecutionsForJobResponse struct {
	ContentType string
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListJobExecutionsForJobResponse *shared.ListJobExecutionsForJobResponse
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
