"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NADevice = void 0;
var utils_1 = require("../../../internal/utils");
var nadashboarddata_1 = require("./nadashboarddata");
var nadate_1 = require("./nadate");
var naheatingsystem_1 = require("./naheatingsystem");
var nahousemodel_1 = require("./nahousemodel");
var naobject_1 = require("./naobject");
var naplace_1 = require("./naplace");
var nathermprogram_1 = require("./nathermprogram");
var class_transformer_1 = require("class-transformer");
var NADevice = /** @class */ (function (_super) {
    __extends(NADevice, _super);
    function NADevice() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "_id" }),
        __metadata("design:type", String)
    ], NADevice.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "behavior" }),
        __metadata("design:type", Number)
    ], NADevice.prototype, "behavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cipher_id" }),
        __metadata("design:type", String)
    ], NADevice.prototype, "cipherId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dashboard_data" }),
        (0, class_transformer_1.Type)(function () { return nadashboarddata_1.NADashboardData; }),
        __metadata("design:type", nadashboarddata_1.NADashboardData)
    ], NADevice.prototype, "dashboardData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "data_type" }),
        __metadata("design:type", Array)
    ], NADevice.prototype, "dataType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "date_setup" }),
        (0, class_transformer_1.Type)(function () { return nadate_1.NADate; }),
        __metadata("design:type", nadate_1.NADate)
    ], NADevice.prototype, "dateSetup", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "firmware" }),
        __metadata("design:type", Number)
    ], NADevice.prototype, "firmware", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "first_pid_avail" }),
        __metadata("design:type", Boolean)
    ], NADevice.prototype, "firstPidAvail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "heating_system" }),
        (0, class_transformer_1.Type)(function () { return naheatingsystem_1.NAHeatingSystem; }),
        __metadata("design:type", naheatingsystem_1.NAHeatingSystem)
    ], NADevice.prototype, "heatingSystem", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "house_model" }),
        (0, class_transformer_1.Type)(function () { return nahousemodel_1.NAHouseModel; }),
        __metadata("design:type", nahousemodel_1.NAHouseModel)
    ], NADevice.prototype, "houseModel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hw_version" }),
        __metadata("design:type", Number)
    ], NADevice.prototype, "hwVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ip" }),
        __metadata("design:type", String)
    ], NADevice.prototype, "ip", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "last_fw_update" }),
        __metadata("design:type", Number)
    ], NADevice.prototype, "lastFwUpdate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "last_radio_store" }),
        __metadata("design:type", Number)
    ], NADevice.prototype, "lastRadioStore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "last_status_store" }),
        __metadata("design:type", Number)
    ], NADevice.prototype, "lastStatusStore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "last_upgrade" }),
        __metadata("design:type", Number)
    ], NADevice.prototype, "lastUpgrade", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "module_name" }),
        __metadata("design:type", String)
    ], NADevice.prototype, "moduleName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "modules" }),
        __metadata("design:type", Array)
    ], NADevice.prototype, "modules", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "new_feature_avail" }),
        __metadata("design:type", Boolean)
    ], NADevice.prototype, "newFeatureAvail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "place" }),
        (0, class_transformer_1.Type)(function () { return naplace_1.NAPlace; }),
        __metadata("design:type", naplace_1.NAPlace)
    ], NADevice.prototype, "place", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "public_ext_data" }),
        __metadata("design:type", Boolean)
    ], NADevice.prototype, "publicExtData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "setpoint" }),
        __metadata("design:type", Object)
    ], NADevice.prototype, "setpoint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "setpoint_default_duration" }),
        __metadata("design:type", Number)
    ], NADevice.prototype, "setpointDefaultDuration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: naobject_1.NAObject, elemDepth: 2 }),
        (0, class_transformer_1.Expose)({ name: "setpoint_order" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], naobject_1.NAObject);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], NADevice.prototype, "setpointOrder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "station_name" }),
        __metadata("design:type", String)
    ], NADevice.prototype, "stationName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: nathermprogram_1.NAThermProgram }),
        (0, class_transformer_1.Expose)({ name: "therm_program" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], nathermprogram_1.NAThermProgram);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], NADevice.prototype, "thermProgram", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: nathermprogram_1.NAThermProgram, elemDepth: 2 }),
        (0, class_transformer_1.Expose)({ name: "therm_program_backup" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], nathermprogram_1.NAThermProgram);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], NADevice.prototype, "thermProgramBackup", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: naobject_1.NAObject, elemDepth: 2 }),
        (0, class_transformer_1.Expose)({ name: "therm_program_order" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], naobject_1.NAObject);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], NADevice.prototype, "thermProgramOrder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], NADevice.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "udp_conn" }),
        __metadata("design:type", Boolean)
    ], NADevice.prototype, "udpConn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "user_owner" }),
        __metadata("design:type", Array)
    ], NADevice.prototype, "userOwner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "wifi_status" }),
        __metadata("design:type", Number)
    ], NADevice.prototype, "wifiStatus", void 0);
    return NADevice;
}(utils_1.SpeakeasyBase));
exports.NADevice = NADevice;
