<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateConferenceRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('conferenceSolutionKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConferenceSolutionKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConferenceSolutionKey $conferenceSolutionKey = null;
    
    /**
     * The client-generated unique ID for this request.
     * 
     * Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored.
     * 
     * @var ?string $requestId
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConferenceRequestStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConferenceRequestStatus $status = null;
    
	public function __construct()
	{
		$this->conferenceSolutionKey = null;
		$this->requestId = null;
		$this->status = null;
	}
}
