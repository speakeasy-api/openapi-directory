/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClusterEndpointEncryptionTypeEnum } from "./clusterendpointencryptiontypeenum";
import { SSESpecification } from "./ssespecification";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateClusterRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AvailabilityZones" })
  availabilityZones?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ClusterEndpointEncryptionType" })
  clusterEndpointEncryptionType?: ClusterEndpointEncryptionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ClusterName" })
  clusterName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IamRoleArn" })
  iamRoleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NodeType" })
  nodeType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotificationTopicArn" })
  notificationTopicArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParameterGroupName" })
  parameterGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PreferredMaintenanceWindow" })
  preferredMaintenanceWindow?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationFactor" })
  replicationFactor: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SSESpecification" })
  @Type(() => SSESpecification)
  sseSpecification?: SSESpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityGroupIds" })
  securityGroupIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetGroupName" })
  subnetGroupName?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
