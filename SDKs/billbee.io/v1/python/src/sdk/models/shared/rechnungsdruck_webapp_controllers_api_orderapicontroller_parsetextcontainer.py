"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RechnungsdruckWebAppControllersAPIOrderAPIControllerParseTextContainer:
    
    is_html: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsHtml'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'IsHtml' }})
    r"""If true, the string will be handled as html."""  
    language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Language'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Language' }})
    r"""The ISO 639-1 code of the target language. Using default if not set."""  
    text_to_parse: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TextToParse'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'TextToParse' }})
    r"""The text to parse and replace the placeholders in."""  
    trim: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Trim'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Trim' }})
    r"""If true, then the placeholder values are trimmed after usage."""  
    