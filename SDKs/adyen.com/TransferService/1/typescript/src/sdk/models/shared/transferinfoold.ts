/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Amount } from "./amount";
import { InternalPartyIdentification } from "./internalpartyidentification";
import { PartyIdentification } from "./partyidentification";
import { Expose, Type } from "class-transformer";

export class TransferInfoOld extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  @Type(() => Amount)
  amount: Amount;

  /**
   * A human-readable description for the transfer. You can use alphanumeric characters and hyphens. We recommend sending a maximum of 140 characters, otherwise the description will be truncated in the webhooks that you receive about the transfer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  @Type(() => PartyIdentification)
  destination: PartyIdentification;

  /**
   * Your unique reference for the transfer. You can use alphanumeric characters and hyphens. Maximum length: 80 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => InternalPartyIdentification)
  source: InternalPartyIdentification;
}
