// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeliveryErrorErrorClassEnum - The class of delivery error.
type DeliveryErrorErrorClassEnum string

const (
	DeliveryErrorErrorClassEnumDeliveryErrorClassUnspecified DeliveryErrorErrorClassEnum = "DELIVERY_ERROR_CLASS_UNSPECIFIED"
	DeliveryErrorErrorClassEnumPermanentError                DeliveryErrorErrorClassEnum = "PERMANENT_ERROR"
	DeliveryErrorErrorClassEnumTemporaryError                DeliveryErrorErrorClassEnum = "TEMPORARY_ERROR"
)

func (e *DeliveryErrorErrorClassEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DELIVERY_ERROR_CLASS_UNSPECIFIED":
		fallthrough
	case "PERMANENT_ERROR":
		fallthrough
	case "TEMPORARY_ERROR":
		*e = DeliveryErrorErrorClassEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeliveryErrorErrorClassEnum: %s", s)
	}
}

// DeliveryErrorErrorTypeEnum - The type of delivery error.
type DeliveryErrorErrorTypeEnum string

const (
	DeliveryErrorErrorTypeEnumDeliveryErrorTypeUnspecified DeliveryErrorErrorTypeEnum = "DELIVERY_ERROR_TYPE_UNSPECIFIED"
	DeliveryErrorErrorTypeEnumRateLimitExceeded            DeliveryErrorErrorTypeEnum = "RATE_LIMIT_EXCEEDED"
	DeliveryErrorErrorTypeEnumSuspectedSpam                DeliveryErrorErrorTypeEnum = "SUSPECTED_SPAM"
	DeliveryErrorErrorTypeEnumContentSpammy                DeliveryErrorErrorTypeEnum = "CONTENT_SPAMMY"
	DeliveryErrorErrorTypeEnumBadAttachment                DeliveryErrorErrorTypeEnum = "BAD_ATTACHMENT"
	DeliveryErrorErrorTypeEnumBadDmarcPolicy               DeliveryErrorErrorTypeEnum = "BAD_DMARC_POLICY"
	DeliveryErrorErrorTypeEnumLowIPReputation              DeliveryErrorErrorTypeEnum = "LOW_IP_REPUTATION"
	DeliveryErrorErrorTypeEnumLowDomainReputation          DeliveryErrorErrorTypeEnum = "LOW_DOMAIN_REPUTATION"
	DeliveryErrorErrorTypeEnumIPInRbl                      DeliveryErrorErrorTypeEnum = "IP_IN_RBL"
	DeliveryErrorErrorTypeEnumDomainInRbl                  DeliveryErrorErrorTypeEnum = "DOMAIN_IN_RBL"
	DeliveryErrorErrorTypeEnumBadPtrRecord                 DeliveryErrorErrorTypeEnum = "BAD_PTR_RECORD"
)

func (e *DeliveryErrorErrorTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DELIVERY_ERROR_TYPE_UNSPECIFIED":
		fallthrough
	case "RATE_LIMIT_EXCEEDED":
		fallthrough
	case "SUSPECTED_SPAM":
		fallthrough
	case "CONTENT_SPAMMY":
		fallthrough
	case "BAD_ATTACHMENT":
		fallthrough
	case "BAD_DMARC_POLICY":
		fallthrough
	case "LOW_IP_REPUTATION":
		fallthrough
	case "LOW_DOMAIN_REPUTATION":
		fallthrough
	case "IP_IN_RBL":
		fallthrough
	case "DOMAIN_IN_RBL":
		fallthrough
	case "BAD_PTR_RECORD":
		*e = DeliveryErrorErrorTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeliveryErrorErrorTypeEnum: %s", s)
	}
}

// DeliveryError - Metric on a particular delivery error type.
type DeliveryError struct {
	// The class of delivery error.
	ErrorClass *DeliveryErrorErrorClassEnum `json:"errorClass,omitempty"`
	// The ratio of messages where the error occurred vs all authenticated traffic.
	ErrorRatio *float64 `json:"errorRatio,omitempty"`
	// The type of delivery error.
	ErrorType *DeliveryErrorErrorTypeEnum `json:"errorType,omitempty"`
}
