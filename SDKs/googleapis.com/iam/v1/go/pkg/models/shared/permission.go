// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PermissionCustomRolesSupportLevelEnum - The current custom role support level.
type PermissionCustomRolesSupportLevelEnum string

const (
	PermissionCustomRolesSupportLevelEnumSupported    PermissionCustomRolesSupportLevelEnum = "SUPPORTED"
	PermissionCustomRolesSupportLevelEnumTesting      PermissionCustomRolesSupportLevelEnum = "TESTING"
	PermissionCustomRolesSupportLevelEnumNotSupported PermissionCustomRolesSupportLevelEnum = "NOT_SUPPORTED"
)

func (e *PermissionCustomRolesSupportLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUPPORTED":
		fallthrough
	case "TESTING":
		fallthrough
	case "NOT_SUPPORTED":
		*e = PermissionCustomRolesSupportLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PermissionCustomRolesSupportLevelEnum: %s", s)
	}
}

// PermissionStageEnum - The current launch stage of the permission.
type PermissionStageEnum string

const (
	PermissionStageEnumAlpha      PermissionStageEnum = "ALPHA"
	PermissionStageEnumBeta       PermissionStageEnum = "BETA"
	PermissionStageEnumGa         PermissionStageEnum = "GA"
	PermissionStageEnumDeprecated PermissionStageEnum = "DEPRECATED"
)

func (e *PermissionStageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ALPHA":
		fallthrough
	case "BETA":
		fallthrough
	case "GA":
		fallthrough
	case "DEPRECATED":
		*e = PermissionStageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PermissionStageEnum: %s", s)
	}
}

// Permission - A permission which can be included by a role.
type Permission struct {
	// The service API associated with the permission is not enabled.
	APIDisabled *bool `json:"apiDisabled,omitempty"`
	// The current custom role support level.
	CustomRolesSupportLevel *PermissionCustomRolesSupportLevelEnum `json:"customRolesSupportLevel,omitempty"`
	// A brief description of what this Permission is used for. This permission can ONLY be used in predefined roles.
	Description *string `json:"description,omitempty"`
	// The name of this Permission.
	Name                  *string `json:"name,omitempty"`
	OnlyInPredefinedRoles *bool   `json:"onlyInPredefinedRoles,omitempty"`
	// The preferred name for this permission. If present, then this permission is an alias of, and equivalent to, the listed primary_permission.
	PrimaryPermission *string `json:"primaryPermission,omitempty"`
	// The current launch stage of the permission.
	Stage *PermissionStageEnum `json:"stage,omitempty"`
	// The title of this Permission.
	Title *string `json:"title,omitempty"`
}
