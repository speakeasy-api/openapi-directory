// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateProjectVisibilityXAmzTargetEnum
type UpdateProjectVisibilityXAmzTargetEnum string

const (
	UpdateProjectVisibilityXAmzTargetEnumCodeBuild20161006UpdateProjectVisibility UpdateProjectVisibilityXAmzTargetEnum = "CodeBuild_20161006.UpdateProjectVisibility"
)

func (e UpdateProjectVisibilityXAmzTargetEnum) ToPointer() *UpdateProjectVisibilityXAmzTargetEnum {
	return &e
}

func (e *UpdateProjectVisibilityXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeBuild_20161006.UpdateProjectVisibility":
		*e = UpdateProjectVisibilityXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateProjectVisibilityXAmzTargetEnum: %v", v)
	}
}

type UpdateProjectVisibilityRequest struct {
	UpdateProjectVisibilityInput shared.UpdateProjectVisibilityInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   UpdateProjectVisibilityXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateProjectVisibilityResponse struct {
	ContentType string
	// InvalidInputException
	InvalidInputException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateProjectVisibilityOutput *shared.UpdateProjectVisibilityOutput
}
