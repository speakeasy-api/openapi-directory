/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LastReportGenerationExecutionError } from "./lastreportgenerationexecutionerror";
import { UsageReportScheduleEnum } from "./usagereportscheduleenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes information about the usage report subscription.
 */
export class UsageReportSubscription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "LastGeneratedReportDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastGeneratedReportDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "S3BucketName" })
  s3BucketName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Schedule" })
  schedule?: UsageReportScheduleEnum;

  @SpeakeasyMetadata({ elemType: LastReportGenerationExecutionError })
  @Expose({ name: "SubscriptionErrors" })
  @Type(() => LastReportGenerationExecutionError)
  subscriptionErrors?: LastReportGenerationExecutionError[];
}
