"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import admineventrepresentation as shared_admineventrepresentation
from typing import Optional


@dataclasses.dataclass
class GetRealmAdminEventsRequest:
    
    realm: str = dataclasses.field(metadata={'path_param': { 'field_name': 'realm', 'style': 'simple', 'explode': False }})
    r"""realm name (not id!)"""  
    auth_client: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'authClient', 'style': 'form', 'explode': True }})  
    auth_ip_address: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'authIpAddress', 'style': 'form', 'explode': True }})  
    auth_realm: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'authRealm', 'style': 'form', 'explode': True }})  
    auth_user: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'authUser', 'style': 'form', 'explode': True }})
    r"""user id"""  
    date_from: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'dateFrom', 'style': 'form', 'explode': True }})  
    date_to: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'dateTo', 'style': 'form', 'explode': True }})  
    first: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'first', 'style': 'form', 'explode': True }})  
    max: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max', 'style': 'form', 'explode': True }})
    r"""Maximum results size (defaults to 100)"""  
    operation_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'operationTypes', 'style': 'form', 'explode': True }})  
    resource_path: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'resourcePath', 'style': 'form', 'explode': True }})  
    resource_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'resourceTypes', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class GetRealmAdminEventsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    admin_event_representations: Optional[list[shared_admineventrepresentation.AdminEventRepresentation]] = dataclasses.field(default=None)
    r"""success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    