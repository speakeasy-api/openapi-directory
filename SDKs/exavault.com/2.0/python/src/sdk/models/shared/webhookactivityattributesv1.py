"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebhookActivityAttributesV1WebhookV1Details:
    
    account_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountName'), 'exclude': lambda f: f is None }})
    r"""Account master username"""  
    attempt: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attempt'), 'exclude': lambda f: f is None }})
    r"""Number of times the system has attempted to send"""  
    attempt_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attemptId'), 'exclude': lambda f: f is None }})
    r"""Entry - retry identifier"""  
    event: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event'), 'exclude': lambda f: f is None }})
    r"""Type of related activity"""  
    protocol: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocol'), 'exclude': lambda f: f is None }})
    r"""Type of connection used for related activity"""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username'), 'exclude': lambda f: f is None }})
    r"""Username logged for related activity. May refer to someone who is not a user of the account, such as a share recipient or \\"publ"""  
    
class WebhookActivityAttributesV1EventEnum(str, Enum):
    r"""Event type"""
    RESOURCES_UPLOAD = 'resources.upload'
    RESOURCES_DOWNLOAD = 'resources.download'
    RESOURCES_DELETE = 'resources.delete'
    RESOURCES_RENAME = 'resources.rename'
    RESOURCES_COPY = 'resources.copy'
    RESOURCES_MOVE = 'resources.move'
    RESOURCES_COMPRESS = 'resources.compress'
    RESOURCES_EXTRACT = 'resources.extract'
    RESOURCES_CREATE_FOLDER = 'resources.createFolder'
    SHARES_FORM_SUBMIT = 'shares.formSubmit'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebhookActivityAttributesV1:
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""Unique ID of account"""  
    attempt_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attemptId'), 'exclude': lambda f: f is None }})
    r"""Event - retry identifier"""  
    created: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'exclude': lambda f: f is None }})
    r"""Date and time of webhook message being generated by system"""  
    details: Optional[WebhookActivityAttributesV1WebhookV1Details] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('details'), 'exclude': lambda f: f is None }})  
    endpoint_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endpointUrl'), 'exclude': lambda f: f is None }})
    r"""The URL the message was sent to"""  
    event: Optional[WebhookActivityAttributesV1EventEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event'), 'exclude': lambda f: f is None }})
    r"""Event type"""  
    ip_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipAddress'), 'exclude': lambda f: f is None }})
    r"""IP Address of related activity"""  
    resend: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resend'), 'exclude': lambda f: f is None }})
    r"""Whether this attempt was a re-send of a previous attempt"""  
    resource_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourcePath'), 'exclude': lambda f: f is None }})
    r"""Path of resource that matched webhook"""  
    response: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response'), 'exclude': lambda f: f is None }})
    r"""Body of web response returned by webhook listener"""  
    status: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""HTTP Status Code returned by webhook listener"""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username'), 'exclude': lambda f: f is None }})
    r"""Username of related activity"""  
    webhook_format: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhookFormat'), 'exclude': lambda f: f is None }})
    r"""What version of webhook message is being sent `v1`"""  
    webhook_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhookId'), 'exclude': lambda f: f is None }})
    r"""Unique ID of webhook configuration"""  
    webhook_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhookPath'), 'exclude': lambda f: f is None }})
    r"""Path that webhook is watching"""  
    