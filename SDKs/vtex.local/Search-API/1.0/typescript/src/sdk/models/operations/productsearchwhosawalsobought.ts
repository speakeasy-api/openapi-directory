/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ProductSearchWhoSawAlsoBoughtServerList = [
  "http://example.com/.{environment}.com.br",
] as const;

export class ProductSearchWhoSawAlsoBoughtRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Describes the type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * Product unique identifier.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=productId",
  })
  productId: string;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsImages extends SpeakeasyBase {
  /**
   * Image ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageId" })
  imageId: string;

  /**
   * Image label.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageLabel" })
  imageLabel: string;

  /**
   * Date and time of the last update of the image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageLastModified" })
  imageLastModified: string;

  /**
   * Image tag.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageTag" })
  imageTag: string;

  /**
   * Image text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageText" })
  imageText: string;

  /**
   * Image URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageUrl" })
  imageUrl: string;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsKitItems extends SpeakeasyBase {
  /**
   * Amount of the SKU component in the kit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * SKU kit component ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemId" })
  itemId: string;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsReferenceId extends SpeakeasyBase {
  /**
   * Reference Code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Key" })
  key: string;

  /**
   * Unique reference code used internally for organizational purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value: string;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamples extends SpeakeasyBase {
  /**
   * Delivery SLA per types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DeliverySlaPerTypes" })
  deliverySlaPerTypes: any[];

  /**
   * Region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Region" })
  region: string;
}

/**
 * Delivery SLA ID.
 */
export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamplesPerRegion0 extends SpeakeasyBase {
  /**
   * Delivery SLA per types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DeliverySlaPerTypes" })
  deliverySlaPerTypes: any[];

  /**
   * Region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Region" })
  region: string;
}

/**
 * Delivery SLA samples per region.
 */
export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamplesPerRegion extends SpeakeasyBase {
  /**
   * Delivery SLA ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "0" })
  @Type(
    () =>
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamplesPerRegion0
  )
  zero?: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamplesPerRegion0;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferInstallments extends SpeakeasyBase {
  /**
   * Interest rate of the installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InterestRate" })
  interestRate: number;

  /**
   * Name of the installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  /**
   * Number of the installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfInstallments" })
  numberOfInstallments: number;

  /**
   * Payment system group name of the installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentSystemGroupName" })
  paymentSystemGroupName: string;

  /**
   * Payment system name of the installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentSystemName" })
  paymentSystemName: string;

  /**
   * Total value plus interest rate of the installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TotalValuePlusInterestRate" })
  totalValuePlusInterestRate: number;

  /**
   * Value of the installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value: number;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptionsInstallmentsSellerMerchantInstallments extends SpeakeasyBase {
  /**
   * Count.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  /**
   * Has interest rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasInterestRate" })
  hasInterestRate: boolean;

  /**
   * ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Interest rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interestRate" })
  interestRate: number;

  /**
   * Total.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;

  /**
   * Value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptionsInstallments extends SpeakeasyBase {
  /**
   * Count.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  /**
   * Has interest rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasInterestRate" })
  hasInterestRate: boolean;

  /**
   * Interest rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interestRate" })
  interestRate: number;

  /**
   * Seller merchant installments.
   */
  @SpeakeasyMetadata({
    elemType:
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptionsInstallmentsSellerMerchantInstallments,
  })
  @Expose({ name: "sellerMerchantInstallments" })
  @Type(
    () =>
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptionsInstallmentsSellerMerchantInstallments
  )
  sellerMerchantInstallments: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptionsInstallmentsSellerMerchantInstallments[];

  /**
   * Total.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;

  /**
   * Value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptions extends SpeakeasyBase {
  /**
   * Bin.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bin" })
  bin: string;

  /**
   * Installments.
   */
  @SpeakeasyMetadata({
    elemType:
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptionsInstallments,
  })
  @Expose({ name: "installments" })
  @Type(
    () =>
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptionsInstallments
  )
  installments: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptionsInstallments[];

  /**
   * Payment group name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentGroupName" })
  paymentGroupName: string;

  /**
   * Payment name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentName" })
  paymentName: string;

  /**
   * Payment system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentSystem" })
  paymentSystem: string;

  /**
   * Value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsPaymentSystems extends SpeakeasyBase {
  /**
   * Available payments.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availablePayments" })
  availablePayments: string;

  /**
   * Description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Due date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dueDate" })
  dueDate: string;

  /**
   * Group name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupName" })
  groupName: string;

  /**
   * ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * If is custom or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCustom" })
  isCustom: boolean;

  /**
   * Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * If requires authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requiresAuthentication" })
  requiresAuthentication: boolean;

  /**
   * If requires document or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requiresDocument" })
  requiresDocument: boolean;

  /**
   * String ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringId" })
  stringId: string;

  /**
   * Template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template" })
  template: string;

  /**
   * Validator.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validator" })
  validator: string;
}

/**
 * Payment options.
 */
export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptions extends SpeakeasyBase {
  /**
   * Available accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableAccounts" })
  availableAccounts: any[];

  /**
   * Available tokens.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableTokens" })
  availableTokens: any[];

  /**
   * GiftCardMessages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "giftCardMessages" })
  giftCardMessages: any[];

  /**
   * GiftCards.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "giftCards" })
  giftCards: any[];

  /**
   * installment options.
   */
  @SpeakeasyMetadata({
    elemType:
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptions,
  })
  @Expose({ name: "installmentOptions" })
  @Type(
    () =>
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptions
  )
  installmentOptions: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsInstallmentOptions[];

  /**
   * Payment systems.
   */
  @SpeakeasyMetadata({
    elemType:
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsPaymentSystems,
  })
  @Expose({ name: "paymentSystems" })
  @Type(
    () =>
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsPaymentSystems
  )
  paymentSystems: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptionsPaymentSystems[];

  /**
   * Payments.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payments" })
  payments: any[];
}

/**
 * AKA Commertial Condition.
 */
export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer extends SpeakeasyBase {
  /**
   * Use the `IsAvailable` field instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AvailableQuantity" })
  availableQuantity: number;

  /**
   * Array of other products that can be bought together with the product in question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BuyTogether" })
  buyTogether: any[];

  /**
   * Cache version used to call checkout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CacheVersionUsedToCallCheckout" })
  cacheVersionUsedToCallCheckout: string;

  /**
   * Delivery SLA samples.
   */
  @SpeakeasyMetadata({
    elemType:
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamples,
  })
  @Expose({ name: "DeliverySlaSamples" })
  @Type(
    () =>
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamples
  )
  deliverySlaSamples: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamples[];

  /**
   * Delivery SLA samples per region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DeliverySlaSamplesPerRegion" })
  @Type(
    () =>
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamplesPerRegion
  )
  deliverySlaSamplesPerRegion: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferDeliverySlaSamplesPerRegion;

  /**
   * Discount hightlight.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DiscountHighLight" })
  discountHighLight: any[];

  /**
   * Get info error message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "GetInfoErrorMessage" })
  getInfoErrorMessage: string;

  /**
   * Array of SKU gifts IDs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "GiftSkuIds" })
  giftSkuIds: any[];

  /**
   * Installments options.
   */
  @SpeakeasyMetadata({
    elemType:
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferInstallments,
  })
  @Expose({ name: "Installments" })
  @Type(
    () =>
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferInstallments
  )
  installments: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferInstallments[];

  /**
   * If the product is available or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsAvailable" })
  isAvailable: boolean;

  /**
   * Item metadata attachment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ItemMetadataAttachment" })
  itemMetadataAttachment: any[];

  /**
   * List price of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ListPrice" })
  listPrice: number;

  /**
   * Payment options.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentOptions" })
  @Type(
    () =>
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptions
  )
  paymentOptions: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOfferPaymentOptions;

  /**
   * Price of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Price" })
  price: number;

  /**
   * Price of the product valid until a certain date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PriceValidUntil" })
  priceValidUntil: string;

  /**
   * Price of the product without discount.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PriceWithoutDiscount" })
  priceWithoutDiscount: number;

  /**
   * Reward value of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RewardValue" })
  rewardValue: number;

  /**
   * Trade policy which the product is contained.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SaleChannel" })
  saleChannel: number;

  /**
   * Tax of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tax" })
  tax: number;

  /**
   * Teasers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Teasers" })
  teasers: any[];
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellers extends SpeakeasyBase {
  /**
   * URL to add the product to the cart.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addToCartLink" })
  addToCartLink: string;

  /**
   * AKA Commertial Condition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commertialOffer" })
  @Type(
    () =>
      ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer
  )
  commertialOffer: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellersCommertialOffer;

  /**
   * If the seller is default or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellerDefault" })
  sellerDefault: boolean;

  /**
   * SKU seller ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellerId" })
  sellerId: string;

  /**
   * SKU seller name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellerName" })
  sellerName: string;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSONItems extends SpeakeasyBase {
  /**
   * Videos.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Videos" })
  videos: any[];

  /**
   * SKU complement name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complementName" })
  complementName: string;

  /**
   * SKU unique identification code (barcode), accepts up to 13 numerical characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ean" })
  ean: string;

  /**
   * Estimated date arrival.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "estimatedDateArrival" })
  estimatedDateArrival: string;

  /**
   * Array of information about the SKU image.
   */
  @SpeakeasyMetadata({
    elemType: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsImages,
  })
  @Expose({ name: "images" })
  @Type(() => ProductSearchWhoSawAlsoBought200ApplicationJSONItemsImages)
  images: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsImages[];

  /**
   * If the SKU is part of a kit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isKit" })
  isKit: boolean;

  /**
   * SKU ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemId" })
  itemId: string;

  /**
   * Array with information of SKUs components from a Kit.
   */
  @SpeakeasyMetadata({
    elemType: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsKitItems,
  })
  @Expose({ name: "kitItems" })
  @Type(() => ProductSearchWhoSawAlsoBought200ApplicationJSONItemsKitItems)
  kitItems: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsKitItems[];

  /**
   * Used only in cases when you need to convert the unit of measure for sale. In common cases, use 'un'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "measurementUnit" })
  measurementUnit: string;

  /**
   * Modal Type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modalType" })
  modalType: string;

  /**
   * SKU name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * SKU complete name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameComplete" })
  nameComplete: string;

  /**
   * Reference code ID.
   */
  @SpeakeasyMetadata({
    elemType: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsReferenceId,
  })
  @Expose({ name: "referenceId" })
  @Type(() => ProductSearchWhoSawAlsoBought200ApplicationJSONItemsReferenceId)
  referenceId: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsReferenceId[];

  /**
   * Array of SKU sellers.
   */
  @SpeakeasyMetadata({
    elemType: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellers,
  })
  @Expose({ name: "sellers" })
  @Type(() => ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellers)
  sellers: ProductSearchWhoSawAlsoBought200ApplicationJSONItemsSellers[];

  /**
   * numerical unit that multiplies the selected quantity of the product when it is inserted in the cart.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitMultiplier" })
  unitMultiplier: number;
}

export class ProductSearchWhoSawAlsoBought200ApplicationJSON extends SpeakeasyBase {
  /**
   * Array of the product's specifications.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allSpecifications" })
  allSpecifications: string[];

  /**
   * Array of the product's specifications groups.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allSpecificationsGroups" })
  allSpecificationsGroups: string[];

  /**
   * Brand name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brand" })
  brand: string;

  /**
   * Product brand ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandId" })
  brandId: number;

  /**
   * Product's brand image URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandImageUrl" })
  brandImageUrl: string;

  /**
   * Array of the product's categories URLs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categories" })
  categories: any[];

  /**
   * Array of the product's categories IDs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categoriesIds" })
  categoriesIds: any[];

  /**
   * Product category ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categoryId" })
  categoryId: string;

  /**
   * Cluster highlight ID and name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clusterHighlights" })
  clusterHighlights: Record<string, any>;

  /**
   * Description of the main information related to the product. A simple and easy to understand summary for the customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Array containing the product SKU general information.
   */
  @SpeakeasyMetadata({
    elemType: ProductSearchWhoSawAlsoBought200ApplicationJSONItems,
  })
  @Expose({ name: "items" })
  @Type(() => ProductSearchWhoSawAlsoBought200ApplicationJSONItems)
  items: ProductSearchWhoSawAlsoBought200ApplicationJSONItems[];

  /**
   * Product URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link: string;

  /**
   * Product URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkText" })
  linkText: string;

  /**
   * Brief description of the category. It's recommended that you don't exceed 150 characters so that the search engines can display it correctly in the results page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metaTagDescription" })
  metaTagDescription: string;

  /**
   * Product clusters' IDs and names.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productClusters" })
  productClusters: Record<string, any>;

  /**
   * Product unique identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId: string;

  /**
   * Product name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productName" })
  productName: string;

  /**
   * Product reference.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productReference" })
  productReference: string;

  /**
   * Product reference ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productReferenceCode" })
  productReferenceCode: number;

  /**
   * Text that is in the browser tab and corresponds to the title of the product page. This field is important for SEO.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productTitle" })
  productTitle: string;

  /**
   * Product release date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  releaseDate: string;

  /**
   * Searchable clusters IDs and names
   */
  @SpeakeasyMetadata()
  @Expose({ name: "searchableClusters" })
  searchableClusters: Record<string, any>;
}

export class ProductSearchWhoSawAlsoBoughtResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata({
    elemType: ProductSearchWhoSawAlsoBought200ApplicationJSON,
  })
  productSearchWhoSawAlsoBought200ApplicationJSONObjects?: ProductSearchWhoSawAlsoBought200ApplicationJSON[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
