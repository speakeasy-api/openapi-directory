"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import maintenanceexclusionoptions as shared_maintenanceexclusionoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TimeWindow:
    r"""Represents an arbitrary window of time."""
    
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""The time that the window ends. The end time should take place after the start time."""  
    maintenance_exclusion_options: Optional[shared_maintenanceexclusionoptions.MaintenanceExclusionOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maintenanceExclusionOptions'), 'exclude': lambda f: f is None }})
    r"""Represents the Maintenance exclusion option."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""The time that the window first starts."""  
    