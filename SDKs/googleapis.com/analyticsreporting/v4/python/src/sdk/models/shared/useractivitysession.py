"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import activity as shared_activity
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserActivitySession:
    r"""This represents a user session performed on a specific device at a certain time over a period of time."""
    
    activities: Optional[list[shared_activity.Activity]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activities'), 'exclude': lambda f: f is None }})
    r"""Represents a detailed view into each of the activity in this session."""  
    data_source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSource'), 'exclude': lambda f: f is None }})
    r"""The data source of a hit. By default, hits sent from analytics.js are reported as \\"web\\" and hits sent from the mobile SDKs are reported as \\"app\\". These values can be overridden in the Measurement Protocol."""  
    device_category: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceCategory'), 'exclude': lambda f: f is None }})
    r"""The type of device used: \\"mobile\\", \\"tablet\\" etc."""  
    platform: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('platform'), 'exclude': lambda f: f is None }})
    r"""Platform on which the activity happened: \\"android\\", \\"ios\\" etc."""  
    session_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sessionDate'), 'exclude': lambda f: f is None }})
    r"""Date of this session in ISO-8601 format."""  
    session_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sessionId'), 'exclude': lambda f: f is None }})
    r"""Unique ID of the session."""  
    