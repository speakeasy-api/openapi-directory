/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateQuantumTaskRequestBody {
    /**
     * The action associated with the task.
     */
    @JsonProperty("action")
    public String action;

    public CreateQuantumTaskRequestBody withAction(String action) {
        this.action = action;
        return this;
    }
    
    /**
     * The client token associated with the request.
     */
    @JsonProperty("clientToken")
    public String clientToken;

    public CreateQuantumTaskRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The ARN of the device to run the task on.
     */
    @JsonProperty("deviceArn")
    public String deviceArn;

    public CreateQuantumTaskRequestBody withDeviceArn(String deviceArn) {
        this.deviceArn = deviceArn;
        return this;
    }
    
    /**
     * The parameters for the device to run the task on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceParameters")
    public String deviceParameters;

    public CreateQuantumTaskRequestBody withDeviceParameters(String deviceParameters) {
        this.deviceParameters = deviceParameters;
        return this;
    }
    
    /**
     * The token for an Amazon Braket job that associates it with the quantum task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobToken")
    public String jobToken;

    public CreateQuantumTaskRequestBody withJobToken(String jobToken) {
        this.jobToken = jobToken;
        return this;
    }
    
    /**
     * The S3 bucket to store task result files in.
     */
    @JsonProperty("outputS3Bucket")
    public String outputS3Bucket;

    public CreateQuantumTaskRequestBody withOutputS3Bucket(String outputS3Bucket) {
        this.outputS3Bucket = outputS3Bucket;
        return this;
    }
    
    /**
     * The key prefix for the location in the S3 bucket to store task results in.
     */
    @JsonProperty("outputS3KeyPrefix")
    public String outputS3KeyPrefix;

    public CreateQuantumTaskRequestBody withOutputS3KeyPrefix(String outputS3KeyPrefix) {
        this.outputS3KeyPrefix = outputS3KeyPrefix;
        return this;
    }
    
    /**
     * The number of shots to use for the task.
     */
    @JsonProperty("shots")
    public Long shots;

    public CreateQuantumTaskRequestBody withShots(Long shots) {
        this.shots = shots;
        return this;
    }
    
    /**
     * Tags to be added to the quantum task you're creating.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateQuantumTaskRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateQuantumTaskRequestBody(@JsonProperty("action") String action, @JsonProperty("clientToken") String clientToken, @JsonProperty("deviceArn") String deviceArn, @JsonProperty("outputS3Bucket") String outputS3Bucket, @JsonProperty("outputS3KeyPrefix") String outputS3KeyPrefix, @JsonProperty("shots") Long shots) {
        this.action = action;
        this.clientToken = clientToken;
        this.deviceArn = deviceArn;
        this.outputS3Bucket = outputS3Bucket;
        this.outputS3KeyPrefix = outputS3KeyPrefix;
        this.shots = shots;
  }
}
