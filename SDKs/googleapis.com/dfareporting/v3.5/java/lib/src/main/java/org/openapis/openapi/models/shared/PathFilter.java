/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PathFilter - Represents a DfaReporting path filter.
 */
public class PathFilter {
    /**
     * Event filters in path report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventFilters")
    public EventFilter[] eventFilters;
    public PathFilter withEventFilters(EventFilter[] eventFilters) {
        this.eventFilters = eventFilters;
        return this;
    }
    
    /**
     * The kind of resource this is, in this case dfareporting#pathFilter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public PathFilter withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pathMatchPosition")
    public PathFilterPathMatchPositionEnum pathMatchPosition;
    public PathFilter withPathMatchPosition(PathFilterPathMatchPositionEnum pathMatchPosition) {
        this.pathMatchPosition = pathMatchPosition;
        return this;
    }
    
}
