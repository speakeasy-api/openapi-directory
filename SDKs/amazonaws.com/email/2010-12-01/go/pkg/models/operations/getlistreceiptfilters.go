// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListReceiptFiltersActionEnum
type GETListReceiptFiltersActionEnum string

const (
	GETListReceiptFiltersActionEnumListReceiptFilters GETListReceiptFiltersActionEnum = "ListReceiptFilters"
)

func (e GETListReceiptFiltersActionEnum) ToPointer() *GETListReceiptFiltersActionEnum {
	return &e
}

func (e *GETListReceiptFiltersActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListReceiptFilters":
		*e = GETListReceiptFiltersActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListReceiptFiltersActionEnum: %v", v)
	}
}

// GETListReceiptFiltersVersionEnum
type GETListReceiptFiltersVersionEnum string

const (
	GETListReceiptFiltersVersionEnumTwoThousandAndTen1201 GETListReceiptFiltersVersionEnum = "2010-12-01"
)

func (e GETListReceiptFiltersVersionEnum) ToPointer() *GETListReceiptFiltersVersionEnum {
	return &e
}

func (e *GETListReceiptFiltersVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETListReceiptFiltersVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListReceiptFiltersVersionEnum: %v", v)
	}
}

type GETListReceiptFiltersRequest struct {
	Action            GETListReceiptFiltersActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version           GETListReceiptFiltersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListReceiptFiltersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
