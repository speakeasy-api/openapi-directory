"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountstate as shared_accountstate
from ..shared import organizationinfo as shared_organizationinfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AccountPermissionLevelEnum(str, Enum):
    r"""Output only. Specifies the PermissionLevel the caller has for this account."""
    PERMISSION_LEVEL_UNSPECIFIED = 'PERMISSION_LEVEL_UNSPECIFIED'
    OWNER_LEVEL = 'OWNER_LEVEL'
    MEMBER_LEVEL = 'MEMBER_LEVEL'

class AccountRoleEnum(str, Enum):
    r"""Output only. Specifies the AccountRole the caller has for this account."""
    ACCOUNT_ROLE_UNSPECIFIED = 'ACCOUNT_ROLE_UNSPECIFIED'
    OWNER = 'OWNER'
    CO_OWNER = 'CO_OWNER'
    MANAGER = 'MANAGER'
    COMMUNITY_MANAGER = 'COMMUNITY_MANAGER'

class AccountTypeEnum(str, Enum):
    r"""Output only. Specifies the AccountType of this account."""
    ACCOUNT_TYPE_UNSPECIFIED = 'ACCOUNT_TYPE_UNSPECIFIED'
    PERSONAL = 'PERSONAL'
    LOCATION_GROUP = 'LOCATION_GROUP'
    USER_GROUP = 'USER_GROUP'
    ORGANIZATION = 'ORGANIZATION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Account:
    r"""An account is a container for your business's locations. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325)."""
    
    account_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountName'), 'exclude': lambda f: f is None }})
    r"""The name of the account. *Note:* For an account with AccountType `PERSONAL`, this is the first and last name of the user account."""  
    account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountNumber'), 'exclude': lambda f: f is None }})
    r"""Account reference number if provisioned."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name, in the format `accounts/{account_id}`."""  
    organization_info: Optional[shared_organizationinfo.OrganizationInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('organizationInfo'), 'exclude': lambda f: f is None }})
    r"""Additional Info stored for an organization."""  
    permission_level: Optional[AccountPermissionLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissionLevel'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies the PermissionLevel the caller has for this account."""  
    role: Optional[AccountRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies the AccountRole the caller has for this account."""  
    state: Optional[shared_accountstate.AccountState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Indicates status of the account, such as whether the account has been verified by Google."""  
    type: Optional[AccountTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies the AccountType of this account."""  
    