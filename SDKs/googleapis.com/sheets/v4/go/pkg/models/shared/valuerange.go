// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ValueRangeMajorDimensionEnum - The major dimension of the values. For output, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`, then requesting `range=A1:B2,majorDimension=ROWS` will return `[[1,2],[3,4]]`, whereas requesting `range=A1:B2,majorDimension=COLUMNS` will return `[[1,3],[2,4]]`. For input, with `range=A1:B2,majorDimension=ROWS` then `[[1,2],[3,4]]` will set `A1=1,B1=2,A2=3,B2=4`. With `range=A1:B2,majorDimension=COLUMNS` then `[[1,2],[3,4]]` will set `A1=1,B1=3,A2=2,B2=4`. When writing, if this field is not set, it defaults to ROWS.
type ValueRangeMajorDimensionEnum string

const (
	ValueRangeMajorDimensionEnumDimensionUnspecified ValueRangeMajorDimensionEnum = "DIMENSION_UNSPECIFIED"
	ValueRangeMajorDimensionEnumRows                 ValueRangeMajorDimensionEnum = "ROWS"
	ValueRangeMajorDimensionEnumColumns              ValueRangeMajorDimensionEnum = "COLUMNS"
)

func (e ValueRangeMajorDimensionEnum) ToPointer() *ValueRangeMajorDimensionEnum {
	return &e
}

func (e *ValueRangeMajorDimensionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DIMENSION_UNSPECIFIED":
		fallthrough
	case "ROWS":
		fallthrough
	case "COLUMNS":
		*e = ValueRangeMajorDimensionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValueRangeMajorDimensionEnum: %v", v)
	}
}

// ValueRange - Data within a range of the spreadsheet.
type ValueRange struct {
	// The major dimension of the values. For output, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`, then requesting `range=A1:B2,majorDimension=ROWS` will return `[[1,2],[3,4]]`, whereas requesting `range=A1:B2,majorDimension=COLUMNS` will return `[[1,3],[2,4]]`. For input, with `range=A1:B2,majorDimension=ROWS` then `[[1,2],[3,4]]` will set `A1=1,B1=2,A2=3,B2=4`. With `range=A1:B2,majorDimension=COLUMNS` then `[[1,2],[3,4]]` will set `A1=1,B1=3,A2=2,B2=4`. When writing, if this field is not set, it defaults to ROWS.
	MajorDimension *ValueRangeMajorDimensionEnum `json:"majorDimension,omitempty"`
	// The range the values cover, in [A1 notation](/sheets/api/guides/concepts#cell). For output, this range indicates the entire requested range, even though the values will exclude trailing rows and columns. When appending values, this field represents the range to search for a table, after which values will be appended.
	Range *string `json:"range,omitempty"`
	// The data that was read or to be written. This is an array of arrays, the outer array representing all the data and each inner array representing a major dimension. Each item in the inner array corresponds with one cell. For output, empty trailing rows and columns will not be included. For input, supported value types are: bool, string, and double. Null values will be skipped. To set a cell to an empty value, set the string value to an empty string.
	Values [][]interface{} `json:"values,omitempty"`
}
