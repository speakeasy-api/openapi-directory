/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PropertyDataTypeEnum } from "./propertydatatypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains a summary of a time series (data stream).
 */
export class TimeSeriesSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "alias" })
  alias?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assetId" })
  assetId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dataType" })
  dataType: PropertyDataTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "dataTypeSpec" })
  dataTypeSpec?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "propertyId" })
  propertyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeSeriesArn" })
  timeSeriesArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeSeriesCreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timeSeriesCreationDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "timeSeriesId" })
  timeSeriesId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeSeriesLastUpdateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timeSeriesLastUpdateDate: Date;
}
