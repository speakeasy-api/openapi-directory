<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest - The request for scheduling an integration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest
{
    /**
     * Optional. Input parameters used by integration execution.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\GoogleCloudIntegrationsV1alphaValueType> $inputParameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('inputParameters')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\GoogleCloudIntegrationsV1alphaValueType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $inputParameters = null;
    
    /**
     * Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoParameterEntry> $parameterEntries
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameterEntries')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoParameterEntry>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parameterEntries = null;
    
    /**
     * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoEventParameters $parameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameters')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoEventParameters')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmEventbusProtoEventParameters $parameters = null;
    
    /**
     * This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned.
     * 
     * @var ?string $requestId
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestId = null;
    
    /**
     * The time that the integration should be executed. If the time is less or equal to the current time, the integration is executed immediately.
     * 
     * @var ?string $scheduleTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheduleTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scheduleTime = null;
    
    /**
     * Matched against all {@link TriggerConfig}s across all integrations. i.e. TriggerConfig.trigger_id.equals(trigger_id)
     * 
     * @var ?string $triggerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('triggerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $triggerId = null;
    
	public function __construct()
	{
		$this->inputParameters = null;
		$this->parameterEntries = null;
		$this->parameters = null;
		$this->requestId = null;
		$this->scheduleTime = null;
		$this->triggerId = null;
	}
}
