"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import impersonation as shared_impersonation
from ..shared import systemevent as shared_systemevent
from ..shared import user as shared_user
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Actor:
    r"""The actor of a Drive activity."""
    
    administrator: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('administrator'), 'exclude': lambda f: f is None }})
    r"""Empty message representing an administrator."""  
    anonymous: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('anonymous'), 'exclude': lambda f: f is None }})
    r"""Empty message representing an anonymous user or indicating the authenticated user should be anonymized."""  
    impersonation: Optional[shared_impersonation.Impersonation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('impersonation'), 'exclude': lambda f: f is None }})
    r"""Information about an impersonation, where an admin acts on behalf of an end user. Information about the acting admin is not currently available."""  
    system: Optional[shared_systemevent.SystemEvent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('system'), 'exclude': lambda f: f is None }})
    r"""Event triggered by system operations instead of end users."""  
    user: Optional[shared_user.User] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user'), 'exclude': lambda f: f is None }})
    r"""Information about an end user."""  
    