/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EmailTemplateResponse - Provides information about the content and settings for a message template that can be used in messages that are sent through the email channel.
 */
public class EmailTemplateResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Arn")
    public String arn;
    public EmailTemplateResponse withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonProperty("CreationDate")
    public String creationDate;
    public EmailTemplateResponse withCreationDate(String creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultSubstitutions")
    public String defaultSubstitutions;
    public EmailTemplateResponse withDefaultSubstitutions(String defaultSubstitutions) {
        this.defaultSubstitutions = defaultSubstitutions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HtmlPart")
    public String htmlPart;
    public EmailTemplateResponse withHtmlPart(String htmlPart) {
        this.htmlPart = htmlPart;
        return this;
    }
    
    @JsonProperty("LastModifiedDate")
    public String lastModifiedDate;
    public EmailTemplateResponse withLastModifiedDate(String lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecommenderId")
    public String recommenderId;
    public EmailTemplateResponse withRecommenderId(String recommenderId) {
        this.recommenderId = recommenderId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Subject")
    public String subject;
    public EmailTemplateResponse withSubject(String subject) {
        this.subject = subject;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TemplateDescription")
    public String templateDescription;
    public EmailTemplateResponse withTemplateDescription(String templateDescription) {
        this.templateDescription = templateDescription;
        return this;
    }
    
    @JsonProperty("TemplateName")
    public String templateName;
    public EmailTemplateResponse withTemplateName(String templateName) {
        this.templateName = templateName;
        return this;
    }
    
    @JsonProperty("TemplateType")
    public TemplateTypeEnum templateType;
    public EmailTemplateResponse withTemplateType(TemplateTypeEnum templateType) {
        this.templateType = templateType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TextPart")
    public String textPart;
    public EmailTemplateResponse withTextPart(String textPart) {
        this.textPart = textPart;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Version")
    public String version;
    public EmailTemplateResponse withVersion(String version) {
        this.version = version;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public EmailTemplateResponse withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
}
