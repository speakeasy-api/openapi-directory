/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Document - A structured text document e.g. a PDF.
 */
public class Document {
    /**
     * Message that describes dimension of a document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentDimensions")
    public DocumentDimensions documentDimensions;

    public Document withDocumentDimensions(DocumentDimensions documentDimensions) {
        this.documentDimensions = documentDimensions;
        return this;
    }
    
    /**
     * A representation of a text snippet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentText")
    public TextSnippet documentText;

    public Document withDocumentText(TextSnippet documentText) {
        this.documentText = documentText;
        return this;
    }
    
    /**
     * Input configuration of a Document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputConfig")
    public DocumentInputConfig inputConfig;

    public Document withInputConfig(DocumentInputConfig inputConfig) {
        this.inputConfig = inputConfig;
        return this;
    }
    
    /**
     * Describes the layout of the document. Sorted by page_number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("layout")
    public Layout[] layout;

    public Document withLayout(Layout[] layout) {
        this.layout = layout;
        return this;
    }
    
    /**
     * Number of pages in the document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageCount")
    public Integer pageCount;

    public Document withPageCount(Integer pageCount) {
        this.pageCount = pageCount;
        return this;
    }
    
    public Document(){}
}
