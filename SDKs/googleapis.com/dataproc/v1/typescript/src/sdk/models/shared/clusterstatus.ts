/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Output only. The cluster's state.
 */
export enum ClusterStatusStateEnum {
  Unknown = "UNKNOWN",
  Creating = "CREATING",
  Running = "RUNNING",
  Error = "ERROR",
  ErrorDueToUpdate = "ERROR_DUE_TO_UPDATE",
  Deleting = "DELETING",
  Updating = "UPDATING",
  Stopping = "STOPPING",
  Stopped = "STOPPED",
  Starting = "STARTING",
  Repairing = "REPAIRING",
}

/**
 * Output only. Additional state information that includes status reported by the agent.
 */
export enum ClusterStatusSubstateEnum {
  Unspecified = "UNSPECIFIED",
  Unhealthy = "UNHEALTHY",
  StaleStatus = "STALE_STATUS",
}

/**
 * The status of a cluster and its instances.
 */
export class ClusterStatus extends SpeakeasyBase {
  /**
   * Optional. Output only. Details of cluster's state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * Output only. The cluster's state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ClusterStatusStateEnum;

  /**
   * Output only. Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateStartTime" })
  stateStartTime?: string;

  /**
   * Output only. Additional state information that includes status reported by the agent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "substate" })
  substate?: ClusterStatusSubstateEnum;
}
