// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCancelImportTaskActionEnum
type GETCancelImportTaskActionEnum string

const (
	GETCancelImportTaskActionEnumCancelImportTask GETCancelImportTaskActionEnum = "CancelImportTask"
)

func (e *GETCancelImportTaskActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CancelImportTask":
		*e = GETCancelImportTaskActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCancelImportTaskActionEnum: %s", s)
	}
}

// GETCancelImportTaskVersionEnum
type GETCancelImportTaskVersionEnum string

const (
	GETCancelImportTaskVersionEnumTwoThousandAndSixteen1115 GETCancelImportTaskVersionEnum = "2016-11-15"
)

func (e *GETCancelImportTaskVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETCancelImportTaskVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCancelImportTaskVersionEnum: %s", s)
	}
}

type GETCancelImportTaskRequest struct {
	Action GETCancelImportTaskActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The reason for canceling the task.
	CancelReason *string `queryParam:"style=form,explode=true,name=CancelReason"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the import image or import snapshot task to be canceled.
	ImportTaskID      *string                        `queryParam:"style=form,explode=true,name=ImportTaskId"`
	Version           GETCancelImportTaskVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCancelImportTaskResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
