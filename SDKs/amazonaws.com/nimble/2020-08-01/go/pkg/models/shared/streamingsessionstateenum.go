// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StreamingSessionStateEnum - The streaming session state.
type StreamingSessionStateEnum string

const (
	StreamingSessionStateEnumCreateInProgress StreamingSessionStateEnum = "CREATE_IN_PROGRESS"
	StreamingSessionStateEnumDeleteInProgress StreamingSessionStateEnum = "DELETE_IN_PROGRESS"
	StreamingSessionStateEnumReady            StreamingSessionStateEnum = "READY"
	StreamingSessionStateEnumDeleted          StreamingSessionStateEnum = "DELETED"
	StreamingSessionStateEnumCreateFailed     StreamingSessionStateEnum = "CREATE_FAILED"
	StreamingSessionStateEnumDeleteFailed     StreamingSessionStateEnum = "DELETE_FAILED"
	StreamingSessionStateEnumStopInProgress   StreamingSessionStateEnum = "STOP_IN_PROGRESS"
	StreamingSessionStateEnumStartInProgress  StreamingSessionStateEnum = "START_IN_PROGRESS"
	StreamingSessionStateEnumStopped          StreamingSessionStateEnum = "STOPPED"
	StreamingSessionStateEnumStopFailed       StreamingSessionStateEnum = "STOP_FAILED"
	StreamingSessionStateEnumStartFailed      StreamingSessionStateEnum = "START_FAILED"
)

func (e StreamingSessionStateEnum) ToPointer() *StreamingSessionStateEnum {
	return &e
}

func (e *StreamingSessionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATE_IN_PROGRESS":
		fallthrough
	case "DELETE_IN_PROGRESS":
		fallthrough
	case "READY":
		fallthrough
	case "DELETED":
		fallthrough
	case "CREATE_FAILED":
		fallthrough
	case "DELETE_FAILED":
		fallthrough
	case "STOP_IN_PROGRESS":
		fallthrough
	case "START_IN_PROGRESS":
		fallthrough
	case "STOPPED":
		fallthrough
	case "STOP_FAILED":
		fallthrough
	case "START_FAILED":
		*e = StreamingSessionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StreamingSessionStateEnum: %v", v)
	}
}
