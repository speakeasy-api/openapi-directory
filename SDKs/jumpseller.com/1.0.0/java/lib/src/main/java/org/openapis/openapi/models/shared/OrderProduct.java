/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrderProduct {
    /**
     * Discount of the Order Product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discount")
    public Float discount;
    public OrderProduct withDiscount(Float discount) {
        this.discount = discount;
        return this;
    }
    
    /**
     * Unique identifier of the original Product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;
    public OrderProduct withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Image URL of the Order Product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public String image;
    public OrderProduct withImage(String image) {
        this.image = image;
        return this;
    }
    
    /**
     * Name of the Order Product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public OrderProduct withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Price of the Order Product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Float price;
    public OrderProduct withPrice(Float price) {
        this.price = price;
        return this;
    }
    
    /**
     * Price of the Order Product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("qty")
    public Integer qty;
    public OrderProduct withQty(Integer qty) {
        this.qty = qty;
        return this;
    }
    
    /**
     * Stock Keeping Unit of the Order Product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;
    public OrderProduct withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxes")
    public OrderProductTax[] taxes;
    public OrderProduct withTaxes(OrderProductTax[] taxes) {
        this.taxes = taxes;
        return this;
    }
    
    /**
     * Unique identifier of the original Product Variant
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variant_id")
    public Integer variantId;
    public OrderProduct withVariantId(Integer variantId) {
        this.variantId = variantId;
        return this;
    }
    
    /**
     * Weight of the Order Product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weight")
    public Float weight;
    public OrderProduct withWeight(Float weight) {
        this.weight = weight;
        return this;
    }
    
}
