/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The options for device-identity type trust provider.
 */
export class DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersDeviceOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  tenantId?: string;
}

/**
 * The type of device-based trust provider.
 */
export enum DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersDeviceTrustProviderTypeEnum {
  Jamf = "jamf",
  Crowdstrike = "crowdstrike",
}

/**
 * The OpenID Connect details for an <code>oidc</code>-type, user-identity based trust provider.
 */
export class DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersOidcOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  authorizationEndpoint?: string;

  @SpeakeasyMetadata()
  clientId?: string;

  @SpeakeasyMetadata()
  clientSecret?: string;

  @SpeakeasyMetadata()
  issuer?: string;

  @SpeakeasyMetadata()
  scope?: string;

  @SpeakeasyMetadata()
  tokenEndpoint?: string;

  @SpeakeasyMetadata()
  userInfoEndpoint?: string;
}

/**
 * Describes a tag.
 */
export class DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The type of Verified Access trust provider.
 */
export enum DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersTrustProviderTypeEnum {
  User = "user",
  Device = "device",
}

/**
 * The type of user-based trust provider.
 */
export enum DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersUserTrustProviderTypeEnum {
  IamIdentityCenter = "iam-identity-center",
  Oidc = "oidc",
}

/**
 * Describes a Verified Access trust provider.
 */
export class DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProviders extends SpeakeasyBase {
  @SpeakeasyMetadata()
  creationTime?: string;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  deviceOptions?: DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersDeviceOptions;

  @SpeakeasyMetadata()
  deviceTrustProviderType?: DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersDeviceTrustProviderTypeEnum;

  @SpeakeasyMetadata()
  lastUpdatedTime?: string;

  @SpeakeasyMetadata()
  oidcOptions?: DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersOidcOptions;

  @SpeakeasyMetadata()
  policyReferenceName?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersTags,
  })
  tags?: DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersTags[];

  @SpeakeasyMetadata()
  trustProviderType?: DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersTrustProviderTypeEnum;

  @SpeakeasyMetadata()
  userTrustProviderType?: DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProvidersUserTrustProviderTypeEnum;

  @SpeakeasyMetadata()
  verifiedAccessTrustProviderId?: string;
}

/**
 * Success
 */
export class DescribeVerifiedAccessTrustProvidersResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProviders,
  })
  verifiedAccessTrustProviders?: DescribeVerifiedAccessTrustProvidersResultVerifiedAccessTrustProviders[];
}
