// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FeedFeedTypeEnum - The type of feed.
type FeedFeedTypeEnum string

const (
	FeedFeedTypeEnumFeedTypeUnspecified FeedFeedTypeEnum = "FEED_TYPE_UNSPECIFIED"
	FeedFeedTypeEnumDomainRosterChanges FeedFeedTypeEnum = "DOMAIN_ROSTER_CHANGES"
	FeedFeedTypeEnumCourseRosterChanges FeedFeedTypeEnum = "COURSE_ROSTER_CHANGES"
	FeedFeedTypeEnumCourseWorkChanges   FeedFeedTypeEnum = "COURSE_WORK_CHANGES"
)

func (e FeedFeedTypeEnum) ToPointer() *FeedFeedTypeEnum {
	return &e
}

func (e *FeedFeedTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FEED_TYPE_UNSPECIFIED":
		fallthrough
	case "DOMAIN_ROSTER_CHANGES":
		fallthrough
	case "COURSE_ROSTER_CHANGES":
		fallthrough
	case "COURSE_WORK_CHANGES":
		*e = FeedFeedTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FeedFeedTypeEnum: %v", v)
	}
}

// Feed - A class of notifications that an application can register to receive. For example: "all roster changes for a domain".
type Feed struct {
	// Information about a `Feed` with a `feed_type` of `COURSE_ROSTER_CHANGES`.
	CourseRosterChangesInfo *CourseRosterChangesInfo `json:"courseRosterChangesInfo,omitempty"`
	// Information about a `Feed` with a `feed_type` of `COURSE_WORK_CHANGES`.
	CourseWorkChangesInfo *CourseWorkChangesInfo `json:"courseWorkChangesInfo,omitempty"`
	// The type of feed.
	FeedType *FeedFeedTypeEnum `json:"feedType,omitempty"`
}
