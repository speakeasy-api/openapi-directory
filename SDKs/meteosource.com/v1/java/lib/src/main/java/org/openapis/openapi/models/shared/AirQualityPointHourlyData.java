/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class AirQualityPointHourlyData {
    /**
     * Total aerosol optical depth at 550 nm.
     * Unit: dimensionless
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aerosol_550")
    public Double aerosol550;
    public AirQualityPointHourlyData withAerosol550(Double aerosol550) {
        this.aerosol550 = aerosol550;
        return this;
    }
    
    /**
     * Air quality index. The following values can appear:
     * 
     * * 1 - Very good
     * * 2 - Good
     * * 3 - Medium
     * * 4 - Poor
     * * 5 - Very poor
     * * 6 - Extremely poor
     * 
     * Unit: index
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("air_quality")
    public Double airQuality;
    public AirQualityPointHourlyData withAirQuality(Double airQuality) {
        this.airQuality = airQuality;
        return this;
    }
    
    /**
     * Carbon monoxide at surface level.
     * Unit: \u00b5g/m3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("co_surface")
    public Double coSurface;
    public AirQualityPointHourlyData withCoSurface(Double coSurface) {
        this.coSurface = coSurface;
        return this;
    }
    
    /**
     * Datetime in YYYY-MM-DDTHH:MM:SS format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date")
    public OffsetDateTime date;
    public AirQualityPointHourlyData withDate(OffsetDateTime date) {
        this.date = date;
        return this;
    }
    
    /**
     * Dust aerosol optical depth at 550 nm.
     * Unit: dimensionless
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dust_550nm")
    public Double dust550nm;
    public AirQualityPointHourlyData withDust550nm(Double dust550nm) {
        this.dust550nm = dust550nm;
        return this;
    }
    
    /**
     * Dust aerosol (0.55 - 0.9 \u00b5m) mixing ratio.
     * Unit: kg/kg
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dust_mixing_ratio_05")
    public Double dustMixingRatio05;
    public AirQualityPointHourlyData withDustMixingRatio05(Double dustMixingRatio05) {
        this.dustMixingRatio05 = dustMixingRatio05;
        return this;
    }
    
    /**
     * Nitrogen dioxide at surface level.
     * Unit: \u00b5g/m3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("no2_surface")
    public Double no2Surface;
    public AirQualityPointHourlyData withNo2Surface(Double no2Surface) {
        this.no2Surface = no2Surface;
        return this;
    }
    
    /**
     * Nitrogen monoxide at surface level.
     * Unit: \u00b5g/m3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("no_surface")
    public Double noSurface;
    public AirQualityPointHourlyData withNoSurface(Double noSurface) {
        this.noSurface = noSurface;
        return this;
    }
    
    /**
     * Ozone.
     * Unit: \u00b5g/m3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ozone_surface")
    public Double ozoneSurface;
    public AirQualityPointHourlyData withOzoneSurface(Double ozoneSurface) {
        this.ozoneSurface = ozoneSurface;
        return this;
    }
    
    /**
     * Total column ozone.
     * Unit: Dobson
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ozone_total")
    public Double ozoneTotal;
    public AirQualityPointHourlyData withOzoneTotal(Double ozoneTotal) {
        this.ozoneTotal = ozoneTotal;
        return this;
    }
    
    /**
     * Particulate matter d &lt; 10 \u00b5m (PM10).
     * Unit: \u00b5g/m3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pm10")
    public Double pm10;
    public AirQualityPointHourlyData withPm10(Double pm10) {
        this.pm10 = pm10;
        return this;
    }
    
    /**
     * Particulate matter d &lt; 2.5 \u00b5m (PM2.5).
     * Unit: \u00b5g/m3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pm25")
    public Double pm25;
    public AirQualityPointHourlyData withPm25(Double pm25) {
        this.pm25 = pm25;
        return this;
    }
    
    /**
     * Sulphur dioxide at surface level.
     * Unit: \u00b5g/m3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("so2_surface")
    public Double so2Surface;
    public AirQualityPointHourlyData withSo2Surface(Double so2Surface) {
        this.so2Surface = so2Surface;
        return this;
    }
    
}
