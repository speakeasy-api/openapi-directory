/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CapabilityEnum } from "./capabilityenum";
import { Change } from "./change";
import { ChangeSetStatusEnum } from "./changesetstatusenum";
import { ExecutionStatusEnum } from "./executionstatusenum";
import { Parameter } from "./parameter";
import { RollbackConfiguration } from "./rollbackconfiguration";
import { Tag } from "./tag";

/**
 * The output for the <a>DescribeChangeSet</a> action.
 */
export class DescribeChangeSetOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  capabilities?: CapabilityEnum[];

  @SpeakeasyMetadata()
  changeSetId?: string;

  @SpeakeasyMetadata()
  changeSetName?: string;

  @SpeakeasyMetadata({ elemType: Change })
  changes?: Change[];

  @SpeakeasyMetadata()
  creationTime?: Date;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  executionStatus?: ExecutionStatusEnum;

  @SpeakeasyMetadata()
  includeNestedStacks?: boolean;

  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata()
  notificationARNs?: string[];

  @SpeakeasyMetadata({ elemType: Parameter })
  parameters?: Parameter[];

  @SpeakeasyMetadata()
  parentChangeSetId?: string;

  @SpeakeasyMetadata()
  rollbackConfiguration?: RollbackConfiguration;

  @SpeakeasyMetadata()
  rootChangeSetId?: string;

  @SpeakeasyMetadata()
  stackId?: string;

  @SpeakeasyMetadata()
  stackName?: string;

  @SpeakeasyMetadata()
  status?: ChangeSetStatusEnum;

  @SpeakeasyMetadata()
  statusReason?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  tags?: Tag[];
}
