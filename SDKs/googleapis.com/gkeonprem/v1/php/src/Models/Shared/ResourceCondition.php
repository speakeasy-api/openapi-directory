<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ResourceCondition - ResourceCondition provides a standard mechanism for higher-level status reporting from controller.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ResourceCondition
{
    /**
     * Last time the condition transit from one status to another.
     * 
     * @var ?string $lastTransitionTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastTransitionTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastTransitionTime = null;
    
    /**
     * Human-readable message indicating details about last transition.
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * Machine-readable message indicating details about last transition.
     * 
     * @var ?string $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reason = null;
    
    /**
     * state of the condition.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ResourceConditionStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ResourceConditionStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ResourceConditionStateEnum $state = null;
    
    /**
     * Type of the condition. (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->lastTransitionTime = null;
		$this->message = null;
		$this->reason = null;
		$this->state = null;
		$this->type = null;
	}
}
