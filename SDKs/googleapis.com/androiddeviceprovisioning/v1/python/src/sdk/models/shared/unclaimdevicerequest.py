"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deviceidentifier as shared_deviceidentifier
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UnclaimDeviceRequestSectionTypeEnum(str, Enum):
    r"""Required. The section type of the device's provisioning record."""
    SECTION_TYPE_UNSPECIFIED = 'SECTION_TYPE_UNSPECIFIED'
    SECTION_TYPE_SIM_LOCK = 'SECTION_TYPE_SIM_LOCK'
    SECTION_TYPE_ZERO_TOUCH = 'SECTION_TYPE_ZERO_TOUCH'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UnclaimDeviceRequest:
    r"""Request message to unclaim a device."""
    
    device_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceId'), 'exclude': lambda f: f is None }})
    r"""Required. The device ID returned by `ClaimDevice`."""  
    device_identifier: Optional[shared_deviceidentifier.DeviceIdentifier] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceIdentifier'), 'exclude': lambda f: f is None }})
    r"""Encapsulates hardware and product IDs to identify a manufactured device. To understand requirements on identifier sets, read [Identifiers](https://developers.google.com/zero-touch/guides/identifiers)."""  
    section_type: Optional[UnclaimDeviceRequestSectionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sectionType'), 'exclude': lambda f: f is None }})
    r"""Required. The section type of the device's provisioning record."""  
    vacation_mode_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vacationModeDays'), 'exclude': lambda f: f is None }})
    r"""The duration of the vacation unlock starting from when the request is processed. (1 day is treated as 24 hours)"""  
    vacation_mode_expire_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vacationModeExpireTime'), 'exclude': lambda f: f is None }})
    r"""The expiration time of the vacation unlock."""  
    