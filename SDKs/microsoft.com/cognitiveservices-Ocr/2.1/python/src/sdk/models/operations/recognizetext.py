"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import computervisionerror as shared_computervisionerror
from ..shared import imageurl as shared_imageurl
from ..shared import textrecognitionmode_enum as shared_textrecognitionmode_enum
from typing import Optional


@dataclasses.dataclass
class RecognizeTextRequest:
    
    image_url: shared_imageurl.ImageURL = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""A JSON document with a URL pointing to the image that is to be analyzed."""  
    mode: shared_textrecognitionmode_enum.TextRecognitionModeEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'mode', 'style': 'form', 'explode': True }})
    r"""Type of text to recognize."""  
    

@dataclasses.dataclass
class RecognizeTextResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    computer_vision_error: Optional[shared_computervisionerror.ComputerVisionError] = dataclasses.field(default=None)
    r"""Error response."""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    