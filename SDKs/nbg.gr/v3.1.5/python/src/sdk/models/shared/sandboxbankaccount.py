"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sandboxbankaccountinfo as shared_sandboxbankaccountinfo
from ..shared import sandboxbeneficiary as shared_sandboxbeneficiary
from ..shared import sandboxparty as shared_sandboxparty
from ..shared import sandboxscheduledpayment as shared_sandboxscheduledpayment
from ..shared import sandboxstandingorder as shared_sandboxstandingorder
from ..shared import sandboxstatement as shared_sandboxstatement
from ..shared import sandboxtransaction as shared_sandboxtransaction
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SandboxBankAccount:
    r"""Sandbox bank account"""
    
    beneficiaries: Optional[list[shared_sandboxbeneficiary.SandboxBeneficiary]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beneficiaries'), 'exclude': lambda f: f is None }})
    r"""List of account's beneficiaries"""  
    info: Optional[shared_sandboxbankaccountinfo.SandboxBankAccountInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('info'), 'exclude': lambda f: f is None }})
    r"""General account information"""  
    party: Optional[shared_sandboxparty.SandboxParty] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('party'), 'exclude': lambda f: f is None }})
    r"""Connected party information"""  
    scheduled_payments: Optional[list[shared_sandboxscheduledpayment.SandboxScheduledPayment]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduledPayments'), 'exclude': lambda f: f is None }})
    r"""List of account's scheduled payments"""  
    standing_orders: Optional[list[shared_sandboxstandingorder.SandboxStandingOrder]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('standingOrders'), 'exclude': lambda f: f is None }})
    r"""List of account's standing orders"""  
    statements: Optional[list[shared_sandboxstatement.SandboxStatement]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statements'), 'exclude': lambda f: f is None }})
    r"""List of account's statements"""  
    transactions: Optional[list[shared_sandboxtransaction.SandboxTransaction]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactions'), 'exclude': lambda f: f is None }})
    r"""List of account's transactions"""  
    