// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SendDebugCaptureRequestDataFormatEnum - Format for the data field above (id=5).
type SendDebugCaptureRequestDataFormatEnum string

const (
	SendDebugCaptureRequestDataFormatEnumDataFormatUnspecified SendDebugCaptureRequestDataFormatEnum = "DATA_FORMAT_UNSPECIFIED"
	SendDebugCaptureRequestDataFormatEnumRaw                   SendDebugCaptureRequestDataFormatEnum = "RAW"
	SendDebugCaptureRequestDataFormatEnumJSON                  SendDebugCaptureRequestDataFormatEnum = "JSON"
	SendDebugCaptureRequestDataFormatEnumZlib                  SendDebugCaptureRequestDataFormatEnum = "ZLIB"
	SendDebugCaptureRequestDataFormatEnumBrotli                SendDebugCaptureRequestDataFormatEnum = "BROTLI"
)

func (e *SendDebugCaptureRequestDataFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DATA_FORMAT_UNSPECIFIED":
		fallthrough
	case "RAW":
		fallthrough
	case "JSON":
		fallthrough
	case "ZLIB":
		fallthrough
	case "BROTLI":
		*e = SendDebugCaptureRequestDataFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SendDebugCaptureRequestDataFormatEnum: %s", s)
	}
}

// SendDebugCaptureRequest - Request to send encoded debug information. Next ID: 8
type SendDebugCaptureRequest struct {
	// The internal component id for which debug information is sent.
	ComponentID *string `json:"componentId,omitempty"`
	// The encoded debug information.
	Data *string `json:"data,omitempty"`
	// Format for the data field above (id=5).
	DataFormat *SendDebugCaptureRequestDataFormatEnum `json:"dataFormat,omitempty"`
	// The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.
	Location *string `json:"location,omitempty"`
	// The worker id, i.e., VM hostname.
	WorkerID *string `json:"workerId,omitempty"`
}
