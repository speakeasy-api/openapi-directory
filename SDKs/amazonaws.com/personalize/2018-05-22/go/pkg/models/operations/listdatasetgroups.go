// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListDatasetGroupsXAmzTargetEnum
type ListDatasetGroupsXAmzTargetEnum string

const (
	ListDatasetGroupsXAmzTargetEnumAmazonPersonalizeListDatasetGroups ListDatasetGroupsXAmzTargetEnum = "AmazonPersonalize.ListDatasetGroups"
)

func (e ListDatasetGroupsXAmzTargetEnum) ToPointer() *ListDatasetGroupsXAmzTargetEnum {
	return &e
}

func (e *ListDatasetGroupsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonPersonalize.ListDatasetGroups":
		*e = ListDatasetGroupsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDatasetGroupsXAmzTargetEnum: %v", v)
	}
}

type ListDatasetGroupsRequest struct {
	ListDatasetGroupsRequest shared.ListDatasetGroupsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               ListDatasetGroupsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListDatasetGroupsResponse struct {
	ContentType string
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// Success
	ListDatasetGroupsResponse *shared.ListDatasetGroupsResponse
	StatusCode                int
	RawResponse               *http.Response
}
