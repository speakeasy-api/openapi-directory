/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class BillInput {
    /**
     * Balance of bill due.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balance")
    public Double balance;
    public BillInput withBalance(Double balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * Date bill was issued - YYYY-MM-DD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("bill_date")
    public LocalDate billDate;
    public BillInput withBillDate(LocalDate billDate) {
        this.billDate = billDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bill_number")
    public String billNumber;
    public BillInput withBillNumber(String billNumber) {
        this.billNumber = billNumber;
        return this;
    }
    
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public CurrencyEnum currency;
    public BillInput withCurrency(CurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Currency Exchange Rate at the time entity was recorded/generated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency_rate")
    public Double currencyRate;
    public BillInput withCurrencyRate(Double currencyRate) {
        this.currencyRate = currencyRate;
        return this;
    }
    
    /**
     * Amount of deposit made to this bill.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deposit")
    public Double deposit;
    public BillInput withDeposit(Double deposit) {
        this.deposit = deposit;
        return this;
    }
    
    /**
     * The due date is the date on which a payment is scheduled to be received by the supplier - YYYY-MM-DD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("due_date")
    public LocalDate dueDate;
    public BillInput withDueDate(LocalDate dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ledger_account")
    public LinkedLedgerAccountInput ledgerAccount;
    public BillInput withLedgerAccount(LinkedLedgerAccountInput ledgerAccount) {
        this.ledgerAccount = ledgerAccount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("line_items")
    public BillLineItemInput[] lineItems;
    public BillInput withLineItems(BillLineItemInput[] lineItems) {
        this.lineItems = lineItems;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public BillInput withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The paid date is the date on which a payment was sent to the supplier - YYYY-MM-DD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("paid_date")
    public LocalDate paidDate;
    public BillInput withPaidDate(LocalDate paidDate) {
        this.paidDate = paidDate;
        return this;
    }
    
    /**
     * A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("po_number")
    public String poNumber;
    public BillInput withPoNumber(String poNumber) {
        this.poNumber = poNumber;
        return this;
    }
    
    /**
     * Optional bill reference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;
    public BillInput withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("row_version")
    public String rowVersion;
    public BillInput withRowVersion(String rowVersion) {
        this.rowVersion = rowVersion;
        return this;
    }
    
    /**
     * Invoice status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public BillStatusEnum status;
    public BillInput withStatus(BillStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Sub-total amount, normally before tax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sub_total")
    public Double subTotal;
    public BillInput withSubTotal(Double subTotal) {
        this.subTotal = subTotal;
        return this;
    }
    
    /**
     * The supplier this entity is linked to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supplier")
    public LinkedSupplierInput supplier;
    public BillInput withSupplier(LinkedSupplierInput supplier) {
        this.supplier = supplier;
        return this;
    }
    
    /**
     * Applicable tax id/code override if tax is not supplied on a line item basis.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_code")
    public String taxCode;
    public BillInput withTaxCode(String taxCode) {
        this.taxCode = taxCode;
        return this;
    }
    
    /**
     * Amounts are including tax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_inclusive")
    public Boolean taxInclusive;
    public BillInput withTaxInclusive(Boolean taxInclusive) {
        this.taxInclusive = taxInclusive;
        return this;
    }
    
    /**
     * Terms of payment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terms")
    public String terms;
    public BillInput withTerms(String terms) {
        this.terms = terms;
        return this;
    }
    
    /**
     * Total amount of bill, including tax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Double total;
    public BillInput withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    /**
     * Total tax amount applied to this bill.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_tax")
    public Double totalTax;
    public BillInput withTotalTax(Double totalTax) {
        this.totalTax = totalTax;
        return this;
    }
    
}
