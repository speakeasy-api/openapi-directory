"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsrdsdbprocessorfeature as shared_awsrdsdbprocessorfeature
from ..shared import awsrdspendingcloudwatchlogsexports as shared_awsrdspendingcloudwatchlogsexports
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsRdsDbPendingModifiedValues:
    r"""Changes to a DB instance that are currently pending."""
    
    allocated_storage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllocatedStorage'), 'exclude': lambda f: f is None }})  
    backup_retention_period: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BackupRetentionPeriod'), 'exclude': lambda f: f is None }})  
    ca_certificate_identifier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CaCertificateIdentifier'), 'exclude': lambda f: f is None }})  
    db_instance_class: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DbInstanceClass'), 'exclude': lambda f: f is None }})  
    db_instance_identifier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DbInstanceIdentifier'), 'exclude': lambda f: f is None }})  
    db_subnet_group_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DbSubnetGroupName'), 'exclude': lambda f: f is None }})  
    engine_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EngineVersion'), 'exclude': lambda f: f is None }})  
    iops: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Iops'), 'exclude': lambda f: f is None }})  
    license_model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LicenseModel'), 'exclude': lambda f: f is None }})  
    master_user_password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MasterUserPassword'), 'exclude': lambda f: f is None }})  
    multi_az: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MultiAZ'), 'exclude': lambda f: f is None }})  
    pending_cloud_watch_logs_exports: Optional[shared_awsrdspendingcloudwatchlogsexports.AwsRdsPendingCloudWatchLogsExports] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PendingCloudWatchLogsExports'), 'exclude': lambda f: f is None }})  
    port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Port'), 'exclude': lambda f: f is None }})  
    processor_features: Optional[list[shared_awsrdsdbprocessorfeature.AwsRdsDbProcessorFeature]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProcessorFeatures'), 'exclude': lambda f: f is None }})  
    storage_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorageType'), 'exclude': lambda f: f is None }})  
    