/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProfileInput - JSON template for an Analytics view (profile).
 */
public class ProfileInput {
    /**
     * Account ID to which this view (profile) belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public ProfileInput withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Indicates whether bot filtering is enabled for this view (profile).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("botFilteringEnabled")
    public Boolean botFilteringEnabled;
    public ProfileInput withBotFilteringEnabled(Boolean botFilteringEnabled) {
        this.botFilteringEnabled = botFilteringEnabled;
        return this;
    }
    
    /**
     * Child link for this view (profile). Points to the list of goals for this view (profile).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("childLink")
    public ProfileChildLink childLink;
    public ProfileInput withChildLink(ProfileChildLink childLink) {
        this.childLink = childLink;
        return this;
    }
    
    /**
     * The currency type associated with this view (profile), defaults to USD. The supported values are:
     * USD, JPY, EUR, GBP, AUD, KRW, BRL, CNY, DKK, RUB, SEK, NOK, PLN, TRY, TWD, HKD, THB, IDR, ARS, MXN, VND, PHP, INR, CHF, CAD, CZK, NZD, HUF, BGN, LTL, ZAR, UAH, AED, BOB, CLP, COP, EGP, HRK, ILS, MAD, MYR, PEN, PKR, RON, RSD, SAR, SGD, VEF, LVL
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public ProfileInput withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Default page for this view (profile).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultPage")
    public String defaultPage;
    public ProfileInput withDefaultPage(String defaultPage) {
        this.defaultPage = defaultPage;
        return this;
    }
    
    /**
     * Indicates whether ecommerce tracking is enabled for this view (profile).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eCommerceTracking")
    public Boolean eCommerceTracking;
    public ProfileInput withECommerceTracking(Boolean eCommerceTracking) {
        this.eCommerceTracking = eCommerceTracking;
        return this;
    }
    
    /**
     * Indicates whether enhanced ecommerce tracking is enabled for this view (profile). This property can only be enabled if ecommerce tracking is enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enhancedECommerceTracking")
    public Boolean enhancedECommerceTracking;
    public ProfileInput withEnhancedECommerceTracking(Boolean enhancedECommerceTracking) {
        this.enhancedECommerceTracking = enhancedECommerceTracking;
        return this;
    }
    
    /**
     * The query parameters that are excluded from this view (profile).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludeQueryParameters")
    public String excludeQueryParameters;
    public ProfileInput withExcludeQueryParameters(String excludeQueryParameters) {
        this.excludeQueryParameters = excludeQueryParameters;
        return this;
    }
    
    /**
     * View (Profile) ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ProfileInput withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of this view (profile).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ProfileInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Parent link for this view (profile). Points to the web property to which this view (profile) belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentLink")
    public ProfileParentLink parentLink;
    public ProfileInput withParentLink(ProfileParentLink parentLink) {
        this.parentLink = parentLink;
        return this;
    }
    
    /**
     * Site search category parameters for this view (profile).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("siteSearchCategoryParameters")
    public String siteSearchCategoryParameters;
    public ProfileInput withSiteSearchCategoryParameters(String siteSearchCategoryParameters) {
        this.siteSearchCategoryParameters = siteSearchCategoryParameters;
        return this;
    }
    
    /**
     * The site search query parameters for this view (profile).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("siteSearchQueryParameters")
    public String siteSearchQueryParameters;
    public ProfileInput withSiteSearchQueryParameters(String siteSearchQueryParameters) {
        this.siteSearchQueryParameters = siteSearchQueryParameters;
        return this;
    }
    
    /**
     * Indicates whether this view (profile) is starred or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("starred")
    public Boolean starred;
    public ProfileInput withStarred(Boolean starred) {
        this.starred = starred;
        return this;
    }
    
    /**
     * Whether or not Analytics will strip search category parameters from the URLs in your reports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stripSiteSearchCategoryParameters")
    public Boolean stripSiteSearchCategoryParameters;
    public ProfileInput withStripSiteSearchCategoryParameters(Boolean stripSiteSearchCategoryParameters) {
        this.stripSiteSearchCategoryParameters = stripSiteSearchCategoryParameters;
        return this;
    }
    
    /**
     * Whether or not Analytics will strip search query parameters from the URLs in your reports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stripSiteSearchQueryParameters")
    public Boolean stripSiteSearchQueryParameters;
    public ProfileInput withStripSiteSearchQueryParameters(Boolean stripSiteSearchQueryParameters) {
        this.stripSiteSearchQueryParameters = stripSiteSearchQueryParameters;
        return this;
    }
    
    /**
     * Time zone for which this view (profile) has been configured. Time zones are identified by strings from the TZ database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timezone")
    public String timezone;
    public ProfileInput withTimezone(String timezone) {
        this.timezone = timezone;
        return this;
    }
    
    /**
     * View (Profile) type. Supported types: WEB or APP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public ProfileInput withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Website URL for this view (profile).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("websiteUrl")
    public String websiteUrl;
    public ProfileInput withWebsiteUrl(String websiteUrl) {
        this.websiteUrl = websiteUrl;
        return this;
    }
    
}
