/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StartJobRunRequestBody {
    /**
     * The client idempotency token of the job run to start. Its value must be unique for each request.
     */
    @JsonProperty("clientToken")
    public String clientToken;
    public StartJobRunRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * A configuration specification to be used to override existing configurations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configurationOverrides")
    public StartJobRunRequestBodyConfigurationOverrides configurationOverrides;
    public StartJobRunRequestBody withConfigurationOverrides(StartJobRunRequestBodyConfigurationOverrides configurationOverrides) {
        this.configurationOverrides = configurationOverrides;
        return this;
    }
    
    /**
     * The execution role ARN for the job run.
     */
    @JsonProperty("executionRoleArn")
    public String executionRoleArn;
    public StartJobRunRequestBody withExecutionRoleArn(String executionRoleArn) {
        this.executionRoleArn = executionRoleArn;
        return this;
    }
    
    /**
     * The maximum duration for the job run to run. If the job run runs beyond this duration, it will be automatically cancelled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionTimeoutMinutes")
    public Long executionTimeoutMinutes;
    public StartJobRunRequestBody withExecutionTimeoutMinutes(Long executionTimeoutMinutes) {
        this.executionTimeoutMinutes = executionTimeoutMinutes;
        return this;
    }
    
    /**
     * The driver that the job runs on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobDriver")
    public StartJobRunRequestBodyJobDriver jobDriver;
    public StartJobRunRequestBody withJobDriver(StartJobRunRequestBodyJobDriver jobDriver) {
        this.jobDriver = jobDriver;
        return this;
    }
    
    /**
     * The optional job run name. This doesn't have to be unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public StartJobRunRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The tags assigned to the job run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public StartJobRunRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
}
