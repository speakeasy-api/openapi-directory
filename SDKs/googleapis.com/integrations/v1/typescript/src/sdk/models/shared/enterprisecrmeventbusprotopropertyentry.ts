/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoValueType } from "./enterprisecrmeventbusprotovaluetype";
import { Expose, Type } from "class-transformer";

/**
 * Key-value pair of EventBus property.
 */
export class EnterpriseCrmEventbusProtoPropertyEntry extends SpeakeasyBase {
  /**
   * Key is used to retrieve the corresponding property value. This should be unique for a given fired event. The Tasks should be aware of the keys used while firing the events for them to be able to retrieve the values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * Used for define type for values. Currently supported value types include int, string, double, array, and any proto message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  @Type(() => EnterpriseCrmEventbusProtoValueType)
  value?: EnterpriseCrmEventbusProtoValueType;
}
