/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Parameter type.
 */
export enum DataSourceParameterTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  String = "STRING",
  Integer = "INTEGER",
  Double = "DOUBLE",
  Boolean = "BOOLEAN",
  Record = "RECORD",
  PlusPage = "PLUS_PAGE",
}

/**
 * A parameter used to define custom fields in a data source definition.
 */
export class DataSourceParameter extends SpeakeasyBase {
  /**
   * All possible values for the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedValues" })
  allowedValues?: string[];

  /**
   * If true, it should not be used in new transfers, and it should not be visible to users.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deprecated" })
  deprecated?: boolean;

  /**
   * Parameter description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Parameter display name in the user interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Deprecated. This field has no effect.
   */
  @SpeakeasyMetadata({ elemType: DataSourceParameter })
  @Expose({ name: "fields" })
  @Type(() => DataSourceParameter)
  fields?: DataSourceParameter[];

  /**
   * Cannot be changed after initial creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "immutable" })
  immutable?: boolean;

  /**
   * For integer and double values specifies maximum allowed value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxValue" })
  maxValue?: number;

  /**
   * For integer and double values specifies minimum allowed value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minValue" })
  minValue?: number;

  /**
   * Parameter identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paramId" })
  paramId?: string;

  /**
   * Deprecated. This field has no effect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recurse" })
  recurse?: boolean;

  /**
   * Deprecated. This field has no effect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repeated" })
  repeated?: boolean;

  /**
   * Is parameter required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required?: boolean;

  /**
   * Parameter type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: DataSourceParameterTypeEnum;

  /**
   * Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validationDescription" })
  validationDescription?: string;

  /**
   * URL to a help document to further explain the naming requirements.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validationHelpUrl" })
  validationHelpUrl?: string;

  /**
   * Regular expression which can be used for parameter validation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validationRegex" })
  validationRegex?: string;
}
