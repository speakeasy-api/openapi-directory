<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * StartTaskInformation - Information about a start task running on a compute node.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class StartTaskInformation
{
    /**
     * The time at which the start task stopped running.
     * 
     * @var ?\DateTime $endTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('endTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $endTime = null;
    
    /**
     * The exit code of the start task.
     * 
     * @var ?int $exitCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('exitCode')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $exitCode = null;
    
    /**
     * The most recent time at which a retry of the task started running.
     * 
     * @var ?\DateTime $lastRetryTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastRetryTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastRetryTime = null;
    
    /**
     * The number of times the task has been retried by the Batch service.
     * 
     * @var int $retryCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('retryCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $retryCount;
    
    /**
     * Information about an error when scheduling a task.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TaskSchedulingError $schedulingError
     */
	#[\JMS\Serializer\Annotation\SerializedName('schedulingError')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TaskSchedulingError')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TaskSchedulingError $schedulingError = null;
    
    /**
     * The time at which the start task started running.
     * 
     * @var \DateTime $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $startTime;
    
    /**
     * The state of the start task on the compute node.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\StartTaskInformationStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StartTaskInformationStateEnum>')]
    public StartTaskInformationStateEnum $state;
    
	public function __construct()
	{
		$this->endTime = null;
		$this->exitCode = null;
		$this->lastRetryTime = null;
		$this->retryCount = 0;
		$this->schedulingError = null;
		$this->startTime = new \DateTime();
		$this->state = \OpenAPI\OpenAPI\Models\Shared\StartTaskInformationStateEnum::RUNNING;
	}
}
