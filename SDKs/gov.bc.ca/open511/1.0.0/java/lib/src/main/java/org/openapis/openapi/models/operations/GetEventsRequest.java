/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetEventsRequest {
    /**
     * Limits the response to events within one of the specified areas.  An area must be specified as the ID of an item returned by the /areas resource. For example: an area_id of 'drivebc.ca/1' limits events to those within the Lower Mainland District.  The default is to return events in all areas.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=area_id")
    public String areaId;
    public GetEventsRequest withAreaId(String areaId) {
        this.areaId = areaId;
        return this;
    }
    
    /**
     * Limits the response to events that fall within the specified geographical bounding box.  The bbox format must be '[min longitude],[min latitude],[max longitude],[max latitude]' with WGS84 coordinates.  For example: -123.45,48.99,-122.45,49.49.  The default is to return events in all geographical locations.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=bbox")
    public String bbox;
    public GetEventsRequest withBbox(String bbox) {
        this.bbox = bbox;
        return this;
    }
    
    /**
     * Limits the response to events based on the date and time that the event was created (first recorded). The date/time must be specified in ISO 8601 format, and may be prefixed by one of the following operators [&lt;, &lt;=, &gt;, &gt;=] to indicate 'before', 'before or equal to', 'after' or 'after or equal to' respectively.  For example, &gt;2013-12-01T12:00:00Z requests all events create after Dec. 1, 2015 at 12pm (noon) Coordinated Universal Time.  The default is to return events with any creation time.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=created")
    public String created;
    public GetEventsRequest withCreated(String created) {
        this.created = created;
        return this;
    }
    
    /**
     * Limits the response to events tagged with one of the listed event types.  The possible values include: [CONSTRUCTION, INCIDENT, SPECIAL_EVENT, WEATHER_CONDITION].  Multiple values may be listed, and should be separated by a comma. The default is to return events of all types.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=event_type")
    public GetEventsEventTypeEnum eventType;
    public GetEventsRequest withEventType(GetEventsEventTypeEnum eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * The format of the response
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=format")
    public GetEventsFormatEnum format;
    public GetEventsRequest withFormat(GetEventsFormatEnum format) {
        this.format = format;
        return this;
    }
    
    /**
     * Limits the response to events reported by a given jurisdiction. The value given must be specified as the ID of a jurisdiction returned by the /jurisdiction resource. The default is to return events from all jurisdictions.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=jurisdiction")
    public String jurisdiction;
    public GetEventsRequest withJurisdiction(String jurisdiction) {
        this.jurisdiction = jurisdiction;
        return this;
    }
    
    /**
     * Limits the response to events on a given road as specified by the road name.  An example of a valid road name is 'Highway 1'. The default is to return events on all roads.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=road_name")
    public String roadName;
    public GetEventsRequest withRoadName(String roadName) {
        this.roadName = roadName;
        return this;
    }
    
    /**
     * Limits the response to events tagged with one of the listed severity values. The possible values are: [MINOR, MODERATE, MAJOR].  Multiple values may be listed, and should be separated by a comma. The default is to return events of any severity.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=severity")
    public String severity;
    public GetEventsRequest withSeverity(String severity) {
        this.severity = severity;
        return this;
    }
    
    /**
     * Limits the response to events having a given status.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=status")
    public GetEventsStatusEnum status;
    public GetEventsRequest withStatus(GetEventsStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Limits the response to events based on the date and time that the event was last updated. The date/time must be specified in ISO 8601 format, and may be prefixed by one of the following operators [&lt;, &lt;=, &gt;, &gt;=] to indicate 'before', 'before or equal to', 'after' or 'after or equal to' respectively.  For example, &gt;2013-12-01T12:00:00Z requests all events updated after Dec. 1, 2015 at 12pm (noon) Coordinated Universal Time. The default is to return events with any update time
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=updated")
    public String updated;
    public GetEventsRequest withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
}
