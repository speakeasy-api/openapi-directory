// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventTypeEnum string

const (
	EventTypeEnumSystem        EventTypeEnum = "SYSTEM"
	EventTypeEnumCreateAction  EventTypeEnum = "CREATE_ACTION"
	EventTypeEnumDeleteAction  EventTypeEnum = "DELETE_ACTION"
	EventTypeEnumUpdateAction  EventTypeEnum = "UPDATE_ACTION"
	EventTypeEnumExecuteAction EventTypeEnum = "EXECUTE_ACTION"
)

func (e EventTypeEnum) ToPointer() *EventTypeEnum {
	return &e
}

func (e *EventTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SYSTEM":
		fallthrough
	case "CREATE_ACTION":
		fallthrough
	case "DELETE_ACTION":
		fallthrough
	case "UPDATE_ACTION":
		fallthrough
	case "EXECUTE_ACTION":
		*e = EventTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventTypeEnum: %v", v)
	}
}
