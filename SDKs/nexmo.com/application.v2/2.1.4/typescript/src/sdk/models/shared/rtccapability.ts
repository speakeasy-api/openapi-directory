/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum RtcCapabilityWebhooksEventUrlHttpMethodEnum {
  Get = "GET",
  Post = "POST",
}

/**
 * Vonage will send RTC events to this URL
 */
export class RtcCapabilityWebhooksEventUrl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "http_method" })
  httpMethod?: RtcCapabilityWebhooksEventUrlHttpMethodEnum;
}

export class RtcCapabilityWebhooks extends SpeakeasyBase {
  /**
   * Vonage will send RTC events to this URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_url" })
  @Type(() => RtcCapabilityWebhooksEventUrl)
  eventUrl?: RtcCapabilityWebhooksEventUrl;
}

/**
 * RTC / Conversation Service related configuration
 */
export class RtcCapability extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "leg_persistence_time" })
  legPersistenceTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "signed_callbacks" })
  signedCallbacks?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "webhooks" })
  @Type(() => RtcCapabilityWebhooks)
  webhooks?: RtcCapabilityWebhooks;
}
