// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetSpecsCarAutoCompleteFieldEnum - Field name for which you want auto-completion
type GetSpecsCarAutoCompleteFieldEnum string

const (
	GetSpecsCarAutoCompleteFieldEnumMake         GetSpecsCarAutoCompleteFieldEnum = "make"
	GetSpecsCarAutoCompleteFieldEnumModel        GetSpecsCarAutoCompleteFieldEnum = "model"
	GetSpecsCarAutoCompleteFieldEnumTrim         GetSpecsCarAutoCompleteFieldEnum = "trim"
	GetSpecsCarAutoCompleteFieldEnumBodyType     GetSpecsCarAutoCompleteFieldEnum = "body_type"
	GetSpecsCarAutoCompleteFieldEnumBodySubtype  GetSpecsCarAutoCompleteFieldEnum = "body_subtype"
	GetSpecsCarAutoCompleteFieldEnumVehicleType  GetSpecsCarAutoCompleteFieldEnum = "vehicle_type"
	GetSpecsCarAutoCompleteFieldEnumTransmission GetSpecsCarAutoCompleteFieldEnum = "transmission"
	GetSpecsCarAutoCompleteFieldEnumDrivetrain   GetSpecsCarAutoCompleteFieldEnum = "drivetrain"
	GetSpecsCarAutoCompleteFieldEnumFuelType     GetSpecsCarAutoCompleteFieldEnum = "fuel_type"
	GetSpecsCarAutoCompleteFieldEnumEngine       GetSpecsCarAutoCompleteFieldEnum = "engine"
	GetSpecsCarAutoCompleteFieldEnumEngineSize   GetSpecsCarAutoCompleteFieldEnum = "engine_size"
	GetSpecsCarAutoCompleteFieldEnumEngineBlock  GetSpecsCarAutoCompleteFieldEnum = "engine_block"
)

func (e *GetSpecsCarAutoCompleteFieldEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "make":
		fallthrough
	case "model":
		fallthrough
	case "trim":
		fallthrough
	case "body_type":
		fallthrough
	case "body_subtype":
		fallthrough
	case "vehicle_type":
		fallthrough
	case "transmission":
		fallthrough
	case "drivetrain":
		fallthrough
	case "fuel_type":
		fallthrough
	case "engine":
		fallthrough
	case "engine_size":
		fallthrough
	case "engine_block":
		*e = GetSpecsCarAutoCompleteFieldEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpecsCarAutoCompleteFieldEnum: %s", s)
	}
}

type GetSpecsCarAutoCompleteQueryParams struct {
	// The API Authentication Key. Mandatory with all API calls.
	APIKey *string `queryParam:"style=form,explode=true,name=api_key"`
	// Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated
	BodySubtype *string `queryParam:"style=form,explode=true,name=body_subtype"`
	// To filter listing on their body type
	BodyType *string `queryParam:"style=form,explode=true,name=body_type"`
	// To filter listing on their drivetrain
	Drivetrain *string `queryParam:"style=form,explode=true,name=drivetrain"`
	// To filter listing on their engine
	Engine *string `queryParam:"style=form,explode=true,name=engine"`
	// Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated
	EngineBlock *string `queryParam:"style=form,explode=true,name=engine_block"`
	// Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated
	EngineSize *string `queryParam:"style=form,explode=true,name=engine_size"`
	// Field name for which you want auto-completion
	Field GetSpecsCarAutoCompleteFieldEnum `queryParam:"style=form,explode=true,name=field"`
	// To filter listing on their fuel type
	FuelType *string `queryParam:"style=form,explode=true,name=fuel_type"`
	// Boolean variable to indicate ignore case of current input
	IgnoreCase *bool `queryParam:"style=form,explode=true,name=ignore_case"`
	// Input entered so far
	Input string `queryParam:"style=form,explode=true,name=input"`
	// To filter listings on their make
	Make *string `queryParam:"style=form,explode=true,name=make"`
	// To filter listings on their model
	Model *string `queryParam:"style=form,explode=true,name=model"`
	// To filter listing on their transmission
	Transmission *string `queryParam:"style=form,explode=true,name=transmission"`
	// To filter listing on their trim
	Trim *string `queryParam:"style=form,explode=true,name=trim"`
	// To filter listing on their vehicle type
	VehicleType *string `queryParam:"style=form,explode=true,name=vehicle_type"`
	// To filter listing on their year
	Year *string `queryParam:"style=form,explode=true,name=year"`
}

type GetSpecsCarAutoCompleteRequest struct {
	QueryParams GetSpecsCarAutoCompleteQueryParams
}

type GetSpecsCarAutoCompleteResponse struct {
	ContentType string
	// Error
	Error *shared.Error
	// Unique terms available in given field for auto completion
	SpecsAutoCompleteResponse *shared.SpecsAutoCompleteResponse
	StatusCode                int
	RawResponse               *http.Response
}
