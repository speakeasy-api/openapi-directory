<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetVillagersRequest
{
    /**
     * The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * 
     * @var string $acceptVersion
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Accept-Version')]
    public string $acceptVersion;
    
    /**
     * Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * 
     * @var string $xApiKey
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-API-KEY')]
    public string $xApiKey;
    
    /**
     * Use with `birthmonth` to get villager(s) born on a specific day. Value should be an int, 1 through 31.
     * 
     * @var ?string $birthday
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=birthday')]
    public ?string $birthday = null;
    
    /**
     * Retrieve villagers born in a specific month. Value may be the month's name (`jan`, `january`) or the integer representing the month (`01`, `1`).
     * 
     * @var ?string $birthmonth
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=birthmonth')]
    public ?string $birthmonth = null;
    
    /**
     * When set to `true`, only villager names are returned. Instead of an array of objects with all details, the return will be an array of strings.
     * 
     * @var ?string $excludedetails
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=excludedetails')]
    public ?string $excludedetails = null;
    
    /**
     * Retrieve villagers that appear in all listed games. For example, if you want only villagers that appear in both *New Horizons* and *Pocket Camp*, you would send in `?game=nh&game=pc`.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetVillagersGameEnum> $game
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=game')]
    public ?array $game = null;
    
    /**
     * Villager name. For most names you will get back an array with one object, but note that names are not a unique identifier across the series, as there are 3 names that are shared by multiple villagers (Lulu, Petunia, Carmen). For those 3 names you will get back an array with 2 objects. How you disambiguate between these villagers is up to you.
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?string $name = null;
    
    /**
     * When set to `true`, an `nh_details` object will be included that contains *New Horizons* details about the villager. If the villager does not appear in *New Horizons*, the returned `nh_details` field will be set to null.
     * 
     * @var ?string $nhdetails
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=nhdetails')]
    public ?string $nhdetails = null;
    
    /**
     * Retrieve villagers with a certain personality. For 'sisterly', note that the community often also calls it 'uchi' or 'big sister'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetVillagersPersonalityEnum $personality
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=personality')]
    public ?GetVillagersPersonalityEnum $personality = null;
    
    /**
     * Retrieve villagers of a certain species.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetVillagersSpeciesEnum $species
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=species')]
    public ?GetVillagersSpeciesEnum $species = null;
    
    /**
     * Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL. Note that requesting specific image sizes for long lists may result in a very long response time.
     * 
     * @var ?int $thumbsize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=thumbsize')]
    public ?int $thumbsize = null;
    
	public function __construct()
	{
		$this->acceptVersion = "";
		$this->xApiKey = "";
		$this->birthday = null;
		$this->birthmonth = null;
		$this->excludedetails = null;
		$this->game = null;
		$this->name = null;
		$this->nhdetails = null;
		$this->personality = null;
		$this->species = null;
		$this->thumbsize = null;
	}
}
