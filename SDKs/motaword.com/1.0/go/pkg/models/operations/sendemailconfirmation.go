// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type SendEmailConfirmation200ApplicationJSONStatusEnum string

const (
	SendEmailConfirmation200ApplicationJSONStatusEnumSuccess          SendEmailConfirmation200ApplicationJSONStatusEnum = "success"
	SendEmailConfirmation200ApplicationJSONStatusEnumAlreadyConfirmed SendEmailConfirmation200ApplicationJSONStatusEnum = "already_confirmed"
)

func (e SendEmailConfirmation200ApplicationJSONStatusEnum) ToPointer() *SendEmailConfirmation200ApplicationJSONStatusEnum {
	return &e
}

func (e *SendEmailConfirmation200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "already_confirmed":
		*e = SendEmailConfirmation200ApplicationJSONStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SendEmailConfirmation200ApplicationJSONStatusEnum: %v", v)
	}
}

// SendEmailConfirmation200ApplicationJSON - When confirmation email is sent, status is `success`, or `already_confirmed` when user has already confirmed their email address.
type SendEmailConfirmation200ApplicationJSON struct {
	Status *SendEmailConfirmation200ApplicationJSONStatusEnum `json:"status,omitempty"`
}

type SendEmailConfirmationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// When confirmation email is sent, status is `success`, or `already_confirmed` when user has already confirmed their email address.
	SendEmailConfirmation200ApplicationJSONObject *SendEmailConfirmation200ApplicationJSON
}
