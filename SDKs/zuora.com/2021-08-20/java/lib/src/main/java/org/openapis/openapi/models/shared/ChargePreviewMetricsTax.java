/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ChargePreviewMetricsTax {
    /**
     * Total tax amount of all discount charges which are applied to one specific recurring charge. This value is calculated from the rating results for the latest subscription version in the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discount")
    public Double discount;
    public ChargePreviewMetricsTax withDiscount(Double discount) {
        this.discount = discount;
        return this;
    }
    
    /**
     * Delta discount TAX value between the base and the latest subscription version in the order for the specific recurring charge.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discountDelta")
    public Double discountDelta;
    public ChargePreviewMetricsTax withDiscountDelta(Double discountDelta) {
        this.discountDelta = discountDelta;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regular")
    public Double regular;
    public ChargePreviewMetricsTax withRegular(Double regular) {
        this.regular = regular;
        return this;
    }
    
    /**
     * Delta tax value between the base and the latest subscription version in the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regularDelta")
    public Double regularDelta;
    public ChargePreviewMetricsTax withRegularDelta(Double regularDelta) {
        this.regularDelta = regularDelta;
        return this;
    }
    
}
