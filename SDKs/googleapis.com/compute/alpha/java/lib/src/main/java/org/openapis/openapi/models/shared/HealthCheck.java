/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HealthCheck - Represents a Health Check resource. Google Compute Engine has two Health Check resources: * [Global](/compute/docs/reference/rest/alpha/healthChecks) * [Regional](/compute/docs/reference/rest/alpha/regionHealthChecks) Internal HTTP(S) load balancers must use regional health checks (`compute.v1.regionHealthChecks`). Traffic Director must use global health checks (`compute.v1.HealthChecks`). Internal TCP/UDP load balancers can use either regional or global health checks (`compute.v1.regionHealthChecks` or `compute.v1.HealthChecks`). External HTTP(S), TCP proxy, and SSL proxy load balancers as well as managed instance group auto-healing must use global health checks (`compute.v1.HealthChecks`). Backend service-based network load balancers must use regional health checks (`compute.v1.regionHealthChecks`). Target pool-based network load balancers must use legacy HTTP health checks (`compute.v1.httpHealthChecks`). For more information, see Health checks overview.
 */
public class HealthCheck {
    /**
     * How often (in seconds) to send a health check. The default value is 5 seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkIntervalSec")
    public Integer checkIntervalSec;
    public HealthCheck withCheckIntervalSec(Integer checkIntervalSec) {
        this.checkIntervalSec = checkIntervalSec;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in 3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public HealthCheck withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public HealthCheck withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grpcHealthCheck")
    public GRPCHealthCheck grpcHealthCheck;
    public HealthCheck withGrpcHealthCheck(GRPCHealthCheck grpcHealthCheck) {
        this.grpcHealthCheck = grpcHealthCheck;
        return this;
    }
    
    /**
     * A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("healthyThreshold")
    public Integer healthyThreshold;
    public HealthCheck withHealthyThreshold(Integer healthyThreshold) {
        this.healthyThreshold = healthyThreshold;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("http2HealthCheck")
    public Http2HealthCheck http2HealthCheck;
    public HealthCheck withHttp2HealthCheck(Http2HealthCheck http2HealthCheck) {
        this.http2HealthCheck = http2HealthCheck;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpHealthCheck")
    public HTTPHealthCheck httpHealthCheck;
    public HealthCheck withHttpHealthCheck(HTTPHealthCheck httpHealthCheck) {
        this.httpHealthCheck = httpHealthCheck;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpsHealthCheck")
    public HTTPSHealthCheck httpsHealthCheck;
    public HealthCheck withHttpsHealthCheck(HTTPSHealthCheck httpsHealthCheck) {
        this.httpsHealthCheck = httpsHealthCheck;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public HealthCheck withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Type of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public HealthCheck withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Configuration of logging on a health check. If logging is enabled, logs will be exported to Stackdriver.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logConfig")
    public HealthCheckLogConfig logConfig;
    public HealthCheck withLogConfig(HealthCheckLogConfig logConfig) {
        this.logConfig = logConfig;
        return this;
    }
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. For example, a name that is 1-63 characters long, matches the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`, and otherwise complies with RFC1035. This regular expression describes a name where the first character is a lowercase letter, and all following characters are a dash, lowercase letter, or digit, except the last character, which isn't a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public HealthCheck withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * [Output Only] Region where the health check resides. Not applicable to global health checks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;
    public HealthCheck withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public HealthCheck withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource with the resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;
    public HealthCheck withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    /**
     * The list of cloud regions from which health checks are performed. If any regions are specified, then exactly 3 regions should be specified. The region names must be valid names of GCP regions. This can only be set for global health check. If this list is non-empty, then there are restrictions on what other health check fields are supported and what other resources can use this health check: - SSL, HTTP2, and GRPC protocols are not supported. - The TCP request field is not supported. - The proxyHeader field for HTTP, HTTPS, and TCP is not supported. - The checkIntervalSec field must be at least 30. - The health check cannot be used with BackendService nor with managed instance group auto-healing. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceRegions")
    public String[] sourceRegions;
    public HealthCheck withSourceRegions(String[] sourceRegions) {
        this.sourceRegions = sourceRegions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sslHealthCheck")
    public SSLHealthCheck sslHealthCheck;
    public HealthCheck withSslHealthCheck(SSLHealthCheck sslHealthCheck) {
        this.sslHealthCheck = sslHealthCheck;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tcpHealthCheck")
    public TCPHealthCheck tcpHealthCheck;
    public HealthCheck withTcpHealthCheck(TCPHealthCheck tcpHealthCheck) {
        this.tcpHealthCheck = tcpHealthCheck;
        return this;
    }
    
    /**
     * How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeoutSec")
    public Integer timeoutSec;
    public HealthCheck withTimeoutSec(Integer timeoutSec) {
        this.timeoutSec = timeoutSec;
        return this;
    }
    
    /**
     * Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS, HTTP2 or GRPC. Exactly one of the protocol-specific health check fields must be specified, which must match type field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public HealthCheckTypeEnum type;
    public HealthCheck withType(HealthCheckTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("udpHealthCheck")
    public UDPHealthCheck udpHealthCheck;
    public HealthCheck withUdpHealthCheck(UDPHealthCheck udpHealthCheck) {
        this.udpHealthCheck = udpHealthCheck;
        return this;
    }
    
    /**
     * A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unhealthyThreshold")
    public Integer unhealthyThreshold;
    public HealthCheck withUnhealthyThreshold(Integer unhealthyThreshold) {
        this.unhealthyThreshold = unhealthyThreshold;
        return this;
    }
    
}
