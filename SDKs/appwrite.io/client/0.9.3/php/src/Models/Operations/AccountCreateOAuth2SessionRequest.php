<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class AccountCreateOAuth2SessionRequest
{
    /**
     * URL to redirect back to your app after a failed login attempt.  Only URLs from hostnames in your project platform list are allowed. This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) attack against your project API.
     * 
     * @var ?string $failure
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=failure')]
    public ?string $failure = null;
    
    /**
     * OAuth2 Provider. Currently, supported providers are: amazon, apple, bitbucket, bitly, box, discord, dropbox, facebook, github, gitlab, google, linkedin, microsoft, paypal, paypalSandbox, salesforce, slack, spotify, tradeshift, tradeshiftBox, twitch, vk, yahoo, yandex, wordpress.
     * 
     * @var string $provider
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=provider')]
    public string $provider;
    
    /**
     * A list of custom OAuth2 scopes. Check each provider internal docs for a list of supported scopes.
     * 
     * @var ?array<string> $scopes
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=scopes')]
    public ?array $scopes = null;
    
    /**
     * URL to redirect back to your app after a successful login attempt.  Only URLs from hostnames in your project platform list are allowed. This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) attack against your project API.
     * 
     * @var ?string $success
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=success')]
    public ?string $success = null;
    
	public function __construct()
	{
		$this->failure = null;
		$this->provider = "";
		$this->scopes = null;
		$this->success = null;
	}
}
