// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CasingDriveShoeEnum string

const (
	CasingDriveShoeEnumFalse CasingDriveShoeEnum = "false"
	CasingDriveShoeEnumTrue  CasingDriveShoeEnum = "true"
)

func (e *CasingDriveShoeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "false":
		fallthrough
	case "true":
		*e = CasingDriveShoeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CasingDriveShoeEnum: %s", s)
	}
}

type Casing struct {
	CasingCode     *string              `json:"casing_code,omitempty"`
	CasingMaterial *string              `json:"casing_material,omitempty"`
	Diameter       string               `json:"diameter"`
	DriveShoe      *CasingDriveShoeEnum `json:"drive_shoe,omitempty"`
	End            string               `json:"end"`
	Start          string               `json:"start"`
	WallThickness  *string              `json:"wall_thickness,omitempty"`
}
