<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TextStyle - Represents the styling that can be applied to text. Inherited text styles are represented as unset fields in this message. A text style's parent depends on where the text style is defined: * The TextStyle of text in a Paragraph inherits from the paragraph's corresponding named style type. * The TextStyle on a named style inherits from the normal text named style. * The TextStyle of the normal text named style inherits from the default text style in the Docs editor. * The TextStyle on a Paragraph element that's contained in a table may inherit its text style from the table style. If the text style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TextStyle
{
    /**
     * A color that can either be fully opaque or fully transparent.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OptionalColor $backgroundColor
     */
	#[\JMS\Serializer\Annotation\SerializedName('backgroundColor')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OptionalColor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OptionalColor $backgroundColor = null;
    
    /**
     * The text's vertical offset from its normal position. Text with `SUPERSCRIPT` or `SUBSCRIPT` baseline offsets is automatically rendered in a smaller font size, computed based on the `font_size` field. Changes in this field don't affect the `font_size`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TextStyleBaselineOffsetEnum $baselineOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('baselineOffset')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TextStyleBaselineOffsetEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TextStyleBaselineOffsetEnum $baselineOffset = null;
    
    /**
     * Whether or not the text is rendered as bold.
     * 
     * @var ?bool $bold
     */
	#[\JMS\Serializer\Annotation\SerializedName('bold')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $bold = null;
    
    /**
     * A magnitude in a single direction in the specified units.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Dimension $fontSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('fontSize')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Dimension')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Dimension $fontSize = null;
    
    /**
     * A color that can either be fully opaque or fully transparent.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OptionalColor $foregroundColor
     */
	#[\JMS\Serializer\Annotation\SerializedName('foregroundColor')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OptionalColor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OptionalColor $foregroundColor = null;
    
    /**
     * Whether or not the text is italicized.
     * 
     * @var ?bool $italic
     */
	#[\JMS\Serializer\Annotation\SerializedName('italic')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $italic = null;
    
    /**
     * A reference to another portion of a document or an external URL resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Link $link
     */
	#[\JMS\Serializer\Annotation\SerializedName('link')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Link')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Link $link = null;
    
    /**
     * Whether or not the text is in small capital letters.
     * 
     * @var ?bool $smallCaps
     */
	#[\JMS\Serializer\Annotation\SerializedName('smallCaps')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $smallCaps = null;
    
    /**
     * Whether or not the text is struck through.
     * 
     * @var ?bool $strikethrough
     */
	#[\JMS\Serializer\Annotation\SerializedName('strikethrough')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $strikethrough = null;
    
    /**
     * Whether or not the text is underlined.
     * 
     * @var ?bool $underline
     */
	#[\JMS\Serializer\Annotation\SerializedName('underline')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $underline = null;
    
    /**
     * Represents a font family and weight of text.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WeightedFontFamily $weightedFontFamily
     */
	#[\JMS\Serializer\Annotation\SerializedName('weightedFontFamily')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WeightedFontFamily')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WeightedFontFamily $weightedFontFamily = null;
    
	public function __construct()
	{
		$this->backgroundColor = null;
		$this->baselineOffset = null;
		$this->bold = null;
		$this->fontSize = null;
		$this->foregroundColor = null;
		$this->italic = null;
		$this->link = null;
		$this->smallCaps = null;
		$this->strikethrough = null;
		$this->underline = null;
		$this->weightedFontFamily = null;
	}
}
