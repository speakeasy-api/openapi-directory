// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdatePlaceIndexRequestBodyDataSourceConfiguration - <p>Specifies the data storage option chosen for requesting Places.</p> <important> <p>When using Amazon Location Places:</p> <ul> <li> <p>If using HERE Technologies as a data provider, you can't store results for locations in Japan by setting <code>IntendedUse</code> to <code>Storage</code>. parameter.</p> </li> <li> <p>Under the <code>MobileAssetTracking</code> or <code>MobilAssetManagement</code> pricing plan, you can't store results from your place index resources by setting <code>IntendedUse</code> to <code>Storage</code>. This returns a validation exception error.</p> </li> </ul> <p>For more information, see the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> for Amazon Location Service.</p> </important>
type UpdatePlaceIndexRequestBodyDataSourceConfiguration struct {
	IntendedUse *shared.IntendedUseEnum `json:"IntendedUse,omitempty"`
}

// UpdatePlaceIndexRequestBodyPricingPlanEnum - No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
type UpdatePlaceIndexRequestBodyPricingPlanEnum string

const (
	UpdatePlaceIndexRequestBodyPricingPlanEnumRequestBasedUsage     UpdatePlaceIndexRequestBodyPricingPlanEnum = "RequestBasedUsage"
	UpdatePlaceIndexRequestBodyPricingPlanEnumMobileAssetTracking   UpdatePlaceIndexRequestBodyPricingPlanEnum = "MobileAssetTracking"
	UpdatePlaceIndexRequestBodyPricingPlanEnumMobileAssetManagement UpdatePlaceIndexRequestBodyPricingPlanEnum = "MobileAssetManagement"
)

func (e UpdatePlaceIndexRequestBodyPricingPlanEnum) ToPointer() *UpdatePlaceIndexRequestBodyPricingPlanEnum {
	return &e
}

func (e *UpdatePlaceIndexRequestBodyPricingPlanEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RequestBasedUsage":
		fallthrough
	case "MobileAssetTracking":
		fallthrough
	case "MobileAssetManagement":
		*e = UpdatePlaceIndexRequestBodyPricingPlanEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdatePlaceIndexRequestBodyPricingPlanEnum: %v", v)
	}
}

type UpdatePlaceIndexRequestBody struct {
	// <p>Specifies the data storage option chosen for requesting Places.</p> <important> <p>When using Amazon Location Places:</p> <ul> <li> <p>If using HERE Technologies as a data provider, you can't store results for locations in Japan by setting <code>IntendedUse</code> to <code>Storage</code>. parameter.</p> </li> <li> <p>Under the <code>MobileAssetTracking</code> or <code>MobilAssetManagement</code> pricing plan, you can't store results from your place index resources by setting <code>IntendedUse</code> to <code>Storage</code>. This returns a validation exception error.</p> </li> </ul> <p>For more information, see the <a href="https://aws.amazon.com/service-terms/">AWS Service Terms</a> for Amazon Location Service.</p> </important>
	DataSourceConfiguration *UpdatePlaceIndexRequestBodyDataSourceConfiguration `json:"DataSourceConfiguration,omitempty"`
	// Updates the description for the place index resource.
	Description *string `json:"Description,omitempty"`
	// No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
	PricingPlan *UpdatePlaceIndexRequestBodyPricingPlanEnum `json:"PricingPlan,omitempty"`
}

type UpdatePlaceIndexRequest struct {
	// The name of the place index resource to update.
	IndexName         string                      `pathParam:"style=simple,explode=false,name=IndexName"`
	RequestBody       UpdatePlaceIndexRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdatePlaceIndexResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdatePlaceIndexResponse *shared.UpdatePlaceIndexResponse
	// ValidationException
	ValidationException interface{}
}
