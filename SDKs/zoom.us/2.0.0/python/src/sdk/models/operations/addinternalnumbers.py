"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum(str, Enum):
    r"""Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`."""
    EN_GB = 'en-GB'
    EN_US = 'en-US'
    DE_DE = 'de-DE'

class AddInternalNumbersApplicationJSONInternalNumbersTypeEnum(str, Enum):
    r"""Type of phone number. <br>
    The value can be one of the following:<br>
    * `0` : toll <br>
    * `1` : tollfree
    """
    ZERO = '0'
    ONE = '1'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddInternalNumbersApplicationJSONInternalNumbers:
    
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})
    r"""Two letter country code of the country."""  
    display_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_number') }})
    r"""Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`."""  
    labels: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels') }})
    r"""A short description for the phone number."""  
    languages: AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languages') }})
    r"""Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`."""  
    number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number') }})
    r"""Phone number in E164 format."""  
    type: AddInternalNumbersApplicationJSONInternalNumbersTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of phone number. <br>
    The value can be one of the following:<br>
    * `0` : toll <br>
    * `1` : tollfree
    """  
    allow_for_external_meetings: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allow_for_external_meetings'), 'exclude': lambda f: f is None }})
    r"""Control whether the number can be used to attend 3rd party meetings."""  
    allow_join: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allow_join'), 'exclude': lambda f: f is None }})
    r"""Specify whether this number can be used by users to join a meeting or not. <br>
    * `true` : This number can be used to join a meeting. <br>
    *  `false`: This number can not be used to join a meeting. 
    
    Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
    """  
    visible: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visible'), 'exclude': lambda f: f is None }})
    r"""Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
    * `true`: Make the number visible. <br>
    * `false`: Hide the number.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddInternalNumbersApplicationJSON:
    
    internal_numbers: Optional[list[AddInternalNumbersApplicationJSONInternalNumbers]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('internal_numbers'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class AddInternalNumbersRequest:
    
    account_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'accountId', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the account.<br>To add internal numbers to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add internal numbers to a master account, provide `me` as the value of the `accountId` path parameter."""  
    request_body: Optional[AddInternalNumbersApplicationJSON] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    
class AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum(str, Enum):
    r"""Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`."""
    EN_GB = 'en-GB'
    EN_US = 'en-US'
    DE_DE = 'de-DE'

class AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum(str, Enum):
    r"""Type of phone number. <br>
    The value can be one of the following:<br>
    * `0` : toll <br>
    * `1` : tollfree
    """
    ZERO = '0'
    ONE = '1'


@dataclasses.dataclass
class AddInternalNumbers201ApplicationXMLInternalNumbers:
    
    country: str = dataclasses.field()
    r"""Two letter country code of the country."""  
    display_number: str = dataclasses.field()
    r"""Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`."""  
    labels: str = dataclasses.field()
    r"""A short description for the phone number."""  
    languages: AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum = dataclasses.field()
    r"""Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`."""  
    number: str = dataclasses.field()
    r"""Phone number in E164 format."""  
    type: AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum = dataclasses.field()
    r"""Type of phone number. <br>
    The value can be one of the following:<br>
    * `0` : toll <br>
    * `1` : tollfree
    """  
    allow_for_external_meetings: Optional[bool] = dataclasses.field(default=None)
    r"""Control whether the number can be used to attend 3rd party meetings."""  
    allow_join: Optional[bool] = dataclasses.field(default=None)
    r"""Specify whether this number can be used by users to join a meeting or not. <br>
    * `true` : This number can be used to join a meeting. <br>
    *  `false`: This number can not be used to join a meeting. 
    
    Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
    """  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the internal number."""  
    visible: Optional[bool] = dataclasses.field(default=None)
    r"""Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
    * `true`: Make the number visible. <br>
    * `false`: Hide the number.
    """  
    

@dataclasses.dataclass
class AddInternalNumbers201ApplicationXML:
    r"""**HTTP Status Code:** `201` **Created** <br>
    Internal numbers added successfully.
    """
    
    internal_numbers: Optional[list[AddInternalNumbers201ApplicationXMLInternalNumbers]] = dataclasses.field(default=None)  
    
class AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum(str, Enum):
    r"""Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`."""
    EN_GB = 'en-GB'
    EN_US = 'en-US'
    DE_DE = 'de-DE'

class AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum(str, Enum):
    r"""Type of phone number. <br>
    The value can be one of the following:<br>
    * `0` : toll <br>
    * `1` : tollfree
    """
    ZERO = '0'
    ONE = '1'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddInternalNumbers201ApplicationJSONInternalNumbers:
    
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})
    r"""Two letter country code of the country."""  
    display_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_number') }})
    r"""Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`."""  
    labels: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels') }})
    r"""A short description for the phone number."""  
    languages: AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languages') }})
    r"""Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`."""  
    number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number') }})
    r"""Phone number in E164 format."""  
    type: AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of phone number. <br>
    The value can be one of the following:<br>
    * `0` : toll <br>
    * `1` : tollfree
    """  
    allow_for_external_meetings: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allow_for_external_meetings'), 'exclude': lambda f: f is None }})
    r"""Control whether the number can be used to attend 3rd party meetings."""  
    allow_join: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allow_join'), 'exclude': lambda f: f is None }})
    r"""Specify whether this number can be used by users to join a meeting or not. <br>
    * `true` : This number can be used to join a meeting. <br>
    *  `false`: This number can not be used to join a meeting. 
    
    Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
    """  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the internal number."""  
    visible: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visible'), 'exclude': lambda f: f is None }})
    r"""Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
    * `true`: Make the number visible. <br>
    * `false`: Hide the number.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddInternalNumbers201ApplicationJSON:
    r"""**HTTP Status Code:** `201` **Created** <br>
    Internal numbers added successfully.
    """
    
    internal_numbers: Optional[list[AddInternalNumbers201ApplicationJSONInternalNumbers]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('internal_numbers'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class AddInternalNumbersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    add_internal_numbers_201_application_json_object: Optional[AddInternalNumbers201ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `201` **Created** <br>
    Internal numbers added successfully.
    """  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    