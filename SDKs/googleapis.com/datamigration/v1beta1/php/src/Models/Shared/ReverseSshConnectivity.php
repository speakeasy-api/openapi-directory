<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ReverseSshConnectivity - The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1beta1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ReverseSshConnectivity
{
    /**
     * The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
     * 
     * @var ?string $vm
     */
	#[\JMS\Serializer\Annotation\SerializedName('vm')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vm = null;
    
    /**
     * Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
     * 
     * @var ?string $vmIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vmIp = null;
    
    /**
     * Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.
     * 
     * @var ?int $vmPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $vmPort = null;
    
    /**
     * The name of the VPC to peer with the Cloud SQL private network.
     * 
     * @var ?string $vpc
     */
	#[\JMS\Serializer\Annotation\SerializedName('vpc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vpc = null;
    
	public function __construct()
	{
		$this->vm = null;
		$this->vmIp = null;
		$this->vmPort = null;
		$this->vpc = null;
	}
}
