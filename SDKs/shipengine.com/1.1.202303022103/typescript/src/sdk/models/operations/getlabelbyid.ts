/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetLabelByIdRequest extends SpeakeasyBase {
  /**
   * There are two different ways to [download a label](https://www.shipengine.com/docs/labels/downloading/):
   *
   * @remarks
   *
   * |Label Download Type | Description
   * |--------------------|------------------------------
   * |`url`               |You will receive a URL, which you can use to download the label in a separate request. The URL will remain valid for 90 days.<br><br>This is the default if `label_download_type` is unspecified.
   * |`inline`            |You will receive the Base64-encoded label as part of the response. No need for a second request to download the label.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=label_download_type",
  })
  labelDownloadType?: shared.LabelDownloadTypeEnum;

  /**
   * Label ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=label_id",
  })
  labelId: string;
}

export class GetLabelByIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The request contained errors.
   */
  @SpeakeasyMetadata()
  errorResponseBody?: shared.ErrorResponseBody;

  /**
   * The request was a success.
   */
  @SpeakeasyMetadata()
  getLabelByIdResponseBody?: shared.GetLabelByIdResponseBodyOutput;
}
