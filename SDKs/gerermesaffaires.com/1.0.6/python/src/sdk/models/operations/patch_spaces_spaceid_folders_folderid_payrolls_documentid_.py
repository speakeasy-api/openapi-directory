"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchSpacesSpaceIDFoldersFolderIDPayrollsDocumentIDRequestBody:
    r"""A payroll to modify"""
    
    begin: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Begin'), 'exclude': lambda f: f is None }})  
    employee_contributions: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployeeContributions'), 'exclude': lambda f: f is None }})  
    employer_contributions: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployerContributions'), 'exclude': lambda f: f is None }})  
    end: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('End'), 'exclude': lambda f: f is None }})  
    net_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NetAmount'), 'exclude': lambda f: f is None }})  
    total_gross_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalGrossAmount'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PatchSpacesSpaceIDFoldersFolderIDPayrollsDocumentIDRequest:
    
    document_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'documentId', 'style': 'simple', 'explode': False }})
    r"""Id of the document"""  
    folder_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'folderId', 'style': 'simple', 'explode': False }})
    r"""Id of the folder"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    request_body: Optional[PatchSpacesSpaceIDFoldersFolderIDPayrollsDocumentIDRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""A payroll to modify"""  
    

@dataclasses.dataclass
class PatchSpacesSpaceIDFoldersFolderIDPayrollsDocumentIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    