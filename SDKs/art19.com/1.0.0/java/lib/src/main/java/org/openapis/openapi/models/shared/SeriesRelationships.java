/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SeriesRelationships {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classification_inclusions")
    public SeriesRelationshipsAListOfClassificationsAssociatedWithTheSeries classificationInclusions;

    public SeriesRelationships withClassificationInclusions(SeriesRelationshipsAListOfClassificationsAssociatedWithTheSeries classificationInclusions) {
        this.classificationInclusions = classificationInclusions;
        return this;
    }
    
    /**
     * The cover image for the series
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cover_image")
    public SeriesRelationshipsCoverImage coverImage;

    public SeriesRelationships withCoverImage(SeriesRelationshipsCoverImage coverImage) {
        this.coverImage = coverImage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credits")
    public SeriesRelationshipsAListOfCreditsGivenToPeopleInTheSeries credits;

    public SeriesRelationships withCredits(SeriesRelationshipsAListOfCreditsGivenToPeopleInTheSeries credits) {
        this.credits = credits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("episodes")
    public SeriesRelationshipsAListOfPublishedAndReleasedEpisodesWithAnActualMediaFile episodes;

    public SeriesRelationships withEpisodes(SeriesRelationshipsAListOfPublishedAndReleasedEpisodesWithAnActualMediaFile episodes) {
        this.episodes = episodes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("images")
    public SeriesRelationshipsTheCoverImageForTheSeries images;

    public SeriesRelationships withImages(SeriesRelationshipsTheCoverImageForTheSeries images) {
        this.images = images;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public SeriesRelationshipsTheNetworkTheSeriesBelongsTo network;

    public SeriesRelationships withNetwork(SeriesRelationshipsTheNetworkTheSeriesBelongsTo network) {
        this.network = network;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seasons")
    public SeriesRelationshipsAListOfSeasonsInTheSeries seasons;

    public SeriesRelationships withSeasons(SeriesRelationshipsAListOfSeasonsInTheSeries seasons) {
        this.seasons = seasons;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taggings")
    public SeriesRelationshipsAListOfAssociationsLinkingTagsToTheSeries taggings;

    public SeriesRelationships withTaggings(SeriesRelationshipsAListOfAssociationsLinkingTagsToTheSeries taggings) {
        this.taggings = taggings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public SeriesRelationshipsAListOfTagsAssociatedWithTheSeries tags;

    public SeriesRelationships withTags(SeriesRelationshipsAListOfTagsAssociatedWithTheSeries tags) {
        this.tags = tags;
        return this;
    }
    
    public SeriesRelationships(){}
}
