/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetV2CrmUsersJsonRequest extends SpeakeasyBase {
  /**
   * Filters crm users by crm_ids
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=crm_id",
  })
  crmId?: string[];

  /**
   * IDs of crm users to fetch. If a record can't be found, that record won't be returned and your request will be successful
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=ids" })
  ids?: number[];

  /**
   * Whether to include total_pages and total_count in the metadata. Defaults to false
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_paging_counts",
  })
  includePagingCounts?: boolean;

  /**
   * Specifies whether the max limit of 10k records should be applied to pagination counts. Affects the total_count and total_pages data
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=limit_paging_counts",
  })
  limitPagingCounts?: boolean;

  /**
   * The current page to fetch results from. Defaults to 1
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * How many records to show per page in the range [1, 100]. Defaults to 25
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * Key to sort on, must be one of: id, updated_at. Defaults to id
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_by",
  })
  sortBy?: string;

  /**
   * Direction to sort in, must be one of: ASC, DESC. Defaults to DESC
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_direction",
  })
  sortDirection?: string;

  /**
   * Filters crm users by user guids
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=user_guid",
  })
  userGuid?: string[];

  /**
   * Filters crm users by user_ids
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=user_id",
  })
  userId?: number[];
}

export class GetV2CrmUsersJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
