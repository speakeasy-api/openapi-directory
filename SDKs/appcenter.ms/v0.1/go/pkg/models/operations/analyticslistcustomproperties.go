// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AnalyticsListCustomPropertiesSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type AnalyticsListCustomPropertiesRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum string

const (
	AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnumBadRequest          AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnumConflict            AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum = "Conflict"
	AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnumNotAcceptable       AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnumNotFound            AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum = "NotFound"
	AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnumInternalServerError AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnumUnauthorized        AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnumTooManyRequests     AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum) ToPointer() *AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type AnalyticsListCustomPropertiesDefaultApplicationJSONError struct {
	Code    AnalyticsListCustomPropertiesDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                           `json:"message"`
}

// AnalyticsListCustomPropertiesDefaultApplicationJSON - Error code with reason
type AnalyticsListCustomPropertiesDefaultApplicationJSON struct {
	Error AnalyticsListCustomPropertiesDefaultApplicationJSONError `json:"error"`
}

// AnalyticsListCustomProperties200ApplicationJSONValuesEnum - Type of the property.
type AnalyticsListCustomProperties200ApplicationJSONValuesEnum string

const (
	AnalyticsListCustomProperties200ApplicationJSONValuesEnumString   AnalyticsListCustomProperties200ApplicationJSONValuesEnum = "string"
	AnalyticsListCustomProperties200ApplicationJSONValuesEnumNumber   AnalyticsListCustomProperties200ApplicationJSONValuesEnum = "number"
	AnalyticsListCustomProperties200ApplicationJSONValuesEnumBoolean  AnalyticsListCustomProperties200ApplicationJSONValuesEnum = "boolean"
	AnalyticsListCustomProperties200ApplicationJSONValuesEnumDateTime AnalyticsListCustomProperties200ApplicationJSONValuesEnum = "date_time"
)

func (e AnalyticsListCustomProperties200ApplicationJSONValuesEnum) ToPointer() *AnalyticsListCustomProperties200ApplicationJSONValuesEnum {
	return &e
}

func (e *AnalyticsListCustomProperties200ApplicationJSONValuesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		fallthrough
	case "number":
		fallthrough
	case "boolean":
		fallthrough
	case "date_time":
		*e = AnalyticsListCustomProperties200ApplicationJSONValuesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsListCustomProperties200ApplicationJSONValuesEnum: %v", v)
	}
}

// AnalyticsListCustomProperties200ApplicationJSON - List of device properties.
type AnalyticsListCustomProperties200ApplicationJSON struct {
	// List of device properties.
	Values map[string]AnalyticsListCustomProperties200ApplicationJSONValuesEnum `json:"values"`
}

type AnalyticsListCustomPropertiesResponse struct {
	// List of device properties.
	AnalyticsListCustomProperties200ApplicationJSONObject *AnalyticsListCustomProperties200ApplicationJSON
	// Error code with reason
	AnalyticsListCustomPropertiesDefaultApplicationJSONObject *AnalyticsListCustomPropertiesDefaultApplicationJSON
	ContentType                                               string
	StatusCode                                                int
	RawResponse                                               *http.Response
}
