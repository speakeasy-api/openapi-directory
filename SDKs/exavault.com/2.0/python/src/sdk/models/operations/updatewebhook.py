"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import webhookresponse as shared_webhookresponse
from ..shared import webhooktriggers as shared_webhooktriggers
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnum(str, Enum):
    r"""Version of the webhooks message to send to the endpoint"""
    V2 = 'v2'
    V1 = 'v1'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateWebhookUpdateWebhookRequestBody:
    
    endpoint_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endpointUrl'), 'exclude': lambda f: f is None }})
    r"""New endpoint URL to use for the webhook configuration"""  
    resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource'), 'exclude': lambda f: f is None }})
    r"""Resource identifier of the top folder watched by this webhook."""  
    response_version: Optional[UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseVersion'), 'exclude': lambda f: f is None }})
    r"""Version of the webhooks message to send to the endpoint"""  
    triggers: Optional[shared_webhooktriggers.WebhookTriggers] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggers'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class UpdateWebhookRequest:
    
    ev_access_token: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-access-token', 'style': 'simple', 'explode': False }})
    r"""Access token required to make the API call."""  
    ev_api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-api-key', 'style': 'simple', 'explode': False }})
    r"""API key required to make the API call."""  
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Webhook endpoint ID"""  
    request_body: Optional[UpdateWebhookUpdateWebhookRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateWebhookResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    webhook_response: Optional[shared_webhookresponse.WebhookResponse] = dataclasses.field(default=None)
    r"""Successful Operation"""  
    