// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InstanceConfigInstanceSizeEnum - The instance size of this the instance configuration.
type InstanceConfigInstanceSizeEnum string

const (
	InstanceConfigInstanceSizeEnumInstanceSizeUnspecified InstanceConfigInstanceSizeEnum = "INSTANCE_SIZE_UNSPECIFIED"
	InstanceConfigInstanceSizeEnumStandardSmall           InstanceConfigInstanceSizeEnum = "STANDARD_SMALL"
	InstanceConfigInstanceSizeEnumStandardMedium          InstanceConfigInstanceSizeEnum = "STANDARD_MEDIUM"
	InstanceConfigInstanceSizeEnumStandardLarge           InstanceConfigInstanceSizeEnum = "STANDARD_LARGE"
	InstanceConfigInstanceSizeEnumStandardXlarge          InstanceConfigInstanceSizeEnum = "STANDARD_XLARGE"
	InstanceConfigInstanceSizeEnumStandard2Xlarge         InstanceConfigInstanceSizeEnum = "STANDARD_2XLARGE"
	InstanceConfigInstanceSizeEnumStandard3Xlarge         InstanceConfigInstanceSizeEnum = "STANDARD_3XLARGE"
)

func (e *InstanceConfigInstanceSizeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INSTANCE_SIZE_UNSPECIFIED":
		fallthrough
	case "STANDARD_SMALL":
		fallthrough
	case "STANDARD_MEDIUM":
		fallthrough
	case "STANDARD_LARGE":
		fallthrough
	case "STANDARD_XLARGE":
		fallthrough
	case "STANDARD_2XLARGE":
		fallthrough
	case "STANDARD_3XLARGE":
		*e = InstanceConfigInstanceSizeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceConfigInstanceSizeEnum: %s", s)
	}
}

// InstanceConfig - Message storing the instance configuration.
type InstanceConfig struct {
	// The instance size of this the instance configuration.
	InstanceSize *InstanceConfigInstanceSizeEnum `json:"instanceSize,omitempty"`
}
