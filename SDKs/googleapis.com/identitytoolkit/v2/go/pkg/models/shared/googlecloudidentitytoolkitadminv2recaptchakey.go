// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum - The client's platform type.
type GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum string

const (
	GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnumClientTypeUnspecified GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum = "CLIENT_TYPE_UNSPECIFIED"
	GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnumWeb                   GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum = "WEB"
	GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnumIos                   GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum = "IOS"
	GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnumAndroid               GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum = "ANDROID"
)

func (e GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum) ToPointer() *GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum {
	return &e
}

func (e *GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CLIENT_TYPE_UNSPECIFIED":
		fallthrough
	case "WEB":
		fallthrough
	case "IOS":
		fallthrough
	case "ANDROID":
		*e = GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum: %v", v)
	}
}

// GoogleCloudIdentitytoolkitAdminV2RecaptchaKey - The reCAPTCHA key config. reCAPTCHA Enterprise offers different keys for different client platforms.
type GoogleCloudIdentitytoolkitAdminV2RecaptchaKey struct {
	// The reCAPTCHA Enterprise key resource name, e.g. "projects/{project}/keys/{key}"
	Key *string `json:"key,omitempty"`
	// The client's platform type.
	Type *GoogleCloudIdentitytoolkitAdminV2RecaptchaKeyTypeEnum `json:"type,omitempty"`
}
