/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FilteredBidCreativeRow } from "./filteredbidcreativerow";
import { Expose, Type } from "class-transformer";

/**
 * Response message for listing all creatives associated with a given filtered bid reason.
 */
export class ListCreativeStatusBreakdownByCreativeResponse extends SpeakeasyBase {
  /**
   * List of rows, with counts of bids with a given creative status aggregated by creative.
   */
  @SpeakeasyMetadata({ elemType: FilteredBidCreativeRow })
  @Expose({ name: "filteredBidCreativeRows" })
  @Type(() => FilteredBidCreativeRow)
  filteredBidCreativeRows?: FilteredBidCreativeRow[];

  /**
   * A token to retrieve the next page of results. Pass this value in the ListCreativeStatusBreakdownByCreativeRequest.pageToken field in the subsequent call to the filteredBids.creatives.list method to retrieve the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
