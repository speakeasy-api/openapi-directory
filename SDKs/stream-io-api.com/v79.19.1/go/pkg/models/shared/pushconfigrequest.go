// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PushConfigRequestVersionEnum string

const (
	PushConfigRequestVersionEnumV1 PushConfigRequestVersionEnum = "v1"
	PushConfigRequestVersionEnumV2 PushConfigRequestVersionEnum = "v2"
)

func (e *PushConfigRequestVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "v1":
		fallthrough
	case "v2":
		*e = PushConfigRequestVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PushConfigRequestVersionEnum: %s", s)
	}
}

type PushConfigRequest struct {
	OfflineOnly *bool                         `json:"offline_only,omitempty"`
	Version     *PushConfigRequestVersionEnum `json:"version,omitempty"`
}
