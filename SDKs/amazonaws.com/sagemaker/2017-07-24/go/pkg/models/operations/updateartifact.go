// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateArtifactXAmzTargetEnum
type UpdateArtifactXAmzTargetEnum string

const (
	UpdateArtifactXAmzTargetEnumSageMakerUpdateArtifact UpdateArtifactXAmzTargetEnum = "SageMaker.UpdateArtifact"
)

func (e *UpdateArtifactXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SageMaker.UpdateArtifact":
		*e = UpdateArtifactXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateArtifactXAmzTargetEnum: %s", s)
	}
}

type UpdateArtifactRequest struct {
	UpdateArtifactRequest shared.UpdateArtifactRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            UpdateArtifactXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateArtifactResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// ResourceNotFound
	ResourceNotFound interface{}
	StatusCode       int
	RawResponse      *http.Response
	// Success
	UpdateArtifactResponse *shared.UpdateArtifactResponse
}
