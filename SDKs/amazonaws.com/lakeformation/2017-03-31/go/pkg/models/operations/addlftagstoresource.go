// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type AddLFTagsToResourceHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// AddLFTagsToResourceRequestBodyResource - A structure for the resource.
type AddLFTagsToResourceRequestBodyResource struct {
	Catalog          map[string]interface{}           `json:"Catalog,omitempty"`
	DataCellsFilter  *shared.DataCellsFilterResource  `json:"DataCellsFilter,omitempty"`
	DataLocation     *shared.DataLocationResource     `json:"DataLocation,omitempty"`
	Database         *shared.DatabaseResource         `json:"Database,omitempty"`
	LFTag            *shared.LFTagKeyResource         `json:"LFTag,omitempty"`
	LFTagPolicy      *shared.LFTagPolicyResource      `json:"LFTagPolicy,omitempty"`
	Table            *shared.TableResource            `json:"Table,omitempty"`
	TableWithColumns *shared.TableWithColumnsResource `json:"TableWithColumns,omitempty"`
}

type AddLFTagsToResourceRequestBody struct {
	// The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
	CatalogID *string `json:"CatalogId,omitempty"`
	// The LF-tags to attach to the resource.
	LFTags []shared.LFTagPair `json:"LFTags"`
	// A structure for the resource.
	Resource AddLFTagsToResourceRequestBodyResource `json:"Resource"`
}

type AddLFTagsToResourceRequest struct {
	Headers AddLFTagsToResourceHeaders
	Request AddLFTagsToResourceRequestBody `request:"mediaType=application/json"`
}

type AddLFTagsToResourceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// Success
	AddLFTagsToResourceResponse *shared.AddLFTagsToResourceResponse
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
