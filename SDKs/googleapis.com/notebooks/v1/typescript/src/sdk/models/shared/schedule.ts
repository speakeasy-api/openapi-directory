/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Execution } from "./execution";
import { ExecutionTemplate } from "./executiontemplate";
import { Expose, Type } from "class-transformer";

export enum ScheduleStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Enabled = "ENABLED",
  Paused = "PAUSED",
  Disabled = "DISABLED",
  UpdateFailed = "UPDATE_FAILED",
  Initializing = "INITIALIZING",
  Deleting = "DELETING",
}

/**
 * The definition of a schedule.
 */
export class Schedule extends SpeakeasyBase {
  /**
   * Output only. Time the schedule was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Cron-tab formatted schedule by which the job will execute. Format: minute, hour, day of month, month, day of week, e.g. `0 0 * * WED` = every Wednesday More examples: https://crontab.guru/examples.html
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cronSchedule" })
  cronSchedule?: string;

  /**
   * A brief description of this environment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Output only. Display name used for UI purposes. Name can only contain alphanumeric characters, hyphens `-`, and underscores `_`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The description a notebook execution workload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionTemplate" })
  @Type(() => ExecutionTemplate)
  executionTemplate?: ExecutionTemplate;

  /**
   * Output only. The name of this schedule. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The most recent execution names triggered from this schedule and their corresponding states.
   */
  @SpeakeasyMetadata({ elemType: Execution })
  @Expose({ name: "recentExecutions" })
  @Type(() => Execution)
  recentExecutions?: Execution[];

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ScheduleStateEnum;

  /**
   * Timezone on which the cron_schedule. The value of this field must be a time zone name from the tz database. TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string "utc". If a time zone is not specified, the default will be in UTC (also known as GMT).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  timeZone?: string;

  /**
   * Output only. Time the schedule was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * The definition of a schedule.
 */
export class ScheduleInput extends SpeakeasyBase {
  /**
   * Cron-tab formatted schedule by which the job will execute. Format: minute, hour, day of month, month, day of week, e.g. `0 0 * * WED` = every Wednesday More examples: https://crontab.guru/examples.html
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cronSchedule" })
  cronSchedule?: string;

  /**
   * A brief description of this environment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The description a notebook execution workload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionTemplate" })
  @Type(() => ExecutionTemplate)
  executionTemplate?: ExecutionTemplate;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ScheduleStateEnum;

  /**
   * Timezone on which the cron_schedule. The value of this field must be a time zone name from the tz database. TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string "utc". If a time zone is not specified, the default will be in UTC (also known as GMT).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  timeZone?: string;
}
