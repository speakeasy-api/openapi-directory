<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSource - This is an object giving more details on the network-level event that caused the Pending Transaction. For example, for a card transaction this lists the merchant's industry and location.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSource
{
    /**
     * A Account Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceAccountTransferInstruction $accountTransferInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_transfer_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceAccountTransferInstruction')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceAccountTransferInstruction $accountTransferInstruction;
    
    /**
     * A ACH Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceACHTransferInstruction $achTransferInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('ach_transfer_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceACHTransferInstruction')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceACHTransferInstruction $achTransferInstruction;
    
    /**
     * A Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorization $cardAuthorization
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_authorization')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorization')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorization $cardAuthorization;
    
    /**
     * A Deprecated Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_route_authorization`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceDeprecatedCardAuthorization $cardRouteAuthorization
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_route_authorization')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceDeprecatedCardAuthorization')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceDeprecatedCardAuthorization $cardRouteAuthorization;
    
    /**
     * The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCategoryEnum $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCategoryEnum>')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCategoryEnum $category;
    
    /**
     * A Check Deposit Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCheckDepositInstruction $checkDepositInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('check_deposit_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCheckDepositInstruction')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCheckDepositInstruction $checkDepositInstruction;
    
    /**
     * A Check Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCheckTransferInstruction $checkTransferInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('check_transfer_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCheckTransferInstruction')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCheckTransferInstruction $checkTransferInstruction;
    
    /**
     * A Inbound Funds Hold object. This field will be present in the JSON response if and only if `category` is equal to `inbound_funds_hold`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceInboundFundsHold $inboundFundsHold
     */
	#[\JMS\Serializer\Annotation\SerializedName('inbound_funds_hold')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceInboundFundsHold')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceInboundFundsHold $inboundFundsHold;
    
    /**
     * A Real Time Payments Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceRealTimePaymentsTransferInstruction $realTimePaymentsTransferInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('real_time_payments_transfer_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceRealTimePaymentsTransferInstruction')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceRealTimePaymentsTransferInstruction $realTimePaymentsTransferInstruction;
    
    /**
     * A Wire Drawdown Payment Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceWireDrawdownPaymentInstruction $wireDrawdownPaymentInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('wire_drawdown_payment_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceWireDrawdownPaymentInstruction')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceWireDrawdownPaymentInstruction $wireDrawdownPaymentInstruction;
    
    /**
     * A Wire Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceWireTransferInstruction $wireTransferInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('wire_transfer_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceWireTransferInstruction')]
    public InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceWireTransferInstruction $wireTransferInstruction;
    
	public function __construct()
	{
		$this->accountTransferInstruction = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceAccountTransferInstruction();
		$this->achTransferInstruction = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceACHTransferInstruction();
		$this->cardAuthorization = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCardAuthorization();
		$this->cardRouteAuthorization = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceDeprecatedCardAuthorization();
		$this->category = \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCategoryEnum::ACCOUNT_TRANSFER_INSTRUCTION;
		$this->checkDepositInstruction = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCheckDepositInstruction();
		$this->checkTransferInstruction = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceCheckTransferInstruction();
		$this->inboundFundsHold = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceInboundFundsHold();
		$this->realTimePaymentsTransferInstruction = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceRealTimePaymentsTransferInstruction();
		$this->wireDrawdownPaymentInstruction = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceWireDrawdownPaymentInstruction();
		$this->wireTransferInstruction = new \OpenAPI\OpenAPI\Models\Shared\InboundCardAuthorizationSimulationResultPendingTransactionPendingTransactionSourceWireTransferInstruction();
	}
}
