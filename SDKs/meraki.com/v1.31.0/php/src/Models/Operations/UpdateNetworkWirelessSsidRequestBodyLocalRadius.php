<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * UpdateNetworkWirelessSsidRequestBodyLocalRadius - The current setting for Local Authentication, a built-in RADIUS server on the access point. Only valid if authMode is '8021x-localradius'.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class UpdateNetworkWirelessSsidRequestBodyLocalRadius
{
    /**
     * The duration (in seconds) for which LDAP and OCSP lookups are cached.
     * 
     * @var ?int $cacheTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('cacheTimeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cacheTimeout = null;
    
    /**
     * The current setting for certificate verification.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidRequestBodyLocalRadiusCertificateAuthentication $certificateAuthentication
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificateAuthentication')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidRequestBodyLocalRadiusCertificateAuthentication')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidRequestBodyLocalRadiusCertificateAuthentication $certificateAuthentication = null;
    
    /**
     * The current setting for password-based authentication.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidRequestBodyLocalRadiusPasswordAuthentication $passwordAuthentication
     */
	#[\JMS\Serializer\Annotation\SerializedName('passwordAuthentication')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidRequestBodyLocalRadiusPasswordAuthentication')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidRequestBodyLocalRadiusPasswordAuthentication $passwordAuthentication = null;
    
	public function __construct()
	{
		$this->cacheTimeout = null;
		$this->certificateAuthentication = null;
		$this->passwordAuthentication = null;
	}
}
