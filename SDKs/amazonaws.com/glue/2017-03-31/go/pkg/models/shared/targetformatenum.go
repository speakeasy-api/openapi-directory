// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TargetFormatEnum string

const (
	TargetFormatEnumJSON    TargetFormatEnum = "json"
	TargetFormatEnumCsv     TargetFormatEnum = "csv"
	TargetFormatEnumAvro    TargetFormatEnum = "avro"
	TargetFormatEnumOrc     TargetFormatEnum = "orc"
	TargetFormatEnumParquet TargetFormatEnum = "parquet"
	TargetFormatEnumHudi    TargetFormatEnum = "hudi"
	TargetFormatEnumDelta   TargetFormatEnum = "delta"
)

func (e TargetFormatEnum) ToPointer() *TargetFormatEnum {
	return &e
}

func (e *TargetFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "csv":
		fallthrough
	case "avro":
		fallthrough
	case "orc":
		fallthrough
	case "parquet":
		fallthrough
	case "hudi":
		fallthrough
	case "delta":
		*e = TargetFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetFormatEnum: %v", v)
	}
}
