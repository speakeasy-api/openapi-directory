// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BatchGetAssetPropertyAggregatesErrorCodeEnum string

const (
	BatchGetAssetPropertyAggregatesErrorCodeEnumResourceNotFoundException BatchGetAssetPropertyAggregatesErrorCodeEnum = "ResourceNotFoundException"
	BatchGetAssetPropertyAggregatesErrorCodeEnumInvalidRequestException   BatchGetAssetPropertyAggregatesErrorCodeEnum = "InvalidRequestException"
	BatchGetAssetPropertyAggregatesErrorCodeEnumAccessDeniedException     BatchGetAssetPropertyAggregatesErrorCodeEnum = "AccessDeniedException"
)

func (e BatchGetAssetPropertyAggregatesErrorCodeEnum) ToPointer() *BatchGetAssetPropertyAggregatesErrorCodeEnum {
	return &e
}

func (e *BatchGetAssetPropertyAggregatesErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ResourceNotFoundException":
		fallthrough
	case "InvalidRequestException":
		fallthrough
	case "AccessDeniedException":
		*e = BatchGetAssetPropertyAggregatesErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchGetAssetPropertyAggregatesErrorCodeEnum: %v", v)
	}
}
