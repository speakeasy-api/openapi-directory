// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetUserProperties500ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// GetUserProperties500ApplicationJSON - The message specifies what is done
type GetUserProperties500ApplicationJSON struct {
	Message string                                  `json:"message"`
	Meta    GetUserProperties500ApplicationJSONMeta `json:"meta"`
}

type GetUserProperties429ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// GetUserProperties429ApplicationJSON - The message specifies what is done
type GetUserProperties429ApplicationJSON struct {
	Message string                                  `json:"message"`
	Meta    GetUserProperties429ApplicationJSONMeta `json:"meta"`
}

type GetUserProperties403ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// GetUserProperties403ApplicationJSON - The message specifies what is done
type GetUserProperties403ApplicationJSON struct {
	Message string                                  `json:"message"`
	Meta    GetUserProperties403ApplicationJSONMeta `json:"meta"`
}

type GetUserProperties401ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// GetUserProperties401ApplicationJSON - The message specifies what is done
type GetUserProperties401ApplicationJSON struct {
	Message string                                  `json:"message"`
	Meta    GetUserProperties401ApplicationJSONMeta `json:"meta"`
}

// GetUserProperties400ApplicationJSONErrorsParameters - All query-, header- and path- parameters that seemed incorrect
type GetUserProperties400ApplicationJSONErrorsParameters struct {
	Header map[string]string `json:"header,omitempty"`
	Path   map[string]string `json:"path,omitempty"`
	Query  map[string]string `json:"query,omitempty"`
}

// GetUserProperties400ApplicationJSONErrors - Map that sums up all received values that seemed incorrect
type GetUserProperties400ApplicationJSONErrors struct {
	// All input fields that seemed incorrect
	Fields map[string]string `json:"fields,omitempty"`
	// All query-, header- and path- parameters that seemed incorrect
	Parameters *GetUserProperties400ApplicationJSONErrorsParameters `json:"parameters,omitempty"`
}

type GetUserProperties400ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// GetUserProperties400ApplicationJSON - The message specifies what is done
type GetUserProperties400ApplicationJSON struct {
	// Map that sums up all received values that seemed incorrect
	Errors  GetUserProperties400ApplicationJSONErrors `json:"errors"`
	Message string                                    `json:"message"`
	Meta    GetUserProperties400ApplicationJSONMeta   `json:"meta"`
}

// GetUserProperties200ApplicationJSONDataGroup - Property group details
type GetUserProperties200ApplicationJSONDataGroup struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

// GetUserProperties200ApplicationJSONData - Properties details
type GetUserProperties200ApplicationJSONData struct {
	// Property group details
	Group      *GetUserProperties200ApplicationJSONDataGroup `json:"group,omitempty"`
	IsComputed bool                                          `json:"isComputed"`
	Label      string                                        `json:"label"`
	Name       string                                        `json:"name"`
}

type GetUserProperties200ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// GetUserProperties200ApplicationJSON - The basic response containing the unique ID of the request and the response status
type GetUserProperties200ApplicationJSON struct {
	Data []GetUserProperties200ApplicationJSONData `json:"data"`
	Meta GetUserProperties200ApplicationJSONMeta   `json:"meta"`
}

type GetUserPropertiesResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// User Properties
	GetUserProperties200ApplicationJSONObject *GetUserProperties200ApplicationJSON
	// Bad request, some fields or parameters are incorrect
	GetUserProperties400ApplicationJSONObject *GetUserProperties400ApplicationJSON
	// No API Key was provided or the key is not authorised to perform the action
	GetUserProperties401ApplicationJSONObject *GetUserProperties401ApplicationJSON
	// The API Key provided is currently not enabled
	GetUserProperties403ApplicationJSONObject *GetUserProperties403ApplicationJSON
	// Too many API requests were send
	GetUserProperties429ApplicationJSONObject *GetUserProperties429ApplicationJSON
	// An unexpected error occurred
	GetUserProperties500ApplicationJSONObject *GetUserProperties500ApplicationJSON
}
