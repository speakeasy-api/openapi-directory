"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DrivingDirectionMetricsRequestNumDaysEnum(str, Enum):
    r"""The number of days to aggregate data for. Results returned will be available data over the last number of requested days. Valid values are 7, 30, and 90."""
    SEVEN = 'SEVEN'
    THIRTY = 'THIRTY'
    NINETY = 'NINETY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DrivingDirectionMetricsRequest:
    r"""A request for driving direction insights."""
    
    language_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCode'), 'exclude': lambda f: f is None }})
    r"""The BCP 47 code for the language. If a language code is not provided, it defaults to English."""  
    num_days: Optional[DrivingDirectionMetricsRequestNumDaysEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numDays'), 'exclude': lambda f: f is None }})
    r"""The number of days to aggregate data for. Results returned will be available data over the last number of requested days. Valid values are 7, 30, and 90."""  
    