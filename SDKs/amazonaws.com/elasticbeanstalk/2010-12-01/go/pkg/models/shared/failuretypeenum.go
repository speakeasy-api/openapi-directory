// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FailureTypeEnum string

const (
	FailureTypeEnumUpdateCancelled         FailureTypeEnum = "UpdateCancelled"
	FailureTypeEnumCancellationFailed      FailureTypeEnum = "CancellationFailed"
	FailureTypeEnumRollbackFailed          FailureTypeEnum = "RollbackFailed"
	FailureTypeEnumRollbackSuccessful      FailureTypeEnum = "RollbackSuccessful"
	FailureTypeEnumInternalFailure         FailureTypeEnum = "InternalFailure"
	FailureTypeEnumInvalidEnvironmentState FailureTypeEnum = "InvalidEnvironmentState"
	FailureTypeEnumPermissionsError        FailureTypeEnum = "PermissionsError"
)

func (e FailureTypeEnum) ToPointer() *FailureTypeEnum {
	return &e
}

func (e *FailureTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UpdateCancelled":
		fallthrough
	case "CancellationFailed":
		fallthrough
	case "RollbackFailed":
		fallthrough
	case "RollbackSuccessful":
		fallthrough
	case "InternalFailure":
		fallthrough
	case "InvalidEnvironmentState":
		fallthrough
	case "PermissionsError":
		*e = FailureTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FailureTypeEnum: %v", v)
	}
}
