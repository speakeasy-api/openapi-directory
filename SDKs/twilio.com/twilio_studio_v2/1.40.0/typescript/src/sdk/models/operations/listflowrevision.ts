/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListFlowRevisionServerList = [
  "https://studio.twilio.com",
] as const;

export class ListFlowRevisionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListFlowRevisionRequest extends SpeakeasyBase {
  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;

  /**
   * The SID of the Flow resource to fetch.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class ListFlowRevisionListFlowRevisionResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListFlowRevisionListFlowRevisionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListFlowRevisionListFlowRevisionResponseMeta)
  meta?: ListFlowRevisionListFlowRevisionResponseMeta;

  @SpeakeasyMetadata({ elemType: shared.StudioV2FlowFlowRevision })
  @Expose({ name: "revisions" })
  @Type(() => shared.StudioV2FlowFlowRevision)
  revisions?: shared.StudioV2FlowFlowRevision[];
}

export class ListFlowRevisionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listFlowRevisionResponse?: ListFlowRevisionListFlowRevisionResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
