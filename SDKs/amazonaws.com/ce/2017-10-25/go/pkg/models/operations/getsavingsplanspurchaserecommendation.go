// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetSavingsPlansPurchaseRecommendationXAmzTargetEnum
type GetSavingsPlansPurchaseRecommendationXAmzTargetEnum string

const (
	GetSavingsPlansPurchaseRecommendationXAmzTargetEnumAwsInsightsIndexServiceGetSavingsPlansPurchaseRecommendation GetSavingsPlansPurchaseRecommendationXAmzTargetEnum = "AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation"
)

func (e GetSavingsPlansPurchaseRecommendationXAmzTargetEnum) ToPointer() *GetSavingsPlansPurchaseRecommendationXAmzTargetEnum {
	return &e
}

func (e *GetSavingsPlansPurchaseRecommendationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSInsightsIndexService.GetSavingsPlansPurchaseRecommendation":
		*e = GetSavingsPlansPurchaseRecommendationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSavingsPlansPurchaseRecommendationXAmzTargetEnum: %v", v)
	}
}

type GetSavingsPlansPurchaseRecommendationRequest struct {
	GetSavingsPlansPurchaseRecommendationRequest shared.GetSavingsPlansPurchaseRecommendationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                                *string                                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                            *string                                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                               *string                                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                     *string                                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                            *string                                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                *string                                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                            *string                                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                   GetSavingsPlansPurchaseRecommendationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetSavingsPlansPurchaseRecommendationResponse struct {
	ContentType string
	// Success
	GetSavingsPlansPurchaseRecommendationResponse *shared.GetSavingsPlansPurchaseRecommendationResponse
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
}
