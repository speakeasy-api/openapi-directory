"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import operator as shared_operator
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Selector:
    r"""A comparision that is used to determine whether a query should return this object."""
    
    field_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldName'), 'exclude': lambda f: f is None }})  
    operator: Optional[shared_operator.Operator] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operator'), 'exclude': lambda f: f is None }})
    r"""Contains a logical operation for comparing the value of a field with a specified value."""  
    