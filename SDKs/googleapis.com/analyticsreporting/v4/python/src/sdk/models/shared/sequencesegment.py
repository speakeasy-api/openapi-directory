"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import segmentsequencestep as shared_segmentsequencestep
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SequenceSegment:
    r"""Sequence conditions consist of one or more steps, where each step is defined by one or more dimension/metric conditions. Multiple steps can be combined with special sequence operators."""
    
    first_step_should_match_first_hit: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstStepShouldMatchFirstHit'), 'exclude': lambda f: f is None }})
    r"""If set, first step condition must match the first hit of the visitor (in the date range)."""  
    segment_sequence_steps: Optional[list[shared_segmentsequencestep.SegmentSequenceStep]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segmentSequenceSteps'), 'exclude': lambda f: f is None }})
    r"""The list of steps in the sequence."""  
    