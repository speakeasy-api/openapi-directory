// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

// GetFlightOffersTravelClassEnum - most of the flight time should be spent in a cabin of this quality or higher. The accepted travel class is economy, premium economy, business or first class. If no travel class is specified, the search considers any travel class
type GetFlightOffersTravelClassEnum string

const (
	GetFlightOffersTravelClassEnumEconomy        GetFlightOffersTravelClassEnum = "ECONOMY"
	GetFlightOffersTravelClassEnumPremiumEconomy GetFlightOffersTravelClassEnum = "PREMIUM_ECONOMY"
	GetFlightOffersTravelClassEnumBusiness       GetFlightOffersTravelClassEnum = "BUSINESS"
	GetFlightOffersTravelClassEnumFirst          GetFlightOffersTravelClassEnum = "FIRST"
)

func (e GetFlightOffersTravelClassEnum) ToPointer() *GetFlightOffersTravelClassEnum {
	return &e
}

func (e *GetFlightOffersTravelClassEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ECONOMY":
		fallthrough
	case "PREMIUM_ECONOMY":
		fallthrough
	case "BUSINESS":
		fallthrough
	case "FIRST":
		*e = GetFlightOffersTravelClassEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFlightOffersTravelClassEnum: %v", v)
	}
}

type GetFlightOffersRequest struct {
	// the number of adult travelers (age 12 or older on date of departure).
	Adults int64 `queryParam:"style=form,explode=true,name=adults"`
	// the number of child travelers (older than age 2 and younger than age 12 on date of departure) who will each have their own separate seat. If specified, this number should be greater than or equal to 0
	Children *int64 `queryParam:"style=form,explode=true,name=children"`
	// the preferred currency for the flight offers. Currency is specified in the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format, e.g. EUR for Euro
	CurrencyCode *string `queryParam:"style=form,explode=true,name=currencyCode"`
	// the date on which the traveler will depart from the origin to go to the destination. Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2017-12-25
	DepartureDate types.Date `queryParam:"style=form,explode=true,name=departureDate"`
	// city/airport [IATA code](http://www.iata.org/publications/Pages/code-search.aspx) to which the traveler is going, e.g. PAR for Paris
	DestinationLocationCode string `queryParam:"style=form,explode=true,name=destinationLocationCode"`
	// This option ensures that the system will ignore these airlines. This can not be cumulated with parameter includedAirlineCodes.
	//
	// Airlines are specified as [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx) and are comma-separated, e.g. 6X,7X,8X
	//
	ExcludedAirlineCodes *string `queryParam:"style=form,explode=false,name=excludedAirlineCodes"`
	// This option ensures that the system will only consider these airlines. This can not be cumulated with parameter excludedAirlineCodes.
	//
	// Airlines are specified as [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx) and are comma-separated, e.g. 6X,7X,8X
	//
	IncludedAirlineCodes *string `queryParam:"style=form,explode=false,name=includedAirlineCodes"`
	// the number of infant travelers (whose age is less or equal to 2 on date of departure). Infants travel on the lap of an adult traveler, and thus the number of infants must not exceed the number of adults. If specified, this number should be greater than or equal to 0
	Infants *int64 `queryParam:"style=form,explode=true,name=infants"`
	// maximum number of flight offers to return. If specified, the value should be greater than or equal to 1
	Max *int64 `queryParam:"style=form,explode=true,name=max"`
	// maximum price per traveler. By default, no limit is applied. If specified, the value should be a positive number with no decimals
	MaxPrice *int64 `queryParam:"style=form,explode=true,name=maxPrice"`
	// if set to true, the search will find only flights going from the origin to the destination with no stop in between
	NonStop *bool `queryParam:"style=form,explode=true,name=nonStop"`
	// city/airport [IATA code](http://www.iata.org/publications/Pages/code-search.aspx) from which the traveler will depart, e.g. BOS for Boston
	OriginLocationCode string `queryParam:"style=form,explode=true,name=originLocationCode"`
	// the date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, only one-way itineraries are found. If this parameter is specified, only round-trip itineraries are found. Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2018-02-28
	ReturnDate *types.Date `queryParam:"style=form,explode=true,name=returnDate"`
	// most of the flight time should be spent in a cabin of this quality or higher. The accepted travel class is economy, premium economy, business or first class. If no travel class is specified, the search considers any travel class
	TravelClass *GetFlightOffersTravelClassEnum `queryParam:"style=form,explode=true,name=travelClass"`
}

// GetFlightOffersSuccess - Successful Operation
type GetFlightOffersSuccess struct {
	Data         []shared.FlightOffer       `json:"data"`
	Dictionaries *shared.Dictionaries       `json:"dictionaries,omitempty"`
	Meta         *shared.CollectionMetaLink `json:"meta,omitempty"`
	Warnings     []shared.Issue             `json:"warnings,omitempty"`
}

type GetFlightOffersResponse struct {
	ContentType string
	// code    | title
	// ------- | -------------------------------------
	// 425     | INVALID DATE
	// 477     | INVALID FORMAT
	// 2668    | PARAMETER COMBINATION INVALID/RESTRICTED
	// 4926    | INVALID DATA RECEIVED
	// 10661   | MAXIMUM NUMBER OF OCCURRENCES EXCEEDED
	// 32171   | MANDATORY DATA MISSING
	//
	Error400 *shared.Error400
	// Unexpected error
	Error500    *shared.Error500
	StatusCode  int
	RawResponse *http.Response
	// Successful Operation
	Success *GetFlightOffersSuccess
}
