/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AndroidConfig - Android specific options for messages sent through [FCM connection server](https://goo.gl/4GLdUl).
 */
public class AndroidConfig {
    /**
     * An identifier of a group of messages that can be collapsed, so that only the last message gets sent when delivery can be resumed. A maximum of 4 different collapse keys is allowed at any given time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collapseKey")
    public String collapseKey;

    public AndroidConfig withCollapseKey(String collapseKey) {
        this.collapseKey = collapseKey;
        return this;
    }
    
    /**
     * Arbitrary key/value payload. If present, it will override google.firebase.fcm.v1.Message.data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public java.util.Map<String, String> data;

    public AndroidConfig withData(java.util.Map<String, String> data) {
        this.data = data;
        return this;
    }
    
    /**
     * If set to true, messages will be allowed to be delivered to the app while the device is in direct boot mode. See [Support Direct Boot mode](https://developer.android.com/training/articles/direct-boot).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directBootOk")
    public Boolean directBootOk;

    public AndroidConfig withDirectBootOk(Boolean directBootOk) {
        this.directBootOk = directBootOk;
        return this;
    }
    
    /**
     * Options for features provided by the FCM SDK for Android.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fcmOptions")
    public AndroidFcmOptions fcmOptions;

    public AndroidConfig withFcmOptions(AndroidFcmOptions fcmOptions) {
        this.fcmOptions = fcmOptions;
        return this;
    }
    
    /**
     * Notification to send to android devices.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notification")
    public AndroidNotification notification;

    public AndroidConfig withNotification(AndroidNotification notification) {
        this.notification = notification;
        return this;
    }
    
    /**
     * Message priority. Can take "normal" and "high" values. For more information, see [Setting the priority of a message](https://goo.gl/GjONJv).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public AndroidConfigPriorityEnum priority;

    public AndroidConfig withPriority(AndroidConfigPriorityEnum priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * Package name of the application where the registration token must match in order to receive the message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restrictedPackageName")
    public String restrictedPackageName;

    public AndroidConfig withRestrictedPackageName(String restrictedPackageName) {
        this.restrictedPackageName = restrictedPackageName;
        return this;
    }
    
    /**
     * How long (in seconds) the message should be kept in FCM storage if the device is offline. The maximum time to live supported is 4 weeks, and the default value is 4 weeks if not set. Set it to 0 if want to send the message immediately. In JSON format, the Duration type is encoded as a string rather than an object, where the string ends in the suffix "s" (indicating seconds) and is preceded by the number of seconds, with nanoseconds expressed as fractional seconds. For example, 3 seconds with 0 nanoseconds should be encoded in JSON format as "3s", while 3 seconds and 1 nanosecond should be expressed in JSON format as "3.000000001s". The ttl will be rounded down to the nearest second.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ttl")
    public String ttl;

    public AndroidConfig withTtl(String ttl) {
        this.ttl = ttl;
        return this;
    }
    
    public AndroidConfig(){}
}
