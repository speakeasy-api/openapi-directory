"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import result_calls as shared_result_calls
from ..shared import result_standardized_coefficients as shared_result_standardized_coefficients
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Result:
    
    calls: Optional[shared_result_calls.ResultCalls] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calls"'), 'exclude': lambda f: f is None }})  
    data_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_count'), 'exclude': lambda f: f is None }})
    r"""number of data rows processed"""  
    dates_converted_to: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dates_converted_to'), 'exclude': lambda f: f is None }})
    r"""either month or week"""  
    footer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('footer'), 'exclude': lambda f: f is None }})
    r"""text for pdf footer"""  
    header: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('header'), 'exclude': lambda f: f is None }})
    r"""text for pdf header"""  
    number_observations: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_observations'), 'exclude': lambda f: f is None }})
    r"""number of data rows used for analysis"""  
    number_tests: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_tests'), 'exclude': lambda f: f is None }})
    r"""number of data rows used to test model accuracy"""  
    outcome_variable: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outcome_variable'), 'exclude': lambda f: f is None }})
    r"""the name of the variable processed as the outcome"""  
    paid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paid'), 'exclude': lambda f: f is None }})
    r"""yes if paid subscriber, otherwise no"""  
    pdf: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pdf'), 'exclude': lambda f: f is None }})
    r"""url of pdf summary"""  
    prediction_mean_accuracy: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prediction_mean_accuracy'), 'exclude': lambda f: f is None }})
    r"""percentage accuracy of model created"""  
    standardized_coefficients: Optional[list[shared_result_standardized_coefficients.ResultStandardizedCoefficients]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('standardized_coefficients'), 'exclude': lambda f: f is None }})  
    summary: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('summary'), 'exclude': lambda f: f is None }})  
    tested_variables: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tested_variables'), 'exclude': lambda f: f is None }})  
    