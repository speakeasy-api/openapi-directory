"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudMlV1PredictionOutput:
    r"""Represents results of a prediction job."""
    
    error_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCount'), 'exclude': lambda f: f is None }})
    r"""The number of data instances which resulted in errors."""  
    node_hours: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeHours'), 'exclude': lambda f: f is None }})
    r"""Node hours used by the batch prediction job."""  
    output_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputPath'), 'exclude': lambda f: f is None }})
    r"""The output Google Cloud Storage location provided at the job creation time."""  
    prediction_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictionCount'), 'exclude': lambda f: f is None }})
    r"""The number of generated predictions."""  
    