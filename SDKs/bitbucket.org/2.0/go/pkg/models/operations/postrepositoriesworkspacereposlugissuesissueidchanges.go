// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PostRepositoriesWorkspaceRepoSlugIssuesIssueIDChangesSecurity struct {
	APIKey *string             `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
	Basic  *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	Oauth2 *string             `security:"scheme,type=oauth2,name=Authorization"`
}

type PostRepositoriesWorkspaceRepoSlugIssuesIssueIDChangesRequest struct {
	// The new issue state change. The only required elements are `changes.[].new`. All other elements can be omitted from the body.
	RequestBody map[string]interface{} `request:"mediaType=application/json"`
	// The issue id
	IssueID string `pathParam:"style=simple,explode=false,name=issue_id"`
	// This can either be the repository slug or the UUID of the repository,
	// surrounded by curly-braces, for example: `{repository UUID}`.
	//
	RepoSlug string `pathParam:"style=simple,explode=false,name=repo_slug"`
	// This can either be the workspace ID (slug) or the workspace UUID
	// surrounded by curly-braces, for example: `{workspace UUID}`.
	//
	Workspace string `pathParam:"style=simple,explode=false,name=workspace"`
}

type PostRepositoriesWorkspaceRepoSlugIssuesIssueIDChangesResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// When the request wasn't authenticated.
	Error map[string]interface{}
	// The newly created issue change.
	IssueChange map[string]interface{}
}
