/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountUserProfile - AccountUserProfiles contains properties of a Campaign Manager user profile. This resource is specifically for managing user profiles, whereas UserProfiles is for accessing the API.
 */
public class AccountUserProfile {
    /**
     * Account ID of the user profile. This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public AccountUserProfile withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Whether this user profile is active. This defaults to false, and must be set true on insert for the user profile to be usable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;

    public AccountUserProfile withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * Object Filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserFilter")
    public ObjectFilter advertiserFilter;

    public AccountUserProfile withAdvertiserFilter(ObjectFilter advertiserFilter) {
        this.advertiserFilter = advertiserFilter;
        return this;
    }
    
    /**
     * Object Filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaignFilter")
    public ObjectFilter campaignFilter;

    public AccountUserProfile withCampaignFilter(ObjectFilter campaignFilter) {
        this.campaignFilter = campaignFilter;
        return this;
    }
    
    /**
     * Comments for this user profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments")
    public String comments;

    public AccountUserProfile withComments(String comments) {
        this.comments = comments;
        return this;
    }
    
    /**
     * Email of the user profile. The email addresss must be linked to a Google Account. This field is required on insertion and is read-only after insertion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public AccountUserProfile withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * ID of the user profile. This is a read-only, auto-generated field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public AccountUserProfile withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountUserProfile".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public AccountUserProfile withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Locale of the user profile. This is a required field. Acceptable values are: - "cs" (Czech) - "de" (German) - "en" (English) - "en-GB" (English United Kingdom) - "es" (Spanish) - "fr" (French) - "it" (Italian) - "ja" (Japanese) - "ko" (Korean) - "pl" (Polish) - "pt-BR" (Portuguese Brazil) - "ru" (Russian) - "sv" (Swedish) - "tr" (Turkish) - "zh-CN" (Chinese Simplified) - "zh-TW" (Chinese Traditional) 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locale")
    public String locale;

    public AccountUserProfile withLocale(String locale) {
        this.locale = locale;
        return this;
    }
    
    /**
     * Name of the user profile. This is a required field. Must be less than 64 characters long, must be globally unique, and cannot contain whitespace or any of the following characters: "&amp;;&lt;&gt;"#%,".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public AccountUserProfile withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Object Filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("siteFilter")
    public ObjectFilter siteFilter;

    public AccountUserProfile withSiteFilter(ObjectFilter siteFilter) {
        this.siteFilter = siteFilter;
        return this;
    }
    
    /**
     * Subaccount ID of the user profile. This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subaccountId")
    public String subaccountId;

    public AccountUserProfile withSubaccountId(String subaccountId) {
        this.subaccountId = subaccountId;
        return this;
    }
    
    /**
     * Trafficker type of this user profile. This is a read-only field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("traffickerType")
    public AccountUserProfileTraffickerTypeEnum traffickerType;

    public AccountUserProfile withTraffickerType(AccountUserProfileTraffickerTypeEnum traffickerType) {
        this.traffickerType = traffickerType;
        return this;
    }
    
    /**
     * User type of the user profile. This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userAccessType")
    public AccountUserProfileUserAccessTypeEnum userAccessType;

    public AccountUserProfile withUserAccessType(AccountUserProfileUserAccessTypeEnum userAccessType) {
        this.userAccessType = userAccessType;
        return this;
    }
    
    /**
     * Object Filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userRoleFilter")
    public ObjectFilter userRoleFilter;

    public AccountUserProfile withUserRoleFilter(ObjectFilter userRoleFilter) {
        this.userRoleFilter = userRoleFilter;
        return this;
    }
    
    /**
     * User role ID of the user profile. This is a required field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userRoleId")
    public String userRoleId;

    public AccountUserProfile withUserRoleId(String userRoleId) {
        this.userRoleId = userRoleId;
        return this;
    }
    
    public AccountUserProfile(){}
}
