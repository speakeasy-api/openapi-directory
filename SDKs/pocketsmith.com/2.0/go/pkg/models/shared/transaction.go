// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TransactionStatusEnum - The status of the transaction. Pending transactions are temporary and may be superseded later by their posted counterparts, which are permanent.
type TransactionStatusEnum string

const (
	TransactionStatusEnumPending TransactionStatusEnum = "pending"
	TransactionStatusEnumPosted  TransactionStatusEnum = "posted"
)

func (e *TransactionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "posted":
		*e = TransactionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransactionStatusEnum: %s", s)
	}
}

// TransactionTypeEnum - Whether the transaction is a debit or a credit
type TransactionTypeEnum string

const (
	TransactionTypeEnumDebit  TransactionTypeEnum = "debit"
	TransactionTypeEnumCredit TransactionTypeEnum = "credit"
)

func (e *TransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "debit":
		fallthrough
	case "credit":
		*e = TransactionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransactionTypeEnum: %s", s)
	}
}

// Transaction - Success
type Transaction struct {
	Amount *float64 `json:"amount,omitempty"`
	// The amount of the transaction in the user's base currency.
	AmountInBaseCurrency *float64  `json:"amount_in_base_currency,omitempty"`
	Category             *Category `json:"category,omitempty"`
	ChequeNumber         *string   `json:"cheque_number,omitempty"`
	// The closing balance of the account at the transaction.
	ClosingBalance *float64 `json:"closing_balance,omitempty"`
	// When the transaction was created.
	CreatedAt *string `json:"created_at,omitempty"`
	// The date the transaction took place.
	Date *string `json:"date,omitempty"`
	// The unique identifier of the transaction.
	ID *int64 `json:"id,omitempty"`
	// Whether the transaction is a transfer.
	IsTransfer *bool    `json:"is_transfer,omitempty"`
	Labels     []string `json:"labels,omitempty"`
	Memo       *string  `json:"memo,omitempty"`
	// Whether the transaction needs to be reviewed.
	NeedsReview *bool   `json:"needs_review,omitempty"`
	Note        *string `json:"note,omitempty"`
	// The payee the transaction was created with.
	OriginalPayee *string `json:"original_payee,omitempty"`
	// The payee/merchant of the transaction.
	Payee *string `json:"payee,omitempty"`
	// The status of the transaction. Pending transactions are temporary and may be superseded later by their posted counterparts, which are permanent.
	Status             *TransactionStatusEnum `json:"status,omitempty"`
	TransactionAccount *TransactionAccount    `json:"transaction_account,omitempty"`
	// Whether the transaction is a debit or a credit
	Type *TransactionTypeEnum `json:"type,omitempty"`
	// When the transaction was last updated.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// Where the transaction came from.
	UploadSource *string `json:"upload_source,omitempty"`
}
