/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PolicyControllerPolicyContentState - The state of the policy controller policy content
 */
public class PolicyControllerPolicyContentState {
    /**
     * The state of the any bundles included in the chosen version of the manifest
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bundleStates")
    public java.util.Map<String, PolicyControllerOnClusterState> bundleStates;
    public PolicyControllerPolicyContentState withBundleStates(java.util.Map<String, PolicyControllerOnClusterState> bundleStates) {
        this.bundleStates = bundleStates;
        return this;
    }
    
    /**
     * OnClusterState represents the state of a sub-component of Policy Controller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("templateLibraryState")
    public PolicyControllerOnClusterState templateLibraryState;
    public PolicyControllerPolicyContentState withTemplateLibraryState(PolicyControllerOnClusterState templateLibraryState) {
        this.templateLibraryState = templateLibraryState;
        return this;
    }
    
}
