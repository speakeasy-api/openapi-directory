/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Accounts {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Accounts(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Combines Containers.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersCombineResponse tagmanagerAccountsContainersCombine(org.openapis.openapi.models.operations.TagmanagerAccountsContainersCombineRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersCombineSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersCombineRequest.class, baseUrl, "/tagmanager/v2/{path}:combine", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersCombineRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersCombineResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersCombineResponse(contentType, httpRes.statusCode()) {{
            container = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Container out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Container.class);
                res.container = out;
            }
        }

        return res;
    }

    /**
     * Creates a Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersCreateResponse tagmanagerAccountsContainersCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/containers", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "container", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersCreateResponse(contentType, httpRes.statusCode()) {{
            container = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Container out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Container.class);
                res.container = out;
            }
        }

        return res;
    }

    /**
     * Adds a Destination to this Container and removes it from the Container to which it is currently linked.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsLinkResponse tagmanagerAccountsContainersDestinationsLink(org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsLinkRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsLinkSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsLinkRequest.class, baseUrl, "/tagmanager/v2/{parent}/destinations:link", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsLinkRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsLinkResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsLinkResponse(contentType, httpRes.statusCode()) {{
            destination = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Destination out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Destination.class);
                res.destination = out;
            }
        }

        return res;
    }

    /**
     * Lists all Destinations linked to a GTM Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsListResponse tagmanagerAccountsContainersDestinationsList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsListRequest.class, baseUrl, "/tagmanager/v2/{parent}/destinations", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersDestinationsListResponse(contentType, httpRes.statusCode()) {{
            listDestinationsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListDestinationsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListDestinationsResponse.class);
                res.listDestinationsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a GTM Environment.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsCreateResponse tagmanagerAccountsContainersEnvironmentsCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/environments", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "environment", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsCreateResponse(contentType, httpRes.statusCode()) {{
            environment = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Environment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Environment.class);
                res.environment = out;
            }
        }

        return res;
    }

    /**
     * Lists all GTM Environments of a GTM Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsListResponse tagmanagerAccountsContainersEnvironmentsList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsListRequest.class, baseUrl, "/tagmanager/v2/{parent}/environments", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsListResponse(contentType, httpRes.statusCode()) {{
            listEnvironmentsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListEnvironmentsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListEnvironmentsResponse.class);
                res.listEnvironmentsResponse = out;
            }
        }

        return res;
    }

    /**
     * Re-generates the authorization code for a GTM Environment.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsReauthorizeResponse tagmanagerAccountsContainersEnvironmentsReauthorize(org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsReauthorizeRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsReauthorizeSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsReauthorizeRequest.class, baseUrl, "/tagmanager/v2/{path}:reauthorize", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "environment", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsReauthorizeRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsReauthorizeResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersEnvironmentsReauthorizeResponse(contentType, httpRes.statusCode()) {{
            environment = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Environment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Environment.class);
                res.environment = out;
            }
        }

        return res;
    }

    /**
     * Lists all Containers that belongs to a GTM Account.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersListResponse tagmanagerAccountsContainersList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersListRequest.class, baseUrl, "/tagmanager/v2/{parent}/containers", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersListResponse(contentType, httpRes.statusCode()) {{
            listContainersResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListContainersResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListContainersResponse.class);
                res.listContainersResponse = out;
            }
        }

        return res;
    }

    /**
     * Looks up a Container by destination ID.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersLookupResponse tagmanagerAccountsContainersLookup(org.openapis.openapi.models.operations.TagmanagerAccountsContainersLookupRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersLookupSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/tagmanager/v2/accounts/containers:lookup");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersLookupRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersLookupResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersLookupResponse(contentType, httpRes.statusCode()) {{
            container = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Container out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Container.class);
                res.container = out;
            }
        }

        return res;
    }

    /**
     * Move Tag ID out of a Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersMoveTagIdResponse tagmanagerAccountsContainersMoveTagId(org.openapis.openapi.models.operations.TagmanagerAccountsContainersMoveTagIdRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersMoveTagIdSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersMoveTagIdRequest.class, baseUrl, "/tagmanager/v2/{path}:move_tag_id", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersMoveTagIdRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersMoveTagIdResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersMoveTagIdResponse(contentType, httpRes.statusCode()) {{
            container = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Container out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Container.class);
                res.container = out;
            }
        }

        return res;
    }

    /**
     * Gets the tagging snippet for a Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersSnippetResponse tagmanagerAccountsContainersSnippet(org.openapis.openapi.models.operations.TagmanagerAccountsContainersSnippetRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersSnippetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersSnippetRequest.class, baseUrl, "/tagmanager/v2/{path}:snippet", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersSnippetRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersSnippetResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersSnippetResponse(contentType, httpRes.statusCode()) {{
            getContainerSnippetResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GetContainerSnippetResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GetContainerSnippetResponse.class);
                res.getContainerSnippetResponse = out;
            }
        }

        return res;
    }

    /**
     * Gets the latest container version header
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersLatestResponse tagmanagerAccountsContainersVersionHeadersLatest(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersLatestRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersLatestSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersLatestRequest.class, baseUrl, "/tagmanager/v2/{parent}/version_headers:latest", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersLatestRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersLatestResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersLatestResponse(contentType, httpRes.statusCode()) {{
            containerVersionHeader = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ContainerVersionHeader out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ContainerVersionHeader.class);
                res.containerVersionHeader = out;
            }
        }

        return res;
    }

    /**
     * Lists all Container Versions of a GTM Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersListResponse tagmanagerAccountsContainersVersionHeadersList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersListRequest.class, baseUrl, "/tagmanager/v2/{parent}/version_headers", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionHeadersListResponse(contentType, httpRes.statusCode()) {{
            listContainerVersionsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListContainerVersionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListContainerVersionsResponse.class);
                res.listContainerVersionsResponse = out;
            }
        }

        return res;
    }

    /**
     * Gets the live (i.e. published) container version
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsLiveResponse tagmanagerAccountsContainersVersionsLive(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsLiveRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsLiveSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsLiveRequest.class, baseUrl, "/tagmanager/v2/{parent}/versions:live", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsLiveRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsLiveResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsLiveResponse(contentType, httpRes.statusCode()) {{
            containerVersion = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ContainerVersion out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ContainerVersion.class);
                res.containerVersion = out;
            }
        }

        return res;
    }

    /**
     * Publishes a Container Version.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsPublishResponse tagmanagerAccountsContainersVersionsPublish(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsPublishRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsPublishSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsPublishRequest.class, baseUrl, "/tagmanager/v2/{path}:publish", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsPublishRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsPublishResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsPublishResponse(contentType, httpRes.statusCode()) {{
            publishContainerVersionResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PublishContainerVersionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PublishContainerVersionResponse.class);
                res.publishContainerVersionResponse = out;
            }
        }

        return res;
    }

    /**
     * Sets the latest version used for synchronization of workspaces when detecting conflicts and errors.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsSetLatestResponse tagmanagerAccountsContainersVersionsSetLatest(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsSetLatestRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsSetLatestSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsSetLatestRequest.class, baseUrl, "/tagmanager/v2/{path}:set_latest", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsSetLatestRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsSetLatestResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsSetLatestResponse(contentType, httpRes.statusCode()) {{
            containerVersion = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ContainerVersion out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ContainerVersion.class);
                res.containerVersion = out;
            }
        }

        return res;
    }

    /**
     * Undeletes a Container Version.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsUndeleteResponse tagmanagerAccountsContainersVersionsUndelete(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsUndeleteRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsUndeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsUndeleteRequest.class, baseUrl, "/tagmanager/v2/{path}:undelete", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsUndeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsUndeleteResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersVersionsUndeleteResponse(contentType, httpRes.statusCode()) {{
            containerVersion = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ContainerVersion out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ContainerVersion.class);
                res.containerVersion = out;
            }
        }

        return res;
    }

    /**
     * Creates one or more GTM Built-In Variables.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesCreateResponse tagmanagerAccountsContainersWorkspacesBuiltInVariablesCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/built_in_variables", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesCreateResponse(contentType, httpRes.statusCode()) {{
            createBuiltInVariableResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.CreateBuiltInVariableResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.CreateBuiltInVariableResponse.class);
                res.createBuiltInVariableResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists all the enabled Built-In Variables of a GTM Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesListResponse tagmanagerAccountsContainersWorkspacesBuiltInVariablesList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesListRequest.class, baseUrl, "/tagmanager/v2/{parent}/built_in_variables", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesListResponse(contentType, httpRes.statusCode()) {{
            listEnabledBuiltInVariablesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListEnabledBuiltInVariablesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListEnabledBuiltInVariablesResponse.class);
                res.listEnabledBuiltInVariablesResponse = out;
            }
        }

        return res;
    }

    /**
     * Reverts changes to a GTM Built-In Variables in a GTM Workspace.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesRevertResponse tagmanagerAccountsContainersWorkspacesBuiltInVariablesRevert(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesRevertRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesRevertSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesRevertRequest.class, baseUrl, "/tagmanager/v2/{path}/built_in_variables:revert", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesRevertRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesRevertResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesBuiltInVariablesRevertResponse(contentType, httpRes.statusCode()) {{
            revertBuiltInVariableResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RevertBuiltInVariableResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RevertBuiltInVariableResponse.class);
                res.revertBuiltInVariableResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a GTM Client.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsCreateResponse tagmanagerAccountsContainersWorkspacesClientsCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/clients", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "client", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsCreateResponse(contentType, httpRes.statusCode()) {{
            client = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Client out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Client.class);
                res.client = out;
            }
        }

        return res;
    }

    /**
     * Lists all GTM Clients of a GTM container workspace.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsListResponse tagmanagerAccountsContainersWorkspacesClientsList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsListRequest.class, baseUrl, "/tagmanager/v2/{parent}/clients", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesClientsListResponse(contentType, httpRes.statusCode()) {{
            listClientsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListClientsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListClientsResponse.class);
                res.listClientsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a Workspace.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateResponse tagmanagerAccountsContainersWorkspacesCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/workspaces", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "workspace", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateResponse(contentType, httpRes.statusCode()) {{
            workspace = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Workspace out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Workspace.class);
                res.workspace = out;
            }
        }

        return res;
    }

    /**
     * Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateVersionResponse tagmanagerAccountsContainersWorkspacesCreateVersion(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateVersionRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateVersionSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateVersionRequest.class, baseUrl, "/tagmanager/v2/{path}:create_version", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "createContainerVersionRequestVersionOptions", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateVersionRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateVersionResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesCreateVersionResponse(contentType, httpRes.statusCode()) {{
            createContainerVersionResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.CreateContainerVersionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.CreateContainerVersionResponse.class);
                res.createContainerVersionResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a GTM Folder.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersCreateResponse tagmanagerAccountsContainersWorkspacesFoldersCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/folders", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "folder", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersCreateResponse(contentType, httpRes.statusCode()) {{
            folder = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Folder out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Folder.class);
                res.folder = out;
            }
        }

        return res;
    }

    /**
     * List all entities in a GTM Folder.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersEntitiesResponse tagmanagerAccountsContainersWorkspacesFoldersEntities(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersEntitiesRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersEntitiesSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersEntitiesRequest.class, baseUrl, "/tagmanager/v2/{path}:entities", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersEntitiesRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersEntitiesResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersEntitiesResponse(contentType, httpRes.statusCode()) {{
            folderEntities = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.FolderEntities out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.FolderEntities.class);
                res.folderEntities = out;
            }
        }

        return res;
    }

    /**
     * Lists all GTM Folders of a Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersListResponse tagmanagerAccountsContainersWorkspacesFoldersList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersListRequest.class, baseUrl, "/tagmanager/v2/{parent}/folders", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersListResponse(contentType, httpRes.statusCode()) {{
            listFoldersResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListFoldersResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListFoldersResponse.class);
                res.listFoldersResponse = out;
            }
        }

        return res;
    }

    /**
     * Moves entities to a GTM Folder.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolderResponse tagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolder(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolderRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolderSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolderRequest.class, baseUrl, "/tagmanager/v2/{path}:move_entities_to_folder", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "folder", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolderRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolderResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesFoldersMoveEntitiesToFolderResponse(contentType, httpRes.statusCode()) {{
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }

        return res;
    }

    /**
     * Finds conflicting and modified entities in the workspace.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGetStatusResponse tagmanagerAccountsContainersWorkspacesGetStatus(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGetStatusRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGetStatusSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGetStatusRequest.class, baseUrl, "/tagmanager/v2/{path}/status", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGetStatusRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGetStatusResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGetStatusResponse(contentType, httpRes.statusCode()) {{
            getWorkspaceStatusResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GetWorkspaceStatusResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GetWorkspaceStatusResponse.class);
                res.getWorkspaceStatusResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a Google tag config.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigCreateResponse tagmanagerAccountsContainersWorkspacesGtagConfigCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/gtag_config", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "gtagConfig", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigCreateResponse(contentType, httpRes.statusCode()) {{
            gtagConfig = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GtagConfig out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GtagConfig.class);
                res.gtagConfig = out;
            }
        }

        return res;
    }

    /**
     * Lists all Google tag configs in a Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigListResponse tagmanagerAccountsContainersWorkspacesGtagConfigList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigListRequest.class, baseUrl, "/tagmanager/v2/{parent}/gtag_config", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesGtagConfigListResponse(contentType, httpRes.statusCode()) {{
            listGtagConfigResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListGtagConfigResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListGtagConfigResponse.class);
                res.listGtagConfigResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists all Workspaces that belong to a GTM Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesListResponse tagmanagerAccountsContainersWorkspacesList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesListRequest.class, baseUrl, "/tagmanager/v2/{parent}/workspaces", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesListResponse(contentType, httpRes.statusCode()) {{
            listWorkspacesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListWorkspacesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListWorkspacesResponse.class);
                res.listWorkspacesResponse = out;
            }
        }

        return res;
    }

    /**
     * Quick previews a workspace by creating a fake container version from all entities in the provided workspace.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesQuickPreviewResponse tagmanagerAccountsContainersWorkspacesQuickPreview(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesQuickPreviewRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesQuickPreviewSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesQuickPreviewRequest.class, baseUrl, "/tagmanager/v2/{path}:quick_preview", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesQuickPreviewRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesQuickPreviewResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesQuickPreviewResponse(contentType, httpRes.statusCode()) {{
            quickPreviewResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.QuickPreviewResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.QuickPreviewResponse.class);
                res.quickPreviewResponse = out;
            }
        }

        return res;
    }

    /**
     * Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesResolveConflictResponse tagmanagerAccountsContainersWorkspacesResolveConflict(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesResolveConflictRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesResolveConflictSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesResolveConflictRequest.class, baseUrl, "/tagmanager/v2/{path}:resolve_conflict", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "entity", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesResolveConflictRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesResolveConflictResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesResolveConflictResponse(contentType, httpRes.statusCode()) {{
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }

        return res;
    }

    /**
     * Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesSyncResponse tagmanagerAccountsContainersWorkspacesSync(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesSyncRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesSyncSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesSyncRequest.class, baseUrl, "/tagmanager/v2/{path}:sync", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesSyncRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesSyncResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesSyncResponse(contentType, httpRes.statusCode()) {{
            syncWorkspaceResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.SyncWorkspaceResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.SyncWorkspaceResponse.class);
                res.syncWorkspaceResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a GTM Tag.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsCreateResponse tagmanagerAccountsContainersWorkspacesTagsCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/tags", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "tag", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsCreateResponse(contentType, httpRes.statusCode()) {{
            tag = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Tag out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Tag.class);
                res.tag = out;
            }
        }

        return res;
    }

    /**
     * Lists all GTM Tags of a Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsListResponse tagmanagerAccountsContainersWorkspacesTagsList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsListRequest.class, baseUrl, "/tagmanager/v2/{parent}/tags", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTagsListResponse(contentType, httpRes.statusCode()) {{
            listTagsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListTagsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListTagsResponse.class);
                res.listTagsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a GTM Custom Template.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesCreateResponse tagmanagerAccountsContainersWorkspacesTemplatesCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/templates", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "customTemplate", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesCreateResponse(contentType, httpRes.statusCode()) {{
            customTemplate = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.CustomTemplate out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.CustomTemplate.class);
                res.customTemplate = out;
            }
        }

        return res;
    }

    /**
     * Lists all GTM Templates of a GTM container workspace.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesListResponse tagmanagerAccountsContainersWorkspacesTemplatesList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesListRequest.class, baseUrl, "/tagmanager/v2/{parent}/templates", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTemplatesListResponse(contentType, httpRes.statusCode()) {{
            listTemplatesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListTemplatesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListTemplatesResponse.class);
                res.listTemplatesResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a GTM Trigger.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersCreateResponse tagmanagerAccountsContainersWorkspacesTriggersCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/triggers", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "trigger", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersCreateResponse(contentType, httpRes.statusCode()) {{
            trigger = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Trigger out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Trigger.class);
                res.trigger = out;
            }
        }

        return res;
    }

    /**
     * Lists all GTM Triggers of a Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersListResponse tagmanagerAccountsContainersWorkspacesTriggersList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersListRequest.class, baseUrl, "/tagmanager/v2/{parent}/triggers", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesTriggersListResponse(contentType, httpRes.statusCode()) {{
            listTriggersResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListTriggersResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListTriggersResponse.class);
                res.listTriggersResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a GTM Variable.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesCreateResponse tagmanagerAccountsContainersWorkspacesVariablesCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/variables", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "variable", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesCreateResponse(contentType, httpRes.statusCode()) {{
            variable = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Variable out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Variable.class);
                res.variable = out;
            }
        }

        return res;
    }

    /**
     * Lists all GTM Variables of a Container.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesListResponse tagmanagerAccountsContainersWorkspacesVariablesList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesListRequest.class, baseUrl, "/tagmanager/v2/{parent}/variables", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesVariablesListResponse(contentType, httpRes.statusCode()) {{
            listVariablesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListVariablesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListVariablesResponse.class);
                res.listVariablesResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a GTM Zone.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesCreateResponse tagmanagerAccountsContainersWorkspacesZonesCreate(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/zones", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "zone", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesCreateResponse(contentType, httpRes.statusCode()) {{
            zone = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Zone out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Zone.class);
                res.zone = out;
            }
        }

        return res;
    }

    /**
     * Lists all GTM Zones of a GTM container workspace.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesListResponse tagmanagerAccountsContainersWorkspacesZonesList(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesListRequest.class, baseUrl, "/tagmanager/v2/{parent}/zones", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesListResponse(contentType, httpRes.statusCode()) {{
            listZonesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListZonesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListZonesResponse.class);
                res.listZonesResponse = out;
            }
        }

        return res;
    }

    /**
     * Reverts changes to a GTM Zone in a GTM Workspace.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesRevertResponse tagmanagerAccountsContainersWorkspacesZonesRevert(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesRevertRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesRevertSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesRevertRequest.class, baseUrl, "/tagmanager/v2/{path}:revert", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesRevertRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesRevertResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsContainersWorkspacesZonesRevertResponse(contentType, httpRes.statusCode()) {{
            revertZoneResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RevertZoneResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RevertZoneResponse.class);
                res.revertZoneResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists all GTM Accounts that a user has access to.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsListResponse tagmanagerAccountsList(org.openapis.openapi.models.operations.TagmanagerAccountsListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/tagmanager/v2/accounts");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsListResponse(contentType, httpRes.statusCode()) {{
            listAccountsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListAccountsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListAccountsResponse.class);
                res.listAccountsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a user's Account &amp; Container access.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsCreateResponse tagmanagerAccountsUserPermissionsCreate(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsCreateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsCreateRequest.class, baseUrl, "/tagmanager/v2/{parent}/user_permissions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "userPermission", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsCreateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsCreateResponse(contentType, httpRes.statusCode()) {{
            userPermission = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.UserPermission out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.UserPermission.class);
                res.userPermission = out;
            }
        }

        return res;
    }

    /**
     * Removes a user from the account, revoking access to it and all of its containers.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsDeleteResponse tagmanagerAccountsUserPermissionsDelete(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsDeleteRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsDeleteRequest.class, baseUrl, "/tagmanager/v2/{path}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsDeleteResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsDeleteResponse(contentType, httpRes.statusCode()) {{
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }

        return res;
    }

    /**
     * Gets a user's Account &amp; Container access.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsGetResponse tagmanagerAccountsUserPermissionsGet(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsGetRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsGetRequest.class, baseUrl, "/tagmanager/v2/{path}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsGetRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsGetResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsGetResponse(contentType, httpRes.statusCode()) {{
            userPermission = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.UserPermission out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.UserPermission.class);
                res.userPermission = out;
            }
        }

        return res;
    }

    /**
     * List all users that have access to the account along with Account and Container user access granted to each of them.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsListResponse tagmanagerAccountsUserPermissionsList(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsListRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsListRequest.class, baseUrl, "/tagmanager/v2/{parent}/user_permissions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsListResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsListResponse(contentType, httpRes.statusCode()) {{
            listUserPermissionsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListUserPermissionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListUserPermissionsResponse.class);
                res.listUserPermissionsResponse = out;
            }
        }

        return res;
    }

    /**
     * Updates a user's Account &amp; Container access.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsUpdateResponse tagmanagerAccountsUserPermissionsUpdate(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsUpdateRequest request, org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsUpdateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsUpdateRequest.class, baseUrl, "/tagmanager/v2/{path}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "userPermission", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsUpdateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsUpdateResponse res = new org.openapis.openapi.models.operations.TagmanagerAccountsUserPermissionsUpdateResponse(contentType, httpRes.statusCode()) {{
            userPermission = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.UserPermission out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.UserPermission.class);
                res.userPermission = out;
            }
        }

        return res;
    }
}