/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The metric used for the subscription.
 */
export enum DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsMetricEnum {
  AggregateLatency = "aggregate-latency",
}

/**
 * The data aggregation time for the subscription.
 */
export enum DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsPeriodEnum {
  FiveMinutes = "five-minutes",
  FifteenMinutes = "fifteen-minutes",
  OneHour = "one-hour",
  ThreeHours = "three-hours",
  OneDay = "one-day",
  OneWeek = "one-week",
}

/**
 * The statistic used for the subscription.
 */
export enum DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsStatisticEnum {
  P50 = "p50",
}

/**
 * Describes an Infrastructure Performance subscription.
 */
export class DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destination?: string;

  @SpeakeasyMetadata()
  metric?: DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsMetricEnum;

  @SpeakeasyMetadata()
  period?: DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsPeriodEnum;

  @SpeakeasyMetadata()
  source?: string;

  @SpeakeasyMetadata()
  statistic?: DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptionsStatisticEnum;
}

/**
 * Success
 */
export class DescribeAwsNetworkPerformanceMetricSubscriptionsResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptions,
  })
  subscriptions?: DescribeAwsNetworkPerformanceMetricSubscriptionsResultSubscriptions[];
}
