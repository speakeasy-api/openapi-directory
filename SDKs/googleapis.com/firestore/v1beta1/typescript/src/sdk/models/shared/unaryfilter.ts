/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FieldReference } from "./fieldreference";
import { Expose, Type } from "class-transformer";

/**
 * The unary operator to apply.
 */
export enum UnaryFilterOpEnum {
  OperatorUnspecified = "OPERATOR_UNSPECIFIED",
  IsNan = "IS_NAN",
  IsNull = "IS_NULL",
  IsNotNan = "IS_NOT_NAN",
  IsNotNull = "IS_NOT_NULL",
}

/**
 * A filter with a single operand.
 */
export class UnaryFilter extends SpeakeasyBase {
  /**
   * A reference to a field in a document, ex: `stats.operations`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "field" })
  @Type(() => FieldReference)
  field?: FieldReference;

  /**
   * The unary operator to apply.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "op" })
  op?: UnaryFilterOpEnum;
}
