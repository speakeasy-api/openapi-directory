"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepositoriesListResponse = exports.RepositoriesList200ApplicationJSON = exports.RepositoriesListDefaultApplicationJSON = exports.RepositoriesListRequest = exports.RepositoriesListSourceHostEnum = exports.RepositoriesListFormEnum = exports.RepositoriesListSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var RepositoriesListSecurity = /** @class */ (function (_super) {
    __extends(RepositoriesListSecurity, _super);
    function RepositoriesListSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
        }),
        __metadata("design:type", String)
    ], RepositoriesListSecurity.prototype, "apiToken", void 0);
    return RepositoriesListSecurity;
}(utils_1.SpeakeasyBase));
exports.RepositoriesListSecurity = RepositoriesListSecurity;
/**
 * The selected form of the object
 */
var RepositoriesListFormEnum;
(function (RepositoriesListFormEnum) {
    RepositoriesListFormEnum["Lite"] = "lite";
    RepositoriesListFormEnum["Full"] = "full";
})(RepositoriesListFormEnum = exports.RepositoriesListFormEnum || (exports.RepositoriesListFormEnum = {}));
/**
 * The source host
 */
var RepositoriesListSourceHostEnum;
(function (RepositoriesListSourceHostEnum) {
    RepositoriesListSourceHostEnum["Github"] = "github";
    RepositoriesListSourceHostEnum["Bitbucket"] = "bitbucket";
    RepositoriesListSourceHostEnum["Vsts"] = "vsts";
    RepositoriesListSourceHostEnum["Gitlab"] = "gitlab";
})(RepositoriesListSourceHostEnum = exports.RepositoriesListSourceHostEnum || (exports.RepositoriesListSourceHostEnum = {}));
var RepositoriesListRequest = /** @class */ (function (_super) {
    __extends(RepositoriesListRequest, _super);
    function RepositoriesListRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=app_name",
        }),
        __metadata("design:type", String)
    ], RepositoriesListRequest.prototype, "appName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=form" }),
        __metadata("design:type", String)
    ], RepositoriesListRequest.prototype, "form", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=owner_name",
        }),
        __metadata("design:type", String)
    ], RepositoriesListRequest.prototype, "ownerName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=service_connection_id",
        }),
        __metadata("design:type", String)
    ], RepositoriesListRequest.prototype, "serviceConnectionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=source_host",
        }),
        __metadata("design:type", String)
    ], RepositoriesListRequest.prototype, "sourceHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=vstsAccountName",
        }),
        __metadata("design:type", String)
    ], RepositoriesListRequest.prototype, "vstsAccountName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=vstsProjectId",
        }),
        __metadata("design:type", String)
    ], RepositoriesListRequest.prototype, "vstsProjectId", void 0);
    return RepositoriesListRequest;
}(utils_1.SpeakeasyBase));
exports.RepositoriesListRequest = RepositoriesListRequest;
/**
 * Bad Request
 */
var RepositoriesListDefaultApplicationJSON = /** @class */ (function (_super) {
    __extends(RepositoriesListDefaultApplicationJSON, _super);
    function RepositoriesListDefaultApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], RepositoriesListDefaultApplicationJSON.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], RepositoriesListDefaultApplicationJSON.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], RepositoriesListDefaultApplicationJSON.prototype, "message", void 0);
    return RepositoriesListDefaultApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.RepositoriesListDefaultApplicationJSON = RepositoriesListDefaultApplicationJSON;
/**
 * The source repository
 */
var RepositoriesList200ApplicationJSON = /** @class */ (function (_super) {
    __extends(RepositoriesList200ApplicationJSON, _super);
    function RepositoriesList200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clone_url" }),
        __metadata("design:type", String)
    ], RepositoriesList200ApplicationJSON.prototype, "cloneUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], RepositoriesList200ApplicationJSON.prototype, "name", void 0);
    return RepositoriesList200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.RepositoriesList200ApplicationJSON = RepositoriesList200ApplicationJSON;
var RepositoriesListResponse = /** @class */ (function (_super) {
    __extends(RepositoriesListResponse, _super);
    function RepositoriesListResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RepositoriesListResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RepositoriesListResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RepositoriesListResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: RepositoriesList200ApplicationJSON }),
        __metadata("design:type", Array)
    ], RepositoriesListResponse.prototype, "repositoriesList200ApplicationJSONObjects", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", RepositoriesListDefaultApplicationJSON)
    ], RepositoriesListResponse.prototype, "repositoriesListDefaultApplicationJSONObject", void 0);
    return RepositoriesListResponse;
}(utils_1.SpeakeasyBase));
exports.RepositoriesListResponse = RepositoriesListResponse;
