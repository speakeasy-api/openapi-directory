// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GetBackendStorageResponseResourceConfigPermissions - The authorization configuration for the storage S3 bucket.
type GetBackendStorageResponseResourceConfigPermissions struct {
	Authenticated   []AuthenticatedElementEnum   `json:"Authenticated"`
	UnAuthenticated []UnAuthenticatedElementEnum `json:"UnAuthenticated,omitempty"`
}

// GetBackendStorageResponseResourceConfigServiceNameEnum - The name of the storage service.
type GetBackendStorageResponseResourceConfigServiceNameEnum string

const (
	GetBackendStorageResponseResourceConfigServiceNameEnumS3 GetBackendStorageResponseResourceConfigServiceNameEnum = "S3"
)

func (e *GetBackendStorageResponseResourceConfigServiceNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "S3":
		*e = GetBackendStorageResponseResourceConfigServiceNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBackendStorageResponseResourceConfigServiceNameEnum: %s", s)
	}
}

// GetBackendStorageResponseResourceConfig - The resource configuration for the backend storage resource.
type GetBackendStorageResponseResourceConfig struct {
	BucketName  *string                                                `json:"BucketName,omitempty"`
	Imported    bool                                                   `json:"Imported"`
	Permissions *GetBackendStorageResponseResourceConfigPermissions    `json:"Permissions,omitempty"`
	ServiceName GetBackendStorageResponseResourceConfigServiceNameEnum `json:"ServiceName"`
}

// GetBackendStorageResponse - Success
type GetBackendStorageResponse struct {
	AppID                  *string                                  `json:"AppId,omitempty"`
	BackendEnvironmentName *string                                  `json:"BackendEnvironmentName,omitempty"`
	ResourceConfig         *GetBackendStorageResponseResourceConfig `json:"ResourceConfig,omitempty"`
	ResourceName           *string                                  `json:"ResourceName,omitempty"`
}
