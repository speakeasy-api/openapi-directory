// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTModifyFleetActionEnum
type POSTModifyFleetActionEnum string

const (
	POSTModifyFleetActionEnumModifyFleet POSTModifyFleetActionEnum = "ModifyFleet"
)

func (e *POSTModifyFleetActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyFleet":
		*e = POSTModifyFleetActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTModifyFleetActionEnum: %s", s)
	}
}

// POSTModifyFleetVersionEnum
type POSTModifyFleetVersionEnum string

const (
	POSTModifyFleetVersionEnumTwoThousandAndSixteen1115 POSTModifyFleetVersionEnum = "2016-11-15"
)

func (e *POSTModifyFleetVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTModifyFleetVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTModifyFleetVersionEnum: %s", s)
	}
}

type POSTModifyFleetRequest struct {
	Action            POSTModifyFleetActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                     `request:"mediaType=text/xml"`
	Version           POSTModifyFleetVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTModifyFleetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
