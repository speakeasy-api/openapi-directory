<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class BankAccount
{
    /**
     * The bank account number (without separators).
     * 
     * @var ?string $bankAccountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankAccountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankAccountNumber = null;
    
    /**
     * The bank city.
     * 
     * @var ?string $bankCity
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankCity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankCity = null;
    
    /**
     * The location id of the bank. The field value is `nil` in most cases.
     * 
     * @var ?string $bankLocationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankLocationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankLocationId = null;
    
    /**
     * The name of the bank.
     * 
     * @var ?string $bankName
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankName = null;
    
    /**
     * The [Business Identifier Code](https://en.wikipedia.org/wiki/ISO_9362) (BIC) is the SWIFT address assigned to a bank. The field value is `nil` in most cases.
     * 
     * @var ?string $bic
     */
	#[\JMS\Serializer\Annotation\SerializedName('bic')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bic = null;
    
    /**
     * Country code where the bank is located.
     * 
     * 
     * A valid value is an ISO two-character country code (e.g. 'NL').
     * 
     * @var ?string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('countryCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $countryCode = null;
    
    /**
     * The [International Bank Account Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number) (IBAN).
     * 
     * @var ?string $iban
     */
	#[\JMS\Serializer\Annotation\SerializedName('iban')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iban = null;
    
    /**
     * The name of the bank account holder.
     * 
     * If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:
     * * χ12 is converted to ch12.
     * * üA is converted to euA.
     * * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.
     * After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:
     * * John17 - allowed.
     * * J17 - allowed.
     * * 171 - not allowed.
     * * John-7 - allowed.
     * > If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.
     * 
     * @var ?string $ownerName
     */
	#[\JMS\Serializer\Annotation\SerializedName('ownerName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ownerName = null;
    
    /**
     * The bank account holder's tax ID.
     * 
     * @var ?string $taxId
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxId = null;
    
	public function __construct()
	{
		$this->bankAccountNumber = null;
		$this->bankCity = null;
		$this->bankLocationId = null;
		$this->bankName = null;
		$this->bic = null;
		$this->countryCode = null;
		$this->iban = null;
		$this->ownerName = null;
		$this->taxId = null;
	}
}
