// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ExportConfigurationsCreateSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type ExportConfigurationsCreateRequestBodyExportEntitiesEnum string

const (
	ExportConfigurationsCreateRequestBodyExportEntitiesEnumCrashes     ExportConfigurationsCreateRequestBodyExportEntitiesEnum = "crashes"
	ExportConfigurationsCreateRequestBodyExportEntitiesEnumErrors      ExportConfigurationsCreateRequestBodyExportEntitiesEnum = "errors"
	ExportConfigurationsCreateRequestBodyExportEntitiesEnumAttachments ExportConfigurationsCreateRequestBodyExportEntitiesEnum = "attachments"
	ExportConfigurationsCreateRequestBodyExportEntitiesEnumNoLogs      ExportConfigurationsCreateRequestBodyExportEntitiesEnum = "no_logs"
)

func (e *ExportConfigurationsCreateRequestBodyExportEntitiesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "crashes":
		fallthrough
	case "errors":
		fallthrough
	case "attachments":
		fallthrough
	case "no_logs":
		*e = ExportConfigurationsCreateRequestBodyExportEntitiesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsCreateRequestBodyExportEntitiesEnum: %s", s)
	}
}

// ExportConfigurationsCreateRequestBodyTypeEnum - Type of export configuration
type ExportConfigurationsCreateRequestBodyTypeEnum string

const (
	ExportConfigurationsCreateRequestBodyTypeEnumBlobStorageConnectionString           ExportConfigurationsCreateRequestBodyTypeEnum = "blob_storage_connection_string"
	ExportConfigurationsCreateRequestBodyTypeEnumApplicationInsightsInstrumentationKey ExportConfigurationsCreateRequestBodyTypeEnum = "application_insights_instrumentation_key"
	ExportConfigurationsCreateRequestBodyTypeEnumBlobStorageLinkedSubscription         ExportConfigurationsCreateRequestBodyTypeEnum = "blob_storage_linked_subscription"
	ExportConfigurationsCreateRequestBodyTypeEnumApplicationInsightsLinkedSubscription ExportConfigurationsCreateRequestBodyTypeEnum = "application_insights_linked_subscription"
)

func (e *ExportConfigurationsCreateRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "blob_storage_connection_string":
		fallthrough
	case "application_insights_instrumentation_key":
		fallthrough
	case "blob_storage_linked_subscription":
		fallthrough
	case "application_insights_linked_subscription":
		*e = ExportConfigurationsCreateRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsCreateRequestBodyTypeEnum: %s", s)
	}
}

// ExportConfigurationsCreateRequestBody - Export configuration
type ExportConfigurationsCreateRequestBody struct {
	// Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation.
	Backfill       *bool                                                     `json:"backfill,omitempty"`
	ExportEntities []ExportConfigurationsCreateRequestBodyExportEntitiesEnum `json:"export_entities,omitempty"`
	// The resource group name on azure
	ResourceGroup *string `json:"resource_group,omitempty"`
	// The resource name on azure
	ResourceName *string `json:"resource_name,omitempty"`
	// Type of export configuration
	Type ExportConfigurationsCreateRequestBodyTypeEnum `json:"type"`
}

type ExportConfigurationsCreateRequest struct {
	// Export configurations.
	RequestBody ExportConfigurationsCreateRequestBody `request:"mediaType=application/json"`
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum string

const (
	ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnumBadRequest          ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnumConflict            ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum = "Conflict"
	ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnumNotAcceptable       ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnumNotFound            ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum = "NotFound"
	ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnumInternalServerError ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnumUnauthorized        ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnumTooManyRequests     ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type ExportConfigurationsCreateDefaultApplicationJSONError struct {
	Code    ExportConfigurationsCreateDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                        `json:"message"`
}

// ExportConfigurationsCreateDefaultApplicationJSON - Error code with reason
type ExportConfigurationsCreateDefaultApplicationJSON struct {
	Error ExportConfigurationsCreateDefaultApplicationJSONError `json:"error"`
}

type ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnum string

const (
	ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnumCrashes     ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnum = "crashes"
	ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnumErrors      ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnum = "errors"
	ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnumAttachments ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnum = "attachments"
	ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnumNoLogs      ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnum = "no_logs"
)

func (e *ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "crashes":
		fallthrough
	case "errors":
		fallthrough
	case "attachments":
		fallthrough
	case "no_logs":
		*e = ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnum: %s", s)
	}
}

// ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnum - Type of export configuration
type ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnum string

const (
	ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnumBlobStorageConnectionString           ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnum = "blob_storage_connection_string"
	ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnumApplicationInsightsInstrumentationKey ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnum = "application_insights_instrumentation_key"
	ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnumBlobStorageLinkedSubscription         ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnum = "blob_storage_linked_subscription"
	ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnumApplicationInsightsLinkedSubscription ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnum = "application_insights_linked_subscription"
)

func (e *ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "blob_storage_connection_string":
		fallthrough
	case "application_insights_instrumentation_key":
		fallthrough
	case "blob_storage_linked_subscription":
		fallthrough
	case "application_insights_linked_subscription":
		*e = ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnum: %s", s)
	}
}

// ExportConfigurationsCreate202ApplicationJSONExportConfiguration - Export configuration
type ExportConfigurationsCreate202ApplicationJSONExportConfiguration struct {
	// Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation.
	Backfill       *bool                                                                               `json:"backfill,omitempty"`
	ExportEntities []ExportConfigurationsCreate202ApplicationJSONExportConfigurationExportEntitiesEnum `json:"export_entities,omitempty"`
	// The resource group name on azure
	ResourceGroup *string `json:"resource_group,omitempty"`
	// The resource name on azure
	ResourceName *string `json:"resource_name,omitempty"`
	// Type of export configuration
	Type ExportConfigurationsCreate202ApplicationJSONExportConfigurationTypeEnum `json:"type"`
}

type ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnum string

const (
	ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnumCrashes     ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnum = "crashes"
	ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnumErrors      ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnum = "errors"
	ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnumAttachments ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnum = "attachments"
	ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnumNoLogs      ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnum = "no_logs"
)

func (e *ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "crashes":
		fallthrough
	case "errors":
		fallthrough
	case "attachments":
		fallthrough
	case "no_logs":
		*e = ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnum: %s", s)
	}
}

// ExportConfigurationsCreate202ApplicationJSONExportTypeEnum - Target resource type of export configuration
type ExportConfigurationsCreate202ApplicationJSONExportTypeEnum string

const (
	ExportConfigurationsCreate202ApplicationJSONExportTypeEnumBlobStorage ExportConfigurationsCreate202ApplicationJSONExportTypeEnum = "BlobStorage"
	ExportConfigurationsCreate202ApplicationJSONExportTypeEnumAppInsights ExportConfigurationsCreate202ApplicationJSONExportTypeEnum = "AppInsights"
)

func (e *ExportConfigurationsCreate202ApplicationJSONExportTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BlobStorage":
		fallthrough
	case "AppInsights":
		*e = ExportConfigurationsCreate202ApplicationJSONExportTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsCreate202ApplicationJSONExportTypeEnum: %s", s)
	}
}

// ExportConfigurationsCreate202ApplicationJSONStateEnum - State of the export job
type ExportConfigurationsCreate202ApplicationJSONStateEnum string

const (
	ExportConfigurationsCreate202ApplicationJSONStateEnumEnabled  ExportConfigurationsCreate202ApplicationJSONStateEnum = "Enabled"
	ExportConfigurationsCreate202ApplicationJSONStateEnumDisabled ExportConfigurationsCreate202ApplicationJSONStateEnum = "Disabled"
	ExportConfigurationsCreate202ApplicationJSONStateEnumPending  ExportConfigurationsCreate202ApplicationJSONStateEnum = "Pending"
	ExportConfigurationsCreate202ApplicationJSONStateEnumDeleted  ExportConfigurationsCreate202ApplicationJSONStateEnum = "Deleted"
	ExportConfigurationsCreate202ApplicationJSONStateEnumInvalid  ExportConfigurationsCreate202ApplicationJSONStateEnum = "Invalid"
)

func (e *ExportConfigurationsCreate202ApplicationJSONStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enabled":
		fallthrough
	case "Disabled":
		fallthrough
	case "Pending":
		fallthrough
	case "Deleted":
		fallthrough
	case "Invalid":
		*e = ExportConfigurationsCreate202ApplicationJSONStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsCreate202ApplicationJSONStateEnum: %s", s)
	}
}

// ExportConfigurationsCreate202ApplicationJSON - Export configuration result
type ExportConfigurationsCreate202ApplicationJSON struct {
	// Creation time in ISO 8601 format
	CreationTime string `json:"creation_time"`
	// Export configuration
	ExportConfiguration *ExportConfigurationsCreate202ApplicationJSONExportConfiguration `json:"export_configuration,omitempty"`
	ExportEntities      []ExportConfigurationsCreate202ApplicationJSONExportEntitiesEnum `json:"export_entities,omitempty"`
	// Target resource type of export configuration
	ExportType ExportConfigurationsCreate202ApplicationJSONExportTypeEnum `json:"export_type"`
	// Export configuration id
	ID string `json:"id"`
	// Latest time in ISO 8601 format when export completed successfully
	LastRunTime *string `json:"last_run_time,omitempty"`
	// resource group for the storage account/App Insights resource
	ResourceGroup *string `json:"resource_group,omitempty"`
	// Storage accout or Appinsights resource name
	ResourceName *string `json:"resource_name,omitempty"`
	// State of the export job
	State ExportConfigurationsCreate202ApplicationJSONStateEnum `json:"state"`
	// Additional information about export configuration state
	StateInfo *string `json:"state_info,omitempty"`
}

type ExportConfigurationsCreateResponse struct {
	ContentType string
	// Create export configuration request successfully received.
	ExportConfigurationsCreate202ApplicationJSONObject *ExportConfigurationsCreate202ApplicationJSON
	// Error code with reason
	ExportConfigurationsCreateDefaultApplicationJSONObject *ExportConfigurationsCreateDefaultApplicationJSON
	StatusCode                                             int
	RawResponse                                            *http.Response
}
