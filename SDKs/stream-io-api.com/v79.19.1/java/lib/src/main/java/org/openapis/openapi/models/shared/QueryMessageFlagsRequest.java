/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class QueryMessageFlagsRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filter_conditions")
    public java.util.Map<String, Object> filterConditions;
    public QueryMessageFlagsRequest withFilterConditions(java.util.Map<String, Object> filterConditions) {
        this.filterConditions = filterConditions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limit")
    public Double limit;
    public QueryMessageFlagsRequest withLimit(Double limit) {
        this.limit = limit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Double offset;
    public QueryMessageFlagsRequest withOffset(Double offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Represents chat user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public java.util.Map<String, Object> user;
    public QueryMessageFlagsRequest withUser(java.util.Map<String, Object> user) {
        this.user = user;
        return this;
    }
    
    /**
     * **Server-side only**. User ID which server acts upon
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;
    public QueryMessageFlagsRequest withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
}
