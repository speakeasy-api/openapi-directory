"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScriptStackFrame:
    
    end_column: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endColumn'), 'exclude': lambda f: f is None }})
    r"""[Output-only] One-based end column."""  
    end_line: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endLine'), 'exclude': lambda f: f is None }})
    r"""[Output-only] One-based end line."""  
    procedure_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('procedureId'), 'exclude': lambda f: f is None }})
    r"""[Output-only] Name of the active procedure, empty if in a top-level script."""  
    start_column: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startColumn'), 'exclude': lambda f: f is None }})
    r"""[Output-only] One-based start column."""  
    start_line: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startLine'), 'exclude': lambda f: f is None }})
    r"""[Output-only] One-based start line."""  
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""[Output-only] Text of the current statement/expression."""  
    