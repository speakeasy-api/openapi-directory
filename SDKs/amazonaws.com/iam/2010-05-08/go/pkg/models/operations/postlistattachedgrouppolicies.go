// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListAttachedGroupPoliciesActionEnum
type POSTListAttachedGroupPoliciesActionEnum string

const (
	POSTListAttachedGroupPoliciesActionEnumListAttachedGroupPolicies POSTListAttachedGroupPoliciesActionEnum = "ListAttachedGroupPolicies"
)

func (e POSTListAttachedGroupPoliciesActionEnum) ToPointer() *POSTListAttachedGroupPoliciesActionEnum {
	return &e
}

func (e *POSTListAttachedGroupPoliciesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListAttachedGroupPolicies":
		*e = POSTListAttachedGroupPoliciesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListAttachedGroupPoliciesActionEnum: %v", v)
	}
}

// POSTListAttachedGroupPoliciesVersionEnum
type POSTListAttachedGroupPoliciesVersionEnum string

const (
	POSTListAttachedGroupPoliciesVersionEnumTwoThousandAndTen0508 POSTListAttachedGroupPoliciesVersionEnum = "2010-05-08"
)

func (e POSTListAttachedGroupPoliciesVersionEnum) ToPointer() *POSTListAttachedGroupPoliciesVersionEnum {
	return &e
}

func (e *POSTListAttachedGroupPoliciesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTListAttachedGroupPoliciesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListAttachedGroupPoliciesVersionEnum: %v", v)
	}
}

type POSTListAttachedGroupPoliciesRequest struct {
	Action POSTListAttachedGroupPoliciesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxItems          *string                                  `queryParam:"style=form,explode=true,name=MaxItems"`
	RequestBody       []byte                                   `request:"mediaType=text/xml"`
	Version           POSTListAttachedGroupPoliciesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListAttachedGroupPoliciesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
