<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * POSTJournalEntryType - Container for custom fields of a Journal Entry object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class POSTJournalEntryType
{
    /**
     * Name of the accounting period. The open-ended accounting period is named `Open-Ended`.
     * 
     * 
     * 
     * @var string $accountingPeriodName
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountingPeriodName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountingPeriodName;
    
    /**
     * The type of currency used. Currency must be active.
     * 
     * 
     * 
     * @var string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currency;
    
    /**
     * Date of the journal entry.
     * 
     * 
     * 
     * @var \DateTime $journalEntryDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('journalEntryDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $journalEntryDate;
    
    /**
     * Key name that represents the list of journal entry items.
     * 
     * 
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\POSTJournalEntryItemType> $journalEntryItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('journalEntryItems')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\POSTJournalEntryItemType>')]
    public array $journalEntryItems;
    
    /**
     * The number associated with the revenue event.
     * 
     * 
     * Character limit: 2,000
     * 
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * List of segments that apply to the summary journal entry.
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\POSTJournalEntrySegmentType> $segments
     */
	#[\JMS\Serializer\Annotation\SerializedName('segments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\POSTJournalEntrySegmentType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $segments = null;
    
    /**
     * Status shows whether the journal entry has been transferred to an accounting system.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\POSTJournalEntryTypeTransferredToAccountingEnum $transferredToAccounting
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferredToAccounting')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTJournalEntryTypeTransferredToAccountingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTJournalEntryTypeTransferredToAccountingEnum $transferredToAccounting = null;
    
	public function __construct()
	{
		$this->accountingPeriodName = "";
		$this->currency = "";
		$this->journalEntryDate = new \DateTime();
		$this->journalEntryItems = [];
		$this->notes = null;
		$this->segments = null;
		$this->transferredToAccounting = null;
	}
}
