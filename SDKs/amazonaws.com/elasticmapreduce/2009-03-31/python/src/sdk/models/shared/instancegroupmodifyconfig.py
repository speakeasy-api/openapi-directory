"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configuration as shared_configuration
from ..shared import reconfigurationtype_enum as shared_reconfigurationtype_enum
from ..shared import shrinkpolicy as shared_shrinkpolicy
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InstanceGroupModifyConfig:
    r"""Modify the size or configurations of an instance group."""
    
    instance_group_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceGroupId') }})  
    configurations: Optional[list[shared_configuration.Configuration]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Configurations'), 'exclude': lambda f: f is None }})  
    ec2_instance_ids_to_terminate: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EC2InstanceIdsToTerminate'), 'exclude': lambda f: f is None }})  
    instance_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceCount'), 'exclude': lambda f: f is None }})  
    reconfiguration_type: Optional[shared_reconfigurationtype_enum.ReconfigurationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReconfigurationType'), 'exclude': lambda f: f is None }})  
    shrink_policy: Optional[shared_shrinkpolicy.ShrinkPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShrinkPolicy'), 'exclude': lambda f: f is None }})  
    