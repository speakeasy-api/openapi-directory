// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MemberStatusEnum string

const (
	MemberStatusEnumInvited                MemberStatusEnum = "INVITED"
	MemberStatusEnumVerificationInProgress MemberStatusEnum = "VERIFICATION_IN_PROGRESS"
	MemberStatusEnumVerificationFailed     MemberStatusEnum = "VERIFICATION_FAILED"
	MemberStatusEnumEnabled                MemberStatusEnum = "ENABLED"
	MemberStatusEnumAcceptedButDisabled    MemberStatusEnum = "ACCEPTED_BUT_DISABLED"
)

func (e MemberStatusEnum) ToPointer() *MemberStatusEnum {
	return &e
}

func (e *MemberStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVITED":
		fallthrough
	case "VERIFICATION_IN_PROGRESS":
		fallthrough
	case "VERIFICATION_FAILED":
		fallthrough
	case "ENABLED":
		fallthrough
	case "ACCEPTED_BUT_DISABLED":
		*e = MemberStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MemberStatusEnum: %v", v)
	}
}
