// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// PostAPIPagesRequestBodyTemplateEnum - Controls what kind of layout the page is rendered in
type PostAPIPagesRequestBodyTemplateEnum string

const (
	PostAPIPagesRequestBodyTemplateEnumContained        PostAPIPagesRequestBodyTemplateEnum = "contained"
	PostAPIPagesRequestBodyTemplateEnumFullWithinLayout PostAPIPagesRequestBodyTemplateEnum = "full_within_layout"
	PostAPIPagesRequestBodyTemplateEnumNavBarIncluded   PostAPIPagesRequestBodyTemplateEnum = "nav_bar_included"
	PostAPIPagesRequestBodyTemplateEnumJSON             PostAPIPagesRequestBodyTemplateEnum = "json"
)

func (e *PostAPIPagesRequestBodyTemplateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "contained":
		fallthrough
	case "full_within_layout":
		fallthrough
	case "nav_bar_included":
		fallthrough
	case "json":
		*e = PostAPIPagesRequestBodyTemplateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAPIPagesRequestBodyTemplateEnum: %s", s)
	}
}

type PostAPIPagesRequestBody struct {
	// For JSON pages, the JSON body
	BodyJSON *string `json:"body_json,omitempty"`
	// The text (in markdown) of the ad (required)
	BodyMarkdown *string `json:"body_markdown,omitempty"`
	// For internal use, helps similar pages from one another
	Description *string `json:"description,omitempty"`
	// If true, the page is available at '/{slug}' instead of '/page/{slug}', use with caution
	IsTopLevelPath *bool `json:"is_top_level_path,omitempty"`
	// Used to link to this page in URLs, must be unique and URL-safe
	Slug *string `json:"slug,omitempty"`
	// Controls what kind of layout the page is rendered in
	Template *PostAPIPagesRequestBodyTemplateEnum `json:"template,omitempty"`
	// Title of the page
	Title *string `json:"title,omitempty"`
}

type PostAPIPagesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
