/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReportInfo - Report additional information, which is specific to Assess reports
 */
public class ReportInfo {
    /**
     * The name of the company being queried.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyName")
    public String companyName;

    public ReportInfo withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     * Date the report was generated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("generatedDate")
    public String generatedDate;

    public ReportInfo withGeneratedDate(String generatedDate) {
        this.generatedDate = generatedDate;
        return this;
    }
    
    /**
     * The number of the page queried.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageNumber")
    public Long pageNumber;

    public ReportInfo withPageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }
    
    /**
     * The number of transactions returned per page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageSize")
    public Long pageSize;

    public ReportInfo withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Name of the report
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportName")
    public String reportName;

    public ReportInfo withReportName(String reportName) {
        this.reportName = reportName;
        return this;
    }
    
    /**
     * The total number of transactions available for a company for the period specified in the query string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalResults")
    public Long totalResults;

    public ReportInfo withTotalResults(Long totalResults) {
        this.totalResults = totalResults;
        return this;
    }
    
    public ReportInfo(){}
}
