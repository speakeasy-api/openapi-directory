<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetOrganizationSensorReadingsLatestRequest
{
    /**
     * A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     * @var ?string $endingBefore
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=endingBefore')]
    public ?string $endingBefore = null;
    
    /**
     * Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
     * 
     * @var ?array<string> $metrics
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=metrics')]
    public ?array $metrics = null;
    
    /**
     * Optional parameter to filter readings by network.
     * 
     * @var ?array<string> $networkIds
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=networkIds')]
    public ?array $networkIds = null;
    
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=organizationId')]
    public string $organizationId;
    
    /**
     * The number of entries per page returned. Acceptable range is 3 - 100. Default is 100.
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=perPage')]
    public ?int $perPage = null;
    
    /**
     * Optional parameter to filter readings by sensor.
     * 
     * @var ?array<string> $serials
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=serials')]
    public ?array $serials = null;
    
    /**
     * A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     * 
     * @var ?string $startingAfter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=startingAfter')]
    public ?string $startingAfter = null;
    
	public function __construct()
	{
		$this->endingBefore = null;
		$this->metrics = null;
		$this->networkIds = null;
		$this->organizationId = "";
		$this->perPage = null;
		$this->serials = null;
		$this->startingAfter = null;
	}
}
