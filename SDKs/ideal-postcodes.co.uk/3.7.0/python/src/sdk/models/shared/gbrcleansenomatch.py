"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class GbrCleanseNoMatchConfidenceEnum(str, Enum):
    ZERO = '0'

class GbrCleanseNoMatchCountEnum(str, Enum):
    ZERO = '0'

class GbrCleanseNoMatchFitEnum(str, Enum):
    ZERO = '0'

class GbrCleanseNoMatchLocalityMatchEnum(str, Enum):
    NO_MATCH = 'NO_MATCH'

class GbrCleanseNoMatchMatchEnum(str, Enum):
    r"""Nearest matching address"""
    NULL = 'null'

class GbrCleanseNoMatchOrganisationMatchEnum(str, Enum):
    NO_MATCH = 'NO_MATCH'

class GbrCleanseNoMatchPostTownMatchEnum(str, Enum):
    NO_MATCH = 'NO_MATCH'

class GbrCleanseNoMatchPostcodeMatchEnum(str, Enum):
    NO_MATCH = 'NO_MATCH'

class GbrCleanseNoMatchPremiseMatchEnum(str, Enum):
    NO_MATCH = 'NO_MATCH'

class GbrCleanseNoMatchThoroughfareMatchEnum(str, Enum):
    NO_MATCH = 'NO_MATCH'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GbrCleanseNoMatch:
    
    confidence: GbrCleanseNoMatchConfidenceEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('confidence') }})  
    count: GbrCleanseNoMatchCountEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count') }})  
    fit: GbrCleanseNoMatchFitEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fit') }})  
    locality_match: GbrCleanseNoMatchLocalityMatchEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locality_match') }})  
    match: GbrCleanseNoMatchMatchEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('match') }})
    r"""Nearest matching address"""  
    organisation_match: GbrCleanseNoMatchOrganisationMatchEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('organisation_match') }})  
    post_town_match: GbrCleanseNoMatchPostTownMatchEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('post_town_match') }})  
    postcode_match: GbrCleanseNoMatchPostcodeMatchEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postcode_match') }})  
    premise_match: GbrCleanseNoMatchPremiseMatchEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('premise_match') }})  
    query: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query') }})
    r"""Originally submitted query"""  
    thoroughfare_match: GbrCleanseNoMatchThoroughfareMatchEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thoroughfare_match') }})  
    