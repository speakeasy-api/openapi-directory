// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum - The response status for the attendee.
type CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum string

const (
	CreateCalendarEventResponseRequestDataAttributesResponseStatusEnumAccepted  CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum = "accepted"
	CreateCalendarEventResponseRequestDataAttributesResponseStatusEnumDeclined  CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum = "declined"
	CreateCalendarEventResponseRequestDataAttributesResponseStatusEnumTentative CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum = "tentative"
)

func (e CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum) ToPointer() *CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum {
	return &e
}

func (e *CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "accepted":
		fallthrough
	case "declined":
		fallthrough
	case "tentative":
		*e = CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum: %v", v)
	}
}

type CreateCalendarEventResponseRequestDataAttributes struct {
	// The attendee in the attendees list of the calendar event.
	Attendee map[string]interface{} `json:"attendee"`
	// The response status for the attendee.
	ResponseStatus CreateCalendarEventResponseRequestDataAttributesResponseStatusEnum `json:"response_status"`
}

type CreateCalendarEventResponseRequestDataRelationshipsCalendarEvent struct {
	Data Data `json:"data"`
}

type CreateCalendarEventResponseRequestDataRelationshipsUser struct {
	Data Data `json:"data"`
}

type CreateCalendarEventResponseRequestDataRelationships struct {
	CalendarEvent *CreateCalendarEventResponseRequestDataRelationshipsCalendarEvent `json:"calendar_event,omitempty"`
	User          *CreateCalendarEventResponseRequestDataRelationshipsUser          `json:"user,omitempty"`
}

type CreateCalendarEventResponseRequestData struct {
	Attributes    CreateCalendarEventResponseRequestDataAttributes    `json:"attributes"`
	Relationships CreateCalendarEventResponseRequestDataRelationships `json:"relationships"`
	Type          TypeEnum1                                           `json:"type"`
}

type CreateCalendarEventResponseRequest struct {
	Data CreateCalendarEventResponseRequestData `json:"data"`
}
