"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import flaterrorresponse as shared_flaterrorresponse
from ..shared import userpublic as shared_userpublic
from typing import Optional


@dataclasses.dataclass
class GetUserSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetUserRequest:
    
    user: str = dataclasses.field(metadata={'path_param': { 'field_name': 'user', 'style': 'simple', 'explode': False }})
    r"""This route parameter is the unique identifier of the user. You can specify an email instead of an unique identifier. If you are executing this request authenticated, you can use `me` as a value instead of the current User unique identifier to work on the current authenticated user."""  
    

@dataclasses.dataclass
class GetUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    flat_error_response: Optional[shared_flaterrorresponse.FlatErrorResponse] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    user_public: Optional[shared_userpublic.UserPublic] = dataclasses.field(default=None)
    r"""The user public details"""  
    