/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AggregatedProfileTime } from "./aggregatedprofiletime";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  Profiling status includes information about the last time a profile agent pinged back, the last time a profile was received, and the aggregation period and start time for the most recent aggregated profile.
 */
export class ProfilingStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "latestAgentOrchestratedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestAgentOrchestratedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "latestAgentProfileReportedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestAgentProfileReportedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "latestAggregatedProfile" })
  @Type(() => AggregatedProfileTime)
  latestAggregatedProfile?: AggregatedProfileTime;
}
