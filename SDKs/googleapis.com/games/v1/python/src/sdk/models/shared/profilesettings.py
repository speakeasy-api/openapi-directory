"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProfileSettingsFriendsListVisibilityEnum(str, Enum):
    FRIENDS_LIST_VISIBILITY_UNSPECIFIED = 'FRIENDS_LIST_VISIBILITY_UNSPECIFIED'
    VISIBLE = 'VISIBLE'
    REQUEST_REQUIRED = 'REQUEST_REQUIRED'
    UNAVAILABLE = 'UNAVAILABLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProfileSettings:
    r"""Profile settings"""
    
    friends_list_visibility: Optional[ProfileSettingsFriendsListVisibilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('friendsListVisibility'), 'exclude': lambda f: f is None }})  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#profileSettings`."""  
    profile_visible: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profileVisible'), 'exclude': lambda f: f is None }})
    r"""Whether the player's profile is visible to the currently signed in player."""  
    