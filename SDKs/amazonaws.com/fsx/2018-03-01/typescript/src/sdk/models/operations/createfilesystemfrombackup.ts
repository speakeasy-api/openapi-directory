/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum CreateFileSystemFromBackupXAmzTargetEnum {
  AWSSimbaAPIServiceV20180301CreateFileSystemFromBackup = "AWSSimbaAPIService_v20180301.CreateFileSystemFromBackup",
}

export class CreateFileSystemFromBackupRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  createFileSystemFromBackupRequest: shared.CreateFileSystemFromBackupRequest;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Target",
  })
  xAmzTarget: CreateFileSystemFromBackupXAmzTargetEnum;
}

export class CreateFileSystemFromBackupResponse extends SpeakeasyBase {
  /**
   * ActiveDirectoryError
   */
  @SpeakeasyMetadata()
  activeDirectoryError?: any;

  /**
   * BackupNotFound
   */
  @SpeakeasyMetadata()
  backupNotFound?: any;

  /**
   * BadRequest
   */
  @SpeakeasyMetadata()
  badRequest?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createFileSystemFromBackupResponse?: shared.CreateFileSystemFromBackupResponse;

  /**
   * IncompatibleParameterError
   */
  @SpeakeasyMetadata()
  incompatibleParameterError?: any;

  /**
   * InternalServerError
   */
  @SpeakeasyMetadata()
  internalServerError?: any;

  /**
   * InvalidNetworkSettings
   */
  @SpeakeasyMetadata()
  invalidNetworkSettings?: any;

  /**
   * InvalidPerUnitStorageThroughput
   */
  @SpeakeasyMetadata()
  invalidPerUnitStorageThroughput?: any;

  /**
   * MissingFileSystemConfiguration
   */
  @SpeakeasyMetadata()
  missingFileSystemConfiguration?: any;

  /**
   * ServiceLimitExceeded
   */
  @SpeakeasyMetadata()
  serviceLimitExceeded?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
