"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import trafficrule as shared_trafficrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkConfiguration:
    
    down_rule: Optional[shared_trafficrule.TrafficRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('downRule'), 'exclude': lambda f: f is None }})
    r"""Network emulation parameters."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique opaque id for this network traffic configuration."""  
    up_rule: Optional[shared_trafficrule.TrafficRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upRule'), 'exclude': lambda f: f is None }})
    r"""Network emulation parameters."""  
    