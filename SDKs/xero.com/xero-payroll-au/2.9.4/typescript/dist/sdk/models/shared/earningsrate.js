"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EarningsRateInput = exports.EarningsRate = void 0;
var utils_1 = require("../../../internal/utils");
var allowancetypeenum_1 = require("./allowancetypeenum");
var earningstypeenum_1 = require("./earningstypeenum");
var employmentterminationpaymenttypeenum_1 = require("./employmentterminationpaymenttypeenum");
var ratetypeenum_1 = require("./ratetypeenum");
var class_transformer_1 = require("class-transformer");
var EarningsRate = /** @class */ (function (_super) {
    __extends(EarningsRate, _super);
    function EarningsRate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AccountCode" }),
        __metadata("design:type", String)
    ], EarningsRate.prototype, "accountCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AccrueLeave" }),
        __metadata("design:type", Boolean)
    ], EarningsRate.prototype, "accrueLeave", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AllowanceType" }),
        __metadata("design:type", String)
    ], EarningsRate.prototype, "allowanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Amount" }),
        __metadata("design:type", Number)
    ], EarningsRate.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CurrentRecord" }),
        __metadata("design:type", Boolean)
    ], EarningsRate.prototype, "currentRecord", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EarningsRateID" }),
        __metadata("design:type", String)
    ], EarningsRate.prototype, "earningsRateID", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EarningsType" }),
        __metadata("design:type", String)
    ], EarningsRate.prototype, "earningsType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EmploymentTerminationPaymentType" }),
        __metadata("design:type", String)
    ], EarningsRate.prototype, "employmentTerminationPaymentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IsExemptFromSuper" }),
        __metadata("design:type", Boolean)
    ], EarningsRate.prototype, "isExemptFromSuper", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IsExemptFromTax" }),
        __metadata("design:type", Boolean)
    ], EarningsRate.prototype, "isExemptFromTax", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IsReportableAsW1" }),
        __metadata("design:type", Boolean)
    ], EarningsRate.prototype, "isReportableAsW1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Multiplier" }),
        __metadata("design:type", Number)
    ], EarningsRate.prototype, "multiplier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Name" }),
        __metadata("design:type", String)
    ], EarningsRate.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RatePerUnit" }),
        __metadata("design:type", String)
    ], EarningsRate.prototype, "ratePerUnit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RateType" }),
        __metadata("design:type", String)
    ], EarningsRate.prototype, "rateType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "TypeOfUnits" }),
        __metadata("design:type", String)
    ], EarningsRate.prototype, "typeOfUnits", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "UpdatedDateUTC" }),
        __metadata("design:type", String)
    ], EarningsRate.prototype, "updatedDateUTC", void 0);
    return EarningsRate;
}(utils_1.SpeakeasyBase));
exports.EarningsRate = EarningsRate;
var EarningsRateInput = /** @class */ (function (_super) {
    __extends(EarningsRateInput, _super);
    function EarningsRateInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AccountCode" }),
        __metadata("design:type", String)
    ], EarningsRateInput.prototype, "accountCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AccrueLeave" }),
        __metadata("design:type", Boolean)
    ], EarningsRateInput.prototype, "accrueLeave", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AllowanceType" }),
        __metadata("design:type", String)
    ], EarningsRateInput.prototype, "allowanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Amount" }),
        __metadata("design:type", Number)
    ], EarningsRateInput.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CurrentRecord" }),
        __metadata("design:type", Boolean)
    ], EarningsRateInput.prototype, "currentRecord", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EarningsRateID" }),
        __metadata("design:type", String)
    ], EarningsRateInput.prototype, "earningsRateID", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EarningsType" }),
        __metadata("design:type", String)
    ], EarningsRateInput.prototype, "earningsType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EmploymentTerminationPaymentType" }),
        __metadata("design:type", String)
    ], EarningsRateInput.prototype, "employmentTerminationPaymentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IsExemptFromSuper" }),
        __metadata("design:type", Boolean)
    ], EarningsRateInput.prototype, "isExemptFromSuper", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IsExemptFromTax" }),
        __metadata("design:type", Boolean)
    ], EarningsRateInput.prototype, "isExemptFromTax", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IsReportableAsW1" }),
        __metadata("design:type", Boolean)
    ], EarningsRateInput.prototype, "isReportableAsW1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Multiplier" }),
        __metadata("design:type", Number)
    ], EarningsRateInput.prototype, "multiplier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Name" }),
        __metadata("design:type", String)
    ], EarningsRateInput.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RatePerUnit" }),
        __metadata("design:type", String)
    ], EarningsRateInput.prototype, "ratePerUnit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RateType" }),
        __metadata("design:type", String)
    ], EarningsRateInput.prototype, "rateType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "TypeOfUnits" }),
        __metadata("design:type", String)
    ], EarningsRateInput.prototype, "typeOfUnits", void 0);
    return EarningsRateInput;
}(utils_1.SpeakeasyBase));
exports.EarningsRateInput = EarningsRateInput;
