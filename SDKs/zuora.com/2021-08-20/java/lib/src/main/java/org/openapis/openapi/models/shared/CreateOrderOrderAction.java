/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateOrderOrderAction {
    /**
     * Information about an order action of type `addProduct`. 
     * 
     * If you want to create a pending order through the "Add product" order action, and if the charge's trigger condition is `Specific Date`, you must set a charge number in the `chargeNumber` field for the "Add product" order action. In this case, if you do not set it, Zuora will not generate the charge number for you.
     * 
     * See more information about pending orders in [Pending Order and Subscription](https://knowledgecenter.zuora.com/BC_Subscription_Management/Orders/Pending_Order_and_Subscription). 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addProduct")
    public CreateOrderRatePlanOverride addProduct;
    public CreateOrderOrderAction withAddProduct(CreateOrderRatePlanOverride addProduct) {
        this.addProduct = addProduct;
        return this;
    }
    
    /**
     * Information about an order action of type `CancelSubscription`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancelSubscription")
    public CancelSubscription cancelSubscription;
    public CreateOrderOrderAction withCancelSubscription(CancelSubscription cancelSubscription) {
        this.cancelSubscription = cancelSubscription;
        return this;
    }
    
    /**
     * Information about an order action of type `CreateSubscription`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createSubscription")
    public CreateOrderCreateSubscription createSubscription;
    public CreateOrderOrderAction withCreateSubscription(CreateOrderCreateSubscription createSubscription) {
        this.createSubscription = createSubscription;
        return this;
    }
    
    /**
     * Container for custom fields of an Order Action object.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public java.util.Map<String, Object> customFields;
    public CreateOrderOrderAction withCustomFields(java.util.Map<String, Object> customFields) {
        this.customFields = customFields;
        return this;
    }
    
    /**
     * Information about an order action of type `OwnerTransfer`.
     * 
     * **Note:** The Owner Transfer feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerTransfer")
    public OwnerTransfer ownerTransfer;
    public CreateOrderOrderAction withOwnerTransfer(OwnerTransfer ownerTransfer) {
        this.ownerTransfer = ownerTransfer;
        return this;
    }
    
    /**
     * Information about an order action of type `RemoveProduct`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("removeProduct")
    public RemoveProduct removeProduct;
    public CreateOrderOrderAction withRemoveProduct(RemoveProduct removeProduct) {
        this.removeProduct = removeProduct;
        return this;
    }
    
    /**
     * Information about an order action of type `Resume`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resume")
    public CreateOrderResume resume;
    public CreateOrderOrderAction withResume(CreateOrderResume resume) {
        this.resume = resume;
        return this;
    }
    
    /**
     * Information about an order action of type `Suspend`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suspend")
    public CreateOrderSuspend suspend;
    public CreateOrderOrderAction withSuspend(CreateOrderSuspend suspend) {
        this.suspend = suspend;
        return this;
    }
    
    /**
     * Information about an order action of type `TermsAndConditions`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("termsAndConditions")
    public CreateOrderTermsAndConditions termsAndConditions;
    public CreateOrderOrderAction withTermsAndConditions(CreateOrderTermsAndConditions termsAndConditions) {
        this.termsAndConditions = termsAndConditions;
        return this;
    }
    
    /**
     * Container for the contract effective, service activation, and customer acceptance dates of the order action. 
     * 
     * If [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the `ServiceActivation` field is not set for a `CreateSubscription` order action, a `Pending` order and a `Pending Activation` subscription are created.
     * 
     * If [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the `CustomerAcceptance` field is not set for a `CreateSubscription` order action, a `Pending` order and a `Pending Acceptance` subscription are created. At the same time, if the service activation date field is also required and not set, a `Pending` order and a `Pending Activation` subscription are created instead.
     * 
     * If [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the `ServiceActivation` field is not set for either of the following order actions, a `Pending` order is created. The subscription status is not impacted. **Note:** This feature is in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     *  * AddProduct
     *  * UpdateProduct
     *  * RemoveProduct
     *  * RenewSubscription
     *  * TermsAndConditions
     * 
     * If [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the `CustomerAcceptance` field is not set for either of the following order actions, a `Pending` order is created. The subscription status is not impacted. **Note:** This feature is in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     *  * AddProduct
     *  * UpdateProduct
     *  * RemoveProduct
     *  * RenewSubscription
     *  * TermsAndConditions
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerDates")
    public TriggerDate[] triggerDates;
    public CreateOrderOrderAction withTriggerDates(TriggerDate[] triggerDates) {
        this.triggerDates = triggerDates;
        return this;
    }
    
    /**
     * Type of order action.
     * 
     * Unless the type of order action is `RenewSubscription`, you must use the corresponding field to provide information about the order action. For example, if the type of order action is `AddProduct`, you must set the `addProduct` field.
     * 
     * Zuora returns an error if you set a field that corresponds to a different type of order action. For example, if the type of order action is `AddProduct`, Zuora returns an error if you set the `updateProduct` field.
     * 
     * A [pending order](https://knowledgecenter.zuora.com/BC_Subscription_Management/Orders/Pending_Order_and_Subscription) supports the following order actions:
     *  * CreateSubscription
     *  * AddProduct
     *  * UpdateProduct
     *  * RemoveProduct
     *  * RenewSubscription
     *  * TermsAndConditions
     * 
     * However, pending orders created through all order actions except for "Create new subscription":
     *  * Do not impact the subscription status.
     *  * Are in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com). 
     * 
     * A pending order is created in either of the following conditions:
     *  * [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the service activation date is not set in your "Create an order" call.
     *  * [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the customer acceptance date is not set in your "Create an order" call.
     *  * When a charge in the subscription has its `triggerEvent` field set as `SpecificDate` and the `specificTriggerDate` field is not set in your "Create an order" API call.
     * 
     */
    @JsonProperty("type")
    public CreateOrderOrderActionTypeEnum type;
    public CreateOrderOrderAction withType(CreateOrderOrderActionTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Information about an order action of type `UpdateProduct`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateProduct")
    public CreateOrderRatePlanUpdate updateProduct;
    public CreateOrderOrderAction withUpdateProduct(CreateOrderRatePlanUpdate updateProduct) {
        this.updateProduct = updateProduct;
        return this;
    }
    
}
