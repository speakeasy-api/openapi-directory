"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetV1ValidationSingleFormatEnum(str, Enum):
    r"""Return the result in json (default) or xml format."""
    JSON = 'json'
    XML = 'xml'


@dataclasses.dataclass
class GetV1ValidationSingleRequest:
    
    email: str = dataclasses.field(metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})
    r"""The email address to be validated."""  
    key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""API key."""  
    format: Optional[GetV1ValidationSingleFormatEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})
    r"""Return the result in json (default) or xml format."""  
    

@dataclasses.dataclass
class GetV1ValidationSingleResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_v1_validation_single_200_application_json_string: Optional[str] = dataclasses.field(default=None)
    r"""single email validation response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    