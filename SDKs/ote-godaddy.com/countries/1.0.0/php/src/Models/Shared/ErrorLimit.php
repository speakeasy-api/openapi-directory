<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ErrorLimit - Too many requests received within interval
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ErrorLimit
{
    /**
     * Short identifier for the error, suitable for indicating the specific error within client code
     * 
     * @var string $code
     */
	#[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $code;
    
    /**
     * List of the specific fields, and the errors found with their contents
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ErrorField> $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ErrorField>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fields = null;
    
    /**
     * Human-readable, English description of the error
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * Number of seconds to wait before attempting a similar request
     * 
     * @var int $retryAfterSec
     */
	#[\JMS\Serializer\Annotation\SerializedName('retryAfterSec')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $retryAfterSec;
    
    /**
     * Stack trace indicating where the error occurred.<br/>
     * 
     * NOTE: This attribute <strong>MAY</strong> be included for Development and Test environments.
     * However, it <strong>MUST NOT</strong> be exposed from OTE nor Production systems
     * 
     * @var ?array<string> $stack
     */
	#[\JMS\Serializer\Annotation\SerializedName('stack')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $stack = null;
    
	public function __construct()
	{
		$this->code = "";
		$this->fields = null;
		$this->message = null;
		$this->retryAfterSec = 0;
		$this->stack = null;
	}
}
