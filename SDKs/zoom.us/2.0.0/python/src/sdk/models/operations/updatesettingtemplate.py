"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class UpdateSettingTemplateSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONPolicyAdHocCallRecording:
    
    enable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enable'), 'exclude': lambda f: f is None }})
    r"""Allow current extension to record and save calls in the cloud."""  
    recording_start_prompt: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recording_start_prompt'), 'exclude': lambda f: f is None }})
    r"""Play a prompt to call participants when the recording has started."""  
    recording_transcription: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recording_transcription'), 'exclude': lambda f: f is None }})
    r"""Allow call recording transcription."""  
    
class UpdateSettingTemplateApplicationJSONPolicyAutoCallRecordingRecordingCallsEnum(str, Enum):
    r"""Values: inbound, outbound, both."""
    INBOUND = 'inbound'
    OUTBOUND = 'outbound'
    BOTH = 'both'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONPolicyAutoCallRecording:
    
    enable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enable'), 'exclude': lambda f: f is None }})
    r"""Automatic call recording."""  
    recording_calls: Optional[UpdateSettingTemplateApplicationJSONPolicyAutoCallRecordingRecordingCallsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recording_calls'), 'exclude': lambda f: f is None }})
    r"""Values: inbound, outbound, both."""  
    recording_start_prompt: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recording_start_prompt'), 'exclude': lambda f: f is None }})
    r"""Play a prompt to call participants when the recording has started."""  
    recording_transcription: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recording_transcription'), 'exclude': lambda f: f is None }})
    r"""Allow call recording transcription."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONPolicySms:
    
    enable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enable'), 'exclude': lambda f: f is None }})
    r"""Allow user to send and receive messages."""  
    international_sms: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('international_sms'), 'exclude': lambda f: f is None }})
    r"""Whether or not SMS is international."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONPolicyVoicemail:
    
    allow_transcription: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allow_transcription'), 'exclude': lambda f: f is None }})
    r"""Allow voicemail transcription."""  
    enable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enable'), 'exclude': lambda f: f is None }})
    r"""Allow current extension to access, receive, or share voicemail."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONPolicy:
    
    ad_hoc_call_recording: Optional[UpdateSettingTemplateApplicationJSONPolicyAdHocCallRecording] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ad_hoc_call_recording'), 'exclude': lambda f: f is None }})  
    auto_call_recording: Optional[UpdateSettingTemplateApplicationJSONPolicyAutoCallRecording] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_call_recording'), 'exclude': lambda f: f is None }})  
    sms: Optional[UpdateSettingTemplateApplicationJSONPolicySms] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms'), 'exclude': lambda f: f is None }})  
    voicemail: Optional[UpdateSettingTemplateApplicationJSONPolicyVoicemail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voicemail'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONProfile:
    
    area_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('area_code'), 'exclude': lambda f: f is None }})
    r"""The area code from which the phone account was created."""  
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""Name of the country where the template was created."""  
    
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursBusinessHourActionEnum(str, Enum):
    r"""When a call is not answered:<br>
    0-Forward to voicemail;<br>
    1-Play a message, then disconnect; <br>
    9-Disconnect; <br>
    26-Forward to External Contacts; <br>
    50-Forward to another extension
    """
    ZERO = '0'
    ONE = '1'
    NINE = '9'
    TWENTY_SIX = '26'
    FIFTY = '50'

class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursConnectToOperatorTypeEnum(str, Enum):
    r"""Values:<br>
    1-user,<br>
    2-callQueue, <br>
    3-autoReceptionist,<br>
    4-commonAreaPhone,<br>
    5-zoomRoom, <br>
    7-sharedLineGroup
    """
    USER = 'user'
    ZOOM_ROOM = 'zoomRoom'
    COMMON_AREA_PHONE = 'commonAreaPhone'
    AUTO_RECEPTIONIST = 'autoReceptionist'
    CALL_QUEUE = 'callQueue'
    SHARED_LINE_GROUP = 'sharedLineGroup'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursConnectToOperator:
    r"""Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options."""
    
    enable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enable'), 'exclude': lambda f: f is None }})
    r"""Enable connect to operator."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup. This ID is passed along with the `type` if the `close_hour_action` was not set with a value of *26*."""  
    type: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursConnectToOperatorTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Values:<br>
    1-user,<br>
    2-callQueue, <br>
    3-autoReceptionist,<br>
    4-commonAreaPhone,<br>
    5-zoomRoom, <br>
    7-sharedLineGroup
    """  
    
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHoursTypeEnum(str, Enum):
    r"""Values:<br>
    1-24 Hours,<br>
    2-customized hours
    """
    ONE = '1'
    TWO = '2'

class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHoursWeekdayEnum(str, Enum):
    r"""Values: 1-7 sun-sat"""
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'
    FIVE = '5'
    SIX = '6'
    SEVEN = '7'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHours:
    
    from_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from'), 'exclude': lambda f: f is None }})
    r"""Values:<br>
    hh:mm
    """  
    to: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to'), 'exclude': lambda f: f is None }})
    r"""Values:<br>
    hh:mm
    """  
    type: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHoursTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Values:<br>
    1-24 Hours,<br>
    2-customized hours
    """  
    weekday: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHoursWeekdayEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weekday'), 'exclude': lambda f: f is None }})
    r"""Values: 1-7 sun-sat"""  
    
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursRingTypeEnum(str, Enum):
    r"""Call Handling Ring Mode:<br>
    0-Simultaneous,<br>
    1-Sequential
    """
    ZERO = '0'
    ONE = '1'

class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursRingingDurationEnum(str, Enum):
    r"""Ringing Duration for Each Device, in seconds. Values:<br>
    15,20,25,30,35,40,45,50,55,60
    """
    FIFTEEN = '15'
    TWENTY = '20'
    TWENTY_FIVE = '25'
    THIRTY = '30'
    THIRTY_FIVE = '35'
    FORTY = '40'
    FORTY_FIVE = '45'
    FIFTY = '50'
    FIFTY_FIVE = '55'
    SIXTY = '60'

class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursTypeEnum(str, Enum):
    r"""Values:<br>
    1-24 Hours, 7 Days a Week;<br>
    2-Custom Hours
    """
    ONE = '1'
    TWO = '2'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHours:
    
    business_hour_action: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursBusinessHourActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_hour_action'), 'exclude': lambda f: f is None }})
    r"""When a call is not answered:<br>
    0-Forward to voicemail;<br>
    1-Play a message, then disconnect; <br>
    9-Disconnect; <br>
    26-Forward to External Contacts; <br>
    50-Forward to another extension
    """  
    connect_to_operator: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursConnectToOperator] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connect_to_operator'), 'exclude': lambda f: f is None }})
    r"""Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options."""  
    custom_hours: Optional[list[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursCustomHours]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom_hours'), 'exclude': lambda f: f is None }})  
    ring_type: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursRingTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ring_type'), 'exclude': lambda f: f is None }})
    r"""Call Handling Ring Mode:<br>
    0-Simultaneous,<br>
    1-Sequential
    """  
    ringing_duration: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursRingingDurationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ringing_duration'), 'exclude': lambda f: f is None }})
    r"""Ringing Duration for Each Device, in seconds. Values:<br>
    15,20,25,30,35,40,45,50,55,60
    """  
    type: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHoursTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Values:<br>
    1-24 Hours, 7 Days a Week;<br>
    2-Custom Hours
    """  
    
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingCloseHoursCloseHourActionEnum(str, Enum):
    r"""Action to take when a call is not answered:<br>
    0-Forward to voicemail; <br>
    1-Play a message, then disconnect; <br>
    9-Disconnect; <br>
    26-Forward to External Contacts; <br>
    50-Forward to another extension
    """
    ZERO = '0'
    ONE = '1'
    NINE = '9'
    TWENTY_SIX = '26'
    FIFTY = '50'

class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingCloseHoursConnectToOperatorTypeEnum(str, Enum):
    r"""Values:<br>
    1-user,<br>
    2-callQueue, <br>
    3-autoReceptionist,<br>
    4-commonAreaPhone,<br>
    5-zoomRoom, <br>
    7-sharedLineGroup
    """
    USER = 'user'
    ZOOM_ROOM = 'zoomRoom'
    COMMON_AREA_PHONE = 'commonAreaPhone'
    AUTO_RECEPTIONIST = 'autoReceptionist'
    CALL_QUEUE = 'callQueue'
    SHARED_LINE_GROUP = 'sharedLineGroup'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingCloseHoursConnectToOperator:
    r"""Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options."""
    
    enable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enable'), 'exclude': lambda f: f is None }})
    r"""Enable connect to operator."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue or sharedLineGroup. This ID is passed along with the `type` if the `close_hour_action` was not set with a value of *26*."""  
    type: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingCloseHoursConnectToOperatorTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Values:<br>
    1-user,<br>
    2-callQueue, <br>
    3-autoReceptionist,<br>
    4-commonAreaPhone,<br>
    5-zoomRoom, <br>
    7-sharedLineGroup
    """  
    
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingCloseHoursMaxWaitTimeEnum(str, Enum):
    r"""Maximum wait time, in seconds. Values:<br>
    15,20,25,30,35,40,45,50,55,60
    """
    FIFTEEN = '15'
    TWENTY = '20'
    TWENTY_FIVE = '25'
    THIRTY = '30'
    THIRTY_FIVE = '35'
    FORTY = '40'
    FORTY_FIVE = '45'
    FIFTY = '50'
    FIFTY_FIVE = '55'
    SIXTY = '60'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingCloseHours:
    
    close_hour_action: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingCloseHoursCloseHourActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('close_hour_action'), 'exclude': lambda f: f is None }})
    r"""Action to take when a call is not answered:<br>
    0-Forward to voicemail; <br>
    1-Play a message, then disconnect; <br>
    9-Disconnect; <br>
    26-Forward to External Contacts; <br>
    50-Forward to another extension
    """  
    connect_to_operator: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingCloseHoursConnectToOperator] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connect_to_operator'), 'exclude': lambda f: f is None }})
    r"""Allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options."""  
    max_wait_time: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingCloseHoursMaxWaitTimeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_wait_time'), 'exclude': lambda f: f is None }})
    r"""Maximum wait time, in seconds. Values:<br>
    15,20,25,30,35,40,45,50,55,60
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONUserSettingsCallHandling:
    
    business_hours: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingBusinessHours] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_hours'), 'exclude': lambda f: f is None }})  
    close_hours: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandlingCloseHours] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('close_hours'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONUserSettingsDeskPhone:
    
    pin_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pin_code'), 'exclude': lambda f: f is None }})
    r"""Pin code."""  
    
class UpdateSettingTemplateApplicationJSONUserSettingsHoldMusicEnum(str, Enum):
    r"""The value of this field can be either `default` or `disable`.
    
    * `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).
    
    * `disable`: This means that the hold music is disabled.
    """
    DEFAULT = 'default'
    DISABLE = 'disable'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSONUserSettings:
    
    audio_prompt_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audio_prompt_language'), 'exclude': lambda f: f is None }})
    r"""Audio prompt language code.<br> American English: `en-US`<br>
    British English: `en-GB`<br>
    Español americano: `es-US`<br>
    Français canadien: `fr-CA`<br>
    Dansk: `da-DK`<br>
    Deutsch: `de-DE`<br>
    Español: `es-ES`<br>
    Français: `fr-FR`<br>
    Italiano: `it-IT`<br>
    Nederlands: `nl-NL`<br>
    Portugues portugal: `pt-PT`<br>
    Japanese: `ja-JP`<br>
    Korean: `ko-KO`<br>
    Portugues brasil: `pt-BR`<br>
    Chinese: `zh-CN`<br>
    Taiwanese: `zh-TW`<br>
    """  
    block_calls_without_caller_id: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('block_calls_without_caller_id'), 'exclude': lambda f: f is None }})
    r"""Block Calls without Caller ID."""  
    call_handling: Optional[UpdateSettingTemplateApplicationJSONUserSettingsCallHandling] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('call_handling'), 'exclude': lambda f: f is None }})  
    desk_phone: Optional[UpdateSettingTemplateApplicationJSONUserSettingsDeskPhone] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('desk_phone'), 'exclude': lambda f: f is None }})  
    hold_music: Optional[UpdateSettingTemplateApplicationJSONUserSettingsHoldMusicEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hold_music'), 'exclude': lambda f: f is None }})
    r"""The value of this field can be either `default` or `disable`.
    
    * `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).
    
    * `disable`: This means that the hold music is disabled.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingTemplateApplicationJSON:
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description of the template."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Specify the name of the template."""  
    policy: Optional[UpdateSettingTemplateApplicationJSONPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policy'), 'exclude': lambda f: f is None }})  
    profile: Optional[UpdateSettingTemplateApplicationJSONProfile] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profile'), 'exclude': lambda f: f is None }})  
    user_settings: Optional[UpdateSettingTemplateApplicationJSONUserSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_settings'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class UpdateSettingTemplateRequest:
    
    template_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'templateId', 'style': 'simple', 'explode': False }})
    r"""The Template ID."""  
    request_body: Optional[UpdateSettingTemplateApplicationJSON] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateSettingTemplateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_setting_template_204_application_json_any: Optional[Any] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `204`<br>
    No Content. Request was successful.
    """  
    