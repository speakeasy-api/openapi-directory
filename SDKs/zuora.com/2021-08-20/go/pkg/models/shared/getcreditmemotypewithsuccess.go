// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// GETCreditMemoTypewithSuccessStatusEnum - The status of the credit memo.
type GETCreditMemoTypewithSuccessStatusEnum string

const (
	GETCreditMemoTypewithSuccessStatusEnumDraft            GETCreditMemoTypewithSuccessStatusEnum = "Draft"
	GETCreditMemoTypewithSuccessStatusEnumPosted           GETCreditMemoTypewithSuccessStatusEnum = "Posted"
	GETCreditMemoTypewithSuccessStatusEnumCanceled         GETCreditMemoTypewithSuccessStatusEnum = "Canceled"
	GETCreditMemoTypewithSuccessStatusEnumError            GETCreditMemoTypewithSuccessStatusEnum = "Error"
	GETCreditMemoTypewithSuccessStatusEnumPendingForTax    GETCreditMemoTypewithSuccessStatusEnum = "PendingForTax"
	GETCreditMemoTypewithSuccessStatusEnumGenerating       GETCreditMemoTypewithSuccessStatusEnum = "Generating"
	GETCreditMemoTypewithSuccessStatusEnumCancelInProgress GETCreditMemoTypewithSuccessStatusEnum = "CancelInProgress"
)

func (e *GETCreditMemoTypewithSuccessStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Draft":
		fallthrough
	case "Posted":
		fallthrough
	case "Canceled":
		fallthrough
	case "Error":
		fallthrough
	case "PendingForTax":
		fallthrough
	case "Generating":
		fallthrough
	case "CancelInProgress":
		*e = GETCreditMemoTypewithSuccessStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreditMemoTypewithSuccessStatusEnum: %s", s)
	}
}

// GETCreditMemoTypewithSuccessTaxStatusEnum - The status of tax calculation related to the credit memo.
//
// **Note**: This field is only applicable to tax calculation by third-party tax engines.
type GETCreditMemoTypewithSuccessTaxStatusEnum string

const (
	GETCreditMemoTypewithSuccessTaxStatusEnumComplete GETCreditMemoTypewithSuccessTaxStatusEnum = "Complete"
	GETCreditMemoTypewithSuccessTaxStatusEnumError    GETCreditMemoTypewithSuccessTaxStatusEnum = "Error"
)

func (e *GETCreditMemoTypewithSuccessTaxStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Complete":
		fallthrough
	case "Error":
		*e = GETCreditMemoTypewithSuccessTaxStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreditMemoTypewithSuccessTaxStatusEnum: %s", s)
	}
}

// GETCreditMemoTypewithSuccessTransferredToAccountingEnum - Whether the credit memo was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.
type GETCreditMemoTypewithSuccessTransferredToAccountingEnum string

const (
	GETCreditMemoTypewithSuccessTransferredToAccountingEnumProcessing GETCreditMemoTypewithSuccessTransferredToAccountingEnum = "Processing"
	GETCreditMemoTypewithSuccessTransferredToAccountingEnumYes        GETCreditMemoTypewithSuccessTransferredToAccountingEnum = "Yes"
	GETCreditMemoTypewithSuccessTransferredToAccountingEnumNo         GETCreditMemoTypewithSuccessTransferredToAccountingEnum = "No"
	GETCreditMemoTypewithSuccessTransferredToAccountingEnumError      GETCreditMemoTypewithSuccessTransferredToAccountingEnum = "Error"
	GETCreditMemoTypewithSuccessTransferredToAccountingEnumIgnore     GETCreditMemoTypewithSuccessTransferredToAccountingEnum = "Ignore"
)

func (e *GETCreditMemoTypewithSuccessTransferredToAccountingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Processing":
		fallthrough
	case "Yes":
		fallthrough
	case "No":
		fallthrough
	case "Error":
		fallthrough
	case "Ignore":
		*e = GETCreditMemoTypewithSuccessTransferredToAccountingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreditMemoTypewithSuccessTransferredToAccountingEnum: %s", s)
	}
}

// GETCreditMemoTypewithSuccess - Container for custom fields of a Credit Memo object.
type GETCreditMemoTypewithSuccess struct {
	// ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	IntegrationIDNS *string `json:"IntegrationId__NS,omitempty"`
	// Status of the credit memo's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	IntegrationStatusNS *string `json:"IntegrationStatus__NS,omitempty"`
	// Origin of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	OriginNS *string `json:"Origin__NS,omitempty"`
	// Date when the credit memo was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	SyncDateNS *string `json:"SyncDate__NS,omitempty"`
	// Related transaction in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	TransactionNS *string `json:"Transaction__NS,omitempty"`
	// The ID of the customer account associated with the credit memo.
	//
	AccountID *string `json:"accountId,omitempty"`
	// The total amount of the credit memo.
	//
	Amount *float64 `json:"amount,omitempty"`
	// The applied amount of the credit memo.
	//
	AppliedAmount *float64 `json:"appliedAmount,omitempty"`
	// Whether the credit memo automatically applies to the invoice upon posting.
	//
	AutoApplyUponPosting *bool `json:"autoApplyUponPosting,omitempty"`
	// The ID of the Zuora user who cancelled the credit memo.
	//
	CancelledByID *string `json:"cancelledById,omitempty"`
	// The date and time when the credit memo was cancelled, in `yyyy-mm-dd hh:mm:ss` format.
	//
	CancelledOn *time.Time `json:"cancelledOn,omitempty"`
	// Comments about the credit memo.
	//
	Comment *string `json:"comment,omitempty"`
	// The ID of the Zuora user who created the credit memo.
	//
	CreatedByID *string `json:"createdById,omitempty"`
	// The date and time when the credit memo was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.
	//
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The date when the credit memo takes effect, in `yyyy-mm-dd` format. For example, 2017-05-20.
	//
	CreditMemoDate *types.Date `json:"creditMemoDate,omitempty"`
	// A currency defined in the web-based UI administrative settings.
	//
	Currency *string `json:"currency,omitempty"`
	// Whether the credit memo is excluded from the rule of automatically applying credit memos to invoices.
	//
	ExcludeFromAutoApplyRules *bool `json:"excludeFromAutoApplyRules,omitempty"`
	// The unique ID of the credit memo.
	//
	ID *string `json:"id,omitempty"`
	// The ID of the latest PDF file generated for the credit memo.
	//
	LatestPDFFileID *string `json:"latestPDFFileId,omitempty"`
	// The unique identification number of the credit memo.
	//
	Number *string `json:"number,omitempty"`
	// The ID of the Zuora user who posted the credit memo.
	//
	PostedByID *string `json:"postedById,omitempty"`
	// The date and time when the credit memo was posted, in `yyyy-mm-dd hh:mm:ss` format.
	//
	PostedOn *time.Time `json:"postedOn,omitempty"`
	// A code identifying the reason for the transaction. The value must be an existing reason code or empty.
	//
	ReasonCode *string `json:"reasonCode,omitempty"`
	// The ID of a referred invoice.
	//
	ReferredInvoiceID *string `json:"referredInvoiceId,omitempty"`
	// The amount of the refund on the credit memo.
	//
	RefundAmount *float64 `json:"refundAmount,omitempty"`
	// The source of the credit memo.
	//
	// Possible values:
	// - `BillRun`: The credit memo is generated by a bill run.
	// - `API`: The credit memo is created by calling the [Invoice and collect](https://www.zuora.com/developer/api-reference/#operation/POST_TransactionInvoicePayment) operation.
	// - `ApiSubscribe`: The credit memo is created by calling the [Create subscription](https://www.zuora.com/developer/api-reference/#operation/POST_Subscription) and [Create account](https://www.zuora.com/developer/api-reference/#operation/POST_Account) operation.
	// - `ApiAmend`: The credit memo is created by calling the [Update subscription](https://www.zuora.com/developer/api-reference/#operation/PUT_Subscription) operation.
	// - `AdhocFromPrpc`: The credit memo is created from a product rate plan charge through the Zuora UI or by calling the [Create a credit memo from a charge](https://www.zuora.com/developer/api-reference/#operation/POST_CreditMemoFromPrpc) operation.
	// - `AdhocFromInvoice`: The credit memo is created from an invoice or created by reversing an invoice. You can create a credit memo from an invoice through the Zuora UI or by calling the [Create credit memo from invoice](https://www.zuora.com/developer/api-reference/#operation/POST_CreditMemoFromInvoice) operation. You can create a credit memo by reversing an invoice through the Zuora UI or by calling the [Reverse invoice](https://www.zuora.com/developer/api-reference/#operation/PUT_ReverseInvoice) operation.
	//
	Source *string `json:"source,omitempty"`
	// The ID of the credit memo source.
	//
	// If a credit memo is generated from a bill run, the value is the number of the corresponding bill run. Otherwise, the value is `null`.
	//
	SourceID *string `json:"sourceId,omitempty"`
	// The status of the credit memo.
	//
	Status *GETCreditMemoTypewithSuccessStatusEnum `json:"status,omitempty"`
	// The target date for the credit memo, in `yyyy-mm-dd` format. For example, 2017-07-20.
	//
	TargetDate *types.Date `json:"targetDate,omitempty"`
	// The amount of taxation.
	//
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// The message about the status of tax calculation related to the credit memo. If tax calculation fails in one credit memo, this field displays the reason for the failure.
	//
	TaxMessage *string `json:"taxMessage,omitempty"`
	// The status of tax calculation related to the credit memo.
	//
	// **Note**: This field is only applicable to tax calculation by third-party tax engines.
	//
	TaxStatus *GETCreditMemoTypewithSuccessTaxStatusEnum `json:"taxStatus,omitempty"`
	// The total amount of taxes or VAT for which the customer has an exemption.
	//
	TotalTaxExemptAmount *float64 `json:"totalTaxExemptAmount,omitempty"`
	// Whether the credit memo was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.
	//
	TransferredToAccounting *GETCreditMemoTypewithSuccessTransferredToAccountingEnum `json:"transferredToAccounting,omitempty"`
	// The unapplied amount of the credit memo.
	//
	UnappliedAmount *float64 `json:"unappliedAmount,omitempty"`
	// The ID of the Zuora user who last updated the credit memo.
	//
	UpdatedByID *string `json:"updatedById,omitempty"`
	// The date and time when the credit memo was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-02 15:36:10.
	//
	UpdatedDate *time.Time `json:"updatedDate,omitempty"`
}
