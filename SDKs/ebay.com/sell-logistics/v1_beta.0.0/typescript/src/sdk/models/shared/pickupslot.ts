/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * This complex type defines a time window for the pickup of a package.
 */
export class PickupSlot extends SpeakeasyBase {
  /**
   * The date and time the pickup slot ends, formatted as an <a href="https://www.iso.org/iso-8601-date-and-time-format.html" title="https://www.iso.org" target="_blank">ISO 8601</a> string, which is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code> <br><b>Example:</b> <code>2018-08-20T07:09:00.000Z</code>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupSlotEndTime" })
  pickupSlotEndTime?: string;

  /**
   * Seller-defined name for the pickup slot. <!-- Max characters? -->
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupSlotId" })
  pickupSlotId?: string;

  /**
   * The date and time the pickup slot begins, formatted as an <a href="https://www.iso.org/iso-8601-date-and-time-format.html" title="https://www.iso.org" target="_blank">ISO 8601</a> UTC string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupSlotStartTime" })
  pickupSlotStartTime?: string;

  /**
   * The time zone of the pickup location, returned as <a href="https://www.iana.org/time-zones" target="_blank">Time Zone Database</a> ID (also know as an Olson time zone ID).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupSlotTimeZone" })
  pickupSlotTimeZone?: string;
}
