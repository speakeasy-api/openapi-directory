/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Segment {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public Segment withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("description")
    public String description;
    public Segment withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonProperty("filter")
    public java.util.Map<String, Object> filter;
    public Segment withFilter(java.util.Map<String, Object> filter) {
        this.filter = filter;
        return this;
    }
    
    @JsonProperty("id")
    public String id;
    public Segment withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("in_use")
    public Boolean inUse;
    public Segment withInUse(Boolean inUse) {
        this.inUse = inUse;
        return this;
    }
    
    @JsonProperty("name")
    public String name;
    public Segment withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("size")
    public Double size;
    public Segment withSize(Double size) {
        this.size = size;
        return this;
    }
    
    @JsonProperty("status")
    public String status;
    public Segment withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonProperty("type")
    public SegmentTypeEnum type;
    public Segment withType(SegmentTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public Segment withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
