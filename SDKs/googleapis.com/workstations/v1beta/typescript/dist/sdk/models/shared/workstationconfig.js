"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkstationConfigInput = exports.WorkstationConfig = void 0;
var utils_1 = require("../../../internal/utils");
var container_1 = require("./container");
var customerencryptionkey_1 = require("./customerencryptionkey");
var host_1 = require("./host");
var persistentdirectory_1 = require("./persistentdirectory");
var status_1 = require("./status");
var class_transformer_1 = require("class-transformer");
/**
 * A set of configuration options describing how a workstation will be run. Workstation configurations are intended to be shared across multiple workstations.
 */
var WorkstationConfig = /** @class */ (function (_super) {
    __extends(WorkstationConfig, _super);
    function WorkstationConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "annotations" }),
        __metadata("design:type", Object)
    ], WorkstationConfig.prototype, "annotations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: status_1.Status }),
        (0, class_transformer_1.Expose)({ name: "conditions" }),
        (0, class_transformer_1.Type)(function () { return status_1.Status; }),
        __metadata("design:type", Array)
    ], WorkstationConfig.prototype, "conditions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "container" }),
        (0, class_transformer_1.Type)(function () { return container_1.Container; }),
        __metadata("design:type", container_1.Container)
    ], WorkstationConfig.prototype, "container", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createTime" }),
        __metadata("design:type", String)
    ], WorkstationConfig.prototype, "createTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "degraded" }),
        __metadata("design:type", Boolean)
    ], WorkstationConfig.prototype, "degraded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deleteTime" }),
        __metadata("design:type", String)
    ], WorkstationConfig.prototype, "deleteTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], WorkstationConfig.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "encryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], WorkstationConfig.prototype, "encryptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "etag" }),
        __metadata("design:type", String)
    ], WorkstationConfig.prototype, "etag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host" }),
        (0, class_transformer_1.Type)(function () { return host_1.Host; }),
        __metadata("design:type", host_1.Host)
    ], WorkstationConfig.prototype, "host", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "idleTimeout" }),
        __metadata("design:type", String)
    ], WorkstationConfig.prototype, "idleTimeout", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], WorkstationConfig.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], WorkstationConfig.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: persistentdirectory_1.PersistentDirectory }),
        (0, class_transformer_1.Expose)({ name: "persistentDirectories" }),
        (0, class_transformer_1.Type)(function () { return persistentdirectory_1.PersistentDirectory; }),
        __metadata("design:type", Array)
    ], WorkstationConfig.prototype, "persistentDirectories", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reconciling" }),
        __metadata("design:type", Boolean)
    ], WorkstationConfig.prototype, "reconciling", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runningTimeout" }),
        __metadata("design:type", String)
    ], WorkstationConfig.prototype, "runningTimeout", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uid" }),
        __metadata("design:type", String)
    ], WorkstationConfig.prototype, "uid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updateTime" }),
        __metadata("design:type", String)
    ], WorkstationConfig.prototype, "updateTime", void 0);
    return WorkstationConfig;
}(utils_1.SpeakeasyBase));
exports.WorkstationConfig = WorkstationConfig;
/**
 * A set of configuration options describing how a workstation will be run. Workstation configurations are intended to be shared across multiple workstations.
 */
var WorkstationConfigInput = /** @class */ (function (_super) {
    __extends(WorkstationConfigInput, _super);
    function WorkstationConfigInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "annotations" }),
        __metadata("design:type", Object)
    ], WorkstationConfigInput.prototype, "annotations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "container" }),
        (0, class_transformer_1.Type)(function () { return container_1.Container; }),
        __metadata("design:type", container_1.Container)
    ], WorkstationConfigInput.prototype, "container", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], WorkstationConfigInput.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "encryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], WorkstationConfigInput.prototype, "encryptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "etag" }),
        __metadata("design:type", String)
    ], WorkstationConfigInput.prototype, "etag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host" }),
        (0, class_transformer_1.Type)(function () { return host_1.Host; }),
        __metadata("design:type", host_1.Host)
    ], WorkstationConfigInput.prototype, "host", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "idleTimeout" }),
        __metadata("design:type", String)
    ], WorkstationConfigInput.prototype, "idleTimeout", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], WorkstationConfigInput.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], WorkstationConfigInput.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: persistentdirectory_1.PersistentDirectory }),
        (0, class_transformer_1.Expose)({ name: "persistentDirectories" }),
        (0, class_transformer_1.Type)(function () { return persistentdirectory_1.PersistentDirectory; }),
        __metadata("design:type", Array)
    ], WorkstationConfigInput.prototype, "persistentDirectories", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runningTimeout" }),
        __metadata("design:type", String)
    ], WorkstationConfigInput.prototype, "runningTimeout", void 0);
    return WorkstationConfigInput;
}(utils_1.SpeakeasyBase));
exports.WorkstationConfigInput = WorkstationConfigInput;
