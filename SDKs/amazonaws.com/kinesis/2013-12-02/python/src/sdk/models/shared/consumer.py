"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import consumerstatus_enum as shared_consumerstatus_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Consumer:
    r"""An object that represents the details of the consumer you registered. This type of object is returned by <a>RegisterStreamConsumer</a>."""
    
    consumer_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConsumerARN') }})  
    consumer_creation_timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConsumerCreationTimestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    consumer_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConsumerName') }})  
    consumer_status: shared_consumerstatus_enum.ConsumerStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConsumerStatus') }})  
    