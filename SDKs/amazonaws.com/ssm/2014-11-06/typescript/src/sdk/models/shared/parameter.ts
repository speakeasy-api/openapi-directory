/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ParameterTypeEnum } from "./parametertypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * An Amazon Web Services Systems Manager parameter in Parameter Store.
 */
export class Parameter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ARN" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DataType" })
  dataType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Selector" })
  selector?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceResult" })
  sourceResult?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: ParameterTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Version" })
  version?: number;
}
