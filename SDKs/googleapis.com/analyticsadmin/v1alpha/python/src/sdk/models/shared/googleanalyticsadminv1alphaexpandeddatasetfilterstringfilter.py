"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAnalyticsAdminV1alphaExpandedDataSetFilterStringFilterMatchTypeEnum(str, Enum):
    r"""Required. The match type for the string filter."""
    MATCH_TYPE_UNSPECIFIED = 'MATCH_TYPE_UNSPECIFIED'
    EXACT = 'EXACT'
    CONTAINS = 'CONTAINS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsAdminV1alphaExpandedDataSetFilterStringFilter:
    r"""A filter for a string-type dimension that matches a particular pattern."""
    
    case_sensitive: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caseSensitive'), 'exclude': lambda f: f is None }})
    r"""Optional. If true, the match is case-sensitive. If false, the match is case-insensitive. Must be true when match_type is EXACT. Must be false when match_type is CONTAINS."""  
    match_type: Optional[GoogleAnalyticsAdminV1alphaExpandedDataSetFilterStringFilterMatchTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('matchType'), 'exclude': lambda f: f is None }})
    r"""Required. The match type for the string filter."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""Required. The string value to be matched against."""  
    