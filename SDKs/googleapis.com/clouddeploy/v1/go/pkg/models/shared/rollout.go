// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RolloutApprovalStateEnum - Output only. Approval state of the `Rollout`.
type RolloutApprovalStateEnum string

const (
	RolloutApprovalStateEnumApprovalStateUnspecified RolloutApprovalStateEnum = "APPROVAL_STATE_UNSPECIFIED"
	RolloutApprovalStateEnumNeedsApproval            RolloutApprovalStateEnum = "NEEDS_APPROVAL"
	RolloutApprovalStateEnumDoesNotNeedApproval      RolloutApprovalStateEnum = "DOES_NOT_NEED_APPROVAL"
	RolloutApprovalStateEnumApproved                 RolloutApprovalStateEnum = "APPROVED"
	RolloutApprovalStateEnumRejected                 RolloutApprovalStateEnum = "REJECTED"
)

func (e *RolloutApprovalStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "APPROVAL_STATE_UNSPECIFIED":
		fallthrough
	case "NEEDS_APPROVAL":
		fallthrough
	case "DOES_NOT_NEED_APPROVAL":
		fallthrough
	case "APPROVED":
		fallthrough
	case "REJECTED":
		*e = RolloutApprovalStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RolloutApprovalStateEnum: %s", s)
	}
}

// RolloutDeployFailureCauseEnum - Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.
type RolloutDeployFailureCauseEnum string

const (
	RolloutDeployFailureCauseEnumFailureCauseUnspecified    RolloutDeployFailureCauseEnum = "FAILURE_CAUSE_UNSPECIFIED"
	RolloutDeployFailureCauseEnumCloudBuildUnavailable      RolloutDeployFailureCauseEnum = "CLOUD_BUILD_UNAVAILABLE"
	RolloutDeployFailureCauseEnumExecutionFailed            RolloutDeployFailureCauseEnum = "EXECUTION_FAILED"
	RolloutDeployFailureCauseEnumDeadlineExceeded           RolloutDeployFailureCauseEnum = "DEADLINE_EXCEEDED"
	RolloutDeployFailureCauseEnumReleaseFailed              RolloutDeployFailureCauseEnum = "RELEASE_FAILED"
	RolloutDeployFailureCauseEnumReleaseAbandoned           RolloutDeployFailureCauseEnum = "RELEASE_ABANDONED"
	RolloutDeployFailureCauseEnumVerificationConfigNotFound RolloutDeployFailureCauseEnum = "VERIFICATION_CONFIG_NOT_FOUND"
	RolloutDeployFailureCauseEnumCloudBuildRequestFailed    RolloutDeployFailureCauseEnum = "CLOUD_BUILD_REQUEST_FAILED"
)

func (e *RolloutDeployFailureCauseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FAILURE_CAUSE_UNSPECIFIED":
		fallthrough
	case "CLOUD_BUILD_UNAVAILABLE":
		fallthrough
	case "EXECUTION_FAILED":
		fallthrough
	case "DEADLINE_EXCEEDED":
		fallthrough
	case "RELEASE_FAILED":
		fallthrough
	case "RELEASE_ABANDONED":
		fallthrough
	case "VERIFICATION_CONFIG_NOT_FOUND":
		fallthrough
	case "CLOUD_BUILD_REQUEST_FAILED":
		*e = RolloutDeployFailureCauseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RolloutDeployFailureCauseEnum: %s", s)
	}
}

// RolloutStateEnum - Output only. Current state of the `Rollout`.
type RolloutStateEnum string

const (
	RolloutStateEnumStateUnspecified RolloutStateEnum = "STATE_UNSPECIFIED"
	RolloutStateEnumSucceeded        RolloutStateEnum = "SUCCEEDED"
	RolloutStateEnumFailed           RolloutStateEnum = "FAILED"
	RolloutStateEnumInProgress       RolloutStateEnum = "IN_PROGRESS"
	RolloutStateEnumPendingApproval  RolloutStateEnum = "PENDING_APPROVAL"
	RolloutStateEnumApprovalRejected RolloutStateEnum = "APPROVAL_REJECTED"
	RolloutStateEnumPending          RolloutStateEnum = "PENDING"
	RolloutStateEnumPendingRelease   RolloutStateEnum = "PENDING_RELEASE"
	RolloutStateEnumCancelling       RolloutStateEnum = "CANCELLING"
	RolloutStateEnumCancelled        RolloutStateEnum = "CANCELLED"
	RolloutStateEnumHalted           RolloutStateEnum = "HALTED"
)

func (e *RolloutStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "PENDING_APPROVAL":
		fallthrough
	case "APPROVAL_REJECTED":
		fallthrough
	case "PENDING":
		fallthrough
	case "PENDING_RELEASE":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "HALTED":
		*e = RolloutStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RolloutStateEnum: %s", s)
	}
}

// Rollout - A `Rollout` resource in the Google Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.
type Rollout struct {
	// User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
	Annotations map[string]string `json:"annotations,omitempty"`
	// Output only. Approval state of the `Rollout`.
	ApprovalState *RolloutApprovalStateEnum `json:"approvalState,omitempty"`
	// Output only. Time at which the `Rollout` was approved.
	ApproveTime *string `json:"approveTime,omitempty"`
	// Output only. Name of the `ControllerRollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}.
	ControllerRollout *string `json:"controllerRollout,omitempty"`
	// Output only. Time at which the `Rollout` was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. Time at which the `Rollout` finished deploying.
	DeployEndTime *string `json:"deployEndTime,omitempty"`
	// Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.
	DeployFailureCause *RolloutDeployFailureCauseEnum `json:"deployFailureCause,omitempty"`
	// Output only. Time at which the `Rollout` started deploying.
	DeployStartTime *string `json:"deployStartTime,omitempty"`
	// Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.
	DeployingBuild *string `json:"deployingBuild,omitempty"`
	// Description of the `Rollout` for user purposes. Max length is 255 characters.
	Description *string `json:"description,omitempty"`
	// Output only. Time at which the `Rollout` was enqueued.
	EnqueueTime *string `json:"enqueueTime,omitempty"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty"`
	// Output only. Additional information about the rollout failure, if available.
	FailureReason *string `json:"failureReason,omitempty"`
	// Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
	Labels map[string]string `json:"labels,omitempty"`
	// Metadata includes information associated with a `Rollout`.
	Metadata *Metadata `json:"metadata,omitempty"`
	// Optional. Name of the `Rollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}.
	Name *string `json:"name,omitempty"`
	// Output only. The phases that represent the workflows of this `Rollout`.
	Phases []Phase `json:"phases,omitempty"`
	// Output only. Current state of the `Rollout`.
	State *RolloutStateEnum `json:"state,omitempty"`
	// Required. The ID of Target to which this `Rollout` is deploying.
	TargetID *string `json:"targetId,omitempty"`
	// Output only. Unique identifier of the `Rollout`.
	UID *string `json:"uid,omitempty"`
}

// RolloutInput - A `Rollout` resource in the Google Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.
type RolloutInput struct {
	// User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
	Annotations map[string]string `json:"annotations,omitempty"`
	// Description of the `Rollout` for user purposes. Max length is 255 characters.
	Description *string `json:"description,omitempty"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty"`
	// Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
	Labels map[string]string `json:"labels,omitempty"`
	// Optional. Name of the `Rollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}.
	Name *string `json:"name,omitempty"`
	// Required. The ID of Target to which this `Rollout` is deploying.
	TargetID *string `json:"targetId,omitempty"`
}
