// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SpotAllocationStrategyEnum string

const (
	SpotAllocationStrategyEnumLowestPrice                  SpotAllocationStrategyEnum = "lowest-price"
	SpotAllocationStrategyEnumDiversified                  SpotAllocationStrategyEnum = "diversified"
	SpotAllocationStrategyEnumCapacityOptimized            SpotAllocationStrategyEnum = "capacity-optimized"
	SpotAllocationStrategyEnumCapacityOptimizedPrioritized SpotAllocationStrategyEnum = "capacity-optimized-prioritized"
	SpotAllocationStrategyEnumPriceCapacityOptimized       SpotAllocationStrategyEnum = "price-capacity-optimized"
)

func (e SpotAllocationStrategyEnum) ToPointer() *SpotAllocationStrategyEnum {
	return &e
}

func (e *SpotAllocationStrategyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "lowest-price":
		fallthrough
	case "diversified":
		fallthrough
	case "capacity-optimized":
		fallthrough
	case "capacity-optimized-prioritized":
		fallthrough
	case "price-capacity-optimized":
		*e = SpotAllocationStrategyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SpotAllocationStrategyEnum: %v", v)
	}
}
