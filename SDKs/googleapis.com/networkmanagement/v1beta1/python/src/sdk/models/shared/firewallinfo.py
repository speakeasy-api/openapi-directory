"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FirewallInfoFirewallRuleTypeEnum(str, Enum):
    r"""The firewall rule's type."""
    FIREWALL_RULE_TYPE_UNSPECIFIED = 'FIREWALL_RULE_TYPE_UNSPECIFIED'
    HIERARCHICAL_FIREWALL_POLICY_RULE = 'HIERARCHICAL_FIREWALL_POLICY_RULE'
    VPC_FIREWALL_RULE = 'VPC_FIREWALL_RULE'
    IMPLIED_VPC_FIREWALL_RULE = 'IMPLIED_VPC_FIREWALL_RULE'
    SERVERLESS_VPC_ACCESS_MANAGED_FIREWALL_RULE = 'SERVERLESS_VPC_ACCESS_MANAGED_FIREWALL_RULE'
    NETWORK_FIREWALL_POLICY_RULE = 'NETWORK_FIREWALL_POLICY_RULE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FirewallInfo:
    r"""For display only. Metadata associated with a VPC firewall rule, an implied VPC firewall rule, or a hierarchical firewall policy rule."""
    
    action: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action'), 'exclude': lambda f: f is None }})
    r"""Possible values: ALLOW, DENY"""  
    direction: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('direction'), 'exclude': lambda f: f is None }})
    r"""Possible values: INGRESS, EGRESS"""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules."""  
    firewall_rule_type: Optional[FirewallInfoFirewallRuleTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firewallRuleType'), 'exclude': lambda f: f is None }})
    r"""The firewall rule's type."""  
    network_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkUri'), 'exclude': lambda f: f is None }})
    r"""The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules."""  
    policy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policy'), 'exclude': lambda f: f is None }})
    r"""The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules."""  
    priority: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priority'), 'exclude': lambda f: f is None }})
    r"""The priority of the firewall rule."""  
    target_service_accounts: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetServiceAccounts'), 'exclude': lambda f: f is None }})
    r"""The target service accounts specified by the firewall rule."""  
    target_tags: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetTags'), 'exclude': lambda f: f is None }})
    r"""The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules."""  
    uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri'), 'exclude': lambda f: f is None }})
    r"""The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules."""  
    