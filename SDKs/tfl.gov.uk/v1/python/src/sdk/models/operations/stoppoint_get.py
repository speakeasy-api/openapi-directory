"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import tfl_api_presentation_entities_stoppoint as shared_tfl_api_presentation_entities_stoppoint
from typing import Optional


@dataclasses.dataclass
class StopPointGetRequest:
    
    ids: list[str] = dataclasses.field(metadata={'path_param': { 'field_name': 'ids', 'style': 'simple', 'explode': False }})
    r"""A comma-separated list of stop point ids (station naptan code e.g. 940GZZLUASL). Max. approx. 20 ids.
                You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name.
    """  
    include_crowding_data: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includeCrowdingData', 'style': 'form', 'explode': True }})
    r"""Include the crowding data (static). To Filter further use: /StopPoint/{ids}/Crowding/{line}"""  
    

@dataclasses.dataclass
class StopPointGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tfl_api_presentation_entities_stop_points: Optional[list[shared_tfl_api_presentation_entities_stoppoint.TflAPIPresentationEntitiesStopPoint]] = dataclasses.field(default=None)
    r"""OK"""  
    