/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PlayerSearchRequest extends SpeakeasyBase {
  /**
   * Position abbreviation filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=position",
  })
  position?: string;

  /**
   * Term to search on
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=searchTerm",
  })
  searchTerm: string;

  /**
   * Team filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=team" })
  team?: string;

  /**
   * Year filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year?: number;
}

export class PlayerSearchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * successful operation
   */
  @SpeakeasyMetadata({ elemType: shared.PlayerSearchResult })
  playerSearchResults?: shared.PlayerSearchResult[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
