/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CVSSv3 - Common Vulnerability Scoring System version 3. For details, see https://www.first.org/cvss/specification-document
 */
public class CVSSv3 {
    /**
     * This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attackComplexity")
    public CVSSv3AttackComplexityEnum attackComplexity;
    public CVSSv3 withAttackComplexity(CVSSv3AttackComplexityEnum attackComplexity) {
        this.attackComplexity = attackComplexity;
        return this;
    }
    
    /**
     * This metric reflects the context by which vulnerability exploitation is possible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attackVector")
    public CVSSv3AttackVectorEnum attackVector;
    public CVSSv3 withAttackVector(CVSSv3AttackVectorEnum attackVector) {
        this.attackVector = attackVector;
        return this;
    }
    
    /**
     * This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availabilityImpact")
    public CVSSv3AvailabilityImpactEnum availabilityImpact;
    public CVSSv3 withAvailabilityImpact(CVSSv3AvailabilityImpactEnum availabilityImpact) {
        this.availabilityImpact = availabilityImpact;
        return this;
    }
    
    /**
     * The base score is a function of the base metric scores. https://www.first.org/cvss/specification-document#Base-Metrics
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseScore")
    public Float baseScore;
    public CVSSv3 withBaseScore(Float baseScore) {
        this.baseScore = baseScore;
        return this;
    }
    
    /**
     * This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidentialityImpact")
    public CVSSv3ConfidentialityImpactEnum confidentialityImpact;
    public CVSSv3 withConfidentialityImpact(CVSSv3ConfidentialityImpactEnum confidentialityImpact) {
        this.confidentialityImpact = confidentialityImpact;
        return this;
    }
    
    /**
     * The Exploitability sub-score equation is derived from the Base Exploitability metrics. https://www.first.org/cvss/specification-document#2-1-Exploitability-Metrics
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exploitabilityScore")
    public Float exploitabilityScore;
    public CVSSv3 withExploitabilityScore(Float exploitabilityScore) {
        this.exploitabilityScore = exploitabilityScore;
        return this;
    }
    
    /**
     * The Impact sub-score equation is derived from the Base Impact metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("impactScore")
    public Float impactScore;
    public CVSSv3 withImpactScore(Float impactScore) {
        this.impactScore = impactScore;
        return this;
    }
    
    /**
     * This metric measures the impact to integrity of a successfully exploited vulnerability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integrityImpact")
    public CVSSv3IntegrityImpactEnum integrityImpact;
    public CVSSv3 withIntegrityImpact(CVSSv3IntegrityImpactEnum integrityImpact) {
        this.integrityImpact = integrityImpact;
        return this;
    }
    
    /**
     * This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privilegesRequired")
    public CVSSv3PrivilegesRequiredEnum privilegesRequired;
    public CVSSv3 withPrivilegesRequired(CVSSv3PrivilegesRequiredEnum privilegesRequired) {
        this.privilegesRequired = privilegesRequired;
        return this;
    }
    
    /**
     * The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public CVSSv3ScopeEnum scope;
    public CVSSv3 withScope(CVSSv3ScopeEnum scope) {
        this.scope = scope;
        return this;
    }
    
    /**
     * This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userInteraction")
    public CVSSv3UserInteractionEnum userInteraction;
    public CVSSv3 withUserInteraction(CVSSv3UserInteractionEnum userInteraction) {
        this.userInteraction = userInteraction;
        return this;
    }
    
}
