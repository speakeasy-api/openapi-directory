// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VerificationAttemptsSummaryEnumChannelsEnum - Filter Verification Attempts considered on the summary aggregation by communication channel. Valid values are `SMS` and `CALL`
type VerificationAttemptsSummaryEnumChannelsEnum string

const (
	VerificationAttemptsSummaryEnumChannelsEnumSms      VerificationAttemptsSummaryEnumChannelsEnum = "sms"
	VerificationAttemptsSummaryEnumChannelsEnumCall     VerificationAttemptsSummaryEnumChannelsEnum = "call"
	VerificationAttemptsSummaryEnumChannelsEnumEmail    VerificationAttemptsSummaryEnumChannelsEnum = "email"
	VerificationAttemptsSummaryEnumChannelsEnumWhatsapp VerificationAttemptsSummaryEnumChannelsEnum = "whatsapp"
)

func (e VerificationAttemptsSummaryEnumChannelsEnum) ToPointer() *VerificationAttemptsSummaryEnumChannelsEnum {
	return &e
}

func (e *VerificationAttemptsSummaryEnumChannelsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sms":
		fallthrough
	case "call":
		fallthrough
	case "email":
		fallthrough
	case "whatsapp":
		*e = VerificationAttemptsSummaryEnumChannelsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerificationAttemptsSummaryEnumChannelsEnum: %v", v)
	}
}
