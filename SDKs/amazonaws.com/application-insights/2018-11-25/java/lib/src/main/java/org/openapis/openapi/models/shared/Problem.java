/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Problem - Describes a problem that is detected by correlating observations.
 */
public class Problem {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AffectedResource")
    public String affectedResource;

    public Problem withAffectedResource(String affectedResource) {
        this.affectedResource = affectedResource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndTime")
    public OffsetDateTime endTime;

    public Problem withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Feedback")
    public java.util.Map<String, FeedbackValueEnum> feedback;

    public Problem withFeedback(java.util.Map<String, FeedbackValueEnum> feedback) {
        this.feedback = feedback;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;

    public Problem withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Insights")
    public String insights;

    public Problem withInsights(String insights) {
        this.insights = insights;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastRecurrenceTime")
    public OffsetDateTime lastRecurrenceTime;

    public Problem withLastRecurrenceTime(OffsetDateTime lastRecurrenceTime) {
        this.lastRecurrenceTime = lastRecurrenceTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecurringCount")
    public Long recurringCount;

    public Problem withRecurringCount(Long recurringCount) {
        this.recurringCount = recurringCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourceGroupName")
    public String resourceGroupName;

    public Problem withResourceGroupName(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeverityLevel")
    public SeverityLevelEnum severityLevel;

    public Problem withSeverityLevel(SeverityLevelEnum severityLevel) {
        this.severityLevel = severityLevel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;

    public Problem withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public StatusEnum status;

    public Problem withStatus(StatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Title")
    public String title;

    public Problem withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public Problem(){}
}
