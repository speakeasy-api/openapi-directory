// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// UpdateTopicRuleDestinationRequestBodyStatusEnum - <p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>
type UpdateTopicRuleDestinationRequestBodyStatusEnum string

const (
	UpdateTopicRuleDestinationRequestBodyStatusEnumEnabled    UpdateTopicRuleDestinationRequestBodyStatusEnum = "ENABLED"
	UpdateTopicRuleDestinationRequestBodyStatusEnumInProgress UpdateTopicRuleDestinationRequestBodyStatusEnum = "IN_PROGRESS"
	UpdateTopicRuleDestinationRequestBodyStatusEnumDisabled   UpdateTopicRuleDestinationRequestBodyStatusEnum = "DISABLED"
	UpdateTopicRuleDestinationRequestBodyStatusEnumError      UpdateTopicRuleDestinationRequestBodyStatusEnum = "ERROR"
	UpdateTopicRuleDestinationRequestBodyStatusEnumDeleting   UpdateTopicRuleDestinationRequestBodyStatusEnum = "DELETING"
)

func (e *UpdateTopicRuleDestinationRequestBodyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENABLED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "DISABLED":
		fallthrough
	case "ERROR":
		fallthrough
	case "DELETING":
		*e = UpdateTopicRuleDestinationRequestBodyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateTopicRuleDestinationRequestBodyStatusEnum: %s", s)
	}
}

type UpdateTopicRuleDestinationRequestBody struct {
	// The ARN of the topic rule destination.
	Arn string `json:"arn"`
	// <p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>
	Status UpdateTopicRuleDestinationRequestBodyStatusEnum `json:"status"`
}

type UpdateTopicRuleDestinationRequest struct {
	RequestBody       UpdateTopicRuleDestinationRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateTopicRuleDestinationResponse struct {
	// ConflictingResourceUpdateException
	ConflictingResourceUpdateException interface{}
	ContentType                        string
	// InternalException
	InternalException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
	// Success
	UpdateTopicRuleDestinationResponse map[string]interface{}
}
