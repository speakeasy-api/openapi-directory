/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETGETReservedNodeExchangeOfferingsQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETGETReservedNodeExchangeOfferingsActionEnum action;
    public GETGETReservedNodeExchangeOfferingsQueryParams withAction(GETGETReservedNodeExchangeOfferingsActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * A value that indicates the starting point for the next set of ReservedNodeOfferings.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Marker")
    public String marker;
    public GETGETReservedNodeExchangeOfferingsQueryParams withMarker(String marker) {
        this.marker = marker;
        return this;
    }
    
    /**
     * An integer setting the maximum number of ReservedNodeOfferings to retrieve.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxRecords")
    public Long maxRecords;
    public GETGETReservedNodeExchangeOfferingsQueryParams withMaxRecords(Long maxRecords) {
        this.maxRecords = maxRecords;
        return this;
    }
    
    /**
     * A string representing the node identifier for the DC1 Reserved Node to be exchanged.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ReservedNodeId")
    public String reservedNodeId;
    public GETGETReservedNodeExchangeOfferingsQueryParams withReservedNodeId(String reservedNodeId) {
        this.reservedNodeId = reservedNodeId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETGETReservedNodeExchangeOfferingsVersionEnum version;
    public GETGETReservedNodeExchangeOfferingsQueryParams withVersion(GETGETReservedNodeExchangeOfferingsVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
