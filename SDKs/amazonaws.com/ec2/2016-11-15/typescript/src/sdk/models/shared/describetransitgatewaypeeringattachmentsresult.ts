/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Information about the accepter transit gateway.
 */
export class DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsAccepterTgwInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  coreNetworkId?: string;

  @SpeakeasyMetadata()
  ownerId?: string;

  @SpeakeasyMetadata()
  region?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;
}

/**
 * Describes whether dynamic routing is enabled or disabled for the transit gateway peering attachment.
 */
export enum DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsOptionsDynamicRoutingEnum {
  Enable = "enable",
  Disable = "disable",
}

/**
 * Details about the transit gateway peering attachment.
 */
export class DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  dynamicRouting?: DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsOptionsDynamicRoutingEnum;
}

/**
 * Information about the requester transit gateway.
 */
export class DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsRequesterTgwInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  coreNetworkId?: string;

  @SpeakeasyMetadata()
  ownerId?: string;

  @SpeakeasyMetadata()
  region?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;
}

/**
 * The state of the transit gateway peering attachment. Note that the <code>initiating</code> state has been deprecated.
 */
export enum DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsStateEnum {
  Initiating = "initiating",
  InitiatingRequest = "initiatingRequest",
  PendingAcceptance = "pendingAcceptance",
  RollingBack = "rollingBack",
  Pending = "pending",
  Available = "available",
  Modifying = "modifying",
  Deleting = "deleting",
  Deleted = "deleted",
  Failed = "failed",
  Rejected = "rejected",
  Rejecting = "rejecting",
  Failing = "failing",
}

/**
 * The status of the transit gateway peering attachment.
 */
export class DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: string;

  @SpeakeasyMetadata()
  message?: string;
}

/**
 * Describes a tag.
 */
export class DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes the transit gateway peering attachment.
 */
export class DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachments extends SpeakeasyBase {
  @SpeakeasyMetadata()
  accepterTgwInfo?: DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsAccepterTgwInfo;

  @SpeakeasyMetadata()
  accepterTransitGatewayAttachmentId?: string;

  @SpeakeasyMetadata()
  creationTime?: Date;

  @SpeakeasyMetadata()
  options?: DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsOptions;

  @SpeakeasyMetadata()
  requesterTgwInfo?: DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsRequesterTgwInfo;

  @SpeakeasyMetadata()
  state?: DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsStateEnum;

  @SpeakeasyMetadata()
  status?: DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsStatus;

  @SpeakeasyMetadata({
    elemType:
      DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsTags,
  })
  tags?: DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachmentsTags[];

  @SpeakeasyMetadata()
  transitGatewayAttachmentId?: string;
}

/**
 * Success
 */
export class DescribeTransitGatewayPeeringAttachmentsResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachments,
  })
  transitGatewayPeeringAttachments?: DescribeTransitGatewayPeeringAttachmentsResultTransitGatewayPeeringAttachments[];
}
