<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NHInterior - A JSON object describing the interior item.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NHInterior
{
    /**
     * Where the clothing may be obtained from (could be multiple sources). `from` is a brief description of the source; `note`, when provided, provides additional details.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NHInteriorAvailability> $availability
     */
	#[\JMS\Serializer\Annotation\SerializedName('availability')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NHInteriorAvailability>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $availability = null;
    
    /**
     * An array of prices, for when the interior may be purchased with Bells, Nook Miles, etc..
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NHInteriorBuy> $buy
     */
	#[\JMS\Serializer\Annotation\SerializedName('buy')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NHInteriorBuy>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $buy = null;
    
    /**
     * The category of item as shown in the player's inventory.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NHInteriorCategoryEnum $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NHInteriorCategoryEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NHInteriorCategoryEnum $category = null;
    
    /**
     * (WIP)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NHInteriorColorsEnum $colors
     */
	#[\JMS\Serializer\Annotation\SerializedName('colors')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NHInteriorColorsEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NHInteriorColorsEnum $colors = null;
    
    /**
     * The number of lengthwise grid spaces this item takes up.
     * 
     * @var ?float $gridLength
     */
	#[\JMS\Serializer\Annotation\SerializedName('grid_length')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $gridLength = null;
    
    /**
     * The number of widthwise grid spaces this item takes up.
     * 
     * @var ?float $gridWidth
     */
	#[\JMS\Serializer\Annotation\SerializedName('grid_width')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $gridWidth = null;
    
    /**
     * The base value that the item provides to a player's Happy Home Academy score when placed in their home.
     * 
     * @var ?int $hhaBase
     */
	#[\JMS\Serializer\Annotation\SerializedName('hha_base')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hhaBase = null;
    
    /**
     * The HHA category the item is a part of, if any. If the item does not have an HHA category, this will be an empty string.
     * 
     * @var ?string $hhaCategory
     */
	#[\JMS\Serializer\Annotation\SerializedName('hha_category')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hhaCategory = null;
    
    /**
     * Image of the interior. dodo.ac is Nookipedia's CDN server.
     * 
     * @var ?string $imageUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('image_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $imageUrl = null;
    
    /**
     * The [furniture series](https://nookipedia.com/wiki/Series_(furniture)) the item is a part of, if any. A series is a collection of furniture and interior items, all with the same theme. If the item is not part of a series, this will be an empty string.
     * 
     * @var ?string $itemSeries
     */
	#[\JMS\Serializer\Annotation\SerializedName('item_series')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $itemSeries = null;
    
    /**
     * The [furniture set](https://nookipedia.com/wiki/Set) the item is a part of, if any. A set is a smaller collection of related furniture items. If the item is not part of a set, this will be an empty string.
     * 
     * @var ?string $itemSet
     */
	#[\JMS\Serializer\Annotation\SerializedName('item_set')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $itemSet = null;
    
    /**
     * The name of the interior.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Any additional miscellaneous information about the item, such as a name change from a past update.
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * The number of Bells the interior can be sold to Nook's store for.
     * 
     * @var ?int $sell
     */
	#[\JMS\Serializer\Annotation\SerializedName('sell')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sell = null;
    
    /**
     * The tag of an item, if any, which denotes a specific use or relation to an event. Tags are determined by Nintendo. Examples include "Chair", "Musical Instrument", and "Mario". If the item does not have a tag, this will be an empty string.
     * 
     * @var ?string $tag
     */
	#[\JMS\Serializer\Annotation\SerializedName('tag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tag = null;
    
    /**
     * A list of [themes](https://nookipedia.com/wiki/Theme_(furniture)) (if any) that the item belongs to.
     * 
     * @var ?array<string> $themes
     */
	#[\JMS\Serializer\Annotation\SerializedName('themes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $themes = null;
    
    /**
     * Whether the item is available through legitimate gameplay. Some items are added to the game files in an update, but aren't actually made available until a subsequent update unlocks them.
     * 
     * @var ?bool $unlocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('unlocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $unlocked = null;
    
    /**
     * Link to the respective Nookipedia article.
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * The version of *New Horizons* that the item was added. Items that were included at the game's launch have version "1.0.0".
     * 
     * @var ?string $versionAdded
     */
	#[\JMS\Serializer\Annotation\SerializedName('version_added')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $versionAdded = null;
    
	public function __construct()
	{
		$this->availability = null;
		$this->buy = null;
		$this->category = null;
		$this->colors = null;
		$this->gridLength = null;
		$this->gridWidth = null;
		$this->hhaBase = null;
		$this->hhaCategory = null;
		$this->imageUrl = null;
		$this->itemSeries = null;
		$this->itemSet = null;
		$this->name = null;
		$this->notes = null;
		$this->sell = null;
		$this->tag = null;
		$this->themes = null;
		$this->unlocked = null;
		$this->url = null;
		$this->versionAdded = null;
	}
}
