/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class ListPickupPpointsByLocationRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * Three letter country code refering to the `postalCode` field. Pass the country code only if you are searching pickup points by postal code.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=countryCode",
  })
  countryCode?: string;

  /**
   * Geocoordinates (first longitude, then latitude) around which to search for pickup points. If you use this type of search, do not pass postal and country codes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=geoCoordinates",
  })
  geoCoordinates?: number[];

  /**
   * Postal code around which to search for pickup points. If you use this type of search, make sure to pass a `countryCode` and do not pass `geoCoordinates`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=postalCode",
  })
  postalCode?: string;
}

export class ListPickupPpointsByLocationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
