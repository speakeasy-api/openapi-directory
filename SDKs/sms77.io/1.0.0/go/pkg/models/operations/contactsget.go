// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// ContactsGetActionEnum - Determines the action to execute.
type ContactsGetActionEnum string

const (
	ContactsGetActionEnumRead ContactsGetActionEnum = "read"
)

func (e *ContactsGetActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "read":
		*e = ContactsGetActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactsGetActionEnum: %s", s)
	}
}

// ContactsGetJSONEnum - Defines whether to return the response as JSON or CSV separated by semicolon.
type ContactsGetJSONEnum string

const (
	ContactsGetJSONEnumZero ContactsGetJSONEnum = "0"
	ContactsGetJSONEnumOne  ContactsGetJSONEnum = "1"
)

func (e *ContactsGetJSONEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		*e = ContactsGetJSONEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactsGetJSONEnum: %s", s)
	}
}

type ContactsGetRequest struct {
	// Determines the action to execute.
	Action ContactsGetActionEnum `queryParam:"style=form,explode=true,name=action"`
	// Defines whether to return the response as JSON or CSV separated by semicolon.
	JSON *ContactsGetJSONEnum `queryParam:"style=form,explode=true,name=json"`
}

type ContactsGetResponse struct {
	// OK (CSV)
	ContactsGet200ApplicationJSONString *string
	// OK (CSV)
	ContactsGet200TextCsvString *string
	ContentType                 string
	StatusCode                  int
	RawResponse                 *http.Response
}
