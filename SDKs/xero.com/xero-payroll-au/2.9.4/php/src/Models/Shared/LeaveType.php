<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class LeaveType
{
    /**
     * Is the current record
     * 
     * @var ?bool $currentRecord
     */
	#[\JMS\Serializer\Annotation\SerializedName('CurrentRecord')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $currentRecord = null;
    
    /**
     * Set this to indicate that an employee will be paid when taking this type of leave
     * 
     * @var ?bool $isPaidLeave
     */
	#[\JMS\Serializer\Annotation\SerializedName('IsPaidLeave')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPaidLeave = null;
    
    /**
     * Enter an amount here if your organisation pays an additional percentage on top of ordinary earnings when your employees take leave (typically 17.5%)
     * 
     * @var ?float $leaveLoadingRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('LeaveLoadingRate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $leaveLoadingRate = null;
    
    /**
     * Xero identifier
     * 
     * @var ?string $leaveTypeID
     */
	#[\JMS\Serializer\Annotation\SerializedName('LeaveTypeID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $leaveTypeID = null;
    
    /**
     * Name of the earnings rate (max length = 100)
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The number of units the employee is entitled to each year
     * 
     * @var ?float $normalEntitlement
     */
	#[\JMS\Serializer\Annotation\SerializedName('NormalEntitlement')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $normalEntitlement = null;
    
    /**
     * Set this if you want a balance for this leave type to be shown on your employee’s payslips
     * 
     * @var ?bool $showOnPayslip
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShowOnPayslip')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $showOnPayslip = null;
    
    /**
     * The type of units by which leave entitlements are normally tracked. These are typically the same as the type of units used for the employee’s ordinary earnings rate
     * 
     * @var ?string $typeOfUnits
     */
	#[\JMS\Serializer\Annotation\SerializedName('TypeOfUnits')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $typeOfUnits = null;
    
    /**
     * Last modified timestamp
     * 
     * @var ?string $updatedDateUTC
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdatedDateUTC')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedDateUTC = null;
    
	public function __construct()
	{
		$this->currentRecord = null;
		$this->isPaidLeave = null;
		$this->leaveLoadingRate = null;
		$this->leaveTypeID = null;
		$this->name = null;
		$this->normalEntitlement = null;
		$this->showOnPayslip = null;
		$this->typeOfUnits = null;
		$this->updatedDateUTC = null;
	}
}
