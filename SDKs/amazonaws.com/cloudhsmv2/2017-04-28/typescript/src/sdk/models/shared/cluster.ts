/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BackupPolicyEnum } from "./backuppolicyenum";
import { BackupRetentionPolicy } from "./backupretentionpolicy";
import { Certificates } from "./certificates";
import { ClusterStateEnum } from "./clusterstateenum";
import { Hsm } from "./hsm";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains information about an AWS CloudHSM cluster.
 */
export class Cluster extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BackupPolicy" })
  backupPolicy?: BackupPolicyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "BackupRetentionPolicy" })
  @Type(() => BackupRetentionPolicy)
  backupRetentionPolicy?: BackupRetentionPolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "Certificates" })
  @Type(() => Certificates)
  certificates?: Certificates;

  @SpeakeasyMetadata()
  @Expose({ name: "ClusterId" })
  clusterId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreateTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "HsmType" })
  hsmType?: string;

  @SpeakeasyMetadata({ elemType: Hsm })
  @Expose({ name: "Hsms" })
  @Type(() => Hsm)
  hsms?: Hsm[];

  @SpeakeasyMetadata()
  @Expose({ name: "PreCoPassword" })
  preCoPassword?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityGroup" })
  securityGroup?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceBackupId" })
  sourceBackupId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: ClusterStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StateMessage" })
  stateMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetMapping" })
  subnetMapping?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "TagList" })
  @Type(() => Tag)
  tagList?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "VpcId" })
  vpcId?: string;
}
