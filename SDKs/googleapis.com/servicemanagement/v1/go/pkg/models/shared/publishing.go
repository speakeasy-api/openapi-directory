// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PublishingOrganizationEnum - For whom the client library is being published.
type PublishingOrganizationEnum string

const (
	PublishingOrganizationEnumClientLibraryOrganizationUnspecified PublishingOrganizationEnum = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"
	PublishingOrganizationEnumCloud                                PublishingOrganizationEnum = "CLOUD"
	PublishingOrganizationEnumAds                                  PublishingOrganizationEnum = "ADS"
	PublishingOrganizationEnumPhotos                               PublishingOrganizationEnum = "PHOTOS"
	PublishingOrganizationEnumStreetView                           PublishingOrganizationEnum = "STREET_VIEW"
	PublishingOrganizationEnumShopping                             PublishingOrganizationEnum = "SHOPPING"
	PublishingOrganizationEnumGeo                                  PublishingOrganizationEnum = "GEO"
	PublishingOrganizationEnumGenerativeAi                         PublishingOrganizationEnum = "GENERATIVE_AI"
)

func (e PublishingOrganizationEnum) ToPointer() *PublishingOrganizationEnum {
	return &e
}

func (e *PublishingOrganizationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
		fallthrough
	case "CLOUD":
		fallthrough
	case "ADS":
		fallthrough
	case "PHOTOS":
		fallthrough
	case "STREET_VIEW":
		fallthrough
	case "SHOPPING":
		fallthrough
	case "GEO":
		fallthrough
	case "GENERATIVE_AI":
		*e = PublishingOrganizationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublishingOrganizationEnum: %v", v)
	}
}

// Publishing - This message configures the settings for publishing [Google Cloud Client libraries](https://cloud.google.com/apis/docs/cloud-client-libraries) generated from the service config.
type Publishing struct {
	// Used as a tracking tag when collecting data about the APIs developer relations artifacts like docs, packages delivered to package managers, etc. Example: "speech".
	APIShortName *string `json:"apiShortName,omitempty"`
	// GitHub teams to be added to CODEOWNERS in the directory in GitHub containing source code for the client libraries for this API.
	CodeownerGithubTeams []string `json:"codeownerGithubTeams,omitempty"`
	// A prefix used in sample code when demarking regions to be included in documentation.
	DocTagPrefix *string `json:"docTagPrefix,omitempty"`
	// Link to product home page. Example: https://cloud.google.com/asset-inventory/docs/overview
	DocumentationURI *string `json:"documentationUri,omitempty"`
	// GitHub label to apply to issues and pull requests opened for this API.
	GithubLabel *string `json:"githubLabel,omitempty"`
	// Client library settings. If the same version string appears multiple times in this list, then the last one wins. Settings from earlier settings with the same version string are discarded.
	LibrarySettings []ClientLibrarySettings `json:"librarySettings,omitempty"`
	// A list of API method settings, e.g. the behavior for methods that use the long-running operation pattern.
	MethodSettings []MethodSettings `json:"methodSettings,omitempty"`
	// Link to a *public* URI where users can report issues. Example: https://issuetracker.google.com/issues/new?component=190865&template=1161103
	NewIssueURI *string `json:"newIssueUri,omitempty"`
	// For whom the client library is being published.
	Organization *PublishingOrganizationEnum `json:"organization,omitempty"`
	// Optional link to proto reference documentation. Example: https://cloud.google.com/pubsub/lite/docs/reference/rpc
	ProtoReferenceDocumentationURI *string `json:"protoReferenceDocumentationUri,omitempty"`
}
