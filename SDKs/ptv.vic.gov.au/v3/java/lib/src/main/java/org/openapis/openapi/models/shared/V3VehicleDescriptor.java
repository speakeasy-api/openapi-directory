/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class V3VehicleDescriptor {
    /**
     * Indicator if vehicle is air conditioned. May be null. Only available for some tram runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("air_conditioned")
    public Boolean airConditioned;

    public V3VehicleDescriptor withAirConditioned(Boolean airConditioned) {
        this.airConditioned = airConditioned;
        return this;
    }
    
    /**
     * Vehicle description such as "6 Car Comeng", "6 Car Xtrapolis", "3 Car Comeng", "6 Car Siemens", "3 Car Siemens". May be null/empty.
     *             Only available for some metropolitan train runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public V3VehicleDescriptor withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Operator identifier of the vehicle such as "26094". May be null/empty. Only available for some tram and bus runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public V3VehicleDescriptor withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The length of the vehicle. Applies to CIS - Metro Trains
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("length")
    public String length;

    public V3VehicleDescriptor withLength(String length) {
        this.length = length;
        return this;
    }
    
    /**
     * Indicator if vehicle has a low floor. May be null. Only available for some tram runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("low_floor")
    public Boolean lowFloor;

    public V3VehicleDescriptor withLowFloor(Boolean lowFloor) {
        this.lowFloor = lowFloor;
        return this;
    }
    
    /**
     * Operator name of the vehicle such as "Metro Trains Melbourne", "Yarra Trams", "Ventura Bus Line", "CDC" or "Sita Bus Lines" . May be null/empty.
     *             Only available for train, tram, v/line and some bus runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operator")
    public String operator;

    public V3VehicleDescriptor withOperator(String operator) {
        this.operator = operator;
        return this;
    }
    
    /**
     * Supplier of vehicle descriptor data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supplier")
    public String supplier;

    public V3VehicleDescriptor withSupplier(String supplier) {
        this.supplier = supplier;
        return this;
    }
    
    public V3VehicleDescriptor(){}
}
