"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImageProcessingSettings:
    r"""Represents image preprocessing settings used by image augmentation."""
    
    augmentation_methods: Optional[dict[str, bool]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('augmentationMethods'), 'exclude': lambda f: f is None }})
    r"""Gets or sets enabled image transforms. The key corresponds to the transform name. If value is set to true, then correspondent transform is enabled. Otherwise this transform will not be used.
    Augmentation will be uniformly distributed among enabled transforms.
    """  
    