/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class ProductOrderUboSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=user_key",
  })
  userKey: string;
}

/**
 * Parameters for the UBO order
 */
export class ProductOrderUboRequestBody extends SpeakeasyBase {
  /**
   * An optional callback URL to which updates about the order will be sent (for instance if credits are exceeded)
   */
  @SpeakeasyMetadata({ data: "form, name=callbackUrl" })
  callbackUrl?: string;

  /**
   * Specify a maximum amount of credits which should be used. To disable use -1
   */
  @SpeakeasyMetadata({ data: "form, name=credits" })
  credits?: number;

  /**
   * Include purchase of register document to ubo report
   */
  @SpeakeasyMetadata({ data: "form, name=includeDocs" })
  includeDocs?: boolean;

  /**
   * Define a threshold for different levels of crawling
   */
  @SpeakeasyMetadata({ data: "form, name=levels" })
  levels?: string;

  /**
   * Choose a matching strategy. Available options (FULL,LEVELS)
   */
  @SpeakeasyMetadata({ data: "form, name=strategy" })
  strategy?: string;

  /**
   * KYC API Id (32 byte hexid) of the company you want to place the order for
   */
  @SpeakeasyMetadata({ data: "form, name=subjectId" })
  subjectId: string;
}

/**
 * Detailed information about the error
 */
export class ProductOrderUboDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fault" })
  fault?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  tag: string;
}

/**
 * Product order details
 */
export class ProductOrderUbo200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "identity" })
  identity: string;

  @SpeakeasyMetadata()
  @Expose({ name: "option" })
  option: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ordered" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  ordered: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner: string;

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subjectId" })
  subjectId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subjectValue" })
  subjectValue: string;
}

export class ProductOrderUboResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Product order details
   */
  @SpeakeasyMetadata()
  productOrderUbo200ApplicationJSONObject?: ProductOrderUbo200ApplicationJSON;

  /**
   * Detailed information about the error
   */
  @SpeakeasyMetadata()
  productOrderUboDefaultApplicationJSONObject?: ProductOrderUboDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
