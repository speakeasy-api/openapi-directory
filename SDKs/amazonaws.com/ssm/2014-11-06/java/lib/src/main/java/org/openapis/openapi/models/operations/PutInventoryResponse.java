/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class PutInventoryResponse {
    
    public String contentType;
    public PutInventoryResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * CustomSchemaCountLimitExceededException
     */
    
    public Object customSchemaCountLimitExceededException;
    public PutInventoryResponse withCustomSchemaCountLimitExceededException(Object customSchemaCountLimitExceededException) {
        this.customSchemaCountLimitExceededException = customSchemaCountLimitExceededException;
        return this;
    }
    
    /**
     * InternalServerError
     */
    
    public Object internalServerError;
    public PutInventoryResponse withInternalServerError(Object internalServerError) {
        this.internalServerError = internalServerError;
        return this;
    }
    
    /**
     * InvalidInstanceId
     */
    
    public Object invalidInstanceId;
    public PutInventoryResponse withInvalidInstanceId(Object invalidInstanceId) {
        this.invalidInstanceId = invalidInstanceId;
        return this;
    }
    
    /**
     * InvalidInventoryItemContextException
     */
    
    public Object invalidInventoryItemContextException;
    public PutInventoryResponse withInvalidInventoryItemContextException(Object invalidInventoryItemContextException) {
        this.invalidInventoryItemContextException = invalidInventoryItemContextException;
        return this;
    }
    
    /**
     * InvalidItemContentException
     */
    
    public Object invalidItemContentException;
    public PutInventoryResponse withInvalidItemContentException(Object invalidItemContentException) {
        this.invalidItemContentException = invalidItemContentException;
        return this;
    }
    
    /**
     * InvalidTypeNameException
     */
    
    public Object invalidTypeNameException;
    public PutInventoryResponse withInvalidTypeNameException(Object invalidTypeNameException) {
        this.invalidTypeNameException = invalidTypeNameException;
        return this;
    }
    
    /**
     * ItemContentMismatchException
     */
    
    public Object itemContentMismatchException;
    public PutInventoryResponse withItemContentMismatchException(Object itemContentMismatchException) {
        this.itemContentMismatchException = itemContentMismatchException;
        return this;
    }
    
    /**
     * ItemSizeLimitExceededException
     */
    
    public Object itemSizeLimitExceededException;
    public PutInventoryResponse withItemSizeLimitExceededException(Object itemSizeLimitExceededException) {
        this.itemSizeLimitExceededException = itemSizeLimitExceededException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.PutInventoryResult putInventoryResult;
    public PutInventoryResponse withPutInventoryResult(org.openapis.openapi.models.shared.PutInventoryResult putInventoryResult) {
        this.putInventoryResult = putInventoryResult;
        return this;
    }
    
    
    public Integer statusCode;
    public PutInventoryResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public PutInventoryResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * SubTypeCountLimitExceededException
     */
    
    public Object subTypeCountLimitExceededException;
    public PutInventoryResponse withSubTypeCountLimitExceededException(Object subTypeCountLimitExceededException) {
        this.subTypeCountLimitExceededException = subTypeCountLimitExceededException;
        return this;
    }
    
    /**
     * TotalSizeLimitExceededException
     */
    
    public Object totalSizeLimitExceededException;
    public PutInventoryResponse withTotalSizeLimitExceededException(Object totalSizeLimitExceededException) {
        this.totalSizeLimitExceededException = totalSizeLimitExceededException;
        return this;
    }
    
    /**
     * UnsupportedInventoryItemContextException
     */
    
    public Object unsupportedInventoryItemContextException;
    public PutInventoryResponse withUnsupportedInventoryItemContextException(Object unsupportedInventoryItemContextException) {
        this.unsupportedInventoryItemContextException = unsupportedInventoryItemContextException;
        return this;
    }
    
    /**
     * UnsupportedInventorySchemaVersionException
     */
    
    public Object unsupportedInventorySchemaVersionException;
    public PutInventoryResponse withUnsupportedInventorySchemaVersionException(Object unsupportedInventorySchemaVersionException) {
        this.unsupportedInventorySchemaVersionException = unsupportedInventorySchemaVersionException;
        return this;
    }
    
}
