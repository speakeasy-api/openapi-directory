"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RecipientDeliveryTypeEnum(str, Enum):
    r"""The delivery type for the recipient."""
    LINK = 'LINK'
    ATTACHMENT = 'ATTACHMENT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Recipient:
    r"""Represents a recipient."""
    
    delivery_type: Optional[RecipientDeliveryTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryType'), 'exclude': lambda f: f is None }})
    r"""The delivery type for the recipient."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""The email address of the recipient."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""The kind of resource this is, in this case dfareporting#recipient."""  
    