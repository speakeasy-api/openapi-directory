<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Ramps 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Retrieve a ramp
     * 
     * **Note**: This operation is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
     * 
     * Retrieves the latest definition of a specified ramp.
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GETRampByRampNumberRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GETRampByRampNumberResponse
     */
	public function getRampByRampNumber(
        \OpenAPI\OpenAPI\Models\Operations\GETRampByRampNumberRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GETRampByRampNumberResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/ramps/{rampNumber}', \OpenAPI\OpenAPI\Models\Operations\GETRampByRampNumberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GETRampByRampNumberResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getRampByRampNumberResponseType = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GETRampByRampNumberResponseType', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List ramp metrics by order number
     * 
     * **Note**: This operation is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
     * 
     * Retrieves key ramp metrics about a specified order, including the following metrics:
     * 
     * * TCB, TCV in the Ramp level
     * * TCB, TCV in the Interval level
     * * TCB, TCV, Quantity, and MRR in Interval Metrics
     * * Delta TCB, Delta TCV, Delta Quantity, and Delta MRR in Interval Delta Metrics
     * 
     * See [Key metrics for Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/F_Key_metrics_for_Ramps) for more information.
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByOrderNumberRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByOrderNumberResponse
     */
	public function getRampMetricsByOrderNumber(
        \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByOrderNumberRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByOrderNumberResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/orders/{orderNumber}/ramp-metrics', \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByOrderNumberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByOrderNumberResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getRampMetricsByOrderNumberResponseType = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GETRampMetricsByOrderNumberResponseType', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List all ramp metrics of a ramp
     * 
     * **Note**: This operation is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
     * 
     * Retrieves key metrics about a specified ramp, including the following metrics:
     * 
     * * TCB, TCV in the Ramp level
     * * TCB, TCV in the Interval level
     * * TCB, TCV, Quantity, and MRR in Interval Metrics
     * * Delta TCB, Delta TCV, Delta Quantity, and Delta MRR in Interval Delta Metrics
     * 
     * See [Key metrics for Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/F_Key_metrics_for_Ramps) for more information.
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByRampNumberRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByRampNumberResponse
     */
	public function getRampMetricsByRampNumber(
        \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByRampNumberRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByRampNumberResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/ramps/{rampNumber}/ramp-metrics', \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByRampNumberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsByRampNumberResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getRampMetricsByRampNumberResponseType = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GETRampMetricsByRampNumberResponseType', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List ramp metrics by subscription key
     * 
     * **Note**: This operation is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
     * 
     * Retrieves key ramp metrics about a specified subscription, including the following metrics:
     * 
     * * TCB, TCV in the Ramp level
     * * TCB, TCV in the Interval level
     * * TCB, TCV, Quantity, and MRR in Interval Metrics
     * * Delta TCB, Delta TCV, Delta Quantity, and Delta MRR in Interval Delta Metrics
     * 
     * See [Key metrics for Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/F_Key_metrics_for_Ramps) for more information.
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsBySubscriptionKeyRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsBySubscriptionKeyResponse
     */
	public function getRampMetricsBySubscriptionKey(
        \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsBySubscriptionKeyRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsBySubscriptionKeyResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/subscriptions/{subscriptionKey}/ramp-metrics', \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsBySubscriptionKeyRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GETRampMetricsBySubscriptionKeyResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getRampMetricsBySubscriptionKeyResponseType = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GETRampMetricsBySubscriptionKeyResponseType', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieve a ramp by subscription key
     * 
     * **Note**: This operation is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
     * 
     *  Retrieves the definition of the ramp associated with a specified subscription.
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GETRampsBySubscriptionKeyRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GETRampsBySubscriptionKeyResponse
     */
	public function getRampsBySubscriptionKey(
        \OpenAPI\OpenAPI\Models\Operations\GETRampsBySubscriptionKeyRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GETRampsBySubscriptionKeyResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/subscriptions/{subscriptionKey}/ramps', \OpenAPI\OpenAPI\Models\Operations\GETRampsBySubscriptionKeyRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GETRampsBySubscriptionKeyResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getRampsBySubscriptionKeyResponseType = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GETRampsBySubscriptionKeyResponseType', 'json');
            }
        }

        return $response;
    }
}