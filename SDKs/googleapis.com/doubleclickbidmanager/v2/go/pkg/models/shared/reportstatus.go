// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReportStatusFormatEnum - The file type of the report.
type ReportStatusFormatEnum string

const (
	ReportStatusFormatEnumFormatUnspecified ReportStatusFormatEnum = "FORMAT_UNSPECIFIED"
	ReportStatusFormatEnumCsv               ReportStatusFormatEnum = "CSV"
	ReportStatusFormatEnumXlsx              ReportStatusFormatEnum = "XLSX"
)

func (e *ReportStatusFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FORMAT_UNSPECIFIED":
		fallthrough
	case "CSV":
		fallthrough
	case "XLSX":
		*e = ReportStatusFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReportStatusFormatEnum: %s", s)
	}
}

// ReportStatusStateEnum - Output only. The state of the report.
type ReportStatusStateEnum string

const (
	ReportStatusStateEnumStateUnspecified ReportStatusStateEnum = "STATE_UNSPECIFIED"
	ReportStatusStateEnumQueued           ReportStatusStateEnum = "QUEUED"
	ReportStatusStateEnumRunning          ReportStatusStateEnum = "RUNNING"
	ReportStatusStateEnumDone             ReportStatusStateEnum = "DONE"
	ReportStatusStateEnumFailed           ReportStatusStateEnum = "FAILED"
)

func (e *ReportStatusStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "QUEUED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "DONE":
		fallthrough
	case "FAILED":
		*e = ReportStatusStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReportStatusStateEnum: %s", s)
	}
}

// ReportStatus - Report status.
type ReportStatus struct {
	// Output only. The time when this report either completed successfully or failed.
	FinishTime *string `json:"finishTime,omitempty"`
	// The file type of the report.
	Format *ReportStatusFormatEnum `json:"format,omitempty"`
	// Output only. The state of the report.
	State *ReportStatusStateEnum `json:"state,omitempty"`
}
