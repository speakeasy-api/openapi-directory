// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WeekDayMetricsDayEnum - Day of the week. Allowed values are Sunday - Saturday.
type WeekDayMetricsDayEnum string

const (
	WeekDayMetricsDayEnumDayOfWeekUnspecified WeekDayMetricsDayEnum = "DAY_OF_WEEK_UNSPECIFIED"
	WeekDayMetricsDayEnumMonday               WeekDayMetricsDayEnum = "MONDAY"
	WeekDayMetricsDayEnumTuesday              WeekDayMetricsDayEnum = "TUESDAY"
	WeekDayMetricsDayEnumWednesday            WeekDayMetricsDayEnum = "WEDNESDAY"
	WeekDayMetricsDayEnumThursday             WeekDayMetricsDayEnum = "THURSDAY"
	WeekDayMetricsDayEnumFriday               WeekDayMetricsDayEnum = "FRIDAY"
	WeekDayMetricsDayEnumSaturday             WeekDayMetricsDayEnum = "SATURDAY"
	WeekDayMetricsDayEnumSunday               WeekDayMetricsDayEnum = "SUNDAY"
)

func (e WeekDayMetricsDayEnum) ToPointer() *WeekDayMetricsDayEnum {
	return &e
}

func (e *WeekDayMetricsDayEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DAY_OF_WEEK_UNSPECIFIED":
		fallthrough
	case "MONDAY":
		fallthrough
	case "TUESDAY":
		fallthrough
	case "WEDNESDAY":
		fallthrough
	case "THURSDAY":
		fallthrough
	case "FRIDAY":
		fallthrough
	case "SATURDAY":
		fallthrough
	case "SUNDAY":
		*e = WeekDayMetricsDayEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WeekDayMetricsDayEnum: %v", v)
	}
}

// WeekDayMetrics - Metrics for a week day.
type WeekDayMetrics struct {
	// Day of the week. Allowed values are Sunday - Saturday.
	Day *WeekDayMetricsDayEnum `json:"day,omitempty"`
	// Total count of missed calls for this hour.
	MissedCallsCount *int `json:"missedCallsCount,omitempty"`
}
