"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fileuploadanswers as shared_fileuploadanswers
from ..shared import grade as shared_grade
from ..shared import textanswers as shared_textanswers
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Answer:
    r"""The submitted answer for a question."""
    
    file_upload_answers: Optional[shared_fileuploadanswers.FileUploadAnswers] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileUploadAnswers'), 'exclude': lambda f: f is None }})
    r"""All submitted files for a FileUpload question."""  
    grade: Optional[shared_grade.Grade] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grade'), 'exclude': lambda f: f is None }})
    r"""Grade information associated with a respondent's answer to a question."""  
    question_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('questionId'), 'exclude': lambda f: f is None }})
    r"""Output only. The question's ID. See also Question.question_id."""  
    text_answers: Optional[shared_textanswers.TextAnswers] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textAnswers'), 'exclude': lambda f: f is None }})
    r"""A question's answers as text."""  
    