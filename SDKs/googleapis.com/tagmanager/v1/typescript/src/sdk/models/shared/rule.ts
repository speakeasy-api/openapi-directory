/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Condition } from "./condition";
import { Expose, Type } from "class-transformer";

/**
 * Represents a Google Tag Manager Rule.
 */
export class Rule extends SpeakeasyBase {
  /**
   * GTM Account ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * The list of conditions that make up this rule (implicit AND between them). @mutable tagmanager.accounts.containers.rules.create @mutable tagmanager.accounts.containers.rules.update
   */
  @SpeakeasyMetadata({ elemType: Condition })
  @Expose({ name: "condition" })
  @Type(() => Condition)
  condition?: Condition[];

  /**
   * GTM Container ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "containerId" })
  containerId?: string;

  /**
   * The fingerprint of the GTM Rule as computed at storage time. This value is recomputed whenever the rule is modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fingerprint" })
  fingerprint?: string;

  /**
   * Rule display name. @mutable tagmanager.accounts.containers.rules.create @mutable tagmanager.accounts.containers.rules.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * User notes on how to apply this rule in the container. @mutable tagmanager.accounts.containers.rules.create @mutable tagmanager.accounts.containers.rules.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * The Rule ID uniquely identifies the GTM Rule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ruleId" })
  ruleId?: string;
}
