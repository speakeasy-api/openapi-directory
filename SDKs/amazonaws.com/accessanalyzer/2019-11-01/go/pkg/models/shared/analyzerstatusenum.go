// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AnalyzerStatusEnum string

const (
	AnalyzerStatusEnumActive   AnalyzerStatusEnum = "ACTIVE"
	AnalyzerStatusEnumCreating AnalyzerStatusEnum = "CREATING"
	AnalyzerStatusEnumDisabled AnalyzerStatusEnum = "DISABLED"
	AnalyzerStatusEnumFailed   AnalyzerStatusEnum = "FAILED"
)

func (e AnalyzerStatusEnum) ToPointer() *AnalyzerStatusEnum {
	return &e
}

func (e *AnalyzerStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "CREATING":
		fallthrough
	case "DISABLED":
		fallthrough
	case "FAILED":
		*e = AnalyzerStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyzerStatusEnum: %v", v)
	}
}
