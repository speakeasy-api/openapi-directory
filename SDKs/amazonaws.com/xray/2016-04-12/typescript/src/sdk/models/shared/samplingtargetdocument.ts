/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Temporary changes to a sampling rule configuration. To meet the global sampling target for a rule, X-Ray calculates a new reservoir for each service based on the recent sampling results of all services that called <a href="https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingTargets.html">GetSamplingTargets</a>.
 */
export class SamplingTargetDocument extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "FixedRate" })
  fixedRate?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Interval" })
  interval?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReservoirQuota" })
  reservoirQuota?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReservoirQuotaTTL" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  reservoirQuotaTTL?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleName" })
  ruleName?: string;
}
