/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Invite } from "./invite";
import { UserMetadata } from "./usermetadata";
import { UserProfileRequest } from "./userprofilerequest";
import { Expose, Type } from "class-transformer";

export class OfferingUserAddResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "invite" })
  @Type(() => Invite)
  invite?: Invite;

  @SpeakeasyMetadata()
  @Expose({ name: "isFacilitator" })
  isFacilitator?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isMarker" })
  isMarker?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isReadonly" })
  isReadonly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => UserMetadata)
  metadata?: UserMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "personId" })
  personId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "profile" })
  @Type(() => UserProfileRequest)
  profile?: UserProfileRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "sendInvite" })
  sendInvite?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sendNotificationEmail" })
  sendNotificationEmail?: boolean;
}
