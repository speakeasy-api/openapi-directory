/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * NewCustomerResponse - Customer information
 */
public class NewCustomerResponse {
    /**
     * &amp;#128679; Deprecated since v4.8.0
     * 
     * Customer activation code string:
     * 
     * * valid only for types `free` and `demo`
     * 
     * * for `pay` customers it is empty
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activationCode")
    public String activationCode;
    public NewCustomerResponse withActivationCode(String activationCode) {
        this.activationCode = activationCode;
        return this;
    }
    
    /**
     * Company name
     */
    @JsonProperty("companyName")
    public String companyName;
    public NewCustomerResponse withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     * Creation date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public NewCustomerResponse withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * List of customer attributes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerAttributes")
    public CustomerAttributes customerAttributes;
    public NewCustomerResponse withCustomerAttributes(CustomerAttributes customerAttributes) {
        this.customerAttributes = customerAttributes;
        return this;
    }
    
    /**
     * Customer type
     */
    @JsonProperty("customerContractType")
    public NewCustomerResponseCustomerContractTypeEnum customerContractType;
    public NewCustomerResponse withCustomerContractType(NewCustomerResponseCustomerContractTypeEnum customerContractType) {
        this.customerContractType = customerContractType;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.21.0
     * 
     * Customer UUID
     */
    @JsonProperty("customerUuid")
    public String customerUuid;
    public NewCustomerResponse withCustomerUuid(String customerUuid) {
        this.customerUuid = customerUuid;
        return this;
    }
    
    /**
     * First administrator user
     */
    @JsonProperty("firstAdminUser")
    public FirstAdminUser firstAdminUser;
    public NewCustomerResponse withFirstAdminUser(FirstAdminUser firstAdminUser) {
        this.firstAdminUser = firstAdminUser;
        return this;
    }
    
    /**
     * Unique identifier for the customer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public NewCustomerResponse withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Customer is locked:
     * 
     * * `false` - unlocked
     * 
     * * `true` - locked
     * 
     * 
     * 
     * All users of this customer will be blocked and can not login anymore.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isLocked")
    public Boolean isLocked;
    public NewCustomerResponse withIsLocked(Boolean isLocked) {
        this.isLocked = isLocked;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.7.0
     * 
     * Customer lock status:
     * 
     * * `false` - unlocked
     * 
     * * `true` - locked
     * 
     * 
     * 
     * Please use `isLocked` instead.
     * 
     * All users of this customer will be blocked and can not login anymore.
     */
    @JsonProperty("lockStatus")
    public Boolean lockStatus;
    public NewCustomerResponse withLockStatus(Boolean lockStatus) {
        this.lockStatus = lockStatus;
        return this;
    }
    
    /**
     * Provider customer ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("providerCustomerId")
    public String providerCustomerId;
    public NewCustomerResponse withProviderCustomerId(String providerCustomerId) {
        this.providerCustomerId = providerCustomerId;
        return this;
    }
    
    /**
     * Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
     */
    @JsonProperty("quotaMax")
    public Long quotaMax;
    public NewCustomerResponse withQuotaMax(Long quotaMax) {
        this.quotaMax = quotaMax;
        return this;
    }
    
    /**
     * Number of days left for trial period (relevant only for type `demo`)
     * 
     * (not used)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trialDays")
    public Integer trialDays;
    public NewCustomerResponse withTrialDays(Integer trialDays) {
        this.trialDays = trialDays;
        return this;
    }
    
    /**
     * Maximal number of users
     */
    @JsonProperty("userMax")
    public Integer userMax;
    public NewCustomerResponse withUserMax(Integer userMax) {
        this.userMax = userMax;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.19.0
     * 
     * Maximal number of webhooks
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webhooksMax")
    public Long webhooksMax;
    public NewCustomerResponse withWebhooksMax(Long webhooksMax) {
        this.webhooksMax = webhooksMax;
        return this;
    }
    
}
