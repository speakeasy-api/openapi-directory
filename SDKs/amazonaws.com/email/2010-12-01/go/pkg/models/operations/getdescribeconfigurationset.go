// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GETDescribeConfigurationSetActionEnum
type GETDescribeConfigurationSetActionEnum string

const (
	GETDescribeConfigurationSetActionEnumDescribeConfigurationSet GETDescribeConfigurationSetActionEnum = "DescribeConfigurationSet"
)

func (e GETDescribeConfigurationSetActionEnum) ToPointer() *GETDescribeConfigurationSetActionEnum {
	return &e
}

func (e *GETDescribeConfigurationSetActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeConfigurationSet":
		*e = GETDescribeConfigurationSetActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeConfigurationSetActionEnum: %v", v)
	}
}

// GETDescribeConfigurationSetVersionEnum
type GETDescribeConfigurationSetVersionEnum string

const (
	GETDescribeConfigurationSetVersionEnumTwoThousandAndTen1201 GETDescribeConfigurationSetVersionEnum = "2010-12-01"
)

func (e GETDescribeConfigurationSetVersionEnum) ToPointer() *GETDescribeConfigurationSetVersionEnum {
	return &e
}

func (e *GETDescribeConfigurationSetVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETDescribeConfigurationSetVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeConfigurationSetVersionEnum: %v", v)
	}
}

type GETDescribeConfigurationSetRequest struct {
	Action GETDescribeConfigurationSetActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A list of configuration set attributes to return.
	ConfigurationSetAttributeNames []shared.ConfigurationSetAttributeEnum `queryParam:"style=form,explode=true,name=ConfigurationSetAttributeNames"`
	// The name of the configuration set to describe.
	ConfigurationSetName string                                 `queryParam:"style=form,explode=true,name=ConfigurationSetName"`
	Version              GETDescribeConfigurationSetVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm        *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeConfigurationSetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
