"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobProcessDetails:
    r"""The job process details."""
    
    number_of_canceled_things: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfCanceledThings'), 'exclude': lambda f: f is None }})  
    number_of_failed_things: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfFailedThings'), 'exclude': lambda f: f is None }})  
    number_of_in_progress_things: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfInProgressThings'), 'exclude': lambda f: f is None }})  
    number_of_queued_things: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfQueuedThings'), 'exclude': lambda f: f is None }})  
    number_of_rejected_things: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfRejectedThings'), 'exclude': lambda f: f is None }})  
    number_of_removed_things: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfRemovedThings'), 'exclude': lambda f: f is None }})  
    number_of_succeeded_things: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfSucceededThings'), 'exclude': lambda f: f is None }})  
    number_of_timed_out_things: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfTimedOutThings'), 'exclude': lambda f: f is None }})  
    processing_targets: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('processingTargets'), 'exclude': lambda f: f is None }})  
    