// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type RegistryListAPISpecsPathParams struct {
	// The api id.
	API string `pathParam:"style=simple,explode=false,name=api"`
	// The project id.
	Project string `pathParam:"style=simple,explode=false,name=project"`
	// The version id.
	Version string `pathParam:"style=simple,explode=false,name=version"`
}

type RegistryListAPISpecsQueryParams struct {
	// An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// The maximum number of specs to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
	PageSize *string `queryParam:"style=form,explode=true,name=page_size"`
	// A page token, received from a previous `ListApiSpecs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiSpecs` must match the call that provided the page token.
	PageToken *string `queryParam:"style=form,explode=true,name=page_token"`
}

type RegistryListAPISpecsRequest struct {
	PathParams  RegistryListAPISpecsPathParams
	QueryParams RegistryListAPISpecsQueryParams
}

type RegistryListAPISpecsResponse struct {
	ContentType string
	// OK
	ListAPISpecsResponse *shared.ListAPISpecsResponse
	StatusCode           int
	RawResponse          *http.Response
}
