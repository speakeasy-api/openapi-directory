/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DeveloperMetadataLookup } from "./developermetadatalookup";
import { GridRange } from "./gridrange";
import { Expose, Type } from "class-transformer";

/**
 * Filter that describes what data should be selected or returned from a request.
 */
export class DataFilter extends SpeakeasyBase {
  /**
   * Selects data that matches the specified A1 range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "a1Range" })
  a1Range?: string;

  /**
   * Selects DeveloperMetadata that matches all of the specified fields. For example, if only a metadata ID is specified this considers the DeveloperMetadata with that particular unique ID. If a metadata key is specified, this considers all developer metadata with that key. If a key, visibility, and location type are all specified, this considers all developer metadata with that key and visibility that are associated with a location of that type. In general, this selects all DeveloperMetadata that matches the intersection of all the specified fields; any field or combination of fields may be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "developerMetadataLookup" })
  @Type(() => DeveloperMetadataLookup)
  developerMetadataLookup?: DeveloperMetadataLookup;

  /**
   * A range on a sheet. All indexes are zero-based. Indexes are half open, i.e. the start index is inclusive and the end index is exclusive -- [start_index, end_index). Missing indexes indicate the range is unbounded on that side. For example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id: 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0, end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2, end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B == sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B == sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or equal to the end index. If the start index equals the end index, then the range is empty. Empty ranges are typically not meaningful and are usually rendered in the UI as `#REF!`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gridRange" })
  @Type(() => GridRange)
  gridRange?: GridRange;
}
