// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetServicesDirectionEnum - The sorting order (case insensitive).
type GetServicesDirectionEnum string

const (
	GetServicesDirectionEnumAsc  GetServicesDirectionEnum = "asc"
	GetServicesDirectionEnumDesc GetServicesDirectionEnum = "desc"
)

func (e *GetServicesDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetServicesDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetServicesDirectionEnum: %s", s)
	}
}

type GetServicesRequest struct {
	// The sorting order (case insensitive).
	Direction *GetServicesDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The maximum number of entries per page.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// The page number to retrieve (first page is 0).
	Page *string `queryParam:"style=form,explode=true,name=page"`
	// The column to sort by (case insensitive).
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
}

type GetServicesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
