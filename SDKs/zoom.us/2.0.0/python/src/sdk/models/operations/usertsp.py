"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UserTSPTSPIDEnum(str, Enum):
    r"""TSP account ID."""
    ONE = '1'
    TWO = '2'


@dataclasses.dataclass
class UserTSPRequest:
    
    tsp_id: UserTSPTSPIDEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'tspId', 'style': 'simple', 'explode': False }})
    r"""TSP account ID."""  
    user_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})
    r"""The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."""  
    
class UserTSPTSPAccountDialInNumbersTypeEnum(str, Enum):
    r"""Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number. <br> `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number."""
    TOLL = 'toll'
    TOLLFREE = 'tollfree'
    MEDIA_LINK = 'media_link'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserTSPTSPAccountDialInNumbers:
    
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""Country code."""  
    country_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country_label'), 'exclude': lambda f: f is None }})
    r"""Country Label, if passed, will display in place of code."""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number'), 'exclude': lambda f: f is None }})
    r"""Dial-in number: length is less than 16."""  
    type: Optional[UserTSPTSPAccountDialInNumbersTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number. <br> `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number."""  
    
class UserTSPTSPAccountTSPBridgeEnum(str, Enum):
    r"""Telephony bridge"""
    US_TSP_TB = 'US_TSP_TB'
    EU_TSP_TB = 'EU_TSP_TB'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserTSPTSPAccount:
    r"""TSP account of the user."""
    
    conference_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conference_code') }})
    r"""Conference code: numeric value, length is less than 16."""  
    leader_pin: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('leader_pin') }})
    r"""Leader PIN: numeric value, length is less than 16."""  
    dial_in_numbers: Optional[list[UserTSPTSPAccountDialInNumbers]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dial_in_numbers'), 'exclude': lambda f: f is None }})
    r"""List of dial in numbers."""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID of the TSP account."""  
    tsp_bridge: Optional[UserTSPTSPAccountTSPBridgeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tsp_bridge'), 'exclude': lambda f: f is None }})
    r"""Telephony bridge"""  
    

@dataclasses.dataclass
class UserTSPResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tsp_account: Optional[UserTSPTSPAccount] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br>
    TSP account retrieved successfully.
    """  
    