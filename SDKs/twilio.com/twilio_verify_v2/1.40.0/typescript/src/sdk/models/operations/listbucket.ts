/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListBucketServerList = ["https://verify.twilio.com"] as const;

export class ListBucketSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListBucketRequest extends SpeakeasyBase {
  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;

  /**
   * The Twilio-provided string that uniquely identifies the Rate Limit resource.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=RateLimitSid",
  })
  rateLimitSid: string;

  /**
   * The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;
}

export class ListBucketListBucketResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListBucketListBucketResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.VerifyV2ServiceRateLimitBucket })
  @Expose({ name: "buckets" })
  @Type(() => shared.VerifyV2ServiceRateLimitBucket)
  buckets?: shared.VerifyV2ServiceRateLimitBucket[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListBucketListBucketResponseMeta)
  meta?: ListBucketListBucketResponseMeta;
}

export class ListBucketResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listBucketResponse?: ListBucketListBucketResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
