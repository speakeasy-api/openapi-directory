/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * StatusUpdateResponse - A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.
 */
public class StatusUpdateResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public UserCompact author;

    public StatusUpdateResponse withAuthor(UserCompact author) {
        this.author = author;
        return this;
    }
    
    /**
     * The time at which this resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public StatusUpdateResponse withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    public UserCompact createdBy;

    public StatusUpdateResponse withCreatedBy(UserCompact createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;

    public StatusUpdateResponse withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    /**
     * *Deprecated - please use liked instead* True if the status is hearted by the authorized user, false if not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hearted")
    public Boolean hearted;

    public StatusUpdateResponse withHearted(Boolean hearted) {
        this.hearted = hearted;
        return this;
    }
    
    /**
     * *Deprecated - please use likes instead* Array of likes for users who have hearted this status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hearts")
    public Like[] hearts;

    public StatusUpdateResponse withHearts(Like[] hearts) {
        this.hearts = hearts;
        return this;
    }
    
    /**
     * [Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_text")
    public String htmlText;

    public StatusUpdateResponse withHtmlText(String htmlText) {
        this.htmlText = htmlText;
        return this;
    }
    
    /**
     * True if the status is liked by the authorized user, false if not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("liked")
    public Boolean liked;

    public StatusUpdateResponse withLiked(Boolean liked) {
        this.liked = liked;
        return this;
    }
    
    /**
     * Array of likes for users who have liked this status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("likes")
    public Like[] likes;

    public StatusUpdateResponse withLikes(Like[] likes) {
        this.likes = likes;
        return this;
    }
    
    /**
     * The time at which this project status was last modified.
     * *Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the status.*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modified_at")
    public OffsetDateTime modifiedAt;

    public StatusUpdateResponse withModifiedAt(OffsetDateTime modifiedAt) {
        this.modifiedAt = modifiedAt;
        return this;
    }
    
    /**
     * *Deprecated - please use likes instead* The number of users who have hearted this status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("num_hearts")
    public Long numHearts;

    public StatusUpdateResponse withNumHearts(Long numHearts) {
        this.numHearts = numHearts;
        return this;
    }
    
    /**
     * The number of users who have liked this status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("num_likes")
    public Long numLikes;

    public StatusUpdateResponse withNumLikes(Long numLikes) {
        this.numLikes = numLikes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent")
    public StatusUpdateResponseParent parent;

    public StatusUpdateResponse withParent(StatusUpdateResponseParent parent) {
        this.parent = parent;
        return this;
    }
    
    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     * The `resource_subtype`s for `status` objects represent the type of their parent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_subtype")
    public StatusUpdateResponseResourceSubtypeEnum resourceSubtype;

    public StatusUpdateResponse withResourceSubtype(StatusUpdateResponseResourceSubtypeEnum resourceSubtype) {
        this.resourceSubtype = resourceSubtype;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;

    public StatusUpdateResponse withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    /**
     * The type associated with the status update. This represents the current state of the object this object is on.
     */
    @JsonProperty("status_type")
    public StatusUpdateResponseStatusTypeEnum statusType;

    public StatusUpdateResponse withStatusType(StatusUpdateResponseStatusTypeEnum statusType) {
        this.statusType = statusType;
        return this;
    }
    
    /**
     * The text content of the status update.
     */
    @JsonProperty("text")
    public String text;

    public StatusUpdateResponse withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * The title of the status update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public StatusUpdateResponse withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public StatusUpdateResponse(@JsonProperty("status_type") StatusUpdateResponseStatusTypeEnum statusType, @JsonProperty("text") String text) {
        this.statusType = statusType;
        this.text = text;
  }
}
