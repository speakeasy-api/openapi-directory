"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LinkedSourceDocumentSourceEnum(str, Enum):
    r"""Preferred source names are listed as enum. If you have a custom file type, simply enter that name."""
    DROPBOX = 'dropbox'
    GOOGLEDRIVE = 'googledrive'
    ICLOUD = 'icloud'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LinkedSourceDocument:
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size'), 'exclude': lambda f: f is None }})
    r"""file size in bytes. optional."""  
    source: Optional[LinkedSourceDocumentSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""Preferred source names are listed as enum. If you have a custom file type, simply enter that name."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})  
    