// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ChallengeEnumChallengeStatusesEnum - The Status of the Challenges to fetch. One of `pending`, `expired`, `approved` or `denied`.
type ChallengeEnumChallengeStatusesEnum string

const (
	ChallengeEnumChallengeStatusesEnumPending  ChallengeEnumChallengeStatusesEnum = "pending"
	ChallengeEnumChallengeStatusesEnumExpired  ChallengeEnumChallengeStatusesEnum = "expired"
	ChallengeEnumChallengeStatusesEnumApproved ChallengeEnumChallengeStatusesEnum = "approved"
	ChallengeEnumChallengeStatusesEnumDenied   ChallengeEnumChallengeStatusesEnum = "denied"
)

func (e *ChallengeEnumChallengeStatusesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "expired":
		fallthrough
	case "approved":
		fallthrough
	case "denied":
		*e = ChallengeEnumChallengeStatusesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChallengeEnumChallengeStatusesEnum: %s", s)
	}
}
