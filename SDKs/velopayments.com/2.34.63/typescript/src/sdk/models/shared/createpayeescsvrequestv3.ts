/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PayeeTypeEnumEnum } from "./payeetypeenumenum";
import { Expose, Transform } from "class-transformer";

export class CreatePayeesCSVRequestV3 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "addressCity" })
  addressCity: string;

  /**
   * Valid ISO 3166 2 character country code. See the <a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank" a>ISO specification</a> for details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressCountry" })
  addressCountry: string;

  @SpeakeasyMetadata()
  @Expose({ name: "addressCountyOrProvince" })
  addressCountyOrProvince?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "addressLine1" })
  addressLine1: string;

  @SpeakeasyMetadata()
  @Expose({ name: "addressLine2" })
  addressLine2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "addressLine3" })
  addressLine3?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "addressLine4" })
  addressLine4?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "addressZipOrPostcode" })
  addressZipOrPostcode: string;

  @SpeakeasyMetadata()
  @Expose({ name: "challengeDescription" })
  challengeDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "challengeValue" })
  challengeValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "companyEIN" })
  companyEIN?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "companyName" })
  companyName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "companyOperatingName" })
  companyOperatingName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * Must not be date in future. Example - 1970-05-20
   */
  @SpeakeasyMetadata()
  @Expose({ name: "individualDateOfBirth" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  individualDateOfBirth?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "individualFirstName" })
  individualFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "individualLastName" })
  individualLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "individualNationalIdentification" })
  individualNationalIdentification?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "individualOtherNames" })
  individualOtherNames?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "individualTitle" })
  individualTitle?: string;

  /**
   * An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>
   *
   * @remarks
   * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payeeLanguage" })
  payeeLanguage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "paymentChannelAccountName" })
  paymentChannelAccountName?: string;

  /**
   * Either routing number and account number or only iban must be set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentChannelAccountNumber" })
  paymentChannelAccountNumber?: string;

  /**
   * Valid ISO 3166 2 character country code. See the <a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank" a>ISO specification</a> for details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentChannelCountryCode" })
  paymentChannelCountryCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "paymentChannelCurrency" })
  paymentChannelCurrency?: string;

  /**
   * Must match the regular expression ```^[A-Za-z0-9]+$```.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentChannelIban" })
  paymentChannelIban?: string;

  /**
   * Either routing number and account number or only iban must be set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentChannelRoutingNumber" })
  paymentChannelRoutingNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "remoteId" })
  remoteId: string;

  /**
   * The type of the payee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: PayeeTypeEnumEnum;
}
