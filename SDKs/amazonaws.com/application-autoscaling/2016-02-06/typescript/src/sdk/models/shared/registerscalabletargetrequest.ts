/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ScalableDimensionEnum } from "./scalabledimensionenum";
import { ServiceNamespaceEnum } from "./servicenamespaceenum";
import { SuspendedState } from "./suspendedstate";
import { Expose, Type } from "class-transformer";

export class RegisterScalableTargetRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "MaxCapacity" })
  maxCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MinCapacity" })
  minCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceId" })
  resourceId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleARN" })
  roleARN?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScalableDimension" })
  scalableDimension: ScalableDimensionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceNamespace" })
  serviceNamespace: ServiceNamespaceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SuspendedState" })
  @Type(() => SuspendedState)
  suspendedState?: SuspendedState;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}
