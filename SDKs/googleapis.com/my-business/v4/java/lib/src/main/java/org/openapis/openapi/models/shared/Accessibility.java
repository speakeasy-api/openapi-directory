/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Accessibility - Physical adaptations made to the property in consideration of varying levels of human physical ability.
 */
public class Accessibility {
    /**
     * Mobility accessible. Throughout the property there are physical adaptations to ease the stay of a person in a wheelchair, such as auto-opening doors, wide elevators, wide bathrooms or ramps.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilityAccessible")
    public Boolean mobilityAccessible;
    public Accessibility withMobilityAccessible(Boolean mobilityAccessible) {
        this.mobilityAccessible = mobilityAccessible;
        return this;
    }
    
    /**
     * Mobility accessible elevator. A lift that transports people from one level to another and is built to accommodate a wheelchair-using passenger owing to the width of its doors and placement of call buttons.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilityAccessibleElevator")
    public Boolean mobilityAccessibleElevator;
    public Accessibility withMobilityAccessibleElevator(Boolean mobilityAccessibleElevator) {
        this.mobilityAccessibleElevator = mobilityAccessibleElevator;
        return this;
    }
    
    /**
     * Mobility accessible elevator exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilityAccessibleElevatorException")
    public AccessibilityMobilityAccessibleElevatorExceptionEnum mobilityAccessibleElevatorException;
    public Accessibility withMobilityAccessibleElevatorException(AccessibilityMobilityAccessibleElevatorExceptionEnum mobilityAccessibleElevatorException) {
        this.mobilityAccessibleElevatorException = mobilityAccessibleElevatorException;
        return this;
    }
    
    /**
     * Mobility accessible exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilityAccessibleException")
    public AccessibilityMobilityAccessibleExceptionEnum mobilityAccessibleException;
    public Accessibility withMobilityAccessibleException(AccessibilityMobilityAccessibleExceptionEnum mobilityAccessibleException) {
        this.mobilityAccessibleException = mobilityAccessibleException;
        return this;
    }
    
    /**
     * Mobility accessible parking. The presence of a marked, designated area of prescribed size in which only registered, labeled vehicles transporting a person with physical challenges may park.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilityAccessibleParking")
    public Boolean mobilityAccessibleParking;
    public Accessibility withMobilityAccessibleParking(Boolean mobilityAccessibleParking) {
        this.mobilityAccessibleParking = mobilityAccessibleParking;
        return this;
    }
    
    /**
     * Mobility accessible parking exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilityAccessibleParkingException")
    public AccessibilityMobilityAccessibleParkingExceptionEnum mobilityAccessibleParkingException;
    public Accessibility withMobilityAccessibleParkingException(AccessibilityMobilityAccessibleParkingExceptionEnum mobilityAccessibleParkingException) {
        this.mobilityAccessibleParkingException = mobilityAccessibleParkingException;
        return this;
    }
    
    /**
     * Mobility accessible pool. A swimming pool equipped with a mechanical chair that can be lowered and raised for the purpose of moving physically challenged guests into and out of the pool. May be powered by electricity or water. Also known as pool lift.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilityAccessiblePool")
    public Boolean mobilityAccessiblePool;
    public Accessibility withMobilityAccessiblePool(Boolean mobilityAccessiblePool) {
        this.mobilityAccessiblePool = mobilityAccessiblePool;
        return this;
    }
    
    /**
     * Mobility accessible pool exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilityAccessiblePoolException")
    public AccessibilityMobilityAccessiblePoolExceptionEnum mobilityAccessiblePoolException;
    public Accessibility withMobilityAccessiblePoolException(AccessibilityMobilityAccessiblePoolExceptionEnum mobilityAccessiblePoolException) {
        this.mobilityAccessiblePoolException = mobilityAccessiblePoolException;
        return this;
    }
    
}
