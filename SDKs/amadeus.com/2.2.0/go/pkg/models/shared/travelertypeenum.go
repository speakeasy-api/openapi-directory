// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TravelerTypeEnum - traveler type
// age restrictions : CHILD < 12y, HELD_INFANT < 2y, SEATED_INFANT < 2y, SENIOR >=60y
type TravelerTypeEnum string

const (
	TravelerTypeEnumAdult        TravelerTypeEnum = "ADULT"
	TravelerTypeEnumChild        TravelerTypeEnum = "CHILD"
	TravelerTypeEnumSenior       TravelerTypeEnum = "SENIOR"
	TravelerTypeEnumYoung        TravelerTypeEnum = "YOUNG"
	TravelerTypeEnumHeldInfant   TravelerTypeEnum = "HELD_INFANT"
	TravelerTypeEnumSeatedInfant TravelerTypeEnum = "SEATED_INFANT"
	TravelerTypeEnumStudent      TravelerTypeEnum = "STUDENT"
)

func (e TravelerTypeEnum) ToPointer() *TravelerTypeEnum {
	return &e
}

func (e *TravelerTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ADULT":
		fallthrough
	case "CHILD":
		fallthrough
	case "SENIOR":
		fallthrough
	case "YOUNG":
		fallthrough
	case "HELD_INFANT":
		fallthrough
	case "SEATED_INFANT":
		fallthrough
	case "STUDENT":
		*e = TravelerTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TravelerTypeEnum: %v", v)
	}
}
