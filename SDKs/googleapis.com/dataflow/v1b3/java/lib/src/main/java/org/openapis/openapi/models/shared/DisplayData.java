/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DisplayData - Data provided with a pipeline or transform to provide descriptive info.
 */
public class DisplayData {
    /**
     * Contains value if the data is of a boolean type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("boolValue")
    public Boolean boolValue;

    public DisplayData withBoolValue(Boolean boolValue) {
        this.boolValue = boolValue;
        return this;
    }
    
    /**
     * Contains value if the data is of duration type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("durationValue")
    public String durationValue;

    public DisplayData withDurationValue(String durationValue) {
        this.durationValue = durationValue;
        return this;
    }
    
    /**
     * Contains value if the data is of float type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floatValue")
    public Float floatValue;

    public DisplayData withFloatValue(Float floatValue) {
        this.floatValue = floatValue;
        return this;
    }
    
    /**
     * Contains value if the data is of int64 type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("int64Value")
    public String int64Value;

    public DisplayData withInt64Value(String int64Value) {
        this.int64Value = int64Value;
        return this;
    }
    
    /**
     * Contains value if the data is of java class type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("javaClassValue")
    public String javaClassValue;

    public DisplayData withJavaClassValue(String javaClassValue) {
        this.javaClassValue = javaClassValue;
        return this;
    }
    
    /**
     * The key identifying the display data. This is intended to be used as a label for the display data when viewed in a dax monitoring system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;

    public DisplayData withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * An optional label to display in a dax UI for the element.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;

    public DisplayData withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * The namespace for the key. This is usually a class name or programming language namespace (i.e. python module) which defines the display data. This allows a dax monitoring system to specially handle the data and perform custom rendering.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namespace")
    public String namespace;

    public DisplayData withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }
    
    /**
     * A possible additional shorter value to display. For example a java_class_name_value of com.mypackage.MyDoFn will be stored with MyDoFn as the short_str_value and com.mypackage.MyDoFn as the java_class_name value. short_str_value can be displayed and java_class_name_value will be displayed as a tooltip.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shortStrValue")
    public String shortStrValue;

    public DisplayData withShortStrValue(String shortStrValue) {
        this.shortStrValue = shortStrValue;
        return this;
    }
    
    /**
     * Contains value if the data is of string type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("strValue")
    public String strValue;

    public DisplayData withStrValue(String strValue) {
        this.strValue = strValue;
        return this;
    }
    
    /**
     * Contains value if the data is of timestamp type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestampValue")
    public String timestampValue;

    public DisplayData withTimestampValue(String timestampValue) {
        this.timestampValue = timestampValue;
        return this;
    }
    
    /**
     * An optional full URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public DisplayData withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public DisplayData(){}
}
