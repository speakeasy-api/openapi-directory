/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetV4LayersAsHarvestedActivityIdContentsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Api-Key",
  })
  apiKey?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2AuthorizationCode?: string;
}

export class GetV4LayersAsHarvestedActivityIdContentsRequest extends SpeakeasyBase {
  /**
   * Must be either \* /* or application/octet-stream,application/json
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Byte range `bytes=start-end` (https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1). e.g. bytes=0-1048576. Currently only single range value is supported. Both start and end need to be specified, end value should be greater than start and end - start should not be greater than 5MiB.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Range" })
  range: string;

  /**
   * Unique identifier of the Harvest Activity.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=activityId",
  })
  activityId: string;
}

export class GetV4LayersAsHarvestedActivityIdContentsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Not Modified
   */
  @SpeakeasyMetadata()
  empty?: Record<string, any>;

  /**
   * Bad Input
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
