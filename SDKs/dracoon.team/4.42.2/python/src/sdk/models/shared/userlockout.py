"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserLockout:
    r"""User lockout information"""
    
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})
    r"""Determines whether user lockout is enabled"""  
    lockout_period: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lockoutPeriod'), 'exclude': lambda f: f is None }})
    r"""Amount of minutes a user has to wait to make another login attempt after `maxNumberOfLoginFailures` has been exceeded"""  
    max_number_of_login_failures: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxNumberOfLoginFailures'), 'exclude': lambda f: f is None }})
    r"""Maximum allowed number of failed login attempts"""  
    