/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Intersection } from "./intersection";
import { Union } from "./union";
import { Expose, Type } from "class-transformer";

/**
 * Rule for determining which cells to delete during garbage collection.
 */
export class GcRule extends SpeakeasyBase {
  /**
   * A GcRule which deletes cells matching all of the given rules.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "intersection" })
  @Type(() => Intersection)
  intersection?: Intersection;

  /**
   * Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxAge" })
  maxAge?: string;

  /**
   * Delete all cells in a column except the most recent N.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxNumVersions" })
  maxNumVersions?: number;

  /**
   * A GcRule which deletes cells matching any of the given rules.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "union" })
  @Type(() => Union)
  union?: Union;
}
