"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleCloudDataplexV1ZoneInput = exports.GoogleCloudDataplexV1Zone = exports.GoogleCloudDataplexV1ZoneTypeEnum = exports.GoogleCloudDataplexV1ZoneStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
var googleclouddataplexv1assetstatus_1 = require("./googleclouddataplexv1assetstatus");
var googleclouddataplexv1zonediscoveryspec_1 = require("./googleclouddataplexv1zonediscoveryspec");
var googleclouddataplexv1zoneresourcespec_1 = require("./googleclouddataplexv1zoneresourcespec");
var class_transformer_1 = require("class-transformer");
/**
 * Output only. Current state of the zone.
 */
var GoogleCloudDataplexV1ZoneStateEnum;
(function (GoogleCloudDataplexV1ZoneStateEnum) {
    GoogleCloudDataplexV1ZoneStateEnum["StateUnspecified"] = "STATE_UNSPECIFIED";
    GoogleCloudDataplexV1ZoneStateEnum["Active"] = "ACTIVE";
    GoogleCloudDataplexV1ZoneStateEnum["Creating"] = "CREATING";
    GoogleCloudDataplexV1ZoneStateEnum["Deleting"] = "DELETING";
    GoogleCloudDataplexV1ZoneStateEnum["ActionRequired"] = "ACTION_REQUIRED";
})(GoogleCloudDataplexV1ZoneStateEnum = exports.GoogleCloudDataplexV1ZoneStateEnum || (exports.GoogleCloudDataplexV1ZoneStateEnum = {}));
/**
 * Required. Immutable. The type of the zone.
 */
var GoogleCloudDataplexV1ZoneTypeEnum;
(function (GoogleCloudDataplexV1ZoneTypeEnum) {
    GoogleCloudDataplexV1ZoneTypeEnum["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    GoogleCloudDataplexV1ZoneTypeEnum["Raw"] = "RAW";
    GoogleCloudDataplexV1ZoneTypeEnum["Curated"] = "CURATED";
})(GoogleCloudDataplexV1ZoneTypeEnum = exports.GoogleCloudDataplexV1ZoneTypeEnum || (exports.GoogleCloudDataplexV1ZoneTypeEnum = {}));
/**
 * A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.
 */
var GoogleCloudDataplexV1Zone = /** @class */ (function (_super) {
    __extends(GoogleCloudDataplexV1Zone, _super);
    function GoogleCloudDataplexV1Zone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "assetStatus" }),
        (0, class_transformer_1.Type)(function () { return googleclouddataplexv1assetstatus_1.GoogleCloudDataplexV1AssetStatus; }),
        __metadata("design:type", googleclouddataplexv1assetstatus_1.GoogleCloudDataplexV1AssetStatus)
    ], GoogleCloudDataplexV1Zone.prototype, "assetStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createTime" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1Zone.prototype, "createTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1Zone.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "discoverySpec" }),
        (0, class_transformer_1.Type)(function () { return googleclouddataplexv1zonediscoveryspec_1.GoogleCloudDataplexV1ZoneDiscoverySpec; }),
        __metadata("design:type", googleclouddataplexv1zonediscoveryspec_1.GoogleCloudDataplexV1ZoneDiscoverySpec)
    ], GoogleCloudDataplexV1Zone.prototype, "discoverySpec", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1Zone.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], GoogleCloudDataplexV1Zone.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1Zone.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resourceSpec" }),
        (0, class_transformer_1.Type)(function () { return googleclouddataplexv1zoneresourcespec_1.GoogleCloudDataplexV1ZoneResourceSpec; }),
        __metadata("design:type", googleclouddataplexv1zoneresourcespec_1.GoogleCloudDataplexV1ZoneResourceSpec)
    ], GoogleCloudDataplexV1Zone.prototype, "resourceSpec", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1Zone.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1Zone.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uid" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1Zone.prototype, "uid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updateTime" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1Zone.prototype, "updateTime", void 0);
    return GoogleCloudDataplexV1Zone;
}(utils_1.SpeakeasyBase));
exports.GoogleCloudDataplexV1Zone = GoogleCloudDataplexV1Zone;
/**
 * A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.
 */
var GoogleCloudDataplexV1ZoneInput = /** @class */ (function (_super) {
    __extends(GoogleCloudDataplexV1ZoneInput, _super);
    function GoogleCloudDataplexV1ZoneInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "assetStatus" }),
        (0, class_transformer_1.Type)(function () { return googleclouddataplexv1assetstatus_1.GoogleCloudDataplexV1AssetStatus; }),
        __metadata("design:type", googleclouddataplexv1assetstatus_1.GoogleCloudDataplexV1AssetStatus)
    ], GoogleCloudDataplexV1ZoneInput.prototype, "assetStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1ZoneInput.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "discoverySpec" }),
        (0, class_transformer_1.Type)(function () { return googleclouddataplexv1zonediscoveryspec_1.GoogleCloudDataplexV1ZoneDiscoverySpec; }),
        __metadata("design:type", googleclouddataplexv1zonediscoveryspec_1.GoogleCloudDataplexV1ZoneDiscoverySpec)
    ], GoogleCloudDataplexV1ZoneInput.prototype, "discoverySpec", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1ZoneInput.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], GoogleCloudDataplexV1ZoneInput.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resourceSpec" }),
        (0, class_transformer_1.Type)(function () { return googleclouddataplexv1zoneresourcespec_1.GoogleCloudDataplexV1ZoneResourceSpec; }),
        __metadata("design:type", googleclouddataplexv1zoneresourcespec_1.GoogleCloudDataplexV1ZoneResourceSpec)
    ], GoogleCloudDataplexV1ZoneInput.prototype, "resourceSpec", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GoogleCloudDataplexV1ZoneInput.prototype, "type", void 0);
    return GoogleCloudDataplexV1ZoneInput;
}(utils_1.SpeakeasyBase));
exports.GoogleCloudDataplexV1ZoneInput = GoogleCloudDataplexV1ZoneInput;
