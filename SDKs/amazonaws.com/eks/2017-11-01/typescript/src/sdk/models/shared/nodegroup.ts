/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AMITypesEnum } from "./amitypesenum";
import { CapacityTypesEnum } from "./capacitytypesenum";
import { LaunchTemplateSpecification } from "./launchtemplatespecification";
import { NodegroupHealth } from "./nodegrouphealth";
import { NodegroupResources } from "./nodegroupresources";
import { NodegroupScalingConfig } from "./nodegroupscalingconfig";
import { NodegroupStatusEnum } from "./nodegroupstatusenum";
import { NodegroupUpdateConfig } from "./nodegroupupdateconfig";
import { RemoteAccessConfig } from "./remoteaccessconfig";
import { Taint } from "./taint";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An object representing an Amazon EKS managed node group.
 */
export class Nodegroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amiType" })
  amiType?: AMITypesEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "capacityType" })
  capacityType?: CapacityTypesEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "clusterName" })
  clusterName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "diskSize" })
  diskSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "health" })
  @Type(() => NodegroupHealth)
  health?: NodegroupHealth;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceTypes" })
  instanceTypes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "launchTemplate" })
  @Type(() => LaunchTemplateSpecification)
  launchTemplate?: LaunchTemplateSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "modifiedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modifiedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "nodeRole" })
  nodeRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "nodegroupArn" })
  nodegroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "nodegroupName" })
  nodegroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "releaseVersion" })
  releaseVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "remoteAccess" })
  @Type(() => RemoteAccessConfig)
  remoteAccess?: RemoteAccessConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "resources" })
  @Type(() => NodegroupResources)
  resources?: NodegroupResources;

  @SpeakeasyMetadata()
  @Expose({ name: "scalingConfig" })
  @Type(() => NodegroupScalingConfig)
  scalingConfig?: NodegroupScalingConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: NodegroupStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "subnets" })
  subnets?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: Taint })
  @Expose({ name: "taints" })
  @Type(() => Taint)
  taints?: Taint[];

  @SpeakeasyMetadata()
  @Expose({ name: "updateConfig" })
  @Type(() => NodegroupUpdateConfig)
  updateConfig?: NodegroupUpdateConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}
