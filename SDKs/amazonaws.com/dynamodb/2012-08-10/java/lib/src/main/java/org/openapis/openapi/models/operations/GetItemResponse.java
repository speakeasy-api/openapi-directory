/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class GetItemResponse {
    
    public String contentType;
    public GetItemResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.GetItemOutput getItemOutput;
    public GetItemResponse withGetItemOutput(org.openapis.openapi.models.shared.GetItemOutput getItemOutput) {
        this.getItemOutput = getItemOutput;
        return this;
    }
    
    /**
     * InternalServerError
     */
    
    public Object internalServerError;
    public GetItemResponse withInternalServerError(Object internalServerError) {
        this.internalServerError = internalServerError;
        return this;
    }
    
    /**
     * ProvisionedThroughputExceededException
     */
    
    public Object provisionedThroughputExceededException;
    public GetItemResponse withProvisionedThroughputExceededException(Object provisionedThroughputExceededException) {
        this.provisionedThroughputExceededException = provisionedThroughputExceededException;
        return this;
    }
    
    /**
     * RequestLimitExceeded
     */
    
    public Object requestLimitExceeded;
    public GetItemResponse withRequestLimitExceeded(Object requestLimitExceeded) {
        this.requestLimitExceeded = requestLimitExceeded;
        return this;
    }
    
    
    public Integer statusCode;
    public GetItemResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public GetItemResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;
    public GetItemResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
}
