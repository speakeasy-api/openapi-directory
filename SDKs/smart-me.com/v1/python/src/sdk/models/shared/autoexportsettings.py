"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AutoExportSettingsExportIntervalEnum(str, Enum):
    r"""The export interval of the auto export"""
    NO_EXPORT = 'NoExport'
    HOURLY = 'Hourly'
    DAILY = 'Daily'
    WEEKLY = 'Weekly'
    MONTHLY = 'Monthly'
    QUATER_YEARLY = 'QuaterYearly'
    HALF_YEARLY = 'HalfYearly'
    YEARLY = 'Yearly'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoExportSettings:
    r"""Settings for the auto export functionality of a meter"""
    
    export_format: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExportFormat'), 'exclude': lambda f: f is None }})
    r"""The export format"""  
    export_interval: Optional[AutoExportSettingsExportIntervalEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExportInterval'), 'exclude': lambda f: f is None }})
    r"""The export interval of the auto export"""  
    meter_point_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MeterPointId'), 'exclude': lambda f: f is None }})
    r"""The meter point id set by the user"""  
    upload_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UploadType'), 'exclude': lambda f: f is None }})
    r"""The upload type"""  
    