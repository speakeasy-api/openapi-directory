<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NearEarthObject - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NearEarthObject
{
    /**
     * Is a measure of an asteroids brightness
     * 
     * @var ?float $absoluteMagnitudeH
     */
	#[\JMS\Serializer\Annotation\SerializedName('absolute_magnitude_h')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $absoluteMagnitudeH = null;
    
    /**
     * Close approach information of the Asteroid
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CloseApproachData> $closeApproachData
     */
	#[\JMS\Serializer\Annotation\SerializedName('close_approach_data')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CloseApproachData>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $closeApproachData = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('designation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $designation = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('estimated_diameter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EstimatedDiameterContainer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EstimatedDiameterContainer $estimatedDiameter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('is_potentially_hazardous_asteroid')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPotentiallyHazardousAsteroid = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('is_sentry_object')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSentryObject = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name_limited')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nameLimited = null;
    
    /**
     * A Link to the NASA JPL Small-Body Database website
     * 
     * @var ?string $nasaJplUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('nasa_jpl_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nasaJplUrl = null;
    
    /**
     * The reference ID of the Asteroid - This correlates to the SPK ID for the JPL NEO data
     * 
     * @var ?string $neoReferenceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('neo_reference_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $neoReferenceId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('orbital_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OrbitalData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrbitalData $orbitalData = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sentry_data')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sentryData = null;
    
	public function __construct()
	{
		$this->absoluteMagnitudeH = null;
		$this->closeApproachData = null;
		$this->designation = null;
		$this->estimatedDiameter = null;
		$this->isPotentiallyHazardousAsteroid = null;
		$this->isSentryObject = null;
		$this->name = null;
		$this->nameLimited = null;
		$this->nasaJplUrl = null;
		$this->neoReferenceId = null;
		$this->orbitalData = null;
		$this->sentryData = null;
	}
}
