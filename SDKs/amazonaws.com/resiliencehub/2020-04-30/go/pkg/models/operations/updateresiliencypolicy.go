// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnum - Specifies a high-level geographical location constraint for where your resilience policy data can be stored.
type UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnum string

const (
	UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnumAnyLocation   UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnum = "AnyLocation"
	UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnumSameContinent UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnum = "SameContinent"
	UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnumSameCountry   UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnum = "SameCountry"
)

func (e *UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AnyLocation":
		fallthrough
	case "SameContinent":
		fallthrough
	case "SameCountry":
		*e = UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnum: %s", s)
	}
}

// UpdateResiliencyPolicyRequestBodyTierEnum - The tier for this resiliency policy, ranging from the highest severity (<code>MissionCritical</code>) to lowest (<code>NonCritical</code>).
type UpdateResiliencyPolicyRequestBodyTierEnum string

const (
	UpdateResiliencyPolicyRequestBodyTierEnumMissionCritical UpdateResiliencyPolicyRequestBodyTierEnum = "MissionCritical"
	UpdateResiliencyPolicyRequestBodyTierEnumCritical        UpdateResiliencyPolicyRequestBodyTierEnum = "Critical"
	UpdateResiliencyPolicyRequestBodyTierEnumImportant       UpdateResiliencyPolicyRequestBodyTierEnum = "Important"
	UpdateResiliencyPolicyRequestBodyTierEnumCoreServices    UpdateResiliencyPolicyRequestBodyTierEnum = "CoreServices"
	UpdateResiliencyPolicyRequestBodyTierEnumNonCritical     UpdateResiliencyPolicyRequestBodyTierEnum = "NonCritical"
)

func (e *UpdateResiliencyPolicyRequestBodyTierEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MissionCritical":
		fallthrough
	case "Critical":
		fallthrough
	case "Important":
		fallthrough
	case "CoreServices":
		fallthrough
	case "NonCritical":
		*e = UpdateResiliencyPolicyRequestBodyTierEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateResiliencyPolicyRequestBodyTierEnum: %s", s)
	}
}

type UpdateResiliencyPolicyRequestBody struct {
	// Specifies a high-level geographical location constraint for where your resilience policy data can be stored.
	DataLocationConstraint *UpdateResiliencyPolicyRequestBodyDataLocationConstraintEnum `json:"dataLocationConstraint,omitempty"`
	// The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds.
	Policy map[string]shared.FailurePolicy `json:"policy,omitempty"`
	// The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.
	PolicyArn string `json:"policyArn"`
	// The description for the policy.
	PolicyDescription *string `json:"policyDescription,omitempty"`
	// The name of the policy
	PolicyName *string `json:"policyName,omitempty"`
	// The tier for this resiliency policy, ranging from the highest severity (<code>MissionCritical</code>) to lowest (<code>NonCritical</code>).
	Tier *UpdateResiliencyPolicyRequestBodyTierEnum `json:"tier,omitempty"`
}

type UpdateResiliencyPolicyRequest struct {
	RequestBody       UpdateResiliencyPolicyRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateResiliencyPolicyResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateResiliencyPolicyResponse *shared.UpdateResiliencyPolicyResponse
	// ValidationException
	ValidationException interface{}
}
