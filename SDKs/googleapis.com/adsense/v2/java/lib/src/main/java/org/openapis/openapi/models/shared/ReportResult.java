/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReportResult - Result of a generated report.
 */
public class ReportResult {
    /**
     * Row representation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("averages")
    public Row averages;
    public ReportResult withAverages(Row averages) {
        this.averages = averages;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endDate")
    public Date endDate;
    public ReportResult withEndDate(Date endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * The header information; one for each dimension in the request, followed by one for each metric in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public Header[] headers;
    public ReportResult withHeaders(Header[] headers) {
        this.headers = headers;
        return this;
    }
    
    /**
     * The output rows of the report. Each row is a list of cells; one for each dimension in the request, followed by one for each metric in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rows")
    public Row[] rows;
    public ReportResult withRows(Row[] rows) {
        this.rows = rows;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startDate")
    public Date startDate;
    public ReportResult withStartDate(Date startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * The total number of rows matched by the report request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalMatchedRows")
    public String totalMatchedRows;
    public ReportResult withTotalMatchedRows(String totalMatchedRows) {
        this.totalMatchedRows = totalMatchedRows;
        return this;
    }
    
    /**
     * Row representation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totals")
    public Row totals;
    public ReportResult withTotals(Row totals) {
        this.totals = totals;
        return this;
    }
    
    /**
     * Any warnings associated with generation of the report. These warnings are always returned in English.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warnings")
    public String[] warnings;
    public ReportResult withWarnings(String[] warnings) {
        this.warnings = warnings;
        return this;
    }
    
}
