// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type AppIcons struct {
	// Category of the icon. Allowed values are:
	// - application - icon for the application
	// - document - icon for a file associated with the app
	// - documentShared - icon for a shared file associated with the app
	Category *string `json:"category,omitempty"`
	// URL for the icon.
	IconURL *string `json:"iconUrl,omitempty"`
	// Size of the icon. Represented as the maximum of the width and height.
	Size *int `json:"size,omitempty"`
}

// App - The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.
type App struct {
	// Whether the app is authorized to access data on the user's Drive.
	Authorized *bool `json:"authorized,omitempty"`
	// The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in.
	CreateInFolderTemplate *string `json:"createInFolderTemplate,omitempty"`
	// The url to create a new file with this app.
	CreateURL *string `json:"createUrl,omitempty"`
	// Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive.
	HasDriveWideScope *bool `json:"hasDriveWideScope,omitempty"`
	// The various icons for the app.
	Icons []AppIcons `json:"icons,omitempty"`
	// The ID of the app.
	ID *string `json:"id,omitempty"`
	// Whether the app is installed.
	Installed *bool `json:"installed,omitempty"`
	// This is always drive#app.
	Kind *string `json:"kind,omitempty"`
	// A long description of the app.
	LongDescription *string `json:"longDescription,omitempty"`
	// The name of the app.
	Name *string `json:"name,omitempty"`
	// The type of object this app creates (e.g. Chart). If empty, the app name should be used instead.
	ObjectType *string `json:"objectType,omitempty"`
	// The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation.
	OpenURLTemplate *string `json:"openUrlTemplate,omitempty"`
	// The list of primary file extensions.
	PrimaryFileExtensions []string `json:"primaryFileExtensions,omitempty"`
	// The list of primary mime types.
	PrimaryMimeTypes []string `json:"primaryMimeTypes,omitempty"`
	// The ID of the product listing for this app.
	ProductID *string `json:"productId,omitempty"`
	// A link to the product listing for this app.
	ProductURL *string `json:"productUrl,omitempty"`
	// The list of secondary file extensions.
	SecondaryFileExtensions []string `json:"secondaryFileExtensions,omitempty"`
	// The list of secondary mime types.
	SecondaryMimeTypes []string `json:"secondaryMimeTypes,omitempty"`
	// A short description of the app.
	ShortDescription *string `json:"shortDescription,omitempty"`
	// Whether this app supports creating new objects.
	SupportsCreate *bool `json:"supportsCreate,omitempty"`
	// Whether this app supports importing from Docs Editors.
	SupportsImport *bool `json:"supportsImport,omitempty"`
	// Whether this app supports opening more than one file.
	SupportsMultiOpen *bool `json:"supportsMultiOpen,omitempty"`
	// Whether this app supports creating new files when offline.
	SupportsOfflineCreate *bool `json:"supportsOfflineCreate,omitempty"`
	// Whether the app is selected as the default handler for the types it supports.
	UseByDefault *bool `json:"useByDefault,omitempty"`
}
