/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Association - Describes an association of a Amazon Web Services Systems Manager document (SSM document) and a managed node.
 */
public class Association {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssociationId")
    public String associationId;
    public Association withAssociationId(String associationId) {
        this.associationId = associationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssociationName")
    public String associationName;
    public Association withAssociationName(String associationName) {
        this.associationName = associationName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssociationVersion")
    public String associationVersion;
    public Association withAssociationVersion(String associationVersion) {
        this.associationVersion = associationVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentVersion")
    public String documentVersion;
    public Association withDocumentVersion(String documentVersion) {
        this.documentVersion = documentVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceId")
    public String instanceId;
    public Association withInstanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastExecutionDate")
    public OffsetDateTime lastExecutionDate;
    public Association withLastExecutionDate(OffsetDateTime lastExecutionDate) {
        this.lastExecutionDate = lastExecutionDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public Association withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Overview")
    public AssociationOverview overview;
    public Association withOverview(AssociationOverview overview) {
        this.overview = overview;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScheduleExpression")
    public String scheduleExpression;
    public Association withScheduleExpression(String scheduleExpression) {
        this.scheduleExpression = scheduleExpression;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScheduleOffset")
    public Long scheduleOffset;
    public Association withScheduleOffset(Long scheduleOffset) {
        this.scheduleOffset = scheduleOffset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetMaps")
    public java.util.Map<String, String[]>[] targetMaps;
    public Association withTargetMaps(java.util.Map<String, String[]>[] targetMaps) {
        this.targetMaps = targetMaps;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Targets")
    public Target[] targets;
    public Association withTargets(Target[] targets) {
        this.targets = targets;
        return this;
    }
    
}
