/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETEnableFastLaunchActionEnum {
  EnableFastLaunch = "EnableFastLaunch",
}

/**
 * <p>Request to create a launch template for a fast-launch enabled Windows AMI.</p> <note> <p>Note - You can specify either the <code>LaunchTemplateName</code> or the <code>LaunchTemplateId</code>, but not both.</p> </note>
 */
export class GETEnableFastLaunchLaunchTemplate extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=LaunchTemplateId" })
  launchTemplateId?: string;

  @SpeakeasyMetadata({ data: "queryParam, name=LaunchTemplateName" })
  launchTemplateName?: string;

  @SpeakeasyMetadata({ data: "queryParam, name=Version" })
  version: string;
}

/**
 * Configuration settings for creating and managing pre-provisioned snapshots for a fast-launch enabled Windows AMI.
 */
export class GETEnableFastLaunchSnapshotConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=TargetResourceCount" })
  targetResourceCount?: number;
}

export enum GETEnableFastLaunchVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETEnableFastLaunchRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETEnableFastLaunchActionEnum;

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The ID of the image for which youâ€™re enabling faster launching.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ImageId",
  })
  imageId: string;

  /**
   * The launch template to use when launching Windows instances from pre-provisioned snapshots. Launch template parameters can include either the name or ID of the launch template, but not both.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=LaunchTemplate",
  })
  launchTemplate?: GETEnableFastLaunchLaunchTemplate;

  /**
   * The maximum number of instances that Amazon EC2 can launch at the same time to create pre-provisioned snapshots for Windows faster launching. Value must be <code>6</code> or greater.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxParallelLaunches",
  })
  maxParallelLaunches?: number;

  /**
   * The type of resource to use for pre-provisioning the Windows AMI for faster launching. Supported values include: <code>snapshot</code>, which is the default value.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ResourceType",
  })
  resourceType?: string;

  /**
   * Configuration settings for creating and managing the snapshots that are used for pre-provisioning the Windows AMI for faster launching. The associated <code>ResourceType</code> must be <code>snapshot</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SnapshotConfiguration",
  })
  snapshotConfiguration?: GETEnableFastLaunchSnapshotConfiguration;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETEnableFastLaunchVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETEnableFastLaunchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
