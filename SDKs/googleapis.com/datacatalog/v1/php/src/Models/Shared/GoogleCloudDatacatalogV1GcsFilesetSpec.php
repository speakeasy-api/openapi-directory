<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudDatacatalogV1GcsFilesetSpec - Describes a Cloud Storage fileset entry.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudDatacatalogV1GcsFilesetSpec
{
    /**
     * Required. Patterns to identify a set of files in Google Cloud Storage. For more information, see [Wildcard Names] (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames). Note: Currently, bucket wildcards are not supported. Examples of valid `file_patterns`: * `gs://bucket_name/dir/*`: matches all files in `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` and all subdirectories * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/* /b`: matches all files in `bucket_name` that match the `a/* /b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to match complex sets of files, for example: `gs://bucket_name/[a-m]??.j*g`
     * 
     * @var ?array<string> $filePatterns
     */
	#[\JMS\Serializer\Annotation\SerializedName('filePatterns')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $filePatterns = null;
    
    /**
     * Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDatacatalogV1GcsFileSpec> $sampleGcsFileSpecs
     */
	#[\JMS\Serializer\Annotation\SerializedName('sampleGcsFileSpecs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleCloudDatacatalogV1GcsFileSpec>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sampleGcsFileSpecs = null;
    
	public function __construct()
	{
		$this->filePatterns = null;
		$this->sampleGcsFileSpecs = null;
	}
}
