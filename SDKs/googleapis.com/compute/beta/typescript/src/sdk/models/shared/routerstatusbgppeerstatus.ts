/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BfdStatus } from "./bfdstatus";
import { Route } from "./route";
import { Expose, Type } from "class-transformer";

/**
 * Status of the BGP peer: {UP, DOWN}
 */
export enum RouterStatusBgpPeerStatusStatusEnum {
  Down = "DOWN",
  Unknown = "UNKNOWN",
  Up = "UP",
}

/**
 * Indicates why particular status was returned.
 */
export enum RouterStatusBgpPeerStatusStatusReasonEnum {
  Md5AuthInternalProblem = "MD5_AUTH_INTERNAL_PROBLEM",
  StatusReasonUnspecified = "STATUS_REASON_UNSPECIFIED",
}

export class RouterStatusBgpPeerStatus extends SpeakeasyBase {
  /**
   * Routes that were advertised to the remote BGP peer
   */
  @SpeakeasyMetadata({ elemType: Route })
  @Expose({ name: "advertisedRoutes" })
  @Type(() => Route)
  advertisedRoutes?: Route[];

  /**
   * Next free: 15
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bfdStatus" })
  @Type(() => BfdStatus)
  bfdStatus?: BfdStatus;

  /**
   * Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableIpv6" })
  enableIpv6?: boolean;

  /**
   * IP address of the local BGP interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress?: string;

  /**
   * IPv6 address of the local BGP interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv6NexthopAddress" })
  ipv6NexthopAddress?: string;

  /**
   * URL of the VPN tunnel that this BGP peer controls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkedVpnTunnel" })
  linkedVpnTunnel?: string;

  /**
   * Informs whether MD5 authentication is enabled on this BGP peer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "md5AuthEnabled" })
  md5AuthEnabled?: boolean;

  /**
   * Name of this BGP peer. Unique within the Routers resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Number of routes learned from the remote BGP Peer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numLearnedRoutes" })
  numLearnedRoutes?: number;

  /**
   * IP address of the remote BGP interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "peerIpAddress" })
  peerIpAddress?: string;

  /**
   * IPv6 address of the remote BGP interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "peerIpv6NexthopAddress" })
  peerIpv6NexthopAddress?: string;

  /**
   * [Output only] URI of the VM instance that is used as third-party router appliances such as Next Gen Firewalls, Virtual Routers, or Router Appliances. The VM instance is the peer side of the BGP session.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "routerApplianceInstance" })
  routerApplianceInstance?: string;

  /**
   * The state of the BGP session. For a list of possible values for this field, see BGP session states.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Status of the BGP peer: {UP, DOWN}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: RouterStatusBgpPeerStatusStatusEnum;

  /**
   * Indicates why particular status was returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statusReason" })
  statusReason?: RouterStatusBgpPeerStatusStatusReasonEnum;

  /**
   * Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23 hours, 59 minutes, 59 seconds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uptime" })
  uptime?: string;

  /**
   * Time this session has been up, in seconds. Format: 145
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uptimeSeconds" })
  uptimeSeconds?: string;
}
