/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * A description of the stream's edge configuration that will be used to sync with the Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub Device setup at your premise.
 */
export class StartEdgeConfigurationUpdateRequestBodyEdgeConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DeletionConfig" })
  @Type(() => shared.DeletionConfig)
  deletionConfig?: shared.DeletionConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "HubDeviceArn" })
  hubDeviceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RecorderConfig" })
  @Type(() => shared.RecorderConfig)
  recorderConfig?: shared.RecorderConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "UploaderConfig" })
  @Type(() => shared.UploaderConfig)
  uploaderConfig?: shared.UploaderConfig;
}

export class StartEdgeConfigurationUpdateRequestBody extends SpeakeasyBase {
  /**
   * A description of the stream's edge configuration that will be used to sync with the Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub Device setup at your premise.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EdgeConfig" })
  @Type(() => StartEdgeConfigurationUpdateRequestBodyEdgeConfig)
  edgeConfig: StartEdgeConfigurationUpdateRequestBodyEdgeConfig;

  /**
   *  The Amazon Resource Name (ARN) of the stream. Specify either the <code>StreamName</code> or the <code>StreamARN</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StreamARN" })
  streamARN?: string;

  /**
   * The name of the stream whose edge configuration you want to update. Specify either the <code>StreamName</code> or the <code>StreamARN</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StreamName" })
  streamName?: string;
}

export class StartEdgeConfigurationUpdateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: StartEdgeConfigurationUpdateRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class StartEdgeConfigurationUpdateResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ClientLimitExceededException
   */
  @SpeakeasyMetadata()
  clientLimitExceededException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InvalidArgumentException
   */
  @SpeakeasyMetadata()
  invalidArgumentException?: any;

  /**
   * NoDataRetentionException
   */
  @SpeakeasyMetadata()
  noDataRetentionException?: any;

  /**
   * ResourceInUseException
   */
  @SpeakeasyMetadata()
  resourceInUseException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  startEdgeConfigurationUpdateOutput?: shared.StartEdgeConfigurationUpdateOutput;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
