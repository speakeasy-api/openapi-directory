"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import blobstore2info as shared_blobstore2info
from ..shared import objectid as shared_objectid
from enum import Enum
from typing import Optional

class CompositeMediaReferenceTypeEnum(str, Enum):
    r"""Describes what the field reference contains."""
    PATH = 'PATH'
    BLOB_REF = 'BLOB_REF'
    INLINE = 'INLINE'
    BIGSTORE_REF = 'BIGSTORE_REF'
    COSMO_BINARY_REFERENCE = 'COSMO_BINARY_REFERENCE'


@dataclasses.dataclass
class CompositeMedia:
    r"""A sequence of media data references representing composite data. Introduced to support Bigstore composite objects. For details, visit http://go/bigstore-composites."""
    
    blob_ref: Optional[str] = dataclasses.field(default=None)
    r"""Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For now, any v2 blob will also be represented in this field as v1 BlobRef."""  
    blobstore2_info: Optional[shared_blobstore2info.Blobstore2Info] = dataclasses.field(default=None)
    r"""Information to read/write to blobstore2."""  
    cosmo_binary_reference: Optional[str] = dataclasses.field(default=None)
    r"""A binary data reference for a media download. Serves as a technology-agnostic binary reference in some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support JavaScript. This prevents us from including the actual type of this field."""  
    crc32c_hash: Optional[int] = dataclasses.field(default=None)
    r"""crc32.c hash for the payload."""  
    inline: Optional[str] = dataclasses.field(default=None)
    r"""Media data, set if reference_type is INLINE"""  
    length: Optional[str] = dataclasses.field(default=None)
    r"""Size of the data, in bytes"""  
    md5_hash: Optional[str] = dataclasses.field(default=None)
    r"""MD5 hash for the payload."""  
    object_id: Optional[shared_objectid.ObjectID] = dataclasses.field(default=None)
    r"""This is a copy of the tech.blob.ObjectId proto, which could not be used directly here due to transitive closure issues with JavaScript support; see http://b/8801763."""  
    path: Optional[str] = dataclasses.field(default=None)
    r"""Path to the data, set if reference_type is PATH"""  
    reference_type: Optional[CompositeMediaReferenceTypeEnum] = dataclasses.field(default=None)
    r"""Describes what the field reference contains."""  
    sha1_hash: Optional[str] = dataclasses.field(default=None)
    r"""SHA-1 hash for the payload."""  
    