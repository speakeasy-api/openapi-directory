/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TransactionTransactionSource - This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
 */
public class TransactionTransactionSource {
    /**
     * A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.
     */
    @JsonProperty("account_transfer_intention")
    public TransactionTransactionSourceAccountTransferIntention accountTransferIntention;
    public TransactionTransactionSource withAccountTransferIntention(TransactionTransactionSourceAccountTransferIntention accountTransferIntention) {
        this.accountTransferIntention = accountTransferIntention;
        return this;
    }
    
    /**
     * A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.
     */
    @JsonProperty("ach_check_conversion")
    public TransactionTransactionSourceACHCheckConversion achCheckConversion;
    public TransactionTransactionSource withAchCheckConversion(TransactionTransactionSourceACHCheckConversion achCheckConversion) {
        this.achCheckConversion = achCheckConversion;
        return this;
    }
    
    /**
     * A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.
     */
    @JsonProperty("ach_check_conversion_return")
    public TransactionTransactionSourceACHCheckConversionReturn achCheckConversionReturn;
    public TransactionTransactionSource withAchCheckConversionReturn(TransactionTransactionSourceACHCheckConversionReturn achCheckConversionReturn) {
        this.achCheckConversionReturn = achCheckConversionReturn;
        return this;
    }
    
    /**
     * A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.
     */
    @JsonProperty("ach_transfer_intention")
    public TransactionTransactionSourceACHTransferIntention achTransferIntention;
    public TransactionTransactionSource withAchTransferIntention(TransactionTransactionSourceACHTransferIntention achTransferIntention) {
        this.achTransferIntention = achTransferIntention;
        return this;
    }
    
    /**
     * A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.
     */
    @JsonProperty("ach_transfer_rejection")
    public TransactionTransactionSourceACHTransferRejection achTransferRejection;
    public TransactionTransactionSource withAchTransferRejection(TransactionTransactionSourceACHTransferRejection achTransferRejection) {
        this.achTransferRejection = achTransferRejection;
        return this;
    }
    
    /**
     * A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.
     */
    @JsonProperty("ach_transfer_return")
    public TransactionTransactionSourceACHTransferReturn achTransferReturn;
    public TransactionTransactionSource withAchTransferReturn(TransactionTransactionSourceACHTransferReturn achTransferReturn) {
        this.achTransferReturn = achTransferReturn;
        return this;
    }
    
    /**
     * A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.
     */
    @JsonProperty("card_dispute_acceptance")
    public TransactionTransactionSourceCardDisputeAcceptance cardDisputeAcceptance;
    public TransactionTransactionSource withCardDisputeAcceptance(TransactionTransactionSourceCardDisputeAcceptance cardDisputeAcceptance) {
        this.cardDisputeAcceptance = cardDisputeAcceptance;
        return this;
    }
    
    /**
     * A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.
     */
    @JsonProperty("card_refund")
    public TransactionTransactionSourceCardRefund cardRefund;
    public TransactionTransactionSource withCardRefund(TransactionTransactionSourceCardRefund cardRefund) {
        this.cardRefund = cardRefund;
        return this;
    }
    
    /**
     * A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.
     */
    @JsonProperty("card_route_refund")
    public TransactionTransactionSourceDeprecatedCardRefund cardRouteRefund;
    public TransactionTransactionSource withCardRouteRefund(TransactionTransactionSourceDeprecatedCardRefund cardRouteRefund) {
        this.cardRouteRefund = cardRouteRefund;
        return this;
    }
    
    /**
     * A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.
     */
    @JsonProperty("card_route_settlement")
    public TransactionTransactionSourceDeprecatedCardSettlement cardRouteSettlement;
    public TransactionTransactionSource withCardRouteSettlement(TransactionTransactionSourceDeprecatedCardSettlement cardRouteSettlement) {
        this.cardRouteSettlement = cardRouteSettlement;
        return this;
    }
    
    /**
     * A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.
     */
    @JsonProperty("card_settlement")
    public TransactionTransactionSourceCardSettlement cardSettlement;
    public TransactionTransactionSource withCardSettlement(TransactionTransactionSourceCardSettlement cardSettlement) {
        this.cardSettlement = cardSettlement;
        return this;
    }
    
    /**
     * The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
     */
    @JsonProperty("category")
    public TransactionTransactionSourceCategoryEnum category;
    public TransactionTransactionSource withCategory(TransactionTransactionSourceCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.
     */
    @JsonProperty("check_deposit_acceptance")
    public TransactionTransactionSourceCheckDepositAcceptance checkDepositAcceptance;
    public TransactionTransactionSource withCheckDepositAcceptance(TransactionTransactionSourceCheckDepositAcceptance checkDepositAcceptance) {
        this.checkDepositAcceptance = checkDepositAcceptance;
        return this;
    }
    
    /**
     * A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.
     */
    @JsonProperty("check_deposit_return")
    public TransactionTransactionSourceCheckDepositReturn checkDepositReturn;
    public TransactionTransactionSource withCheckDepositReturn(TransactionTransactionSourceCheckDepositReturn checkDepositReturn) {
        this.checkDepositReturn = checkDepositReturn;
        return this;
    }
    
    /**
     * A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.
     */
    @JsonProperty("check_transfer_intention")
    public TransactionTransactionSourceCheckTransferIntention checkTransferIntention;
    public TransactionTransactionSource withCheckTransferIntention(TransactionTransactionSourceCheckTransferIntention checkTransferIntention) {
        this.checkTransferIntention = checkTransferIntention;
        return this;
    }
    
    /**
     * A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.
     */
    @JsonProperty("check_transfer_rejection")
    public TransactionTransactionSourceCheckTransferRejection checkTransferRejection;
    public TransactionTransactionSource withCheckTransferRejection(TransactionTransactionSourceCheckTransferRejection checkTransferRejection) {
        this.checkTransferRejection = checkTransferRejection;
        return this;
    }
    
    /**
     * A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.
     */
    @JsonProperty("check_transfer_return")
    public TransactionTransactionSourceCheckTransferReturn checkTransferReturn;
    public TransactionTransactionSource withCheckTransferReturn(TransactionTransactionSourceCheckTransferReturn checkTransferReturn) {
        this.checkTransferReturn = checkTransferReturn;
        return this;
    }
    
    /**
     * A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.
     */
    @JsonProperty("check_transfer_stop_payment_request")
    public TransactionTransactionSourceCheckTransferStopPaymentRequest checkTransferStopPaymentRequest;
    public TransactionTransactionSource withCheckTransferStopPaymentRequest(TransactionTransactionSourceCheckTransferStopPaymentRequest checkTransferStopPaymentRequest) {
        this.checkTransferStopPaymentRequest = checkTransferStopPaymentRequest;
        return this;
    }
    
    /**
     * A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.
     */
    @JsonProperty("dispute_resolution")
    public TransactionTransactionSourceDisputeResolution disputeResolution;
    public TransactionTransactionSource withDisputeResolution(TransactionTransactionSourceDisputeResolution disputeResolution) {
        this.disputeResolution = disputeResolution;
        return this;
    }
    
    /**
     * A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.
     */
    @JsonProperty("empyreal_cash_deposit")
    public TransactionTransactionSourceEmpyrealCashDeposit empyrealCashDeposit;
    public TransactionTransactionSource withEmpyrealCashDeposit(TransactionTransactionSourceEmpyrealCashDeposit empyrealCashDeposit) {
        this.empyrealCashDeposit = empyrealCashDeposit;
        return this;
    }
    
    /**
     * A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.
     */
    @JsonProperty("inbound_ach_transfer")
    public TransactionTransactionSourceInboundACHTransfer inboundAchTransfer;
    public TransactionTransactionSource withInboundAchTransfer(TransactionTransactionSourceInboundACHTransfer inboundAchTransfer) {
        this.inboundAchTransfer = inboundAchTransfer;
        return this;
    }
    
    /**
     * A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.
     */
    @JsonProperty("inbound_check")
    public TransactionTransactionSourceInboundCheck inboundCheck;
    public TransactionTransactionSource withInboundCheck(TransactionTransactionSourceInboundCheck inboundCheck) {
        this.inboundCheck = inboundCheck;
        return this;
    }
    
    /**
     * A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.
     */
    @JsonProperty("inbound_international_ach_transfer")
    public TransactionTransactionSourceInboundInternationalACHTransfer inboundInternationalAchTransfer;
    public TransactionTransactionSource withInboundInternationalAchTransfer(TransactionTransactionSourceInboundInternationalACHTransfer inboundInternationalAchTransfer) {
        this.inboundInternationalAchTransfer = inboundInternationalAchTransfer;
        return this;
    }
    
    /**
     * A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.
     */
    @JsonProperty("inbound_real_time_payments_transfer_confirmation")
    public TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation inboundRealTimePaymentsTransferConfirmation;
    public TransactionTransactionSource withInboundRealTimePaymentsTransferConfirmation(TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation inboundRealTimePaymentsTransferConfirmation) {
        this.inboundRealTimePaymentsTransferConfirmation = inboundRealTimePaymentsTransferConfirmation;
        return this;
    }
    
    /**
     * A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.
     */
    @JsonProperty("inbound_wire_drawdown_payment")
    public TransactionTransactionSourceInboundWireDrawdownPayment inboundWireDrawdownPayment;
    public TransactionTransactionSource withInboundWireDrawdownPayment(TransactionTransactionSourceInboundWireDrawdownPayment inboundWireDrawdownPayment) {
        this.inboundWireDrawdownPayment = inboundWireDrawdownPayment;
        return this;
    }
    
    /**
     * A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.
     */
    @JsonProperty("inbound_wire_drawdown_payment_reversal")
    public TransactionTransactionSourceInboundWireDrawdownPaymentReversal inboundWireDrawdownPaymentReversal;
    public TransactionTransactionSource withInboundWireDrawdownPaymentReversal(TransactionTransactionSourceInboundWireDrawdownPaymentReversal inboundWireDrawdownPaymentReversal) {
        this.inboundWireDrawdownPaymentReversal = inboundWireDrawdownPaymentReversal;
        return this;
    }
    
    /**
     * A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.
     */
    @JsonProperty("inbound_wire_reversal")
    public TransactionTransactionSourceInboundWireReversal inboundWireReversal;
    public TransactionTransactionSource withInboundWireReversal(TransactionTransactionSourceInboundWireReversal inboundWireReversal) {
        this.inboundWireReversal = inboundWireReversal;
        return this;
    }
    
    /**
     * A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.
     */
    @JsonProperty("inbound_wire_transfer")
    public TransactionTransactionSourceInboundWireTransfer inboundWireTransfer;
    public TransactionTransactionSource withInboundWireTransfer(TransactionTransactionSourceInboundWireTransfer inboundWireTransfer) {
        this.inboundWireTransfer = inboundWireTransfer;
        return this;
    }
    
    /**
     * A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.
     */
    @JsonProperty("interest_payment")
    public TransactionTransactionSourceInterestPayment interestPayment;
    public TransactionTransactionSource withInterestPayment(TransactionTransactionSourceInterestPayment interestPayment) {
        this.interestPayment = interestPayment;
        return this;
    }
    
    /**
     * A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.
     */
    @JsonProperty("internal_source")
    public TransactionTransactionSourceInternalSource internalSource;
    public TransactionTransactionSource withInternalSource(TransactionTransactionSourceInternalSource internalSource) {
        this.internalSource = internalSource;
        return this;
    }
    
    /**
     * A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.
     */
    @JsonProperty("sample_funds")
    public TransactionTransactionSourceSampleFunds sampleFunds;
    public TransactionTransactionSource withSampleFunds(TransactionTransactionSourceSampleFunds sampleFunds) {
        this.sampleFunds = sampleFunds;
        return this;
    }
    
    /**
     * A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.
     */
    @JsonProperty("wire_drawdown_payment_intention")
    public TransactionTransactionSourceWireDrawdownPaymentIntention wireDrawdownPaymentIntention;
    public TransactionTransactionSource withWireDrawdownPaymentIntention(TransactionTransactionSourceWireDrawdownPaymentIntention wireDrawdownPaymentIntention) {
        this.wireDrawdownPaymentIntention = wireDrawdownPaymentIntention;
        return this;
    }
    
    /**
     * A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.
     */
    @JsonProperty("wire_drawdown_payment_rejection")
    public TransactionTransactionSourceWireDrawdownPaymentRejection wireDrawdownPaymentRejection;
    public TransactionTransactionSource withWireDrawdownPaymentRejection(TransactionTransactionSourceWireDrawdownPaymentRejection wireDrawdownPaymentRejection) {
        this.wireDrawdownPaymentRejection = wireDrawdownPaymentRejection;
        return this;
    }
    
    /**
     * A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.
     */
    @JsonProperty("wire_transfer_intention")
    public TransactionTransactionSourceWireTransferIntention wireTransferIntention;
    public TransactionTransactionSource withWireTransferIntention(TransactionTransactionSourceWireTransferIntention wireTransferIntention) {
        this.wireTransferIntention = wireTransferIntention;
        return this;
    }
    
    /**
     * A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.
     */
    @JsonProperty("wire_transfer_rejection")
    public TransactionTransactionSourceWireTransferRejection wireTransferRejection;
    public TransactionTransactionSource withWireTransferRejection(TransactionTransactionSourceWireTransferRejection wireTransferRejection) {
        this.wireTransferRejection = wireTransferRejection;
        return this;
    }
    
}
