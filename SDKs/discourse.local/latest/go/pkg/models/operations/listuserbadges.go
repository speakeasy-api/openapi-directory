// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListUserBadgesPathParams struct {
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

type ListUserBadgesRequest struct {
	PathParams ListUserBadgesPathParams
}

type ListUserBadges200ApplicationJSONBadgeTypes struct {
	ID        int64  `json:"id"`
	Name      string `json:"name"`
	SortOrder int64  `json:"sort_order"`
}

type ListUserBadges200ApplicationJSONBadges struct {
	AllowTitle        bool   `json:"allow_title"`
	BadgeGroupingID   int64  `json:"badge_grouping_id"`
	BadgeTypeID       int64  `json:"badge_type_id"`
	Description       string `json:"description"`
	Enabled           bool   `json:"enabled"`
	GrantCount        int64  `json:"grant_count"`
	Icon              string `json:"icon"`
	ID                int64  `json:"id"`
	ImageURL          string `json:"image_url"`
	Listable          bool   `json:"listable"`
	ManuallyGrantable bool   `json:"manually_grantable"`
	MultipleGrant     bool   `json:"multiple_grant"`
	Name              string `json:"name"`
	Slug              string `json:"slug"`
	System            bool   `json:"system"`
}

type ListUserBadges200ApplicationJSONGrantedBies struct {
	Admin          bool   `json:"admin"`
	AvatarTemplate string `json:"avatar_template"`
	FlairName      string `json:"flair_name"`
	ID             int64  `json:"id"`
	Moderator      bool   `json:"moderator"`
	Name           string `json:"name"`
	TrustLevel     int64  `json:"trust_level"`
	Username       string `json:"username"`
}

type ListUserBadges200ApplicationJSONUserBadges struct {
	BadgeID          int64  `json:"badge_id"`
	CanFavorite      bool   `json:"can_favorite"`
	GrantedAt        string `json:"granted_at"`
	GrantedByID      int64  `json:"granted_by_id"`
	GroupingPosition int64  `json:"grouping_position"`
	ID               int64  `json:"id"`
	IsFavorite       string `json:"is_favorite"`
}

// ListUserBadges200ApplicationJSON - success response
type ListUserBadges200ApplicationJSON struct {
	BadgeTypes  []ListUserBadges200ApplicationJSONBadgeTypes  `json:"badge_types,omitempty"`
	Badges      []ListUserBadges200ApplicationJSONBadges      `json:"badges,omitempty"`
	GrantedBies []ListUserBadges200ApplicationJSONGrantedBies `json:"granted_bies,omitempty"`
	UserBadges  []ListUserBadges200ApplicationJSONUserBadges  `json:"user_badges"`
}

type ListUserBadgesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success response
	ListUserBadges200ApplicationJSONObject *ListUserBadges200ApplicationJSON
}
