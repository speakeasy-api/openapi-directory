// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CompetitionFixturesLeagueDetailsFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type CompetitionFixturesLeagueDetailsFormatEnum string

const (
	CompetitionFixturesLeagueDetailsFormatEnumXML  CompetitionFixturesLeagueDetailsFormatEnum = "xml"
	CompetitionFixturesLeagueDetailsFormatEnumJSON CompetitionFixturesLeagueDetailsFormatEnum = "json"
)

func (e *CompetitionFixturesLeagueDetailsFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = CompetitionFixturesLeagueDetailsFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CompetitionFixturesLeagueDetailsFormatEnum: %s", s)
	}
}

type CompetitionFixturesLeagueDetailsRequest struct {
	// A LoL competition/league unique CompetitionId. Possible values include: <code>100000019</code>, etc.
	Competitionid string `pathParam:"style=simple,explode=false,name=competitionid"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format CompetitionFixturesLeagueDetailsFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type CompetitionFixturesLeagueDetailsResponse struct {
	CompetitionDetail *shared.CompetitionDetail
	ContentType       string
	StatusCode        int
	RawResponse       *http.Response
}
