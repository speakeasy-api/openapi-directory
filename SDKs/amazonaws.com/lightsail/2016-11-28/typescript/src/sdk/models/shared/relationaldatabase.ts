/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PendingMaintenanceAction } from "./pendingmaintenanceaction";
import { PendingModifiedRelationalDatabaseValues } from "./pendingmodifiedrelationaldatabasevalues";
import { RelationalDatabaseEndpoint } from "./relationaldatabaseendpoint";
import { RelationalDatabaseHardware } from "./relationaldatabasehardware";
import { ResourceLocation } from "./resourcelocation";
import { ResourceTypeEnum } from "./resourcetypeenum";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes a database.
 */
export class RelationalDatabase extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "backupRetentionEnabled" })
  backupRetentionEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "caCertificateIdentifier" })
  caCertificateIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "engine" })
  engine?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "engineVersion" })
  engineVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hardware" })
  @Type(() => RelationalDatabaseHardware)
  hardware?: RelationalDatabaseHardware;

  @SpeakeasyMetadata()
  @Expose({ name: "latestRestorableTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestRestorableTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => ResourceLocation)
  location?: ResourceLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "masterDatabaseName" })
  masterDatabaseName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "masterEndpoint" })
  @Type(() => RelationalDatabaseEndpoint)
  masterEndpoint?: RelationalDatabaseEndpoint;

  @SpeakeasyMetadata()
  @Expose({ name: "masterUsername" })
  masterUsername?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parameterApplyStatus" })
  parameterApplyStatus?: string;

  @SpeakeasyMetadata({ elemType: PendingMaintenanceAction })
  @Expose({ name: "pendingMaintenanceActions" })
  @Type(() => PendingMaintenanceAction)
  pendingMaintenanceActions?: PendingMaintenanceAction[];

  @SpeakeasyMetadata()
  @Expose({ name: "pendingModifiedValues" })
  @Type(() => PendingModifiedRelationalDatabaseValues)
  pendingModifiedValues?: PendingModifiedRelationalDatabaseValues;

  @SpeakeasyMetadata()
  @Expose({ name: "preferredBackupWindow" })
  preferredBackupWindow?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "preferredMaintenanceWindow" })
  preferredMaintenanceWindow?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publiclyAccessible" })
  publiclyAccessible?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "relationalDatabaseBlueprintId" })
  relationalDatabaseBlueprintId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationalDatabaseBundleId" })
  relationalDatabaseBundleId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceType" })
  resourceType?: ResourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "secondaryAvailabilityZone" })
  secondaryAvailabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "supportCode" })
  supportCode?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
