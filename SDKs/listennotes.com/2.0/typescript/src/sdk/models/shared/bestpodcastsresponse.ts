/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PodcastSimple } from "./podcastsimple";
import { Expose, Type } from "class-transformer";

/**
 * OK
 */
export class BestPodcastsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "has_next" })
  hasNext: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "has_previous" })
  hasPrevious: boolean;

  /**
   * The id of this genre
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Url of the list of best podcasts on [ListenNotes.com](https://www.ListenNotes.com).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listennotes_url" })
  listennotesUrl: string;

  /**
   * This genre's name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_number" })
  nextPageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_number" })
  pageNumber: number;

  /**
   * The id of parent genre.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_id" })
  parentId: number;

  @SpeakeasyMetadata({ elemType: PodcastSimple })
  @Expose({ name: "podcasts" })
  @Type(() => PodcastSimple)
  podcasts: PodcastSimple[];

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_number" })
  previousPageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;
}
