// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomBiddingScriptStateEnum - Output only. The state of the custom bidding script.
type CustomBiddingScriptStateEnum string

const (
	CustomBiddingScriptStateEnumStateUnspecified CustomBiddingScriptStateEnum = "STATE_UNSPECIFIED"
	CustomBiddingScriptStateEnumAccepted         CustomBiddingScriptStateEnum = "ACCEPTED"
	CustomBiddingScriptStateEnumRejected         CustomBiddingScriptStateEnum = "REJECTED"
	CustomBiddingScriptStateEnumPending          CustomBiddingScriptStateEnum = "PENDING"
)

func (e CustomBiddingScriptStateEnum) ToPointer() *CustomBiddingScriptStateEnum {
	return &e
}

func (e *CustomBiddingScriptStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACCEPTED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "PENDING":
		*e = CustomBiddingScriptStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomBiddingScriptStateEnum: %v", v)
	}
}

// CustomBiddingScript - A single custom bidding script.
type CustomBiddingScript struct {
	// Output only. Whether the script is currently being used for scoring by the parent algorithm.
	Active *bool `json:"active,omitempty"`
	// Output only. The time when the script was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The unique ID of the custom bidding algorithm the script belongs to.
	CustomBiddingAlgorithmID *string `json:"customBiddingAlgorithmId,omitempty"`
	// Output only. The unique ID of the custom bidding script.
	CustomBiddingScriptID *string `json:"customBiddingScriptId,omitempty"`
	// Output only. Error details of a rejected custom bidding script. This field will only be populated when Script.state is REJECTED.
	Errors []ScriptError `json:"errors,omitempty"`
	// Output only. The resource name of the custom bidding script.
	Name *string `json:"name,omitempty"`
	// The reference to the uploaded custom bidding script file.
	Script *CustomBiddingScriptRef `json:"script,omitempty"`
	// Output only. The state of the custom bidding script.
	State *CustomBiddingScriptStateEnum `json:"state,omitempty"`
}

// CustomBiddingScriptInput - A single custom bidding script.
type CustomBiddingScriptInput struct {
	// The reference to the uploaded custom bidding script file.
	Script *CustomBiddingScriptRef `json:"script,omitempty"`
}
