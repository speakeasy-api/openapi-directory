/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Unit of the budget for the reard program.
 */
export enum RewardProgramResourceAttributesBudgetUnitEnum {
  Dollar = "dollar",
  Point = "point",
  Credit = "credit",
}

export class RewardProgramResourceAttributes extends SpeakeasyBase {
  /**
   * Unit of the budget for the reard program.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "budget_unit" })
  budgetUnit?: RewardProgramResourceAttributesBudgetUnitEnum;

  /**
   * Value of the budget for the reward program. (Must be greater than 0)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "budget_value" })
  budgetValue: number;

  /**
   * Description of the reward program - designed to be a comprehensive text description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Number of days that a program can be active after it has been activated for a patient. (Must be greater than 0)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration_active" })
  durationActive?: number;

  /**
   * Date at which the reward program ends. (Must be after the start_at)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_at" })
  endAt: string;

  /**
   * If true, the reward program cannot be activated for a patient and new rewards cannot be created for the program.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "frozen" })
  frozen?: boolean;

  /**
   * If true, the rewards created for a patient for the program can be fulfulled as they are earned. If false, the rewards should only be fulfilled when the program is deactivated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fulfill_as_earned" })
  fulfillAsEarned?: boolean;

  /**
   * Name of the reward program
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Date at which the reward program starts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_at" })
  startAt: string;

  /**
   * Tagline of the reward program - designed to be one line
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tagline" })
  tagline?: string;
}

export class RewardProgramResourceRelationshipsGroupData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class RewardProgramResourceRelationshipsGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => RewardProgramResourceRelationshipsGroupData)
  data: RewardProgramResourceRelationshipsGroupData;
}

export class RewardProgramResourceRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(() => RewardProgramResourceRelationshipsGroup)
  group: RewardProgramResourceRelationshipsGroup;
}

export class RewardProgramResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => RewardProgramResourceAttributes)
  attributes?: RewardProgramResourceAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => RewardProgramResourceRelationships)
  relationships?: RewardProgramResourceRelationships;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
