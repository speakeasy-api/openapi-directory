/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListUsersRequest extends SpeakeasyBase {
  /**
   * The entityId of the User.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=entityId",
  })
  entityId?: string;

  /**
   * Page number. Default is 1.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results to return in a page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * The Type of the Payee entity. Either COMPANY or INDIVIDUAL.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=payeeType",
  })
  payeeType?: shared.PayeeTypeEnum;

  /**
   * List of sort fields (e.g. ?sort=email:asc,lastName:asc)
   *
   * @remarks
   * Default is email:asc 'name'
   * The supported sort fields are - email, lastNmae.
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * The status of the User.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: shared.UserStatusEnum;

  /**
   * The Type of the User.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: shared.UserTypeEnum;
}

export class ListUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Paginated list of Users filtered by query parameters
   */
  @SpeakeasyMetadata()
  pagedUserResponse?: shared.PagedUserResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid request. See Error message payload for details of failure
   */
  @SpeakeasyMetadata()
  inlineResponse400?: shared.InlineResponse400;

  /**
   * Invalid access token. May be expired or invalid
   */
  @SpeakeasyMetadata()
  inlineResponse401?: shared.InlineResponse401;

  /**
   * The authentication does not have permissions to access the resource
   *
   * @remarks
   * This usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions
   *
   */
  @SpeakeasyMetadata()
  inlineResponse403?: shared.InlineResponse403;
}
