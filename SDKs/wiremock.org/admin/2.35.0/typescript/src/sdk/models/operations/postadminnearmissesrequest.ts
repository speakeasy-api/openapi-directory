/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostAdminNearMissesRequestRequestBody extends SpeakeasyBase {
  /**
   * The full URL to match against
   */
  @SpeakeasyMetadata()
  @Expose({ name: "absoluteUrl" })
  absoluteUrl?: string;

  /**
   * Body string to match against
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: string;

  /**
   * Cookie patterns to match against in the <key>: { "<predicate>": "<value>" } form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cookies" })
  cookies?: Record<string, any>;

  /**
   * Header patterns to match against in the <key>: { "<predicate>": "<value>" } form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers?: Record<string, any>;

  /**
   * The HTTP request method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: string;

  /**
   * The path and query to match exactly against
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

export class PostAdminNearMissesRequest200ApplicationJSONNearMisses extends SpeakeasyBase {
  /**
   * The full URL to match against
   */
  @SpeakeasyMetadata()
  @Expose({ name: "absoluteUrl" })
  absoluteUrl?: string;

  /**
   * Body string to match against
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: string;

  /**
   * Cookie patterns to match against in the <key>: { "<predicate>": "<value>" } form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cookies" })
  cookies?: Record<string, any>;

  /**
   * Header patterns to match against in the <key>: { "<predicate>": "<value>" } form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers?: Record<string, any>;

  /**
   * The HTTP request method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: string;

  /**
   * The path and query to match exactly against
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * Near misses matching criteria
 */
export class PostAdminNearMissesRequest200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: PostAdminNearMissesRequest200ApplicationJSONNearMisses,
  })
  @Expose({ name: "nearMisses" })
  @Type(() => PostAdminNearMissesRequest200ApplicationJSONNearMisses)
  nearMisses?: PostAdminNearMissesRequest200ApplicationJSONNearMisses[];
}

export class PostAdminNearMissesRequestResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Near misses matching criteria
   */
  @SpeakeasyMetadata()
  postAdminNearMissesRequest200ApplicationJSONObject?: PostAdminNearMissesRequest200ApplicationJSON;
}
