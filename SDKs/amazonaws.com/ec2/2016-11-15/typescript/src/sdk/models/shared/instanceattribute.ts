/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The attachment state.
 */
export enum InstanceAttributeBlockDeviceMappingsEbsStatusEnum {
  Attaching = "attaching",
  Attached = "attached",
  Detaching = "detaching",
  Detached = "detached",
}

/**
 * Parameters used to automatically set up EBS volumes when the instance is launched.
 */
export class InstanceAttributeBlockDeviceMappingsEbs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachTime?: Date;

  @SpeakeasyMetadata()
  deleteOnTermination?: boolean;

  @SpeakeasyMetadata()
  status?: InstanceAttributeBlockDeviceMappingsEbsStatusEnum;

  @SpeakeasyMetadata()
  volumeId?: string;
}

/**
 * Describes a block device mapping.
 */
export class InstanceAttributeBlockDeviceMappings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  deviceName?: string;

  @SpeakeasyMetadata()
  ebs?: InstanceAttributeBlockDeviceMappingsEbs;
}

/**
 * To enable the instance for Amazon Web Services Stop Protection, set this parameter to <code>true</code>; otherwise, set it to <code>false</code>.
 */
export class InstanceAttributeDisableApiStop extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: boolean;
}

/**
 * If the value is <code>true</code>, you can't terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can.
 */
export class InstanceAttributeDisableApiTermination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: boolean;
}

/**
 * Indicates whether the instance is optimized for Amazon EBS I/O.
 */
export class InstanceAttributeEbsOptimized extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: boolean;
}

/**
 * Indicates whether enhanced networking with ENA is enabled.
 */
export class InstanceAttributeEnaSupport extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: boolean;
}

/**
 * To enable the instance for Amazon Web Services Nitro Enclaves, set this parameter to <code>true</code>; otherwise, set it to <code>false</code>.
 */
export class InstanceAttributeEnclaveOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  enabled?: boolean;
}

/**
 * Describes a security group.
 */
export class InstanceAttributeGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  groupName?: string;
}

/**
 * Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
 */
export class InstanceAttributeInstanceInitiatedShutdownBehavior extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The instance type.
 */
export class InstanceAttributeInstanceType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The kernel ID.
 */
export class InstanceAttributeKernelId extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The type of product code.
 */
export enum InstanceAttributeProductCodesProductCodeTypeEnum {
  Devpay = "devpay",
  Marketplace = "marketplace",
}

/**
 * Describes a product code.
 */
export class InstanceAttributeProductCodes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  productCodeId?: string;

  @SpeakeasyMetadata()
  productCodeType?: InstanceAttributeProductCodesProductCodeTypeEnum;
}

/**
 * The RAM disk ID.
 */
export class InstanceAttributeRamdiskId extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The device name of the root device volume (for example, <code>/dev/sda1</code>).
 */
export class InstanceAttributeRootDeviceName extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is <code>true</code>, source/destination checks are enabled; otherwise, they are disabled. The default value is <code>true</code>. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.
 */
export class InstanceAttributeSourceDestCheck extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: boolean;
}

/**
 * Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
 */
export class InstanceAttributeSriovNetSupport extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The user data.
 */
export class InstanceAttributeUserData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes an instance attribute.
 */
export class InstanceAttribute extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: InstanceAttributeBlockDeviceMappings })
  blockDeviceMappings?: InstanceAttributeBlockDeviceMappings[];

  @SpeakeasyMetadata()
  disableApiStop?: InstanceAttributeDisableApiStop;

  @SpeakeasyMetadata()
  disableApiTermination?: InstanceAttributeDisableApiTermination;

  @SpeakeasyMetadata()
  ebsOptimized?: InstanceAttributeEbsOptimized;

  @SpeakeasyMetadata()
  enaSupport?: InstanceAttributeEnaSupport;

  @SpeakeasyMetadata()
  enclaveOptions?: InstanceAttributeEnclaveOptions;

  @SpeakeasyMetadata({ elemType: InstanceAttributeGroups })
  groups?: InstanceAttributeGroups[];

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  instanceInitiatedShutdownBehavior?: InstanceAttributeInstanceInitiatedShutdownBehavior;

  @SpeakeasyMetadata()
  instanceType?: InstanceAttributeInstanceType;

  @SpeakeasyMetadata()
  kernelId?: InstanceAttributeKernelId;

  @SpeakeasyMetadata({ elemType: InstanceAttributeProductCodes })
  productCodes?: InstanceAttributeProductCodes[];

  @SpeakeasyMetadata()
  ramdiskId?: InstanceAttributeRamdiskId;

  @SpeakeasyMetadata()
  rootDeviceName?: InstanceAttributeRootDeviceName;

  @SpeakeasyMetadata()
  sourceDestCheck?: InstanceAttributeSourceDestCheck;

  @SpeakeasyMetadata()
  sriovNetSupport?: InstanceAttributeSriovNetSupport;

  @SpeakeasyMetadata()
  userData?: InstanceAttributeUserData;
}
