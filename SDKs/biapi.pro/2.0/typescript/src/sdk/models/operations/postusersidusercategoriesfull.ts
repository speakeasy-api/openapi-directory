/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostUsersIdUserCategoriesFullRequestBody extends SpeakeasyBase {
  /**
   * Accountant account number.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=accountant_account" })
  accountantAccount?: string;

  /**
   * Color of the category.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=color" })
  color?: string;

  /**
   * ID of the parent category.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=id_parent_category" })
  idParentCategory?: number;

  /**
   * ID of the parent category to be displayed.
   */
  @SpeakeasyMetadata({
    data: "multipart_form, name=id_parent_category_in_menu",
  })
  idParentCategoryInMenu?: number;

  /**
   * Is an income category. If null, this is both an income and an expense category.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=income" })
  income?: boolean;

  /**
   * Name of the category.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=name" })
  name?: string;

  /**
   * This category accepts opposite sign of transactions.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=refundable" })
  refundable?: boolean;
}

export class PostUsersIdUserCategoriesFullRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PostUsersIdUserCategoriesFullRequestBody;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  /**
   * Hint: you can use 'me' or 'all'
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_user",
  })
  idUser: string;
}

export class PostUsersIdUserCategoriesFullResponse extends SpeakeasyBase {
  /**
   * Successful POST on Category resource
   */
  @SpeakeasyMetadata()
  category?: shared.Category;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
