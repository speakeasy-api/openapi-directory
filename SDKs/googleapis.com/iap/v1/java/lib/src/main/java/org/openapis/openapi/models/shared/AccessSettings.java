/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccessSettings - Access related settings for IAP protected apps.
 */
public class AccessSettings {
    /**
     * Configuration for IAP allowed domains. Lets you to restrict access to an app and allow access to only the domains that you list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedDomainsSettings")
    public AllowedDomainsSettings allowedDomainsSettings;

    public AccessSettings withAllowedDomainsSettings(AllowedDomainsSettings allowedDomainsSettings) {
        this.allowedDomainsSettings = allowedDomainsSettings;
        return this;
    }
    
    /**
     * Allows customers to configure HTTP request paths that'll allow HTTP OPTIONS call to bypass authentication and authorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("corsSettings")
    public CorsSettings corsSettings;

    public AccessSettings withCorsSettings(CorsSettings corsSettings) {
        this.corsSettings = corsSettings;
        return this;
    }
    
    /**
     * Allows customers to configure tenant_id for GCIP instance per-app.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gcipSettings")
    public GcipSettings gcipSettings;

    public AccessSettings withGcipSettings(GcipSettings gcipSettings) {
        this.gcipSettings = gcipSettings;
        return this;
    }
    
    /**
     * Configuration for OAuth login&amp;consent flow behavior as well as for OAuth Credentials.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oauthSettings")
    public OAuthSettings oauthSettings;

    public AccessSettings withOauthSettings(OAuthSettings oauthSettings) {
        this.oauthSettings = oauthSettings;
        return this;
    }
    
    /**
     * PolicyDelegationConfig allows google-internal teams to use IAP for apps hosted in a tenant project. Using these settings, the app can delegate permission check to happen against the linked customer project. This is only ever supposed to be used by google internal teams, hence the restriction on the proto.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyDelegationSettings")
    public PolicyDelegationSettings policyDelegationSettings;

    public AccessSettings withPolicyDelegationSettings(PolicyDelegationSettings policyDelegationSettings) {
        this.policyDelegationSettings = policyDelegationSettings;
        return this;
    }
    
    /**
     * Configuration for IAP reauthentication policies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reauthSettings")
    public ReauthSettings reauthSettings;

    public AccessSettings withReauthSettings(ReauthSettings reauthSettings) {
        this.reauthSettings = reauthSettings;
        return this;
    }
    
    public AccessSettings(){}
}
