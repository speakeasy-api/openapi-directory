// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// IssuesUpdateMilestoneRequestBodyStateEnum - The state of the milestone. Either `open` or `closed`.
type IssuesUpdateMilestoneRequestBodyStateEnum string

const (
	IssuesUpdateMilestoneRequestBodyStateEnumOpen   IssuesUpdateMilestoneRequestBodyStateEnum = "open"
	IssuesUpdateMilestoneRequestBodyStateEnumClosed IssuesUpdateMilestoneRequestBodyStateEnum = "closed"
)

func (e *IssuesUpdateMilestoneRequestBodyStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "open":
		fallthrough
	case "closed":
		*e = IssuesUpdateMilestoneRequestBodyStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for IssuesUpdateMilestoneRequestBodyStateEnum: %s", s)
	}
}

type IssuesUpdateMilestoneRequestBody struct {
	// A description of the milestone.
	Description *string `json:"description,omitempty"`
	// The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
	DueOn *time.Time `json:"due_on,omitempty"`
	// The state of the milestone. Either `open` or `closed`.
	State *IssuesUpdateMilestoneRequestBodyStateEnum `json:"state,omitempty"`
	// The title of the milestone.
	Title *string `json:"title,omitempty"`
}

type IssuesUpdateMilestoneRequest struct {
	RequestBody *IssuesUpdateMilestoneRequestBody `request:"mediaType=application/json"`
	// milestone_number parameter
	MilestoneNumber int64  `pathParam:"style=simple,explode=false,name=milestone_number"`
	Owner           string `pathParam:"style=simple,explode=false,name=owner"`
	Repo            string `pathParam:"style=simple,explode=false,name=repo"`
}

type IssuesUpdateMilestoneResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	Milestone *shared.Milestone
}
