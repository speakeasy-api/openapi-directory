/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Payment Status
 *
 * @remarks
 * * ACCEPTED: any payment which was accepted at submission time (status may have changed since)
 * * REJECTED: any payment rejected by initial submission processing
 * * WITHDRAWN: any payment which has been withdrawn
 * * WITHDRAWABLE: any payment eligible for withdrawal
 *
 */
export enum GetPaymentsForPayoutV3StatusEnum {
  Accepted = "ACCEPTED",
  Rejected = "REJECTED",
  Withdrawn = "WITHDRAWN",
  Withdrawable = "WITHDRAWABLE",
}

/**
 * Transmission Type
 *
 * @remarks
 * * ACH
 * * SAME_DAY_ACH
 * * WIRE
 *
 */
export enum GetPaymentsForPayoutV3TransmissionTypeEnum {
  Ach = "ACH",
  SameDayAch = "SAME_DAY_ACH",
  Wire = "WIRE",
}

export class GetPaymentsForPayoutV3Request extends SpeakeasyBase {
  /**
   * Page number. Default is 1.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results to return in a page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * Payment Memo of the Payment
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=paymentMemo",
  })
  paymentMemo?: string;

  /**
   * Payor's Id of the Payment
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=payorPaymentId",
  })
  payorPaymentId?: string;

  /**
   * Id of the payout
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=payoutId",
  })
  payoutId: string;

  /**
   * The remote id of the payees.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=remoteId",
  })
  remoteId?: string;

  /**
   * Physical Account Name
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sourceAccountName",
  })
  sourceAccountName?: string;

  /**
   * Payment Status
   *
   * @remarks
   * * ACCEPTED: any payment which was accepted at submission time (status may have changed since)
   * * REJECTED: any payment rejected by initial submission processing
   * * WITHDRAWN: any payment which has been withdrawn
   * * WITHDRAWABLE: any payment eligible for withdrawal
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: GetPaymentsForPayoutV3StatusEnum;

  /**
   * Transmission Type
   *
   * @remarks
   * * ACH
   * * SAME_DAY_ACH
   * * WIRE
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=transmissionType",
  })
  transmissionType?: GetPaymentsForPayoutV3TransmissionTypeEnum;
}

export class GetPaymentsForPayoutV3Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Payments for payout
   */
  @SpeakeasyMetadata()
  pagedPaymentsResponseV3?: shared.PagedPaymentsResponseV3;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The resource was not found or is no longer available
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  inlineResponse404?: shared.InlineResponse404;
}
