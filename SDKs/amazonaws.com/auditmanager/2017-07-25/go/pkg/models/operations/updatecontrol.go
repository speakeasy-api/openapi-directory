// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateControlPathParams struct {
	//  The identifier for the control.
	ControlID string `pathParam:"style=simple,explode=false,name=controlId"`
}

type UpdateControlHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateControlRequestBody struct {
	//  The recommended actions to carry out if the control isn't fulfilled.
	ActionPlanInstructions *string `json:"actionPlanInstructions,omitempty"`
	//  The title of the action plan for remediating the control.
	ActionPlanTitle *string `json:"actionPlanTitle,omitempty"`
	//  The data mapping sources for the control.
	ControlMappingSources []shared.ControlMappingSource `json:"controlMappingSources"`
	//  The optional description of the control.
	Description *string `json:"description,omitempty"`
	//  The name of the updated control.
	Name string `json:"name"`
	//  The steps that you should follow to determine if the control is met.
	TestingInformation *string `json:"testingInformation,omitempty"`
}

type UpdateControlRequest struct {
	PathParams UpdateControlPathParams
	Headers    UpdateControlHeaders
	Request    UpdateControlRequestBody `request:"mediaType=application/json"`
}

type UpdateControlResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	UpdateControlResponse *shared.UpdateControlResponse
	// ValidationException
	ValidationException interface{}
}
