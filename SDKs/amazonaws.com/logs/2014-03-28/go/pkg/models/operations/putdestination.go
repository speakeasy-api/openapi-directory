// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutDestinationXAmzTargetEnum
type PutDestinationXAmzTargetEnum string

const (
	PutDestinationXAmzTargetEnumLogs20140328PutDestination PutDestinationXAmzTargetEnum = "Logs_20140328.PutDestination"
)

func (e PutDestinationXAmzTargetEnum) ToPointer() *PutDestinationXAmzTargetEnum {
	return &e
}

func (e *PutDestinationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Logs_20140328.PutDestination":
		*e = PutDestinationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutDestinationXAmzTargetEnum: %v", v)
	}
}

type PutDestinationRequest struct {
	PutDestinationRequest shared.PutDestinationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            PutDestinationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutDestinationResponse struct {
	ContentType string
	// InvalidParameterException
	InvalidParameterException interface{}
	// OperationAbortedException
	OperationAbortedException interface{}
	// Success
	PutDestinationResponse *shared.PutDestinationResponse
	StatusCode             int
	RawResponse            *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
}
