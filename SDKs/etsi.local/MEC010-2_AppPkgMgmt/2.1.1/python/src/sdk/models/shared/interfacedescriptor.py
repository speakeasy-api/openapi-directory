"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import interfacetype_enum as shared_interfacetype_enum
from ..shared import tunnelinfo as shared_tunnelinfo
from typing import Optional


@dataclasses.dataclass
class InterfaceDescriptor:
    
    interface_type: shared_interfacetype_enum.InterfaceTypeEnum = dataclasses.field()
    r"""Type of interface."""  
    dst_ip_address: Optional[str] = dataclasses.field(default=None)
    r"""If the interface type is IP, the destination address identifies the IP address of the destination. Only used for dstInterface."""  
    dst_mac_address: Optional[str] = dataclasses.field(default=None)
    r"""If the interface type is MAC, the destination address identifies the MAC address of the destination. Only used for dstInterface."""  
    src_mac_address: Optional[str] = dataclasses.field(default=None)
    r"""If the interface type is MAC, the source address identifies the MAC address of the interface."""  
    tunnel_info: Optional[shared_tunnelinfo.TunnelInfo] = dataclasses.field(default=None)  
    