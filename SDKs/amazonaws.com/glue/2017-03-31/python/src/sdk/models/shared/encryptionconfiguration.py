"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cloudwatchencryption as shared_cloudwatchencryption
from ..shared import jobbookmarksencryption as shared_jobbookmarksencryption
from ..shared import s3encryption as shared_s3encryption
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EncryptionConfiguration:
    r"""Specifies an encryption configuration."""
    
    cloud_watch_encryption: Optional[shared_cloudwatchencryption.CloudWatchEncryption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CloudWatchEncryption'), 'exclude': lambda f: f is None }})  
    job_bookmarks_encryption: Optional[shared_jobbookmarksencryption.JobBookmarksEncryption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JobBookmarksEncryption'), 'exclude': lambda f: f is None }})  
    s3_encryption: Optional[list[shared_s3encryption.S3Encryption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Encryption'), 'exclude': lambda f: f is None }})  
    