// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeStacksActionEnum
type POSTDescribeStacksActionEnum string

const (
	POSTDescribeStacksActionEnumDescribeStacks POSTDescribeStacksActionEnum = "DescribeStacks"
)

func (e POSTDescribeStacksActionEnum) ToPointer() *POSTDescribeStacksActionEnum {
	return &e
}

func (e *POSTDescribeStacksActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeStacks":
		*e = POSTDescribeStacksActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeStacksActionEnum: %v", v)
	}
}

// POSTDescribeStacksVersionEnum
type POSTDescribeStacksVersionEnum string

const (
	POSTDescribeStacksVersionEnumTwoThousandAndTen0515 POSTDescribeStacksVersionEnum = "2010-05-15"
)

func (e POSTDescribeStacksVersionEnum) ToPointer() *POSTDescribeStacksVersionEnum {
	return &e
}

func (e *POSTDescribeStacksVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-15":
		*e = POSTDescribeStacksVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeStacksVersionEnum: %v", v)
	}
}

type POSTDescribeStacksRequest struct {
	Action POSTDescribeStacksActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	NextToken         *string                       `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                        `request:"mediaType=text/xml"`
	Version           POSTDescribeStacksVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeStacksResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
