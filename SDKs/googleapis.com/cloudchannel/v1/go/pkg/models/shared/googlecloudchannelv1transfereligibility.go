// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnum - Specified the reason for ineligibility.
type GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnum string

const (
	GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnumReasonUnspecified    GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnum = "REASON_UNSPECIFIED"
	GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnumPendingTosAcceptance GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnum = "PENDING_TOS_ACCEPTANCE"
	GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnumSkuNotEligible       GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnum = "SKU_NOT_ELIGIBLE"
	GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnumSkuSuspended         GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnum = "SKU_SUSPENDED"
)

func (e *GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REASON_UNSPECIFIED":
		fallthrough
	case "PENDING_TOS_ACCEPTANCE":
		fallthrough
	case "SKU_NOT_ELIGIBLE":
		fallthrough
	case "SKU_SUSPENDED":
		*e = GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnum: %s", s)
	}
}

// GoogleCloudChannelV1TransferEligibility - Specifies transfer eligibility of a SKU.
type GoogleCloudChannelV1TransferEligibility struct {
	// Localized description if reseller is not eligible to transfer the SKU.
	Description *string `json:"description,omitempty"`
	// Specified the reason for ineligibility.
	IneligibilityReason *GoogleCloudChannelV1TransferEligibilityIneligibilityReasonEnum `json:"ineligibilityReason,omitempty"`
	// Whether reseller is eligible to transfer the SKU.
	IsEligible *bool `json:"isEligible,omitempty"`
}
