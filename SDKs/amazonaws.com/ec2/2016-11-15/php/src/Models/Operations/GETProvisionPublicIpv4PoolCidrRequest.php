<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETProvisionPublicIpv4PoolCidrRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETProvisionPublicIpv4PoolCidrActionEnum $action;
    
    /**
     * A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
     * 
     * @var ?bool $dryRun
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DryRun')]
    public ?bool $dryRun = null;
    
    /**
     * The ID of the IPAM pool you would like to use to allocate this CIDR.
     * 
     * @var string $ipamPoolId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=IpamPoolId')]
    public string $ipamPoolId;
    
    /**
     * The netmask length of the CIDR you would like to allocate to the public IPv4 pool.
     * 
     * @var int $netmaskLength
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NetmaskLength')]
    public int $netmaskLength;
    
    /**
     * The ID of the public IPv4 pool you would like to use for this CIDR.
     * 
     * @var string $poolId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PoolId')]
    public string $poolId;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETProvisionPublicIpv4PoolCidrVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETProvisionPublicIpv4PoolCidrActionEnum::PROVISION_PUBLIC_IPV4_POOL_CIDR;
		$this->dryRun = null;
		$this->ipamPoolId = "";
		$this->netmaskLength = 0;
		$this->poolId = "";
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETProvisionPublicIpv4PoolCidrVersionEnum::TWO_THOUSAND_AND_SIXTEEN1115;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
