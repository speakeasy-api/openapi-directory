/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;

/**
 * Webinar200ApplicationXML - Webinar object.
 */
public class Webinar200ApplicationXML {
    /**
     * Webinar agenda.
     */
    
    public String agenda;
    public Webinar200ApplicationXML withAgenda(String agenda) {
        this.agenda = agenda;
        return this;
    }
    
    /**
     * Create time.
     */
    
    public OffsetDateTime createdAt;
    public Webinar200ApplicationXML withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Webinar duration.
     */
    
    public Long duration;
    public Webinar200ApplicationXML withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Email address of the meeting host.
     */
    
    public String hostEmail;
    public Webinar200ApplicationXML withHostEmail(String hostEmail) {
        this.hostEmail = hostEmail;
        return this;
    }
    
    /**
     * ID of the user set as host of webinar.
     */
    
    public String hostId;
    public Webinar200ApplicationXML withHostId(String hostId) {
        this.hostId = hostId;
        return this;
    }
    
    /**
     * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
     */
    
    public Long id;
    public Webinar200ApplicationXML withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * URL to join the Webinar. This URL should only be shared with the users who should be invited to the Webinar.
     */
    
    public String joinUrl;
    public Webinar200ApplicationXML withJoinUrl(String joinUrl) {
        this.joinUrl = joinUrl;
        return this;
    }
    
    /**
     * Array of occurrence objects.
     */
    
    public Webinar200ApplicationXMLOccurrences[] occurrences;
    public Webinar200ApplicationXML withOccurrences(Webinar200ApplicationXMLOccurrences[] occurrences) {
        this.occurrences = occurrences;
        return this;
    }
    
    /**
     * Webinar passcode. 
     * 
     * If "Require a passcode when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. &lt;br&gt;&lt;br&gt;
     * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. &lt;br&gt;&lt;br&gt;If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the  [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API. 
     * 
     * 
     * 
     * 
     * 
     * 
     */
    
    public String password;
    public Webinar200ApplicationXML withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. 
     */
    
    public Webinar200ApplicationXMLRecurrenceWebinar recurrence;
    public Webinar200ApplicationXML withRecurrence(Webinar200ApplicationXMLRecurrenceWebinar recurrence) {
        this.recurrence = recurrence;
        return this;
    }
    
    /**
     * Webinar settings.
     */
    
    public Webinar200ApplicationXMLSettings settings;
    public Webinar200ApplicationXML withSettings(Webinar200ApplicationXMLSettings settings) {
        this.settings = settings;
        return this;
    }
    
    /**
     * Webinar start time in GMT/UTC.
     */
    
    public OffsetDateTime startTime;
    public Webinar200ApplicationXML withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * &lt;br&gt;&lt;aside&gt;The &lt;code&gt;start_url&lt;/code&gt; of a Webinar is a URL using which a host or an alternative host can start the Webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the Webinar. 
     * 
     * The expiration time for the &lt;code&gt;start_url&lt;/code&gt; field listed in the response of [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate) is two hours for all regular users. 
     * 	
     * For users created using the &lt;code&gt;custCreate&lt;/code&gt; option via the [Create Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usercreate) API, the expiration time of the &lt;code&gt;start_url&lt;/code&gt; field is 90 days.
     * 	
     * For security reasons, to retrieve the latest value for the &lt;code&gt;start_url&lt;/code&gt; field programmatically (after expiry), you must call the [Retrieve a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar) and refer to the value of the &lt;code&gt;start_url&lt;/code&gt; field in the response.&lt;/aside&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
     */
    
    public String startUrl;
    public Webinar200ApplicationXML withStartUrl(String startUrl) {
        this.startUrl = startUrl;
        return this;
    }
    
    /**
     * Time zone to format start_time.
     */
    
    public String timezone;
    public Webinar200ApplicationXML withTimezone(String timezone) {
        this.timezone = timezone;
        return this;
    }
    
    /**
     * Webinar topic.
     */
    
    public String topic;
    public Webinar200ApplicationXML withTopic(String topic) {
        this.topic = topic;
        return this;
    }
    
    /**
     * Tracking fields
     */
    
    public Webinar200ApplicationXMLTrackingFields[] trackingFields;
    public Webinar200ApplicationXML withTrackingFields(Webinar200ApplicationXMLTrackingFields[] trackingFields) {
        this.trackingFields = trackingFields;
        return this;
    }
    
    /**
     * Webinar Types:&lt;br&gt;`5` - Webinar.&lt;br&gt;`6` - Recurring webinar with no fixed time.&lt;br&gt;`9` - Recurring webinar with a fixed time.
     */
    
    public Webinar200ApplicationXMLTypeEnum type;
    public Webinar200ApplicationXML withType(Webinar200ApplicationXMLTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Unique Webinar ID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). You can retrieve a list of UUIDs from past Webinar instances using [this API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/pastwebinars). Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
     * 
     * 
     */
    
    public String uuid;
    public Webinar200ApplicationXML withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
}
