/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProxyGetInvoiceItemAdjustment - Container for custom fields of an Invoice Item Adjustment object.
 * 
 */
public class ProxyGetInvoiceItemAdjustment {
    /**
     *  The ID of the account that owns the invoice.
     * **Values**: inherited from `Account.ID` for the invoice owner 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccountId")
    public String accountId;
    public ProxyGetInvoiceItemAdjustment withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     *  The accounting code for the invoice item. Accounting codes group transactions that contain similar accounting attributes.
     * **Character limit**: 100 **Values**: inherited from `InvoiceItem.AccountingCode` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccountingCode")
    public String accountingCode;
    public ProxyGetInvoiceItemAdjustment withAccountingCode(String accountingCode) {
        this.accountingCode = accountingCode;
        return this;
    }
    
    /**
     *  The date when the invoice item adjustment is applied, in `yyyy-mm-dd` format. This date must be the same as the invoice's date or later.
     * **Character limit**: 29 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("AdjustmentDate")
    public LocalDate adjustmentDate;
    public ProxyGetInvoiceItemAdjustment withAdjustmentDate(LocalDate adjustmentDate) {
        this.adjustmentDate = adjustmentDate;
        return this;
    }
    
    /**
     *  A unique string to identify an individual invoice item adjustment.
     * **Character limit**: 255 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdjustmentNumber")
    public String adjustmentNumber;
    public ProxyGetInvoiceItemAdjustment withAdjustmentNumber(String adjustmentNumber) {
        this.adjustmentNumber = adjustmentNumber;
        return this;
    }
    
    /**
     *  The amount of the invoice item adjustment. The value of Amount must be positive. Use the required parameter Type to either credit or charge (debit) this amount on the invoice. **Character limit**: 16 **Values**: a valid currency amount 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Amount")
    public Double amount;
    public ProxyGetInvoiceItemAdjustment withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     *  The ID of the Zuora user who canceled the invoice item adjustment. Zuora generates this read-only field only if the adjustment is canceled.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CancelledById")
    public String cancelledById;
    public ProxyGetInvoiceItemAdjustment withCancelledById(String cancelledById) {
        this.cancelledById = cancelledById;
        return this;
    }
    
    /**
     *  The date when the invoice item adjustment is canceled. Zuora generates this read-only field if this adjustment is canceled.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CancelledDate")
    public OffsetDateTime cancelledDate;
    public ProxyGetInvoiceItemAdjustment withCancelledDate(OffsetDateTime cancelledDate) {
        this.cancelledDate = cancelledDate;
        return this;
    }
    
    /**
     *  Use this field to record comments about the invoice item adjustment.
     * **Character limit**: 255 **Values**: a string of 255 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Comment")
    public String comment;
    public ProxyGetInvoiceItemAdjustment withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     *  The user ID of the person who created the invoice item.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedById")
    public String createdById;
    public ProxyGetInvoiceItemAdjustment withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     *  The date the invoice item was created.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public ProxyGetInvoiceItemAdjustment withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     *  The name of the account that owns the associated invoice.
     * 
     * **Character limit**: 50
     * 
     * **Values**: inherited from `Account.Name`
     * 
     * **Note**: This value changes if `Account.Name` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceItemAdjustment` do not change when `Account.Name` is updated. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerName")
    public String customerName;
    public ProxyGetInvoiceItemAdjustment withCustomerName(String customerName) {
        this.customerName = customerName;
        return this;
    }
    
    /**
     *  The unique account number of the customer's account.
     * 
     * **Character limit**: 50
     * 
     * **Values**: inherited from `Account.AccountNumber`
     * 
     * **Note**: This value changes if `Account.AccountNumber` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceItemAdjustment` do not change when `Account.AccountNumber` is updated. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerNumber")
    public String customerNumber;
    public ProxyGetInvoiceItemAdjustment withCustomerNumber(String customerNumber) {
        this.customerNumber = customerNumber;
        return this;
    }
    
    /**
     * Object identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public ProxyGetInvoiceItemAdjustment withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     *  The ID of the invoice associated with the adjustment. The adjustment invoice item is in this invoice. This field is optional if you specify a value for the `InvoiceNumber` field.
     * **Character limit**: 3 **Values**: a valid invoice ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceId")
    public String invoiceId;
    public ProxyGetInvoiceItemAdjustment withInvoiceId(String invoiceId) {
        this.invoiceId = invoiceId;
        return this;
    }
    
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceItemAdjustment.IntegrationId__NS")
    public String invoiceItemAdjustmentIntegrationIdNS;
    public ProxyGetInvoiceItemAdjustment withInvoiceItemAdjustmentIntegrationIdNS(String invoiceItemAdjustmentIntegrationIdNS) {
        this.invoiceItemAdjustmentIntegrationIdNS = invoiceItemAdjustmentIntegrationIdNS;
        return this;
    }
    
    /**
     * Status of the invoice item adjustment's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceItemAdjustment.IntegrationStatus__NS")
    public String invoiceItemAdjustmentIntegrationStatusNS;
    public ProxyGetInvoiceItemAdjustment withInvoiceItemAdjustmentIntegrationStatusNS(String invoiceItemAdjustmentIntegrationStatusNS) {
        this.invoiceItemAdjustmentIntegrationStatusNS = invoiceItemAdjustmentIntegrationStatusNS;
        return this;
    }
    
    /**
     * Date when the invoice item adjustment was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceItemAdjustment.SyncDate__NS")
    public String invoiceItemAdjustmentSyncDateNS;
    public ProxyGetInvoiceItemAdjustment withInvoiceItemAdjustmentSyncDateNS(String invoiceItemAdjustmentSyncDateNS) {
        this.invoiceItemAdjustmentSyncDateNS = invoiceItemAdjustmentSyncDateNS;
        return this;
    }
    
    /**
     *  The name of the invoice item's charge. This field is required in the Query call, but is inherited in other calls.
     * **Character limit**: 255 **Values**: inherited from `InvoiceItem.ChargeName` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceItemName")
    public String invoiceItemName;
    public ProxyGetInvoiceItemAdjustment withInvoiceItemName(String invoiceItemName) {
        this.invoiceItemName = invoiceItemName;
        return this;
    }
    
    /**
     *  The unique identification number for the invoice that contains the invoice item. This field is optional if you specify a value for the `InvoiceId` field.
     * **Character limit**: 32 **Values**: a valid invoice number 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceNumber")
    public String invoiceNumber;
    public ProxyGetInvoiceItemAdjustment withInvoiceNumber(String invoiceNumber) {
        this.invoiceNumber = invoiceNumber;
        return this;
    }
    
    /**
     *  A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.
     * **Character limit**: 32 **V****alues**: a valid reason code 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReasonCode")
    public String reasonCode;
    public ProxyGetInvoiceItemAdjustment withReasonCode(String reasonCode) {
        this.reasonCode = reasonCode;
        return this;
    }
    
    /**
     *  A code to reference an object external to Zuora. For example, you can use this field to reference a case number in an external system.
     * **Character limit**: 60 **Values**: a string of 60 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReferenceId")
    public String referenceId;
    public ProxyGetInvoiceItemAdjustment withReferenceId(String referenceId) {
        this.referenceId = referenceId;
        return this;
    }
    
    /**
     *  The end date of the service period associated with the invoice item. Service ends one second before the date in this value.
     * 
     * **Character limit**: 29 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("ServiceEndDate")
    public LocalDate serviceEndDate;
    public ProxyGetInvoiceItemAdjustment withServiceEndDate(LocalDate serviceEndDate) {
        this.serviceEndDate = serviceEndDate;
        return this;
    }
    
    /**
     *  The start date of the service period associated with the invoice item. Service ends one second before the date in this value.
     * 
     * **Character limit**: 29 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("ServiceStartDate")
    public LocalDate serviceStartDate;
    public ProxyGetInvoiceItemAdjustment withServiceStartDate(LocalDate serviceStartDate) {
        this.serviceStartDate = serviceStartDate;
        return this;
    }
    
    /**
     *  The ID of the item specified in the SourceType field.
     * **Character limit**: 32 **Values**: a valid invoice item ID or taxation item ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceId")
    public String sourceId;
    public ProxyGetInvoiceItemAdjustment withSourceId(String sourceId) {
        this.sourceId = sourceId;
        return this;
    }
    
    /**
     *  The type of adjustment.
     * **Character limit**: 13 **Values**: InvoiceDetail, Tax 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceType")
    public String sourceType;
    public ProxyGetInvoiceItemAdjustment withSourceType(String sourceType) {
        this.sourceType = sourceType;
        return this;
    }
    
    /**
     *  The status of the invoice item adjustment. This field is required in the Query call, but is automatically generated in other calls.
     * **Character limit**: 9 **Values**: Canceled, Processed 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;
    public ProxyGetInvoiceItemAdjustment withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Indicates the status of the adjustment's transfer to an external accounting system, such as NetSuite.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TransferredToAccounting")
    public ProxyGetInvoiceItemAdjustmentTransferredToAccountingEnum transferredToAccounting;
    public ProxyGetInvoiceItemAdjustment withTransferredToAccounting(ProxyGetInvoiceItemAdjustmentTransferredToAccountingEnum transferredToAccounting) {
        this.transferredToAccounting = transferredToAccounting;
        return this;
    }
    
    /**
     *  The ID of the user who last updated the invoice item.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedById")
    public String updatedById;
    public ProxyGetInvoiceItemAdjustment withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     *  The date when the invoice item was last updated.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedDate")
    public OffsetDateTime updatedDate;
    public ProxyGetInvoiceItemAdjustment withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
