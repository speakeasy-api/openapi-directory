/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateConfigurationSetEventDestinationRequestBody {
    /**
     * An object that defines the event destination. Specifically, it defines which services receive events from emails sent using the configuration set that the event destination is associated with. Also defines the types of events that are sent to the event destination.
     */
    @JsonProperty("EventDestination")
    public CreateConfigurationSetEventDestinationRequestBodyEventDestination eventDestination;

    public CreateConfigurationSetEventDestinationRequestBody withEventDestination(CreateConfigurationSetEventDestinationRequestBodyEventDestination eventDestination) {
        this.eventDestination = eventDestination;
        return this;
    }
    
    /**
     * &lt;p&gt;The name of an event destination.&lt;/p&gt; &lt;p&gt;In Amazon Pinpoint, &lt;i&gt;events&lt;/i&gt; include message sends, deliveries, opens, clicks, bounces, and complaints. &lt;i&gt;Event destinations&lt;/i&gt; are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.&lt;/p&gt;
     */
    @JsonProperty("EventDestinationName")
    public String eventDestinationName;

    public CreateConfigurationSetEventDestinationRequestBody withEventDestinationName(String eventDestinationName) {
        this.eventDestinationName = eventDestinationName;
        return this;
    }
    
    public CreateConfigurationSetEventDestinationRequestBody(@JsonProperty("EventDestination") CreateConfigurationSetEventDestinationRequestBodyEventDestination eventDestination, @JsonProperty("EventDestinationName") String eventDestinationName) {
        this.eventDestination = eventDestination;
        this.eventDestinationName = eventDestinationName;
  }
}
