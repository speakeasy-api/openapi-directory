// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UploadArchivePathParams struct {
	// The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	// The name of the vault.
	VaultName string `pathParam:"style=simple,explode=false,name=vaultName"`
}

type UploadArchiveHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The optional description of the archive you are uploading.
	XAmzArchiveDescription *string `header:"style=simple,explode=false,name=x-amz-archive-description"`
	// The SHA256 tree hash of the data being uploaded.
	XAmzSha256TreeHash *string `header:"style=simple,explode=false,name=x-amz-sha256-tree-hash"`
}

type UploadArchiveRequestBody struct {
	// The data to upload.
	Body *string `json:"body,omitempty"`
}

type UploadArchiveRequest struct {
	PathParams UploadArchivePathParams
	Headers    UploadArchiveHeaders
	Request    UploadArchiveRequestBody `request:"mediaType=application/json"`
}

type UploadArchiveResponse struct {
	// Success
	ArchiveCreationOutput map[string]interface{}
	ContentType           string
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// MissingParameterValueException
	MissingParameterValueException interface{}
	// RequestTimeoutException
	RequestTimeoutException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
}
