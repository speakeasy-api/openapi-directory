"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventincludeddata as shared_eventincludeddata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventBridgeConfiguration:
    r"""Configuration to enable EventBridge case event delivery and determine what data is delivered."""
    
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})  
    included_data: Optional[shared_eventincludeddata.EventIncludedData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includedData'), 'exclude': lambda f: f is None }})  
    