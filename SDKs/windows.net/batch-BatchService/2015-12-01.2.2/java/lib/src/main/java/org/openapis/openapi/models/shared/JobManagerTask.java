/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JobManagerTask - Specifies details of a Job Manager task.
 */
public class JobManagerTask {
    /**
     * Gets or sets the command line of the Job Manager task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commandLine")
    public String commandLine;
    public JobManagerTask withCommandLine(String commandLine) {
        this.commandLine = commandLine;
        return this;
    }
    
    /**
     * Constraints to apply to the Job Manager task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("constraints")
    public TaskConstraints constraints;
    public JobManagerTask withConstraints(TaskConstraints constraints) {
        this.constraints = constraints;
        return this;
    }
    
    /**
     * Gets or sets the display name of the Job Manager task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public JobManagerTask withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Gets or sets a list of environment variable settings for the Job Manager task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environmentSettings")
    public EnvironmentSetting[] environmentSettings;
    public JobManagerTask withEnvironmentSettings(EnvironmentSetting[] environmentSettings) {
        this.environmentSettings = environmentSettings;
        return this;
    }
    
    /**
     * Gets or sets a string that uniquely identifies the Job Manager task. A GUID is recommended.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public JobManagerTask withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets or sets whether completion of the Job Manager task signifies completion of the entire job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("killJobOnCompletion")
    public Boolean killJobOnCompletion;
    public JobManagerTask withKillJobOnCompletion(Boolean killJobOnCompletion) {
        this.killJobOnCompletion = killJobOnCompletion;
        return this;
    }
    
    /**
     * Gets or sets a list of files that Batch will download to the compute node before running the command line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceFiles")
    public ResourceFile[] resourceFiles;
    public JobManagerTask withResourceFiles(ResourceFile[] resourceFiles) {
        this.resourceFiles = resourceFiles;
        return this;
    }
    
    /**
     * Gets or sets whether to run the Job Manager task in elevated mode. The default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runElevated")
    public Boolean runElevated;
    public JobManagerTask withRunElevated(Boolean runElevated) {
        this.runElevated = runElevated;
        return this;
    }
    
    /**
     * Gets or sets whether the Job Manager task requires exclusive use of the compute node where it runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runExclusive")
    public Boolean runExclusive;
    public JobManagerTask withRunExclusive(Boolean runExclusive) {
        this.runExclusive = runExclusive;
        return this;
    }
    
}
