<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * IssuancePolicy - Defines controls over all certificate issuance within a CaPool.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class IssuancePolicy
{
    /**
     * IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IssuanceModes $allowedIssuanceModes
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowedIssuanceModes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\IssuanceModes')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IssuanceModes $allowedIssuanceModes = null;
    
    /**
     * Optional. If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here. Otherwise, any key may be used.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AllowedKeyType> $allowedKeyTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowedKeyTypes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AllowedKeyType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allowedKeyTypes = null;
    
    /**
     * An X509Parameters is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\X509Parameters $baselineValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('baselineValues')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\X509Parameters')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?X509Parameters $baselineValues = null;
    
    /**
     * Describes constraints on a Certificate's Subject and SubjectAltNames.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CertificateIdentityConstraints $identityConstraints
     */
	#[\JMS\Serializer\Annotation\SerializedName('identityConstraints')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CertificateIdentityConstraints')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateIdentityConstraints $identityConstraints = null;
    
    /**
     * Optional. The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it.
     * 
     * @var ?string $maximumLifetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('maximumLifetime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maximumLifetime = null;
    
    /**
     * Describes a set of X.509 extensions that may be part of some certificate issuance controls.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CertificateExtensionConstraints $passthroughExtensions
     */
	#[\JMS\Serializer\Annotation\SerializedName('passthroughExtensions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CertificateExtensionConstraints')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateExtensionConstraints $passthroughExtensions = null;
    
	public function __construct()
	{
		$this->allowedIssuanceModes = null;
		$this->allowedKeyTypes = null;
		$this->baselineValues = null;
		$this->identityConstraints = null;
		$this->maximumLifetime = null;
		$this->passthroughExtensions = null;
	}
}
