/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRetailV2CatalogAttributeInput - Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.
 */
public class GoogleCloudRetailV2CatalogAttributeInput {
    /**
     * If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned. Must be specified, otherwise throws INVALID_FORMAT error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dynamicFacetableOption")
    public GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum dynamicFacetableOption;
    public GoogleCloudRetailV2CatalogAttributeInput withDynamicFacetableOption(GoogleCloudRetailV2CatalogAttributeDynamicFacetableOptionEnum dynamicFacetableOption) {
        this.dynamicFacetableOption = dynamicFacetableOption;
        return this;
    }
    
    /**
     * If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This property only applies to textual custom attributes and requires indexable set to enabled to enable exact-searchable. If unset, the server behavior defaults to EXACT_SEARCHABLE_DISABLED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exactSearchableOption")
    public GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum exactSearchableOption;
    public GoogleCloudRetailV2CatalogAttributeInput withExactSearchableOption(GoogleCloudRetailV2CatalogAttributeExactSearchableOptionEnum exactSearchableOption) {
        this.exactSearchableOption = exactSearchableOption;
        return this;
    }
    
    /**
     * When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search. Must be specified, otherwise throws INVALID_FORMAT error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indexableOption")
    public GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum indexableOption;
    public GoogleCloudRetailV2CatalogAttributeInput withIndexableOption(GoogleCloudRetailV2CatalogAttributeIndexableOptionEnum indexableOption) {
        this.indexableOption = indexableOption;
        return this;
    }
    
    /**
     * Required. Attribute name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. To be indexable, the attribute name can contain only alpha-numeric characters and underscores. For example, an attribute named `attributes.abc_xyz` can be indexed, but an attribute named `attributes.abc-xyz` cannot be indexed. If the attribute key starts with `attributes.`, then the attribute is a custom attribute. Attributes such as `brands`, `patterns`, and `title` are built-in and called system attributes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;
    public GoogleCloudRetailV2CatalogAttributeInput withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * If RETRIEVABLE_ENABLED, attribute values are retrievable in the search results. If unset, the server behavior defaults to RETRIEVABLE_DISABLED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retrievableOption")
    public GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum retrievableOption;
    public GoogleCloudRetailV2CatalogAttributeInput withRetrievableOption(GoogleCloudRetailV2CatalogAttributeRetrievableOptionEnum retrievableOption) {
        this.retrievableOption = retrievableOption;
        return this;
    }
    
    /**
     * When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes. Must be specified, otherwise throws INVALID_FORMAT error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchableOption")
    public GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum searchableOption;
    public GoogleCloudRetailV2CatalogAttributeInput withSearchableOption(GoogleCloudRetailV2CatalogAttributeSearchableOptionEnum searchableOption) {
        this.searchableOption = searchableOption;
        return this;
    }
    
}
