/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The request as defined in OpenApi Spec.
 */
export class LogOperation extends SpeakeasyBase {
  /**
   * The OpenApi Operation Id associated with the request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The OpenApi Operation name associated with the request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

/**
 * Apideck service provider associated with request.
 */
export class LogService extends SpeakeasyBase {
  /**
   * Apideck service provider id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Apideck service provider name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

/**
 * Which Unified Api request was made to.
 */
export enum LogUnifiedApiEnum {
  Crm = "crm",
  Lead = "lead",
  Proxy = "proxy",
  Vault = "vault",
  Accounting = "accounting",
  Hris = "hris",
  Ats = "ats",
  Ecommerce = "ecommerce",
  IssueTracking = "issue-tracking",
  Pos = "pos",
  FileStorage = "file-storage",
  Sms = "sms",
}

export class Log extends SpeakeasyBase {
  /**
   * Indicates if the request was made via REST or Graphql endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_style" })
  apiStyle: string;

  /**
   * The Apideck base URL the request was made to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "base_url" })
  baseUrl: string;

  /**
   * Indicates whether or not this is a child or parent request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "child_request" })
  childRequest: boolean;

  /**
   * The consumer Id associated with the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumer_id" })
  consumerId: string;

  /**
   * The entire execution time in milliseconds it took to call the Apideck service provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration: number;

  /**
   * If error occurred, this is brief explanation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_message" })
  errorMessage?: string;

  /**
   * The entire execution time in milliseconds it took to make the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "execution" })
  execution: number;

  /**
   * When request is a parent request, this indicates if there are child requests associated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_children" })
  hasChildren: boolean;

  /**
   * HTTP Method of request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "http_method" })
  httpMethod: string;

  /**
   * UUID acting as Request Identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Latency added by making this request via Unified Api.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latency" })
  latency: number;

  /**
   * The request as defined in OpenApi Spec.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operation" })
  @Type(() => LogOperation)
  operation: LogOperation;

  /**
   * When request is a child request, this UUID indicates it's parent request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_id" })
  parentId: string;

  /**
   * The path component of the URI the request was made to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  /**
   * Indicates whether the request was made using Apidecks sandbox credentials or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sandbox" })
  sandbox: boolean;

  /**
   * Apideck service provider associated with request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service" })
  @Type(() => LogService)
  service: LogService;

  /**
   * The IP address of the source of the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_ip" })
  sourceIp?: string;

  /**
   * HTTP Status code that was returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_code" })
  statusCode: number;

  /**
   * Whether or not the request was successful.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success: boolean;

  /**
   * ISO Date and time when the request was made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp: string;

  /**
   * Which Unified Api request was made to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unified_api" })
  unifiedApi: LogUnifiedApiEnum;
}
