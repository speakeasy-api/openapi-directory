/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PriceAccuracyRow - A price accuracy row.
 */
public class PriceAccuracyRow {
    /**
     * The number of adults in the occupancy details of the validation query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adultOccupancy")
    public Integer adultOccupancy;
    public PriceAccuracyRow withAdultOccupancy(Integer adultOccupancy) {
        this.adultOccupancy = adultOccupancy;
        return this;
    }
    
    /**
     * True if this row affects the placement of a price. This field has been renamed to \u201cAffects placement\u201d in Hotel Center.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("affectsScore")
    public Boolean affectsScore;
    public PriceAccuracyRow withAffectsScore(Boolean affectsScore) {
        this.affectsScore = affectsScore;
        return this;
    }
    
    /**
     * A price record.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cachedPriceRecord")
    public PriceRecord cachedPriceRecord;
    public PriceAccuracyRow withCachedPriceRecord(PriceRecord cachedPriceRecord) {
        this.cachedPriceRecord = cachedPriceRecord;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkinDate")
    public Date checkinDate;
    public PriceAccuracyRow withCheckinDate(Date checkinDate) {
        this.checkinDate = checkinDate;
        return this;
    }
    
    /**
     * The number of children in the occupancy details of the validation query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("childOccupancy")
    public Integer childOccupancy;
    public PriceAccuracyRow withChildOccupancy(Integer childOccupancy) {
        this.childOccupancy = childOccupancy;
        return this;
    }
    
    /**
     * Time at which an incorrect price is updated to a correct price.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("correctionTime")
    public String correctionTime;
    public PriceAccuracyRow withCorrectionTime(String correctionTime) {
        this.correctionTime = correctionTime;
        return this;
    }
    
    /**
     * The user's device type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceType")
    public PriceAccuracyRowDeviceTypeEnum deviceType;
    public PriceAccuracyRow withDeviceType(PriceAccuracyRowDeviceTypeEnum deviceType) {
        this.deviceType = deviceType;
        return this;
    }
    
    /**
     * A price record.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fetchedPriceRecord")
    public PriceRecord fetchedPriceRecord;
    public PriceAccuracyRow withFetchedPriceRecord(PriceRecord fetchedPriceRecord) {
        this.fetchedPriceRecord = fetchedPriceRecord;
        return this;
    }
    
    /**
     * The domain of the final page from which prices are read.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("finalDomain")
    public String finalDomain;
    public PriceAccuracyRow withFinalDomain(String finalDomain) {
        this.finalDomain = finalDomain;
        return this;
    }
    
    /**
     * Partner-defined hotel ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hotel")
    public String hotel;
    public PriceAccuracyRow withHotel(String hotel) {
        this.hotel = hotel;
        return this;
    }
    
    /**
     * The country of the hotel (based on address).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hotelCountryCode")
    public String hotelCountryCode;
    public PriceAccuracyRow withHotelCountryCode(String hotelCountryCode) {
        this.hotelCountryCode = hotelCountryCode;
        return this;
    }
    
    /**
     * Length of stay.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lengthOfStayDays")
    public Integer lengthOfStayDays;
    public PriceAccuracyRow withLengthOfStayDays(Integer lengthOfStayDays) {
        this.lengthOfStayDays = lengthOfStayDays;
        return this;
    }
    
    /**
     * The reason why the fetched price didn't match the cached price.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mismatchReason")
    public PriceAccuracyRowMismatchReasonEnum mismatchReason;
    public PriceAccuracyRow withMismatchReason(PriceAccuracyRowMismatchReasonEnum mismatchReason) {
        this.mismatchReason = mismatchReason;
        return this;
    }
    
    /**
     * The rate rule of the advertised price for non-public rates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rateRuleId")
    public String rateRuleId;
    public PriceAccuracyRow withRateRuleId(String rateRuleId) {
        this.rateRuleId = rateRuleId;
        return this;
    }
    
    /**
     * Source of the price accuracy signal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signalSource")
    public PriceAccuracyRowSignalSourceEnum signalSource;
    public PriceAccuracyRow withSignalSource(PriceAccuracyRowSignalSourceEnum signalSource) {
        this.signalSource = signalSource;
        return this;
    }
    
    /**
     * Initial URL visited on the partner website.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public PriceAccuracyRow withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The user's region.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userRegionCode")
    public String userRegionCode;
    public PriceAccuracyRow withUserRegionCode(String userRegionCode) {
        this.userRegionCode = userRegionCode;
        return this;
    }
    
}
