// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type KkidChorelistGetSecurity struct {
	AuthKey string `security:"scheme,type=apiKey,subtype=header,name=X-Auth"`
}

// KkidChorelistGetDayEnum - Day of week for chores (Weekly for weekly chores)
type KkidChorelistGetDayEnum string

const (
	KkidChorelistGetDayEnumSunday    KkidChorelistGetDayEnum = "Sunday"
	KkidChorelistGetDayEnumMonday    KkidChorelistGetDayEnum = "Monday"
	KkidChorelistGetDayEnumTuesday   KkidChorelistGetDayEnum = "Tuesday"
	KkidChorelistGetDayEnumWednesday KkidChorelistGetDayEnum = "Wednesday"
	KkidChorelistGetDayEnumThursday  KkidChorelistGetDayEnum = "Thursday"
	KkidChorelistGetDayEnumFriday    KkidChorelistGetDayEnum = "Friday"
	KkidChorelistGetDayEnumSaturday  KkidChorelistGetDayEnum = "Saturday"
	KkidChorelistGetDayEnumWeekly    KkidChorelistGetDayEnum = "Weekly"
)

func (e *KkidChorelistGetDayEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Sunday":
		fallthrough
	case "Monday":
		fallthrough
	case "Tuesday":
		fallthrough
	case "Wednesday":
		fallthrough
	case "Thursday":
		fallthrough
	case "Friday":
		fallthrough
	case "Saturday":
		fallthrough
	case "Weekly":
		*e = KkidChorelistGetDayEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for KkidChorelistGetDayEnum: %s", s)
	}
}

type KkidChorelistGetRequest struct {
	// Filter results by blockDash parameter
	BlockDash *bool `queryParam:"style=form,explode=true,name=blockDash"`
	// Filter results by canSteal parameter
	CanSteal *bool `queryParam:"style=form,explode=true,name=canSteal"`
	// Day of week for chores (Weekly for weekly chores)
	Day *KkidChorelistGetDayEnum `queryParam:"style=form,explode=true,name=day"`
	// include calendar notations (default is false)
	IncludeCalendar *bool `queryParam:"style=form,explode=true,name=includeCalendar"`
	// Username of kid you wish to search
	KidUsername *string `queryParam:"style=form,explode=true,name=kidUsername"`
	// Filter results by optional parameter
	Optional *bool `queryParam:"style=form,explode=true,name=optional"`
	// Status of Chore to search
	Status *string `queryParam:"style=form,explode=true,name=status"`
}

type KkidChorelistGetResponse struct {
	// Method Not Allowed- API user does not have access to use this method
	FourHundredAndFive *shared.FourHundredAndFive
	// API Access Denied! Your API key is invalid, expired, or not supplied!
	FourHundredAndTwelve *shared.FourHundredAndTwelve
	ContentType          string
	StatusCode           int
	RawResponse          *http.Response
	// search results matching criteria
	Chorelist *shared.Chorelist
	// No Data Found.
	Nodata *shared.Nodata
}
