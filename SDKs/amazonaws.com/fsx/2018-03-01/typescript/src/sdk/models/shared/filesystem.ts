/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AdministrativeAction } from "./administrativeaction";
import { FileSystemFailureDetails } from "./filesystemfailuredetails";
import { FileSystemLifecycleEnum } from "./filesystemlifecycleenum";
import { FileSystemTypeEnum } from "./filesystemtypeenum";
import { LustreFileSystemConfiguration } from "./lustrefilesystemconfiguration";
import { OntapFileSystemConfiguration } from "./ontapfilesystemconfiguration";
import { OpenZFSFileSystemConfiguration } from "./openzfsfilesystemconfiguration";
import { StorageTypeEnum } from "./storagetypeenum";
import { Tag } from "./tag";
import { WindowsFileSystemConfiguration } from "./windowsfilesystemconfiguration";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A description of a specific Amazon FSx file system.
 */
export class FileSystem extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AdministrativeAction })
  @Expose({ name: "AdministrativeActions" })
  @Type(() => AdministrativeAction)
  administrativeActions?: AdministrativeAction[];

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DNSName" })
  dnsName?: string;

  /**
   * A structure providing details of any failures that occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FailureDetails" })
  @Type(() => FileSystemFailureDetails)
  failureDetails?: FileSystemFailureDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "FileSystemId" })
  fileSystemId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FileSystemType" })
  fileSystemType?: FileSystemTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "FileSystemTypeVersion" })
  fileSystemTypeVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Lifecycle" })
  lifecycle?: FileSystemLifecycleEnum;

  /**
   * The configuration for the Amazon FSx for Lustre file system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LustreConfiguration" })
  @Type(() => LustreFileSystemConfiguration)
  lustreConfiguration?: LustreFileSystemConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkInterfaceIds" })
  networkInterfaceIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "OntapConfiguration" })
  @Type(() => OntapFileSystemConfiguration)
  ontapConfiguration?: OntapFileSystemConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "OpenZFSConfiguration" })
  @Type(() => OpenZFSFileSystemConfiguration)
  openZFSConfiguration?: OpenZFSFileSystemConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "OwnerId" })
  ownerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceARN" })
  resourceARN?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StorageCapacity" })
  storageCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StorageType" })
  storageType?: StorageTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetIds" })
  subnetIds?: string[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "VpcId" })
  vpcId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WindowsConfiguration" })
  @Type(() => WindowsFileSystemConfiguration)
  windowsConfiguration?: WindowsFileSystemConfiguration;
}
