/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class RegistryCreateApiSpecRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  apiSpecInput: shared.ApiSpecInput;

  /**
   * The api id.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=api" })
  api: string;

  /**
   * Required. The ID to use for the spec, which will become the final component of the spec's resource name. This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/. Following AIP-162, IDs must not have the form of a UUID.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=apiSpecId",
  })
  apiSpecId?: string;

  /**
   * The location id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=location",
  })
  location: string;

  /**
   * The project id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project",
  })
  project: string;

  /**
   * The version id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=version",
  })
  version: string;
}

export class RegistryCreateApiSpecResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  apiSpec?: shared.ApiSpecOutput;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Default error response
   */
  @SpeakeasyMetadata()
  status?: shared.Status;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
