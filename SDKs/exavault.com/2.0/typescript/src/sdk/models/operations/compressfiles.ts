/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CompressFilesCompressFilesRequestBody extends SpeakeasyBase {
  /**
   * Name of the zip archive to create. If left blank, current date will be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archiveName" })
  archiveName?: string;

  /**
   * Resource identifier of the folder where zip archive should be created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentResource" })
  parentResource?: string;

  /**
   * Resource identifiers for file(s)/folder(s) to include in new zip file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resources" })
  resources: string[];
}

export class CompressFilesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CompressFilesCompressFilesRequestBody;

  /**
   * Access token required to make the API call.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-access-token",
  })
  evAccessToken: string;

  /**
   * API Key required to make the API call.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-api-key",
  })
  evApiKey: string;
}

export class CompressFilesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful Operation
   */
  @SpeakeasyMetadata()
  resourceResponse?: shared.ResourceResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
