"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timedto as shared_timedto
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProviderInvoiceDatesDTO:
    
    draft_date: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('draftDate'), 'exclude': lambda f: f is None }})  
    final_date: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finalDate'), 'exclude': lambda f: f is None }})  
    invoice_uploaded_date: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceUploadedDate'), 'exclude': lambda f: f is None }})  
    payment_due_date: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentDueDate'), 'exclude': lambda f: f is None }})  
    