"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Facets = exports.FacetsQueryArgs = exports.FacetsQueryArgsSelectedFacets = exports.FacetsFacets = exports.FacetsFacetsValues = exports.FacetsFacetsTypeEnum = exports.FacetsBreadcrumb = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var FacetsBreadcrumb = /** @class */ (function (_super) {
    __extends(FacetsBreadcrumb, _super);
    function FacetsBreadcrumb() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "href" }),
        __metadata("design:type", String)
    ], FacetsBreadcrumb.prototype, "href", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], FacetsBreadcrumb.prototype, "name", void 0);
    return FacetsBreadcrumb;
}(utils_1.SpeakeasyBase));
exports.FacetsBreadcrumb = FacetsBreadcrumb;
/**
 * Facet type
 *
 * @remarks
 *  - `TEXT` - The value is a simple text.
 *  - `PRICERANGE` - The value contains the property `range` representing the minimum and the maximum price for the query.
 *
 */
var FacetsFacetsTypeEnum;
(function (FacetsFacetsTypeEnum) {
    FacetsFacetsTypeEnum["Text"] = "TEXT";
    FacetsFacetsTypeEnum["Pricerange"] = "PRICERANGE";
})(FacetsFacetsTypeEnum = exports.FacetsFacetsTypeEnum || (exports.FacetsFacetsTypeEnum = {}));
var FacetsFacetsValues = /** @class */ (function (_super) {
    __extends(FacetsFacetsValues, _super);
    function FacetsFacetsValues() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], FacetsFacetsValues.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], FacetsFacetsValues.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], FacetsFacetsValues.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quantity" }),
        __metadata("design:type", Number)
    ], FacetsFacetsValues.prototype, "quantity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selected" }),
        __metadata("design:type", Boolean)
    ], FacetsFacetsValues.prototype, "selected", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], FacetsFacetsValues.prototype, "value", void 0);
    return FacetsFacetsValues;
}(utils_1.SpeakeasyBase));
exports.FacetsFacetsValues = FacetsFacetsValues;
var FacetsFacets = /** @class */ (function (_super) {
    __extends(FacetsFacets, _super);
    function FacetsFacets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hidden" }),
        __metadata("design:type", Boolean)
    ], FacetsFacets.prototype, "hidden", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], FacetsFacets.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quantity" }),
        __metadata("design:type", Number)
    ], FacetsFacets.prototype, "quantity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], FacetsFacets.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: FacetsFacetsValues }),
        (0, class_transformer_1.Expose)({ name: "values" }),
        (0, class_transformer_1.Type)(function () { return FacetsFacetsValues; }),
        __metadata("design:type", Array)
    ], FacetsFacets.prototype, "values", void 0);
    return FacetsFacets;
}(utils_1.SpeakeasyBase));
exports.FacetsFacets = FacetsFacets;
var FacetsQueryArgsSelectedFacets = /** @class */ (function (_super) {
    __extends(FacetsQueryArgsSelectedFacets, _super);
    function FacetsQueryArgsSelectedFacets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], FacetsQueryArgsSelectedFacets.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], FacetsQueryArgsSelectedFacets.prototype, "value", void 0);
    return FacetsQueryArgsSelectedFacets;
}(utils_1.SpeakeasyBase));
exports.FacetsQueryArgsSelectedFacets = FacetsQueryArgsSelectedFacets;
/**
 * Term and facets used in the query
 */
var FacetsQueryArgs = /** @class */ (function (_super) {
    __extends(FacetsQueryArgs, _super);
    function FacetsQueryArgs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "query" }),
        __metadata("design:type", String)
    ], FacetsQueryArgs.prototype, "query", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: FacetsQueryArgsSelectedFacets }),
        (0, class_transformer_1.Expose)({ name: "selectedFacets" }),
        (0, class_transformer_1.Type)(function () { return FacetsQueryArgsSelectedFacets; }),
        __metadata("design:type", Array)
    ], FacetsQueryArgs.prototype, "selectedFacets", void 0);
    return FacetsQueryArgs;
}(utils_1.SpeakeasyBase));
exports.FacetsQueryArgs = FacetsQueryArgs;
/**
 * List of facets for the given query.
 */
var Facets = /** @class */ (function (_super) {
    __extends(Facets, _super);
    function Facets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: FacetsBreadcrumb }),
        (0, class_transformer_1.Expose)({ name: "breadcrumb" }),
        (0, class_transformer_1.Type)(function () { return FacetsBreadcrumb; }),
        __metadata("design:type", Array)
    ], Facets.prototype, "breadcrumb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: FacetsFacets }),
        (0, class_transformer_1.Expose)({ name: "facets" }),
        (0, class_transformer_1.Type)(function () { return FacetsFacets; }),
        __metadata("design:type", Array)
    ], Facets.prototype, "facets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "queryArgs" }),
        (0, class_transformer_1.Type)(function () { return FacetsQueryArgs; }),
        __metadata("design:type", FacetsQueryArgs)
    ], Facets.prototype, "queryArgs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sampling" }),
        __metadata("design:type", Boolean)
    ], Facets.prototype, "sampling", void 0);
    return Facets;
}(utils_1.SpeakeasyBase));
exports.Facets = Facets;
