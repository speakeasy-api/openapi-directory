// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetDownloadURLForLayerXAmzTargetEnum
type GetDownloadURLForLayerXAmzTargetEnum string

const (
	GetDownloadURLForLayerXAmzTargetEnumAmazonEc2ContainerRegistryV20150921GetDownloadURLForLayer GetDownloadURLForLayerXAmzTargetEnum = "AmazonEC2ContainerRegistry_V20150921.GetDownloadUrlForLayer"
)

func (e GetDownloadURLForLayerXAmzTargetEnum) ToPointer() *GetDownloadURLForLayerXAmzTargetEnum {
	return &e
}

func (e *GetDownloadURLForLayerXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonEC2ContainerRegistry_V20150921.GetDownloadUrlForLayer":
		*e = GetDownloadURLForLayerXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDownloadURLForLayerXAmzTargetEnum: %v", v)
	}
}

type GetDownloadURLForLayerRequest struct {
	GetDownloadURLForLayerRequest shared.GetDownloadURLForLayerRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    GetDownloadURLForLayerXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetDownloadURLForLayerResponse struct {
	ContentType string
	// Success
	GetDownloadURLForLayerResponse *shared.GetDownloadURLForLayerResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// LayerInaccessibleException
	LayerInaccessibleException interface{}
	// LayersNotFoundException
	LayersNotFoundException interface{}
	// RepositoryNotFoundException
	RepositoryNotFoundException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
}
