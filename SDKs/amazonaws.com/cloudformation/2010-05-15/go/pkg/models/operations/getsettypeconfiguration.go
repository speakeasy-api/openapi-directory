// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETSetTypeConfigurationActionEnum
type GETSetTypeConfigurationActionEnum string

const (
	GETSetTypeConfigurationActionEnumSetTypeConfiguration GETSetTypeConfigurationActionEnum = "SetTypeConfiguration"
)

func (e *GETSetTypeConfigurationActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SetTypeConfiguration":
		*e = GETSetTypeConfigurationActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSetTypeConfigurationActionEnum: %s", s)
	}
}

// GETSetTypeConfigurationTypeEnum - <p>The type of extension.</p> <p>Conditional: You must specify <code>ConfigurationArn</code>, or <code>Type</code> and <code>TypeName</code>.</p>
type GETSetTypeConfigurationTypeEnum string

const (
	GETSetTypeConfigurationTypeEnumResource GETSetTypeConfigurationTypeEnum = "RESOURCE"
	GETSetTypeConfigurationTypeEnumModule   GETSetTypeConfigurationTypeEnum = "MODULE"
	GETSetTypeConfigurationTypeEnumHook     GETSetTypeConfigurationTypeEnum = "HOOK"
)

func (e *GETSetTypeConfigurationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RESOURCE":
		fallthrough
	case "MODULE":
		fallthrough
	case "HOOK":
		*e = GETSetTypeConfigurationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSetTypeConfigurationTypeEnum: %s", s)
	}
}

// GETSetTypeConfigurationVersionEnum
type GETSetTypeConfigurationVersionEnum string

const (
	GETSetTypeConfigurationVersionEnumTwoThousandAndTen0515 GETSetTypeConfigurationVersionEnum = "2010-05-15"
)

func (e *GETSetTypeConfigurationVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = GETSetTypeConfigurationVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSetTypeConfigurationVersionEnum: %s", s)
	}
}

type GETSetTypeConfigurationQueryParams struct {
	Action GETSetTypeConfigurationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The configuration data for the extension, in this account and region.</p> <p>The configuration data must be formatted as JSON, and validate against the schema returned in the <code>ConfigurationSchema</code> response element of <a href="AWSCloudFormation/latest/APIReference/API_DescribeType.html">API_DescribeType</a>. For more information, see <a href="https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/resource-type-model.html#resource-type-howto-configuration">Defining account-level configuration data for an extension</a> in the <i>CloudFormation CLI User Guide</i>.</p>
	Configuration string `queryParam:"style=form,explode=true,name=Configuration"`
	// <p>An alias by which to refer to this extension configuration data.</p> <p>Conditional: Specifying a configuration alias is required when setting a configuration for a resource type extension.</p>
	ConfigurationAlias *string `queryParam:"style=form,explode=true,name=ConfigurationAlias"`
	// <p>The type of extension.</p> <p>Conditional: You must specify <code>ConfigurationArn</code>, or <code>Type</code> and <code>TypeName</code>.</p>
	Type *GETSetTypeConfigurationTypeEnum `queryParam:"style=form,explode=true,name=Type"`
	// <p>The Amazon Resource Name (ARN) for the extension, in this account and region.</p> <p>For public extensions, this will be the ARN assigned when you <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_ActivateType.html">activate the type</a> in this account and region. For private extensions, this will be the ARN assigned when you <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_RegisterType.html">register the type</a> in this account and region.</p> <p>Do not include the extension versions suffix at the end of the ARN. You can set the configuration for an extension, but not for a specific extension version.</p>
	TypeArn *string `queryParam:"style=form,explode=true,name=TypeArn"`
	// <p>The name of the extension.</p> <p>Conditional: You must specify <code>ConfigurationArn</code>, or <code>Type</code> and <code>TypeName</code>.</p>
	TypeName *string                            `queryParam:"style=form,explode=true,name=TypeName"`
	Version  GETSetTypeConfigurationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETSetTypeConfigurationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETSetTypeConfigurationRequest struct {
	QueryParams GETSetTypeConfigurationQueryParams
	Headers     GETSetTypeConfigurationHeaders
}

type GETSetTypeConfigurationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
