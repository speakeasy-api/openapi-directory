<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia - Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image Types * image/jpeg * image/jpg' * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia
{
    /**
     * Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL.
     * 
     * @var ?string $fileUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fileUri = null;
    
    /**
     * Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaHeightEnum $height
     */
	#[\JMS\Serializer\Annotation\SerializedName('height')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaHeightEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMediaHeightEnum $height = null;
    
    /**
     * Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user's device downloads the file. Depending on the user's setting, the file may not download automatically and may require the user to tap a download button.
     * 
     * @var ?string $thumbnailUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('thumbnailUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $thumbnailUri = null;
    
	public function __construct()
	{
		$this->fileUri = null;
		$this->height = null;
		$this->thumbnailUri = null;
	}
}
