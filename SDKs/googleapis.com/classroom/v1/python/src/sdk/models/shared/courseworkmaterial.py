"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import individualstudentsoptions as shared_individualstudentsoptions
from ..shared import material as shared_material
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CourseWorkMaterialAssigneeModeEnum(str, Enum):
    r"""Assignee mode of the course work material. If unspecified, the default value is `ALL_STUDENTS`."""
    ASSIGNEE_MODE_UNSPECIFIED = 'ASSIGNEE_MODE_UNSPECIFIED'
    ALL_STUDENTS = 'ALL_STUDENTS'
    INDIVIDUAL_STUDENTS = 'INDIVIDUAL_STUDENTS'

class CourseWorkMaterialStateEnum(str, Enum):
    r"""Status of this course work material. If unspecified, the default state is `DRAFT`."""
    COURSEWORK_MATERIAL_STATE_UNSPECIFIED = 'COURSEWORK_MATERIAL_STATE_UNSPECIFIED'
    PUBLISHED = 'PUBLISHED'
    DRAFT = 'DRAFT'
    DELETED = 'DELETED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CourseWorkMaterial:
    r"""Course work material created by a teacher for students of the course"""
    
    alternate_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alternateLink'), 'exclude': lambda f: f is None }})
    r"""Absolute link to this course work material in the Classroom web UI. This is only populated if `state` is `PUBLISHED`. Read-only."""  
    assignee_mode: Optional[CourseWorkMaterialAssigneeModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assigneeMode'), 'exclude': lambda f: f is None }})
    r"""Assignee mode of the course work material. If unspecified, the default value is `ALL_STUDENTS`."""  
    course_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('courseId'), 'exclude': lambda f: f is None }})
    r"""Identifier of the course. Read-only."""  
    creation_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationTime'), 'exclude': lambda f: f is None }})
    r"""Timestamp when this course work material was created. Read-only."""  
    creator_user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creatorUserId'), 'exclude': lambda f: f is None }})
    r"""Identifier for the user that created the course work material. Read-only."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional description of this course work material. The text must be a valid UTF-8 string containing no more than 30,000 characters."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Classroom-assigned identifier of this course work material, unique per course. Read-only."""  
    individual_students_options: Optional[shared_individualstudentsoptions.IndividualStudentsOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('individualStudentsOptions'), 'exclude': lambda f: f is None }})
    r"""Assignee details about a coursework/announcement. This field is set if and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`."""  
    materials: Optional[list[shared_material.Material]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('materials'), 'exclude': lambda f: f is None }})
    r"""Additional materials. A course work material must have no more than 20 material items."""  
    scheduled_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduledTime'), 'exclude': lambda f: f is None }})
    r"""Optional timestamp when this course work material is scheduled to be published."""  
    state: Optional[CourseWorkMaterialStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Status of this course work material. If unspecified, the default state is `DRAFT`."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Title of this course work material. The title must be a valid UTF-8 string containing between 1 and 3000 characters."""  
    topic_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('topicId'), 'exclude': lambda f: f is None }})
    r"""Identifier for the topic that this course work material is associated with. Must match an existing topic in the course."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Timestamp of the most recent change to this course work material. Read-only."""  
    