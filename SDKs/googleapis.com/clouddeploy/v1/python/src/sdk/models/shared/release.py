"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import buildartifact as shared_buildartifact
from ..shared import deliverypipeline as shared_deliverypipeline
from ..shared import releasecondition as shared_releasecondition
from ..shared import target as shared_target
from ..shared import targetartifact as shared_targetartifact
from ..shared import targetrender as shared_targetrender
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ReleaseRenderStateEnum(str, Enum):
    r"""Output only. Current state of the render operation."""
    RENDER_STATE_UNSPECIFIED = 'RENDER_STATE_UNSPECIFIED'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    IN_PROGRESS = 'IN_PROGRESS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Release:
    r"""A `Release` resource in the Google Cloud Deploy API. A `Release` defines a specific Skaffold configuration instance that can be deployed."""
    
    abandoned: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('abandoned'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether this is an abandoned release."""  
    annotations: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotations'), 'exclude': lambda f: f is None }})
    r"""User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations."""  
    build_artifacts: Optional[list[shared_buildartifact.BuildArtifact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buildArtifacts'), 'exclude': lambda f: f is None }})
    r"""List of artifacts to pass through to Skaffold command."""  
    condition: Optional[shared_releasecondition.ReleaseCondition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition'), 'exclude': lambda f: f is None }})
    r"""ReleaseCondition contains all conditions relevant to a Release."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the `Release` was created."""  
    delivery_pipeline_snapshot: Optional[shared_deliverypipeline.DeliveryPipeline] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryPipelineSnapshot'), 'exclude': lambda f: f is None }})
    r"""A `DeliveryPipeline` resource in the Google Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the `Release`. Max length is 255 characters."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Optional. Name of the `Release`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/a-z{0,62}."""  
    render_end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renderEndTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the render completed."""  
    render_start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renderStartTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the render began."""  
    render_state: Optional[ReleaseRenderStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renderState'), 'exclude': lambda f: f is None }})
    r"""Output only. Current state of the render operation."""  
    skaffold_config_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skaffoldConfigPath'), 'exclude': lambda f: f is None }})
    r"""Filepath of the Skaffold config inside of the config URI."""  
    skaffold_config_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skaffoldConfigUri'), 'exclude': lambda f: f is None }})
    r"""Cloud Storage URI of tar.gz archive containing Skaffold configuration."""  
    skaffold_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skaffoldVersion'), 'exclude': lambda f: f is None }})
    r"""The Skaffold version to use when operating on this release, such as \\"1.20.0\\". Not all versions are valid; Google Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used."""  
    target_artifacts: Optional[dict[str, shared_targetartifact.TargetArtifact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetArtifacts'), 'exclude': lambda f: f is None }})
    r"""Output only. Map from target ID to the target artifacts created during the render operation."""  
    target_renders: Optional[dict[str, shared_targetrender.TargetRender]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetRenders'), 'exclude': lambda f: f is None }})
    r"""Output only. Map from target ID to details of the render operation for that target."""  
    target_snapshots: Optional[list[shared_target.Target]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetSnapshots'), 'exclude': lambda f: f is None }})
    r"""Output only. Snapshot of the targets taken at release creation time."""  
    uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uid'), 'exclude': lambda f: f is None }})
    r"""Output only. Unique identifier of the `Release`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReleaseInput:
    r"""A `Release` resource in the Google Cloud Deploy API. A `Release` defines a specific Skaffold configuration instance that can be deployed."""
    
    annotations: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotations'), 'exclude': lambda f: f is None }})
    r"""User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations."""  
    build_artifacts: Optional[list[shared_buildartifact.BuildArtifact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buildArtifacts'), 'exclude': lambda f: f is None }})
    r"""List of artifacts to pass through to Skaffold command."""  
    condition: Optional[shared_releasecondition.ReleaseCondition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition'), 'exclude': lambda f: f is None }})
    r"""ReleaseCondition contains all conditions relevant to a Release."""  
    delivery_pipeline_snapshot: Optional[shared_deliverypipeline.DeliveryPipelineInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryPipelineSnapshot'), 'exclude': lambda f: f is None }})
    r"""A `DeliveryPipeline` resource in the Google Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the `Release`. Max length is 255 characters."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Optional. Name of the `Release`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/a-z{0,62}."""  
    skaffold_config_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skaffoldConfigPath'), 'exclude': lambda f: f is None }})
    r"""Filepath of the Skaffold config inside of the config URI."""  
    skaffold_config_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skaffoldConfigUri'), 'exclude': lambda f: f is None }})
    r"""Cloud Storage URI of tar.gz archive containing Skaffold configuration."""  
    skaffold_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skaffoldVersion'), 'exclude': lambda f: f is None }})
    r"""The Skaffold version to use when operating on this release, such as \\"1.20.0\\". Not all versions are valid; Google Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used."""  
    