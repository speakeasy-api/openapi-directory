"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceCode:
    
    product_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('product_type') }})
    r"""The targeting product type of the device code."""  
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""The unique code that can be used to login."""  
    created_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'exclude': lambda f: f is None }})
    r"""When this DeviceCode was created. Timestamp in RFC 3339 format."""  
    device_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device_id'), 'exclude': lambda f: f is None }})
    r"""The unique id of the device that used this code. Populated when the device is paired up."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique id for this device code."""  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location_id'), 'exclude': lambda f: f is None }})
    r"""The location assigned to this code."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""An optional user-defined name for the device code."""  
    pair_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pair_by'), 'exclude': lambda f: f is None }})
    r"""When this DeviceCode will expire and no longer login. Timestamp in RFC 3339 format."""  
    paired_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paired_at'), 'exclude': lambda f: f is None }})
    r"""When this DeviceCode was paired. Timestamp in RFC 3339 format."""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The pairing status of the device code."""  
    status_changed_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status_changed_at'), 'exclude': lambda f: f is None }})
    r"""When this DeviceCode's status was last changed. Timestamp in RFC 3339 format."""  
    