// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type HeaderEnumEnum string

const (
	HeaderEnumEnumAccept                    HeaderEnumEnum = "Accept"
	HeaderEnumEnumAcceptCharset             HeaderEnumEnum = "Accept-Charset"
	HeaderEnumEnumAcceptDatetime            HeaderEnumEnum = "Accept-Datetime"
	HeaderEnumEnumAcceptEncoding            HeaderEnumEnum = "Accept-Encoding"
	HeaderEnumEnumAcceptLanguage            HeaderEnumEnum = "Accept-Language"
	HeaderEnumEnumAuthorization             HeaderEnumEnum = "Authorization"
	HeaderEnumEnumCloudFrontForwardedProto  HeaderEnumEnum = "CloudFront-Forwarded-Proto"
	HeaderEnumEnumCloudFrontIsDesktopViewer HeaderEnumEnum = "CloudFront-Is-Desktop-Viewer"
	HeaderEnumEnumCloudFrontIsMobileViewer  HeaderEnumEnum = "CloudFront-Is-Mobile-Viewer"
	HeaderEnumEnumCloudFrontIsSmartTvViewer HeaderEnumEnum = "CloudFront-Is-SmartTV-Viewer"
	HeaderEnumEnumCloudFrontIsTabletViewer  HeaderEnumEnum = "CloudFront-Is-Tablet-Viewer"
	HeaderEnumEnumCloudFrontViewerCountry   HeaderEnumEnum = "CloudFront-Viewer-Country"
	HeaderEnumEnumHost                      HeaderEnumEnum = "Host"
	HeaderEnumEnumOrigin                    HeaderEnumEnum = "Origin"
	HeaderEnumEnumReferer                   HeaderEnumEnum = "Referer"
)

func (e HeaderEnumEnum) ToPointer() *HeaderEnumEnum {
	return &e
}

func (e *HeaderEnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Accept":
		fallthrough
	case "Accept-Charset":
		fallthrough
	case "Accept-Datetime":
		fallthrough
	case "Accept-Encoding":
		fallthrough
	case "Accept-Language":
		fallthrough
	case "Authorization":
		fallthrough
	case "CloudFront-Forwarded-Proto":
		fallthrough
	case "CloudFront-Is-Desktop-Viewer":
		fallthrough
	case "CloudFront-Is-Mobile-Viewer":
		fallthrough
	case "CloudFront-Is-SmartTV-Viewer":
		fallthrough
	case "CloudFront-Is-Tablet-Viewer":
		fallthrough
	case "CloudFront-Viewer-Country":
		fallthrough
	case "Host":
		fallthrough
	case "Origin":
		fallthrough
	case "Referer":
		*e = HeaderEnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HeaderEnumEnum: %v", v)
	}
}
