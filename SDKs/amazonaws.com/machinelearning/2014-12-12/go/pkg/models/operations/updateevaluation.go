// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateEvaluationXAmzTargetEnum
type UpdateEvaluationXAmzTargetEnum string

const (
	UpdateEvaluationXAmzTargetEnumAmazonMl20141212UpdateEvaluation UpdateEvaluationXAmzTargetEnum = "AmazonML_20141212.UpdateEvaluation"
)

func (e *UpdateEvaluationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonML_20141212.UpdateEvaluation":
		*e = UpdateEvaluationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateEvaluationXAmzTargetEnum: %s", s)
	}
}

type UpdateEvaluationRequest struct {
	UpdateEvaluationInput shared.UpdateEvaluationInput   `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            UpdateEvaluationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateEvaluationResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateEvaluationOutput *shared.UpdateEvaluationOutput
}
