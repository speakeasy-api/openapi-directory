/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleFirestoreAdminV1beta2IndexField } from "./googlefirestoreadminv1beta2indexfield";
import { Expose, Type } from "class-transformer";

/**
 * Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index.
 */
export enum GoogleFirestoreAdminV1beta2IndexQueryScopeEnum {
  QueryScopeUnspecified = "QUERY_SCOPE_UNSPECIFIED",
  Collection = "COLLECTION",
  CollectionGroup = "COLLECTION_GROUP",
}

/**
 * Output only. The serving state of the index.
 */
export enum GoogleFirestoreAdminV1beta2IndexStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Creating = "CREATING",
  Ready = "READY",
  NeedsRepair = "NEEDS_REPAIR",
}

/**
 * Cloud Firestore indexes enable simple and complex queries against documents in a database.
 */
export class GoogleFirestoreAdminV1beta2Index extends SpeakeasyBase {
  /**
   * The fields supported by this index. For composite indexes, this is always 2 or more fields. The last field entry is always for the field path `__name__`. If, on creation, `__name__` was not specified as the last field, it will be added automatically with the same direction as that of the last field defined. If the final field in a composite index is not directional, the `__name__` will be ordered ASCENDING (unless explicitly specified). For single field indexes, this will always be exactly one entry with a field path equal to the field path of the associated field.
   */
  @SpeakeasyMetadata({ elemType: GoogleFirestoreAdminV1beta2IndexField })
  @Expose({ name: "fields" })
  @Type(() => GoogleFirestoreAdminV1beta2IndexField)
  fields?: GoogleFirestoreAdminV1beta2IndexField[];

  /**
   * Output only. A server defined name for this index. The form of this name for composite indexes will be: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}` For single field indexes, this field will be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryScope" })
  queryScope?: GoogleFirestoreAdminV1beta2IndexQueryScopeEnum;

  /**
   * Output only. The serving state of the index.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: GoogleFirestoreAdminV1beta2IndexStateEnum;
}
