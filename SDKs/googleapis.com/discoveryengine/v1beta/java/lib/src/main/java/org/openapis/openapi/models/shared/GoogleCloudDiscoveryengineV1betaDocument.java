/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDiscoveryengineV1betaDocument - Document captures all raw metadata information of items to be recommended or searched.
 */
public class GoogleCloudDiscoveryengineV1betaDocument {
    /**
     * Immutable. The identifier of the document. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public GoogleCloudDiscoveryengineV1betaDocument withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The JSON string representation of the document. It should conform to the registered Schema.schema or an `INVALID_ARGUMENT` error is thrown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jsonData")
    public String jsonData;

    public GoogleCloudDiscoveryengineV1betaDocument withJsonData(String jsonData) {
        this.jsonData = jsonData;
        return this;
    }
    
    /**
     * Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleCloudDiscoveryengineV1betaDocument withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The identifier of the parent document. Currently supports at most two level document hierarchy. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentDocumentId")
    public String parentDocumentId;

    public GoogleCloudDiscoveryengineV1betaDocument withParentDocumentId(String parentDocumentId) {
        this.parentDocumentId = parentDocumentId;
        return this;
    }
    
    /**
     * The identifier of the schema located in the same data store.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schemaId")
    public String schemaId;

    public GoogleCloudDiscoveryengineV1betaDocument withSchemaId(String schemaId) {
        this.schemaId = schemaId;
        return this;
    }
    
    /**
     * The structured JSON data for the document. It should conform to the registered Schema.schema or an `INVALID_ARGUMENT` error is thrown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("structData")
    public java.util.Map<String, Object> structData;

    public GoogleCloudDiscoveryengineV1betaDocument withStructData(java.util.Map<String, Object> structData) {
        this.structData = structData;
        return this;
    }
    
    public GoogleCloudDiscoveryengineV1betaDocument(){}
}
