// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SoftwareRecipeStepRunScriptInterpreterEnum - The script interpreter to use to run the script. If no interpreter is specified the script is executed directly, which likely only succeed for scripts with [shebang lines](https://en.wikipedia.org/wiki/Shebang_\(Unix\)).
type SoftwareRecipeStepRunScriptInterpreterEnum string

const (
	SoftwareRecipeStepRunScriptInterpreterEnumInterpreterUnspecified SoftwareRecipeStepRunScriptInterpreterEnum = "INTERPRETER_UNSPECIFIED"
	SoftwareRecipeStepRunScriptInterpreterEnumShell                  SoftwareRecipeStepRunScriptInterpreterEnum = "SHELL"
	SoftwareRecipeStepRunScriptInterpreterEnumPowershell             SoftwareRecipeStepRunScriptInterpreterEnum = "POWERSHELL"
)

func (e *SoftwareRecipeStepRunScriptInterpreterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INTERPRETER_UNSPECIFIED":
		fallthrough
	case "SHELL":
		fallthrough
	case "POWERSHELL":
		*e = SoftwareRecipeStepRunScriptInterpreterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SoftwareRecipeStepRunScriptInterpreterEnum: %s", s)
	}
}

// SoftwareRecipeStepRunScript - Runs a script through an interpreter.
type SoftwareRecipeStepRunScript struct {
	// Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
	AllowedExitCodes []int `json:"allowedExitCodes,omitempty"`
	// The script interpreter to use to run the script. If no interpreter is specified the script is executed directly, which likely only succeed for scripts with [shebang lines](https://en.wikipedia.org/wiki/Shebang_\(Unix\)).
	Interpreter *SoftwareRecipeStepRunScriptInterpreterEnum `json:"interpreter,omitempty"`
	// Required. The shell script to be executed.
	Script *string `json:"script,omitempty"`
}
