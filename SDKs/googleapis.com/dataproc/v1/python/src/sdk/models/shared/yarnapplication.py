"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class YarnApplicationStateEnum(str, Enum):
    r"""Required. The application state."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    NEW = 'NEW'
    NEW_SAVING = 'NEW_SAVING'
    SUBMITTED = 'SUBMITTED'
    ACCEPTED = 'ACCEPTED'
    RUNNING = 'RUNNING'
    FINISHED = 'FINISHED'
    FAILED = 'FAILED'
    KILLED = 'KILLED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class YarnApplication:
    r"""A YARN application created by a job. Application information is a subset of org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto.Beta Feature: This report is available for testing purposes only. It may be changed before final release."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. The application name."""  
    progress: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('progress'), 'exclude': lambda f: f is None }})
    r"""Required. The numerical progress of the application, from 1 to 100."""  
    state: Optional[YarnApplicationStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Required. The application state."""  
    tracking_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trackingUrl'), 'exclude': lambda f: f is None }})
    r"""Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access."""  
    