// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NameGenderEnum - A person's gender (can be unknown).
type NameGenderEnum string

const (
	NameGenderEnumMale    NameGenderEnum = "MALE"
	NameGenderEnumFemale  NameGenderEnum = "FEMALE"
	NameGenderEnumUnknown NameGenderEnum = "UNKNOWN"
)

func (e *NameGenderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MALE":
		fallthrough
	case "FEMALE":
		fallthrough
	case "UNKNOWN":
		*e = NameGenderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NameGenderEnum: %s", s)
	}
}

type Name struct {
	// A person's first name.
	FirstName string `json:"firstName"`
	// A person's gender (can be unknown).
	Gender NameGenderEnum `json:"gender"`
	// A person name's infix, if applicable. Maximum length: 20 characters.
	Infix *string `json:"infix,omitempty"`
	// A person's last name.
	LastName string `json:"lastName"`
}
