// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum string

const (
	GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnumI386     GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum = "i386"
	GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnumX8664    GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum = "x86_64"
	GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnumArm64    GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum = "arm64"
	GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnumX8664Mac GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum = "x86_64_mac"
	GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnumArm64Mac GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum = "arm64_mac"
)

func (e *GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "i386":
		fallthrough
	case "x86_64":
		fallthrough
	case "arm64":
		fallthrough
	case "x86_64_mac":
		fallthrough
	case "arm64_mac":
		*e = GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum: %s", s)
	}
}

type GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnum string

const (
	GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnumHvm         GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnum = "hvm"
	GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnumParavirtual GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnum = "paravirtual"
)

func (e *GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "hvm":
		fallthrough
	case "paravirtual":
		*e = GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnum: %s", s)
	}
}

type GetInstanceTypesFromInstanceRequirementsRequest struct {
	ArchitectureTypes    []GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum
	DryRun               *bool
	InstanceRequirements InstanceRequirementsRequest
	MaxResults           *int64
	NextToken            *string
	VirtualizationTypes  []GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnum
}
