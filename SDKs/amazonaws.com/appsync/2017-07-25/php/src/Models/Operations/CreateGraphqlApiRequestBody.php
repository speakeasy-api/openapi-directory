<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateGraphqlApiRequestBody
{
    /**
     * A list of additional authentication providers for the <code>GraphqlApi</code> API.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AdditionalAuthenticationProvider> $additionalAuthenticationProviders
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalAuthenticationProviders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AdditionalAuthenticationProvider>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalAuthenticationProviders = null;
    
    /**
     * The authentication type: API key, Identity and Access Management (IAM), OpenID Connect (OIDC), Amazon Cognito user pools, or Lambda.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyAuthenticationTypeEnum $authenticationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('authenticationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyAuthenticationTypeEnum>')]
    public CreateGraphqlApiRequestBodyAuthenticationTypeEnum $authenticationType;
    
    /**
     * A <code>LambdaAuthorizerConfig</code> specifies how to authorize AppSync API access when using the <code>AWS_LAMBDA</code> authorizer mode. Be aware that an AppSync API can have only one Lambda authorizer configured at a time.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyLambdaAuthorizerConfig $lambdaAuthorizerConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('lambdaAuthorizerConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyLambdaAuthorizerConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateGraphqlApiRequestBodyLambdaAuthorizerConfig $lambdaAuthorizerConfig = null;
    
    /**
     * The Amazon CloudWatch Logs configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyLogConfig $logConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('logConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyLogConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateGraphqlApiRequestBodyLogConfig $logConfig = null;
    
    /**
     * A user-supplied name for the <code>GraphqlApi</code>.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Describes an OpenID Connect (OIDC) configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyOpenIDConnectConfig $openIDConnectConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('openIDConnectConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyOpenIDConnectConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateGraphqlApiRequestBodyOpenIDConnectConfig $openIDConnectConfig = null;
    
    /**
     * A map with keys of <code>TagKey</code> objects and values of <code>TagValue</code> objects.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * Describes an Amazon Cognito user pool configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyUserPoolConfig $userPoolConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('userPoolConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyUserPoolConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateGraphqlApiRequestBodyUserPoolConfig $userPoolConfig = null;
    
    /**
     * A flag indicating whether to use X-Ray tracing for the <code>GraphqlApi</code>.
     * 
     * @var ?bool $xrayEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('xrayEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $xrayEnabled = null;
    
	public function __construct()
	{
		$this->additionalAuthenticationProviders = null;
		$this->authenticationType = \OpenAPI\OpenAPI\Models\Operations\CreateGraphqlApiRequestBodyAuthenticationTypeEnum::API_KEY;
		$this->lambdaAuthorizerConfig = null;
		$this->logConfig = null;
		$this->name = "";
		$this->openIDConnectConfig = null;
		$this->tags = null;
		$this->userPoolConfig = null;
		$this->xrayEnabled = null;
	}
}
