/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class NetworkAttributes {
    /**
     * The copyright of the network
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("copyright")
    public String copyright;

    public NetworkAttributes withCopyright(String copyright) {
        this.copyright = copyright;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public NetworkAttributes withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The description of the network eventually in HTML format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public NetworkAttributes withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Determines whether `description` is in HTML format or plain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description_is_html")
    public Boolean descriptionIsHtml;

    public NetworkAttributes withDescriptionIsHtml(Boolean descriptionIsHtml) {
        this.descriptionIsHtml = descriptionIsHtml;
        return this;
    }
    
    /**
     * The description with all HTML markup removed. If the description does not contain markup
     * this is identitcal to `description`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description_plain")
    public String descriptionPlain;

    public NetworkAttributes withDescriptionPlain(String descriptionPlain) {
        this.descriptionPlain = descriptionPlain;
        return this;
    }
    
    /**
     * Where to find this network on Facebook
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("facebook_url")
    public String facebookUrl;

    public NetworkAttributes withFacebookUrl(String facebookUrl) {
        this.facebookUrl = facebookUrl;
        return this;
    }
    
    /**
     * Where to find this network on Instagram
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instagram_url")
    public String instagramUrl;

    public NetworkAttributes withInstagramUrl(String instagramUrl) {
        this.instagramUrl = instagramUrl;
        return this;
    }
    
    /**
     * Where to find the network on LinkedIn
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedin_url")
    public String linkedinUrl;

    public NetworkAttributes withLinkedinUrl(String linkedinUrl) {
        this.linkedinUrl = linkedinUrl;
        return this;
    }
    
    /**
     * The name of the network
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public NetworkAttributes withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A public point of contact through email
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_email")
    public String publicEmail;

    public NetworkAttributes withPublicEmail(String publicEmail) {
        this.publicEmail = publicEmail;
        return this;
    }
    
    /**
     * If this is `true`, a public web page for this network is available under
     * `https://art19.com/networks/{slug}`, where `slug` is the value of the corresponding attribute.
     * This public page provides details about the network as well as descriptive links to all its
     * series' public pages. If this is `false`, no such public page is available.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_page_enabled")
    public Boolean publicPageEnabled;

    public NetworkAttributes withPublicPageEnabled(Boolean publicPageEnabled) {
        this.publicPageEnabled = publicPageEnabled;
        return this;
    }
    
    /**
     * The unique slug for the network also used on its public page for example.
     * This value is unique system-wide amongst all networks _and_ series.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("slug")
    public String slug;

    public NetworkAttributes withSlug(String slug) {
        this.slug = slug;
        return this;
    }
    
    /**
     * Where to find the network on Tumblr
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tumblr_url")
    public String tumblrUrl;

    public NetworkAttributes withTumblrUrl(String tumblrUrl) {
        this.tumblrUrl = tumblrUrl;
        return this;
    }
    
    /**
     * Where to find the network on Twitter
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("twitter_url")
    public String twitterUrl;

    public NetworkAttributes withTwitterUrl(String twitterUrl) {
        this.twitterUrl = twitterUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;

    public NetworkAttributes withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * A public website for the network
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("website_url")
    public String websiteUrl;

    public NetworkAttributes withWebsiteUrl(String websiteUrl) {
        this.websiteUrl = websiteUrl;
        return this;
    }
    
    public NetworkAttributes(){}
}
