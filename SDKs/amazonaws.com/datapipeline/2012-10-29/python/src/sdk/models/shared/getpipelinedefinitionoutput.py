"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import parameterobject as shared_parameterobject
from ..shared import parametervalue as shared_parametervalue
from ..shared import pipelineobject as shared_pipelineobject
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPipelineDefinitionOutput:
    r"""Contains the output of GetPipelineDefinition."""
    
    parameter_objects: Optional[list[shared_parameterobject.ParameterObject]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameterObjects'), 'exclude': lambda f: f is None }})  
    parameter_values: Optional[list[shared_parametervalue.ParameterValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameterValues'), 'exclude': lambda f: f is None }})  
    pipeline_objects: Optional[list[shared_pipelineobject.PipelineObject]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pipelineObjects'), 'exclude': lambda f: f is None }})  
    