"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceLimits:
    r"""Specifies the maximum number of training jobs and parallel training jobs that a hyperparameter tuning job can launch."""
    
    max_parallel_training_jobs: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxParallelTrainingJobs') }})  
    max_number_of_training_jobs: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxNumberOfTrainingJobs'), 'exclude': lambda f: f is None }})  
    max_runtime_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxRuntimeInSeconds'), 'exclude': lambda f: f is None }})  
    