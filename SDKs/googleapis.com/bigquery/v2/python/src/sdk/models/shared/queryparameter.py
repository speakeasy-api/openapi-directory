"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import queryparametertype as shared_queryparametertype
from ..shared import queryparametervalue as shared_queryparametervalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QueryParameter:
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""[Optional] If unset, this is a positional parameter. Otherwise, should be unique within a query."""  
    parameter_type: Optional[shared_queryparametertype.QueryParameterType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameterType'), 'exclude': lambda f: f is None }})  
    parameter_value: Optional[shared_queryparametervalue.QueryParameterValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameterValue'), 'exclude': lambda f: f is None }})  
    