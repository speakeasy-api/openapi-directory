/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FileKey } from "./filekey";
import { PrivateKeyContainer } from "./privatekeycontainer";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Download Share information
 */
export class PublicDownloadShare extends SpeakeasyBase {
  /**
   * Creation date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Creator name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creatorName" })
  creatorName: string;

  /**
   * Creator username
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creatorUsername" })
  creatorUsername?: string;

  /**
   * Expiration date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expireAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expireAt?: Date;

  /**
   * File key information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileKey" })
  @Type(() => FileKey)
  fileKey?: FileKey;

  /**
   * File name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileName" })
  fileName: string;

  /**
   * &#128640; Since v4.11.0
   *
   * @remarks
   *
   * Determines whether Download Share has a limit for amount of downloads
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasDownloadLimit" })
  hasDownloadLimit: boolean;

  /**
   * Encryption state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isEncrypted" })
  isEncrypted?: boolean;

  /**
   * Is share protected by password
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isProtected" })
  isProtected: boolean;

  /**
   * Downloads limit reached
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitReached" })
  limitReached: boolean;

  /**
   * &#128640; Since v4.11.0
   *
   * @remarks
   *
   * * `application/zip` (for folders and rooms)
   *
   * * actual file media type (for files only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mediaType" })
  mediaType: string;

  /**
   * Share display name (alias name)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * User notes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * Private key container
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privateKeyContainer" })
  @Type(() => PrivateKeyContainer)
  privateKeyContainer?: PrivateKeyContainer;

  /**
   * File size or container size not compressed (in bytes)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size: number;
}
