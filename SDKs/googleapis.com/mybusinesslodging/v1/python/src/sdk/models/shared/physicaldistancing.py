"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum(str, Enum):
    r"""Common areas physical distancing arranged exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class PhysicalDistancingPhysicalDistancingRequiredExceptionEnum(str, Enum):
    r"""Physical distancing required exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class PhysicalDistancingSafetyDividersExceptionEnum(str, Enum):
    r"""Safety dividers exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum(str, Enum):
    r"""Shared areas limited occupancy exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum(str, Enum):
    r"""Wellness areas have private spaces exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PhysicalDistancing:
    r"""Physical distancing measures implemented by the hotel during COVID-19."""
    
    common_areas_physical_distancing_arranged: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commonAreasPhysicalDistancingArranged'), 'exclude': lambda f: f is None }})
    r"""Common areas arranged to maintain physical distancing."""  
    common_areas_physical_distancing_arranged_exception: Optional[PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commonAreasPhysicalDistancingArrangedException'), 'exclude': lambda f: f is None }})
    r"""Common areas physical distancing arranged exception."""  
    physical_distancing_required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('physicalDistancingRequired'), 'exclude': lambda f: f is None }})
    r"""Physical distancing required."""  
    physical_distancing_required_exception: Optional[PhysicalDistancingPhysicalDistancingRequiredExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('physicalDistancingRequiredException'), 'exclude': lambda f: f is None }})
    r"""Physical distancing required exception."""  
    safety_dividers: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('safetyDividers'), 'exclude': lambda f: f is None }})
    r"""Safety dividers at front desk and other locations."""  
    safety_dividers_exception: Optional[PhysicalDistancingSafetyDividersExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('safetyDividersException'), 'exclude': lambda f: f is None }})
    r"""Safety dividers exception."""  
    shared_areas_limited_occupancy: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sharedAreasLimitedOccupancy'), 'exclude': lambda f: f is None }})
    r"""Guest occupancy limited within shared facilities."""  
    shared_areas_limited_occupancy_exception: Optional[PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sharedAreasLimitedOccupancyException'), 'exclude': lambda f: f is None }})
    r"""Shared areas limited occupancy exception."""  
    wellness_areas_have_private_spaces: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wellnessAreasHavePrivateSpaces'), 'exclude': lambda f: f is None }})
    r"""Private spaces designated in spa and wellness areas."""  
    wellness_areas_have_private_spaces_exception: Optional[PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wellnessAreasHavePrivateSpacesException'), 'exclude': lambda f: f is None }})
    r"""Wellness areas have private spaces exception."""  
    