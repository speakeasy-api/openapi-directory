// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VideoRoomSummaryEnumTwilioRealmEnum string

const (
	VideoRoomSummaryEnumTwilioRealmEnumUs1 VideoRoomSummaryEnumTwilioRealmEnum = "us1"
	VideoRoomSummaryEnumTwilioRealmEnumUs2 VideoRoomSummaryEnumTwilioRealmEnum = "us2"
	VideoRoomSummaryEnumTwilioRealmEnumAu1 VideoRoomSummaryEnumTwilioRealmEnum = "au1"
	VideoRoomSummaryEnumTwilioRealmEnumBr1 VideoRoomSummaryEnumTwilioRealmEnum = "br1"
	VideoRoomSummaryEnumTwilioRealmEnumIe1 VideoRoomSummaryEnumTwilioRealmEnum = "ie1"
	VideoRoomSummaryEnumTwilioRealmEnumJp1 VideoRoomSummaryEnumTwilioRealmEnum = "jp1"
	VideoRoomSummaryEnumTwilioRealmEnumSg1 VideoRoomSummaryEnumTwilioRealmEnum = "sg1"
	VideoRoomSummaryEnumTwilioRealmEnumIn1 VideoRoomSummaryEnumTwilioRealmEnum = "in1"
	VideoRoomSummaryEnumTwilioRealmEnumDe1 VideoRoomSummaryEnumTwilioRealmEnum = "de1"
	VideoRoomSummaryEnumTwilioRealmEnumGll VideoRoomSummaryEnumTwilioRealmEnum = "gll"
)

func (e VideoRoomSummaryEnumTwilioRealmEnum) ToPointer() *VideoRoomSummaryEnumTwilioRealmEnum {
	return &e
}

func (e *VideoRoomSummaryEnumTwilioRealmEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "us1":
		fallthrough
	case "us2":
		fallthrough
	case "au1":
		fallthrough
	case "br1":
		fallthrough
	case "ie1":
		fallthrough
	case "jp1":
		fallthrough
	case "sg1":
		fallthrough
	case "in1":
		fallthrough
	case "de1":
		fallthrough
	case "gll":
		*e = VideoRoomSummaryEnumTwilioRealmEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoRoomSummaryEnumTwilioRealmEnum: %v", v)
	}
}
