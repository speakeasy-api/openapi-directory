// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnum - The action taken if the reCAPTCHA score of a request is within the interval [start_score, end_score].
type GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnum string

const (
	GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnumRecaptchaActionUnspecified GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnum = "RECAPTCHA_ACTION_UNSPECIFIED"
	GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnumBlock                      GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnum = "BLOCK"
)

func (e GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnum) ToPointer() *GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnum {
	return &e
}

func (e *GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RECAPTCHA_ACTION_UNSPECIFIED":
		fallthrough
	case "BLOCK":
		*e = GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnum: %v", v)
	}
}

// GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule - The config for a reCAPTCHA managed rule. Models a single interval [start_score, end_score]. The start_score is implicit. It is either the closest smaller end_score (if one is available) or 0. Intervals in aggregate span [0, 1] without overlapping.
type GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRule struct {
	// The action taken if the reCAPTCHA score of a request is within the interval [start_score, end_score].
	Action *GoogleCloudIdentitytoolkitAdminV2RecaptchaManagedRuleActionEnum `json:"action,omitempty"`
	// The end score (inclusive) of the score range for an action. Must be a value between 0.0 and 1.0, at 11 discrete values; e.g. 0, 0.1, 0.2, 0.3, ... 0.9, 1.0. A score of 0.0 indicates the riskiest request (likely a bot), whereas 1.0 indicates the safest request (likely a human). See https://cloud.google.com/recaptcha-enterprise/docs/interpret-assessment.
	EndScore *float32 `json:"endScore,omitempty"`
}
