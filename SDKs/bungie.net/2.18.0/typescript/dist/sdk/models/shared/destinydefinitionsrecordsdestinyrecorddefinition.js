"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DestinyDefinitionsRecordsDestinyRecordDefinition = exports.DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo = void 0;
var utils_1 = require("../../../internal/utils");
var destinydefinitionscommondestinydisplaypropertiesdefinition_1 = require("./destinydefinitionscommondestinydisplaypropertiesdefinition");
var destinydefinitionspresentationdestinypresentationchildblock_1 = require("./destinydefinitionspresentationdestinypresentationchildblock");
var destinydefinitionspresentationdestinypresentationnoderequirementsblock_1 = require("./destinydefinitionspresentationdestinypresentationnoderequirementsblock");
var destinydefinitionsrecordsdestinyrecordcompletionblock_1 = require("./destinydefinitionsrecordsdestinyrecordcompletionblock");
var destinydefinitionsrecordsdestinyrecordexpirationblock_1 = require("./destinydefinitionsrecordsdestinyrecordexpirationblock");
var destinydefinitionsrecordsdestinyrecordintervalobjective_1 = require("./destinydefinitionsrecordsdestinyrecordintervalobjective");
var destinydefinitionsrecordsdestinyrecordintervalrewards_1 = require("./destinydefinitionsrecordsdestinyrecordintervalrewards");
var destinydefinitionsrecordsdestinyrecordtitleblock_1 = require("./destinydefinitionsrecordsdestinyrecordtitleblock");
var destinydefinitionsrecordsschemarecordstateblock_1 = require("./destinydefinitionsrecordsschemarecordstateblock");
var destinydestinyitemquantity_1 = require("./destinydestinyitemquantity");
/**
 * Some records have multiple 'interval' objectives, and the record may be claimed at each completed interval
 */
var DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo = /** @class */ (function (_super) {
    __extends(DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo, _super);
    function DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: destinydefinitionsrecordsdestinyrecordintervalobjective_1.DestinyDefinitionsRecordsDestinyRecordIntervalObjective,
        }),
        __metadata("design:type", Array)
    ], DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo.prototype, "intervalObjectives", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: destinydefinitionsrecordsdestinyrecordintervalrewards_1.DestinyDefinitionsRecordsDestinyRecordIntervalRewards,
        }),
        __metadata("design:type", Array)
    ], DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo.prototype, "intervalRewards", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo.prototype, "originalObjectiveArrayInsertionIndex", void 0);
    return DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo;
}(utils_1.SpeakeasyBase));
exports.DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo = DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo;
var DestinyDefinitionsRecordsDestinyRecordDefinition = /** @class */ (function (_super) {
    __extends(DestinyDefinitionsRecordsDestinyRecordDefinition, _super);
    function DestinyDefinitionsRecordsDestinyRecordDefinition() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", destinydefinitionsrecordsdestinyrecordcompletionblock_1.DestinyDefinitionsRecordsDestinyRecordCompletionBlock)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "completionInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", destinydefinitionscommondestinydisplaypropertiesdefinition_1.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "displayProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", destinydefinitionsrecordsdestinyrecordexpirationblock_1.DestinyDefinitionsRecordsDestinyRecordExpirationBlock)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "expirationInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "forTitleGilding", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "hash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "index", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "intervalInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "loreHash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "objectiveHashes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "parentNodeHashes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", destinydefinitionspresentationdestinypresentationchildblock_1.DestinyDefinitionsPresentationDestinyPresentationChildBlock)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "presentationInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "presentationNodeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "recordValueStyle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "redacted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", destinydefinitionspresentationdestinypresentationnoderequirementsblock_1.DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "requirements", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: destinydestinyitemquantity_1.DestinyDestinyItemQuantity }),
        __metadata("design:type", Array)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "rewardItems", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "scope", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "shouldShowLargeIcons", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", destinydefinitionsrecordsschemarecordstateblock_1.DestinyDefinitionsRecordsSchemaRecordStateBlock)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "stateInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", destinydefinitionsrecordsdestinyrecordtitleblock_1.DestinyDefinitionsRecordsDestinyRecordTitleBlock)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "titleInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "traitHashes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], DestinyDefinitionsRecordsDestinyRecordDefinition.prototype, "traitIds", void 0);
    return DestinyDefinitionsRecordsDestinyRecordDefinition;
}(utils_1.SpeakeasyBase));
exports.DestinyDefinitionsRecordsDestinyRecordDefinition = DestinyDefinitionsRecordsDestinyRecordDefinition;
