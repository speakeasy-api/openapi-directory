"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from datetime import datetime
from enum import Enum
from typing import Optional

class DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsAutoAcceptSharedAssociationsEnum(str, Enum):
    r"""Indicates whether to automatically cross-account subnet associations that are associated with the transit gateway multicast domain."""
    ENABLE = 'enable'
    DISABLE = 'disable'

class DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsIgmpv2SupportEnum(str, Enum):
    r"""Indicates whether Internet Group Management Protocol (IGMP) version 2 is turned on for the transit gateway multicast domain."""
    ENABLE = 'enable'
    DISABLE = 'disable'

class DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsStaticSourcesSupportEnum(str, Enum):
    r"""Indicates whether support for statically configuring transit gateway multicast group sources is turned on."""
    ENABLE = 'enable'
    DISABLE = 'disable'


@dataclasses.dataclass
class DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptions:
    r"""The options for the transit gateway multicast domain."""
    
    auto_accept_shared_associations: Optional[DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsAutoAcceptSharedAssociationsEnum] = dataclasses.field(default=None)  
    igmpv2_support: Optional[DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsIgmpv2SupportEnum] = dataclasses.field(default=None)  
    static_sources_support: Optional[DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptionsStaticSourcesSupportEnum] = dataclasses.field(default=None)  
    
class DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainStateEnum(str, Enum):
    r"""The state of the transit gateway multicast domain."""
    PENDING = 'pending'
    AVAILABLE = 'available'
    DELETING = 'deleting'
    DELETED = 'deleted'


@dataclasses.dataclass
class DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomain:
    r"""Information about the deleted transit gateway multicast domain."""
    
    creation_time: Optional[datetime] = dataclasses.field(default=None)  
    options: Optional[DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainOptions] = dataclasses.field(default=None)  
    owner_id: Optional[str] = dataclasses.field(default=None)  
    state: Optional[DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainStateEnum] = dataclasses.field(default=None)  
    tags: Optional[list[DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomainTags]] = dataclasses.field(default=None)  
    transit_gateway_id: Optional[str] = dataclasses.field(default=None)  
    transit_gateway_multicast_domain_arn: Optional[str] = dataclasses.field(default=None)  
    transit_gateway_multicast_domain_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DeleteTransitGatewayMulticastDomainResult:
    r"""Success"""
    
    transit_gateway_multicast_domain: Optional[DeleteTransitGatewayMulticastDomainResultTransitGatewayMulticastDomain] = dataclasses.field(default=None)  
    