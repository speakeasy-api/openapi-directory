// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ShopperStatementTypeEnum - The type of shopperstatement you want to use: fixed, append or dynamic
type ShopperStatementTypeEnum string

const (
	ShopperStatementTypeEnumAppend  ShopperStatementTypeEnum = "append"
	ShopperStatementTypeEnumDynamic ShopperStatementTypeEnum = "dynamic"
	ShopperStatementTypeEnumFixed   ShopperStatementTypeEnum = "fixed"
)

func (e *ShopperStatementTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "append":
		fallthrough
	case "dynamic":
		fallthrough
	case "fixed":
		*e = ShopperStatementTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ShopperStatementTypeEnum: %s", s)
	}
}

type ShopperStatement struct {
	// The name you want to be shown on the shopper's bank or credit card statement. Can't be all numbers. If a shopper statement is present, this field is required.
	DoingBusinessAsName *string `json:"doingBusinessAsName,omitempty"`
	// The type of shopperstatement you want to use: fixed, append or dynamic
	Type *ShopperStatementTypeEnum `json:"type,omitempty"`
}
