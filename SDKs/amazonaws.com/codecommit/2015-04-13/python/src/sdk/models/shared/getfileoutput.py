"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filemodetypeenum_enum as shared_filemodetypeenum_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetFileOutput:
    r"""Success"""
    
    blob_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blobId') }})  
    commit_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitId') }})  
    file_content: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileContent') }})  
    file_mode: shared_filemodetypeenum_enum.FileModeTypeEnumEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileMode') }})  
    file_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filePath') }})  
    file_size: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileSize') }})  
    