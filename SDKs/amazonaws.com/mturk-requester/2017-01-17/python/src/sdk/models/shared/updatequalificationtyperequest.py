"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import qualificationtypestatus_enum as shared_qualificationtypestatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateQualificationTypeRequest:
    
    qualification_type_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QualificationTypeId') }})  
    answer_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AnswerKey'), 'exclude': lambda f: f is None }})  
    auto_granted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoGranted'), 'exclude': lambda f: f is None }})  
    auto_granted_value: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoGrantedValue'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    qualification_type_status: Optional[shared_qualificationtypestatus_enum.QualificationTypeStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QualificationTypeStatus'), 'exclude': lambda f: f is None }})  
    retry_delay_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RetryDelayInSeconds'), 'exclude': lambda f: f is None }})  
    test: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Test'), 'exclude': lambda f: f is None }})  
    test_duration_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TestDurationInSeconds'), 'exclude': lambda f: f is None }})  
    