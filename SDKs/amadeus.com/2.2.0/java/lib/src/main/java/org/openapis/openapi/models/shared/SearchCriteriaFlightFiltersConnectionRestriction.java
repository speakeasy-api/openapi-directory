/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SearchCriteriaFlightFiltersConnectionRestriction - Restriction towards number of connections.
 */
public class SearchCriteriaFlightFiltersConnectionRestriction {
    /**
     * Allow to change airport during connection
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("airportChangeAllowed")
    public Boolean airportChangeAllowed;

    public SearchCriteriaFlightFiltersConnectionRestriction withAirportChangeAllowed(Boolean airportChangeAllowed) {
        this.airportChangeAllowed = airportChangeAllowed;
        return this;
    }
    
    /**
     * The maximal number of connections for each itinerary. Value can be 0, 1 or 2.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxNumberOfConnections")
    public Double maxNumberOfConnections;

    public SearchCriteriaFlightFiltersConnectionRestriction withMaxNumberOfConnections(Double maxNumberOfConnections) {
        this.maxNumberOfConnections = maxNumberOfConnections;
        return this;
    }
    
    /**
     * This option allows the single segment to have one or more intermediate stops (technical stops).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("technicalStopsAllowed")
    public Boolean technicalStopsAllowed;

    public SearchCriteriaFlightFiltersConnectionRestriction withTechnicalStopsAllowed(Boolean technicalStopsAllowed) {
        this.technicalStopsAllowed = technicalStopsAllowed;
        return this;
    }
    
    public SearchCriteriaFlightFiltersConnectionRestriction(){}
}
