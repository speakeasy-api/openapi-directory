/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class FindingsMetaRisk extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cvss_base_score" })
  cvssBaseScore?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "cvss_vector" })
  cvssVector?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "exploit_available" })
  exploitAvailable?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "exploitability_ease" })
  exploitabilityEase?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "patch_publication_date" })
  patchPublicationDate?: string[];
}

export class FindingsMetaVulnRefs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bid" })
  bid?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "cpe" })
  cpe?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "cve" })
  cve?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "cwe" })
  cwe?: string[];
}

export enum FindingsSeverityEnum {
  Info = "info",
  Low = "low",
  Medium = "medium",
  High = "high",
}

export class Findings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "confidence" })
  confidence?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "issue_id" })
  issueId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "meta_links" })
  metaLinks?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta_risk" })
  @Type(() => FindingsMetaRisk)
  metaRisk?: FindingsMetaRisk;

  @SpeakeasyMetadata()
  @Expose({ name: "meta_tags" })
  metaTags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta_vuln_refs" })
  @Type(() => FindingsMetaVulnRefs)
  metaVulnRefs?: FindingsMetaVulnRefs;

  @SpeakeasyMetadata()
  @Expose({ name: "raw" })
  raw?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: FindingsSeverityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "solution" })
  solution?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "target_addrs" })
  targetAddrs?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "target_proto" })
  targetProto?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
