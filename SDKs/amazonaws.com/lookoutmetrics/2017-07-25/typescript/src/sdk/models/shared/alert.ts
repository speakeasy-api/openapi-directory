/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Action } from "./action";
import { AlertFilters } from "./alertfilters";
import { AlertStatusEnum } from "./alertstatusenum";
import { AlertTypeEnum } from "./alerttypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A configuration for Amazon SNS-integrated notifications.
 */
export class Alert extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Action" })
  @Type(() => Action)
  action?: Action;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertArn" })
  alertArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertDescription" })
  alertDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertFilters" })
  @Type(() => AlertFilters)
  alertFilters?: AlertFilters;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertName" })
  alertName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertSensitivityThreshold" })
  alertSensitivityThreshold?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertStatus" })
  alertStatus?: AlertStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertType" })
  alertType?: AlertTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorArn" })
  anomalyDetectorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationTime?: Date;
}
