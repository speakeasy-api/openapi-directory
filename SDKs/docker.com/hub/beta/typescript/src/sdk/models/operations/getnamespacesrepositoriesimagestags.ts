/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetNamespacesRepositoriesImagesTagsRequest extends SpeakeasyBase {
  /**
   * Digest of the image.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=digest",
  })
  digest: string;

  /**
   * Namespace of the repository.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=namespace",
  })
  namespace: string;

  /**
   * Page number to get. Defaults to 1.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Number of images to get per page. Defaults to 10. Max of 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Name of the repository.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repository",
  })
  repository: string;
}

export class GetNamespacesRepositoriesImagesTagsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized - user does not have read access to the namespace
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getNamespaceRepositoryImagesTagsResponse?: shared.GetNamespaceRepositoryImagesTagsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
