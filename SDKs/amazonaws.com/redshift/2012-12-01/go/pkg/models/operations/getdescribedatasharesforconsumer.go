// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeDataSharesForConsumerActionEnum
type GETDescribeDataSharesForConsumerActionEnum string

const (
	GETDescribeDataSharesForConsumerActionEnumDescribeDataSharesForConsumer GETDescribeDataSharesForConsumerActionEnum = "DescribeDataSharesForConsumer"
)

func (e GETDescribeDataSharesForConsumerActionEnum) ToPointer() *GETDescribeDataSharesForConsumerActionEnum {
	return &e
}

func (e *GETDescribeDataSharesForConsumerActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeDataSharesForConsumer":
		*e = GETDescribeDataSharesForConsumerActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDataSharesForConsumerActionEnum: %v", v)
	}
}

// GETDescribeDataSharesForConsumerStatusEnum - An identifier giving the status of a datashare in the consumer cluster. If this field is specified, Amazon Redshift returns the list of datashares that have the specified status.
type GETDescribeDataSharesForConsumerStatusEnum string

const (
	GETDescribeDataSharesForConsumerStatusEnumActive    GETDescribeDataSharesForConsumerStatusEnum = "ACTIVE"
	GETDescribeDataSharesForConsumerStatusEnumAvailable GETDescribeDataSharesForConsumerStatusEnum = "AVAILABLE"
)

func (e GETDescribeDataSharesForConsumerStatusEnum) ToPointer() *GETDescribeDataSharesForConsumerStatusEnum {
	return &e
}

func (e *GETDescribeDataSharesForConsumerStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "AVAILABLE":
		*e = GETDescribeDataSharesForConsumerStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDataSharesForConsumerStatusEnum: %v", v)
	}
}

// GETDescribeDataSharesForConsumerVersionEnum
type GETDescribeDataSharesForConsumerVersionEnum string

const (
	GETDescribeDataSharesForConsumerVersionEnumTwoThousandAndTwelve1201 GETDescribeDataSharesForConsumerVersionEnum = "2012-12-01"
)

func (e GETDescribeDataSharesForConsumerVersionEnum) ToPointer() *GETDescribeDataSharesForConsumerVersionEnum {
	return &e
}

func (e *GETDescribeDataSharesForConsumerVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = GETDescribeDataSharesForConsumerVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDataSharesForConsumerVersionEnum: %v", v)
	}
}

type GETDescribeDataSharesForConsumerRequest struct {
	Action GETDescribeDataSharesForConsumerActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The Amazon Resource Name (ARN) of the consumer that returns in the list of datashares.
	ConsumerArn *string `queryParam:"style=form,explode=true,name=ConsumerArn"`
	// An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeDataSharesForConsumer</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// An identifier giving the status of a datashare in the consumer cluster. If this field is specified, Amazon Redshift returns the list of datashares that have the specified status.
	Status            *GETDescribeDataSharesForConsumerStatusEnum `queryParam:"style=form,explode=true,name=Status"`
	Version           GETDescribeDataSharesForConsumerVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeDataSharesForConsumerResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
