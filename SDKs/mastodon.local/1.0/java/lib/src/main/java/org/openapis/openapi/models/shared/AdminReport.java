/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AdminReport - Admin-level information about a filed report.
 * https://docs.joinmastodon.org/entities/admin-report/
 */
public class AdminReport {
    /**
     * Represents a user of Mastodon and their associated profile.
     * https://docs.joinmastodon.org/entities/account/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account")
    public Account account;
    public AdminReport withAccount(Account account) {
        this.account = account;
        return this;
    }
    
    /**
     * The action taken to resolve this report. Enumerable oneOf.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action_taken")
    public String actionTaken;
    public AdminReport withActionTaken(String actionTaken) {
        this.actionTaken = actionTaken;
        return this;
    }
    
    /**
     * Represents a user of Mastodon and their associated profile.
     * https://docs.joinmastodon.org/entities/account/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assigned_account")
    public Account assignedAccount;
    public AdminReport withAssignedAccount(Account assignedAccount) {
        this.assignedAccount = assignedAccount;
        return this;
    }
    
    /**
     * An optional reason for reporting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public AdminReport withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The time the report was filed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public AdminReport withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The ID of the report in the database. Cast from an integer, but not guaranteed to be a number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public AdminReport withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Statuses attached to the report, for context.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statuses")
    public Status[] statuses;
    public AdminReport withStatuses(Status[] statuses) {
        this.statuses = statuses;
        return this;
    }
    
    /**
     * Represents a user of Mastodon and their associated profile.
     * https://docs.joinmastodon.org/entities/account/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_account")
    public Account targetAccount;
    public AdminReport withTargetAccount(Account targetAccount) {
        this.targetAccount = targetAccount;
        return this;
    }
    
    /**
     * The time of last action on this report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public AdminReport withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
