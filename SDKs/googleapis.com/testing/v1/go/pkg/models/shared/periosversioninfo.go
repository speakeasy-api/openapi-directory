// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PerIosVersionInfoDeviceCapacityEnum - The number of online devices for an iOS version.
type PerIosVersionInfoDeviceCapacityEnum string

const (
	PerIosVersionInfoDeviceCapacityEnumDeviceCapacityUnspecified PerIosVersionInfoDeviceCapacityEnum = "DEVICE_CAPACITY_UNSPECIFIED"
	PerIosVersionInfoDeviceCapacityEnumDeviceCapacityHigh        PerIosVersionInfoDeviceCapacityEnum = "DEVICE_CAPACITY_HIGH"
	PerIosVersionInfoDeviceCapacityEnumDeviceCapacityMedium      PerIosVersionInfoDeviceCapacityEnum = "DEVICE_CAPACITY_MEDIUM"
	PerIosVersionInfoDeviceCapacityEnumDeviceCapacityLow         PerIosVersionInfoDeviceCapacityEnum = "DEVICE_CAPACITY_LOW"
	PerIosVersionInfoDeviceCapacityEnumDeviceCapacityNone        PerIosVersionInfoDeviceCapacityEnum = "DEVICE_CAPACITY_NONE"
)

func (e PerIosVersionInfoDeviceCapacityEnum) ToPointer() *PerIosVersionInfoDeviceCapacityEnum {
	return &e
}

func (e *PerIosVersionInfoDeviceCapacityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEVICE_CAPACITY_UNSPECIFIED":
		fallthrough
	case "DEVICE_CAPACITY_HIGH":
		fallthrough
	case "DEVICE_CAPACITY_MEDIUM":
		fallthrough
	case "DEVICE_CAPACITY_LOW":
		fallthrough
	case "DEVICE_CAPACITY_NONE":
		*e = PerIosVersionInfoDeviceCapacityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PerIosVersionInfoDeviceCapacityEnum: %v", v)
	}
}

// PerIosVersionInfo - A version-specific information of an iOS model.
type PerIosVersionInfo struct {
	// The number of online devices for an iOS version.
	DeviceCapacity *PerIosVersionInfoDeviceCapacityEnum `json:"deviceCapacity,omitempty"`
	// An iOS version.
	VersionID *string `json:"versionId,omitempty"`
}
