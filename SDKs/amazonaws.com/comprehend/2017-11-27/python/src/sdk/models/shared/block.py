"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import blocktype_enum as shared_blocktype_enum
from ..shared import geometry as shared_geometry
from ..shared import relationshipslistitem as shared_relationshipslistitem
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Block:
    r"""<p>Information about each word or line of text in the input document.</p> <p>For additional information, see <a href=\\"https://docs.aws.amazon.com/textract/latest/dg/API_Block.html\\">Block</a> in the Amazon Textract API reference.</p>"""
    
    block_type: Optional[shared_blocktype_enum.BlockTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BlockType'), 'exclude': lambda f: f is None }})  
    geometry: Optional[shared_geometry.Geometry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Geometry'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    page: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Page'), 'exclude': lambda f: f is None }})  
    relationships: Optional[list[shared_relationshipslistitem.RelationshipsListItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Relationships'), 'exclude': lambda f: f is None }})  
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Text'), 'exclude': lambda f: f is None }})  
    