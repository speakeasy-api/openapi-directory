/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateFunctionRequestBody {
    /**
     * The &lt;code&gt;function&lt;/code&gt; code that contains the request and response functions. When code is used, the &lt;code&gt;runtime&lt;/code&gt; is required. The &lt;code&gt;runtime&lt;/code&gt; value must be &lt;code&gt;APPSYNC_JS&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;

    public CreateFunctionRequestBody withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * The &lt;code&gt;Function&lt;/code&gt; &lt;code&gt;DataSource&lt;/code&gt; name.
     */
    @JsonProperty("dataSourceName")
    public String dataSourceName;

    public CreateFunctionRequestBody withDataSourceName(String dataSourceName) {
        this.dataSourceName = dataSourceName;
        return this;
    }
    
    /**
     * The &lt;code&gt;Function&lt;/code&gt; description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CreateFunctionRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The &lt;code&gt;version&lt;/code&gt; of the request mapping template. Currently, the supported value is 2018-05-29. Note that when using VTL and mapping templates, the &lt;code&gt;functionVersion&lt;/code&gt; is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("functionVersion")
    public String functionVersion;

    public CreateFunctionRequestBody withFunctionVersion(String functionVersion) {
        this.functionVersion = functionVersion;
        return this;
    }
    
    /**
     * The maximum batching size for a resolver.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxBatchSize")
    public Long maxBatchSize;

    public CreateFunctionRequestBody withMaxBatchSize(Long maxBatchSize) {
        this.maxBatchSize = maxBatchSize;
        return this;
    }
    
    /**
     * The &lt;code&gt;Function&lt;/code&gt; name. The function name does not have to be unique.
     */
    @JsonProperty("name")
    public String name;

    public CreateFunctionRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The &lt;code&gt;Function&lt;/code&gt; request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestMappingTemplate")
    public String requestMappingTemplate;

    public CreateFunctionRequestBody withRequestMappingTemplate(String requestMappingTemplate) {
        this.requestMappingTemplate = requestMappingTemplate;
        return this;
    }
    
    /**
     * The &lt;code&gt;Function&lt;/code&gt; response mapping template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseMappingTemplate")
    public String responseMappingTemplate;

    public CreateFunctionRequestBody withResponseMappingTemplate(String responseMappingTemplate) {
        this.responseMappingTemplate = responseMappingTemplate;
        return this;
    }
    
    /**
     * Describes a runtime used by an Amazon Web Services AppSync pipeline resolver or Amazon Web Services AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runtime")
    public CreateFunctionRequestBodyRuntime runtime;

    public CreateFunctionRequestBody withRuntime(CreateFunctionRequestBodyRuntime runtime) {
        this.runtime = runtime;
        return this;
    }
    
    /**
     * &lt;p&gt;Describes a Sync configuration for a resolver.&lt;/p&gt; &lt;p&gt;Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("syncConfig")
    public CreateFunctionRequestBodySyncConfig syncConfig;

    public CreateFunctionRequestBody withSyncConfig(CreateFunctionRequestBodySyncConfig syncConfig) {
        this.syncConfig = syncConfig;
        return this;
    }
    
    public CreateFunctionRequestBody(@JsonProperty("dataSourceName") String dataSourceName, @JsonProperty("name") String name) {
        this.dataSourceName = dataSourceName;
        this.name = name;
  }
}
