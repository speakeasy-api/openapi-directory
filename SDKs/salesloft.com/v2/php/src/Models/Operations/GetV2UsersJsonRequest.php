<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetV2UsersJsonRequest
{
    /**
     * Filters users based on active attribute. Defaults to not applied
     * 
     * @var ?bool $active
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=active')]
    public ?bool $active = null;
    
    /**
     * Filters users by group_id.  An additional value of "_is_null" can be passed to filter users that are not in a group
     * 
     * @var ?array<string> $groupId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=group_id')]
    public ?array $groupId = null;
    
    /**
     * Filters list to only include guids
     * 
     * @var ?array<string> $guid
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=guid')]
    public ?array $guid = null;
    
    /**
     * Filters users based on if they have a crm user mapped or not.
     * 
     * @var ?bool $hasCrmUser
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=has_crm_user')]
    public ?bool $hasCrmUser = null;
    
    /**
     * IDs of users to fetch. If a record can't be found, that record won't be returned and your request will be successful
     * 
     * @var ?array<int> $ids
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=ids')]
    public ?array $ids = null;
    
    /**
     * Whether to include total_pages and total_count in the metadata. Defaults to false
     * 
     * @var ?bool $includePagingCounts
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=include_paging_counts')]
    public ?bool $includePagingCounts = null;
    
    /**
     * The current page to fetch users from. Defaults to returning all users
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * How many users to show per page in the range [1, 100]. Defaults to 25.  Results are only paginated if the page parameter is defined
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * Filters users by role_id
     * 
     * @var ?array<string> $roleId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=role_id')]
    public ?array $roleId = null;
    
    /**
     * Space-separated list of keywords used to find case-insensitive substring matches against First Name, Last Name, or Email
     * 
     * @var ?string $search
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=search')]
    public ?string $search = null;
    
    /**
     * Key to sort on, must be one of: id, email, name, group, role. Defaults to id
     * 
     * @var ?string $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_by')]
    public ?string $sortBy = null;
    
    /**
     * Direction to sort in, must be one of: ASC, DESC. Defaults to DESC
     * 
     * @var ?string $sortDirection
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_direction')]
    public ?string $sortDirection = null;
    
    /**
     * Defaults to true.
     * 
     * 
     * When true, only shows users that are actionable based on the team's privacy settings.
     * When false, shows all users on the team, even if you can't take action on that user. Deactivated users are also included when false.
     * 
     * 
     * @var ?bool $visibleOnly
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=visible_only')]
    public ?bool $visibleOnly = null;
    
    /**
     * Filters users based on assigned work_country.
     * 
     * @var ?array<string> $workCountry
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=work_country')]
    public ?array $workCountry = null;
    
	public function __construct()
	{
		$this->active = null;
		$this->groupId = null;
		$this->guid = null;
		$this->hasCrmUser = null;
		$this->ids = null;
		$this->includePagingCounts = null;
		$this->page = null;
		$this->perPage = null;
		$this->roleId = null;
		$this->search = null;
		$this->sortBy = null;
		$this->sortDirection = null;
		$this->visibleOnly = null;
		$this->workCountry = null;
	}
}
