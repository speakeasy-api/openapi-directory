"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import device as shared_device
from typing import Optional


@dataclasses.dataclass
class GetDevicesRequest:
    
    all: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'all', 'style': 'form', 'explode': True }})
    r"""Can only be used by admins or managers to fetch all entities"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id', 'style': 'form', 'explode': True }})
    r"""To fetch one or more devices. Multiple params can be passed like `id=31&id=42`"""  
    unique_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'uniqueId', 'style': 'form', 'explode': True }})
    r"""To fetch one or more devices. Multiple params can be passed like `uniqueId=333331&uniqieId=44442`"""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'userId', 'style': 'form', 'explode': True }})
    r"""Standard users can use this only with their own _userId_"""  
    

@dataclasses.dataclass
class GetDevicesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    devices: Optional[list[shared_device.Device]] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    