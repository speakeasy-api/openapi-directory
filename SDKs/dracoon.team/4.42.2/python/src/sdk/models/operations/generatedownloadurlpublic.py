"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errorresponse as shared_errorresponse
from ..shared import publicdownloadtokengeneraterequest as shared_publicdownloadtokengeneraterequest
from ..shared import publicdownloadtokengenerateresponse as shared_publicdownloadtokengenerateresponse
from typing import Optional


@dataclasses.dataclass
class GenerateDownloadURLPublicRequest:
    
    access_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'access_key', 'style': 'simple', 'explode': False }})
    r"""Access key"""  
    public_download_token_generate_request: Optional[shared_publicdownloadtokengeneraterequest.PublicDownloadTokenGenerateRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class GenerateDownloadURLPublicResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Bad Request"""  
    public_download_token_generate_response: Optional[shared_publicdownloadtokengenerateresponse.PublicDownloadTokenGenerateResponse] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    