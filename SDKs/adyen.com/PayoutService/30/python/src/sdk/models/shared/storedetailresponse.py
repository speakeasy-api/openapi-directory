"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StoreDetailResponse:
    r"""OK - the request has succeeded."""
    
    psp_reference: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pspReference') }})
    r"""A new reference to uniquely identify this request."""  
    recurring_detail_reference: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recurringDetailReference') }})
    r"""The token which you can use later on for submitting the payout."""  
    result_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultCode') }})
    r"""The result code of the transaction. `Success` indicates that the details were stored successfully."""  
    additional_data: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalData'), 'exclude': lambda f: f is None }})
    r"""This field contains additional data, which may be returned in a particular response."""  
    