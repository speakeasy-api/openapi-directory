"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DestinyComponentsProfilesDestinyProfileProgressionComponent = exports.DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact = void 0;
var utils_1 = require("../../../internal/utils");
var destinydestinyprogression_1 = require("./destinydestinyprogression");
/**
 * Represents a Seasonal Artifact and all data related to it for the requested Account.
 *
 * @remarks
 * It can be combined with Character-scoped data for a full picture of what a character has available/has chosen, or just these settings can be used for overview information.
 */
var DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact = /** @class */ (function (_super) {
    __extends(DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact, _super);
    function DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact.prototype, "artifactHash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", destinydestinyprogression_1.DestinyDestinyProgression)
    ], DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact.prototype, "pointProgression", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact.prototype, "pointsAcquired", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact.prototype, "powerBonus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", destinydestinyprogression_1.DestinyDestinyProgression)
    ], DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact.prototype, "powerBonusProgression", void 0);
    return DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact;
}(utils_1.SpeakeasyBase));
exports.DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact = DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact;
/**
 * The set of progression-related information that applies at a Profile-wide level for your Destiny experience. This differs from the Jimi Hendrix Experience because there's less guitars on fire. Yet. #spoileralert?
 *
 * @remarks
 * This will include information such as Checklist info.
 */
var DestinyComponentsProfilesDestinyProfileProgressionComponent = /** @class */ (function (_super) {
    __extends(DestinyComponentsProfilesDestinyProfileProgressionComponent, _super);
    function DestinyComponentsProfilesDestinyProfileProgressionComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], DestinyComponentsProfilesDestinyProfileProgressionComponent.prototype, "checklists", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DestinyComponentsProfilesDestinyProfileProgressionComponentSeasonalArtifact)
    ], DestinyComponentsProfilesDestinyProfileProgressionComponent.prototype, "seasonalArtifact", void 0);
    return DestinyComponentsProfilesDestinyProfileProgressionComponent;
}(utils_1.SpeakeasyBase));
exports.DestinyComponentsProfilesDestinyProfileProgressionComponent = DestinyComponentsProfilesDestinyProfileProgressionComponent;
