// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListApplicationVersionsXAmzTargetEnum
type ListApplicationVersionsXAmzTargetEnum string

const (
	ListApplicationVersionsXAmzTargetEnumKinesisAnalytics20180523ListApplicationVersions ListApplicationVersionsXAmzTargetEnum = "KinesisAnalytics_20180523.ListApplicationVersions"
)

func (e ListApplicationVersionsXAmzTargetEnum) ToPointer() *ListApplicationVersionsXAmzTargetEnum {
	return &e
}

func (e *ListApplicationVersionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KinesisAnalytics_20180523.ListApplicationVersions":
		*e = ListApplicationVersionsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListApplicationVersionsXAmzTargetEnum: %v", v)
	}
}

type ListApplicationVersionsRequest struct {
	ListApplicationVersionsRequest shared.ListApplicationVersionsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     ListApplicationVersionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListApplicationVersionsResponse struct {
	ContentType string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// Success
	ListApplicationVersionsResponse *shared.ListApplicationVersionsResponse
	StatusCode                      int
	RawResponse                     *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
