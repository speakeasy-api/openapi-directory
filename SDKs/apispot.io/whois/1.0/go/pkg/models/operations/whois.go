// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type WhoisPathParams struct {
	// Domain
	Domain string `pathParam:"style=simple,explode=false,name=domain"`
}

// WhoisFormatEnum
type WhoisFormatEnum string

const (
	WhoisFormatEnumRaw       WhoisFormatEnum = "raw"
	WhoisFormatEnumFormatted WhoisFormatEnum = "formatted"
	WhoisFormatEnumJSON      WhoisFormatEnum = "json"
)

func (e *WhoisFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "raw":
		fallthrough
	case "formatted":
		fallthrough
	case "json":
		*e = WhoisFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WhoisFormatEnum: %s", s)
	}
}

type WhoisQueryParams struct {
	Format *WhoisFormatEnum `queryParam:"style=form,explode=true,name=format"`
}

type WhoisRequest struct {
	PathParams  WhoisPathParams
	QueryParams WhoisQueryParams
}

type WhoisResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
