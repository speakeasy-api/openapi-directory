// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ListSharedLineGroupsQueryParams struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
}

type ListSharedLineGroupsRequest struct {
	QueryParams ListSharedLineGroupsQueryParams
}

// ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnum - Status of the number.
type ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnum string

const (
	ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnumPending   ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnum = "pending"
	ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnumAvailable ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnum = "available"
)

func (e *ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		*e = ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnum: %s", s)
	}
}

type ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbers struct {
	// Unique identifier of the phone number.
	ID *string
	// Phone number in E164 format.
	Number *string
	// Status of the number.
	Status *ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnum
}

type ListSharedLineGroups200ApplicationXMLSharedLineGroupsSite struct {
	// Unique Identifier of the [Site](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/getasite).
	ID *string
	// Name of the Site.
	Name *string
}

// ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnum - Status of the Shared Line Group.
type ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnum string

const (
	ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnumActive   ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnum = "active"
	ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnumInactive ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnum = "inactive"
)

func (e *ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnum: %s", s)
	}
}

type ListSharedLineGroups200ApplicationXMLSharedLineGroups struct {
	// Display Name of the Shared Line Group.
	DisplayName *string
	// Extension number assigned to the Shared Line Group.
	ExtensionNumber *int64
	// Unique Identifier of the Shared Line Group.
	ID *string
	// Phone Numbers Assigned to the Shared Line Group.
	PhoneNumbers []ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbers
	Site         *ListSharedLineGroups200ApplicationXMLSharedLineGroupsSite
	// Status of the Shared Line Group.
	Status *ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnum
}

// ListSharedLineGroups200ApplicationXML - **HTTP Status Code:** `200` **OK** <br>
// Shared Line Groups returned.
type ListSharedLineGroups200ApplicationXML struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// The number of records returned within a single API call.
	PageSize         *int64
	SharedLineGroups []ListSharedLineGroups200ApplicationXMLSharedLineGroups
	// Total records found in the response for this request.
	TotalRecords *int64
}

// ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnum - Status of the number.
type ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnum string

const (
	ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnumPending   ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnum = "pending"
	ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnumAvailable ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnum = "available"
)

func (e *ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		*e = ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnum: %s", s)
	}
}

type ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbers struct {
	// Unique identifier of the phone number.
	ID *string `json:"id,omitempty"`
	// Phone number in E164 format.
	Number *string `json:"number,omitempty"`
	// Status of the number.
	Status *ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnum `json:"status,omitempty"`
}

type ListSharedLineGroups200ApplicationJSONSharedLineGroupsSite struct {
	// Unique Identifier of the [Site](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/getasite).
	ID *string `json:"id,omitempty"`
	// Name of the Site.
	Name *string `json:"name,omitempty"`
}

// ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnum - Status of the Shared Line Group.
type ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnum string

const (
	ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnumActive   ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnum = "active"
	ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnumInactive ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnum = "inactive"
)

func (e *ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnum: %s", s)
	}
}

type ListSharedLineGroups200ApplicationJSONSharedLineGroups struct {
	// Display Name of the Shared Line Group.
	DisplayName *string `json:"display_name,omitempty"`
	// Extension number assigned to the Shared Line Group.
	ExtensionNumber *int64 `json:"extension_number,omitempty"`
	// Unique Identifier of the Shared Line Group.
	ID *string `json:"id,omitempty"`
	// Phone Numbers Assigned to the Shared Line Group.
	PhoneNumbers []ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbers `json:"phone_numbers,omitempty"`
	Site         *ListSharedLineGroups200ApplicationJSONSharedLineGroupsSite          `json:"site,omitempty"`
	// Status of the Shared Line Group.
	Status *ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnum `json:"status,omitempty"`
}

// ListSharedLineGroups200ApplicationJSON - **HTTP Status Code:** `200` **OK** <br>
// Shared Line Groups returned.
type ListSharedLineGroups200ApplicationJSON struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of records returned within a single API call.
	PageSize         *int64                                                   `json:"page_size,omitempty"`
	SharedLineGroups []ListSharedLineGroups200ApplicationJSONSharedLineGroups `json:"shared_line_groups,omitempty"`
	// Total records found in the response for this request.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type ListSharedLineGroupsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK** <br>
	// Shared Line Groups returned.
	ListSharedLineGroups200ApplicationJSONObject *ListSharedLineGroups200ApplicationJSON
}
