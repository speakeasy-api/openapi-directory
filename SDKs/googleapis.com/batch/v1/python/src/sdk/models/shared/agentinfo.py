"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import agenttaskinfo as shared_agenttaskinfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AgentInfoStateEnum(str, Enum):
    r"""Agent state."""
    AGENT_STATE_UNSPECIFIED = 'AGENT_STATE_UNSPECIFIED'
    AGENT_STARTING = 'AGENT_STARTING'
    AGENT_RUNNING = 'AGENT_RUNNING'
    AGENT_STOPPED = 'AGENT_STOPPED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AgentInfo:
    r"""VM Agent Info."""
    
    job_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobId'), 'exclude': lambda f: f is None }})
    r"""The assigned Job ID"""  
    report_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportTime'), 'exclude': lambda f: f is None }})
    r"""When the AgentInfo is generated."""  
    state: Optional[AgentInfoStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Agent state."""  
    task_group_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskGroupId'), 'exclude': lambda f: f is None }})
    r"""The assigned task group ID."""  
    tasks: Optional[list[shared_agenttaskinfo.AgentTaskInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tasks'), 'exclude': lambda f: f is None }})
    r"""Task Info."""  
    