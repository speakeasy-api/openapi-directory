"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeleteTransitGatewayResult = exports.DeleteTransitGatewayResultTransitGateway = exports.DeleteTransitGatewayResultTransitGatewayTags = exports.DeleteTransitGatewayResultTransitGatewayStateEnum = exports.DeleteTransitGatewayResultTransitGatewayOptions = exports.DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsDnsSupportEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * Indicates whether attachment requests are automatically accepted.
 */
var DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum;
(function (DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum) {
    DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum["Enable"] = "enable";
    DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum["Disable"] = "disable";
})(DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum || (exports.DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum = {}));
/**
 * Indicates whether resource attachments are automatically associated with the default association route table.
 */
var DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum;
(function (DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum) {
    DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum["Enable"] = "enable";
    DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum["Disable"] = "disable";
})(DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum || (exports.DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum = {}));
/**
 * Indicates whether resource attachments automatically propagate routes to the default propagation route table.
 */
var DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum;
(function (DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum) {
    DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum["Enable"] = "enable";
    DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum["Disable"] = "disable";
})(DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum || (exports.DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum = {}));
/**
 * Indicates whether DNS support is enabled.
 */
var DeleteTransitGatewayResultTransitGatewayOptionsDnsSupportEnum;
(function (DeleteTransitGatewayResultTransitGatewayOptionsDnsSupportEnum) {
    DeleteTransitGatewayResultTransitGatewayOptionsDnsSupportEnum["Enable"] = "enable";
    DeleteTransitGatewayResultTransitGatewayOptionsDnsSupportEnum["Disable"] = "disable";
})(DeleteTransitGatewayResultTransitGatewayOptionsDnsSupportEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsDnsSupportEnum || (exports.DeleteTransitGatewayResultTransitGatewayOptionsDnsSupportEnum = {}));
/**
 * Indicates whether multicast is enabled on the transit gateway
 */
var DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum;
(function (DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum) {
    DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum["Enable"] = "enable";
    DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum["Disable"] = "disable";
})(DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum || (exports.DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum = {}));
/**
 * Indicates whether Equal Cost Multipath Protocol support is enabled.
 */
var DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum;
(function (DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum) {
    DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum["Enable"] = "enable";
    DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum["Disable"] = "disable";
})(DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum = exports.DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum || (exports.DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum = {}));
/**
 * The transit gateway options.
 */
var DeleteTransitGatewayResultTransitGatewayOptions = /** @class */ (function (_super) {
    __extends(DeleteTransitGatewayResultTransitGatewayOptions, _super);
    function DeleteTransitGatewayResultTransitGatewayOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DeleteTransitGatewayResultTransitGatewayOptions.prototype, "amazonSideAsn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGatewayOptions.prototype, "associationDefaultRouteTableId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGatewayOptions.prototype, "autoAcceptSharedAttachments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGatewayOptions.prototype, "defaultRouteTableAssociation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGatewayOptions.prototype, "defaultRouteTablePropagation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGatewayOptions.prototype, "dnsSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGatewayOptions.prototype, "multicastSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGatewayOptions.prototype, "propagationDefaultRouteTableId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], DeleteTransitGatewayResultTransitGatewayOptions.prototype, "transitGatewayCidrBlocks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGatewayOptions.prototype, "vpnEcmpSupport", void 0);
    return DeleteTransitGatewayResultTransitGatewayOptions;
}(utils_1.SpeakeasyBase));
exports.DeleteTransitGatewayResultTransitGatewayOptions = DeleteTransitGatewayResultTransitGatewayOptions;
/**
 * The state of the transit gateway.
 */
var DeleteTransitGatewayResultTransitGatewayStateEnum;
(function (DeleteTransitGatewayResultTransitGatewayStateEnum) {
    DeleteTransitGatewayResultTransitGatewayStateEnum["Pending"] = "pending";
    DeleteTransitGatewayResultTransitGatewayStateEnum["Available"] = "available";
    DeleteTransitGatewayResultTransitGatewayStateEnum["Modifying"] = "modifying";
    DeleteTransitGatewayResultTransitGatewayStateEnum["Deleting"] = "deleting";
    DeleteTransitGatewayResultTransitGatewayStateEnum["Deleted"] = "deleted";
})(DeleteTransitGatewayResultTransitGatewayStateEnum = exports.DeleteTransitGatewayResultTransitGatewayStateEnum || (exports.DeleteTransitGatewayResultTransitGatewayStateEnum = {}));
/**
 * Describes a tag.
 */
var DeleteTransitGatewayResultTransitGatewayTags = /** @class */ (function (_super) {
    __extends(DeleteTransitGatewayResultTransitGatewayTags, _super);
    function DeleteTransitGatewayResultTransitGatewayTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGatewayTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGatewayTags.prototype, "value", void 0);
    return DeleteTransitGatewayResultTransitGatewayTags;
}(utils_1.SpeakeasyBase));
exports.DeleteTransitGatewayResultTransitGatewayTags = DeleteTransitGatewayResultTransitGatewayTags;
/**
 * Information about the deleted transit gateway.
 */
var DeleteTransitGatewayResultTransitGateway = /** @class */ (function (_super) {
    __extends(DeleteTransitGatewayResultTransitGateway, _super);
    function DeleteTransitGatewayResultTransitGateway() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DeleteTransitGatewayResultTransitGateway.prototype, "creationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGateway.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DeleteTransitGatewayResultTransitGatewayOptions)
    ], DeleteTransitGatewayResultTransitGateway.prototype, "options", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGateway.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGateway.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DeleteTransitGatewayResultTransitGatewayTags }),
        __metadata("design:type", Array)
    ], DeleteTransitGatewayResultTransitGateway.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGateway.prototype, "transitGatewayArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteTransitGatewayResultTransitGateway.prototype, "transitGatewayId", void 0);
    return DeleteTransitGatewayResultTransitGateway;
}(utils_1.SpeakeasyBase));
exports.DeleteTransitGatewayResultTransitGateway = DeleteTransitGatewayResultTransitGateway;
/**
 * Success
 */
var DeleteTransitGatewayResult = /** @class */ (function (_super) {
    __extends(DeleteTransitGatewayResult, _super);
    function DeleteTransitGatewayResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DeleteTransitGatewayResultTransitGateway)
    ], DeleteTransitGatewayResult.prototype, "transitGateway", void 0);
    return DeleteTransitGatewayResult;
}(utils_1.SpeakeasyBase));
exports.DeleteTransitGatewayResult = DeleteTransitGatewayResult;
