/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnalyticsConfigurationType } from "./analyticsconfigurationtype";
import { ExplicitAuthFlowsTypeEnum } from "./explicitauthflowstypeenum";
import { OAuthFlowTypeEnum } from "./oauthflowtypeenum";
import { PreventUserExistenceErrorTypesEnum } from "./preventuserexistenceerrortypesenum";
import { TokenValidityUnitsType } from "./tokenvalidityunitstype";
import { Expose, Type } from "class-transformer";

/**
 * Represents the request to create a user pool client.
 */
export class CreateUserPoolClientRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccessTokenValidity" })
  accessTokenValidity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "AllowedOAuthFlows" })
  allowedOAuthFlows?: OAuthFlowTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "AllowedOAuthFlowsUserPoolClient" })
  allowedOAuthFlowsUserPoolClient?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AllowedOAuthScopes" })
  allowedOAuthScopes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "AnalyticsConfiguration" })
  @Type(() => AnalyticsConfigurationType)
  analyticsConfiguration?: AnalyticsConfigurationType;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthSessionValidity" })
  authSessionValidity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CallbackURLs" })
  callbackURLs?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ClientName" })
  clientName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultRedirectURI" })
  defaultRedirectURI?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EnablePropagateAdditionalUserContextData" })
  enablePropagateAdditionalUserContextData?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EnableTokenRevocation" })
  enableTokenRevocation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExplicitAuthFlows" })
  explicitAuthFlows?: ExplicitAuthFlowsTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "GenerateSecret" })
  generateSecret?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IdTokenValidity" })
  idTokenValidity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LogoutURLs" })
  logoutURLs?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "PreventUserExistenceErrors" })
  preventUserExistenceErrors?: PreventUserExistenceErrorTypesEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ReadAttributes" })
  readAttributes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "RefreshTokenValidity" })
  refreshTokenValidity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedIdentityProviders" })
  supportedIdentityProviders?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "TokenValidityUnits" })
  @Type(() => TokenValidityUnitsType)
  tokenValidityUnits?: TokenValidityUnitsType;

  @SpeakeasyMetadata()
  @Expose({ name: "UserPoolId" })
  userPoolId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WriteAttributes" })
  writeAttributes?: string[];
}
