// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DocumentSubmissionEvidenceDocumentMimeTypeEnum - The mime type of the document.
type DocumentSubmissionEvidenceDocumentMimeTypeEnum string

const (
	DocumentSubmissionEvidenceDocumentMimeTypeEnumMessageRfc822   DocumentSubmissionEvidenceDocumentMimeTypeEnum = "message/rfc822"
	DocumentSubmissionEvidenceDocumentMimeTypeEnumApplicationXML  DocumentSubmissionEvidenceDocumentMimeTypeEnum = "application/xml"
	DocumentSubmissionEvidenceDocumentMimeTypeEnumApplicationJSON DocumentSubmissionEvidenceDocumentMimeTypeEnum = "application/json"
	DocumentSubmissionEvidenceDocumentMimeTypeEnumApplicationPdf  DocumentSubmissionEvidenceDocumentMimeTypeEnum = "application/pdf"
)

func (e *DocumentSubmissionEvidenceDocumentMimeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "message/rfc822":
		fallthrough
	case "application/xml":
		fallthrough
	case "application/json":
		fallthrough
	case "application/pdf":
		*e = DocumentSubmissionEvidenceDocumentMimeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentSubmissionEvidenceDocumentMimeTypeEnum: %s", s)
	}
}

type DocumentSubmissionEvidenceDocument struct {
	// The URL where the document can be retrieved.
	Document *string `json:"document,omitempty"`
	// The datetime the URL expires. Format: 'YYYY-MM-DD HH:mm:ss.'
	ExpiresAt *string `json:"expires_at,omitempty"`
	// The mime type of the document.
	MimeType *DocumentSubmissionEvidenceDocumentMimeTypeEnum `json:"mime_type,omitempty"`
}
