/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HttpRouteFaultInjectionPolicy - The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced by client proxy on a percentage of requests before sending those requests to the destination service. Similarly requests can be aborted by client proxy for a percentage of requests.
 */
public class HttpRouteFaultInjectionPolicy {
    /**
     * Specification of how client requests are aborted as part of fault injection before being sent to a destination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("abort")
    public HttpRouteFaultInjectionPolicyAbort abort;

    public HttpRouteFaultInjectionPolicy withAbort(HttpRouteFaultInjectionPolicyAbort abort) {
        this.abort = abort;
        return this;
    }
    
    /**
     * Specification of how client requests are delayed as part of fault injection before being sent to a destination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delay")
    public HttpRouteFaultInjectionPolicyDelay delay;

    public HttpRouteFaultInjectionPolicy withDelay(HttpRouteFaultInjectionPolicyDelay delay) {
        this.delay = delay;
        return this;
    }
    
    public HttpRouteFaultInjectionPolicy(){}
}
