// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UploadDatasetSyncSecurity struct {
	BearerToken shared.SchemeBearerToken `security:"scheme,type=http,subtype=bearer"`
}

// UploadDatasetSyncRequestBodyTypeEnum - Type of dataset data.
type UploadDatasetSyncRequestBodyTypeEnum string

const (
	UploadDatasetSyncRequestBodyTypeEnumTextIntent    UploadDatasetSyncRequestBodyTypeEnum = "text-intent"
	UploadDatasetSyncRequestBodyTypeEnumTextSentiment UploadDatasetSyncRequestBodyTypeEnum = "text-sentiment"
)

func (e *UploadDatasetSyncRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "text-intent":
		fallthrough
	case "text-sentiment":
		*e = UploadDatasetSyncRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UploadDatasetSyncRequestBodyTypeEnum: %s", s)
	}
}

type UploadDatasetSyncRequestBody struct {
	// Path to the .csv, .tsv, or .json file on the local drive (FilePart).
	Data *string `multipartForm:"name=data"`
	// Name of the dataset. Optional. If this parameter is omitted, the dataset name is derived from the file name.
	Name *string `multipartForm:"name=name"`
	// URL of the .csv, .tsv, or .json file.
	Path *string `multipartForm:"name=path"`
	// Type of dataset data.
	Type *UploadDatasetSyncRequestBodyTypeEnum `multipartForm:"name=type"`
}

type UploadDatasetSyncRequest struct {
	Request  *UploadDatasetSyncRequestBody `request:"mediaType=multipart/form-data"`
	Security UploadDatasetSyncSecurity
}

type UploadDatasetSyncResponse struct {
	ContentType string
	// Upload success
	Dataset     *shared.Dataset
	StatusCode  int
	RawResponse *http.Response
}
