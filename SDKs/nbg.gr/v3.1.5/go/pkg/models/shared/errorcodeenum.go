// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ErrorCodeEnum - This is Data Type gives a low level textual error code to help categorise an error response. The applicable HTTP response code is also given.
type ErrorCodeEnum string

const (
	ErrorCodeEnumUkObieFieldExpected                         ErrorCodeEnum = "UK.OBIE.Field.Expected"
	ErrorCodeEnumUkObieFieldInvalid                          ErrorCodeEnum = "UK.OBIE.Field.Invalid"
	ErrorCodeEnumUkObieFieldInvalidDate                      ErrorCodeEnum = "UK.OBIE.Field.InvalidDate"
	ErrorCodeEnumUkObieFieldMissing                          ErrorCodeEnum = "UK.OBIE.Field.Missing"
	ErrorCodeEnumUkObieFieldUnexpected                       ErrorCodeEnum = "UK.OBIE.Field.Unexpected"
	ErrorCodeEnumUkObieHeaderInvalid                         ErrorCodeEnum = "UK.OBIE.Header.Invalid"
	ErrorCodeEnumUkObieHeaderMissing                         ErrorCodeEnum = "UK.OBIE.Header.Missing"
	ErrorCodeEnumUkObieResourceConsentMismatch               ErrorCodeEnum = "UK.OBIE.Resource.ConsentMismatch"
	ErrorCodeEnumUkObieResourceInvalidConsentStatus          ErrorCodeEnum = "UK.OBIE.Resource.InvalidConsentStatus"
	ErrorCodeEnumUkObieResourceInvalidFormat                 ErrorCodeEnum = "UK.OBIE.Resource.InvalidFormat"
	ErrorCodeEnumUkObieResourceNotFound                      ErrorCodeEnum = "UK.OBIE.Resource.NotFound"
	ErrorCodeEnumUkObieRulesAfterCutOffDateTime              ErrorCodeEnum = "UK.OBIE.Rules.AfterCutOffDateTime"
	ErrorCodeEnumUkObieRulesDuplicateReference               ErrorCodeEnum = "UK.OBIE.Rules.DuplicateReference"
	ErrorCodeEnumUkObieSignatureInvalid                      ErrorCodeEnum = "UK.OBIE.Signature.Invalid"
	ErrorCodeEnumUkObieSignatureInvalidClaim                 ErrorCodeEnum = "UK.OBIE.Signature.InvalidClaim"
	ErrorCodeEnumUkObieSignatureMissingClaim                 ErrorCodeEnum = "UK.OBIE.Signature.MissingClaim"
	ErrorCodeEnumUkObieSignatureMalformed                    ErrorCodeEnum = "UK.OBIE.Signature.Malformed"
	ErrorCodeEnumUkObieSignatureMissing                      ErrorCodeEnum = "UK.OBIE.Signature.Missing"
	ErrorCodeEnumUkObieSignatureUnexpected                   ErrorCodeEnum = "UK.OBIE.Signature.Unexpected"
	ErrorCodeEnumUkObieUnsupportedAccountIdentifier          ErrorCodeEnum = "UK.OBIE.Unsupported.AccountIdentifier"
	ErrorCodeEnumUkObieUnsupportedAccountSecondaryIdentifier ErrorCodeEnum = "UK.OBIE.Unsupported.AccountSecondaryIdentifier"
	ErrorCodeEnumUkObieUnsupportedCurrency                   ErrorCodeEnum = "UK.OBIE.Unsupported.Currency"
	ErrorCodeEnumUkObieUnsupportedEventType                  ErrorCodeEnum = "UK.OBIE.Unsupported.EventType"
	ErrorCodeEnumUkObieUnsupportedFrequency                  ErrorCodeEnum = "UK.OBIE.Unsupported.Frequency"
	ErrorCodeEnumUkObieUnsupportedLocalInstrument            ErrorCodeEnum = "UK.OBIE.Unsupported.LocalInstrument"
	ErrorCodeEnumUkObieUnsupportedScheme                     ErrorCodeEnum = "UK.OBIE.Unsupported.Scheme"
	ErrorCodeEnumUkObieReauthenticate                        ErrorCodeEnum = "UK.OBIE.Reauthenticate"
	ErrorCodeEnumUkObieRulesResourceAlreadyExists            ErrorCodeEnum = "UK.OBIE.Rules.ResourceAlreadyExists"
	ErrorCodeEnumUkObieUnexpectedError                       ErrorCodeEnum = "UK.OBIE.UnexpectedError"
)

func (e *ErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UK.OBIE.Field.Expected":
		fallthrough
	case "UK.OBIE.Field.Invalid":
		fallthrough
	case "UK.OBIE.Field.InvalidDate":
		fallthrough
	case "UK.OBIE.Field.Missing":
		fallthrough
	case "UK.OBIE.Field.Unexpected":
		fallthrough
	case "UK.OBIE.Header.Invalid":
		fallthrough
	case "UK.OBIE.Header.Missing":
		fallthrough
	case "UK.OBIE.Resource.ConsentMismatch":
		fallthrough
	case "UK.OBIE.Resource.InvalidConsentStatus":
		fallthrough
	case "UK.OBIE.Resource.InvalidFormat":
		fallthrough
	case "UK.OBIE.Resource.NotFound":
		fallthrough
	case "UK.OBIE.Rules.AfterCutOffDateTime":
		fallthrough
	case "UK.OBIE.Rules.DuplicateReference":
		fallthrough
	case "UK.OBIE.Signature.Invalid":
		fallthrough
	case "UK.OBIE.Signature.InvalidClaim":
		fallthrough
	case "UK.OBIE.Signature.MissingClaim":
		fallthrough
	case "UK.OBIE.Signature.Malformed":
		fallthrough
	case "UK.OBIE.Signature.Missing":
		fallthrough
	case "UK.OBIE.Signature.Unexpected":
		fallthrough
	case "UK.OBIE.Unsupported.AccountIdentifier":
		fallthrough
	case "UK.OBIE.Unsupported.AccountSecondaryIdentifier":
		fallthrough
	case "UK.OBIE.Unsupported.Currency":
		fallthrough
	case "UK.OBIE.Unsupported.EventType":
		fallthrough
	case "UK.OBIE.Unsupported.Frequency":
		fallthrough
	case "UK.OBIE.Unsupported.LocalInstrument":
		fallthrough
	case "UK.OBIE.Unsupported.Scheme":
		fallthrough
	case "UK.OBIE.Reauthenticate":
		fallthrough
	case "UK.OBIE.Rules.ResourceAlreadyExists":
		fallthrough
	case "UK.OBIE.UnexpectedError":
		*e = ErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorCodeEnum: %s", s)
	}
}
