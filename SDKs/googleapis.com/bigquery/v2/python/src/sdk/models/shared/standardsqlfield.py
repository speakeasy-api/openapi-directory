"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import standardsqldatatype as shared_standardsqldatatype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StandardSQLField:
    r"""A field or a column."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Optional. The name of this field. Can be absent for struct fields."""  
    type: Optional[shared_standardsqldatatype.StandardSQLDataType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The data type of a variable such as a function argument. Examples include: * INT64: `{\\"typeKind\\": \\"INT64\\"}` * ARRAY: { \\"typeKind\\": \\"ARRAY\\", \\"arrayElementType\\": {\\"typeKind\\": \\"STRING\\"} } * STRUCT>: { \\"typeKind\\": \\"STRUCT\\", \\"structType\\": { \\"fields\\": [ { \\"name\\": \\"x\\", \\"type\\": {\\"typeKind\\": \\"STRING\\"} }, { \\"name\\": \\"y\\", \\"type\\": { \\"typeKind\\": \\"ARRAY\\", \\"arrayElementType\\": {\\"typeKind\\": \\"DATE\\"} } } ] } }"""  
    