"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cloudwatchlogslogdelivery as shared_cloudwatchlogslogdelivery
from ..shared import firehoselogdelivery as shared_firehoselogdelivery
from ..shared import s3logdelivery as shared_s3logdelivery
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WorkerLogDelivery:
    r"""Workers can send worker logs to different destination types. This configuration specifies the details of these destinations."""
    
    cloud_watch_logs: Optional[shared_cloudwatchlogslogdelivery.CloudWatchLogsLogDelivery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudWatchLogs'), 'exclude': lambda f: f is None }})  
    firehose: Optional[shared_firehoselogdelivery.FirehoseLogDelivery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firehose'), 'exclude': lambda f: f is None }})  
    s3: Optional[shared_s3logdelivery.S3LogDelivery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('s3'), 'exclude': lambda f: f is None }})  
    