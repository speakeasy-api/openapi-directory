/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorProto } from "./errorproto";
import { Expose, Type } from "class-transformer";

/**
 * Global error code. Deprecated and ignored. Set custom error codes in ErrorProto.domain and ErrorProto.code instead.
 */
export enum ErrorsCodeEnum {
  BadRequest = "BAD_REQUEST",
  Forbidden = "FORBIDDEN",
  NotFound = "NOT_FOUND",
  Conflict = "CONFLICT",
  Gone = "GONE",
  PreconditionFailed = "PRECONDITION_FAILED",
  InternalError = "INTERNAL_ERROR",
  ServiceUnavailable = "SERVICE_UNAVAILABLE",
}

/**
 * Request Error information. The presence of an error field signals that the operation has failed.
 */
export class Errors extends SpeakeasyBase {
  /**
   * Global error code. Deprecated and ignored. Set custom error codes in ErrorProto.domain and ErrorProto.code instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: ErrorsCodeEnum;

  /**
   * Specific error description and codes
   */
  @SpeakeasyMetadata({ elemType: ErrorProto })
  @Expose({ name: "error" })
  @Type(() => ErrorProto)
  error?: ErrorProto[];

  /**
   * Request identifier generated by the service, which can be used to identify the error in the logs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;
}
