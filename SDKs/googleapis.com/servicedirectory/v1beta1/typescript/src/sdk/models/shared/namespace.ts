/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A container for services. Namespaces allow administrators to group services together and define permissions for a collection of services.
 */
export class Namespace extends SpeakeasyBase {
  /**
   * Output only. The timestamp when the namespace was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Optional. Resource labels associated with this namespace. No more than 64 user labels can be associated with a given resource. Label keys and values can be no longer than 63 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Immutable. The resource name for the namespace in the format `projects/* /locations/* /namespaces/*`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. A globally unique identifier (in UUID4 format) for this namespace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;

  /**
   * Output only. The timestamp when the namespace was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * A container for services. Namespaces allow administrators to group services together and define permissions for a collection of services.
 */
export class NamespaceInput extends SpeakeasyBase {
  /**
   * Optional. Resource labels associated with this namespace. No more than 64 user labels can be associated with a given resource. Label keys and values can be no longer than 63 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Immutable. The resource name for the namespace in the format `projects/* /locations/* /namespaces/*`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
