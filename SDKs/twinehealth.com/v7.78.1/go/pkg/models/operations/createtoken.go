// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateTokenSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// CreateTokenIncludeEnum - List of related resources to include in the response
type CreateTokenIncludeEnum string

const (
	CreateTokenIncludeEnumGroups       CreateTokenIncludeEnum = "groups"
	CreateTokenIncludeEnumOrganization CreateTokenIncludeEnum = "organization"
)

func (e CreateTokenIncludeEnum) ToPointer() *CreateTokenIncludeEnum {
	return &e
}

func (e *CreateTokenIncludeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "groups":
		fallthrough
	case "organization":
		*e = CreateTokenIncludeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTokenIncludeEnum: %v", v)
	}
}

type CreateTokenRequest struct {
	CreateTokenRequest shared.CreateTokenRequest `request:"mediaType=application/json"`
	// List of related resources to include in the response
	Include *CreateTokenIncludeEnum `queryParam:"style=form,explode=true,name=include"`
}

type CreateTokenResponse struct {
	ContentType string
	// Unauthorized
	CreateOrUpdateErrorResponse *shared.CreateOrUpdateErrorResponse
	// Created
	CreateTokenResponse *shared.CreateTokenResponse
	StatusCode          int
	RawResponse         *http.Response
}
