"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatalabelingv1beta1imageboundingpolyannotation as shared_googleclouddatalabelingv1beta1imageboundingpolyannotation
from ..shared import googleclouddatalabelingv1beta1imageclassificationannotation as shared_googleclouddatalabelingv1beta1imageclassificationannotation
from ..shared import googleclouddatalabelingv1beta1imagepolylineannotation as shared_googleclouddatalabelingv1beta1imagepolylineannotation
from ..shared import googleclouddatalabelingv1beta1imagesegmentationannotation as shared_googleclouddatalabelingv1beta1imagesegmentationannotation
from ..shared import googleclouddatalabelingv1beta1textclassificationannotation as shared_googleclouddatalabelingv1beta1textclassificationannotation
from ..shared import googleclouddatalabelingv1beta1textentityextractionannotation as shared_googleclouddatalabelingv1beta1textentityextractionannotation
from ..shared import googleclouddatalabelingv1beta1videoclassificationannotation as shared_googleclouddatalabelingv1beta1videoclassificationannotation
from ..shared import googleclouddatalabelingv1beta1videoeventannotation as shared_googleclouddatalabelingv1beta1videoeventannotation
from ..shared import googleclouddatalabelingv1beta1videoobjecttrackingannotation as shared_googleclouddatalabelingv1beta1videoobjecttrackingannotation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatalabelingV1beta1AnnotationValue:
    r"""Annotation value for an example."""
    
    image_bounding_poly_annotation: Optional[shared_googleclouddatalabelingv1beta1imageboundingpolyannotation.GoogleCloudDatalabelingV1beta1ImageBoundingPolyAnnotation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageBoundingPolyAnnotation'), 'exclude': lambda f: f is None }})
    r"""Image bounding poly annotation. It represents a polygon including bounding box in the image."""  
    image_classification_annotation: Optional[shared_googleclouddatalabelingv1beta1imageclassificationannotation.GoogleCloudDatalabelingV1beta1ImageClassificationAnnotation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageClassificationAnnotation'), 'exclude': lambda f: f is None }})
    r"""Image classification annotation definition."""  
    image_polyline_annotation: Optional[shared_googleclouddatalabelingv1beta1imagepolylineannotation.GoogleCloudDatalabelingV1beta1ImagePolylineAnnotation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imagePolylineAnnotation'), 'exclude': lambda f: f is None }})
    r"""A polyline for the image annotation."""  
    image_segmentation_annotation: Optional[shared_googleclouddatalabelingv1beta1imagesegmentationannotation.GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageSegmentationAnnotation'), 'exclude': lambda f: f is None }})
    r"""Image segmentation annotation."""  
    text_classification_annotation: Optional[shared_googleclouddatalabelingv1beta1textclassificationannotation.GoogleCloudDatalabelingV1beta1TextClassificationAnnotation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textClassificationAnnotation'), 'exclude': lambda f: f is None }})
    r"""Text classification annotation."""  
    text_entity_extraction_annotation: Optional[shared_googleclouddatalabelingv1beta1textentityextractionannotation.GoogleCloudDatalabelingV1beta1TextEntityExtractionAnnotation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textEntityExtractionAnnotation'), 'exclude': lambda f: f is None }})
    r"""Text entity extraction annotation."""  
    video_classification_annotation: Optional[shared_googleclouddatalabelingv1beta1videoclassificationannotation.GoogleCloudDatalabelingV1beta1VideoClassificationAnnotation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoClassificationAnnotation'), 'exclude': lambda f: f is None }})
    r"""Video classification annotation."""  
    video_event_annotation: Optional[shared_googleclouddatalabelingv1beta1videoeventannotation.GoogleCloudDatalabelingV1beta1VideoEventAnnotation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoEventAnnotation'), 'exclude': lambda f: f is None }})
    r"""Video event annotation."""  
    video_object_tracking_annotation: Optional[shared_googleclouddatalabelingv1beta1videoobjecttrackingannotation.GoogleCloudDatalabelingV1beta1VideoObjectTrackingAnnotation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoObjectTrackingAnnotation'), 'exclude': lambda f: f is None }})
    r"""Video object tracking annotation."""  
    