/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetRecruitingPlayersRequest extends SpeakeasyBase {
  /**
   * Type of recruit (HighSchool, JUCO, PrepSchool)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=classification",
  })
  classification?: string;

  /**
   * Position abbreviation filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=position",
  })
  position?: string;

  /**
   * State or province abbreviation filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=state" })
  state?: string;

  /**
   * Committed team filter (required if year not specified)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=team" })
  team?: string;

  /**
   * Recruiting class year (required if team no specified)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year?: number;
}

export class GetRecruitingPlayersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * successful operation
   */
  @SpeakeasyMetadata({ elemType: shared.Recruit })
  recruits?: shared.Recruit[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
