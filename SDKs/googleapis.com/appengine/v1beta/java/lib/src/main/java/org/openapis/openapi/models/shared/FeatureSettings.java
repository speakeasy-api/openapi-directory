/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FeatureSettings - The feature specific settings to be used in the application. These define behaviors that are user configurable.
 */
public class FeatureSettings {
    /**
     * Boolean value indicating if split health checks should be used instead of the legacy health checks. At an app.yaml level, this means defaulting to 'readiness_check' and 'liveness_check' values instead of 'health_check' ones. Once the legacy 'health_check' behavior is deprecated, and this value is always true, this setting can be removed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("splitHealthChecks")
    public Boolean splitHealthChecks;

    public FeatureSettings withSplitHealthChecks(Boolean splitHealthChecks) {
        this.splitHealthChecks = splitHealthChecks;
        return this;
    }
    
    /**
     * If true, use Container-Optimized OS (https://cloud.google.com/container-optimized-os/) base image for VMs, rather than a base Debian image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useContainerOptimizedOs")
    public Boolean useContainerOptimizedOs;

    public FeatureSettings withUseContainerOptimizedOs(Boolean useContainerOptimizedOs) {
        this.useContainerOptimizedOs = useContainerOptimizedOs;
        return this;
    }
    
    public FeatureSettings(){}
}
