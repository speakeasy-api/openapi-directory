<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ConfigurationInput - A configuration collects the provisioning options for Android devices. Each configuration combines the following: * The EMM device policy controller (DPC) installed on the devices. * EMM policies enforced on the devices. * Metadata displayed on the device to help users during setup. Customers can add as many configurations as they need. However, zero-touch enrollment works best when a customer sets a default configuration that's applied to any new devices the organization purchases.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ConfigurationInput
{
    /**
     * Required. The name of the organization. Zero-touch enrollment shows this organization name to device users during device provisioning.
     * 
     * @var ?string $companyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('companyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyName = null;
    
    /**
     * Required. A short name that describes the configuration's purpose. For example, _Sales team_ or _Temporary employees_. The zero-touch enrollment portal displays this name to IT admins.
     * 
     * @var ?string $configurationName
     */
	#[\JMS\Serializer\Annotation\SerializedName('configurationName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $configurationName = null;
    
    /**
     * Required. The email address that device users can contact to get help. Zero-touch enrollment shows this email address to device users before device provisioning. The value is validated on input.
     * 
     * @var ?string $contactEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('contactEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $contactEmail = null;
    
    /**
     * Required. The telephone number that device users can call, using another device, to get help. Zero-touch enrollment shows this number to device users before device provisioning. Accepts numerals, spaces, the plus sign, hyphens, and parentheses.
     * 
     * @var ?string $contactPhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('contactPhone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $contactPhone = null;
    
    /**
     * A message, containing one or two sentences, to help device users get help or give them more details about whatâ€™s happening to their device. Zero-touch enrollment shows this message before the device is provisioned.
     * 
     * @var ?string $customMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('customMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customMessage = null;
    
    /**
     * The JSON-formatted EMM provisioning extras that are passed to the DPC.
     * 
     * @var ?string $dpcExtras
     */
	#[\JMS\Serializer\Annotation\SerializedName('dpcExtras')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dpcExtras = null;
    
    /**
     * Required. The resource name of the selected DPC (device policy controller) in the format `customers/[CUSTOMER_ID]/dpcs/*`. To list the supported DPCs, call `customers.dpcs.list`.
     * 
     * @var ?string $dpcResourcePath
     */
	#[\JMS\Serializer\Annotation\SerializedName('dpcResourcePath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dpcResourcePath = null;
    
    /**
     * Required. Whether this is the default configuration that zero-touch enrollment applies to any new devices the organization purchases in the future. Only one customer configuration can be the default. Setting this value to `true`, changes the previous default configuration's `isDefault` value to `false`.
     * 
     * @var ?bool $isDefault
     */
	#[\JMS\Serializer\Annotation\SerializedName('isDefault')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isDefault = null;
    
	public function __construct()
	{
		$this->companyName = null;
		$this->configurationName = null;
		$this->contactEmail = null;
		$this->contactPhone = null;
		$this->customMessage = null;
		$this->dpcExtras = null;
		$this->dpcResourcePath = null;
		$this->isDefault = null;
	}
}
