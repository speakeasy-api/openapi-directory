// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RxNormEntityTypeEnum string

const (
	RxNormEntityTypeEnumBrandName   RxNormEntityTypeEnum = "BRAND_NAME"
	RxNormEntityTypeEnumGenericName RxNormEntityTypeEnum = "GENERIC_NAME"
)

func (e RxNormEntityTypeEnum) ToPointer() *RxNormEntityTypeEnum {
	return &e
}

func (e *RxNormEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BRAND_NAME":
		fallthrough
	case "GENERIC_NAME":
		*e = RxNormEntityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RxNormEntityTypeEnum: %v", v)
	}
}
