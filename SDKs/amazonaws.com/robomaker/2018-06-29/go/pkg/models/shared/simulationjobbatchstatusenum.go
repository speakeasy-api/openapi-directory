// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SimulationJobBatchStatusEnum string

const (
	SimulationJobBatchStatusEnumPending    SimulationJobBatchStatusEnum = "Pending"
	SimulationJobBatchStatusEnumInProgress SimulationJobBatchStatusEnum = "InProgress"
	SimulationJobBatchStatusEnumFailed     SimulationJobBatchStatusEnum = "Failed"
	SimulationJobBatchStatusEnumCompleted  SimulationJobBatchStatusEnum = "Completed"
	SimulationJobBatchStatusEnumCanceled   SimulationJobBatchStatusEnum = "Canceled"
	SimulationJobBatchStatusEnumCanceling  SimulationJobBatchStatusEnum = "Canceling"
	SimulationJobBatchStatusEnumCompleting SimulationJobBatchStatusEnum = "Completing"
	SimulationJobBatchStatusEnumTimingOut  SimulationJobBatchStatusEnum = "TimingOut"
	SimulationJobBatchStatusEnumTimedOut   SimulationJobBatchStatusEnum = "TimedOut"
)

func (e SimulationJobBatchStatusEnum) ToPointer() *SimulationJobBatchStatusEnum {
	return &e
}

func (e *SimulationJobBatchStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "InProgress":
		fallthrough
	case "Failed":
		fallthrough
	case "Completed":
		fallthrough
	case "Canceled":
		fallthrough
	case "Canceling":
		fallthrough
	case "Completing":
		fallthrough
	case "TimingOut":
		fallthrough
	case "TimedOut":
		*e = SimulationJobBatchStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulationJobBatchStatusEnum: %v", v)
	}
}
