/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { PipelineObject } from "./pipelineobject";
import { Expose, Transform } from "class-transformer";

/**
 * Contains information about a pipeline task that is assigned to a task runner.
 */
export class TaskObject extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attemptId" })
  attemptId?: string;

  @SpeakeasyMetadata({ elemType: PipelineObject })
  @Expose({ name: "objects" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, PipelineObject> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], PipelineObject);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  objects?: Record<string, PipelineObject>;

  @SpeakeasyMetadata()
  @Expose({ name: "pipelineId" })
  pipelineId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "taskId" })
  taskId?: string;
}
