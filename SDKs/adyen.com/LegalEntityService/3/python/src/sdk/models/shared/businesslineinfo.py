"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sourceoffunds as shared_sourceoffunds
from ..shared import webdata as shared_webdata
from ..shared import webdataexemption as shared_webdataexemption
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BusinessLineInfoServiceEnum(str, Enum):
    r"""The service for which you are creating the business line.
    
    Possible values:**paymentProcessing**, **issuing**, **banking**
    """
    PAYMENT_PROCESSING = 'paymentProcessing'
    ISSUING = 'issuing'
    BANKING = 'banking'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BusinessLineInfoInput:
    
    industry_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('industryCode') }})
    r"""A code that represents the industry of the legal entity. For example, **4431A** for computer software stores."""  
    legal_entity_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalEntityId') }})
    r"""Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) that owns the business line."""  
    service: BusinessLineInfoServiceEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service') }})
    r"""The service for which you are creating the business line.
    
    Possible values:**paymentProcessing**, **issuing**, **banking**
    """  
    capability: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capability'), 'exclude': lambda f: f is None }})
    r"""The capability for which you are creating the business line. For example, **receivePayments**."""  
    sales_channels: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('salesChannels'), 'exclude': lambda f: f is None }})
    r"""A list of channels where goods or services are sold.
    
    Possible values: **pos**, **posMoto**, **eCommerce**, **ecomMoto**, **payByLink**.
    
    Required only in combination with the `service` **paymentProcessing**.
    """  
    source_of_funds: Optional[shared_sourceoffunds.SourceOfFunds] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceOfFunds'), 'exclude': lambda f: f is None }})  
    web_data: Optional[list[shared_webdata.WebDataInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webData'), 'exclude': lambda f: f is None }})
    r"""List of website URLs where your user's goods or services are sold. When this is required for a service but your user does not have an online presence, provide the reason in the `webDataExemption` object."""  
    web_data_exemption: Optional[shared_webdataexemption.WebDataExemption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webDataExemption'), 'exclude': lambda f: f is None }})  
    