"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import appointmentphonenumber as shared_appointmentphonenumber
from ..shared import detailedserviceaddress as shared_detailedserviceaddress
from ..shared import detailedserviceemailcontact as shared_detailedserviceemailcontact
from ..shared import detailedservicehours as shared_detailedservicehours
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DetailedServiceLocation:
    r"""Details for a location offering a service."""
    
    additional_hours_info: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additional_hours_info'), 'exclude': lambda f: f is None }})
    r"""Additional information related to service location hours."""  
    appointment_phones: Optional[list[shared_appointmentphonenumber.AppointmentPhoneNumber]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appointment_phones'), 'exclude': lambda f: f is None }})
    r"""List of appointment phone information."""  
    email_contacts: Optional[list[shared_detailedserviceemailcontact.DetailedServiceEmailContact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email_contacts'), 'exclude': lambda f: f is None }})
    r"""List of email contact information."""  
    facility_service_hours: Optional[shared_detailedservicehours.DetailedServiceHours] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('facility_service_hours'), 'exclude': lambda f: f is None }})
    r"""Standard hours of operation. Currently formatted as descriptive text suitable for display, with no guarantee of a standard parseable format. Hours of operation may vary due to holidays or other events."""  
    service_location_address: Optional[shared_detailedserviceaddress.DetailedServiceAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_location_address'), 'exclude': lambda f: f is None }})
    r"""Service location address."""  
    