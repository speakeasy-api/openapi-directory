"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listorders as shared_listorders
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListOrders2RequestBody:
    
    f_creation_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('f_creationDate') }})
    r"""Concatened value sufix {{creationDate}} and range date in Timestamp format."""  
    page: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page') }})
    r"""Number of the page to be retrieved."""  
    per_page: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('per_page') }})
    r"""Number of orders per page."""  
    q: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('q'), 'exclude': lambda f: f is None }})
    r"""Full-text search for the orders."""  
    

@dataclasses.dataclass
class ListOrders2Request:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent."""  
    f_has_input_invoice: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'f_hasInputInvoice', 'style': 'form', 'explode': True }})
    r"""Filters list to return only orders with non `null` values for the `invoiceInput` field."""  
    request_body: Optional[ListOrders2RequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class ListOrders2Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    list_orders: Optional[shared_listorders.ListOrders] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    