/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attribute } from "./attribute";
import { SeverityEnum } from "./severityenum";
import { TimestampRange } from "./timestamprange";
import { Expose, Type } from "class-transformer";

/**
 * This data type is used as a request parameter in the <a>ListFindings</a> action.
 */
export class FindingFilter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "agentIds" })
  agentIds?: string[];

  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "attributes" })
  @Type(() => Attribute)
  attributes?: Attribute[];

  @SpeakeasyMetadata()
  @Expose({ name: "autoScalingGroups" })
  autoScalingGroups?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "creationTimeRange" })
  @Type(() => TimestampRange)
  creationTimeRange?: TimestampRange;

  @SpeakeasyMetadata()
  @Expose({ name: "ruleNames" })
  ruleNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "rulesPackageArns" })
  rulesPackageArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "severities" })
  severities?: SeverityEnum[];

  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "userAttributes" })
  @Type(() => Attribute)
  userAttributes?: Attribute[];
}
