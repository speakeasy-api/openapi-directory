/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Whether or not to fetch up to 15 latest episodes from these podcasts, sorted by pub_date. 1 is yes, and 0 is no.
 *
 * @remarks
 *
 */
export enum GetPodcastsInBatchFormShowLatestEpisodesEnum {
  Zero = "0",
  One = "1",
}

export class GetPodcastsInBatchForm extends SpeakeasyBase {
  /**
   * Comma-separated list of podcast ids.
   */
  @SpeakeasyMetadata({ data: "form, name=ids" })
  ids?: string;

  /**
   * Comma-separated Apple Podcasts (iTunes) ids, e.g., 659155419
   */
  @SpeakeasyMetadata({ data: "form, name=itunes_ids" })
  itunesIds?: string;

  /**
   * For latest episodes pagination. It's the value of **next_episode_pub_date** from the response of last request. If not specified, just return latest 15 episodes.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "form, name=next_episode_pub_date" })
  nextEpisodePubDate?: number;

  /**
   * Comma-separated rss urls.
   */
  @SpeakeasyMetadata({ data: "form, name=rsses" })
  rsses?: string;

  /**
   * Whether or not to fetch up to 15 latest episodes from these podcasts, sorted by pub_date. 1 is yes, and 0 is no.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "form, name=show_latest_episodes" })
  showLatestEpisodes?: GetPodcastsInBatchFormShowLatestEpisodesEnum;

  /**
   * Comma-separated Spotify ids, e.g., 3DDfEsKDIDrTlnPOiG4ZF4
   */
  @SpeakeasyMetadata({ data: "form, name=spotify_ids" })
  spotifyIds?: string;
}
