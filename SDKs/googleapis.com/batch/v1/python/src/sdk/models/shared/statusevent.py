"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import taskexecution as shared_taskexecution
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class StatusEventTaskStateEnum(str, Enum):
    r"""Task State"""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    PENDING = 'PENDING'
    ASSIGNED = 'ASSIGNED'
    RUNNING = 'RUNNING'
    FAILED = 'FAILED'
    SUCCEEDED = 'SUCCEEDED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StatusEvent:
    r"""Status event"""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the event."""  
    event_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventTime'), 'exclude': lambda f: f is None }})
    r"""The time this event occurred."""  
    task_execution: Optional[shared_taskexecution.TaskExecution] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskExecution'), 'exclude': lambda f: f is None }})
    r"""This Task Execution field includes detail information for task execution procedures, based on StatusEvent types."""  
    task_state: Optional[StatusEventTaskStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskState'), 'exclude': lambda f: f is None }})
    r"""Task State"""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the event."""  
    