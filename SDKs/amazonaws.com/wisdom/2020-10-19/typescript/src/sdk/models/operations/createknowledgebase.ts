/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The type of knowledge base. Only CUSTOM knowledge bases allow you to upload your own content. EXTERNAL knowledge bases support integrations with third-party systems whose content is synchronized automatically.
 */
export enum CreateKnowledgeBaseRequestBodyKnowledgeBaseTypeEnum {
  External = "EXTERNAL",
  Custom = "CUSTOM",
}

/**
 * Information about how to render the content.
 */
export class CreateKnowledgeBaseRequestBodyRenderingConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "templateUri" })
  templateUri?: string;
}

/**
 * The KMS key used for encryption.
 */
export class CreateKnowledgeBaseRequestBodyServerSideEncryptionConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "kmsKeyId" })
  kmsKeyId?: string;
}

/**
 * Configuration information about the external data source.
 */
export class CreateKnowledgeBaseRequestBodySourceConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "appIntegrations" })
  @Type(() => shared.AppIntegrationsConfiguration)
  appIntegrations?: shared.AppIntegrationsConfiguration;
}

export class CreateKnowledgeBaseRequestBody extends SpeakeasyBase {
  /**
   * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientToken" })
  clientToken?: string;

  /**
   * The description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The type of knowledge base. Only CUSTOM knowledge bases allow you to upload your own content. EXTERNAL knowledge bases support integrations with third-party systems whose content is synchronized automatically.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "knowledgeBaseType" })
  knowledgeBaseType: CreateKnowledgeBaseRequestBodyKnowledgeBaseTypeEnum;

  /**
   * The name of the knowledge base.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Information about how to render the content.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "renderingConfiguration" })
  @Type(() => CreateKnowledgeBaseRequestBodyRenderingConfiguration)
  renderingConfiguration?: CreateKnowledgeBaseRequestBodyRenderingConfiguration;

  /**
   * The KMS key used for encryption.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serverSideEncryptionConfiguration" })
  @Type(() => CreateKnowledgeBaseRequestBodyServerSideEncryptionConfiguration)
  serverSideEncryptionConfiguration?: CreateKnowledgeBaseRequestBodyServerSideEncryptionConfiguration;

  /**
   * Configuration information about the external data source.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceConfiguration" })
  @Type(() => CreateKnowledgeBaseRequestBodySourceConfiguration)
  sourceConfiguration?: CreateKnowledgeBaseRequestBodySourceConfiguration;

  /**
   * The tags used to organize, track, or control access for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}

export class CreateKnowledgeBaseRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateKnowledgeBaseRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateKnowledgeBaseResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createKnowledgeBaseResponse?: shared.CreateKnowledgeBaseResponse;

  /**
   * ServiceQuotaExceededException
   */
  @SpeakeasyMetadata()
  serviceQuotaExceededException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
