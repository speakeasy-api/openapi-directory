/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Author of the article
 */
export class VideoArticleUser extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Representation of an Article with video
 */
export class VideoArticle extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cloudinary_video_url" })
  cloudinaryVideoUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type_of" })
  typeOf?: string;

  /**
   * Author of the article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => VideoArticleUser)
  user?: VideoArticleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "video_duration_in_minutes" })
  videoDurationInMinutes?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "video_source_url" })
  videoSourceUrl?: string;
}
