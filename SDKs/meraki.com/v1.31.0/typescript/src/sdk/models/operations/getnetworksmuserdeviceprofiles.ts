/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetNetworkSmUserDeviceProfilesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

export class GetNetworkSmUserDeviceProfiles200ApplicationJSON extends SpeakeasyBase {
  /**
   * The Meraki managed device Id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceId" })
  deviceId?: string;

  /**
   * The numerical Meraki Id of the profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * A boolean indicating if the profile is encrypted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isEncrypted" })
  isEncrypted?: boolean;

  /**
   * Whether or not the profile is managed by Meraki.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isManaged" })
  isManaged?: boolean;

  /**
   * The name of the profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A string containing a JSON object with the profile data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileData" })
  profileData?: string;

  /**
   * The identifier of the profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileIdentifier" })
  profileIdentifier?: string;

  /**
   * The verison of the profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}

export class GetNetworkSmUserDeviceProfilesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({
    elemType: GetNetworkSmUserDeviceProfiles200ApplicationJSON,
  })
  getNetworkSmUserDeviceProfiles200ApplicationJSONObjects?: GetNetworkSmUserDeviceProfiles200ApplicationJSON[];
}
