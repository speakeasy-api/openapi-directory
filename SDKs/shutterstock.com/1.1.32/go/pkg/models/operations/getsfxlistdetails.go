// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetSfxListDetailsSecurity struct {
	Basic              *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *string             `security:"scheme,type=oauth2,name=Authorization"`
}

// GetSfxListDetailsLibraryEnum - Which library to fetch from
type GetSfxListDetailsLibraryEnum string

const (
	GetSfxListDetailsLibraryEnumShutterstock GetSfxListDetailsLibraryEnum = "shutterstock"
	GetSfxListDetailsLibraryEnumPremier      GetSfxListDetailsLibraryEnum = "premier"
	GetSfxListDetailsLibraryEnumPremiumbeat  GetSfxListDetailsLibraryEnum = "premiumbeat"
)

func (e GetSfxListDetailsLibraryEnum) ToPointer() *GetSfxListDetailsLibraryEnum {
	return &e
}

func (e *GetSfxListDetailsLibraryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shutterstock":
		fallthrough
	case "premier":
		fallthrough
	case "premiumbeat":
		*e = GetSfxListDetailsLibraryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSfxListDetailsLibraryEnum: %v", v)
	}
}

// GetSfxListDetailsViewEnum - Amount of detail to render in the response
type GetSfxListDetailsViewEnum string

const (
	GetSfxListDetailsViewEnumMinimal GetSfxListDetailsViewEnum = "minimal"
	GetSfxListDetailsViewEnumFull    GetSfxListDetailsViewEnum = "full"
)

func (e GetSfxListDetailsViewEnum) ToPointer() *GetSfxListDetailsViewEnum {
	return &e
}

func (e *GetSfxListDetailsViewEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "minimal":
		fallthrough
	case "full":
		*e = GetSfxListDetailsViewEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSfxListDetailsViewEnum: %v", v)
	}
}

type GetSfxListDetailsRequest struct {
	// One or more sound effect IDs
	ID []string `queryParam:"style=form,explode=true,name=id"`
	// Language for the keywords and categories in the response
	Language *shared.LanguageEnum `queryParam:"style=form,explode=true,name=language"`
	// Which library to fetch from
	Library *GetSfxListDetailsLibraryEnum `queryParam:"style=form,explode=true,name=library"`
	// The ID of the search that is related to this request
	SearchID *string `queryParam:"style=form,explode=true,name=search_id"`
	// Amount of detail to render in the response
	View *GetSfxListDetailsViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type GetSfxListDetailsResponse struct {
	ContentType string
	// OK
	SFXDataList *shared.SFXDataList
	StatusCode  int
	RawResponse *http.Response
}
