// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListTypesActionEnum
type POSTListTypesActionEnum string

const (
	POSTListTypesActionEnumListTypes POSTListTypesActionEnum = "ListTypes"
)

func (e POSTListTypesActionEnum) ToPointer() *POSTListTypesActionEnum {
	return &e
}

func (e *POSTListTypesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListTypes":
		*e = POSTListTypesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListTypesActionEnum: %v", v)
	}
}

// POSTListTypesVersionEnum
type POSTListTypesVersionEnum string

const (
	POSTListTypesVersionEnumTwoThousandAndTen0515 POSTListTypesVersionEnum = "2010-05-15"
)

func (e POSTListTypesVersionEnum) ToPointer() *POSTListTypesVersionEnum {
	return &e
}

func (e *POSTListTypesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-15":
		*e = POSTListTypesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListTypesVersionEnum: %v", v)
	}
}

type POSTListTypesRequest struct {
	Action POSTListTypesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                  `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                   `request:"mediaType=text/xml"`
	Version           POSTListTypesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListTypesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
