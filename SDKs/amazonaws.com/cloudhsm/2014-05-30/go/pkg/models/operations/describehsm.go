// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeHsmXAmzTargetEnum
type DescribeHsmXAmzTargetEnum string

const (
	DescribeHsmXAmzTargetEnumCloudHsmFrontendServiceDescribeHsm DescribeHsmXAmzTargetEnum = "CloudHsmFrontendService.DescribeHsm"
)

func (e DescribeHsmXAmzTargetEnum) ToPointer() *DescribeHsmXAmzTargetEnum {
	return &e
}

func (e *DescribeHsmXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CloudHsmFrontendService.DescribeHsm":
		*e = DescribeHsmXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeHsmXAmzTargetEnum: %v", v)
	}
}

type DescribeHsmRequest struct {
	DescribeHsmRequest shared.DescribeHsmRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         DescribeHsmXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeHsmResponse struct {
	// CloudHsmInternalException
	CloudHsmInternalException interface{}
	// CloudHsmServiceException
	CloudHsmServiceException interface{}
	ContentType              string
	// Success
	DescribeHsmResponse *shared.DescribeHsmResponse
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
