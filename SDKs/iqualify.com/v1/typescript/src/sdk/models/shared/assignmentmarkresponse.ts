/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class AssignmentMarkResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assessmentId" })
  assessmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentItemDetails" })
  assessmentItemDetails?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentItemName" })
  assessmentItemName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "courseName" })
  courseName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "learnerEmail" })
  learnerEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "learnerFirstName" })
  learnerFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "learnerLastName" })
  learnerLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "learnerPersonId" })
  learnerPersonId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mark" })
  mark?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "markFeedback" })
  markFeedback?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "markedBy" })
  markedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "markedByEvaluator" })
  markedByEvaluator?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "markedByFacilitator" })
  markedByFacilitator?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "markedByMarker" })
  markedByMarker?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "markedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  markedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "submissionDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submissionDateTime?: Date;
}
