// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudMlV1StudyStateEnum - Output only. The detailed state of a study.
type GoogleCloudMlV1StudyStateEnum string

const (
	GoogleCloudMlV1StudyStateEnumStateUnspecified GoogleCloudMlV1StudyStateEnum = "STATE_UNSPECIFIED"
	GoogleCloudMlV1StudyStateEnumActive           GoogleCloudMlV1StudyStateEnum = "ACTIVE"
	GoogleCloudMlV1StudyStateEnumInactive         GoogleCloudMlV1StudyStateEnum = "INACTIVE"
	GoogleCloudMlV1StudyStateEnumCompleted        GoogleCloudMlV1StudyStateEnum = "COMPLETED"
)

func (e *GoogleCloudMlV1StudyStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "COMPLETED":
		*e = GoogleCloudMlV1StudyStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudMlV1StudyStateEnum: %s", s)
	}
}

// GoogleCloudMlV1Study - A message representing a Study.
type GoogleCloudMlV1Study struct {
	// Output only. Time at which the study was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.
	InactiveReason *string `json:"inactiveReason,omitempty"`
	// Output only. The name of a study.
	Name *string `json:"name,omitempty"`
	// Output only. The detailed state of a study.
	State *GoogleCloudMlV1StudyStateEnum `json:"state,omitempty"`
	// Represents configuration of a study.
	StudyConfig *GoogleCloudMlV1StudyConfig `json:"studyConfig,omitempty"`
}

// GoogleCloudMlV1StudyInput - A message representing a Study.
type GoogleCloudMlV1StudyInput struct {
	// Represents configuration of a study.
	StudyConfig *GoogleCloudMlV1StudyConfig `json:"studyConfig,omitempty"`
}
