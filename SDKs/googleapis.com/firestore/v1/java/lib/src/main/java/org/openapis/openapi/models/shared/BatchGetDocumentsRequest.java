/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BatchGetDocumentsRequest - The request for Firestore.BatchGetDocuments.
 */
public class BatchGetDocumentsRequest {
    /**
     * The names of the documents to retrieve. In the format: `projects/{project_id}/databases/{database_id}/documents/{document_path}`. The request will fail if any of the document is not a child resource of the given `database`. Duplicate names will be elided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documents")
    public String[] documents;

    public BatchGetDocumentsRequest withDocuments(String[] documents) {
        this.documents = documents;
        return this;
    }
    
    /**
     * A set of field paths on a document. Used to restrict a get or update operation on a document to a subset of its fields. This is different from standard field masks, as this is always scoped to a Document, and takes in account the dynamic nature of Value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mask")
    public DocumentMask mask;

    public BatchGetDocumentsRequest withMask(DocumentMask mask) {
        this.mask = mask;
        return this;
    }
    
    /**
     * Options for creating a new transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newTransaction")
    public TransactionOptions newTransaction;

    public BatchGetDocumentsRequest withNewTransaction(TransactionOptions newTransaction) {
        this.newTransaction = newTransaction;
        return this;
    }
    
    /**
     * Reads documents as they were at the given time. This may not be older than 270 seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readTime")
    public String readTime;

    public BatchGetDocumentsRequest withReadTime(String readTime) {
        this.readTime = readTime;
        return this;
    }
    
    /**
     * Reads documents in a transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transaction")
    public String transaction;

    public BatchGetDocumentsRequest withTransaction(String transaction) {
        this.transaction = transaction;
        return this;
    }
    
    public BatchGetDocumentsRequest(){}
}
