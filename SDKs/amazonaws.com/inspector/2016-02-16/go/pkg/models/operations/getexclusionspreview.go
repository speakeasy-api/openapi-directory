// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetExclusionsPreviewXAmzTargetEnum
type GetExclusionsPreviewXAmzTargetEnum string

const (
	GetExclusionsPreviewXAmzTargetEnumInspectorServiceGetExclusionsPreview GetExclusionsPreviewXAmzTargetEnum = "InspectorService.GetExclusionsPreview"
)

func (e *GetExclusionsPreviewXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "InspectorService.GetExclusionsPreview":
		*e = GetExclusionsPreviewXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetExclusionsPreviewXAmzTargetEnum: %s", s)
	}
}

type GetExclusionsPreviewRequest struct {
	GetExclusionsPreviewRequest shared.GetExclusionsPreviewRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  GetExclusionsPreviewXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type GetExclusionsPreviewResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetExclusionsPreviewResponse *shared.GetExclusionsPreviewResponse
	// InternalException
	InternalException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// NoSuchEntityException
	NoSuchEntityException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
