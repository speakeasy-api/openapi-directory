/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StoragePool - Represents a zonal storage pool resource.
 */
public class StoragePool {
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public StoragePool withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public StoragePool withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public StoragePool withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#storagePool for storage pools.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public StoragePool withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * A fingerprint for the labels being applied to this storage pool, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a storage pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labelFingerprint")
    public String labelFingerprint;

    public StoragePool withLabelFingerprint(String labelFingerprint) {
        this.labelFingerprint = labelFingerprint;
        return this;
    }
    
    /**
     * Labels to apply to this storage pool. These can be later modified by the setLabels method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public StoragePool withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public StoragePool withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Provsioned IOPS of the storage pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provisionedIops")
    public String provisionedIops;

    public StoragePool withProvisionedIops(String provisionedIops) {
        this.provisionedIops = provisionedIops;
        return this;
    }
    
    /**
     * [Output Only] Contains output only fields.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceStatus")
    public StoragePoolResourceStatus resourceStatus;

    public StoragePool withResourceStatus(StoragePoolResourceStatus resourceStatus) {
        this.resourceStatus = resourceStatus;
        return this;
    }
    
    /**
     * [Output Only] Server-defined fully-qualified URL for this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public StoragePool withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource's resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;

    public StoragePool withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    /**
     * Size, in GiB, of the storage pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizeGb")
    public String sizeGb;

    public StoragePool withSizeGb(String sizeGb) {
        this.sizeGb = sizeGb;
        return this;
    }
    
    /**
     * [Output Only] The status of storage pool creation. - CREATING: Storage pool is provisioning. storagePool. - FAILED: Storage pool creation failed. - READY: Storage pool is ready for use. - DELETING: Storage pool is deleting. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public StoragePoolStateEnum state;

    public StoragePool withState(StoragePoolStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Type of the storage pool
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public StoragePoolTypeEnum type;

    public StoragePool withType(StoragePoolTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * [Output Only] URL of the zone where the storage pool resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;

    public StoragePool withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
    public StoragePool(){}
}
