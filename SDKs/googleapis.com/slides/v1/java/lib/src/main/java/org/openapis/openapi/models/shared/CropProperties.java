/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CropProperties - The crop properties of an object enclosed in a container. For example, an Image. The crop properties is represented by the offsets of four edges which define a crop rectangle. The offsets are measured in percentage from the corresponding edges of the object's original bounding rectangle towards inside, relative to the object's original dimensions. - If the offset is in the interval (0, 1), the corresponding edge of crop rectangle is positioned inside of the object's original bounding rectangle. - If the offset is negative or greater than 1, the corresponding edge of crop rectangle is positioned outside of the object's original bounding rectangle. - If the left edge of the crop rectangle is on the right side of its right edge, the object will be flipped horizontally. - If the top edge of the crop rectangle is below its bottom edge, the object will be flipped vertically. - If all offsets and rotation angle is 0, the object is not cropped. After cropping, the content in the crop rectangle will be stretched to fit its container.
 */
public class CropProperties {
    /**
     * The rotation angle of the crop window around its center, in radians. Rotation angle is applied after the offset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("angle")
    public Float angle;
    public CropProperties withAngle(Float angle) {
        this.angle = angle;
        return this;
    }
    
    /**
     * The offset specifies the bottom edge of the crop rectangle that is located above the original bounding rectangle bottom edge, relative to the object's original height.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bottomOffset")
    public Float bottomOffset;
    public CropProperties withBottomOffset(Float bottomOffset) {
        this.bottomOffset = bottomOffset;
        return this;
    }
    
    /**
     * The offset specifies the left edge of the crop rectangle that is located to the right of the original bounding rectangle left edge, relative to the object's original width.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("leftOffset")
    public Float leftOffset;
    public CropProperties withLeftOffset(Float leftOffset) {
        this.leftOffset = leftOffset;
        return this;
    }
    
    /**
     * The offset specifies the right edge of the crop rectangle that is located to the left of the original bounding rectangle right edge, relative to the object's original width.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rightOffset")
    public Float rightOffset;
    public CropProperties withRightOffset(Float rightOffset) {
        this.rightOffset = rightOffset;
        return this;
    }
    
    /**
     * The offset specifies the top edge of the crop rectangle that is located below the original bounding rectangle top edge, relative to the object's original height.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topOffset")
    public Float topOffset;
    public CropProperties withTopOffset(Float topOffset) {
        this.topOffset = topOffset;
        return this;
    }
    
}
