// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type TeamsGetUsersSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type TeamsGetUsersRequest struct {
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
	// The team's name
	TeamName string `pathParam:"style=simple,explode=false,name=team_name"`
}

type TeamsGetUsersDefaultApplicationJSONErrorCodeEnum string

const (
	TeamsGetUsersDefaultApplicationJSONErrorCodeEnumBadRequest          TeamsGetUsersDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	TeamsGetUsersDefaultApplicationJSONErrorCodeEnumConflict            TeamsGetUsersDefaultApplicationJSONErrorCodeEnum = "Conflict"
	TeamsGetUsersDefaultApplicationJSONErrorCodeEnumNotAcceptable       TeamsGetUsersDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	TeamsGetUsersDefaultApplicationJSONErrorCodeEnumNotFound            TeamsGetUsersDefaultApplicationJSONErrorCodeEnum = "NotFound"
	TeamsGetUsersDefaultApplicationJSONErrorCodeEnumInternalServerError TeamsGetUsersDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	TeamsGetUsersDefaultApplicationJSONErrorCodeEnumUnauthorized        TeamsGetUsersDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	TeamsGetUsersDefaultApplicationJSONErrorCodeEnumTooManyRequests     TeamsGetUsersDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e TeamsGetUsersDefaultApplicationJSONErrorCodeEnum) ToPointer() *TeamsGetUsersDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *TeamsGetUsersDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = TeamsGetUsersDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamsGetUsersDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type TeamsGetUsersDefaultApplicationJSONError struct {
	Code    TeamsGetUsersDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                           `json:"message"`
}

// TeamsGetUsersDefaultApplicationJSON - Error
type TeamsGetUsersDefaultApplicationJSON struct {
	Error TeamsGetUsersDefaultApplicationJSONError `json:"error"`
}

// TeamsGetUsers200ApplicationJSONRoleEnum - The role of the user has within the team
type TeamsGetUsers200ApplicationJSONRoleEnum string

const (
	TeamsGetUsers200ApplicationJSONRoleEnumMaintainer   TeamsGetUsers200ApplicationJSONRoleEnum = "maintainer"
	TeamsGetUsers200ApplicationJSONRoleEnumCollaborator TeamsGetUsers200ApplicationJSONRoleEnum = "collaborator"
)

func (e TeamsGetUsers200ApplicationJSONRoleEnum) ToPointer() *TeamsGetUsers200ApplicationJSONRoleEnum {
	return &e
}

func (e *TeamsGetUsers200ApplicationJSONRoleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "maintainer":
		fallthrough
	case "collaborator":
		*e = TeamsGetUsers200ApplicationJSONRoleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamsGetUsers200ApplicationJSONRoleEnum: %v", v)
	}
}

// TeamsGetUsers200ApplicationJSON - Success
type TeamsGetUsers200ApplicationJSON struct {
	// The full name of the user. Might for example be first and last name
	DisplayName string `json:"display_name"`
	// The email address of the user
	Email string `json:"email"`
	// The unique name that is used to identify the user.
	Name string `json:"name"`
	// The role of the user has within the team
	Role TeamsGetUsers200ApplicationJSONRoleEnum `json:"role"`
}

type TeamsGetUsersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	TeamsGetUsers200ApplicationJSONObject *TeamsGetUsers200ApplicationJSON
	// Error
	TeamsGetUsersDefaultApplicationJSONObject *TeamsGetUsersDefaultApplicationJSON
}
