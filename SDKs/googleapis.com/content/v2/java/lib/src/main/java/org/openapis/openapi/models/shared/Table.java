/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Table {
    /**
     * A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("columnHeaders")
    public Headers columnHeaders;

    public Table withColumnHeaders(Headers columnHeaders) {
        this.columnHeaders = columnHeaders;
        return this;
    }
    
    /**
     * Name of the table. Required for subtables, ignored for the main table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Table withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rowHeaders")
    public Headers rowHeaders;

    public Table withRowHeaders(Headers rowHeaders) {
        this.rowHeaders = rowHeaders;
        return this;
    }
    
    /**
     * The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rows")
    public Row[] rows;

    public Table withRows(Row[] rows) {
        this.rows = rows;
        return this;
    }
    
    public Table(){}
}
