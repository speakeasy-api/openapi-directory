<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PortMapping - <p>Port mappings allow containers to access ports on the host container instance to send or receive traffic. Port mappings are specified as part of the container definition.</p> <p>If you use containers in a task with the <code>awsvpc</code> or <code>host</code> network mode, specify the exposed ports using <code>containerPort</code>. The <code>hostPort</code> can be left blank or it must be the same value as the <code>containerPort</code>.</p> <note> <p>You can't expose the same container port for multiple protocols. If you attempt this, an error is returned.</p> </note> <p>After a task reaches the <code>RUNNING</code> status, manual and automatic host and container port assignments are visible in the <code>networkBindings</code> section of <a>DescribeTasks</a> API responses.</p>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PortMapping
{
	#[\JMS\Serializer\Annotation\SerializedName('appProtocol')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ApplicationProtocolEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApplicationProtocolEnum $appProtocol = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('containerPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $containerPort = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('containerPortRange')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $containerPortRange = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hostPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hostPort = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('protocol')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransportProtocolEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransportProtocolEnum $protocol = null;
    
	public function __construct()
	{
		$this->appProtocol = null;
		$this->containerPort = null;
		$this->containerPortRange = null;
		$this->hostPort = null;
		$this->name = null;
		$this->protocol = null;
	}
}
