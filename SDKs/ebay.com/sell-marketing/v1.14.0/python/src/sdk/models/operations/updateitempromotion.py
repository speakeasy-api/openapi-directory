"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import baseresponse as shared_baseresponse
from ..shared import itempromotion as shared_itempromotion
from typing import Optional


@dataclasses.dataclass
class UpdateItemPromotionSecurity:
    
    api_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class UpdateItemPromotionRequest:
    
    promotion_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'promotion_id', 'style': 'simple', 'explode': False }})
    r"""This path parameter takes a concatenation of the ID of the promotion you want to update plus the marketplace ID on which the promotion is hosted. Concatenate the two values by separating them with an \\"at sign\\" (<b>@</b>).  <br><br>The ID of the promotion (<b>promotionId</b>) is a unique eBay-assigned value that's generated when the promotion is created. The Marketplace ID is the ENUM value of eBay marketplace where the promotion is hosted. <br><br><b>Example:</b> <code>1********5@EBAY_US</code>"""  
    item_promotion: Optional[shared_itempromotion.ItemPromotion] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""This type defines the fields that describe an item promotion."""  
    

@dataclasses.dataclass
class UpdateItemPromotionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    base_response: Optional[shared_baseresponse.BaseResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    