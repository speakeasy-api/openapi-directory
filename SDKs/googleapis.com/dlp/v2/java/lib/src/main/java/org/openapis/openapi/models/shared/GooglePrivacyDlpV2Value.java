/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2Value - Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
 */
public class GooglePrivacyDlpV2Value {
    /**
     * boolean
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("booleanValue")
    public Boolean booleanValue;
    public GooglePrivacyDlpV2Value withBooleanValue(Boolean booleanValue) {
        this.booleanValue = booleanValue;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateValue")
    public GoogleTypeDate dateValue;
    public GooglePrivacyDlpV2Value withDateValue(GoogleTypeDate dateValue) {
        this.dateValue = dateValue;
        return this;
    }
    
    /**
     * day of week
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dayOfWeekValue")
    public GooglePrivacyDlpV2ValueDayOfWeekValueEnum dayOfWeekValue;
    public GooglePrivacyDlpV2Value withDayOfWeekValue(GooglePrivacyDlpV2ValueDayOfWeekValueEnum dayOfWeekValue) {
        this.dayOfWeekValue = dayOfWeekValue;
        return this;
    }
    
    /**
     * float
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floatValue")
    public Double floatValue;
    public GooglePrivacyDlpV2Value withFloatValue(Double floatValue) {
        this.floatValue = floatValue;
        return this;
    }
    
    /**
     * integer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integerValue")
    public String integerValue;
    public GooglePrivacyDlpV2Value withIntegerValue(String integerValue) {
        this.integerValue = integerValue;
        return this;
    }
    
    /**
     * string
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stringValue")
    public String stringValue;
    public GooglePrivacyDlpV2Value withStringValue(String stringValue) {
        this.stringValue = stringValue;
        return this;
    }
    
    /**
     * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeValue")
    public GoogleTypeTimeOfDay timeValue;
    public GooglePrivacyDlpV2Value withTimeValue(GoogleTypeTimeOfDay timeValue) {
        this.timeValue = timeValue;
        return this;
    }
    
    /**
     * timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestampValue")
    public String timestampValue;
    public GooglePrivacyDlpV2Value withTimestampValue(String timestampValue) {
        this.timestampValue = timestampValue;
        return this;
    }
    
}
