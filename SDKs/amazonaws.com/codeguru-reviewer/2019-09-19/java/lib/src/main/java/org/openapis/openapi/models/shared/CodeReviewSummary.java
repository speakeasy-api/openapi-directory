/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CodeReviewSummary - Information about the summary of the code review.
 */
public class CodeReviewSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CodeReviewArn")
    public String codeReviewArn;
    public CodeReviewSummary withCodeReviewArn(String codeReviewArn) {
        this.codeReviewArn = codeReviewArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedTimeStamp")
    public OffsetDateTime createdTimeStamp;
    public CodeReviewSummary withCreatedTimeStamp(OffsetDateTime createdTimeStamp) {
        this.createdTimeStamp = createdTimeStamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdatedTimeStamp")
    public OffsetDateTime lastUpdatedTimeStamp;
    public CodeReviewSummary withLastUpdatedTimeStamp(OffsetDateTime lastUpdatedTimeStamp) {
        this.lastUpdatedTimeStamp = lastUpdatedTimeStamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetricsSummary")
    public MetricsSummary metricsSummary;
    public CodeReviewSummary withMetricsSummary(MetricsSummary metricsSummary) {
        this.metricsSummary = metricsSummary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public CodeReviewSummary withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Owner")
    public String owner;
    public CodeReviewSummary withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProviderType")
    public ProviderTypeEnum providerType;
    public CodeReviewSummary withProviderType(ProviderTypeEnum providerType) {
        this.providerType = providerType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PullRequestId")
    public String pullRequestId;
    public CodeReviewSummary withPullRequestId(String pullRequestId) {
        this.pullRequestId = pullRequestId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RepositoryName")
    public String repositoryName;
    public CodeReviewSummary withRepositoryName(String repositoryName) {
        this.repositoryName = repositoryName;
        return this;
    }
    
    /**
     * Specifies the source code that is analyzed in a code review.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceCodeType")
    public SourceCodeType sourceCodeType;
    public CodeReviewSummary withSourceCodeType(SourceCodeType sourceCodeType) {
        this.sourceCodeType = sourceCodeType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("State")
    public JobStateEnum state;
    public CodeReviewSummary withState(JobStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public TypeEnum type;
    public CodeReviewSummary withType(TypeEnum type) {
        this.type = type;
        return this;
    }
    
}
