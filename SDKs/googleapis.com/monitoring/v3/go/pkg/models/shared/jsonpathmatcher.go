// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// JSONPathMatcherJSONMatcherEnum - The type of JSONPath match that will be applied to the JSON output (ContentMatcher.content)
type JSONPathMatcherJSONMatcherEnum string

const (
	JSONPathMatcherJSONMatcherEnumJSONPathMatcherOptionUnspecified JSONPathMatcherJSONMatcherEnum = "JSON_PATH_MATCHER_OPTION_UNSPECIFIED"
	JSONPathMatcherJSONMatcherEnumExactMatch                       JSONPathMatcherJSONMatcherEnum = "EXACT_MATCH"
	JSONPathMatcherJSONMatcherEnumRegexMatch                       JSONPathMatcherJSONMatcherEnum = "REGEX_MATCH"
)

func (e *JSONPathMatcherJSONMatcherEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "JSON_PATH_MATCHER_OPTION_UNSPECIFIED":
		fallthrough
	case "EXACT_MATCH":
		fallthrough
	case "REGEX_MATCH":
		*e = JSONPathMatcherJSONMatcherEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JSONPathMatcherJSONMatcherEnum: %s", s)
	}
}

// JSONPathMatcher - Information needed to perform a JSONPath content match. Used for ContentMatcherOption::MATCHES_JSON_PATH and ContentMatcherOption::NOT_MATCHES_JSON_PATH.
type JSONPathMatcher struct {
	// The type of JSONPath match that will be applied to the JSON output (ContentMatcher.content)
	JSONMatcher *JSONPathMatcherJSONMatcherEnum `json:"jsonMatcher,omitempty"`
	// JSONPath within the response output pointing to the expected ContentMatcher::content to match against.
	JSONPath *string `json:"jsonPath,omitempty"`
}
