/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetHyphenationQueryParams {
    /**
     * Maximum number of results to return
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;
    public GetHyphenationQueryParams withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Get from a single dictionary. Valid options: ahd-5, century, wiktionary, webster, and wordnet.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sourceDictionary")
    public GetHyphenationSourceDictionaryEnum sourceDictionary;
    public GetHyphenationQueryParams withSourceDictionary(GetHyphenationSourceDictionaryEnum sourceDictionary) {
        this.sourceDictionary = sourceDictionary;
        return this;
    }
    
    /**
     * If true will try to return a correct word root ('cats' -&gt; 'cat'). If false returns exactly what was requested.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=useCanonical")
    public GetHyphenationUseCanonicalEnum useCanonical;
    public GetHyphenationQueryParams withUseCanonical(GetHyphenationUseCanonicalEnum useCanonical) {
        this.useCanonical = useCanonical;
        return this;
    }
    
}
