"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import contractualdocument as shared_contractualdocument
from enum import Enum
from typing import Optional

class GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum(str, Enum):
    r"""Type of the document"""
    CONTRACT = 'contract'
    ENGAGEMENT_LETTER = 'engagement-letter'
    AMENDMENT = 'amendment'
    PURCHASE_ORDER = 'purchase-order'
    DELIVERY_ORDER = 'delivery-order'
    QUOTATION = 'quotation'
    OTHER = 'other'


@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDContractualDocumentsRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Date', 'style': 'form', 'explode': True }})
    r"""date range of the documents"""  
    folder_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'FolderDate', 'style': 'form', 'explode': True }})
    r"""date range of attachment"""  
    range: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Range', 'style': 'form', 'explode': True }})
    r"""index range of the results"""  
    type: Optional[GetSpacesSpaceIDFoldersIDContractualDocumentsTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Type', 'style': 'form', 'explode': True }})
    r"""Type of the document"""  
    

@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDContractualDocumentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_spaces_space_id_folders_id_contractual_documents_200_application_json_all_ofs: Optional[list[shared_contractualdocument.ContractualDocument]] = dataclasses.field(default=None)
    r"""A list of documents of the folder"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    