/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class StartFaceSearchResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;

    public StartFaceSearchResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    
    public String contentType;

    public StartFaceSearchResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * IdempotentParameterMismatchException
     */
    
    public Object idempotentParameterMismatchException;

    public StartFaceSearchResponse withIdempotentParameterMismatchException(Object idempotentParameterMismatchException) {
        this.idempotentParameterMismatchException = idempotentParameterMismatchException;
        return this;
    }
    
    /**
     * InternalServerError
     */
    
    public Object internalServerError;

    public StartFaceSearchResponse withInternalServerError(Object internalServerError) {
        this.internalServerError = internalServerError;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public StartFaceSearchResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * InvalidS3ObjectException
     */
    
    public Object invalidS3ObjectException;

    public StartFaceSearchResponse withInvalidS3ObjectException(Object invalidS3ObjectException) {
        this.invalidS3ObjectException = invalidS3ObjectException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;

    public StartFaceSearchResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    /**
     * ProvisionedThroughputExceededException
     */
    
    public Object provisionedThroughputExceededException;

    public StartFaceSearchResponse withProvisionedThroughputExceededException(Object provisionedThroughputExceededException) {
        this.provisionedThroughputExceededException = provisionedThroughputExceededException;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;

    public StartFaceSearchResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.StartFaceSearchResponse startFaceSearchResponse;

    public StartFaceSearchResponse withStartFaceSearchResponse(org.openapis.openapi.models.shared.StartFaceSearchResponse startFaceSearchResponse) {
        this.startFaceSearchResponse = startFaceSearchResponse;
        return this;
    }
    
    
    public Integer statusCode;

    public StartFaceSearchResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public StartFaceSearchResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ThrottlingException
     */
    
    public Object throttlingException;

    public StartFaceSearchResponse withThrottlingException(Object throttlingException) {
        this.throttlingException = throttlingException;
        return this;
    }
    
    /**
     * VideoTooLargeException
     */
    
    public Object videoTooLargeException;

    public StartFaceSearchResponse withVideoTooLargeException(Object videoTooLargeException) {
        this.videoTooLargeException = videoTooLargeException;
        return this;
    }
    
    public StartFaceSearchResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
