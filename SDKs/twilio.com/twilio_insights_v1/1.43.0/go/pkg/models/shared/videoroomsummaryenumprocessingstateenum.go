// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VideoRoomSummaryEnumProcessingStateEnum string

const (
	VideoRoomSummaryEnumProcessingStateEnumComplete   VideoRoomSummaryEnumProcessingStateEnum = "complete"
	VideoRoomSummaryEnumProcessingStateEnumInProgress VideoRoomSummaryEnumProcessingStateEnum = "in_progress"
)

func (e VideoRoomSummaryEnumProcessingStateEnum) ToPointer() *VideoRoomSummaryEnumProcessingStateEnum {
	return &e
}

func (e *VideoRoomSummaryEnumProcessingStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "complete":
		fallthrough
	case "in_progress":
		*e = VideoRoomSummaryEnumProcessingStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoRoomSummaryEnumProcessingStateEnum: %v", v)
	}
}
