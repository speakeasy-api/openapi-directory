"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import auditevent as shared_auditevent
from ..shared import errornotfound as shared_errornotfound
from ..shared import errorunauthorized as shared_errorunauthorized
from typing import Optional


@dataclasses.dataclass
class GetEventSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class GetEventRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The UUID of the audit event to retrieve"""  
    

@dataclasses.dataclass
class GetEventResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    audit_event: Optional[shared_auditevent.AuditEvent] = dataclasses.field(default=None)
    r"""OK"""  
    error_not_found: Optional[shared_errornotfound.ErrorNotFound] = dataclasses.field(default=None)
    r"""Not Found"""  
    error_unauthorized: Optional[shared_errorunauthorized.ErrorUnauthorized] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    