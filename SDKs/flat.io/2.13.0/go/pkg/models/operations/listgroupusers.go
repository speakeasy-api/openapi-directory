// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListGroupUsersSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// ListGroupUsersSourceEnum - Filter the users by their source
type ListGroupUsersSourceEnum string

const (
	ListGroupUsersSourceEnumGoogleClassroom ListGroupUsersSourceEnum = "googleClassroom"
	ListGroupUsersSourceEnumMicrosoftGraph  ListGroupUsersSourceEnum = "microsoftGraph"
	ListGroupUsersSourceEnumClever          ListGroupUsersSourceEnum = "clever"
)

func (e *ListGroupUsersSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "googleClassroom":
		fallthrough
	case "microsoftGraph":
		fallthrough
	case "clever":
		*e = ListGroupUsersSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListGroupUsersSourceEnum: %s", s)
	}
}

type ListGroupUsersRequest struct {
	// Unique identifier of a Flat group
	//
	Group string `pathParam:"style=simple,explode=false,name=group"`
	// Filter the users by their source
	//
	Source *ListGroupUsersSourceEnum `queryParam:"style=form,explode=true,name=source"`
}

type ListGroupUsersResponse struct {
	ContentType string
	// Error
	FlatErrorResponse *shared.FlatErrorResponse
	StatusCode        int
	RawResponse       *http.Response
	// The list of users member of the group
	UserPublics []shared.UserPublic
}
