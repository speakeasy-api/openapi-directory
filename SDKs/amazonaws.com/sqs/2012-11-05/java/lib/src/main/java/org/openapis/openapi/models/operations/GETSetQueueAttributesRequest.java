/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETSetQueueAttributesRequest {
    /**
     * The AWS account number
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=AccountNumber")
    public Long accountNumber;

    public GETSetQueueAttributesRequest withAccountNumber(Long accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETSetQueueAttributesActionEnum action;

    public GETSetQueueAttributesRequest withAction(GETSetQueueAttributesActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * &lt;p&gt;A map of attributes to set.&lt;/p&gt; &lt;p&gt;The following lists the names, descriptions, and values of the special request parameters that the &lt;code&gt;SetQueueAttributes&lt;/code&gt; action uses:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DelaySeconds&lt;/code&gt; \u2013 The length of time, in seconds, for which the delivery of all messages in the queue is delayed. Valid values: An integer from 0 to 900 (15 minutes). Default: 0. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;MaximumMessageSize&lt;/code&gt; \u2013 The limit of how many bytes a message can contain before Amazon SQS rejects it. Valid values: An integer from 1,024 bytes (1 KiB) up to 262,144 bytes (256 KiB). Default: 262,144 (256 KiB). &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;MessageRetentionPeriod&lt;/code&gt; \u2013 The length of time, in seconds, for which Amazon SQS retains a message. Valid values: An integer representing seconds, from 60 (1 minute) to 1,209,600 (14 days). Default: 345,600 (4 days). &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Policy&lt;/code&gt; \u2013 The queue's policy. A valid Amazon Web Services policy. For more information about policy structure, see &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html"&gt;Overview of Amazon Web Services IAM Policies&lt;/a&gt; in the &lt;i&gt;Identity and Access Management User Guide&lt;/i&gt;. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ReceiveMessageWaitTimeSeconds&lt;/code&gt; \u2013 The length of time, in seconds, for which a &lt;code&gt; &lt;a&gt;ReceiveMessage&lt;/a&gt; &lt;/code&gt; action waits for a message to arrive. Valid values: An integer from 0 to 20 (seconds). Default: 0. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;RedrivePolicy&lt;/code&gt; \u2013 The string that includes the parameters for the dead-letter queue functionality of the source queue as a JSON object. For more information about the redrive policy and dead-letter queues, see &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html"&gt;Using Amazon SQS Dead-Letter Queues&lt;/a&gt; in the &lt;i&gt;Amazon SQS Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;deadLetterTargetArn&lt;/code&gt; \u2013 The Amazon Resource Name (ARN) of the dead-letter queue to which Amazon SQS moves messages after the value of &lt;code&gt;maxReceiveCount&lt;/code&gt; is exceeded.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;maxReceiveCount&lt;/code&gt; \u2013 The number of times a message is delivered to the source queue before being moved to the dead-letter queue. When the &lt;code&gt;ReceiveCount&lt;/code&gt; for a message exceeds the &lt;code&gt;maxReceiveCount&lt;/code&gt; for a queue, Amazon SQS moves the message to the dead-letter-queue.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;The dead-letter queue of a FIFO queue must also be a FIFO queue. Similarly, the dead-letter queue of a standard queue must also be a standard queue.&lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;VisibilityTimeout&lt;/code&gt; \u2013 The visibility timeout for the queue, in seconds. Valid values: An integer from 0 to 43,200 (12 hours). Default: 30. For more information about the visibility timeout, see &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-visibility-timeout.html"&gt;Visibility Timeout&lt;/a&gt; in the &lt;i&gt;Amazon SQS Developer Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The following attributes apply only to &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html"&gt;server-side-encryption&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;KmsMasterKeyId&lt;/code&gt; \u2013 The ID of an Amazon Web Services managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-sse-key-terms"&gt;Key Terms&lt;/a&gt;. While the alias of the AWS-managed CMK for Amazon SQS is always &lt;code&gt;alias/aws/sqs&lt;/code&gt;, the alias of a custom CMK can, for example, be &lt;code&gt;alias/&lt;i&gt;MyAlias&lt;/i&gt; &lt;/code&gt;. For more examples, see &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters"&gt;KeyId&lt;/a&gt; in the &lt;i&gt;Key Management Service API Reference&lt;/i&gt;. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;KmsDataKeyReusePeriodSeconds&lt;/code&gt; \u2013 The length of time, in seconds, for which Amazon SQS can reuse a &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#data-keys"&gt;data key&lt;/a&gt; to encrypt or decrypt messages before calling KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). Default: 300 (5 minutes). A shorter time period provides better security but results in more calls to KMS which might incur charges after Free Tier. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-how-does-the-data-key-reuse-period-work"&gt;How Does the Data Key Reuse Period Work?&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SqsManagedSseEnabled&lt;/code&gt; \u2013 Enables server-side queue encryption using SQS owned encryption keys. Only one server-side encryption option is supported per queue (e.g. &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sse-existing-queue.html"&gt;SSE-KMS&lt;/a&gt; or &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sqs-sse-queue.html"&gt;SSE-SQS&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The following attribute applies only to &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html"&gt;FIFO (first-in-first-out) queues&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; \u2013 Enables content-based deduplication. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues-exactly-once-processing.html"&gt;Exactly-once processing&lt;/a&gt; in the &lt;i&gt;Amazon SQS Developer Guide&lt;/i&gt;. Note the following: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Every message must have a unique &lt;code&gt;MessageDeduplicationId&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You may provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; explicitly.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you aren't able to provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; and you enable &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; for your queue, Amazon SQS uses a SHA-256 hash to generate the &lt;code&gt;MessageDeduplicationId&lt;/code&gt; using the body of the message (but not the attributes of the message). &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you don't provide a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; and the queue doesn't have &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; set, the action fails with an error.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If the queue has &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; set, your &lt;code&gt;MessageDeduplicationId&lt;/code&gt; overrides the generated one.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;When &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; is in effect, messages with identical content sent within the deduplication interval are treated as duplicates and only one copy of the message is delivered.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you send one message with &lt;code&gt;ContentBasedDeduplication&lt;/code&gt; enabled and then another message with a &lt;code&gt;MessageDeduplicationId&lt;/code&gt; that is the same as the one generated for the first &lt;code&gt;MessageDeduplicationId&lt;/code&gt;, the two messages are treated as duplicates and only one copy of the message is delivered. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The following attributes apply only to &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/high-throughput-fifo.html"&gt;high throughput for FIFO queues&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DeduplicationScope&lt;/code&gt; \u2013 Specifies whether message deduplication occurs at the message group or queue level. Valid values are &lt;code&gt;messageGroup&lt;/code&gt; and &lt;code&gt;queue&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;FifoThroughputLimit&lt;/code&gt; \u2013 Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are &lt;code&gt;perQueue&lt;/code&gt; and &lt;code&gt;perMessageGroupId&lt;/code&gt;. The &lt;code&gt;perMessageGroupId&lt;/code&gt; value is allowed only when the value for &lt;code&gt;DeduplicationScope&lt;/code&gt; is &lt;code&gt;messageGroup&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To enable high throughput for FIFO queues, do the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Set &lt;code&gt;DeduplicationScope&lt;/code&gt; to &lt;code&gt;messageGroup&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Set &lt;code&gt;FifoThroughputLimit&lt;/code&gt; to &lt;code&gt;perMessageGroupId&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you set these attributes to anything other than the values shown for enabling high throughput, normal throughput is in effect and deduplication occurs as specified.&lt;/p&gt; &lt;p&gt;For information on throughput quotas, see &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-messages.html"&gt;Quotas related to messages&lt;/a&gt; in the &lt;i&gt;Amazon SQS Developer Guide&lt;/i&gt;.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Attribute")
    public java.util.Map<String, String> attribute;

    public GETSetQueueAttributesRequest withAttribute(java.util.Map<String, String> attribute) {
        this.attribute = attribute;
        return this;
    }
    
    /**
     * The name of the queue
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=QueueName")
    public String queueName;

    public GETSetQueueAttributesRequest withQueueName(String queueName) {
        this.queueName = queueName;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETSetQueueAttributesVersionEnum version;

    public GETSetQueueAttributesRequest withVersion(GETSetQueueAttributesVersionEnum version) {
        this.version = version;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;

    public GETSetQueueAttributesRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;

    public GETSetQueueAttributesRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;

    public GETSetQueueAttributesRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;

    public GETSetQueueAttributesRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;

    public GETSetQueueAttributesRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;

    public GETSetQueueAttributesRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;

    public GETSetQueueAttributesRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
    public GETSetQueueAttributesRequest(@JsonProperty("AccountNumber") Long accountNumber, @JsonProperty("Action") GETSetQueueAttributesActionEnum action, @JsonProperty("Attribute") java.util.Map<String, String> attribute, @JsonProperty("QueueName") String queueName, @JsonProperty("Version") GETSetQueueAttributesVersionEnum version) {
        this.accountNumber = accountNumber;
        this.action = action;
        this.attribute = attribute;
        this.queueName = queueName;
        this.version = version;
  }
}
