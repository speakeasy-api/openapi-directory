/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class SnapshotSummary {
    /**
     * Time at which the snapshot was taken.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date")
    public OffsetDateTime date;

    public SnapshotSummary withDate(OffsetDateTime date) {
        this.date = date;
        return this;
    }
    
    /**
     * ID of the snapshot.
     */
    @JsonProperty("id")
    public String id;

    public SnapshotSummary withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * A Boolean value that indicates whether custom retention is applied to the specified snapshot. Value is true when custom retention is applied to the snapshot.
     * 
     */
    @JsonProperty("isCustomRetentionApplied")
    public Boolean isCustomRetentionApplied;

    public SnapshotSummary withIsCustomRetentionApplied(Boolean isCustomRetentionApplied) {
        this.isCustomRetentionApplied = isCustomRetentionApplied;
        return this;
    }
    
    /**
     * Indicates whether the snapshot is protected by a Retention Locked SLA Domain.
     * 
     */
    @JsonProperty("isRetentionLockApplied")
    public Boolean isRetentionLockApplied;

    public SnapshotSummary withIsRetentionLockApplied(Boolean isRetentionLockApplied) {
        this.isRetentionLockApplied = isRetentionLockApplied;
        return this;
    }
    
    @JsonProperty("snapshotRetentionInfo")
    public SnapshotRetentionInfo snapshotRetentionInfo;

    public SnapshotSummary withSnapshotRetentionInfo(SnapshotRetentionInfo snapshotRetentionInfo) {
        this.snapshotRetentionInfo = snapshotRetentionInfo;
        return this;
    }
    
    /**
     * Attributes that are available to use when filtering query results based on snapshot type.
     * 
     */
    @JsonProperty("snapshotType")
    public UnmanagedSnapshotTypeEnum snapshotType;

    public SnapshotSummary withSnapshotType(UnmanagedSnapshotTypeEnum snapshotType) {
        this.snapshotType = snapshotType;
        return this;
    }
    
    public SnapshotSummary(@JsonProperty("date") OffsetDateTime date, @JsonProperty("id") String id, @JsonProperty("isCustomRetentionApplied") Boolean isCustomRetentionApplied, @JsonProperty("isRetentionLockApplied") Boolean isRetentionLockApplied, @JsonProperty("snapshotRetentionInfo") SnapshotRetentionInfo snapshotRetentionInfo, @JsonProperty("snapshotType") UnmanagedSnapshotTypeEnum snapshotType) {
        this.date = date;
        this.id = id;
        this.isCustomRetentionApplied = isCustomRetentionApplied;
        this.isRetentionLockApplied = isRetentionLockApplied;
        this.snapshotRetentionInfo = snapshotRetentionInfo;
        this.snapshotType = snapshotType;
  }
}
