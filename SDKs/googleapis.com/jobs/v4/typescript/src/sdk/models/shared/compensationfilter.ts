/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CompensationRange } from "./compensationrange";
import { Expose, Type } from "class-transformer";

/**
 * Required. Type of filter.
 */
export enum CompensationFilterTypeEnum {
  FilterTypeUnspecified = "FILTER_TYPE_UNSPECIFIED",
  UnitOnly = "UNIT_ONLY",
  UnitAndAmount = "UNIT_AND_AMOUNT",
  AnnualizedBaseAmount = "ANNUALIZED_BASE_AMOUNT",
  AnnualizedTotalAmount = "ANNUALIZED_TOTAL_AMOUNT",
}

export enum CompensationFilterUnitsEnum {
  CompensationUnitUnspecified = "COMPENSATION_UNIT_UNSPECIFIED",
  Hourly = "HOURLY",
  Daily = "DAILY",
  Weekly = "WEEKLY",
  Monthly = "MONTHLY",
  Yearly = "YEARLY",
  OneTime = "ONE_TIME",
  OtherCompensationUnit = "OTHER_COMPENSATION_UNIT",
}

/**
 * Filter on job compensation type and amount.
 */
export class CompensationFilter extends SpeakeasyBase {
  /**
   * If set to true, jobs with unspecified compensation range fields are included.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includeJobsWithUnspecifiedCompensationRange" })
  includeJobsWithUnspecifiedCompensationRange?: boolean;

  /**
   * Compensation range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "range" })
  @Type(() => CompensationRange)
  range?: CompensationRange;

  /**
   * Required. Type of filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CompensationFilterTypeEnum;

  /**
   * Required. Specify desired `base compensation entry's` CompensationInfo.CompensationUnit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "units" })
  units?: CompensationFilterUnitsEnum[];
}
