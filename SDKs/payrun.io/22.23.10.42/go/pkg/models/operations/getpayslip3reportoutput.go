// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type GetPayslip3ReportOutputQueryParams struct {
	// A comma separated list of the employee codes. E.g. EMP001,EMP002
	EmployeeCodes *string `queryParam:"style=form,explode=true,name=EmployeeCodes"`
	// The employer unique key. E.g. ER001
	EmployerKey string `queryParam:"style=form,explode=true,name=EmployerKey"`
	// The highest element index to return from the report. Used to control paging within large data sets. E.g. 100
	MaxIndex *string `queryParam:"style=form,explode=true,name=MaxIndex"`
	// The pay schedule unique key. E.g. SCH001
	PayScheduleKey string `queryParam:"style=form,explode=true,name=PayScheduleKey"`
	// The payment date context for the report. E.g. 2018-04-30
	PaymentDate *types.Date `queryParam:"style=form,explode=true,name=PaymentDate"`
	// The element index to begin the report. Used to control paging within large data sets. E.g. 1
	StartIndex *string `queryParam:"style=form,explode=true,name=StartIndex"`
	// The tax year. E.g. 2017 = 2017/18 year.
	TaxYear string `queryParam:"style=form,explode=true,name=TaxYear"`
	// The transform definition unique key. E.g. P45-Pdf
	TransformDefinitionKey *string `queryParam:"style=form,explode=true,name=TransformDefinitionKey"`
}

type GetPayslip3ReportOutputHeaders struct {
	// The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
	APIVersion string `header:"style=simple,explode=false,name=Api-Version"`
	// The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
	Authorization string `header:"style=simple,explode=false,name=Authorization"`
}

type GetPayslip3ReportOutputRequest struct {
	QueryParams GetPayslip3ReportOutputQueryParams
	Headers     GetPayslip3ReportOutputHeaders
}

type GetPayslip3ReportOutputResponse struct {
	ContentType string
	// Bad Request
	ErrorModel *shared.ErrorModel
	// The result of the verbose payslip report execution
	GetPayslip3ReportOutput200ApplicationJSONBinaryString []byte
	StatusCode                                            int
	RawResponse                                           *http.Response
}
