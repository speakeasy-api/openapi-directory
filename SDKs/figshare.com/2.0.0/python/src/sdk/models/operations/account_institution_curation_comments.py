"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import curationcomment as shared_curationcomment
from ..shared import errormessage as shared_errormessage
from typing import Optional


@dataclasses.dataclass
class AccountInstitutionCurationCommentsSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class AccountInstitutionCurationCommentsRequest:
    
    curation_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'curation_id', 'style': 'simple', 'explode': False }})
    r"""ID of the curation"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Number of results included on a page. Used for pagination with query"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Where to start the listing(the offset of the first result). Used for pagination with limit"""  
    

@dataclasses.dataclass
class AccountInstitutionCurationCommentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    curation_comment: Optional[shared_curationcomment.CurationComment] = dataclasses.field(default=None)
    r"""OK. A curation review's comments."""  
    error_message: Optional[shared_errormessage.ErrorMessage] = dataclasses.field(default=None)
    r"""Forbidden"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    