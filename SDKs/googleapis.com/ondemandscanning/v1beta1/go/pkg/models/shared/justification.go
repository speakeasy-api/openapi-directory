// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// JustificationJustificationTypeEnum - The justification type for this vulnerability.
type JustificationJustificationTypeEnum string

const (
	JustificationJustificationTypeEnumJustificationTypeUnspecified                JustificationJustificationTypeEnum = "JUSTIFICATION_TYPE_UNSPECIFIED"
	JustificationJustificationTypeEnumComponentNotPresent                         JustificationJustificationTypeEnum = "COMPONENT_NOT_PRESENT"
	JustificationJustificationTypeEnumVulnerableCodeNotPresent                    JustificationJustificationTypeEnum = "VULNERABLE_CODE_NOT_PRESENT"
	JustificationJustificationTypeEnumVulnerableCodeNotInExecutePath              JustificationJustificationTypeEnum = "VULNERABLE_CODE_NOT_IN_EXECUTE_PATH"
	JustificationJustificationTypeEnumVulnerableCodeCannotBeControlledByAdversary JustificationJustificationTypeEnum = "VULNERABLE_CODE_CANNOT_BE_CONTROLLED_BY_ADVERSARY"
	JustificationJustificationTypeEnumInlineMitigationsAlreadyExist               JustificationJustificationTypeEnum = "INLINE_MITIGATIONS_ALREADY_EXIST"
)

func (e *JustificationJustificationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "JUSTIFICATION_TYPE_UNSPECIFIED":
		fallthrough
	case "COMPONENT_NOT_PRESENT":
		fallthrough
	case "VULNERABLE_CODE_NOT_PRESENT":
		fallthrough
	case "VULNERABLE_CODE_NOT_IN_EXECUTE_PATH":
		fallthrough
	case "VULNERABLE_CODE_CANNOT_BE_CONTROLLED_BY_ADVERSARY":
		fallthrough
	case "INLINE_MITIGATIONS_ALREADY_EXIST":
		*e = JustificationJustificationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JustificationJustificationTypeEnum: %s", s)
	}
}

// Justification - Justification provides the justification when the state of the assessment if NOT_AFFECTED.
type Justification struct {
	// Additional details on why this justification was chosen.
	Details *string `json:"details,omitempty"`
	// The justification type for this vulnerability.
	JustificationType *JustificationJustificationTypeEnum `json:"justificationType,omitempty"`
}
