"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configmanagementbinauthzstate as shared_configmanagementbinauthzstate
from ..shared import configmanagementconfigsyncstate as shared_configmanagementconfigsyncstate
from ..shared import configmanagementhierarchycontrollerstate as shared_configmanagementhierarchycontrollerstate
from ..shared import configmanagementmembershipspec as shared_configmanagementmembershipspec
from ..shared import configmanagementoperatorstate as shared_configmanagementoperatorstate
from ..shared import configmanagementpolicycontrollerstate as shared_configmanagementpolicycontrollerstate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfigManagementMembershipState:
    r"""**Anthos Config Management**: State for a single cluster."""
    
    binauthz_state: Optional[shared_configmanagementbinauthzstate.ConfigManagementBinauthzState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('binauthzState'), 'exclude': lambda f: f is None }})
    r"""State for Binauthz"""  
    cluster_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterName'), 'exclude': lambda f: f is None }})
    r"""The user-defined name for the cluster used by ClusterSelectors to group clusters together. This should match Membership's membership_name, unless the user installed ACM on the cluster manually prior to enabling the ACM hub feature. Unique within a Anthos Config Management installation."""  
    config_sync_state: Optional[shared_configmanagementconfigsyncstate.ConfigManagementConfigSyncState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configSyncState'), 'exclude': lambda f: f is None }})
    r"""State information for ConfigSync"""  
    hierarchy_controller_state: Optional[shared_configmanagementhierarchycontrollerstate.ConfigManagementHierarchyControllerState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hierarchyControllerState'), 'exclude': lambda f: f is None }})
    r"""State for Hierarchy Controller"""  
    membership_spec: Optional[shared_configmanagementmembershipspec.ConfigManagementMembershipSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('membershipSpec'), 'exclude': lambda f: f is None }})
    r"""**Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR."""  
    operator_state: Optional[shared_configmanagementoperatorstate.ConfigManagementOperatorState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operatorState'), 'exclude': lambda f: f is None }})
    r"""State information for an ACM's Operator"""  
    policy_controller_state: Optional[shared_configmanagementpolicycontrollerstate.ConfigManagementPolicyControllerState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policyControllerState'), 'exclude': lambda f: f is None }})
    r"""State for PolicyControllerState."""  
    