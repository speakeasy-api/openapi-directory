/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HeaderObject - &lt;p&gt;Describes the request headers that a Lightsail distribution bases caching on.&lt;/p&gt; &lt;p&gt;For the headers that you specify, your distribution caches separate versions of the specified content based on the header values in viewer requests. For example, suppose viewer requests for &lt;code&gt;logo.jpg&lt;/code&gt; contain a custom &lt;code&gt;product&lt;/code&gt; header that has a value of either &lt;code&gt;acme&lt;/code&gt; or &lt;code&gt;apex&lt;/code&gt;, and you configure your distribution to cache your content based on values in the &lt;code&gt;product&lt;/code&gt; header. Your distribution forwards the &lt;code&gt;product&lt;/code&gt; header to the origin and caches the response from the origin once for each header value. &lt;/p&gt;
 */
public class HeaderObject {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headersAllowList")
    public HeaderEnumEnum[] headersAllowList;
    public HeaderObject withHeadersAllowList(HeaderEnumEnum[] headersAllowList) {
        this.headersAllowList = headersAllowList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("option")
    public ForwardValuesEnum option;
    public HeaderObject withOption(ForwardValuesEnum option) {
        this.option = option;
        return this;
    }
    
}
