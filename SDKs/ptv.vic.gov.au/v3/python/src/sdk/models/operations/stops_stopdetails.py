"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import v3_errorresponse as shared_v3_errorresponse
from ..shared import v3_stopresponse as shared_v3_stopresponse
from enum import Enum
from typing import Optional

class StopsStopDetailsRouteTypeEnum(str, Enum):
    r"""Number identifying transport mode; values returned via RouteTypes API"""
    ZERO = '0'
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'


@dataclasses.dataclass
class StopsStopDetailsRequest:
    
    route_type: StopsStopDetailsRouteTypeEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'route_type', 'style': 'simple', 'explode': False }})
    r"""Number identifying transport mode; values returned via RouteTypes API"""  
    stop_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'stop_id', 'style': 'simple', 'explode': False }})
    r"""Identifier of stop; values returned by Stops API"""  
    devid: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'devid', 'style': 'form', 'explode': True }})
    r"""Your developer id"""  
    gtfs: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'gtfs', 'style': 'form', 'explode': True }})
    r"""Incdicates whether the stop_id is a GTFS ID or not"""  
    signature: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'signature', 'style': 'form', 'explode': True }})
    r"""Authentication signature for request"""  
    stop_accessibility: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'stop_accessibility', 'style': 'form', 'explode': True }})
    r"""Indicates if stop accessibility information will be returned (default = false)"""  
    stop_amenities: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'stop_amenities', 'style': 'form', 'explode': True }})
    r"""Indicates if stop amenity information will be returned (default = false)"""  
    stop_contact: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'stop_contact', 'style': 'form', 'explode': True }})
    r"""Indicates if stop contact information will be returned (default = false)"""  
    stop_disruptions: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'stop_disruptions', 'style': 'form', 'explode': True }})
    r"""Indicates if stop disruption information will be returned (default = false)"""  
    stop_location: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'stop_location', 'style': 'form', 'explode': True }})
    r"""Indicates if stop location information will be returned (default = false)"""  
    stop_staffing: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'stop_staffing', 'style': 'form', 'explode': True }})
    r"""Indicates if stop staffing information will be returned (default = false)"""  
    stop_ticket: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'stop_ticket', 'style': 'form', 'explode': True }})
    r"""Indicates if stop ticket information will be returned (default = false)"""  
    token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'token', 'style': 'form', 'explode': True }})
    r"""Please ignore"""  
    

@dataclasses.dataclass
class StopsStopDetailsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    v3_error_response: Optional[shared_v3_errorresponse.V3ErrorResponse] = dataclasses.field(default=None)
    r"""Invalid Request"""  
    v3_stop_response: Optional[shared_v3_stopresponse.V3StopResponse] = dataclasses.field(default=None)
    r"""Stop location, amenity and accessibility facility information for the specified stop (metropolitan and V/Line stations only)."""  
    