/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSearchVersionNumberRoutedFilterPositionHeadingExtRequest extends SpeakeasyBase {
  /**
   * Expected response format.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=ext" })
  ext: shared.ExtEnum;

  /**
   * The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=heading",
  })
  heading: number;

  /**
   * List of POIs to filter. The only required attribute of a POI is position, everything else is optional and will be echoed back when passed in.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=poiList",
  })
  poiList: string;

  /**
   * This is specified as a comma separated string composed of lat., lon.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=position",
  })
  position: string;

  /**
   * Only return results that arrive from routing engine within this time limit.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=routingTimeout",
  })
  routingTimeout?: number;

  /**
   * Service version number. The current value is 2.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=versionNumber",
  })
  versionNumber: shared.VersionNumberEnum;
}

export class GetSearchVersionNumberRoutedFilterPositionHeadingExtResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
