// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateDataCellsFilterHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateDataCellsFilterRequestBodyTableData - A structure that describes certain columns on certain rows.
type UpdateDataCellsFilterRequestBodyTableData struct {
	ColumnNames    []string               `json:"ColumnNames,omitempty"`
	ColumnWildcard *shared.ColumnWildcard `json:"ColumnWildcard,omitempty"`
	DatabaseName   *string                `json:"DatabaseName,omitempty"`
	Name           *string                `json:"Name,omitempty"`
	RowFilter      *shared.RowFilter      `json:"RowFilter,omitempty"`
	TableCatalogID *string                `json:"TableCatalogId,omitempty"`
	TableName      *string                `json:"TableName,omitempty"`
	VersionID      *string                `json:"VersionId,omitempty"`
}

type UpdateDataCellsFilterRequestBody struct {
	// A structure that describes certain columns on certain rows.
	TableData UpdateDataCellsFilterRequestBodyTableData `json:"TableData"`
}

type UpdateDataCellsFilterRequest struct {
	Headers UpdateDataCellsFilterHeaders
	Request UpdateDataCellsFilterRequestBody `request:"mediaType=application/json"`
}

type UpdateDataCellsFilterResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateDataCellsFilterResponse map[string]interface{}
}
