/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateConfigurationServerList = [
  "https://conversations.twilio.com",
] as const;

export class UpdateConfigurationSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateConfigurationUpdateConfigurationRequest extends SpeakeasyBase {
  /**
   * The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) to use when creating a conversation.
   */
  @SpeakeasyMetadata({ data: "form, name=DefaultChatServiceSid" })
  defaultChatServiceSid?: string;

  /**
   * Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.
   */
  @SpeakeasyMetadata({ data: "form, name=DefaultClosedTimer" })
  defaultClosedTimer?: string;

  /**
   * Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.
   */
  @SpeakeasyMetadata({ data: "form, name=DefaultInactiveTimer" })
  defaultInactiveTimer?: string;

  /**
   * The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) to use when creating a conversation.
   */
  @SpeakeasyMetadata({ data: "form, name=DefaultMessagingServiceSid" })
  defaultMessagingServiceSid?: string;
}

export class UpdateConfigurationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  conversationsV1Configuration?: shared.ConversationsV1Configuration;
}
