/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BqmlTrainingRun } from "./bqmltrainingrun";
import { Expose, Type } from "class-transformer";

/**
 * [Output-only, Beta] Model options used for the first training run. These options are immutable for subsequent training runs. Default values are used for any options not specified in the input query.
 */
export class ModelDefinitionModelOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "lossType" })
  lossType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "modelType" })
  modelType?: string;
}

export class ModelDefinition extends SpeakeasyBase {
  /**
   * [Output-only, Beta] Model options used for the first training run. These options are immutable for subsequent training runs. Default values are used for any options not specified in the input query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modelOptions" })
  @Type(() => ModelDefinitionModelOptions)
  modelOptions?: ModelDefinitionModelOptions;

  /**
   * [Output-only, Beta] Information about ml training runs, each training run comprises of multiple iterations and there may be multiple training runs for the model if warm start is used or if a user decides to continue a previously cancelled query.
   */
  @SpeakeasyMetadata({ elemType: BqmlTrainingRun })
  @Expose({ name: "trainingRuns" })
  @Type(() => BqmlTrainingRun)
  trainingRuns?: BqmlTrainingRun[];
}
