/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GETModifyVpcEndpointActionEnum {
  ModifyVpcEndpoint = "ModifyVpcEndpoint",
}

/**
 * Describes the DNS options for an endpoint.
 */
export class GETModifyVpcEndpointDNSOptions extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=DnsRecordIpType" })
  dnsRecordIpType?: shared.DnsRecordIpTypeEnum;

  @SpeakeasyMetadata({
    data: "queryParam, name=PrivateDnsOnlyForInboundResolverEndpoint",
  })
  privateDnsOnlyForInboundResolverEndpoint?: boolean;
}

/**
 * The IP address type for the endpoint.
 */
export enum GETModifyVpcEndpointIPAddressTypeEnum {
  Ipv4 = "ipv4",
  Dualstack = "dualstack",
  Ipv6 = "ipv6",
}

export enum GETModifyVpcEndpointVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETModifyVpcEndpointRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETModifyVpcEndpointActionEnum;

  /**
   * (Gateway endpoint) The IDs of the route tables to associate with the endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AddRouteTableId",
  })
  addRouteTableId?: string[];

  /**
   * (Interface endpoint) The IDs of the security groups to associate with the network interface.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AddSecurityGroupId",
  })
  addSecurityGroupId?: string[];

  /**
   * (Interface and Gateway Load Balancer endpoints) The IDs of the subnets in which to serve the endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AddSubnetId",
  })
  addSubnetId?: string[];

  /**
   * The DNS options for the endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DnsOptions",
  })
  dnsOptions?: GETModifyVpcEndpointDNSOptions;

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The IP address type for the endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=IpAddressType",
  })
  ipAddressType?: GETModifyVpcEndpointIPAddressTypeEnum;

  /**
   * (Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PolicyDocument",
  })
  policyDocument?: string;

  /**
   * (Interface endpoint) Indicates whether a private hosted zone is associated with the VPC.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PrivateDnsEnabled",
  })
  privateDnsEnabled?: boolean;

  /**
   * (Gateway endpoint) The IDs of the route tables to disassociate from the endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RemoveRouteTableId",
  })
  removeRouteTableId?: string[];

  /**
   * (Interface endpoint) The IDs of the security groups to disassociate from the network interface.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RemoveSecurityGroupId",
  })
  removeSecurityGroupId?: string[];

  /**
   * (Interface endpoint) The IDs of the subnets from which to remove the endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RemoveSubnetId",
  })
  removeSubnetId?: string[];

  /**
   * (Gateway endpoint) Specify <code>true</code> to reset the policy document to the default policy. The default policy allows full access to the service.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ResetPolicy",
  })
  resetPolicy?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETModifyVpcEndpointVersionEnum;

  /**
   * The ID of the endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=VpcEndpointId",
  })
  vpcEndpointId: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETModifyVpcEndpointResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
