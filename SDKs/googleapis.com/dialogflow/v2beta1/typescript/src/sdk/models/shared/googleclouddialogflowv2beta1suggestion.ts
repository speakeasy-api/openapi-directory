/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDialogflowV2beta1SuggestionArticle } from "./googleclouddialogflowv2beta1suggestionarticle";
import { GoogleCloudDialogflowV2beta1SuggestionFaqAnswer } from "./googleclouddialogflowv2beta1suggestionfaqanswer";
import { Expose, Type } from "class-transformer";

/**
 * Represents a suggestion for a human agent.
 */
export class GoogleCloudDialogflowV2beta1Suggestion extends SpeakeasyBase {
  /**
   * Output only. Articles ordered by score in descending order.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDialogflowV2beta1SuggestionArticle,
  })
  @Expose({ name: "articles" })
  @Type(() => GoogleCloudDialogflowV2beta1SuggestionArticle)
  articles?: GoogleCloudDialogflowV2beta1SuggestionArticle[];

  /**
   * Output only. The time the suggestion was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. Answers extracted from FAQ documents.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDialogflowV2beta1SuggestionFaqAnswer,
  })
  @Expose({ name: "faqAnswers" })
  @Type(() => GoogleCloudDialogflowV2beta1SuggestionFaqAnswer)
  faqAnswers?: GoogleCloudDialogflowV2beta1SuggestionFaqAnswer[];

  /**
   * Output only. Latest message used as context to compile this suggestion. Format: `projects//locations//conversations//messages/`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latestMessage" })
  latestMessage?: string;

  /**
   * Output only. The name of this suggestion. Format: `projects//locations//conversations//participants/* /suggestions/`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
