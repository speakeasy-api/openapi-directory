"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import componentsource as shared_componentsource
from ..shared import componenttransform as shared_componenttransform
from ..shared import stagesource as shared_stagesource
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ExecutionStageSummaryKindEnum(str, Enum):
    r"""Type of transform this stage is executing."""
    UNKNOWN_KIND = 'UNKNOWN_KIND'
    PAR_DO_KIND = 'PAR_DO_KIND'
    GROUP_BY_KEY_KIND = 'GROUP_BY_KEY_KIND'
    FLATTEN_KIND = 'FLATTEN_KIND'
    READ_KIND = 'READ_KIND'
    WRITE_KIND = 'WRITE_KIND'
    CONSTANT_KIND = 'CONSTANT_KIND'
    SINGLETON_KIND = 'SINGLETON_KIND'
    SHUFFLE_KIND = 'SHUFFLE_KIND'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExecutionStageSummary:
    r"""Description of the composing transforms, names/ids, and input/outputs of a stage of execution. Some composing transforms and sources may have been generated by the Dataflow service during execution planning."""
    
    component_source: Optional[list[shared_componentsource.ComponentSource]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('componentSource'), 'exclude': lambda f: f is None }})
    r"""Collections produced and consumed by component transforms of this stage."""  
    component_transform: Optional[list[shared_componenttransform.ComponentTransform]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('componentTransform'), 'exclude': lambda f: f is None }})
    r"""Transforms that comprise this execution stage."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Dataflow service generated id for this stage."""  
    input_source: Optional[list[shared_stagesource.StageSource]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputSource'), 'exclude': lambda f: f is None }})
    r"""Input sources for this stage."""  
    kind: Optional[ExecutionStageSummaryKindEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Type of transform this stage is executing."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Dataflow service generated name for this stage."""  
    output_source: Optional[list[shared_stagesource.StageSource]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputSource'), 'exclude': lambda f: f is None }})
    r"""Output sources for this stage."""  
    prerequisite_stage: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prerequisiteStage'), 'exclude': lambda f: f is None }})
    r"""Other stages that must complete before this stage can run."""  
    