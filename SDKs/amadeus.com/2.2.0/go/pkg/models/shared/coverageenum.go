// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CoverageEnum - part of the trip covered by the travel class restriction (ALL_SEGMENTS if ommited)
type CoverageEnum string

const (
	CoverageEnumMostSegments      CoverageEnum = "MOST_SEGMENTS"
	CoverageEnumAtLeastOneSegment CoverageEnum = "AT_LEAST_ONE_SEGMENT"
	CoverageEnumAllSegments       CoverageEnum = "ALL_SEGMENTS"
)

func (e CoverageEnum) ToPointer() *CoverageEnum {
	return &e
}

func (e *CoverageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MOST_SEGMENTS":
		fallthrough
	case "AT_LEAST_ONE_SEGMENT":
		fallthrough
	case "ALL_SEGMENTS":
		*e = CoverageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CoverageEnum: %v", v)
	}
}
