"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import resourcemetadata as shared_resourcemetadata
from ..shared import virtualservicespec as shared_virtualservicespec
from ..shared import virtualservicestatus as shared_virtualservicestatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VirtualServiceData:
    r"""An object that represents a virtual service returned by a describe operation."""
    
    mesh_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meshName') }})  
    metadata: shared_resourcemetadata.ResourceMetadata = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata') }})
    r"""An object that represents metadata for a resource."""  
    spec: shared_virtualservicespec.VirtualServiceSpec = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec') }})  
    status: shared_virtualservicestatus.VirtualServiceStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    virtual_service_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('virtualServiceName') }})  
    