// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaskReservationEnumCallStatusEnum string

const (
	TaskReservationEnumCallStatusEnumInitiated TaskReservationEnumCallStatusEnum = "initiated"
	TaskReservationEnumCallStatusEnumRinging   TaskReservationEnumCallStatusEnum = "ringing"
	TaskReservationEnumCallStatusEnumAnswered  TaskReservationEnumCallStatusEnum = "answered"
	TaskReservationEnumCallStatusEnumCompleted TaskReservationEnumCallStatusEnum = "completed"
)

func (e *TaskReservationEnumCallStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "initiated":
		fallthrough
	case "ringing":
		fallthrough
	case "answered":
		fallthrough
	case "completed":
		*e = TaskReservationEnumCallStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskReservationEnumCallStatusEnum: %s", s)
	}
}
