/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthorizationAttemptInfo } from "./authorizationattemptinfo";
import { ProvisioningIssue } from "./provisioningissue";
import { Expose, Type } from "class-transformer";

/**
 * Output only. State of the managed certificate resource.
 */
export enum ManagedCertificateStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Provisioning = "PROVISIONING",
  Failed = "FAILED",
  Active = "ACTIVE",
}

/**
 * Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so.
 */
export class ManagedCertificate extends SpeakeasyBase {
  /**
   * Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.
   */
  @SpeakeasyMetadata({ elemType: AuthorizationAttemptInfo })
  @Expose({ name: "authorizationAttemptInfo" })
  @Type(() => AuthorizationAttemptInfo)
  authorizationAttemptInfo?: AuthorizationAttemptInfo[];

  /**
   * Immutable. Authorizations that will be used for performing domain authorization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dnsAuthorizations" })
  dnsAuthorizations?: string[];

  /**
   * Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domains" })
  domains?: string[];

  /**
   * Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/* /locations/* /certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issuanceConfig" })
  issuanceConfig?: string;

  /**
   * Information about issues with provisioning a Managed Certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provisioningIssue" })
  @Type(() => ProvisioningIssue)
  provisioningIssue?: ProvisioningIssue;

  /**
   * Output only. State of the managed certificate resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ManagedCertificateStateEnum;
}

/**
 * Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so.
 */
export class ManagedCertificateInput extends SpeakeasyBase {
  /**
   * Immutable. Authorizations that will be used for performing domain authorization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dnsAuthorizations" })
  dnsAuthorizations?: string[];

  /**
   * Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domains" })
  domains?: string[];

  /**
   * Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/* /locations/* /certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issuanceConfig" })
  issuanceConfig?: string;
}
