/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AdditionalInferenceSpecificationDefinition } from "./additionalinferencespecificationdefinition";
import { DriftCheckBaselines } from "./driftcheckbaselines";
import { InferenceSpecification } from "./inferencespecification";
import { MetadataProperties } from "./metadataproperties";
import { ModelApprovalStatusEnum } from "./modelapprovalstatusenum";
import { ModelMetrics } from "./modelmetrics";
import { ModelPackageValidationSpecification } from "./modelpackagevalidationspecification";
import { SourceAlgorithmSpecification } from "./sourcealgorithmspecification";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateModelPackageInput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AdditionalInferenceSpecificationDefinition })
  @Expose({ name: "AdditionalInferenceSpecifications" })
  @Type(() => AdditionalInferenceSpecificationDefinition)
  additionalInferenceSpecifications?: AdditionalInferenceSpecificationDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "CertifyForMarketplace" })
  certifyForMarketplace?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ClientToken" })
  clientToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomerMetadataProperties" })
  customerMetadataProperties?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Domain" })
  domain?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DriftCheckBaselines" })
  @Type(() => DriftCheckBaselines)
  driftCheckBaselines?: DriftCheckBaselines;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceSpecification" })
  @Type(() => InferenceSpecification)
  inferenceSpecification?: InferenceSpecification;

  /**
   * Metadata properties of the tracking entity, trial, or trial component.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MetadataProperties" })
  @Type(() => MetadataProperties)
  metadataProperties?: MetadataProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelApprovalStatus" })
  modelApprovalStatus?: ModelApprovalStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelMetrics" })
  @Type(() => ModelMetrics)
  modelMetrics?: ModelMetrics;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageDescription" })
  modelPackageDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageGroupName" })
  modelPackageGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageName" })
  modelPackageName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SamplePayloadUrl" })
  samplePayloadUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceAlgorithmSpecification" })
  @Type(() => SourceAlgorithmSpecification)
  sourceAlgorithmSpecification?: SourceAlgorithmSpecification;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "Task" })
  task?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ValidationSpecification" })
  @Type(() => ModelPackageValidationSpecification)
  validationSpecification?: ModelPackageValidationSpecification;
}
