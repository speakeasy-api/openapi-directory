/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SqlIpConfig - IP Management configuration.
 */
public class SqlIpConfig {
    /**
     * The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizedNetworks")
    public SqlAclEntry[] authorizedNetworks;

    public SqlIpConfig withAuthorizedNetworks(SqlAclEntry[] authorizedNetworks) {
        this.authorizedNetworks = authorizedNetworks;
        return this;
    }
    
    /**
     * Whether the instance is assigned a public IP address or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableIpv4")
    public Boolean enableIpv4;

    public SqlIpConfig withEnableIpv4(Boolean enableIpv4) {
        this.enableIpv4 = enableIpv4;
        return this;
    }
    
    /**
     * The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateNetwork")
    public String privateNetwork;

    public SqlIpConfig withPrivateNetwork(String privateNetwork) {
        this.privateNetwork = privateNetwork;
        return this;
    }
    
    /**
     * Whether SSL connections over IP should be enforced or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requireSsl")
    public Boolean requireSsl;

    public SqlIpConfig withRequireSsl(Boolean requireSsl) {
        this.requireSsl = requireSsl;
        return this;
    }
    
    public SqlIpConfig(){}
}
