// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// LeaveOrganizationXAmzTargetEnum
type LeaveOrganizationXAmzTargetEnum string

const (
	LeaveOrganizationXAmzTargetEnumAwsOrganizationsV20161128LeaveOrganization LeaveOrganizationXAmzTargetEnum = "AWSOrganizationsV20161128.LeaveOrganization"
)

func (e LeaveOrganizationXAmzTargetEnum) ToPointer() *LeaveOrganizationXAmzTargetEnum {
	return &e
}

func (e *LeaveOrganizationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSOrganizationsV20161128.LeaveOrganization":
		*e = LeaveOrganizationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LeaveOrganizationXAmzTargetEnum: %v", v)
	}
}

type LeaveOrganizationRequest struct {
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        LeaveOrganizationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type LeaveOrganizationResponse struct {
	// AWSOrganizationsNotInUseException
	AWSOrganizationsNotInUseException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccountNotFoundException
	AccountNotFoundException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	// ConstraintViolationException
	ConstraintViolationException interface{}
	ContentType                  string
	// InvalidInputException
	InvalidInputException interface{}
	// MasterCannotLeaveOrganizationException
	MasterCannotLeaveOrganizationException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
