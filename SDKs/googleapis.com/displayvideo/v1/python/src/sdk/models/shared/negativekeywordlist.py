"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NegativeKeywordListInput:
    r"""A list of negative keywords used for targeting."""
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The display name of the negative keyword list. Must be UTF-8 encoded with a maximum size of 255 bytes."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NegativeKeywordList:
    r"""A list of negative keywords used for targeting."""
    
    advertiser_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserId'), 'exclude': lambda f: f is None }})
    r"""Output only. The unique ID of the advertiser the negative keyword list belongs to."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The display name of the negative keyword list. Must be UTF-8 encoded with a maximum size of 255 bytes."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The resource name of the negative keyword list."""  
    negative_keyword_list_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('negativeKeywordListId'), 'exclude': lambda f: f is None }})
    r"""Output only. The unique ID of the negative keyword list. Assigned by the system."""  
    targeted_line_item_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetedLineItemCount'), 'exclude': lambda f: f is None }})
    r"""Output only. Number of line items that are directly targeting this negative keyword list."""  
    