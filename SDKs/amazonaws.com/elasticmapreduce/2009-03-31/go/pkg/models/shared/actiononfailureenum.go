// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActionOnFailureEnum string

const (
	ActionOnFailureEnumTerminateJobFlow ActionOnFailureEnum = "TERMINATE_JOB_FLOW"
	ActionOnFailureEnumTerminateCluster ActionOnFailureEnum = "TERMINATE_CLUSTER"
	ActionOnFailureEnumCancelAndWait    ActionOnFailureEnum = "CANCEL_AND_WAIT"
	ActionOnFailureEnumContinue         ActionOnFailureEnum = "CONTINUE"
)

func (e *ActionOnFailureEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TERMINATE_JOB_FLOW":
		fallthrough
	case "TERMINATE_CLUSTER":
		fallthrough
	case "CANCEL_AND_WAIT":
		fallthrough
	case "CONTINUE":
		*e = ActionOnFailureEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionOnFailureEnum: %s", s)
	}
}
