/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedDevice } from "./nesteddevice";
import { Expose, Type } from "class-transformer";

export enum RackUnitFaceLabelEnum {
  Front = "Front",
  Rear = "Rear",
}

export enum RackUnitFaceValueEnum {
  Front = "front",
  Rear = "rear",
}

export class RackUnitFace extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: RackUnitFaceLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: RackUnitFaceValueEnum;
}

export class RackUnit extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "device" })
  @Type(() => NestedDevice)
  device?: NestedDevice;

  @SpeakeasyMetadata()
  @Expose({ name: "face" })
  @Type(() => RackUnitFace)
  face?: RackUnitFace;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
