/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ColorInfo - An object providing additional metadata describing color attributes.
 */
public class ColorInfo {
    /**
     * Possible accent color.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accentColor")
    public String accentColor;

    public ColorInfo withAccentColor(String accentColor) {
        this.accentColor = accentColor;
        return this;
    }
    
    /**
     * Possible dominant background color.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dominantColorBackground")
    public String dominantColorBackground;

    public ColorInfo withDominantColorBackground(String dominantColorBackground) {
        this.dominantColorBackground = dominantColorBackground;
        return this;
    }
    
    /**
     * Possible dominant foreground color.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dominantColorForeground")
    public String dominantColorForeground;

    public ColorInfo withDominantColorForeground(String dominantColorForeground) {
        this.dominantColorForeground = dominantColorForeground;
        return this;
    }
    
    /**
     * An array of possible dominant colors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dominantColors")
    public String[] dominantColors;

    public ColorInfo withDominantColors(String[] dominantColors) {
        this.dominantColors = dominantColors;
        return this;
    }
    
    /**
     * A value indicating if the image is black and white.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isBWImg")
    public Boolean isBWImg;

    public ColorInfo withIsBWImg(Boolean isBWImg) {
        this.isBWImg = isBWImg;
        return this;
    }
    
    public ColorInfo(){}
}
