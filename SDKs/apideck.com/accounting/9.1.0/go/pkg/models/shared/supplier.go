// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// SupplierStatusEnum - Supplier status
type SupplierStatusEnum string

const (
	SupplierStatusEnumActive             SupplierStatusEnum = "active"
	SupplierStatusEnumInactive           SupplierStatusEnum = "inactive"
	SupplierStatusEnumArchived           SupplierStatusEnum = "archived"
	SupplierStatusEnumGdprErasureRequest SupplierStatusEnum = "gdpr-erasure-request"
	SupplierStatusEnumUnknown            SupplierStatusEnum = "unknown"
)

func (e *SupplierStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "archived":
		fallthrough
	case "gdpr-erasure-request":
		fallthrough
	case "unknown":
		*e = SupplierStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SupplierStatusEnum: %s", s)
	}
}

type SupplierInput struct {
	Account      *LinkedLedgerAccountInput `json:"account,omitempty"`
	Addresses    []Address                 `json:"addresses,omitempty"`
	BankAccounts []BankAccount             `json:"bank_accounts,omitempty"`
	// The name of the company.
	CompanyName *string `json:"company_name,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *CurrencyEnum `json:"currency,omitempty"`
	// Display ID
	DisplayID *string `json:"display_id,omitempty"`
	// Display name
	DisplayName *string `json:"display_name,omitempty"`
	Emails      []Email `json:"emails,omitempty"`
	// The first name of the person.
	FirstName *string `json:"first_name,omitempty"`
	// Is this an individual or business supplier
	Individual *bool `json:"individual,omitempty"`
	// The last name of the person.
	LastName *string `json:"last_name,omitempty"`
	// Middle name of the person.
	MiddleName *string `json:"middle_name,omitempty"`
	// Some notes about this supplier
	Notes        *string       `json:"notes,omitempty"`
	PhoneNumbers []PhoneNumber `json:"phone_numbers,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// Supplier status
	Status    *SupplierStatusEnum `json:"status,omitempty"`
	Suffix    *string             `json:"suffix,omitempty"`
	TaxNumber *string             `json:"tax_number,omitempty"`
	TaxRate   *LinkedTaxRateInput `json:"tax_rate,omitempty"`
	// The job title of the person.
	Title    *string   `json:"title,omitempty"`
	Websites []Website `json:"websites,omitempty"`
}

type Supplier struct {
	Account      *LinkedLedgerAccount `json:"account,omitempty"`
	Addresses    []Address            `json:"addresses,omitempty"`
	BankAccounts []BankAccount        `json:"bank_accounts,omitempty"`
	// The name of the company.
	CompanyName *string `json:"company_name,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *CurrencyEnum `json:"currency,omitempty"`
	// Display ID
	DisplayID *string `json:"display_id,omitempty"`
	// Display name
	DisplayName *string `json:"display_name,omitempty"`
	// The third-party API ID of original entity
	DownstreamID *string `json:"downstream_id,omitempty"`
	Emails       []Email `json:"emails,omitempty"`
	// The first name of the person.
	FirstName *string `json:"first_name,omitempty"`
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// Is this an individual or business supplier
	Individual *bool `json:"individual,omitempty"`
	// The last name of the person.
	LastName *string `json:"last_name,omitempty"`
	// Middle name of the person.
	MiddleName *string `json:"middle_name,omitempty"`
	// Some notes about this supplier
	Notes        *string       `json:"notes,omitempty"`
	PhoneNumbers []PhoneNumber `json:"phone_numbers,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// Supplier status
	Status    *SupplierStatusEnum `json:"status,omitempty"`
	Suffix    *string             `json:"suffix,omitempty"`
	TaxNumber *string             `json:"tax_number,omitempty"`
	TaxRate   *LinkedTaxRate      `json:"tax_rate,omitempty"`
	// The job title of the person.
	Title *string `json:"title,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string   `json:"updated_by,omitempty"`
	Websites  []Website `json:"websites,omitempty"`
}
