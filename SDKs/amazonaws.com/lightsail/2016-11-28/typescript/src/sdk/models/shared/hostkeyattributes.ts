/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Describes the public SSH host keys or the RDP certificate.
 */
export class HostKeyAttributes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "algorithm" })
  algorithm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fingerprintSHA1" })
  fingerprintSha1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fingerprintSHA256" })
  fingerprintSha256?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notValidAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notValidAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "notValidBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notValidBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "publicKey" })
  publicKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "witnessedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  witnessedAt?: Date;
}
