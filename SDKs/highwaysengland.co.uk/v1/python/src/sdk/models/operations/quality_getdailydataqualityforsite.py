"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import dailyqualityresponse as shared_dailyqualityresponse
from typing import Optional


@dataclasses.dataclass
class QualityGetDailyDataQualityForSiteRequest:
    
    end_date: str = dataclasses.field(metadata={'query_param': { 'field_name': 'end_date', 'style': 'form', 'explode': True }})
    r"""The end date of the report in the format ddmmyyyy (i.e 31012016)"""  
    site_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'siteId', 'style': 'form', 'explode': True }})  
    start_date: str = dataclasses.field(metadata={'query_param': { 'field_name': 'start_date', 'style': 'form', 'explode': True }})
    r"""The start date of the report in the format ddmmyyyy (i.e 31012016)"""  
    version: str = dataclasses.field(metadata={'path_param': { 'field_name': 'version', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class QualityGetDailyDataQualityForSiteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    daily_quality_response: Optional[shared_dailyqualityresponse.DailyQualityResponse] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    