/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Principal } from "./principal";
import { Expose, Type } from "class-transformer";

/**
 * The resolution status for the external identity.
 */
export enum UnmappedIdentityResolutionStatusCodeEnum {
  CodeUnspecified = "CODE_UNSPECIFIED",
  NotFound = "NOT_FOUND",
  IdentitySourceNotFound = "IDENTITY_SOURCE_NOT_FOUND",
  IdentitySourceMisconfigured = "IDENTITY_SOURCE_MISCONFIGURED",
  TooManyMappingsFound = "TOO_MANY_MAPPINGS_FOUND",
  InternalError = "INTERNAL_ERROR",
}

export class UnmappedIdentity extends SpeakeasyBase {
  /**
   * Reference to a user, group, or domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "externalIdentity" })
  @Type(() => Principal)
  externalIdentity?: Principal;

  /**
   * The resolution status for the external identity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resolutionStatusCode" })
  resolutionStatusCode?: UnmappedIdentityResolutionStatusCodeEnum;
}
