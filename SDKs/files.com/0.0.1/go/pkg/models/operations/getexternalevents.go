// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetExternalEventsQueryParams struct {
	// Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `event_type`, `remote_server_type`, `status` or `folder_behavior_id`. Valid field combinations are `[ event_type, status, created_at ]`, `[ event_type, created_at ]` or `[ status, created_at ]`.
	Filter map[string]interface{} `queryParam:"style=form,explode=true,name=filter"`
	// If set, return records where the specified field is greater than the supplied value. Valid fields are `created_at`, `event_type`, `remote_server_type`, `status` or `folder_behavior_id`. Valid field combinations are `[ event_type, status, created_at ]`, `[ event_type, created_at ]` or `[ status, created_at ]`.
	FilterGt map[string]interface{} `queryParam:"style=form,explode=true,name=filter_gt"`
	// If set, return records where the specified field is greater than or equal to the supplied value. Valid fields are `created_at`, `event_type`, `remote_server_type`, `status` or `folder_behavior_id`. Valid field combinations are `[ event_type, status, created_at ]`, `[ event_type, created_at ]` or `[ status, created_at ]`.
	FilterGteq map[string]interface{} `queryParam:"style=form,explode=true,name=filter_gteq"`
	// If set, return records where the specified field is equal to the supplied value. Valid fields are `created_at`, `event_type`, `remote_server_type`, `status` or `folder_behavior_id`. Valid field combinations are `[ event_type, status, created_at ]`, `[ event_type, created_at ]` or `[ status, created_at ]`.
	FilterLike map[string]interface{} `queryParam:"style=form,explode=true,name=filter_like"`
	// If set, return records where the specified field is less than the supplied value. Valid fields are `created_at`, `event_type`, `remote_server_type`, `status` or `folder_behavior_id`. Valid field combinations are `[ event_type, status, created_at ]`, `[ event_type, created_at ]` or `[ status, created_at ]`.
	FilterLt map[string]interface{} `queryParam:"style=form,explode=true,name=filter_lt"`
	// If set, return records where the specified field is less than or equal to the supplied value. Valid fields are `created_at`, `event_type`, `remote_server_type`, `status` or `folder_behavior_id`. Valid field combinations are `[ event_type, status, created_at ]`, `[ event_type, created_at ]` or `[ status, created_at ]`.
	FilterLteq map[string]interface{} `queryParam:"style=form,explode=true,name=filter_lteq"`
	// Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[remote_server_type]=desc`). Valid fields are `remote_server_type`, `site_id`, `folder_behavior_id`, `event_type`, `created_at` or `status`.
	SortBy map[string]interface{} `queryParam:"style=form,explode=true,name=sort_by"`
}

type GetExternalEventsRequest struct {
	QueryParams GetExternalEventsQueryParams
}

type GetExternalEventsResponse struct {
	ContentType string
	// A list of ExternalEvents objects.
	ExternalEventEntities []shared.ExternalEventEntity
	StatusCode            int
	RawResponse           *http.Response
}
