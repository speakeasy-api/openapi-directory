"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSwitchRoutingMulticastRendezvousPointRequestBody:
    
    interface_ip: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interfaceIp') }})
    r"""The IP address of the interface to use"""  
    multicast_group: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multicastGroup') }})
    r"""'Any', or the IP address of a multicast group"""  
    

@dataclasses.dataclass
class UpdateNetworkSwitchRoutingMulticastRendezvousPointRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    rendezvous_point_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'rendezvousPointId', 'style': 'simple', 'explode': False }})  
    request_body: UpdateNetworkSwitchRoutingMulticastRendezvousPointRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkSwitchRoutingMulticastRendezvousPointResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_switch_routing_multicast_rendezvous_point_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    