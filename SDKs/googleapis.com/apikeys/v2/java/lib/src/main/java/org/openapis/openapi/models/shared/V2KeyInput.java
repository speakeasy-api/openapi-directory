/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * V2KeyInput - The representation of a key managed by the API Keys API.
 */
public class V2KeyInput {
    /**
     * Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;
    public V2KeyInput withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Human-readable display name of this key that you can modify. The maximum length is 63 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public V2KeyInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Describes the restrictions on the key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restrictions")
    public V2Restrictions restrictions;
    public V2KeyInput withRestrictions(V2Restrictions restrictions) {
        this.restrictions = restrictions;
        return this;
    }
    
}
