// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateDeploymentConfigXAmzTargetEnum
type CreateDeploymentConfigXAmzTargetEnum string

const (
	CreateDeploymentConfigXAmzTargetEnumCodeDeploy20141006CreateDeploymentConfig CreateDeploymentConfigXAmzTargetEnum = "CodeDeploy_20141006.CreateDeploymentConfig"
)

func (e *CreateDeploymentConfigXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeDeploy_20141006.CreateDeploymentConfig":
		*e = CreateDeploymentConfigXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDeploymentConfigXAmzTargetEnum: %s", s)
	}
}

type CreateDeploymentConfigHeaders struct {
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateDeploymentConfigXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateDeploymentConfigRequest struct {
	Headers CreateDeploymentConfigHeaders
	Request shared.CreateDeploymentConfigInput `request:"mediaType=application/json"`
}

type CreateDeploymentConfigResponse struct {
	ContentType string
	// Success
	CreateDeploymentConfigOutput *shared.CreateDeploymentConfigOutput
	// DeploymentConfigAlreadyExistsException
	DeploymentConfigAlreadyExistsException interface{}
	// DeploymentConfigLimitExceededException
	DeploymentConfigLimitExceededException interface{}
	// DeploymentConfigNameRequiredException
	DeploymentConfigNameRequiredException interface{}
	// InvalidComputePlatformException
	InvalidComputePlatformException interface{}
	// InvalidDeploymentConfigNameException
	InvalidDeploymentConfigNameException interface{}
	// InvalidMinimumHealthyHostValueException
	InvalidMinimumHealthyHostValueException interface{}
	// InvalidTrafficRoutingConfigurationException
	InvalidTrafficRoutingConfigurationException interface{}
	StatusCode                                  int
	RawResponse                                 *http.Response
}
