/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * An object that represents a virtual gateway returned by a list operation.
 */
export class VirtualGatewayRef extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "meshName" })
  meshName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meshOwner" })
  meshOwner: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceOwner" })
  resourceOwner: string;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: number;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualGatewayName" })
  virtualGatewayName: string;
}
