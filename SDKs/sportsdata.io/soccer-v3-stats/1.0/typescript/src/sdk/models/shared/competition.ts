/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Season } from "./season";
import { Expose, Type } from "class-transformer";

export class Competition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AreaId" })
  areaId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "AreaName" })
  areaName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CompetitionId" })
  competitionId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Format" })
  format?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Gender" })
  gender?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: Season })
  @Expose({ name: "Seasons" })
  @Type(() => Season)
  seasons?: Season[];

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;
}
