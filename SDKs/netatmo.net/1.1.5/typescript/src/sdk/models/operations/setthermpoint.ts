/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SetthermpointSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  codeOauth?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  passwordOauth?: string;
}

/**
 * Chosen setpoint_mode
 */
export enum SetthermpointSetpointModeEnum {
  Program = "program",
  Away = "away",
  Hg = "hg",
  Manual = "manual",
  Off = "off",
  Max = "max",
}

export class SetthermpointRequest extends SpeakeasyBase {
  /**
   * The relay id
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=device_id",
  })
  deviceId: string;

  /**
   * The thermostat id
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=module_id",
  })
  moduleId: string;

  /**
   * When using the manual or max setpoint_mode, this parameter defines when the setpoint expires.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=setpoint_endtime",
  })
  setpointEndtime?: number;

  /**
   * Chosen setpoint_mode
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=setpoint_mode",
  })
  setpointMode: SetthermpointSetpointModeEnum;

  /**
   * When using the manual setpoint_mode, this parameter defines the temperature setpoint (in Celcius) to use.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=setpoint_temp",
  })
  setpointTemp?: number;
}

export class SetthermpointResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  naOkResponse?: shared.NAOkResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
