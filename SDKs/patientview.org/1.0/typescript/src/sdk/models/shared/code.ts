/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CodeCategory } from "./codecategory";
import { CodeExternalStandard } from "./codeexternalstandard";
import { Link } from "./link";
import { Lookup } from "./lookup";
import { Expose, Transform, Type } from "class-transformer";

export enum CodeSourceTypeEnum {
  Patientview = "PATIENTVIEW",
  NhsChoices = "NHS_CHOICES",
}

export class Code extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata({ elemType: CodeCategory })
  @Expose({ name: "codeCategories" })
  @Type(() => CodeCategory)
  codeCategories?: CodeCategory[];

  @SpeakeasyMetadata()
  @Expose({ name: "codeType" })
  @Type(() => Lookup)
  codeType?: Lookup;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "displayOrder" })
  displayOrder?: number;

  @SpeakeasyMetadata({ elemType: CodeExternalStandard })
  @Expose({ name: "externalStandards" })
  @Type(() => CodeExternalStandard)
  externalStandards?: CodeExternalStandard[];

  @SpeakeasyMetadata()
  @Expose({ name: "fullDescription" })
  fullDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hideFromPatients" })
  hideFromPatients?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdate?: Date;

  @SpeakeasyMetadata({ elemType: Link })
  @Expose({ name: "links" })
  @Type(() => Link)
  links?: Link[];

  @SpeakeasyMetadata()
  @Expose({ name: "patientFriendlyName" })
  patientFriendlyName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "removedExternally" })
  removedExternally?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceType" })
  sourceType?: CodeSourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "standardType" })
  @Type(() => Lookup)
  standardType?: Lookup;
}
