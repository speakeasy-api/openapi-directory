/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ObjectFilter } from "./objectfilter";
import { Expose, Type } from "class-transformer";

/**
 * Trafficker type of this user profile. This is a read-only field.
 */
export enum AccountUserProfileTraffickerTypeEnum {
  InternalNonTrafficker = "INTERNAL_NON_TRAFFICKER",
  InternalTrafficker = "INTERNAL_TRAFFICKER",
  ExternalTrafficker = "EXTERNAL_TRAFFICKER",
}

/**
 * User type of the user profile. This is a read-only field that can be left blank.
 */
export enum AccountUserProfileUserAccessTypeEnum {
  NormalUser = "NORMAL_USER",
  SuperUser = "SUPER_USER",
  InternalAdministrator = "INTERNAL_ADMINISTRATOR",
  ReadOnlySuperUser = "READ_ONLY_SUPER_USER",
}

/**
 * AccountUserProfiles contains properties of a Campaign Manager user profile. This resource is specifically for managing user profiles, whereas UserProfiles is for accessing the API.
 */
export class AccountUserProfile extends SpeakeasyBase {
  /**
   * Account ID of the user profile. This is a read-only field that can be left blank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Whether this user profile is active. This defaults to false, and must be set true on insert for the user profile to be usable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Object Filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "advertiserFilter" })
  @Type(() => ObjectFilter)
  advertiserFilter?: ObjectFilter;

  /**
   * Object Filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "campaignFilter" })
  @Type(() => ObjectFilter)
  campaignFilter?: ObjectFilter;

  /**
   * Comments for this user profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  /**
   * Email of the user profile. The email addresss must be linked to a Google Account. This field is required on insertion and is read-only after insertion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * ID of the user profile. This is a read-only, auto-generated field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountUserProfile".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Locale of the user profile. This is a required field. Acceptable values are: - "cs" (Czech) - "de" (German) - "en" (English) - "en-GB" (English United Kingdom) - "es" (Spanish) - "fr" (French) - "it" (Italian) - "ja" (Japanese) - "ko" (Korean) - "pl" (Polish) - "pt-BR" (Portuguese Brazil) - "ru" (Russian) - "sv" (Swedish) - "tr" (Turkish) - "zh-CN" (Chinese Simplified) - "zh-TW" (Chinese Traditional)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locale" })
  locale?: string;

  /**
   * Name of the user profile. This is a required field. Must be less than 64 characters long, must be globally unique, and cannot contain whitespace or any of the following characters: "&;<>"#%,".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Object Filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "siteFilter" })
  @Type(() => ObjectFilter)
  siteFilter?: ObjectFilter;

  /**
   * Subaccount ID of the user profile. This is a read-only field that can be left blank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subaccountId" })
  subaccountId?: string;

  /**
   * Trafficker type of this user profile. This is a read-only field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "traffickerType" })
  traffickerType?: AccountUserProfileTraffickerTypeEnum;

  /**
   * User type of the user profile. This is a read-only field that can be left blank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userAccessType" })
  userAccessType?: AccountUserProfileUserAccessTypeEnum;

  /**
   * Object Filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userRoleFilter" })
  @Type(() => ObjectFilter)
  userRoleFilter?: ObjectFilter;

  /**
   * User role ID of the user profile. This is a required field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userRoleId" })
  userRoleId?: string;
}
