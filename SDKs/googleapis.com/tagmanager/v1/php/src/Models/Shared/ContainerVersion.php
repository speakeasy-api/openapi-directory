<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ContainerVersion - Represents a Google Tag Manager Container Version.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ContainerVersion
{
    /**
     * GTM Account ID.
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * Represents a Google Tag Manager Container.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Container $container
     */
	#[\JMS\Serializer\Annotation\SerializedName('container')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Container')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Container $container = null;
    
    /**
     * GTM Container ID.
     * 
     * @var ?string $containerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('containerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $containerId = null;
    
    /**
     * The Container Version ID uniquely identifies the GTM Container Version.
     * 
     * @var ?string $containerVersionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('containerVersionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $containerVersionId = null;
    
    /**
     * A value of true indicates this container version has been deleted.
     * 
     * @var ?bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleted = null;
    
    /**
     * The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.
     * 
     * @var ?string $fingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprint = null;
    
    /**
     * The folders in the container that this version was taken from.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Folder> $folder
     */
	#[\JMS\Serializer\Annotation\SerializedName('folder')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Folder>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $folder = null;
    
    /**
     * The macros in the container that this version was taken from.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Macro> $macro
     */
	#[\JMS\Serializer\Annotation\SerializedName('macro')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Macro>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $macro = null;
    
    /**
     * Container version display name. @mutable tagmanager.accounts.containers.versions.update
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * User notes on how to apply this container version in the container. @mutable tagmanager.accounts.containers.versions.update
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * The rules in the container that this version was taken from.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Rule> $rule
     */
	#[\JMS\Serializer\Annotation\SerializedName('rule')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Rule>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $rule = null;
    
    /**
     * The tags in the container that this version was taken from.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Tag> $tag
     */
	#[\JMS\Serializer\Annotation\SerializedName('tag')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Tag>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tag = null;
    
    /**
     * The triggers in the container that this version was taken from.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Trigger> $trigger
     */
	#[\JMS\Serializer\Annotation\SerializedName('trigger')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Trigger>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $trigger = null;
    
    /**
     * The variables in the container that this version was taken from.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Variable> $variable
     */
	#[\JMS\Serializer\Annotation\SerializedName('variable')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Variable>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $variable = null;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->container = null;
		$this->containerId = null;
		$this->containerVersionId = null;
		$this->deleted = null;
		$this->fingerprint = null;
		$this->folder = null;
		$this->macro = null;
		$this->name = null;
		$this->notes = null;
		$this->rule = null;
		$this->tag = null;
		$this->trigger = null;
		$this->variable = null;
	}
}
