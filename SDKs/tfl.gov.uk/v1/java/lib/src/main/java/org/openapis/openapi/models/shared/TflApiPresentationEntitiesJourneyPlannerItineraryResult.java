/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TflApiPresentationEntitiesJourneyPlannerItineraryResult - A DTO representing a list of possible journeys.
 */
public class TflApiPresentationEntitiesJourneyPlannerItineraryResult {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cycleHireDockingStationData")
    public TflApiPresentationEntitiesJourneyPlannerJourneyPlannerCycleHireDockingStationData cycleHireDockingStationData;
    public TflApiPresentationEntitiesJourneyPlannerItineraryResult withCycleHireDockingStationData(TflApiPresentationEntitiesJourneyPlannerJourneyPlannerCycleHireDockingStationData cycleHireDockingStationData) {
        this.cycleHireDockingStationData = cycleHireDockingStationData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("journeyVector")
    public TflApiPresentationEntitiesJourneyPlannerJourneyVector journeyVector;
    public TflApiPresentationEntitiesJourneyPlannerItineraryResult withJourneyVector(TflApiPresentationEntitiesJourneyPlannerJourneyVector journeyVector) {
        this.journeyVector = journeyVector;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("journeys")
    public TflApiPresentationEntitiesJourneyPlannerJourney[] journeys;
    public TflApiPresentationEntitiesJourneyPlannerItineraryResult withJourneys(TflApiPresentationEntitiesJourneyPlannerJourney[] journeys) {
        this.journeys = journeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lines")
    public TflApiPresentationEntitiesLine[] lines;
    public TflApiPresentationEntitiesJourneyPlannerItineraryResult withLines(TflApiPresentationEntitiesLine[] lines) {
        this.lines = lines;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recommendedMaxAgeMinutes")
    public Integer recommendedMaxAgeMinutes;
    public TflApiPresentationEntitiesJourneyPlannerItineraryResult withRecommendedMaxAgeMinutes(Integer recommendedMaxAgeMinutes) {
        this.recommendedMaxAgeMinutes = recommendedMaxAgeMinutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchCriteria")
    public TflApiPresentationEntitiesJourneyPlannerSearchCriteria searchCriteria;
    public TflApiPresentationEntitiesJourneyPlannerItineraryResult withSearchCriteria(TflApiPresentationEntitiesJourneyPlannerSearchCriteria searchCriteria) {
        this.searchCriteria = searchCriteria;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stopMessages")
    public String[] stopMessages;
    public TflApiPresentationEntitiesJourneyPlannerItineraryResult withStopMessages(String[] stopMessages) {
        this.stopMessages = stopMessages;
        return this;
    }
    
}
