/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnthosObservabilityMembershipSpec } from "./anthosobservabilitymembershipspec";
import { CloudBuildMembershipSpec } from "./cloudbuildmembershipspec";
import { ConfigManagementMembershipSpec } from "./configmanagementmembershipspec";
import {
  IdentityServiceMembershipSpec,
  IdentityServiceMembershipSpecInput,
} from "./identityservicemembershipspec";
import { MembershipSpec } from "./membershipspec";
import { PolicyControllerMembershipSpec } from "./policycontrollermembershipspec";
import { ServiceMeshMembershipSpec } from "./servicemeshmembershipspec";
import { Expose, Type } from "class-transformer";

/**
 * MembershipFeatureSpec contains configuration information for a single Membership.
 */
export class MembershipFeatureSpec extends SpeakeasyBase {
  /**
   * **Anthosobservability**: Per-Membership Feature spec.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "anthosobservability" })
  @Type(() => AnthosObservabilityMembershipSpec)
  anthosobservability?: AnthosObservabilityMembershipSpec;

  /**
   * **Cloud Build**: Configurations for each Cloud Build enabled cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cloudbuild" })
  @Type(() => CloudBuildMembershipSpec)
  cloudbuild?: CloudBuildMembershipSpec;

  /**
   * **Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configmanagement" })
  @Type(() => ConfigManagementMembershipSpec)
  configmanagement?: ConfigManagementMembershipSpec;

  /**
   * True if value of `feature_spec` was inherited from a fleet-level default.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fleetInherited" })
  fleetInherited?: boolean;

  /**
   * **FleetObservability**: The membership-specific input for FleetObservability feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fleetobservability" })
  fleetobservability?: Record<string, any>;

  /**
   * **Anthos Identity Service**: Configuration for a single Membership.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identityservice" })
  @Type(() => IdentityServiceMembershipSpec)
  identityservice?: IdentityServiceMembershipSpec;

  /**
   * **Service Mesh**: Spec for a single Membership for the servicemesh feature
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mesh" })
  @Type(() => ServiceMeshMembershipSpec)
  mesh?: ServiceMeshMembershipSpec;

  /**
   * **Policy Controller**: Configuration for a single cluster. Intended to parallel the PolicyController CR.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policycontroller" })
  @Type(() => PolicyControllerMembershipSpec)
  policycontroller?: PolicyControllerMembershipSpec;

  /**
   * **Workload Certificate**: The membership-specific input for WorkloadCertificate feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workloadcertificate" })
  @Type(() => MembershipSpec)
  workloadcertificate?: MembershipSpec;
}

/**
 * MembershipFeatureSpec contains configuration information for a single Membership.
 */
export class MembershipFeatureSpecInput extends SpeakeasyBase {
  /**
   * **Anthosobservability**: Per-Membership Feature spec.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "anthosobservability" })
  @Type(() => AnthosObservabilityMembershipSpec)
  anthosobservability?: AnthosObservabilityMembershipSpec;

  /**
   * **Cloud Build**: Configurations for each Cloud Build enabled cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cloudbuild" })
  @Type(() => CloudBuildMembershipSpec)
  cloudbuild?: CloudBuildMembershipSpec;

  /**
   * **Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configmanagement" })
  @Type(() => ConfigManagementMembershipSpec)
  configmanagement?: ConfigManagementMembershipSpec;

  /**
   * True if value of `feature_spec` was inherited from a fleet-level default.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fleetInherited" })
  fleetInherited?: boolean;

  /**
   * **FleetObservability**: The membership-specific input for FleetObservability feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fleetobservability" })
  fleetobservability?: Record<string, any>;

  /**
   * **Anthos Identity Service**: Configuration for a single Membership.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identityservice" })
  @Type(() => IdentityServiceMembershipSpecInput)
  identityservice?: IdentityServiceMembershipSpecInput;

  /**
   * **Service Mesh**: Spec for a single Membership for the servicemesh feature
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mesh" })
  @Type(() => ServiceMeshMembershipSpec)
  mesh?: ServiceMeshMembershipSpec;

  /**
   * **Policy Controller**: Configuration for a single cluster. Intended to parallel the PolicyController CR.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policycontroller" })
  @Type(() => PolicyControllerMembershipSpec)
  policycontroller?: PolicyControllerMembershipSpec;

  /**
   * **Workload Certificate**: The membership-specific input for WorkloadCertificate feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workloadcertificate" })
  @Type(() => MembershipSpec)
  workloadcertificate?: MembershipSpec;
}
