/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The optional encoding of the score data. This property must match the encoding used for the `data` property.
 */
export enum ScoreRevisionCreationDataEncodingEnum {
  Base64 = "base64",
}

/**
 * A new created revision
 */
export class ScoreRevisionCreation extends SpeakeasyBase {
  /**
   * Must be set to `true` if the revision was created automatically.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autosave" })
  autosave?: boolean;

  /**
   * The data of the score file. It must be a MusicXML 3 file (`vnd.recordare.musicxml` or `vnd.recordare.musicxml+xml`), a MIDI file (`audio/midi`) or a Flat.json (aka Adagio.json) file.
   *
   * @remarks
   * Binary payloads (`vnd.recordare.musicxml` and `audio/midi`) can be encoded in Base64, in this case the `dataEncoding` property must match the encoding used for the API request.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data: string;

  /**
   * The optional encoding of the score data. This property must match the encoding used for the `data` property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataEncoding" })
  dataEncoding?: ScoreRevisionCreationDataEncodingEnum;

  /**
   * A description associated to the revision
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;
}
