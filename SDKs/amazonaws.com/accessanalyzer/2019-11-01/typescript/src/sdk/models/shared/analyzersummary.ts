/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnalyzerStatusEnum } from "./analyzerstatusenum";
import { StatusReason } from "./statusreason";
import { TypeEnum } from "./typeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains information about the analyzer.
 */
export class AnalyzerSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastResourceAnalyzed" })
  lastResourceAnalyzed?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastResourceAnalyzedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastResourceAnalyzedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: AnalyzerStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusReason" })
  @Type(() => StatusReason)
  statusReason?: StatusReason;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: TypeEnum;
}
