// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResolverAutodefinedReverseStatusEnum string

const (
	ResolverAutodefinedReverseStatusEnumEnabling                          ResolverAutodefinedReverseStatusEnum = "ENABLING"
	ResolverAutodefinedReverseStatusEnumEnabled                           ResolverAutodefinedReverseStatusEnum = "ENABLED"
	ResolverAutodefinedReverseStatusEnumDisabling                         ResolverAutodefinedReverseStatusEnum = "DISABLING"
	ResolverAutodefinedReverseStatusEnumDisabled                          ResolverAutodefinedReverseStatusEnum = "DISABLED"
	ResolverAutodefinedReverseStatusEnumUpdatingToUseLocalResourceSetting ResolverAutodefinedReverseStatusEnum = "UPDATING_TO_USE_LOCAL_RESOURCE_SETTING"
	ResolverAutodefinedReverseStatusEnumUseLocalResourceSetting           ResolverAutodefinedReverseStatusEnum = "USE_LOCAL_RESOURCE_SETTING"
)

func (e ResolverAutodefinedReverseStatusEnum) ToPointer() *ResolverAutodefinedReverseStatusEnum {
	return &e
}

func (e *ResolverAutodefinedReverseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENABLING":
		fallthrough
	case "ENABLED":
		fallthrough
	case "DISABLING":
		fallthrough
	case "DISABLED":
		fallthrough
	case "UPDATING_TO_USE_LOCAL_RESOURCE_SETTING":
		fallthrough
	case "USE_LOCAL_RESOURCE_SETTING":
		*e = ResolverAutodefinedReverseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResolverAutodefinedReverseStatusEnum: %v", v)
	}
}
