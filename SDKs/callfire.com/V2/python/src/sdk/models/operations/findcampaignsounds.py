"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import campaignsoundpage as shared_campaignsoundpage
from ..shared import errorresponse as shared_errorresponse
from typing import Optional


@dataclasses.dataclass
class FindCampaignSoundsSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class FindCampaignSoundsRequest:
    
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': True }})
    r"""Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page."""  
    filter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""value to filter file names again; this value is used to check if the filename contains the filter value."""  
    include_archived: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includeArchived', 'style': 'form', 'explode': True }})
    r"""Includes ARCHIVED sounds for \\"true\\" value"""  
    include_pending: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includePending', 'style': 'form', 'explode': True }})
    r"""Includes UPLOAD/RECORDING sounds for \\"true\\" value"""  
    include_scrubbed: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includeScrubbed', 'style': 'form', 'explode': True }})
    r"""Includes SCRUBBED sounds for \\"true\\" value"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""To set the maximum number of records to return in a paged list response. The default is 100"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API."""  
    

@dataclasses.dataclass
class FindCampaignSoundsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    campaign_sound_page: Optional[shared_campaignsoundpage.CampaignSoundPage] = dataclasses.field(default=None)
    r"""successful operation"""  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Bad request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    