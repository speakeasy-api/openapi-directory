// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProtocolEnumEnum string

const (
	ProtocolEnumEnumHTTP   ProtocolEnumEnum = "HTTP"
	ProtocolEnumEnumHTTPS  ProtocolEnumEnum = "HTTPS"
	ProtocolEnumEnumTCP    ProtocolEnumEnum = "TCP"
	ProtocolEnumEnumTLS    ProtocolEnumEnum = "TLS"
	ProtocolEnumEnumUDP    ProtocolEnumEnum = "UDP"
	ProtocolEnumEnumTCPUDP ProtocolEnumEnum = "TCP_UDP"
	ProtocolEnumEnumGeneve ProtocolEnumEnum = "GENEVE"
)

func (e *ProtocolEnumEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HTTP":
		fallthrough
	case "HTTPS":
		fallthrough
	case "TCP":
		fallthrough
	case "TLS":
		fallthrough
	case "UDP":
		fallthrough
	case "TCP_UDP":
		fallthrough
	case "GENEVE":
		*e = ProtocolEnumEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProtocolEnumEnum: %s", s)
	}
}
