// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetContainerServicePowersXAmzTargetEnum
type GetContainerServicePowersXAmzTargetEnum string

const (
	GetContainerServicePowersXAmzTargetEnumLightsail20161128GetContainerServicePowers GetContainerServicePowersXAmzTargetEnum = "Lightsail_20161128.GetContainerServicePowers"
)

func (e GetContainerServicePowersXAmzTargetEnum) ToPointer() *GetContainerServicePowersXAmzTargetEnum {
	return &e
}

func (e *GetContainerServicePowersXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Lightsail_20161128.GetContainerServicePowers":
		*e = GetContainerServicePowersXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetContainerServicePowersXAmzTargetEnum: %v", v)
	}
}

type GetContainerServicePowersRequest struct {
	RequestBody       map[string]interface{}                  `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetContainerServicePowersXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetContainerServicePowersResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetContainerServicePowersResult *shared.GetContainerServicePowersResult
	// InvalidInputException
	InvalidInputException interface{}
	// NotFoundException
	NotFoundException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// UnauthenticatedException
	UnauthenticatedException interface{}
}
