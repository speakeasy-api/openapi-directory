"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DocumentationRule:
    r"""A documentation rule provides information about individual API elements."""
    
    deprecation_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deprecationDescription'), 'exclude': lambda f: f is None }})
    r"""Deprecation description of the selected element(s). It can be provided if an element is marked as `deprecated`."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the selected proto element (e.g. a message, a method, a 'service' definition, or a field). Defaults to leading & trailing comments taken from the proto source definition of the proto element."""  
    selector: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selector'), 'exclude': lambda f: f is None }})
    r"""The selector is a comma-separated list of patterns for any element such as a method, a field, an enum value. Each pattern is a qualified name of the element which may end in \\"*\\", indicating a wildcard. Wildcards are only allowed at the end and for a whole component of the qualified name, i.e. \\"foo.*\\" is ok, but not \\"foo.b*\\" or \\"foo.*.bar\\". A wildcard will match one or more components. To specify a default for all applicable elements, the whole pattern \\"*\\" is used."""  
    