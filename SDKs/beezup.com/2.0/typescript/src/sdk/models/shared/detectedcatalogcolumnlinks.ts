/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LinksImportationConfigureCatalogColumnLink } from "./linksimportationconfigurecatalogcolumnlink";
import { LinksImportationIgnoreColumnLink } from "./linksimportationignorecolumnlink";
import { LinksImportationMapCatalogColumnLink } from "./linksimportationmapcatalogcolumnlink";
import { LinksImportationReattendColumnLink } from "./linksimportationreattendcolumnlink";
import { LinksImportationUnmapCatalogColumnLink } from "./linksimportationunmapcatalogcolumnlink";
import { Expose, Type } from "class-transformer";

export class DetectedCatalogColumnLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "configure" })
  @Type(() => LinksImportationConfigureCatalogColumnLink)
  configure?: LinksImportationConfigureCatalogColumnLink;

  @SpeakeasyMetadata()
  @Expose({ name: "ignore" })
  @Type(() => LinksImportationIgnoreColumnLink)
  ignore?: LinksImportationIgnoreColumnLink;

  @SpeakeasyMetadata()
  @Expose({ name: "map" })
  @Type(() => LinksImportationMapCatalogColumnLink)
  map?: LinksImportationMapCatalogColumnLink;

  @SpeakeasyMetadata()
  @Expose({ name: "reattend" })
  @Type(() => LinksImportationReattendColumnLink)
  reattend?: LinksImportationReattendColumnLink;

  @SpeakeasyMetadata()
  @Expose({ name: "unmap" })
  @Type(() => LinksImportationUnmapCatalogColumnLink)
  unmap?: LinksImportationUnmapCatalogColumnLink;
}
