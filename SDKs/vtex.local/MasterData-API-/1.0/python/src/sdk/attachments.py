"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class Attachments:
    r"""The `attachments` API allows you to upload and download files.
    
    In case of images, the `content-type` header is filled with` image/jpg`.
    """
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def retrieveattachment(self, request: operations.RetrieveattachmentRequest) -> operations.RetrieveattachmentResponse:
        r"""Retrieve attachment
        Use this API to retrieve a file.
        
        Be sure to include the file extension in the name. Like in this example:
        ```
        /dataentities/CL/documents/123/file/attachments/image.png
        ```
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.RetrieveattachmentRequest, base_url, '/api/dataentities/{acronym}/documents/{id}/{field}/attachments/{file-name}', request)
        
        
        client = self._security_client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.RetrieveattachmentResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def saveattachment(self, request: operations.SaveattachmentRequest) -> operations.SaveattachmentResponse:
        r"""Save attachment
        This API allows you to save a file in a field of type `File`.
        
        
        When using in javascript, you must add the header `content-type` with value `multipart/form-data;`
        
        
        You can upload more than one file. Just add a new field in the `form-data` with type `File`.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.SaveattachmentRequest, base_url, '/api/dataentities/{acronym}/documents/{id}/{field}/attachments', request)
        
        headers = {}
        req_content_type, data, form = utils.serialize_request_body(request, "request_body", 'multipart')
        if req_content_type not in ('multipart/form-data', 'multipart/mixed'):
            headers['content-type'] = req_content_type
        
        client = self._security_client
        
        http_res = client.request('POST', url, data=data, files=form, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.SaveattachmentResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    