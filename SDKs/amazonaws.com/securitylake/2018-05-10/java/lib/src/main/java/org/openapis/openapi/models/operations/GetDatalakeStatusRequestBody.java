/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetDatalakeStatusRequestBody {
    /**
     * The Amazon Web Services account ID for which a static snapshot of the current Amazon Web Services Region, including enabled accounts and log sources, is retrieved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountSet")
    public String[] accountSet;

    public GetDatalakeStatusRequestBody withAccountSet(String[] accountSet) {
        this.accountSet = accountSet;
        return this;
    }
    
    /**
     * The maximum limit of accounts for which the static snapshot of the current Region, including enabled accounts and log sources, is retrieved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxAccountResults")
    public Long maxAccountResults;

    public GetDatalakeStatusRequestBody withMaxAccountResults(Long maxAccountResults) {
        this.maxAccountResults = maxAccountResults;
        return this;
    }
    
    /**
     * &lt;p&gt;Lists if there are more results available. The value of nextToken is a unique pagination token for each page. Repeat the call using the returned token to retrieve the next page. Keep all other arguments unchanged. &lt;/p&gt; &lt;p&gt;Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextToken")
    public String nextToken;

    public GetDatalakeStatusRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    public GetDatalakeStatusRequestBody(){}
}
