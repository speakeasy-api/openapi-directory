"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SslCertificate = exports.SslCertificateTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var sslcertificatemanagedsslcertificate_1 = require("./sslcertificatemanagedsslcertificate");
var sslcertificateselfmanagedsslcertificate_1 = require("./sslcertificateselfmanagedsslcertificate");
var class_transformer_1 = require("class-transformer");
/**
 * (Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or "MANAGED". If not specified, the certificate is self-managed and the fields certificate and private_key are used.
 */
var SslCertificateTypeEnum;
(function (SslCertificateTypeEnum) {
    SslCertificateTypeEnum["Managed"] = "MANAGED";
    SslCertificateTypeEnum["SelfManaged"] = "SELF_MANAGED";
    SslCertificateTypeEnum["TypeUnspecified"] = "TYPE_UNSPECIFIED";
})(SslCertificateTypeEnum = exports.SslCertificateTypeEnum || (exports.SslCertificateTypeEnum = {}));
/**
 * Represents an SSL Certificate resource. Google Compute Engine has two SSL Certificate resources: * [Global](/compute/docs/reference/rest/alpha/sslCertificates) * [Regional](/compute/docs/reference/rest/alpha/regionSslCertificates) The sslCertificates are used by: - external HTTPS load balancers - SSL proxy load balancers The regionSslCertificates are used by internal HTTPS load balancers. Optionally, certificate file contents that you upload can contain a set of up to five PEM-encoded certificates. The API call creates an object (sslCertificate) that holds this data. You can use SSL keys and certificates to secure connections to a load balancer. For more information, read Creating and using SSL certificates, SSL certificates quotas and limits, and Troubleshooting SSL certificates.
 */
var SslCertificate = /** @class */ (function (_super) {
    __extends(SslCertificate, _super);
    function SslCertificate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificate" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "certificate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expireTime" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "expireTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "managed" }),
        (0, class_transformer_1.Type)(function () { return sslcertificatemanagedsslcertificate_1.SslCertificateManagedSslCertificate; }),
        __metadata("design:type", sslcertificatemanagedsslcertificate_1.SslCertificateManagedSslCertificate)
    ], SslCertificate.prototype, "managed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "privateKey" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "privateKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "region" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "region", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLinkWithId" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "selfLinkWithId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfManaged" }),
        (0, class_transformer_1.Type)(function () { return sslcertificateselfmanagedsslcertificate_1.SslCertificateSelfManagedSslCertificate; }),
        __metadata("design:type", sslcertificateselfmanagedsslcertificate_1.SslCertificateSelfManagedSslCertificate)
    ], SslCertificate.prototype, "selfManaged", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subjectAlternativeNames" }),
        __metadata("design:type", Array)
    ], SslCertificate.prototype, "subjectAlternativeNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], SslCertificate.prototype, "type", void 0);
    return SslCertificate;
}(utils_1.SpeakeasyBase));
exports.SslCertificate = SslCertificate;
