// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AdminDisableProviderForUserXAmzTargetEnum
type AdminDisableProviderForUserXAmzTargetEnum string

const (
	AdminDisableProviderForUserXAmzTargetEnumAwsCognitoIdentityProviderServiceAdminDisableProviderForUser AdminDisableProviderForUserXAmzTargetEnum = "AWSCognitoIdentityProviderService.AdminDisableProviderForUser"
)

func (e *AdminDisableProviderForUserXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSCognitoIdentityProviderService.AdminDisableProviderForUser":
		*e = AdminDisableProviderForUserXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AdminDisableProviderForUserXAmzTargetEnum: %s", s)
	}
}

type AdminDisableProviderForUserRequest struct {
	AdminDisableProviderForUserRequest shared.AdminDisableProviderForUserRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                      *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                     *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                           *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                      *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                  *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                         AdminDisableProviderForUserXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AdminDisableProviderForUserResponse struct {
	// Success
	AdminDisableProviderForUserResponse map[string]interface{}
	// AliasExistsException
	AliasExistsException interface{}
	ContentType          string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UserNotFoundException
	UserNotFoundException interface{}
}
