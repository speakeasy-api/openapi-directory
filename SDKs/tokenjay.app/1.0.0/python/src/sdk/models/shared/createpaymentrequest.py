"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreatePaymentRequest:
    
    nano_erg: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nanoErg') }})  
    receiver_address: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiverAddress') }})  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    sender_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('senderAddress'), 'exclude': lambda f: f is None }})  
    token_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokenId'), 'exclude': lambda f: f is None }})  
    token_raw_amount: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokenRawAmount'), 'exclude': lambda f: f is None }})  
    