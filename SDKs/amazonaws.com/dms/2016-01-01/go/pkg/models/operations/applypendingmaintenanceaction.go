// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ApplyPendingMaintenanceActionXAmzTargetEnum
type ApplyPendingMaintenanceActionXAmzTargetEnum string

const (
	ApplyPendingMaintenanceActionXAmzTargetEnumAmazonDmSv20160101ApplyPendingMaintenanceAction ApplyPendingMaintenanceActionXAmzTargetEnum = "AmazonDMSv20160101.ApplyPendingMaintenanceAction"
)

func (e *ApplyPendingMaintenanceActionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonDMSv20160101.ApplyPendingMaintenanceAction":
		*e = ApplyPendingMaintenanceActionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplyPendingMaintenanceActionXAmzTargetEnum: %s", s)
	}
}

type ApplyPendingMaintenanceActionHeaders struct {
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ApplyPendingMaintenanceActionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ApplyPendingMaintenanceActionRequest struct {
	Headers ApplyPendingMaintenanceActionHeaders
	Request shared.ApplyPendingMaintenanceActionMessage `request:"mediaType=application/json"`
}

type ApplyPendingMaintenanceActionResponse struct {
	// Success
	ApplyPendingMaintenanceActionResponse *shared.ApplyPendingMaintenanceActionResponse
	ContentType                           string
	// ResourceNotFoundFault
	ResourceNotFoundFault interface{}
	StatusCode            int
	RawResponse           *http.Response
}
