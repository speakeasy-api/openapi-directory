/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateQueryServerList = ["https://autopilot.twilio.com"] as const;

export class CreateQuerySecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateQueryCreateQueryRequest extends SpeakeasyBase {
  /**
   * The [ISO language-country](https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html) string that specifies the language used for the new query. For example: `en-US`.
   */
  @SpeakeasyMetadata({ data: "form, name=Language" })
  language: string;

  /**
   * The SID or unique name of the [Model Build](https://www.twilio.com/docs/autopilot/api/model-build) to be queried.
   */
  @SpeakeasyMetadata({ data: "form, name=ModelBuild" })
  modelBuild?: string;

  /**
   * The end-user's natural language input. It can be up to 2048 characters long.
   */
  @SpeakeasyMetadata({ data: "form, name=Query" })
  query: string;

  /**
   * The list of tasks to limit the new query to. Tasks are expressed as a comma-separated list of task `unique_name` values. For example, `task-unique_name-1, task-unique_name-2`. Listing specific tasks is useful to constrain the paths that a user can take.
   */
  @SpeakeasyMetadata({ data: "form, name=Tasks" })
  tasks?: string;
}

export class CreateQueryRequest extends SpeakeasyBase {
  /**
   * The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the new resource.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=AssistantSid",
  })
  assistantSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateQueryCreateQueryRequest;
}

export class CreateQueryResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  autopilotV1AssistantQuery?: shared.AutopilotV1AssistantQuery;
}
