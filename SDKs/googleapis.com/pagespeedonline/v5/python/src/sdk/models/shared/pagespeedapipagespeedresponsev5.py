"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lighthouseresultv5 as shared_lighthouseresultv5
from ..shared import pagespeedapiloadingexperiencev5 as shared_pagespeedapiloadingexperiencev5
from ..shared import pagespeedversion as shared_pagespeedversion
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PagespeedAPIPagespeedResponseV5:
    r"""The Pagespeed API response object."""
    
    analysis_utc_timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analysisUTCTimestamp'), 'exclude': lambda f: f is None }})
    r"""The UTC timestamp of this analysis."""  
    captcha_result: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('captchaResult'), 'exclude': lambda f: f is None }})
    r"""The captcha verify result"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Canonicalized and final URL for the document, after following page redirects (if any)."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Kind of result."""  
    lighthouse_result: Optional[shared_lighthouseresultv5.LighthouseResultV5] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lighthouseResult'), 'exclude': lambda f: f is None }})
    r"""The Lighthouse result object."""  
    loading_experience: Optional[shared_pagespeedapiloadingexperiencev5.PagespeedAPILoadingExperienceV5] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('loadingExperience'), 'exclude': lambda f: f is None }})
    r"""The CrUX loading experience object that contains CrUX data breakdowns."""  
    origin_loading_experience: Optional[shared_pagespeedapiloadingexperiencev5.PagespeedAPILoadingExperienceV5] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originLoadingExperience'), 'exclude': lambda f: f is None }})
    r"""The CrUX loading experience object that contains CrUX data breakdowns."""  
    version: Optional[shared_pagespeedversion.PagespeedVersion] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""The Pagespeed Version object."""  
    