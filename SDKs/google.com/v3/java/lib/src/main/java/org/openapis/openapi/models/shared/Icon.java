/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Icon - Information about a partner's icon.
 */
public class Icon {
    /**
     * Output only. The icon's disapproval reason(s). Only applies to icons with `REJECTED` state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disapprovalReasons")
    public IconDisapprovalReasonsEnum[] disapprovalReasons;

    public Icon withDisapprovalReasons(IconDisapprovalReasonsEnum[] disapprovalReasons) {
        this.disapprovalReasons = disapprovalReasons;
        return this;
    }
    
    /**
     * Output only. The approved icon's Google-hosted URI. Only applies to icons with `APPROVED` state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iconUri")
    public String iconUri;

    public Icon withIconUri(String iconUri) {
        this.iconUri = iconUri;
        return this;
    }
    
    /**
     * Required. Input only. The icon contents, which must be in PNG format, or convertible to PNG.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageData")
    public String imageData;

    public Icon withImageData(String imageData) {
        this.imageData = imageData;
        return this;
    }
    
    /**
     * Required. Output only. The resource name for the icon in the format `accounts/{account_id}/icons/{icon_id}`. Google generates the `icon_id` during the `create` operation. Use the `icon_id` to associate the icon with a brand using the [accounts.brands](/hotels/hotel-prices/api-reference/rest/v3/accounts.brands#resource:-brand) API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Icon withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Optional. Value for tracking the icon. It could be the primary key to your icon in your system, or the icon's filename. Google does not use this value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public Icon withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * Output only. The icon's current state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public IconStateEnum state;

    public Icon withState(IconStateEnum state) {
        this.state = state;
        return this;
    }
    
    public Icon(){}
}
