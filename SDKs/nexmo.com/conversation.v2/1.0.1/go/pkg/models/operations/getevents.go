// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetEventsRequest struct {
	// The ID of the conversation
	ConversationID string `pathParam:"style=simple,explode=false,name=conversation_id"`
	// The cursor to start returning results from.
	//
	// You are not expected to provide this manually, but to follow the url provided in `_links.next.href` in the response which contains a `cursor` value
	//
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The ID to end returning events at
	EndID *string `queryParam:"style=form,explode=true,name=end_id"`
	// The type of event to search for. Does not currently support custom events
	EventType *string `queryParam:"style=form,explode=true,name=event_type"`
	// Show the most (`desc`) / least (`asc`) recently created entries first
	Order *shared.OrderEnum `queryParam:"style=form,explode=true,name=order"`
	// The number of results returned per page.   The default value is `10`. The maximum value is `100`.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// The ID to start returning events at
	StartID *string `queryParam:"style=form,explode=true,name=start_id"`
}

type GetEvents200ApplicationJSONEmbeddedData struct {
	// List of events matching the provided filter
	Events []interface{} `json:"events,omitempty"`
}

type GetEvents200ApplicationJSONEmbedded struct {
	Data *GetEvents200ApplicationJSONEmbeddedData `json:"data,omitempty"`
}

type GetEvents200ApplicationJSONLinksFirst struct {
	Href *string `json:"href,omitempty"`
}

type GetEvents200ApplicationJSONLinksNext struct {
	Href *string `json:"href,omitempty"`
}

type GetEvents200ApplicationJSONLinksPrev struct {
	Href *string `json:"href,omitempty"`
}

type GetEvents200ApplicationJSONLinksSelf struct {
	Href *string `json:"href,omitempty"`
}

type GetEvents200ApplicationJSONLinks struct {
	First *GetEvents200ApplicationJSONLinksFirst `json:"first,omitempty"`
	Next  *GetEvents200ApplicationJSONLinksNext  `json:"next,omitempty"`
	Prev  *GetEvents200ApplicationJSONLinksPrev  `json:"prev,omitempty"`
	Self  *GetEvents200ApplicationJSONLinksSelf  `json:"self,omitempty"`
}

// GetEvents200ApplicationJSON - OK
type GetEvents200ApplicationJSON struct {
	Embedded *GetEvents200ApplicationJSONEmbedded `json:"_embedded,omitempty"`
	Links    *GetEvents200ApplicationJSONLinks    `json:"_links,omitempty"`
	// The number of results returned on this page.
	PageSize *int64 `json:"page_size,omitempty"`
}

type GetEventsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	GetEvents200ApplicationJSONObject *GetEvents200ApplicationJSON
}
