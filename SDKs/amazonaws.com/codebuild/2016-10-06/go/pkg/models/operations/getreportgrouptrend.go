// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetReportGroupTrendXAmzTargetEnum
type GetReportGroupTrendXAmzTargetEnum string

const (
	GetReportGroupTrendXAmzTargetEnumCodeBuild20161006GetReportGroupTrend GetReportGroupTrendXAmzTargetEnum = "CodeBuild_20161006.GetReportGroupTrend"
)

func (e GetReportGroupTrendXAmzTargetEnum) ToPointer() *GetReportGroupTrendXAmzTargetEnum {
	return &e
}

func (e *GetReportGroupTrendXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeBuild_20161006.GetReportGroupTrend":
		*e = GetReportGroupTrendXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetReportGroupTrendXAmzTargetEnum: %v", v)
	}
}

type GetReportGroupTrendRequest struct {
	GetReportGroupTrendInput shared.GetReportGroupTrendInput   `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               GetReportGroupTrendXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetReportGroupTrendResponse struct {
	ContentType string
	// Success
	GetReportGroupTrendOutput *shared.GetReportGroupTrendOutput
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
