/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Number identifying transport mode; values returned via RouteTypes API
 */
export enum StopsStopsForRouteRouteTypeEnum {
  Zero = "0",
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
}

export class StopsStopsForRouteRequest extends SpeakeasyBase {
  /**
   * Your developer id
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=devid" })
  devid?: string;

  /**
   * An optional direction; values returned by Directions API. When this is set, stop sequence information is returned in the response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction_id",
  })
  directionId?: number;

  /**
   * Filter geopaths by date (ISO 8601 UTC format) (default = current date)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=geopath_utc;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  geopathUtc?: Date;

  /**
   * Indicates if geopath data will be returned (default = false)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_geopath",
  })
  includeGeopath?: boolean;

  /**
   * Identifier of route; values returned by Routes API - v3/routes
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=route_id",
  })
  routeId: number;

  /**
   * Number identifying transport mode; values returned via RouteTypes API
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=route_type",
  })
  routeType: StopsStopsForRouteRouteTypeEnum;

  /**
   * Authentication signature for request
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=signature",
  })
  signature?: string;

  /**
   * Indicates if stop disruption information will be returned (default = false)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=stop_disruptions",
  })
  stopDisruptions?: boolean;

  /**
   * Please ignore
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token?: string;
}

export class StopsStopsForRouteResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid Request
   */
  @SpeakeasyMetadata()
  v3ErrorResponse?: shared.V3ErrorResponse;

  /**
   * All stops on the specified route.
   */
  @SpeakeasyMetadata()
  v3StopsOnRouteResponse?: shared.V3StopsOnRouteResponse;
}
