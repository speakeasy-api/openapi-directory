// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopInstanceXAmzTargetEnum
type StopInstanceXAmzTargetEnum string

const (
	StopInstanceXAmzTargetEnumLightsail20161128StopInstance StopInstanceXAmzTargetEnum = "Lightsail_20161128.StopInstance"
)

func (e *StopInstanceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Lightsail_20161128.StopInstance":
		*e = StopInstanceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StopInstanceXAmzTargetEnum: %s", s)
	}
}

type StopInstanceHeaders struct {
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StopInstanceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopInstanceRequest struct {
	Headers StopInstanceHeaders
	Request shared.StopInstanceRequest `request:"mediaType=application/json"`
}

type StopInstanceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccountSetupInProgressException
	AccountSetupInProgressException interface{}
	ContentType                     string
	// InvalidInputException
	InvalidInputException interface{}
	// NotFoundException
	NotFoundException interface{}
	// OperationFailureException
	OperationFailureException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceException
	ServiceException interface{}
	// Success
	StopInstanceResult *shared.StopInstanceResult
	// UnauthenticatedException
	UnauthenticatedException interface{}
}
