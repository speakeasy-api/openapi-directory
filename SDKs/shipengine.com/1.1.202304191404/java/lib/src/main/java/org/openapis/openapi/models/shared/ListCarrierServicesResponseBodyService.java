/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ListCarrierServicesResponseBodyService - A service offered by the carrier
 */
public class ListCarrierServicesResponseBodyService {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_code")
    public String carrierCode;

    public ListCarrierServicesResponseBodyService withCarrierCode(String carrierCode) {
        this.carrierCode = carrierCode;
        return this;
    }
    
    /**
     * A string that uniquely identifies the carrier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_id")
    public String carrierId;

    public ListCarrierServicesResponseBodyService withCarrierId(String carrierId) {
        this.carrierId = carrierId;
        return this;
    }
    
    /**
     * Supports domestic shipping
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domestic")
    public Boolean domestic;

    public ListCarrierServicesResponseBodyService withDomestic(Boolean domestic) {
        this.domestic = domestic;
        return this;
    }
    
    /**
     * Supports international shipping.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("international")
    public Boolean international;

    public ListCarrierServicesResponseBodyService withInternational(Boolean international) {
        this.international = international;
        return this;
    }
    
    /**
     * Carrier supports multiple packages per shipment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_multi_package_supported")
    public Boolean isMultiPackageSupported;

    public ListCarrierServicesResponseBodyService withIsMultiPackageSupported(Boolean isMultiPackageSupported) {
        this.isMultiPackageSupported = isMultiPackageSupported;
        return this;
    }
    
    /**
     * User friendly service name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ListCarrierServicesResponseBodyService withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * service code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service_code")
    public String serviceCode;

    public ListCarrierServicesResponseBodyService withServiceCode(String serviceCode) {
        this.serviceCode = serviceCode;
        return this;
    }
    
    public ListCarrierServicesResponseBodyService(){}
}
