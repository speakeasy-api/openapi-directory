/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlarmStateEnum } from "./alarmstateenum";
import { ComparisonOperatorEnum } from "./comparisonoperatorenum";
import { ContactProtocolEnum } from "./contactprotocolenum";
import { MetricNameEnum } from "./metricnameenum";
import { TreatMissingDataEnum } from "./treatmissingdataenum";
import { Expose } from "class-transformer";

export class PutAlarmRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "alarmName" })
  alarmName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "comparisonOperator" })
  comparisonOperator: ComparisonOperatorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "contactProtocols" })
  contactProtocols?: ContactProtocolEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "datapointsToAlarm" })
  datapointsToAlarm?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "evaluationPeriods" })
  evaluationPeriods: number;

  @SpeakeasyMetadata()
  @Expose({ name: "metricName" })
  metricName: MetricNameEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "monitoredResourceName" })
  monitoredResourceName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notificationEnabled" })
  notificationEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "notificationTriggers" })
  notificationTriggers?: AlarmStateEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "threshold" })
  threshold: number;

  @SpeakeasyMetadata()
  @Expose({ name: "treatMissingData" })
  treatMissingData?: TreatMissingDataEnum;
}
