// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ActionActionEnum - Action to enable targets:
// * null - no action required
// * trial - start a trial
// * plan - select a plan to subscribe
// * subscribe - add target to subscribed plan
type ActionActionEnum string

const (
	ActionActionEnumNull      ActionActionEnum = "null"
	ActionActionEnumTrial     ActionActionEnum = "trial"
	ActionActionEnumPlan      ActionActionEnum = "plan"
	ActionActionEnumSubscribe ActionActionEnum = "subscribe"
)

func (e *ActionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "null":
		fallthrough
	case "trial":
		fallthrough
	case "plan":
		fallthrough
	case "subscribe":
		*e = ActionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionActionEnum: %s", s)
	}
}

// Action - Required action to enable targets
type Action struct {
	// Action to enable targets:
	// * null - no action required
	// * trial - start a trial
	// * plan - select a plan to subscribe
	// * subscribe - add target to subscribed plan
	//
	Action *ActionActionEnum `json:"action,omitempty"`
}
