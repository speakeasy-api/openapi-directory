"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import auditlogitemmodel as shared_auditlogitemmodel
from datetime import datetime
from enum import Enum
from typing import Optional

class GetOrganizationAuditlogsAuditLogTypeEnum(str, Enum):
    r"""Filter Audit logs by Audit log type."""
    PRODUCT_CREATED = 'productCreated'
    PRODUCT_CHANGED = 'productChanged'
    PRODUCT_OWNERSHIP_TRANSFERRED = 'productOwnershipTransferred'
    PRODUCT_DELETED = 'productDeleted'
    PRODUCTS_REORDERED = 'productsReordered'
    TEAM_MEMBER_INVITED = 'teamMemberInvited'
    TEAM_MEMBER_INVITATION_REVOKED = 'teamMemberInvitationRevoked'
    TEAM_MEMBER_JOINED = 'teamMemberJoined'
    TEAM_MEMBER_PERMISSION_GROUP_CHANGED = 'teamMemberPermissionGroupChanged'
    TEAM_MEMBER_REMOVED = 'teamMemberRemoved'
    TEAM_MEMBER_LEFT = 'teamMemberLeft'
    TEAM_MEMBER_INVITATION_CHANGED = 'teamMemberInvitationChanged'
    TEAM_MEMBER_INVITATION_RESENT = 'teamMemberInvitationResent'
    TEAM_MEMBER_INVITATION_REJECTED = 'teamMemberInvitationRejected'
    CONFIG_CREATED = 'configCreated'
    CONFIG_CHANGED = 'configChanged'
    CONFIG_DELETED = 'configDeleted'
    CONFIGS_REORDERED = 'configsReordered'
    ENVIRONMENT_CREATED = 'environmentCreated'
    ENVIRONMENT_CHANGED = 'environmentChanged'
    ENVIRONMENT_DELETED = 'environmentDeleted'
    ENVIRONMENTS_REORDERED = 'environmentsReordered'
    SETTING_CREATED = 'settingCreated'
    SETTING_CHANGED = 'settingChanged'
    SETTING_DELETED = 'settingDeleted'
    SETTINGS_REORDERED = 'settingsReordered'
    SETTING_VALUE_CHANGED = 'settingValueChanged'
    WEB_HOOK_CREATED = 'webHookCreated'
    WEB_HOOK_CHANGED = 'webHookChanged'
    WEB_HOOK_DELETED = 'webHookDeleted'
    SUBSCRIPTION_CHANGED = 'subscriptionChanged'
    PERMISSION_GROUP_CREATED = 'permissionGroupCreated'
    PERMISSION_GROUP_CHANGED = 'permissionGroupChanged'
    PERMISSION_GROUP_DELETED = 'permissionGroupDeleted'
    PERMISSION_GROUP_DEFAULT = 'permissionGroupDefault'
    API_KEY_ADDED = 'apiKeyAdded'
    API_KEY_REMOVED = 'apiKeyRemoved'
    INTEGRATION_ADDED = 'integrationAdded'
    INTEGRATION_CHANGED = 'integrationChanged'
    INTEGRATION_REMOVED = 'integrationRemoved'
    API_KEY_CONNECTED = 'apiKeyConnected'
    INTEGRATION_LINK_ADDED = 'integrationLinkAdded'
    INTEGRATION_LINK_REMOVED = 'integrationLinkRemoved'
    ORGANIZATION_ADDED = 'organizationAdded'
    ORGANIZATION_REMOVED = 'organizationRemoved'
    ORGANIZATION_CHANGED = 'organizationChanged'
    ORGANIZATION_SUBSCRIPTION_TYPE_CHANGED = 'organizationSubscriptionTypeChanged'
    ORGANIZATION_ADMIN_CHANGED = 'organizationAdminChanged'
    ORGANIZATION_ADMIN_LEFT = 'organizationAdminLeft'
    ORGANIZATION_ADMIN_DISABLED2_FA = 'organizationAdminDisabled2FA'
    TAG_ADDED = 'tagAdded'
    TAG_CHANGED = 'tagChanged'
    TAG_REMOVED = 'tagRemoved'
    SETTING_TAG_ADDED = 'settingTagAdded'
    SETTING_TAG_REMOVED = 'settingTagRemoved'
    PUBLIC_API_ACCESS_TOKEN_ADDED = 'publicApiAccessTokenAdded'
    PUBLIC_API_ACCESS_TOKEN_REMOVED = 'publicApiAccessTokenRemoved'
    DOMAIN_ADDED = 'domainAdded'
    DOMAIN_VERIFIED = 'domainVerified'
    DOMAIN_REMOVED = 'domainRemoved'
    DOMAIN_SAML_CONFIGURED = 'domainSamlConfigured'
    DOMAIN_SAML_DELETED = 'domainSamlDeleted'
    AUTO_PROVISIONING_CONFIGURATION_CHANGED = 'autoProvisioningConfigurationChanged'
    ORGANIZATION_MEMBER_JOINED = 'organizationMemberJoined'
    ORGANIZATION_MEMBER_PRODUCT_JOIN_REQUESTED = 'organizationMemberProductJoinRequested'
    ORGANIZATION_MEMBER_PRODUCT_JOIN_REQUEST_REJECTED = 'organizationMemberProductJoinRequestRejected'
    ORGANIZATION_MEMBER_PRODUCT_JOIN_REQUEST_APPROVED = 'organizationMemberProductJoinRequestApproved'
    CODE_REFERENCES_UPLOADED = 'codeReferencesUploaded'
    CODE_REFERENCE_DELETED = 'codeReferenceDeleted'
    CODE_REFERENCE_STALE_BRANCH_DELETED = 'codeReferenceStaleBranchDeleted'
    SEGMENT_CREATED = 'segmentCreated'
    SEGMENT_CHANGED = 'segmentChanged'
    SEGMENT_DELETED = 'segmentDeleted'
    WEBHOOK_SIGNING_KEY_DELETED = 'webhookSigningKeyDeleted'
    WEBHOOK_SIGNING_KEY_CREATED = 'webhookSigningKeyCreated'


@dataclasses.dataclass
class GetOrganizationAuditlogsRequest:
    
    organization_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationId', 'style': 'simple', 'explode': False }})
    r"""The identifier of the Organization."""  
    audit_log_type: Optional[GetOrganizationAuditlogsAuditLogTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'auditLogType', 'style': 'form', 'explode': True }})
    r"""Filter Audit logs by Audit log type."""  
    config_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'configId', 'style': 'form', 'explode': True }})
    r"""The identifier of the Config."""  
    environment_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'environmentId', 'style': 'form', 'explode': True }})
    r"""The identifier of the Environment."""  
    from_utc_date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fromUtcDateTime', 'style': 'form', 'explode': True }})
    r"""Filter Audit logs by starting UTC date."""  
    product_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'productId', 'style': 'form', 'explode': True }})
    r"""The identifier of the Product."""  
    to_utc_date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'toUtcDateTime', 'style': 'form', 'explode': True }})
    r"""Filter Audit logs by ending UTC date."""  
    

@dataclasses.dataclass
class GetOrganizationAuditlogsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    audit_log_item_models: Optional[list[shared_auditlogitemmodel.AuditLogItemModel]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    