// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ScheduleBySeasonFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ScheduleBySeasonFormatEnum string

const (
	ScheduleBySeasonFormatEnumXML  ScheduleBySeasonFormatEnum = "XML"
	ScheduleBySeasonFormatEnumJSON ScheduleBySeasonFormatEnum = "JSON"
)

func (e *ScheduleBySeasonFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = ScheduleBySeasonFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScheduleBySeasonFormatEnum: %s", s)
	}
}

type ScheduleBySeasonRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ScheduleBySeasonFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Year of the season.
	// <br>Examples: <code>2016</code>, <code>2017</code>.
	Season string `pathParam:"style=simple,explode=false,name=season"`
}

type ScheduleBySeasonResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	Tournaments []shared.Tournament
}
