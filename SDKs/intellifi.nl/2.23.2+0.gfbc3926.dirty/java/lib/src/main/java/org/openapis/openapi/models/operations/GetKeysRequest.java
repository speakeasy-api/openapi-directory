/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetKeysRequest {
    /**
     * Limits on `time_created`, Marks the start of a range, optionally use `before` to set the end. Result output excludes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=after")
    public OffsetDateTime after;
    public GetKeysRequest withAfter(OffsetDateTime after) {
        this.after = after;
        return this;
    }
    
    /**
     * Limits directly on `id`. Marks the start of a range, optionally use `before_id` to set the end. Result output excludes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=after_id")
    public String afterId;
    public GetKeysRequest withAfterId(String afterId) {
        this.afterId = afterId;
        return this;
    }
    
    /**
     * Limits on `time_created`. Marks the end of a range, optionally use `after` to set the start. Result output excludes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before")
    public String before;
    public GetKeysRequest withBefore(String before) {
        this.before = before;
        return this;
    }
    
    /**
     * Limits directly on `id`. Marks the end of a range, optionally use `after_id` to set the start. Result output excludes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before_id")
    public String beforeId;
    public GetKeysRequest withBeforeId(String beforeId) {
        this.beforeId = beforeId;
        return this;
    }
    
    /**
     * Limits on `time_created`. Marks the start of a range, optionally use `until` to set the end. Result output includes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=from")
    public String from;
    public GetKeysRequest withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * Limits on `id`. Marks the start of a range, optionally use `until_id` to set the end. Result output includes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=from_id")
    public String fromId;
    public GetKeysRequest withFromId(String fromId) {
        this.fromId = fromId;
        return this;
    }
    
    /**
     * Unique identifier
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id")
    public String id;
    public GetKeysRequest withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Removes `url` fields from output and shows `_id` instead of `_url` in references.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id_only")
    public Boolean idOnly;
    public GetKeysRequest withIdOnly(Boolean idOnly) {
        this.idOnly = idOnly;
        return this;
    }
    
    /**
     * Filter on read only status.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_read_only")
    public Boolean isReadOnly;
    public GetKeysRequest withIsReadOnly(Boolean isReadOnly) {
        this.isReadOnly = isReadOnly;
        return this;
    }
    
    /**
     * Filter on the label.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=label")
    public String label;
    public GetKeysRequest withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Sets the maximum number of returned resources. You may increase this number to large values, keep in mind that query times could become large. We advise you to use the pagination feature whenever you can.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public GetKeysRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Expand a reference into the actual resource (lookup). You may add multiple fields by giving a comma separated value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=populate")
    public String populate;
    public GetKeysRequest withPopulate(String populate) {
        this.populate = populate;
        return this;
    }
    
    /**
     * Removes response envelope with information about query, only sends back a JSON array with the applicable resources.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=results_only")
    public Boolean resultsOnly;
    public GetKeysRequest withResultsOnly(Boolean resultsOnly) {
        this.resultsOnly = resultsOnly;
        return this;
    }
    
    /**
     * Filter on the secret token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=secret")
    public String secret;
    public GetKeysRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * Select which properties should be returned. You may add multiple fields by giving a comma separated value. Select can also be used together with populate: Specify the resource first, then a period(.) followed by the field.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=select")
    public String select;
    public GetKeysRequest withSelect(String select) {
        this.select = select;
        return this;
    }
    
    /**
     * Allows you to sort on on or more fields in the resource. You may append a minus sign (`-`) to request reverse order (new to old).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public GetKeysRequest withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Filter on the time the resource was created.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=time_created")
    public String timeCreated;
    public GetKeysRequest withTimeCreated(String timeCreated) {
        this.timeCreated = timeCreated;
        return this;
    }
    
    /**
     * Filter on the time the resource was last updated
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=time_updated")
    public String timeUpdated;
    public GetKeysRequest withTimeUpdated(String timeUpdated) {
        this.timeUpdated = timeUpdated;
        return this;
    }
    
    /**
     * Overrides the default query timeout (in seconds). A value of 0 means unlimited. IMPORTANT: using high timeouts in production code is strongly discouraged as it may lead to stability issues.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=timeout_s")
    public Double timeoutS;
    public GetKeysRequest withTimeoutS(Double timeoutS) {
        this.timeoutS = timeoutS;
        return this;
    }
    
    /**
     * Limits on `time_created`. Marks the end of a range, optionally use `from` to set the start. Result output includes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=until")
    public String until;
    public GetKeysRequest withUntil(String until) {
        this.until = until;
        return this;
    }
    
    /**
     * Limits on `id`. Marks the end of a range, optionally use `from_id` to set the start. Result output includes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=until_id")
    public String untilId;
    public GetKeysRequest withUntilId(String untilId) {
        this.untilId = untilId;
        return this;
    }
    
}
