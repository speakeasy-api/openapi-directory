/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateMessageServerList = ["https://chat.twilio.com"] as const;

export class CreateMessageSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateMessageCreateMessageRequest extends SpeakeasyBase {
  /**
   * A valid JSON string that contains application-specific data.
   */
  @SpeakeasyMetadata({ data: "form, name=Attributes" })
  attributes?: string;

  /**
   * The message to send to the channel. Can also be an empty string or `null`, which sets the value as an empty string. You can send structured data in the body by serializing it as a string.
   */
  @SpeakeasyMetadata({ data: "form, name=Body" })
  body: string;

  /**
   * The [identity](https://www.twilio.com/docs/api/chat/guides/identity) of the new message's author. The default value is `system`.
   */
  @SpeakeasyMetadata({ data: "form, name=From" })
  from?: string;
}

export class CreateMessageRequest extends SpeakeasyBase {
  /**
   * The unique ID of the [Channel](https://www.twilio.com/docs/api/chat/rest/channels) the new resource belongs to. Can be the Channel resource's `sid` or `unique_name`.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ChannelSid",
  })
  channelSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateMessageCreateMessageRequest;

  /**
   * The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) to create the resource under.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;
}

export class CreateMessageResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  chatV1ServiceChannelMessage?: shared.ChatV1ServiceChannelMessage;
}
