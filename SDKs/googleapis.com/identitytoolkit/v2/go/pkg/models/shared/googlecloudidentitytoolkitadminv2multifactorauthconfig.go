// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum string

const (
	GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnumProviderUnspecified GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum = "PROVIDER_UNSPECIFIED"
	GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnumPhoneSms            GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum = "PHONE_SMS"
)

func (e GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum) ToPointer() *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum {
	return &e
}

func (e *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROVIDER_UNSPECIFIED":
		fallthrough
	case "PHONE_SMS":
		*e = GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum: %v", v)
	}
}

// GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum - Whether MultiFactor Authentication has been enabled for this project.
type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum string

const (
	GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnumStateUnspecified GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum = "STATE_UNSPECIFIED"
	GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnumDisabled         GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum = "DISABLED"
	GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnumEnabled          GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum = "ENABLED"
	GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnumMandatory        GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum = "MANDATORY"
)

func (e GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum) ToPointer() *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum {
	return &e
}

func (e *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "ENABLED":
		fallthrough
	case "MANDATORY":
		*e = GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum: %v", v)
	}
}

// GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig - Options related to MultiFactor Authentication for the project.
type GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfig struct {
	// A list of usable second factors for this project.
	EnabledProviders []GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigEnabledProvidersEnum `json:"enabledProviders,omitempty"`
	// A list of usable second factors for this project along with their configurations. This field does not support phone based MFA, for that use the 'enabled_providers' field.
	ProviderConfigs []GoogleCloudIdentitytoolkitAdminV2ProviderConfig `json:"providerConfigs,omitempty"`
	// Whether MultiFactor Authentication has been enabled for this project.
	State *GoogleCloudIdentitytoolkitAdminV2MultiFactorAuthConfigStateEnum `json:"state,omitempty"`
}
