// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DeclinedTransactionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.
type DeclinedTransactionCurrencyEnum string

const (
	DeclinedTransactionCurrencyEnumCad DeclinedTransactionCurrencyEnum = "CAD"
	DeclinedTransactionCurrencyEnumChf DeclinedTransactionCurrencyEnum = "CHF"
	DeclinedTransactionCurrencyEnumEur DeclinedTransactionCurrencyEnum = "EUR"
	DeclinedTransactionCurrencyEnumGbp DeclinedTransactionCurrencyEnum = "GBP"
	DeclinedTransactionCurrencyEnumJpy DeclinedTransactionCurrencyEnum = "JPY"
	DeclinedTransactionCurrencyEnumUsd DeclinedTransactionCurrencyEnum = "USD"
)

func (e *DeclinedTransactionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = DeclinedTransactionCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionCurrencyEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum - Why the ACH transfer was declined.
type DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumAchRouteCanceled             DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "ach_route_canceled"
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumAchRouteDisabled             DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "ach_route_disabled"
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumBreachesLimit                DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "breaches_limit"
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumCreditEntryRefusedByReceiver DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "credit_entry_refused_by_receiver"
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumDuplicateReturn              DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "duplicate_return"
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumEntityNotActive              DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "entity_not_active"
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumTransactionNotAllowed        DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "transaction_not_allowed"
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumGroupLocked                  DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "group_locked"
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumInsufficientFunds            DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "insufficient_funds"
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumNoAchRoute                   DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "no_ach_route"
	DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumOriginatorRequest            DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "originator_request"
)

func (e *DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ach_route_canceled":
		fallthrough
	case "ach_route_disabled":
		fallthrough
	case "breaches_limit":
		fallthrough
	case "credit_entry_refused_by_receiver":
		fallthrough
	case "duplicate_return":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "transaction_not_allowed":
		fallthrough
	case "group_locked":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "no_ach_route":
		fallthrough
	case "originator_request":
		*e = DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceACHDecline - A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.
type DeclinedTransactionDeclinedTransactionSourceACHDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                             int64  `json:"amount"`
	OriginatorCompanyDescriptiveDate   string `json:"originator_company_descriptive_date"`
	OriginatorCompanyDiscretionaryData string `json:"originator_company_discretionary_data"`
	OriginatorCompanyID                string `json:"originator_company_id"`
	OriginatorCompanyName              string `json:"originator_company_name"`
	// Why the ACH transfer was declined.
	Reason           DeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum `json:"reason"`
	ReceiverIDNumber string                                                           `json:"receiver_id_number"`
	ReceiverName     string                                                           `json:"receiver_name"`
	TraceNumber      string                                                           `json:"trace_number"`
}

// DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
type DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumCad DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "CAD"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumChf DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "CHF"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumEur DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "EUR"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumGbp DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "GBP"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumJpy DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "JPY"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumUsd DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "USD"
)

func (e *DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum - The payment network used to process this card authorization
type DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnumVisa DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum = "visa"
)

func (e *DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "visa":
		*e = DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum - For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.
type DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumMailPhoneOrder                                          DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "mail_phone_order"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumRecurring                                               DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "recurring"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumInstallment                                             DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "installment"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumUnknownMailPhoneOrder                                   DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "unknown_mail_phone_order"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumSecureElectronicCommerce                                DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "secure_electronic_commerce"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumNonAuthenticatedSecurityTransactionAt3dsCapableMerchant DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "non_authenticated_security_transaction_at_3ds_capable_merchant"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumNonAuthenticatedSecurityTransaction                     DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "non_authenticated_security_transaction"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumNonSecureTransaction                                    DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "non_secure_transaction"
)

func (e *DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "mail_phone_order":
		fallthrough
	case "recurring":
		fallthrough
	case "installment":
		fallthrough
	case "unknown_mail_phone_order":
		fallthrough
	case "secure_electronic_commerce":
		fallthrough
	case "non_authenticated_security_transaction_at_3ds_capable_merchant":
		fallthrough
	case "non_authenticated_security_transaction":
		fallthrough
	case "non_secure_transaction":
		*e = DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum - The method used to enter the cardholder's primary account number and card expiration date
type DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumManual                     DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "manual"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumMagneticStripeNoCvv        DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "magnetic_stripe_no_cvv"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumOpticalCode                DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "optical_code"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumIntegratedCircuitCard      DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "integrated_circuit_card"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumContactless                DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "contactless"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumCredentialOnFile           DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "credential_on_file"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumMagneticStripe             DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "magnetic_stripe"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumContactlessMagneticStripe  DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "contactless_magnetic_stripe"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumIntegratedCircuitCardNoCvv DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "integrated_circuit_card_no_cvv"
)

func (e *DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "manual":
		fallthrough
	case "magnetic_stripe_no_cvv":
		fallthrough
	case "optical_code":
		fallthrough
	case "integrated_circuit_card":
		fallthrough
	case "contactless":
		fallthrough
	case "credential_on_file":
		fallthrough
	case "magnetic_stripe":
		fallthrough
	case "contactless_magnetic_stripe":
		fallthrough
	case "integrated_circuit_card_no_cvv":
		*e = DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisa - Fields specific to the `visa` network
type DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisa struct {
	// For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.
	ElectronicCommerceIndicator DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum `json:"electronic_commerce_indicator"`
	// The method used to enter the cardholder's primary account number and card expiration date
	PointOfServiceEntryMode DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum `json:"point_of_service_entry_mode"`
}

// DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails - Fields specific to the `network`
type DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails struct {
	// Fields specific to the `visa` network
	Visa DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisa `json:"visa"`
}

// DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum - Why the transaction was declined.
type DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumCardNotActive               DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "card_not_active"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumEntityNotActive             DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "entity_not_active"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumGroupLocked                 DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "group_locked"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumInsufficientFunds           DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "insufficient_funds"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumCvv2Mismatch                DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "cvv2_mismatch"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumTransactionNotAllowed       DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "transaction_not_allowed"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumBreachesLimit               DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "breaches_limit"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumWebhookDeclined             DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "webhook_declined"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumWebhookTimedOut             DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "webhook_timed_out"
	DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumDeclinedByStandInProcessing DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "declined_by_stand_in_processing"
)

func (e *DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "card_not_active":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "group_locked":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "cvv2_mismatch":
		fallthrough
	case "transaction_not_allowed":
		fallthrough
	case "breaches_limit":
		fallthrough
	case "webhook_declined":
		fallthrough
	case "webhook_timed_out":
		fallthrough
	case "declined_by_stand_in_processing":
		*e = DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceCardDecline - A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.
type DeclinedTransactionDeclinedTransactionSourceCardDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
	Currency DeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum `json:"currency"`
	// If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.
	DigitalWalletTokenID string `json:"digital_wallet_token_id"`
	// The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.
	MerchantAcceptorID string `json:"merchant_acceptor_id"`
	// The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.
	MerchantCategoryCode string `json:"merchant_category_code"`
	// The city the merchant resides in.
	MerchantCity string `json:"merchant_city"`
	// The country the merchant resides in.
	MerchantCountry string `json:"merchant_country"`
	// The merchant descriptor of the merchant the card is transacting with.
	MerchantDescriptor string `json:"merchant_descriptor"`
	// The state the merchant resides in.
	MerchantState string `json:"merchant_state"`
	// The payment network used to process this card authorization
	Network DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum `json:"network"`
	// Fields specific to the `network`
	NetworkDetails DeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails `json:"network_details"`
	// The identifier of the Real-Time Decision sent to approve or decline this transaction.
	RealTimeDecisionID string `json:"real_time_decision_id"`
	// Why the transaction was declined.
	Reason DeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum `json:"reason"`
}

// DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
type DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumCad DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "CAD"
	DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumChf DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "CHF"
	DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumEur DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "EUR"
	DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumGbp DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "GBP"
	DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumJpy DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "JPY"
	DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumUsd DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "USD"
)

func (e *DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDecline - A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.
type DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
	Currency             DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum `json:"currency"`
	MerchantAcceptorID   string                                                                        `json:"merchant_acceptor_id"`
	MerchantCategoryCode string                                                                        `json:"merchant_category_code"`
	MerchantCity         string                                                                        `json:"merchant_city"`
	MerchantCountry      string                                                                        `json:"merchant_country"`
	MerchantDescriptor   string                                                                        `json:"merchant_descriptor"`
	MerchantState        string                                                                        `json:"merchant_state"`
}

// DeclinedTransactionDeclinedTransactionSourceCategoryEnum - The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
type DeclinedTransactionDeclinedTransactionSourceCategoryEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceCategoryEnumAchDecline                             DeclinedTransactionDeclinedTransactionSourceCategoryEnum = "ach_decline"
	DeclinedTransactionDeclinedTransactionSourceCategoryEnumCardDecline                            DeclinedTransactionDeclinedTransactionSourceCategoryEnum = "card_decline"
	DeclinedTransactionDeclinedTransactionSourceCategoryEnumCheckDecline                           DeclinedTransactionDeclinedTransactionSourceCategoryEnum = "check_decline"
	DeclinedTransactionDeclinedTransactionSourceCategoryEnumInboundRealTimePaymentsTransferDecline DeclinedTransactionDeclinedTransactionSourceCategoryEnum = "inbound_real_time_payments_transfer_decline"
	DeclinedTransactionDeclinedTransactionSourceCategoryEnumInternationalAchDecline                DeclinedTransactionDeclinedTransactionSourceCategoryEnum = "international_ach_decline"
	DeclinedTransactionDeclinedTransactionSourceCategoryEnumCardRouteDecline                       DeclinedTransactionDeclinedTransactionSourceCategoryEnum = "card_route_decline"
	DeclinedTransactionDeclinedTransactionSourceCategoryEnumOther                                  DeclinedTransactionDeclinedTransactionSourceCategoryEnum = "other"
)

func (e *DeclinedTransactionDeclinedTransactionSourceCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ach_decline":
		fallthrough
	case "card_decline":
		fallthrough
	case "check_decline":
		fallthrough
	case "inbound_real_time_payments_transfer_decline":
		fallthrough
	case "international_ach_decline":
		fallthrough
	case "card_route_decline":
		fallthrough
	case "other":
		*e = DeclinedTransactionDeclinedTransactionSourceCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceCategoryEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum - Why the check was declined.
type DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumAchRouteCanceled      DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "ach_route_canceled"
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumAchRouteDisabled      DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "ach_route_disabled"
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumBreachesLimit         DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "breaches_limit"
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumEntityNotActive       DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "entity_not_active"
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumGroupLocked           DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "group_locked"
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumInsufficientFunds     DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "insufficient_funds"
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumUnableToLocateAccount DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "unable_to_locate_account"
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumUnableToProcess       DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "unable_to_process"
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumReferToImage          DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "refer_to_image"
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumStopPaymentRequested  DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "stop_payment_requested"
	DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumReturned              DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "returned"
)

func (e *DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ach_route_canceled":
		fallthrough
	case "ach_route_disabled":
		fallthrough
	case "breaches_limit":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "group_locked":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "unable_to_locate_account":
		fallthrough
	case "unable_to_process":
		fallthrough
	case "refer_to_image":
		fallthrough
	case "stop_payment_requested":
		fallthrough
	case "returned":
		*e = DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceCheckDecline - A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.
type DeclinedTransactionDeclinedTransactionSourceCheckDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount        int64  `json:"amount"`
	AuxiliaryOnUs string `json:"auxiliary_on_us"`
	// Why the check was declined.
	Reason DeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum `json:"reason"`
}

// DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be "USD" for a Real Time Payments transfer.
type DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumCad DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "CAD"
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumChf DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "CHF"
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumEur DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "EUR"
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumGbp DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "GBP"
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumJpy DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "JPY"
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumUsd DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "USD"
)

func (e *DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum - Why the transfer was declined.
type DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum string

const (
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumAccountNumberCanceled      DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "account_number_canceled"
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumAccountNumberDisabled      DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "account_number_disabled"
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumGroupLocked                DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "group_locked"
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumEntityNotActive            DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "entity_not_active"
	DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumRealTimePaymentsNotEnabled DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "real_time_payments_not_enabled"
)

func (e *DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "account_number_canceled":
		fallthrough
	case "account_number_disabled":
		fallthrough
	case "group_locked":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "real_time_payments_not_enabled":
		*e = DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum: %s", s)
	}
}

// DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDecline - A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.
type DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The name the sender of the transfer specified as the recipient of the transfer.
	CreditorName string `json:"creditor_name"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be "USD" for a Real Time Payments transfer.
	Currency DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum `json:"currency"`
	// The account number of the account that sent the transfer.
	DebtorAccountNumber string `json:"debtor_account_number"`
	// The name provided by the sender of the transfer.
	DebtorName string `json:"debtor_name"`
	// The routing number of the account that sent the transfer.
	DebtorRoutingNumber string `json:"debtor_routing_number"`
	// Why the transfer was declined.
	Reason DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum `json:"reason"`
	// Additional information included with the transfer.
	RemittanceInformation string `json:"remittance_information"`
	// The Real Time Payments network identification of the declined transfer.
	TransactionIdentification string `json:"transaction_identification"`
}

// DeclinedTransactionDeclinedTransactionSourceInternationalACHDecline - A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.
type DeclinedTransactionDeclinedTransactionSourceInternationalACHDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                                                 int64  `json:"amount"`
	DestinationCountryCode                                 string `json:"destination_country_code"`
	DestinationCurrencyCode                                string `json:"destination_currency_code"`
	ForeignExchangeIndicator                               string `json:"foreign_exchange_indicator"`
	ForeignExchangeReference                               string `json:"foreign_exchange_reference"`
	ForeignExchangeReferenceIndicator                      string `json:"foreign_exchange_reference_indicator"`
	ForeignPaymentAmount                                   int64  `json:"foreign_payment_amount"`
	ForeignTraceNumber                                     string `json:"foreign_trace_number"`
	InternationalTransactionTypeCode                       string `json:"international_transaction_type_code"`
	OriginatingCurrencyCode                                string `json:"originating_currency_code"`
	OriginatingDepositoryFinancialInstitutionBranchCountry string `json:"originating_depository_financial_institution_branch_country"`
	OriginatingDepositoryFinancialInstitutionID            string `json:"originating_depository_financial_institution_id"`
	OriginatingDepositoryFinancialInstitutionIDQualifier   string `json:"originating_depository_financial_institution_id_qualifier"`
	OriginatingDepositoryFinancialInstitutionName          string `json:"originating_depository_financial_institution_name"`
	OriginatorCity                                         string `json:"originator_city"`
	OriginatorCompanyEntryDescription                      string `json:"originator_company_entry_description"`
	OriginatorCountry                                      string `json:"originator_country"`
	OriginatorIdentification                               string `json:"originator_identification"`
	OriginatorName                                         string `json:"originator_name"`
	OriginatorPostalCode                                   string `json:"originator_postal_code"`
	OriginatorStateOrProvince                              string `json:"originator_state_or_province"`
	OriginatorStreetAddress                                string `json:"originator_street_address"`
	PaymentRelatedInformation                              string `json:"payment_related_information"`
	PaymentRelatedInformation2                             string `json:"payment_related_information2"`
	ReceiverCity                                           string `json:"receiver_city"`
	ReceiverCountry                                        string `json:"receiver_country"`
	ReceiverIdentificationNumber                           string `json:"receiver_identification_number"`
	ReceiverPostalCode                                     string `json:"receiver_postal_code"`
	ReceiverStateOrProvince                                string `json:"receiver_state_or_province"`
	ReceiverStreetAddress                                  string `json:"receiver_street_address"`
	ReceivingCompanyOrIndividualName                       string `json:"receiving_company_or_individual_name"`
	ReceivingDepositoryFinancialInstitutionCountry         string `json:"receiving_depository_financial_institution_country"`
	ReceivingDepositoryFinancialInstitutionID              string `json:"receiving_depository_financial_institution_id"`
	ReceivingDepositoryFinancialInstitutionIDQualifier     string `json:"receiving_depository_financial_institution_id_qualifier"`
	ReceivingDepositoryFinancialInstitutionName            string `json:"receiving_depository_financial_institution_name"`
	TraceNumber                                            string `json:"trace_number"`
}

// DeclinedTransactionDeclinedTransactionSource - This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
type DeclinedTransactionDeclinedTransactionSource struct {
	// A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.
	AchDecline DeclinedTransactionDeclinedTransactionSourceACHDecline `json:"ach_decline"`
	// A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.
	CardDecline DeclinedTransactionDeclinedTransactionSourceCardDecline `json:"card_decline"`
	// A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.
	CardRouteDecline DeclinedTransactionDeclinedTransactionSourceDeprecatedCardDecline `json:"card_route_decline"`
	// The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
	Category DeclinedTransactionDeclinedTransactionSourceCategoryEnum `json:"category"`
	// A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.
	CheckDecline DeclinedTransactionDeclinedTransactionSourceCheckDecline `json:"check_decline"`
	// A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.
	InboundRealTimePaymentsTransferDecline DeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDecline `json:"inbound_real_time_payments_transfer_decline"`
	// A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.
	InternationalAchDecline DeclinedTransactionDeclinedTransactionSourceInternationalACHDecline `json:"international_ach_decline"`
}

// DeclinedTransactionTypeEnum - A constant representing the object's type. For this resource it will always be `declined_transaction`.
type DeclinedTransactionTypeEnum string

const (
	DeclinedTransactionTypeEnumDeclinedTransaction DeclinedTransactionTypeEnum = "declined_transaction"
)

func (e *DeclinedTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "declined_transaction":
		*e = DeclinedTransactionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeclinedTransactionTypeEnum: %s", s)
	}
}

// DeclinedTransaction - Declined Transactions are refused additions and removals of money from your bank account. For example, Declined Transactions are caused when your Account has an insufficient balance or your Limits are triggered.
type DeclinedTransaction struct {
	// The identifier for the Account the Declined Transaction belongs to.
	AccountID string `json:"account_id"`
	// The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.
	CreatedAt time.Time `json:"created_at"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.
	Currency DeclinedTransactionCurrencyEnum `json:"currency"`
	// This is the description the vendor provides.
	Description string `json:"description"`
	// The Declined Transaction identifier.
	ID string `json:"id"`
	// The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.
	RouteID string `json:"route_id"`
	// The type of the route this Declined Transaction came through.
	RouteType string `json:"route_type"`
	// This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
	Source DeclinedTransactionDeclinedTransactionSource `json:"source"`
	// A constant representing the object's type. For this resource it will always be `declined_transaction`.
	Type DeclinedTransactionTypeEnum `json:"type"`
}
