// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type ProductOrderConciergeSecurity struct {
	UserKey shared.SchemeUserKey `security:"scheme,type=apiKey,subtype=header"`
}

// ProductOrderConciergeRequestBody - Parameters for the concierge order
type ProductOrderConciergeRequestBody struct {
	// Name of the company for which a document should be ordered. (Not required if subjectId is given)
	CompanyName *string `form:"name=companyName"`
	// Contact E-Mail, will be contacted if concierge costs are exceeding the threshhold configured on your plan
	ContactEmail *string `form:"name=contactEmail"`
	// Contact phone, will be contacted if concierge costs are exceeding the threshhold configured on your plan
	ContactPhone *string `form:"name=contactPhone"`
	// If the concierge cost should require additional confirmation if a threshold is reached (configured on your plan)
	CostConfirmation *bool `form:"name=costConfirmation"`
	// Two letter ISO code of the country of the company
	Country *string `form:"name=country"`
	// If you want financial data of the company to be retrieved
	FinancialData *bool `form:"name=financialData"`
	// If you want historical data of the company to be retrieved
	HistoricInformation *bool `form:"name=historicInformation"`
	// Requirements on what document or information should be provided. Please be very precise
	InformationRequirements *string `form:"name=informationRequirements"`
	// If the companies residency should be investigated
	LocationInvestigation *bool `form:"name=locationInvestigation"`
	// Priority of order: standard/express are allowed
	Priority *string `form:"name=priority"`
	// If you want register data of the company to be retrieved
	RegisterData *bool `form:"name=registerData"`
	// Registration number of the company for which a document should be ordered. (Not required if subjectId is given)
	RegisterNumber *string `form:"name=registerNumber"`
	// Kompanyid of the company you want to place the order for
	SubjectID *string `form:"name=subjectId"`
}

type ProductOrderConciergeRequest struct {
	// Parameters for the concierge order
	Request  *ProductOrderConciergeRequestBody `request:"mediaType=application/x-www-form-urlencoded"`
	Security ProductOrderConciergeSecurity
}

// ProductOrderConciergeDefaultApplicationJSON - Detailed information about the error
type ProductOrderConciergeDefaultApplicationJSON struct {
	Code    int     `json:"code"`
	Fault   *string `json:"fault,omitempty"`
	Message string  `json:"message"`
	Tag     string  `json:"tag"`
}

// ProductOrderConcierge200ApplicationJSON - Product order details
type ProductOrderConcierge200ApplicationJSON struct {
	Identity     string     `json:"identity"`
	Option       string     `json:"option"`
	Ordered      types.Date `json:"ordered"`
	Owner        string     `json:"owner"`
	Price        float32    `json:"price"`
	Sku          string     `json:"sku"`
	Status       string     `json:"status"`
	SubjectID    string     `json:"subjectId"`
	SubjectValue string     `json:"subjectValue"`
}

type ProductOrderConciergeResponse struct {
	ContentType string
	// Product order details
	ProductOrderConcierge200ApplicationJSONObject *ProductOrderConcierge200ApplicationJSON
	// Detailed information about the error
	ProductOrderConciergeDefaultApplicationJSONObject *ProductOrderConciergeDefaultApplicationJSON
	StatusCode                                        int
	RawResponse                                       *http.Response
}
