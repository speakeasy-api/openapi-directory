"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var utils = __importStar(require("../internal/utils"));
var appsfindandmodifyapps_1 = require("./appsfindandmodifyapps");
var customgatewayprocesspaymentsandrefunds_1 = require("./customgatewayprocesspaymentsandrefunds");
var developeraccountsfindandmodifydeveloperaccounts_1 = require("./developeraccountsfindandmodifydeveloperaccounts");
var developersfindandmodifydevelopers_1 = require("./developersfindandmodifydevelopers");
var eventsfindevents_1 = require("./eventsfindevents");
var filesuploadfiles_1 = require("./filesuploadfiles");
var marketsthismarketplace_1 = require("./marketsthismarketplace");
var shared = __importStar(require("./models/shared"));
var ownershipfindownership_1 = require("./ownershipfindownership");
var permissionaddandremovepermissions_1 = require("./permissionaddandremovepermissions");
var reviewsfindandmodifyreviews_1 = require("./reviewsfindandmodifyreviews");
var statsfindmarketplacestatistics_1 = require("./statsfindmarketplacestatistics");
var stripegatewayprocesspaymentsandrefunds_1 = require("./stripegatewayprocesspaymentsandrefunds");
var transactionsfindpaymentsandrefunds_1 = require("./transactionsfindpaymentsandrefunds");
var useraccountsfindandmodifyuseraccounts_1 = require("./useraccountsfindandmodifyuseraccounts");
var usersfindandmodifyusers_1 = require("./usersfindandmodifyusers");
var axios_1 = __importDefault(require("axios"));
/**
 * Contains the list of servers available to the SDK
 */
exports.ServerList = ["https://market.openchannel.io/v2"];
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props === null || props === void 0 ? void 0 : props.serverURL) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient =
            (_b = props === null || props === void 0 ? void 0 : props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        if (props === null || props === void 0 ? void 0 : props.security) {
            var security = props.security;
            if (!(props.security instanceof utils.SpeakeasyBase))
                security = new shared.Security(props.security);
            this._securityClient = utils.createSecurityClient(this._defaultClient, security);
        }
        else {
            this._securityClient = this._defaultClient;
        }
        this.appsFindAndModifyApps = new appsfindandmodifyapps_1.AppsFindAndModifyApps(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.customGatewayProcessPaymentsAndRefunds =
            new customgatewayprocesspaymentsandrefunds_1.CustomGatewayProcessPaymentsAndRefunds(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.developerAccountsFindAndModifyDeveloperAccounts =
            new developeraccountsfindandmodifydeveloperaccounts_1.DeveloperAccountsFindAndModifyDeveloperAccounts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.developersFindAndModifyDevelopers =
            new developersfindandmodifydevelopers_1.DevelopersFindAndModifyDevelopers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.eventsFindEvents = new eventsfindevents_1.EventsFindEvents(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.filesUploadFiles = new filesuploadfiles_1.FilesUploadFiles(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.marketsThisMarketplace = new marketsthismarketplace_1.MarketsThisMarketplace(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.ownershipFindOwnership = new ownershipfindownership_1.OwnershipFindOwnership(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.permissionAddAndRemovePermissions =
            new permissionaddandremovepermissions_1.PermissionAddAndRemovePermissions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.reviewsFindAndModifyReviews = new reviewsfindandmodifyreviews_1.ReviewsFindAndModifyReviews(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.statsFindMarketplaceStatistics = new statsfindmarketplacestatistics_1.StatsFindMarketplaceStatistics(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.stripeGatewayProcessPaymentsAndRefunds =
            new stripegatewayprocesspaymentsandrefunds_1.StripeGatewayProcessPaymentsAndRefunds(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.transactionsFindPaymentsAndRefunds =
            new transactionsfindpaymentsandrefunds_1.TransactionsFindPaymentsAndRefunds(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.userAccountsFindAndModifyUserAccounts =
            new useraccountsfindandmodifyuseraccounts_1.UserAccountsFindAndModifyUserAccounts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.usersFindAndModifyUsers = new usersfindandmodifyusers_1.UsersFindAndModifyUsers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
