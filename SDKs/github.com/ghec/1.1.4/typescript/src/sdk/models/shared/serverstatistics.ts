/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ServerStatisticsDormantUsers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dormancy_threshold" })
  dormancyThreshold?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "total_dormant_users" })
  totalDormantUsers?: number;
}

export class ServerStatisticsGheStatsComments extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "total_commit_comments" })
  totalCommitComments?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_gist_comments" })
  totalGistComments?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_issue_comments" })
  totalIssueComments?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_pull_request_comments" })
  totalPullRequestComments?: number;
}

export class ServerStatisticsGheStatsGists extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "private_gists" })
  privateGists?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "public_gists" })
  publicGists?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_gists" })
  totalGists?: number;
}

export class ServerStatisticsGheStatsHooks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "active_hooks" })
  activeHooks?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "inactive_hooks" })
  inactiveHooks?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_hooks" })
  totalHooks?: number;
}

export class ServerStatisticsGheStatsIssues extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "closed_issues" })
  closedIssues?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "open_issues" })
  openIssues?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_issues" })
  totalIssues?: number;
}

export class ServerStatisticsGheStatsMilestones extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "closed_milestones" })
  closedMilestones?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "open_milestones" })
  openMilestones?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_milestones" })
  totalMilestones?: number;
}

export class ServerStatisticsGheStatsOrgs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "disabled_orgs" })
  disabledOrgs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_orgs" })
  totalOrgs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_team_members" })
  totalTeamMembers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_teams" })
  totalTeams?: number;
}

export class ServerStatisticsGheStatsPages extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "total_pages" })
  totalPages?: number;
}

export class ServerStatisticsGheStatsPulls extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "mergeable_pulls" })
  mergeablePulls?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "merged_pulls" })
  mergedPulls?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_pulls" })
  totalPulls?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unmergeable_pulls" })
  unmergeablePulls?: number;
}

export class ServerStatisticsGheStatsRepos extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "fork_repos" })
  forkRepos?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "org_repos" })
  orgRepos?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "root_repos" })
  rootRepos?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_pushes" })
  totalPushes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_repos" })
  totalRepos?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_wikis" })
  totalWikis?: number;
}

export class ServerStatisticsGheStatsUsers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "admin_users" })
  adminUsers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "suspended_users" })
  suspendedUsers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total_users" })
  totalUsers?: number;
}

export class ServerStatisticsGheStats extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  @Type(() => ServerStatisticsGheStatsComments)
  comments?: ServerStatisticsGheStatsComments;

  @SpeakeasyMetadata()
  @Expose({ name: "gists" })
  @Type(() => ServerStatisticsGheStatsGists)
  gists?: ServerStatisticsGheStatsGists;

  @SpeakeasyMetadata()
  @Expose({ name: "hooks" })
  @Type(() => ServerStatisticsGheStatsHooks)
  hooks?: ServerStatisticsGheStatsHooks;

  @SpeakeasyMetadata()
  @Expose({ name: "issues" })
  @Type(() => ServerStatisticsGheStatsIssues)
  issues?: ServerStatisticsGheStatsIssues;

  @SpeakeasyMetadata()
  @Expose({ name: "milestones" })
  @Type(() => ServerStatisticsGheStatsMilestones)
  milestones?: ServerStatisticsGheStatsMilestones;

  @SpeakeasyMetadata()
  @Expose({ name: "orgs" })
  @Type(() => ServerStatisticsGheStatsOrgs)
  orgs?: ServerStatisticsGheStatsOrgs;

  @SpeakeasyMetadata()
  @Expose({ name: "pages" })
  @Type(() => ServerStatisticsGheStatsPages)
  pages?: ServerStatisticsGheStatsPages;

  @SpeakeasyMetadata()
  @Expose({ name: "pulls" })
  @Type(() => ServerStatisticsGheStatsPulls)
  pulls?: ServerStatisticsGheStatsPulls;

  @SpeakeasyMetadata()
  @Expose({ name: "repos" })
  @Type(() => ServerStatisticsGheStatsRepos)
  repos?: ServerStatisticsGheStatsRepos;

  @SpeakeasyMetadata()
  @Expose({ name: "users" })
  @Type(() => ServerStatisticsGheStatsUsers)
  users?: ServerStatisticsGheStatsUsers;
}

export class ServerStatisticsGithubConnect extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "features_enabled" })
  featuresEnabled?: string[];
}

export class ServerStatistics extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "collection_date" })
  collectionDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dormant_users" })
  @Type(() => ServerStatisticsDormantUsers)
  dormantUsers?: ServerStatisticsDormantUsers;

  @SpeakeasyMetadata()
  @Expose({ name: "ghe_stats" })
  @Type(() => ServerStatisticsGheStats)
  gheStats?: ServerStatisticsGheStats;

  @SpeakeasyMetadata()
  @Expose({ name: "ghes_version" })
  ghesVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "github_connect" })
  @Type(() => ServerStatisticsGithubConnect)
  githubConnect?: ServerStatisticsGithubConnect;

  @SpeakeasyMetadata()
  @Expose({ name: "host_name" })
  hostName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "schema_version" })
  schemaVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "server_id" })
  serverId?: string;
}
