// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LineItemStatusEnum string

const (
	LineItemStatusEnumPreparing  LineItemStatusEnum = "PREPARING"
	LineItemStatusEnumBuilding   LineItemStatusEnum = "BUILDING"
	LineItemStatusEnumShipped    LineItemStatusEnum = "SHIPPED"
	LineItemStatusEnumDelivered  LineItemStatusEnum = "DELIVERED"
	LineItemStatusEnumInstalling LineItemStatusEnum = "INSTALLING"
	LineItemStatusEnumInstalled  LineItemStatusEnum = "INSTALLED"
	LineItemStatusEnumError      LineItemStatusEnum = "ERROR"
	LineItemStatusEnumCancelled  LineItemStatusEnum = "CANCELLED"
	LineItemStatusEnumReplaced   LineItemStatusEnum = "REPLACED"
)

func (e *LineItemStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PREPARING":
		fallthrough
	case "BUILDING":
		fallthrough
	case "SHIPPED":
		fallthrough
	case "DELIVERED":
		fallthrough
	case "INSTALLING":
		fallthrough
	case "INSTALLED":
		fallthrough
	case "ERROR":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "REPLACED":
		*e = LineItemStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LineItemStatusEnum: %s", s)
	}
}
