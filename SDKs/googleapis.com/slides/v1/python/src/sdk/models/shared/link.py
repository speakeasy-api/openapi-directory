"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LinkRelativeLinkEnum(str, Enum):
    r"""If set, indicates this is a link to a slide in this presentation, addressed by its position."""
    RELATIVE_SLIDE_LINK_UNSPECIFIED = 'RELATIVE_SLIDE_LINK_UNSPECIFIED'
    NEXT_SLIDE = 'NEXT_SLIDE'
    PREVIOUS_SLIDE = 'PREVIOUS_SLIDE'
    FIRST_SLIDE = 'FIRST_SLIDE'
    LAST_SLIDE = 'LAST_SLIDE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Link:
    r"""A hypertext link."""
    
    page_object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageObjectId'), 'exclude': lambda f: f is None }})
    r"""If set, indicates this is a link to the specific page in this presentation with this ID. A page with this ID may not exist."""  
    relative_link: Optional[LinkRelativeLinkEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relativeLink'), 'exclude': lambda f: f is None }})
    r"""If set, indicates this is a link to a slide in this presentation, addressed by its position."""  
    slide_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slideIndex'), 'exclude': lambda f: f is None }})
    r"""If set, indicates this is a link to the slide at this zero-based index in the presentation. There may not be a slide at this index."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""If set, indicates this is a link to the external web page at this URL."""  
    