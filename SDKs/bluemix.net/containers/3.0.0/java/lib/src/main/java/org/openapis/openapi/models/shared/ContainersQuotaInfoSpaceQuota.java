/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ContainersQuotaInfoSpaceQuota {
    /**
     * The maximum number of public IP addresses that can be allocated to a space.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floating_ips_max")
    public String floatingIpsMax;

    public ContainersQuotaInfoSpaceQuota withFloatingIpsMax(String floatingIpsMax) {
        this.floatingIpsMax = floatingIpsMax;
        return this;
    }
    
    /**
     * The maximum amount of container memory that can be shared across all containers that are created in a space.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ram_max")
    public Integer ramMax;

    public ContainersQuotaInfoSpaceQuota withRamMax(Integer ramMax) {
        this.ramMax = ramMax;
        return this;
    }
    
    /**
     * The maximum number of private subnets that can be created in one space.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnets_max")
    public Integer subnetsMax;

    public ContainersQuotaInfoSpaceQuota withSubnetsMax(Integer subnetsMax) {
        this.subnetsMax = subnetsMax;
        return this;
    }
    
    public ContainersQuotaInfoSpaceQuota(){}
}
