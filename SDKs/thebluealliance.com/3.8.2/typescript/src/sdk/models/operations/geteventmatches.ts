/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetEventMatchesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-TBA-Auth-Key",
  })
  apiKey: string;
}

export class GetEventMatchesRequest extends SpeakeasyBase {
  /**
   * Value of the `ETag` header in the most recently cached response by the client.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=If-None-Match",
  })
  ifNoneMatch?: string;

  /**
   * TBA Event Key, eg `2016nytr`
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=event_key",
  })
  eventKey: string;
}

export class GetEventMatchesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * Successful response
   */
  @SpeakeasyMetadata({ elemType: shared.Match })
  matches?: shared.Match[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
