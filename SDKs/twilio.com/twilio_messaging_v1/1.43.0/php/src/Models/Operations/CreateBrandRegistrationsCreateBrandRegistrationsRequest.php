<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateBrandRegistrationsCreateBrandRegistrationsRequest
{
    /**
     * A2P Messaging Profile Bundle Sid.
     * 
     * @var string $a2PProfileBundleSid
     */
	#[SpeakeasyMetadata('form:name=A2PProfileBundleSid')]
    public string $a2PProfileBundleSid;
    
    /**
     * Type of brand being created. One of: "STANDARD", "SOLE_PROPRIETOR". SOLE_PROPRIETOR is for low volume, SOLE_PROPRIETOR use cases. STANDARD is for all other use cases.
     * 
     * @var ?string $brandType
     */
	#[SpeakeasyMetadata('form:name=BrandType')]
    public ?string $brandType = null;
    
    /**
     * Customer Profile Bundle Sid.
     * 
     * @var string $customerProfileBundleSid
     */
	#[SpeakeasyMetadata('form:name=CustomerProfileBundleSid')]
    public string $customerProfileBundleSid;
    
    /**
     * A boolean that specifies whether brand should be a mock or not. If true, brand will be registered as a mock brand. Defaults to false if no value is provided.
     * 
     * @var ?bool $mock
     */
	#[SpeakeasyMetadata('form:name=Mock')]
    public ?bool $mock = null;
    
    /**
     * A flag to disable automatic secondary vetting for brands which it would otherwise be done.
     * 
     * @var ?bool $skipAutomaticSecVet
     */
	#[SpeakeasyMetadata('form:name=SkipAutomaticSecVet')]
    public ?bool $skipAutomaticSecVet = null;
    
	public function __construct()
	{
		$this->a2PProfileBundleSid = "";
		$this->brandType = null;
		$this->customerProfileBundleSid = "";
		$this->mock = null;
		$this->skipAutomaticSecVet = null;
	}
}
