// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListUserPoolsXAmzTargetEnum
type ListUserPoolsXAmzTargetEnum string

const (
	ListUserPoolsXAmzTargetEnumAwsCognitoIdentityProviderServiceListUserPools ListUserPoolsXAmzTargetEnum = "AWSCognitoIdentityProviderService.ListUserPools"
)

func (e ListUserPoolsXAmzTargetEnum) ToPointer() *ListUserPoolsXAmzTargetEnum {
	return &e
}

func (e *ListUserPoolsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSCognitoIdentityProviderService.ListUserPools":
		*e = ListUserPoolsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListUserPoolsXAmzTargetEnum: %v", v)
	}
}

type ListUserPoolsRequest struct {
	ListUserPoolsRequest shared.ListUserPoolsRequest `request:"mediaType=application/json"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                     `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListUserPoolsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListUserPoolsResponse struct {
	ContentType string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// Success
	ListUserPoolsResponse *shared.ListUserPoolsResponse
	// NotAuthorizedException
	NotAuthorizedException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
