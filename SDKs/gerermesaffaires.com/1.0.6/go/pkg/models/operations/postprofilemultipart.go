// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostProfileMultipartSecurity struct {
	GmaAuth shared.SchemeGmaAuth `security:"scheme,type=oauth2"`
}

type PostProfileMultipartFormDataBirth struct {
	City    *string `json:"City,omitempty"`
	Country *string `json:"Country,omitempty"`
	Date    *string `json:"Date,omitempty"`
	ZipCode *string `json:"ZipCode,omitempty"`
}

type PostProfileMultipartFormDataIDFile struct {
	IDFile  string `multipartForm:"name=IDFile"`
	Content []byte `multipartForm:"content"`
}

type PostProfileMultipartFormDataSexEnum string

const (
	PostProfileMultipartFormDataSexEnumMale   PostProfileMultipartFormDataSexEnum = "male"
	PostProfileMultipartFormDataSexEnumFemale PostProfileMultipartFormDataSexEnum = "female"
)

func (e *PostProfileMultipartFormDataSexEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "male":
		fallthrough
	case "female":
		*e = PostProfileMultipartFormDataSexEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostProfileMultipartFormDataSexEnum: %s", s)
	}
}

// PostProfileMultipartFormData1 - Profile to add
type PostProfileMultipartFormData1 struct {
	Birth     PostProfileMultipartFormDataBirth   `multipartForm:"name=Birth,json"`
	BirthName string                              `multipartForm:"name=BirthName"`
	Email     string                              `multipartForm:"name=Email"`
	FirstName string                              `multipartForm:"name=FirstName"`
	IDFile    *PostProfileMultipartFormDataIDFile `multipartForm:"file"`
	Name      string                              `multipartForm:"name=Name"`
	Sex       PostProfileMultipartFormDataSexEnum `multipartForm:"name=Sex"`
}

type PostProfileMultipartRequest struct {
	// Profile to add
	Request  PostProfileMultipartFormData1 `request:"mediaType=multipart/form-data"`
	Security PostProfileMultipartSecurity
}

type PostProfileMultipartResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
