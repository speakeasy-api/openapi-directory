// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ChromemanagementCustomersReportsFindInstalledAppDevicesSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum - Type of the app.
type ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum string

const (
	ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnumAppTypeUnspecified ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum = "APP_TYPE_UNSPECIFIED"
	ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnumExtension          ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum = "EXTENSION"
	ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnumApp                ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum = "APP"
	ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnumTheme              ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum = "THEME"
	ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnumHostedApp          ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum = "HOSTED_APP"
	ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnumAndroidApp         ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum = "ANDROID_APP"
)

func (e ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum) ToPointer() *ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum {
	return &e
}

func (e *ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_TYPE_UNSPECIFIED":
		fallthrough
	case "EXTENSION":
		fallthrough
	case "APP":
		fallthrough
	case "THEME":
		fallthrough
	case "HOSTED_APP":
		fallthrough
	case "ANDROID_APP":
		*e = ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum: %v", v)
	}
}

type ChromemanagementCustomersReportsFindInstalledAppDevicesRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Unique identifier of the app. For Chrome apps and extensions, the 32-character id (e.g. ehoadneljpdggcbbknedodolkkjodefl). For Android apps, the package name (e.g. com.evernote).
	AppID *string `queryParam:"style=form,explode=true,name=appId"`
	// Type of the app.
	AppType *ChromemanagementCustomersReportsFindInstalledAppDevicesAppTypeEnum `queryParam:"style=form,explode=true,name=appType"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Required. Customer id or "my_customer" to use the customer associated to the account making the request.
	Customer string `pathParam:"style=simple,explode=false,name=customer"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Query string to filter results, AND-separated fields in EBNF syntax. Note: OR operations are not supported in this filter. Supported filter fields: * last_active_date
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Field used to order results. Supported order by fields: * machine * device_id
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// The ID of the organizational unit.
	OrgUnitID *string `queryParam:"style=form,explode=true,name=orgUnitId"`
	// Maximum number of results to return. Maximum and default are 100.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Token to specify the page of the request to be returned.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type ChromemanagementCustomersReportsFindInstalledAppDevicesResponse struct {
	ContentType string
	// Successful response
	GoogleChromeManagementV1FindInstalledAppDevicesResponse *shared.GoogleChromeManagementV1FindInstalledAppDevicesResponse
	StatusCode                                              int
	RawResponse                                             *http.Response
}
