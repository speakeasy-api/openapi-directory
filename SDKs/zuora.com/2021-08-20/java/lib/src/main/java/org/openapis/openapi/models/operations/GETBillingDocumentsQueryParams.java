/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.LocalDate;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETBillingDocumentsQueryParams {
    /**
     * The ID of the customer account that the billing documents are associated with. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=accountId")
    public String accountId;
    public GETBillingDocumentsQueryParams withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The date of the billing document. It represents the invoice date for invoices, credit memo date for credit memos, and debit memo date for debit memos.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=documentDate")
    public LocalDate documentDate;
    public GETBillingDocumentsQueryParams withDocumentDate(LocalDate documentDate) {
        this.documentDate = documentDate;
        return this;
    }
    
    /**
     * Number of rows returned per page.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Long pageSize;
    public GETBillingDocumentsQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
     * 
     * If you do not specify any sortable field, the response data is sorted by the `documentDate` field in descending order.
     * 
     * A sortable field uses the following form: 
     * 
     * *operator* *field_name*
     * 
     * You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
     * 
     * *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.  
     * 
     *   - The `-` operator indicates an ascending order.
     *   - The `+` operator indicates a descending order.
     * 
     * *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
     * 
     *   - documentDate
     *   - documentType
     *   
     * Examples:
     * - /billing-documents?accountId=4028905f5e4feb38015e50af9aa002d1
     *   &amp;sort=+documentDate,-documentType
     * - /billing-documents?accountId=4028905f5e4feb38015e50af9aa002d1
     *   &amp;status=Posted&amp;sort=+documentDate&amp;page=2&amp;pageSize=15
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public GETBillingDocumentsQueryParams withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * The status of the billing document.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=status")
    public GETBillingDocumentsStatusEnum status;
    public GETBillingDocumentsQueryParams withStatus(GETBillingDocumentsStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
