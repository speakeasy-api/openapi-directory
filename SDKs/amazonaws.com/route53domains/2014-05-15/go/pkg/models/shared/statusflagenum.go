// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StatusFlagEnum string

const (
	StatusFlagEnumPendingAcceptance          StatusFlagEnum = "PENDING_ACCEPTANCE"
	StatusFlagEnumPendingCustomerAction      StatusFlagEnum = "PENDING_CUSTOMER_ACTION"
	StatusFlagEnumPendingAuthorization       StatusFlagEnum = "PENDING_AUTHORIZATION"
	StatusFlagEnumPendingPaymentVerification StatusFlagEnum = "PENDING_PAYMENT_VERIFICATION"
	StatusFlagEnumPendingSupportCase         StatusFlagEnum = "PENDING_SUPPORT_CASE"
)

func (e StatusFlagEnum) ToPointer() *StatusFlagEnum {
	return &e
}

func (e *StatusFlagEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING_ACCEPTANCE":
		fallthrough
	case "PENDING_CUSTOMER_ACTION":
		fallthrough
	case "PENDING_AUTHORIZATION":
		fallthrough
	case "PENDING_PAYMENT_VERIFICATION":
		fallthrough
	case "PENDING_SUPPORT_CASE":
		*e = StatusFlagEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusFlagEnum: %v", v)
	}
}
