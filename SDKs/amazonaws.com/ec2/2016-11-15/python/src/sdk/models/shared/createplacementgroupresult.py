"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class CreatePlacementGroupResultPlacementGroupSpreadLevelEnum(str, Enum):
    r"""The spread level for the placement group. <i>Only</i> Outpost placement groups can be spread across hosts."""
    HOST = 'host'
    RACK = 'rack'

class CreatePlacementGroupResultPlacementGroupStateEnum(str, Enum):
    r"""The state of the placement group."""
    PENDING = 'pending'
    AVAILABLE = 'available'
    DELETING = 'deleting'
    DELETED = 'deleted'

class CreatePlacementGroupResultPlacementGroupStrategyEnum(str, Enum):
    r"""The placement strategy."""
    CLUSTER = 'cluster'
    SPREAD = 'spread'
    PARTITION = 'partition'


@dataclasses.dataclass
class CreatePlacementGroupResultPlacementGroupTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreatePlacementGroupResultPlacementGroup:
    r"""Information about the placement group."""
    
    group_arn: Optional[str] = dataclasses.field(default=None)  
    group_id: Optional[str] = dataclasses.field(default=None)  
    group_name: Optional[str] = dataclasses.field(default=None)  
    partition_count: Optional[int] = dataclasses.field(default=None)  
    spread_level: Optional[CreatePlacementGroupResultPlacementGroupSpreadLevelEnum] = dataclasses.field(default=None)  
    state: Optional[CreatePlacementGroupResultPlacementGroupStateEnum] = dataclasses.field(default=None)  
    strategy: Optional[CreatePlacementGroupResultPlacementGroupStrategyEnum] = dataclasses.field(default=None)  
    tags: Optional[list[CreatePlacementGroupResultPlacementGroupTags]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreatePlacementGroupResult:
    r"""Success"""
    
    placement_group: Optional[CreatePlacementGroupResultPlacementGroup] = dataclasses.field(default=None)  
    