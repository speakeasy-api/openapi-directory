"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import costestimationserviceresourcestate_enum as shared_costestimationserviceresourcestate_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ServiceResourceCost:
    r"""An object that contains information about the estimated monthly cost to analyze an Amazon Web Services resource. For more information, see <a href=\\"https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html\\">Estimate your Amazon DevOps Guru costs</a> and <a href=\\"http://aws.amazon.com/devops-guru/pricing/\\">Amazon DevOps Guru pricing</a>."""
    
    cost: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Cost'), 'exclude': lambda f: f is None }})  
    count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Count'), 'exclude': lambda f: f is None }})  
    state: Optional[shared_costestimationserviceresourcestate_enum.CostEstimationServiceResourceStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('State'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    unit_cost: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnitCost'), 'exclude': lambda f: f is None }})  
    