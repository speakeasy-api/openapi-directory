/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PeopleSuggestion } from "./peoplesuggestion";
import { Source } from "./source";
import { Expose, Type } from "class-transformer";

/**
 * One suggestion result.
 */
export class SuggestResult extends SpeakeasyBase {
  /**
   * This field contains information about the person being suggested.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "peopleSuggestion" })
  @Type(() => PeopleSuggestion)
  peopleSuggestion?: PeopleSuggestion;

  /**
   * This field does not contain anything as of now and is just used as an indicator that the suggest result was a phrase completion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "querySuggestion" })
  querySuggestion?: Record<string, any>;

  /**
   * Defines sources for the suggest/search APIs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => Source)
  source?: Source;

  /**
   * The suggested query that will be used for search, when the user clicks on the suggestion
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suggestedQuery" })
  suggestedQuery?: string;
}
