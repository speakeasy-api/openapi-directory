<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class MergePullRequestByFastForwardResponse
{
    /**
     * ConcurrentReferenceUpdateException
     * 
     * @var mixed $concurrentReferenceUpdateException
     */
	
    public mixed $concurrentReferenceUpdateException = null;
    
	
    public string $contentType;
    
    /**
     * EncryptionIntegrityChecksFailedException
     * 
     * @var mixed $encryptionIntegrityChecksFailedException
     */
	
    public mixed $encryptionIntegrityChecksFailedException = null;
    
    /**
     * EncryptionKeyAccessDeniedException
     * 
     * @var mixed $encryptionKeyAccessDeniedException
     */
	
    public mixed $encryptionKeyAccessDeniedException = null;
    
    /**
     * EncryptionKeyDisabledException
     * 
     * @var mixed $encryptionKeyDisabledException
     */
	
    public mixed $encryptionKeyDisabledException = null;
    
    /**
     * EncryptionKeyNotFoundException
     * 
     * @var mixed $encryptionKeyNotFoundException
     */
	
    public mixed $encryptionKeyNotFoundException = null;
    
    /**
     * EncryptionKeyUnavailableException
     * 
     * @var mixed $encryptionKeyUnavailableException
     */
	
    public mixed $encryptionKeyUnavailableException = null;
    
    /**
     * InvalidCommitIdException
     * 
     * @var mixed $invalidCommitIdException
     */
	
    public mixed $invalidCommitIdException = null;
    
    /**
     * InvalidPullRequestIdException
     * 
     * @var mixed $invalidPullRequestIdException
     */
	
    public mixed $invalidPullRequestIdException = null;
    
    /**
     * InvalidRepositoryNameException
     * 
     * @var mixed $invalidRepositoryNameException
     */
	
    public mixed $invalidRepositoryNameException = null;
    
    /**
     * ManualMergeRequiredException
     * 
     * @var mixed $manualMergeRequiredException
     */
	
    public mixed $manualMergeRequiredException = null;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MergePullRequestByFastForwardOutput $mergePullRequestByFastForwardOutput
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\MergePullRequestByFastForwardOutput $mergePullRequestByFastForwardOutput = null;
    
    /**
     * PullRequestAlreadyClosedException
     * 
     * @var mixed $pullRequestAlreadyClosedException
     */
	
    public mixed $pullRequestAlreadyClosedException = null;
    
    /**
     * PullRequestApprovalRulesNotSatisfiedException
     * 
     * @var mixed $pullRequestApprovalRulesNotSatisfiedException
     */
	
    public mixed $pullRequestApprovalRulesNotSatisfiedException = null;
    
    /**
     * PullRequestDoesNotExistException
     * 
     * @var mixed $pullRequestDoesNotExistException
     */
	
    public mixed $pullRequestDoesNotExistException = null;
    
    /**
     * PullRequestIdRequiredException
     * 
     * @var mixed $pullRequestIdRequiredException
     */
	
    public mixed $pullRequestIdRequiredException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
    /**
     * ReferenceDoesNotExistException
     * 
     * @var mixed $referenceDoesNotExistException
     */
	
    public mixed $referenceDoesNotExistException = null;
    
    /**
     * RepositoryDoesNotExistException
     * 
     * @var mixed $repositoryDoesNotExistException
     */
	
    public mixed $repositoryDoesNotExistException = null;
    
    /**
     * RepositoryNameRequiredException
     * 
     * @var mixed $repositoryNameRequiredException
     */
	
    public mixed $repositoryNameRequiredException = null;
    
    /**
     * RepositoryNotAssociatedWithPullRequestException
     * 
     * @var mixed $repositoryNotAssociatedWithPullRequestException
     */
	
    public mixed $repositoryNotAssociatedWithPullRequestException = null;
    
    /**
     * TipOfSourceReferenceIsDifferentException
     * 
     * @var mixed $tipOfSourceReferenceIsDifferentException
     */
	
    public mixed $tipOfSourceReferenceIsDifferentException = null;
    
	public function __construct()
	{
		$this->concurrentReferenceUpdateException = null;
		$this->contentType = "";
		$this->encryptionIntegrityChecksFailedException = null;
		$this->encryptionKeyAccessDeniedException = null;
		$this->encryptionKeyDisabledException = null;
		$this->encryptionKeyNotFoundException = null;
		$this->encryptionKeyUnavailableException = null;
		$this->invalidCommitIdException = null;
		$this->invalidPullRequestIdException = null;
		$this->invalidRepositoryNameException = null;
		$this->manualMergeRequiredException = null;
		$this->mergePullRequestByFastForwardOutput = null;
		$this->pullRequestAlreadyClosedException = null;
		$this->pullRequestApprovalRulesNotSatisfiedException = null;
		$this->pullRequestDoesNotExistException = null;
		$this->pullRequestIdRequiredException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
		$this->referenceDoesNotExistException = null;
		$this->repositoryDoesNotExistException = null;
		$this->repositoryNameRequiredException = null;
		$this->repositoryNotAssociatedWithPullRequestException = null;
		$this->tipOfSourceReferenceIsDifferentException = null;
	}
}
