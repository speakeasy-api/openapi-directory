// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContactResultTypesEnum string

const (
	ContactResultTypesEnumBilling   ContactResultTypesEnum = "billing"
	ContactResultTypesEnumCompany   ContactResultTypesEnum = "company"
	ContactResultTypesEnumExecutive ContactResultTypesEnum = "executive"
	ContactResultTypesEnumOnline    ContactResultTypesEnum = "online"
)

func (e *ContactResultTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "billing":
		fallthrough
	case "company":
		fallthrough
	case "executive":
		fallthrough
	case "online":
		*e = ContactResultTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactResultTypesEnum: %s", s)
	}
}

// ContactResult - Successful Response - Returns the new Contact
type ContactResult struct {
	// The date the record was created
	Created int64 `json:"created"`
	// Work email address of the group contact
	Email string `json:"email"`
	// Fax number of the group contact in E.164 format
	FaxNumber string `json:"fax_number"`
	// First name of the group contact
	FirstName *string `json:"first_name,omitempty"`
	// Unique identifier of the group in Noyo
	GroupID string `json:"group_id"`
	// Unique identifier of the record in Noyo
	ID string `json:"id"`
	// Last name of the group contact
	LastName *string `json:"last_name,omitempty"`
	// The date the record was last updated
	Modified int64 `json:"modified"`
	// Work phone number of the group contact in E.164 format
	PhoneNumber string `json:"phone_number"`
	// True if contact is the primary contact for the group
	PrimaryContact bool `json:"primary_contact"`
	// Job title of the group contact
	Title string `json:"title"`
	// List of contact types for the group contact
	Types []ContactResultTypesEnum `json:"types"`
	// Current version of the record
	Version string `json:"version"`
}
