/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Trigger } from "./trigger";
import { Expose, Type } from "class-transformer";

/**
 * The response message for the ListTriggers method.
 */
export class ListTriggersResponse extends SpeakeasyBase {
  /**
   * A page token that can be sent to ListTriggers to request the next page. If this is empty, then there are no more pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The requested triggers, up to the number specified in `page_size`.
   */
  @SpeakeasyMetadata({ elemType: Trigger })
  @Expose({ name: "triggers" })
  @Type(() => Trigger)
  triggers?: Trigger[];

  /**
   * Unreachable resources, if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unreachable" })
  unreachable?: string[];
}
