"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import minimumprotocolversion_enum as shared_minimumprotocolversion_enum
from ..shared import sslsupportmethod_enum as shared_sslsupportmethod_enum
from enum import Enum
from typing import Optional

class ViewerCertificateCertificateSourceEnum(str, Enum):
    r"""<note> <p>This field is deprecated. You can use one of the following: <code>[ACMCertificateArn</code>, <code>IAMCertificateId</code>, or <code>CloudFrontDefaultCertificate]</code>.</p> </note>"""
    CLOUDFRONT = 'cloudfront'
    IAM = 'iam'
    ACM = 'acm'


@dataclasses.dataclass
class ViewerCertificate:
    r"""<p>A complex type that specifies the following:</p> <ul> <li> <p>Which SSL/TLS certificate to use when viewers request objects using HTTPS</p> </li> <li> <p>Whether you want CloudFront to use dedicated IP addresses or SNI when you're using alternate domain names in your object names</p> </li> <li> <p>The minimum protocol version that you want CloudFront to use when communicating with viewers</p> </li> </ul> <p>For more information, see <a href=\\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html\\">Using an HTTPS Connection to Access Your Objects</a> in the <i>Amazon Amazon CloudFront Developer Guide</i>.</p>"""
    
    acm_certificate_arn: Optional[str] = dataclasses.field(default=None)  
    certificate: Optional[str] = dataclasses.field(default=None)  
    certificate_source: Optional[ViewerCertificateCertificateSourceEnum] = dataclasses.field(default=None)  
    cloud_front_default_certificate: Optional[bool] = dataclasses.field(default=None)  
    iam_certificate_id: Optional[str] = dataclasses.field(default=None)  
    minimum_protocol_version: Optional[shared_minimumprotocolversion_enum.MinimumProtocolVersionEnum] = dataclasses.field(default=None)  
    ssl_support_method: Optional[shared_sslsupportmethod_enum.SSLSupportMethodEnum] = dataclasses.field(default=None)  
    