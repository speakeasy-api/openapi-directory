"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enterprisecrmfrontendseventbusprotoeventparameters as shared_enterprisecrmfrontendseventbusprotoeventparameters
from ..shared import enterprisecrmfrontendseventbusprotoparameterentry as shared_enterprisecrmfrontendseventbusprotoparameterentry
from ..shared import googlecloudintegrationsv1alphavaluetype as shared_googlecloudintegrationsv1alphavaluetype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaTestIntegrationsResponse:
    r"""The response for testing an integration."""
    
    event_parameters: Optional[shared_enterprisecrmfrontendseventbusprotoeventparameters.EnterpriseCrmFrontendsEventbusProtoEventParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventParameters'), 'exclude': lambda f: f is None }})
    r"""LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see"""  
    execution_failed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionFailed'), 'exclude': lambda f: f is None }})
    r"""Is true if any execution in the integration failed. False otherwise."""  
    execution_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionId'), 'exclude': lambda f: f is None }})
    r"""The id of the execution corresponding to this run of integration."""  
    parameter_entries: Optional[list[shared_enterprisecrmfrontendseventbusprotoparameterentry.EnterpriseCrmFrontendsEventbusProtoParameterEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameterEntries'), 'exclude': lambda f: f is None }})
    r"""Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution."""  
    parameters: Optional[dict[str, shared_googlecloudintegrationsv1alphavaluetype.GoogleCloudIntegrationsV1alphaValueType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})
    r"""Optional. Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution."""  
    