/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The state to be updated.
 *
 * @remarks
 * >Permitted values are: `Processing`, `Payout`
 */
export enum UpdateAccountHolderStateRequestStateTypeEnum {
  LimitedPayout = "LimitedPayout",
  LimitedProcessing = "LimitedProcessing",
  LimitlessPayout = "LimitlessPayout",
  LimitlessProcessing = "LimitlessProcessing",
  Payout = "Payout",
  Processing = "Processing",
}

export class UpdateAccountHolderStateRequest extends SpeakeasyBase {
  /**
   * The code of the Account Holder on which to update the state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountHolderCode" })
  accountHolderCode: string;

  /**
   * If true, disable the requested state.  If false, enable the requested state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disable" })
  disable: boolean;

  /**
   * The reason that the state is being updated.
   *
   * @remarks
   * >Required if the state is being disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  /**
   * The state to be updated.
   *
   * @remarks
   * >Permitted values are: `Processing`, `Payout`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateType" })
  stateType: UpdateAccountHolderStateRequestStateTypeEnum;
}
