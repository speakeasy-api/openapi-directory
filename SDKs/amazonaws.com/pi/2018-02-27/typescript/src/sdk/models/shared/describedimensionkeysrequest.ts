/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DimensionGroup } from "./dimensiongroup";
import { ServiceTypeEnum } from "./servicetypeenum";
import { Expose, Transform, Type } from "class-transformer";

export class DescribeDimensionKeysRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalMetrics" })
  additionalMetrics?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Filter" })
  filter?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "GroupBy" })
  @Type(() => DimensionGroup)
  groupBy: DimensionGroup;

  @SpeakeasyMetadata()
  @Expose({ name: "Identifier" })
  identifier: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Metric" })
  metric: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PartitionBy" })
  @Type(() => DimensionGroup)
  partitionBy?: DimensionGroup;

  @SpeakeasyMetadata()
  @Expose({ name: "PeriodInSeconds" })
  periodInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceType" })
  serviceType: ServiceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;
}
