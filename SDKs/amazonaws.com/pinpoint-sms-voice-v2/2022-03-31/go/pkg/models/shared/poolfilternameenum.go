// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PoolFilterNameEnum string

const (
	PoolFilterNameEnumStatus                    PoolFilterNameEnum = "status"
	PoolFilterNameEnumMessageType               PoolFilterNameEnum = "message-type"
	PoolFilterNameEnumTwoWayEnabled             PoolFilterNameEnum = "two-way-enabled"
	PoolFilterNameEnumSelfManagedOptOutsEnabled PoolFilterNameEnum = "self-managed-opt-outs-enabled"
	PoolFilterNameEnumOptOutListName            PoolFilterNameEnum = "opt-out-list-name"
	PoolFilterNameEnumSharedRoutesEnabled       PoolFilterNameEnum = "shared-routes-enabled"
	PoolFilterNameEnumDeletionProtectionEnabled PoolFilterNameEnum = "deletion-protection-enabled"
)

func (e PoolFilterNameEnum) ToPointer() *PoolFilterNameEnum {
	return &e
}

func (e *PoolFilterNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "status":
		fallthrough
	case "message-type":
		fallthrough
	case "two-way-enabled":
		fallthrough
	case "self-managed-opt-outs-enabled":
		fallthrough
	case "opt-out-list-name":
		fallthrough
	case "shared-routes-enabled":
		fallthrough
	case "deletion-protection-enabled":
		*e = PoolFilterNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PoolFilterNameEnum: %v", v)
	}
}
