/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MeshInput - Mesh represents a logical configuration grouping for workload to workload communication within a service mesh. Routes that point to mesh dictate how requests are routed within this logical mesh boundary.
 */
public class MeshInput {
    /**
     * Optional. A free-text description of the resource. Max length 1024 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public MeshInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Optional. If set to a valid TCP port (1-65535), instructs the SIDECAR proxy to listen on the specified port of localhost (127.0.0.1) address. The SIDECAR proxy will expect all traffic to be redirected to this port regardless of its actual ip:port destination. If unset, a port '15001' is used as the interception port. This will is applicable only for sidecar proxy deployments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interceptionPort")
    public Integer interceptionPort;
    public MeshInput withInterceptionPort(Integer interceptionPort) {
        this.interceptionPort = interceptionPort;
        return this;
    }
    
    /**
     * Optional. Set of label tags associated with the Mesh resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public MeshInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Required. Name of the Mesh resource. It matches pattern `projects/* /locations/global/meshes/`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public MeshInput withName(String name) {
        this.name = name;
        return this;
    }
    
}
