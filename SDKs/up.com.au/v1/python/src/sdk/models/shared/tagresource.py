"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TagResourceRelationshipsTransactionsLinks:
    
    related: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('related') }})
    r"""The link to retrieve the related resource(s) in this relationship."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TagResourceRelationshipsTransactions:
    
    links: Optional[TagResourceRelationshipsTransactionsLinks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TagResourceRelationships:
    
    transactions: TagResourceRelationshipsTransactions = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactions') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TagResource:
    r"""Provides information about a tag."""
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The label of the tag, which also acts as the tagâ€™s unique identifier."""  
    relationships: TagResourceRelationships = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relationships') }})  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of this resource: `tags`"""  
    