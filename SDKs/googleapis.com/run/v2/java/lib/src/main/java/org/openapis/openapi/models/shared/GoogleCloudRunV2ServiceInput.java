/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRunV2ServiceInput - Service acts as a top-level container that manages a set of configurations and revision templates which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership.
 */
public class GoogleCloudRunV2ServiceInput {
    /**
     * Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes annotations' namespacing, limits, and rules. More info: https://kubernetes.io/docs/user-guide/annotations
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;
    public GoogleCloudRunV2ServiceInput withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Settings for Binary Authorization feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("binaryAuthorization")
    public GoogleCloudRunV2BinaryAuthorization binaryAuthorization;
    public GoogleCloudRunV2ServiceInput withBinaryAuthorization(GoogleCloudRunV2BinaryAuthorization binaryAuthorization) {
        this.binaryAuthorization = binaryAuthorization;
        return this;
    }
    
    /**
     * Arbitrary identifier for the API client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client")
    public String client;
    public GoogleCloudRunV2ServiceInput withClient(String client) {
        this.client = client;
        return this;
    }
    
    /**
     * Arbitrary version identifier for the API client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientVersion")
    public String clientVersion;
    public GoogleCloudRunV2ServiceInput withClientVersion(String clientVersion) {
        this.clientVersion = clientVersion;
        return this;
    }
    
    /**
     * User-provided description of the Service. This field currently has a 512-character limit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GoogleCloudRunV2ServiceInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ingress")
    public GoogleCloudRunV2ServiceIngressEnum ingress;
    public GoogleCloudRunV2ServiceInput withIngress(GoogleCloudRunV2ServiceIngressEnum ingress) {
        this.ingress = ingress;
        return this;
    }
    
    /**
     * Map of string keys and values that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public GoogleCloudRunV2ServiceInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchStage")
    public GoogleCloudRunV2ServiceLaunchStageEnum launchStage;
    public GoogleCloudRunV2ServiceInput withLaunchStage(GoogleCloudRunV2ServiceLaunchStageEnum launchStage) {
        this.launchStage = launchStage;
        return this;
    }
    
    /**
     * The fully qualified name of this Service. In CreateServiceRequest, this field is ignored, and instead composed from CreateServiceRequest.parent and CreateServiceRequest.service_id. Format: projects/{project}/locations/{location}/services/{service_id}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GoogleCloudRunV2ServiceInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * RevisionTemplate describes the data a revision should have when created from a template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template")
    public GoogleCloudRunV2RevisionTemplate template;
    public GoogleCloudRunV2ServiceInput withTemplate(GoogleCloudRunV2RevisionTemplate template) {
        this.template = template;
        return this;
    }
    
    /**
     * Defines a status condition for a resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terminalCondition")
    public GoogleCloudRunV2Condition terminalCondition;
    public GoogleCloudRunV2ServiceInput withTerminalCondition(GoogleCloudRunV2Condition terminalCondition) {
        this.terminalCondition = terminalCondition;
        return this;
    }
    
    /**
     * Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest `Ready` Revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("traffic")
    public GoogleCloudRunV2TrafficTarget[] traffic;
    public GoogleCloudRunV2ServiceInput withTraffic(GoogleCloudRunV2TrafficTarget[] traffic) {
        this.traffic = traffic;
        return this;
    }
    
}
