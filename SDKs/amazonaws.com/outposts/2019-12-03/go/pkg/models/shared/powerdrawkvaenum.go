// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PowerDrawKvaEnum string

const (
	PowerDrawKvaEnumPower5Kva  PowerDrawKvaEnum = "POWER_5_KVA"
	PowerDrawKvaEnumPower10Kva PowerDrawKvaEnum = "POWER_10_KVA"
	PowerDrawKvaEnumPower15Kva PowerDrawKvaEnum = "POWER_15_KVA"
	PowerDrawKvaEnumPower30Kva PowerDrawKvaEnum = "POWER_30_KVA"
)

func (e PowerDrawKvaEnum) ToPointer() *PowerDrawKvaEnum {
	return &e
}

func (e *PowerDrawKvaEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "POWER_5_KVA":
		fallthrough
	case "POWER_10_KVA":
		fallthrough
	case "POWER_15_KVA":
		fallthrough
	case "POWER_30_KVA":
		*e = PowerDrawKvaEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PowerDrawKvaEnum: %v", v)
	}
}
