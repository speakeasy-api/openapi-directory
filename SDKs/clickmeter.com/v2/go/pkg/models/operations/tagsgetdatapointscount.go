// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// TagsGetDatapointsCountStatusEnum - Status of the datapoint
type TagsGetDatapointsCountStatusEnum string

const (
	TagsGetDatapointsCountStatusEnumDeleted TagsGetDatapointsCountStatusEnum = "deleted"
	TagsGetDatapointsCountStatusEnumActive  TagsGetDatapointsCountStatusEnum = "active"
	TagsGetDatapointsCountStatusEnumPaused  TagsGetDatapointsCountStatusEnum = "paused"
	TagsGetDatapointsCountStatusEnumSpam    TagsGetDatapointsCountStatusEnum = "spam"
)

func (e *TagsGetDatapointsCountStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deleted":
		fallthrough
	case "active":
		fallthrough
	case "paused":
		fallthrough
	case "spam":
		*e = TagsGetDatapointsCountStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagsGetDatapointsCountStatusEnum: %s", s)
	}
}

// TagsGetDatapointsCountTypeEnum - Type of the datapoint ("tp"/"tl")
type TagsGetDatapointsCountTypeEnum string

const (
	TagsGetDatapointsCountTypeEnumTp TagsGetDatapointsCountTypeEnum = "tp"
	TagsGetDatapointsCountTypeEnumTl TagsGetDatapointsCountTypeEnum = "tl"
)

func (e *TagsGetDatapointsCountTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tp":
		fallthrough
	case "tl":
		*e = TagsGetDatapointsCountTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagsGetDatapointsCountTypeEnum: %s", s)
	}
}

type TagsGetDatapointsCountRequest struct {
	// Exclude datapoints created before this date (YYYYMMDD)
	CreatedAfter *string `queryParam:"style=form,explode=true,name=createdAfter"`
	// Exclude datapoints created after this date (YYYYMMDD)
	CreatedBefore *string `queryParam:"style=form,explode=true,name=createdBefore"`
	// Status of the datapoint
	Status *TagsGetDatapointsCountStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Id of the tag.
	TagID int64 `pathParam:"style=simple,explode=false,name=tagId"`
	// Filter fields by this pattern
	TextSearch *string `queryParam:"style=form,explode=true,name=textSearch"`
	// Type of the datapoint ("tp"/"tl")
	Type *TagsGetDatapointsCountTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type TagsGetDatapointsCountResponse struct {
	APICoreResponsesCountResponce *shared.APICoreResponsesCountResponce
	Body                          []byte
	ContentType                   string
	StatusCode                    int
	RawResponse                   *http.Response
}
