/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Play {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeamScore")
    public Long awayTeamScore;

    public Play withAwayTeamScore(Long awayTeamScore) {
        this.awayTeamScore = awayTeamScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Category")
    public String category;

    public Play withCategory(String category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClockMinutes")
    public Long clockMinutes;

    public Play withClockMinutes(Long clockMinutes) {
        this.clockMinutes = clockMinutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClockSeconds")
    public Long clockSeconds;

    public Play withClockSeconds(Long clockSeconds) {
        this.clockSeconds = clockSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Created")
    public String created;

    public Play withCreated(String created) {
        this.created = created;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public Play withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FirstAssistedByPlayerID")
    public Long firstAssistedByPlayerID;

    public Play withFirstAssistedByPlayerID(Long firstAssistedByPlayerID) {
        this.firstAssistedByPlayerID = firstAssistedByPlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeamScore")
    public Long homeTeamScore;

    public Play withHomeTeamScore(Long homeTeamScore) {
        this.homeTeamScore = homeTeamScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Opponent")
    public String opponent;

    public Play withOpponent(String opponent) {
        this.opponent = opponent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentID")
    public Long opponentID;

    public Play withOpponentID(Long opponentID) {
        this.opponentID = opponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpposingPlayerID")
    public Long opposingPlayerID;

    public Play withOpposingPlayerID(Long opposingPlayerID) {
        this.opposingPlayerID = opposingPlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PeriodID")
    public Long periodID;

    public Play withPeriodID(Long periodID) {
        this.periodID = periodID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PeriodName")
    public String periodName;

    public Play withPeriodName(String periodName) {
        this.periodName = periodName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayID")
    public Long playID;

    public Play withPlayID(Long playID) {
        this.playID = playID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerID")
    public Long playerID;

    public Play withPlayerID(Long playerID) {
        this.playerID = playerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PowerPlayTeam")
    public String powerPlayTeam;

    public Play withPowerPlayTeam(String powerPlayTeam) {
        this.powerPlayTeam = powerPlayTeam;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PowerPlayTeamID")
    public Long powerPlayTeamID;

    public Play withPowerPlayTeamID(Long powerPlayTeamID) {
        this.powerPlayTeamID = powerPlayTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecondAssistedByPlayerID")
    public Long secondAssistedByPlayerID;

    public Play withSecondAssistedByPlayerID(Long secondAssistedByPlayerID) {
        this.secondAssistedByPlayerID = secondAssistedByPlayerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sequence")
    public Long sequence;

    public Play withSequence(Long sequence) {
        this.sequence = sequence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;

    public Play withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamID")
    public Long teamID;

    public Play withTeamID(Long teamID) {
        this.teamID = teamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public String type;

    public Play withType(String type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;

    public Play withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    public Play(){}
}
