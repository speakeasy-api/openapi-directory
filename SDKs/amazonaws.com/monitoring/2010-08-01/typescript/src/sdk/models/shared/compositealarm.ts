/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionsSuppressedByEnum } from "./actionssuppressedbyenum";
import { StateValueEnum } from "./statevalueenum";

/**
 * The details about a composite alarm.
 */
export class CompositeAlarm extends SpeakeasyBase {
  @SpeakeasyMetadata()
  actionsEnabled?: boolean;

  @SpeakeasyMetadata()
  actionsSuppressedBy?: ActionsSuppressedByEnum;

  @SpeakeasyMetadata()
  actionsSuppressedReason?: string;

  @SpeakeasyMetadata()
  actionsSuppressor?: string;

  @SpeakeasyMetadata()
  actionsSuppressorExtensionPeriod?: number;

  @SpeakeasyMetadata()
  actionsSuppressorWaitPeriod?: number;

  @SpeakeasyMetadata()
  alarmActions?: string[];

  @SpeakeasyMetadata()
  alarmArn?: string;

  @SpeakeasyMetadata()
  alarmConfigurationUpdatedTimestamp?: Date;

  @SpeakeasyMetadata()
  alarmDescription?: string;

  @SpeakeasyMetadata()
  alarmName?: string;

  @SpeakeasyMetadata()
  alarmRule?: string;

  @SpeakeasyMetadata()
  insufficientDataActions?: string[];

  @SpeakeasyMetadata()
  okActions?: string[];

  @SpeakeasyMetadata()
  stateReason?: string;

  @SpeakeasyMetadata()
  stateReasonData?: string;

  @SpeakeasyMetadata()
  stateTransitionedTimestamp?: Date;

  @SpeakeasyMetadata()
  stateUpdatedTimestamp?: Date;

  @SpeakeasyMetadata()
  stateValue?: StateValueEnum;
}
