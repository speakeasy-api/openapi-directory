<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetChatMessages200ApplicationJSONMessages
{
    /**
     * The date-time at which the message was sent.
     * 
     * @var ?string $dateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_time')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateTime = null;
    
    /**
     * Message ID: Unique Identifier of the message.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The message content.
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * Unique identifier of a reply. This field will only be returned if the message is a reply message.
     * 
     * @var ?string $replyMainMessageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('reply_main_message_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replyMainMessageId = null;
    
    /**
     * Timestamp of when the reply message was sent. This field will only be returned if the message is a reply message.
     * 
     * 
     * The value of this field will be in **long** format(int64). 
     * 
     * @var ?int $replyMainMessageTimestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('reply_main_message_timestamp')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $replyMainMessageTimestamp = null;
    
    /**
     * The email address of the sender of the message.
     * 
     * @var ?string $sender
     */
	#[\JMS\Serializer\Annotation\SerializedName('sender')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sender = null;
    
    /**
     * This field indicates whether a message is an original message(unedited), an edited message or a deleted message.
     * 
     * 
     * This field is only returned if you set the value of `for include_deleted_and_edited_message` query parameter to `true`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetChatMessages200ApplicationJSONMessagesStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetChatMessages200ApplicationJSONMessagesStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetChatMessages200ApplicationJSONMessagesStatusEnum $status = null;
    
    /**
     * The timestamp of the message in microseconds.
     * 
     * @var ?int $timestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestamp')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $timestamp = null;
    
	public function __construct()
	{
		$this->dateTime = null;
		$this->id = null;
		$this->message = null;
		$this->replyMainMessageId = null;
		$this->replyMainMessageTimestamp = null;
		$this->sender = null;
		$this->status = null;
		$this->timestamp = null;
	}
}
