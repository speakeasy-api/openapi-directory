/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LaunchProfileInitializationActiveDirectory } from "./launchprofileinitializationactivedirectory";
import { LaunchProfileInitializationScript } from "./launchprofileinitializationscript";
import { LaunchProfilePlatformEnum } from "./launchprofileplatformenum";
import { Expose, Type } from "class-transformer";

/**
 * <p>A launch profile initialization contains information required for a workstation or server to connect to a launch profile.</p> <p>This includes scripts, endpoints, security groups, subnets, and other configuration.</p>
 */
export class LaunchProfileInitialization extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "activeDirectory" })
  @Type(() => LaunchProfileInitializationActiveDirectory)
  activeDirectory?: LaunchProfileInitializationActiveDirectory;

  @SpeakeasyMetadata()
  @Expose({ name: "ec2SecurityGroupIds" })
  ec2SecurityGroupIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "launchProfileId" })
  launchProfileId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "launchProfileProtocolVersion" })
  launchProfileProtocolVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "launchPurpose" })
  launchPurpose?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  platform?: LaunchProfilePlatformEnum;

  @SpeakeasyMetadata({ elemType: LaunchProfileInitializationScript })
  @Expose({ name: "systemInitializationScripts" })
  @Type(() => LaunchProfileInitializationScript)
  systemInitializationScripts?: LaunchProfileInitializationScript[];

  @SpeakeasyMetadata({ elemType: LaunchProfileInitializationScript })
  @Expose({ name: "userInitializationScripts" })
  @Type(() => LaunchProfileInitializationScript)
  userInitializationScripts?: LaunchProfileInitializationScript[];
}
