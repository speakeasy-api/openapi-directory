// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SecurityServiceTypeEnum string

const (
	SecurityServiceTypeEnumWaf                        SecurityServiceTypeEnum = "WAF"
	SecurityServiceTypeEnumWafv2                      SecurityServiceTypeEnum = "WAFV2"
	SecurityServiceTypeEnumShieldAdvanced             SecurityServiceTypeEnum = "SHIELD_ADVANCED"
	SecurityServiceTypeEnumSecurityGroupsCommon       SecurityServiceTypeEnum = "SECURITY_GROUPS_COMMON"
	SecurityServiceTypeEnumSecurityGroupsContentAudit SecurityServiceTypeEnum = "SECURITY_GROUPS_CONTENT_AUDIT"
	SecurityServiceTypeEnumSecurityGroupsUsageAudit   SecurityServiceTypeEnum = "SECURITY_GROUPS_USAGE_AUDIT"
	SecurityServiceTypeEnumNetworkFirewall            SecurityServiceTypeEnum = "NETWORK_FIREWALL"
	SecurityServiceTypeEnumDNSFirewall                SecurityServiceTypeEnum = "DNS_FIREWALL"
	SecurityServiceTypeEnumThirdPartyFirewall         SecurityServiceTypeEnum = "THIRD_PARTY_FIREWALL"
	SecurityServiceTypeEnumImportNetworkFirewall      SecurityServiceTypeEnum = "IMPORT_NETWORK_FIREWALL"
)

func (e *SecurityServiceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WAF":
		fallthrough
	case "WAFV2":
		fallthrough
	case "SHIELD_ADVANCED":
		fallthrough
	case "SECURITY_GROUPS_COMMON":
		fallthrough
	case "SECURITY_GROUPS_CONTENT_AUDIT":
		fallthrough
	case "SECURITY_GROUPS_USAGE_AUDIT":
		fallthrough
	case "NETWORK_FIREWALL":
		fallthrough
	case "DNS_FIREWALL":
		fallthrough
	case "THIRD_PARTY_FIREWALL":
		fallthrough
	case "IMPORT_NETWORK_FIREWALL":
		*e = SecurityServiceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SecurityServiceTypeEnum: %s", s)
	}
}
