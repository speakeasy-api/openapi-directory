"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bookedrate as shared_bookedrate
from ..shared import money as shared_money
from ..shared import notesbookedroom as shared_notesbookedroom
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BookedRoomRoomType:
    r"""Booked room"""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The hotel's name for this room type."""  
    room_type_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roomTypeId') }})
    r"""Unique identifier of this room type within the Impala platform."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BookedRoom:
    
    notes: shared_notesbookedroom.NotesBookedRoom = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes') }})
    r"""Notes about this booked room. These might be requests for room setup (e.g. extra beds or requests to remove alcoholic beverages from the minibar) or other requests related to this particular booked room.
    These fields allow for **Markdown formatting** that's displayed to hotels in its rendered format in most circumstances but might fall back to text-only in scenarios where that's not possible.
    """  
    rate: shared_bookedrate.BookedRate = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rate') }})
    r"""Information on the price of the booked room, other components of the room (such as breakfast, lunch or a welcome drink) and the cancellation policies that apply."""  
    room_type: BookedRoomRoomType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roomType') }})
    r"""Booked room"""  
    adults: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adults'), 'exclude': lambda f: f is None }})
    r"""Number of adult guests booked for this room type."""  
    seller_to_impala_payment: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellerToImpalaPayment'), 'exclude': lambda f: f is None }})
    r"""An amount of money in the specified currency (used in the context of prices, fees, refunds etc.)"""  
    