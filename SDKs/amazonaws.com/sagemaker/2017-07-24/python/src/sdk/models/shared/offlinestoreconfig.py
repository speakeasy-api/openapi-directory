"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datacatalogconfig as shared_datacatalogconfig
from ..shared import s3storageconfig as shared_s3storageconfig
from ..shared import tableformat_enum as shared_tableformat_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OfflineStoreConfig:
    r"""<p>The configuration of an <code>OfflineStore</code>.</p> <p>Provide an <code>OfflineStoreConfig</code> in a request to <code>CreateFeatureGroup</code> to create an <code>OfflineStore</code>.</p> <p>To encrypt an <code>OfflineStore</code> using at rest data encryption, specify Amazon Web Services Key Management Service (KMS) key ID, or <code>KMSKeyId</code>, in <code>S3StorageConfig</code>.</p>"""
    
    s3_storage_config: shared_s3storageconfig.S3StorageConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3StorageConfig') }})  
    data_catalog_config: Optional[shared_datacatalogconfig.DataCatalogConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataCatalogConfig'), 'exclude': lambda f: f is None }})  
    disable_glue_table_creation: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DisableGlueTableCreation'), 'exclude': lambda f: f is None }})  
    table_format: Optional[shared_tableformat_enum.TableFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TableFormat'), 'exclude': lambda f: f is None }})  
    