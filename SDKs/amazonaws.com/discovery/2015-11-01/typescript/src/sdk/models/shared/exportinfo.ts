/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExportStatusEnum } from "./exportstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Information regarding the export status of discovered data. The value is an array of objects.
 */
export class ExportInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "configurationsDownloadUrl" })
  configurationsDownloadUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exportId" })
  exportId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exportRequestTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  exportRequestTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "exportStatus" })
  exportStatus: ExportStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "isTruncated" })
  isTruncated?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "requestedEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  requestedEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "requestedStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  requestedStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage: string;
}
