/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GETDMTaxItemType } from "./getdmtaxitemtype";
import { GETDMTaxItemTypeNew } from "./getdmtaxitemtypenew";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Container for the finance information related to the debit memo item.
 *
 * @remarks
 *
 */
export class GETDebitMemoItemTypeFinanceInformation extends SpeakeasyBase {
  /**
   * The accounting code for the deferred revenue, such as Monthly Recurring Liability.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deferredRevenueAccountingCode" })
  deferredRevenueAccountingCode?: string;

  /**
   * The type of the deferred revenue accounting code, such as Deferred Revenue.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deferredRevenueAccountingCodeType" })
  deferredRevenueAccountingCodeType?: string;

  /**
   * The accounting code for the recognized revenue, such as Monthly Recurring Charges or Overage Charges.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recognizedRevenueAccountingCode" })
  recognizedRevenueAccountingCode?: string;

  /**
   * The type of the recognized revenue accounting code, such as Sales Revenue or Sales Discount.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recognizedRevenueAccountingCodeType" })
  recognizedRevenueAccountingCodeType?: string;

  /**
   * The name of the revenue recognition rule governing the revenue schedule.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revenueRecognitionRuleName" })
  revenueRecognitionRuleName?: string;

  /**
   * The revenue schedule number. The revenue schedule number is always prefixed with "RS", for example, RS-00000001.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revenueScheduleNumber" })
  revenueScheduleNumber?: string;
}

/**
 * The type of the source item.
 *
 * @remarks
 *
 */
export enum GETDebitMemoItemTypeSourceItemTypeEnum {
  SubscriptionComponent = "SubscriptionComponent",
  InvoiceDetail = "InvoiceDetail",
  ProductRatePlanCharge = "ProductRatePlanCharge",
}

/**
 * The tax mode of the debit memo item, indicating whether the amount of the debit memo item includes tax.
 *
 * @remarks
 *
 */
export enum GETDebitMemoItemTypeTaxModeEnum {
  TaxExclusive = "TaxExclusive",
  TaxInclusive = "TaxInclusive",
}

/**
 * Container for the taxation items of the debit memo item.
 *
 * @remarks
 *
 * **Note**: This field is only available if you set the `zuora-version` request header to `239.0` or later.
 *
 */
export class GETDebitMemoItemTypeTaxationItems extends SpeakeasyBase {
  /**
   * List of taxation items.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETDMTaxItemTypeNew })
  @Expose({ name: "data" })
  @Type(() => GETDMTaxItemTypeNew)
  data?: GETDMTaxItemTypeNew[];

  /**
   * URL to retrieve the next page of the response if it exists; otherwise absent.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPage" })
  nextPage?: string;
}

/**
 * Container for custom fields of a Debit Memo Item object.
 *
 * @remarks
 *
 */
export class GETDebitMemoItemType extends SpeakeasyBase {
  /**
   * The amount of the debit memo item. For tax-inclusive debit memo items, the amount indicates the debit memo item amount including tax. For tax-exclusive debit memo items, the amount indicates the debit memo item amount excluding tax.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * The debit memo item amount excluding tax.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amountWithoutTax" })
  amountWithoutTax?: number;

  /**
   * The balance of the debit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  balance?: number;

  /**
   * The applied amount of the debit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beAppliedAmount" })
  beAppliedAmount?: number;

  /**
   * Comments about the debit memo item.
   *
   * @remarks
   *
   * **Note**: This field is not available if you set the `zuora-version` request header to `257.0` or later.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * The ID of the Zuora user who created the debit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdById" })
  createdById?: string;

  /**
   * The date and time when the debit memo item was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  /**
   * Description about the debit memo item.
   *
   * @remarks
   *
   * **Note**: This field is only available if you set the `zuora-version` request header to `257.0` or later.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Container for the finance information related to the debit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "financeInformation" })
  @Type(() => GETDebitMemoItemTypeFinanceInformation)
  financeInformation?: GETDebitMemoItemTypeFinanceInformation;

  /**
   * The ID of the debit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The number of units for the debit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * The end date of the service period associated with this debit memo item. Service ends one second before the date specified in this field.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceEndDate?: Date;

  /**
   * The start date of the service period associated with this debit memo item. If the associated charge is a one-time fee, this date is the date of that charge.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceStartDate?: Date;

  /**
   * The SKU for the product associated with the debit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  /**
   * The name of the SKU.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skuName" })
  skuName?: string;

  /**
   * The ID of the source item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceItemId" })
  sourceItemId?: string;

  /**
   * The type of the source item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceItemType" })
  sourceItemType?: GETDebitMemoItemTypeSourceItemTypeEnum;

  /**
   * The ID of the subscription associated with the debit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionId" })
  subscriptionId?: string;

  /**
   * Returns `true` if the request was processed successfully.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * Container for the taxation items of the debit memo item..
   *
   * @remarks
   *
   * **Note**: This field is not available if you set the `zuora-version` request header to `239.0` or later.
   *
   */
  @SpeakeasyMetadata({ elemType: GETDMTaxItemType })
  @Expose({ name: "taxItems" })
  @Type(() => GETDMTaxItemType)
  taxItems?: GETDMTaxItemType[];

  /**
   * The tax mode of the debit memo item, indicating whether the amount of the debit memo item includes tax.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxMode" })
  taxMode?: GETDebitMemoItemTypeTaxModeEnum;

  /**
   * Container for the taxation items of the debit memo item.
   *
   * @remarks
   *
   * **Note**: This field is only available if you set the `zuora-version` request header to `239.0` or later.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxationItems" })
  @Type(() => GETDebitMemoItemTypeTaxationItems)
  taxationItems?: GETDebitMemoItemTypeTaxationItems;

  /**
   * The units to measure usage.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitOfMeasure" })
  unitOfMeasure?: string;

  /**
   * The per-unit price of the debit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitPrice" })
  unitPrice?: number;

  /**
   * The ID of the Zuora user who last updated the debit memo item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedById" })
  updatedById?: string;

  /**
   * The date and time when the debit memo item was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-02 15:36:10.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedDate?: Date;
}
