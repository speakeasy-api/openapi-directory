"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BasicPerfSampleSeriesPerfMetricTypeEnum(str, Enum):
    PERF_METRIC_TYPE_UNSPECIFIED = 'perfMetricTypeUnspecified'
    MEMORY = 'memory'
    CPU = 'cpu'
    NETWORK = 'network'
    GRAPHICS = 'graphics'

class BasicPerfSampleSeriesPerfUnitEnum(str, Enum):
    PERF_UNIT_UNSPECIFIED = 'perfUnitUnspecified'
    KIBIBYTE = 'kibibyte'
    PERCENT = 'percent'
    BYTES_PER_SECOND = 'bytesPerSecond'
    FRAMES_PER_SECOND = 'framesPerSecond'
    BYTE = 'byte'

class BasicPerfSampleSeriesSampleSeriesLabelEnum(str, Enum):
    SAMPLE_SERIES_TYPE_UNSPECIFIED = 'sampleSeriesTypeUnspecified'
    MEMORY_RSS_PRIVATE = 'memoryRssPrivate'
    MEMORY_RSS_SHARED = 'memoryRssShared'
    MEMORY_RSS_TOTAL = 'memoryRssTotal'
    MEMORY_TOTAL = 'memoryTotal'
    CPU_USER = 'cpuUser'
    CPU_KERNEL = 'cpuKernel'
    CPU_TOTAL = 'cpuTotal'
    NT_BYTES_TRANSFERRED = 'ntBytesTransferred'
    NT_BYTES_RECEIVED = 'ntBytesReceived'
    NETWORK_SENT = 'networkSent'
    NETWORK_RECEIVED = 'networkReceived'
    GRAPHICS_FRAME_RATE = 'graphicsFrameRate'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BasicPerfSampleSeries:
    r"""Encapsulates the metadata for basic sample series represented by a line chart"""
    
    perf_metric_type: Optional[BasicPerfSampleSeriesPerfMetricTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('perfMetricType'), 'exclude': lambda f: f is None }})  
    perf_unit: Optional[BasicPerfSampleSeriesPerfUnitEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('perfUnit'), 'exclude': lambda f: f is None }})  
    sample_series_label: Optional[BasicPerfSampleSeriesSampleSeriesLabelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sampleSeriesLabel'), 'exclude': lambda f: f is None }})  
    