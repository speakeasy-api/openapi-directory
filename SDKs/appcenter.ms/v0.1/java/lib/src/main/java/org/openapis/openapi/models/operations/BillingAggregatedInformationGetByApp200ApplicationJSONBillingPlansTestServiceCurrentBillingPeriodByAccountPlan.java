/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan - Billing Plan
 */
public class BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan {
    /**
     * Collection of attribute values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public java.util.Map<String, java.util.Map<String, Object>> attributes;
    public BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan withAttributes(java.util.Map<String, java.util.Map<String, Object>> attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * The Billing Plan ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * A collection of named numeric values
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limits")
    public java.util.Map<String, Double> limits;
    public BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan withLimits(java.util.Map<String, Double> limits) {
        this.limits = limits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentId")
    public String parentId;
    public BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan withParentId(String parentId) {
        this.parentId = parentId;
        return this;
    }
    
    /**
     * Service that receives payments for this billing plan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentSource")
    public BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum paymentSource;
    public BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan withPaymentSource(BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum paymentSource) {
        this.paymentSource = paymentSource;
        return this;
    }
    
    /**
     * Price of the Billing Plan
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Double price;
    public BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * Name of the service that the plan applies to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnum service;
    public BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan withService(BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnum service) {
        this.service = service;
        return this;
    }
    
    /**
     * Version of the Billing Plan schema
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;
    public BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan withVersion(String version) {
        this.version = version;
        return this;
    }
    
}
