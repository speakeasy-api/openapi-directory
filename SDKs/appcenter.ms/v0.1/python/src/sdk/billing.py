"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Optional

class Billing:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def billing_aggregated_information_get_all(self, request: operations.BillingAggregatedInformationGetAllRequest, security: operations.BillingAggregatedInformationGetAllSecurity) -> operations.BillingAggregatedInformationGetAllResponse:
        r"""Aggregated Billing Information for the requesting user and the organizations in which the user is an admin."""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/v0.1/billing/allAccountsAggregated'
        
        query_params = utils.get_query_params(operations.BillingAggregatedInformationGetAllRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.BillingAggregatedInformationGetAllResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.BillingAggregatedInformationGetAll200ApplicationJSON])
                res.billing_aggregated_information_get_all_200_application_json_object = out
        else:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.BillingAggregatedInformationGetAllDefaultApplicationJSON])
                res.billing_aggregated_information_get_all_default_application_json_object = out

        return res

    def billing_aggregated_information_get_by_app(self, request: operations.BillingAggregatedInformationGetByAppRequest, security: operations.BillingAggregatedInformationGetByAppSecurity) -> operations.BillingAggregatedInformationGetByAppResponse:
        r"""Aggregated Billing Information for owner of a given app."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.BillingAggregatedInformationGetByAppRequest, base_url, '/v0.1/apps/{owner_name}/{app_name}/billing/aggregated', request)
        
        query_params = utils.get_query_params(operations.BillingAggregatedInformationGetByAppRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.BillingAggregatedInformationGetByAppResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.BillingAggregatedInformationGetByApp200ApplicationJSON])
                res.billing_aggregated_information_get_by_app_200_application_json_object = out
        else:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.BillingAggregatedInformationGetByAppDefaultApplicationJSON])
                res.billing_aggregated_information_get_by_app_default_application_json_object = out

        return res

    def billing_aggregated_information_get_for_org(self, request: operations.BillingAggregatedInformationGetForOrgRequest, security: operations.BillingAggregatedInformationGetForOrgSecurity) -> operations.BillingAggregatedInformationGetForOrgResponse:
        r"""Aggregated Billing Information for a given Organization."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.BillingAggregatedInformationGetForOrgRequest, base_url, '/v0.1/orgs/{orgName}/billing/aggregated', request)
        
        query_params = utils.get_query_params(operations.BillingAggregatedInformationGetForOrgRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.BillingAggregatedInformationGetForOrgResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.BillingAggregatedInformationGetForOrg200ApplicationJSON])
                res.billing_aggregated_information_get_for_org_200_application_json_object = out
        else:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.BillingAggregatedInformationGetForOrgDefaultApplicationJSON])
                res.billing_aggregated_information_get_for_org_default_application_json_object = out

        return res

    