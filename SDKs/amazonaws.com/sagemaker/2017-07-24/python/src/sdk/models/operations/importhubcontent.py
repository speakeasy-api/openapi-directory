"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import importhubcontentrequest as shared_importhubcontentrequest
from ..shared import importhubcontentresponse as shared_importhubcontentresponse
from enum import Enum
from typing import Any, Optional

class ImportHubContentXAmzTargetEnum(str, Enum):
    SAGE_MAKER_IMPORT_HUB_CONTENT = 'SageMaker.ImportHubContent'


@dataclasses.dataclass
class ImportHubContentRequest:
    
    import_hub_content_request: shared_importhubcontentrequest.ImportHubContentRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: ImportHubContentXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class ImportHubContentResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    import_hub_content_response: Optional[shared_importhubcontentresponse.ImportHubContentResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    resource_in_use: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceInUse"""  
    resource_limit_exceeded: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceLimitExceeded"""  
    resource_not_found: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceNotFound"""  
    