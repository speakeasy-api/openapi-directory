// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RecordStopResponseMessageEnum - Response message
type RecordStopResponseMessageEnum string

const (
	RecordStopResponseMessageEnumRecordStopExecuted               RecordStopResponseMessageEnum = "RecordStop Executed"
	RecordStopResponseMessageEnumCallUUIDParameterMustBePresent   RecordStopResponseMessageEnum = "CallUUID Parameter must be present"
	RecordStopResponseMessageEnumRecordFileParameterMustBePresent RecordStopResponseMessageEnum = "RecordFile Parameter must be present"
	RecordStopResponseMessageEnumRecordStopFailedCallNotFound     RecordStopResponseMessageEnum = "RecordStop Failed -- Call not found"
	RecordStopResponseMessageEnumRecordStopFailed                 RecordStopResponseMessageEnum = "RecordStop Failed"
)

func (e *RecordStopResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RecordStop Executed":
		fallthrough
	case "CallUUID Parameter must be present":
		fallthrough
	case "RecordFile Parameter must be present":
		fallthrough
	case "RecordStop Failed -- Call not found":
		fallthrough
	case "RecordStop Failed":
		*e = RecordStopResponseMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RecordStopResponseMessageEnum: %s", s)
	}
}

// RecordStopResponse - Response
type RecordStopResponse struct {
	// Response message
	Message RecordStopResponseMessageEnum `json:"Message"`
	// Whether the request was successful or not
	Success bool `json:"Success"`
}
