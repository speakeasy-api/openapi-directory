// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListMonitoredResourcesQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

type ListMonitoredResourcesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListMonitoredResourcesRequestBodyFilters -  Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status.
type ListMonitoredResourcesRequestBodyFilters struct {
	ResourcePermission  *shared.ResourcePermissionEnum  `json:"ResourcePermission,omitempty"`
	ResourceTypeFilters []shared.ResourceTypeFilterEnum `json:"ResourceTypeFilters,omitempty"`
}

type ListMonitoredResourcesRequestBody struct {
	//  Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status.
	Filters *ListMonitoredResourcesRequestBodyFilters `json:"Filters,omitempty"`
	// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
	NextToken *string `json:"NextToken,omitempty"`
}

type ListMonitoredResourcesRequest struct {
	QueryParams ListMonitoredResourcesQueryParams
	Headers     ListMonitoredResourcesHeaders
	Request     ListMonitoredResourcesRequestBody `request:"mediaType=application/json"`
}

type ListMonitoredResourcesResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListMonitoredResourcesResponse *shared.ListMonitoredResourcesResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
