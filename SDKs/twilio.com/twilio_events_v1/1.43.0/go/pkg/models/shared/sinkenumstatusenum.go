// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SinkEnumStatusEnum string

const (
	SinkEnumStatusEnumInitialized SinkEnumStatusEnum = "initialized"
	SinkEnumStatusEnumValidating  SinkEnumStatusEnum = "validating"
	SinkEnumStatusEnumActive      SinkEnumStatusEnum = "active"
	SinkEnumStatusEnumFailed      SinkEnumStatusEnum = "failed"
)

func (e SinkEnumStatusEnum) ToPointer() *SinkEnumStatusEnum {
	return &e
}

func (e *SinkEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initialized":
		fallthrough
	case "validating":
		fallthrough
	case "active":
		fallthrough
	case "failed":
		*e = SinkEnumStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SinkEnumStatusEnum: %v", v)
	}
}
