"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import pricing_v2_trunking_country_instance as shared_pricing_v2_trunking_country_instance
from typing import Optional

FETCH_TRUNKING_COUNTRY_SERVERS = [
	"https://pricing.twilio.com",
]


@dataclasses.dataclass
class FetchTrunkingCountrySecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class FetchTrunkingCountryRequest:
    
    iso_country: str = dataclasses.field(metadata={'path_param': { 'field_name': 'IsoCountry', 'style': 'simple', 'explode': False }})
    r"""The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the origin-based voice pricing information to fetch."""  
    

@dataclasses.dataclass
class FetchTrunkingCountryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    pricing_v2_trunking_country_instance: Optional[shared_pricing_v2_trunking_country_instance.PricingV2TrunkingCountryInstance] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    