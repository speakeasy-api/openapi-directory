"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import basicmetricsrequest as shared_basicmetricsrequest
from ..shared import drivingdirectionmetricsrequest as shared_drivingdirectionmetricsrequest
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReportLocationInsightsRequest:
    r"""Request message for Insights.ReportLocationInsights."""
    
    basic_request: Optional[shared_basicmetricsrequest.BasicMetricsRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('basicRequest'), 'exclude': lambda f: f is None }})
    r"""A request for basic metric insights."""  
    driving_directions_request: Optional[shared_drivingdirectionmetricsrequest.DrivingDirectionMetricsRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drivingDirectionsRequest'), 'exclude': lambda f: f is None }})
    r"""A request for driving direction insights."""  
    location_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationNames'), 'exclude': lambda f: f is None }})
    r"""A collection of locations to fetch insights for, specified by their names."""  
    