// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetElectionsSummaryOfficeEnum - Federal office candidate runs for: H, S or P
type GetElectionsSummaryOfficeEnum string

const (
	GetElectionsSummaryOfficeEnumHouse     GetElectionsSummaryOfficeEnum = "house"
	GetElectionsSummaryOfficeEnumSenate    GetElectionsSummaryOfficeEnum = "senate"
	GetElectionsSummaryOfficeEnumPresident GetElectionsSummaryOfficeEnum = "president"
)

func (e *GetElectionsSummaryOfficeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "house":
		fallthrough
	case "senate":
		fallthrough
	case "president":
		*e = GetElectionsSummaryOfficeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetElectionsSummaryOfficeEnum: %s", s)
	}
}

type GetElectionsSummaryQueryParams struct {
	// API key for https://api.data.gov. Get one at https://api.data.gov/signup.
	//
	APIKey string `queryParam:"style=form,explode=true,name=api_key"`
	// Two-year election cycle in which a candidate runs for office.
	// Calculated from Form 2. The cycle begins with
	// an odd year and is named for its ending, even year. This cycle follows
	// the traditional house election cycle and subdivides the presidential
	// and Senate elections into comparable two-year blocks. To retrieve data for
	// the entire four years of a presidential term or six years of a senatorial term,
	// you will need the `election_full` flag.
	//
	Cycle int `queryParam:"style=form,explode=true,name=cycle"`
	// Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
	District *string `queryParam:"style=form,explode=true,name=district"`
	// `True` indicates that full election period of a candidate.
	// `False` indicates that two year election cycle.
	ElectionFull *bool `queryParam:"style=form,explode=true,name=election_full"`
	// Federal office candidate runs for: H, S or P
	Office GetElectionsSummaryOfficeEnum `queryParam:"style=form,explode=true,name=office"`
	// US state or territory where a candidate runs for office
	State *string `queryParam:"style=form,explode=true,name=state"`
}

type GetElectionsSummaryRequest struct {
	QueryParams GetElectionsSummaryQueryParams
}

type GetElectionsSummaryResponse struct {
	ContentType     string
	ElectionSummary *shared.ElectionSummary
	StatusCode      int
	RawResponse     *http.Response
}
