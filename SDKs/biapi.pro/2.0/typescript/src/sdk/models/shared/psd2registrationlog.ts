/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Keep traces of PSD2 registration calls.
 *
 * @remarks
 *     The table is used by the plugin `psd2registration` to know:
 *      - whether it must call `update` or `create` routes on the PSD2 APIs when the config is updated
 *      - the list of PSD2 API to create (needed when a new connector is added)
 *      - the list of broken connectors
 */
export class Psd2RegistrationLog extends SpeakeasyBase {
  /**
   * When this row was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * If fail, error message received from connector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_message" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * ID of the psd2 registration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_psd2registration" })
  idPsd2registration?: number;

  /**
   * Action done: create, update, delete
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
