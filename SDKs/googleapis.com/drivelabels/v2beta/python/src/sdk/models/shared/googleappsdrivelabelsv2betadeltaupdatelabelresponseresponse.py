"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleappsdrivelabelsv2betadeltaupdatelabelresponsecreatefieldresponse as shared_googleappsdrivelabelsv2betadeltaupdatelabelresponsecreatefieldresponse
from ..shared import googleappsdrivelabelsv2betadeltaupdatelabelresponsecreateselectionchoiceresponse as shared_googleappsdrivelabelsv2betadeltaupdatelabelresponsecreateselectionchoiceresponse
from ..shared import googleappsdrivelabelsv2betadeltaupdatelabelresponseupdatefieldpropertiesresponse as shared_googleappsdrivelabelsv2betadeltaupdatelabelresponseupdatefieldpropertiesresponse
from ..shared import googleappsdrivelabelsv2betadeltaupdatelabelresponseupdateselectionchoicepropertiesresponse as shared_googleappsdrivelabelsv2betadeltaupdatelabelresponseupdateselectionchoicepropertiesresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseResponse:
    r"""A single response from an update."""
    
    create_field: Optional[shared_googleappsdrivelabelsv2betadeltaupdatelabelresponsecreatefieldresponse.GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateFieldResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createField'), 'exclude': lambda f: f is None }})
    r"""Response following Field create."""  
    create_selection_choice: Optional[shared_googleappsdrivelabelsv2betadeltaupdatelabelresponsecreateselectionchoiceresponse.GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseCreateSelectionChoiceResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createSelectionChoice'), 'exclude': lambda f: f is None }})
    r"""Response following Selection Choice create."""  
    delete_field: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deleteField'), 'exclude': lambda f: f is None }})
    r"""Response following Field delete."""  
    delete_selection_choice: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deleteSelectionChoice'), 'exclude': lambda f: f is None }})
    r"""Response following Choice delete."""  
    disable_field: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disableField'), 'exclude': lambda f: f is None }})
    r"""Response following Field disable."""  
    disable_selection_choice: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disableSelectionChoice'), 'exclude': lambda f: f is None }})
    r"""Response following Choice disable."""  
    enable_field: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableField'), 'exclude': lambda f: f is None }})
    r"""Response following Field enable."""  
    enable_selection_choice: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableSelectionChoice'), 'exclude': lambda f: f is None }})
    r"""Response following Choice enable."""  
    update_field: Optional[shared_googleappsdrivelabelsv2betadeltaupdatelabelresponseupdatefieldpropertiesresponse.GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateFieldPropertiesResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateField'), 'exclude': lambda f: f is None }})
    r"""Response following update to Field properties."""  
    update_field_type: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateFieldType'), 'exclude': lambda f: f is None }})
    r"""Response following update to Field type."""  
    update_label: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateLabel'), 'exclude': lambda f: f is None }})
    r"""Response following update to Label properties."""  
    update_selection_choice_properties: Optional[shared_googleappsdrivelabelsv2betadeltaupdatelabelresponseupdateselectionchoicepropertiesresponse.GoogleAppsDriveLabelsV2betaDeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateSelectionChoiceProperties'), 'exclude': lambda f: f is None }})
    r"""Response following update to Selection Choice properties."""  
    