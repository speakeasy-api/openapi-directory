/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum WebhookEventsEnum {
  Call = "CALL",
}

/**
 * Metadata policy for the webhook
 */
export enum WebhookMetadataPolicyEnum {
  None = "NONE",
  Header = "HEADER",
  Body = "BODY",
}

/**
 * Signing algorithm for the webhook
 */
export enum WebhookSigningAlgoEnum {
  HmacSha256 = "HMAC_SHA256",
  None = "NONE",
}

export class WebhookStatistics extends SpeakeasyBase {
  /**
   * Current delivery status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failed" })
  failed?: boolean;

  /**
   * Total delivery attempts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalAttempts" })
  totalAttempts?: number;

  /**
   * Total failed deliveries
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalFailures" })
  totalFailures?: number;

  /**
   * Total successful deliveries
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalSuccesses" })
  totalSuccesses?: number;
}

/**
 * Status for the webhook
 */
export enum WebhookStatusEnum {
  Active = "ACTIVE",
  Paused = "PAUSED",
}

/**
 * Successful
 */
export class Webhook extends SpeakeasyBase {
  /**
   * Unique identifier of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Created time for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt?: string;

  /**
   * Subscribed events for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events?: WebhookEventsEnum[];

  /**
   * Expiration time for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expireAt" })
  expireAt?: string;

  /**
   * Unique identifier for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Metadata policy for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadataPolicy" })
  metadataPolicy?: WebhookMetadataPolicyEnum;

  /**
   * Scheduled purge time for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purgeAt" })
  purgeAt?: string;

  /**
   * Last renewed time for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "renewedAt" })
  renewedAt?: string;

  /**
   * Signing algorithm for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "signingAlgo" })
  signingAlgo?: WebhookSigningAlgoEnum;

  /**
   * Signing key for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "signingKey" })
  signingKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "statistics" })
  @Type(() => WebhookStatistics)
  statistics?: WebhookStatistics;

  /**
   * Status for the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: WebhookStatusEnum;

  /**
   * Destination URL for events
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * Unique identifier of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}
