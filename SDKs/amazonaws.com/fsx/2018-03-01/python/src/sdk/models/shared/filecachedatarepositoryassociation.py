"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filecachenfsconfiguration as shared_filecachenfsconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FileCacheDataRepositoryAssociation:
    r"""<p>The configuration for a data repository association (DRA) to be created during the Amazon File Cache resource creation. The DRA links the cache to either an Amazon S3 bucket or prefix, or a Network File System (NFS) data repository that supports the NFSv3 protocol.</p> <p>The DRA does not support automatic import or automatic export.</p>"""
    
    data_repository_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataRepositoryPath') }})  
    file_cache_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FileCachePath') }})  
    data_repository_subdirectories: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataRepositorySubdirectories'), 'exclude': lambda f: f is None }})  
    nfs: Optional[shared_filecachenfsconfiguration.FileCacheNFSConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NFS'), 'exclude': lambda f: f is None }})  
    