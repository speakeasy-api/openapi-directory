/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class StoryIdGetRequest extends SpeakeasyBase {
  /**
   * Pull a story object with associated collaborator user, permission, and session data(faster if cached from prior api call)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=full" })
  full?: boolean;

  /**
   * the id from the story object
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Determines whether a repsonse including story objects should include the story outline.  Defaults to true. Useful for speeding up processing times.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_outline",
  })
  includeOutline?: boolean;

  /**
   * Indicate whether the returned object should include child relationships
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_relationships",
  })
  includeRelationships?: boolean;

  /**
   * Force the api reload the `Story full` object
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=refresh_cache",
  })
  refreshCache?: boolean;
}

export class StoryIdGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  problemDetail?: shared.ProblemDetail;

  /**
   * Success responses with story object
   */
  @SpeakeasyMetadata()
  story?: shared.Story;
}
