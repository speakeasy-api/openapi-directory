"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import transformconfigparameter as shared_transformconfigparameter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DynamicTransform:
    r"""Specifies the set of parameters needed to perform the dynamic transform."""
    
    function_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FunctionName') }})  
    inputs: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Inputs') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Path') }})  
    transform_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TransformName') }})  
    parameters: Optional[list[shared_transformconfigparameter.TransformConfigParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Parameters'), 'exclude': lambda f: f is None }})  
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Version'), 'exclude': lambda f: f is None }})  
    