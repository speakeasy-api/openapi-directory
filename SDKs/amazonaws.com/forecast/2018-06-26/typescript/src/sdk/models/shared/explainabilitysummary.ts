/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExplainabilityConfig } from "./explainabilityconfig";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides a summary of the Explainability properties used in the <a>ListExplainabilities</a> operation. To get a complete set of properties, call the <a>DescribeExplainability</a> operation, and provide the listed <code>ExplainabilityArn</code>.
 */
export class ExplainabilitySummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ExplainabilityArn" })
  explainabilityArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExplainabilityConfig" })
  @Type(() => ExplainabilityConfig)
  explainabilityConfig?: ExplainabilityConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ExplainabilityName" })
  explainabilityName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceArn" })
  resourceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;
}
