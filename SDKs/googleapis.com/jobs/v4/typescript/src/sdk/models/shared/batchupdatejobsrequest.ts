/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { JobInput } from "./job";
import { Expose, Type } from "class-transformer";

/**
 * Request to update a batch of jobs.
 */
export class BatchUpdateJobsRequestInput extends SpeakeasyBase {
  /**
   * Required. The jobs to be updated. A maximum of 200 jobs can be updated in a batch.
   */
  @SpeakeasyMetadata({ elemType: JobInput })
  @Expose({ name: "jobs" })
  @Type(() => JobInput)
  jobs?: JobInput[];

  /**
   * Strongly recommended for the best service experience. Be aware that it will also increase latency when checking the status of a batch operation. If update_mask is provided, only the specified fields in Job are updated. Otherwise all the fields are updated. A field mask to restrict the fields that are updated. Only top level fields of Job are supported. If update_mask is provided, The Job inside JobResult will only contains fields that is updated, plus the Id of the Job. Otherwise, Job will include all fields, which can yield a very large response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateMask" })
  updateMask?: string;
}
