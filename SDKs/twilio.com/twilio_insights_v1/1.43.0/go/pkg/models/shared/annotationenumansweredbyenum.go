// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AnnotationEnumAnsweredByEnum string

const (
	AnnotationEnumAnsweredByEnumUnknownAnsweredBy AnnotationEnumAnsweredByEnum = "unknown_answered_by"
	AnnotationEnumAnsweredByEnumHuman             AnnotationEnumAnsweredByEnum = "human"
	AnnotationEnumAnsweredByEnumMachine           AnnotationEnumAnsweredByEnum = "machine"
)

func (e AnnotationEnumAnsweredByEnum) ToPointer() *AnnotationEnumAnsweredByEnum {
	return &e
}

func (e *AnnotationEnumAnsweredByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unknown_answered_by":
		fallthrough
	case "human":
		fallthrough
	case "machine":
		*e = AnnotationEnumAnsweredByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnnotationEnumAnsweredByEnum: %v", v)
	}
}
