// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateDirectoryXAmzTargetEnum
type CreateDirectoryXAmzTargetEnum string

const (
	CreateDirectoryXAmzTargetEnumDirectoryService20150416CreateDirectory CreateDirectoryXAmzTargetEnum = "DirectoryService_20150416.CreateDirectory"
)

func (e *CreateDirectoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DirectoryService_20150416.CreateDirectory":
		*e = CreateDirectoryXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDirectoryXAmzTargetEnum: %s", s)
	}
}

type CreateDirectoryHeaders struct {
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateDirectoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateDirectoryRequest struct {
	Headers CreateDirectoryHeaders
	Request shared.CreateDirectoryRequest `request:"mediaType=application/json"`
}

type CreateDirectoryResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// Success
	CreateDirectoryResult *shared.CreateDirectoryResult
	// DirectoryLimitExceededException
	DirectoryLimitExceededException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
}
