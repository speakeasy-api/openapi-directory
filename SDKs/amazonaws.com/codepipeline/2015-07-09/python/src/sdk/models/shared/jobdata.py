"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import actionconfiguration as shared_actionconfiguration
from ..shared import actiontypeid as shared_actiontypeid
from ..shared import artifact as shared_artifact
from ..shared import awssessioncredentials as shared_awssessioncredentials
from ..shared import encryptionkey as shared_encryptionkey
from ..shared import pipelinecontext as shared_pipelinecontext
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobData:
    r"""Represents other information about a job required for a job worker to complete the job."""
    
    action_configuration: Optional[shared_actionconfiguration.ActionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionConfiguration'), 'exclude': lambda f: f is None }})  
    action_type_id: Optional[shared_actiontypeid.ActionTypeID] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionTypeId'), 'exclude': lambda f: f is None }})  
    artifact_credentials: Optional[shared_awssessioncredentials.AWSSessionCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('artifactCredentials'), 'exclude': lambda f: f is None }})  
    continuation_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('continuationToken'), 'exclude': lambda f: f is None }})  
    encryption_key: Optional[shared_encryptionkey.EncryptionKey] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encryptionKey'), 'exclude': lambda f: f is None }})  
    input_artifacts: Optional[list[shared_artifact.Artifact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputArtifacts'), 'exclude': lambda f: f is None }})  
    output_artifacts: Optional[list[shared_artifact.Artifact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputArtifacts'), 'exclude': lambda f: f is None }})  
    pipeline_context: Optional[shared_pipelinecontext.PipelineContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pipelineContext'), 'exclude': lambda f: f is None }})  
    