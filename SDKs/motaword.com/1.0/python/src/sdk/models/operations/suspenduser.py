"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import operationstatus as shared_operationstatus
from ..shared import suspenduserrequest as shared_suspenduserrequest
from typing import Optional


@dataclasses.dataclass
class SuspendUserSecurity:
    
    mwo_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class SuspendUserRequest:
    
    user_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})
    r"""User ID"""  
    suspend_user_request: Optional[shared_suspenduserrequest.SuspendUserRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class SuspendUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""UserNotFound"""  
    operation_status: Optional[shared_operationstatus.OperationStatus] = dataclasses.field(default=None)
    r"""Suspended user account."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    