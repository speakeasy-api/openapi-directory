/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GdataBlobstore2Info } from "./gdatablobstore2info";
import { GdataObjectId } from "./gdataobjectid";

/**
 * Describes what the field reference contains.
 */
export enum GdataCompositeMediaReferenceTypeEnum {
  Path = "PATH",
  BlobRef = "BLOB_REF",
  Inline = "INLINE",
  BigstoreRef = "BIGSTORE_REF",
  CosmoBinaryReference = "COSMO_BINARY_REFERENCE",
}

/**
 * A sequence of media data references representing composite data. Introduced to support Bigstore composite objects. For details, visit http://go/bigstore-composites.
 */
export class GdataCompositeMedia extends SpeakeasyBase {
  /**
   * Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For now, any v2 blob will also be represented in this field as v1 BlobRef.
   */
  @SpeakeasyMetadata()
  blobRef?: string;

  /**
   * Information to read/write to blobstore2.
   */
  @SpeakeasyMetadata()
  blobstore2Info?: GdataBlobstore2Info;

  /**
   * A binary data reference for a media download. Serves as a technology-agnostic binary reference in some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support JavaScript. This prevents us from including the actual type of this field.
   */
  @SpeakeasyMetadata()
  cosmoBinaryReference?: string;

  /**
   * crc32.c hash for the payload.
   */
  @SpeakeasyMetadata()
  crc32cHash?: number;

  /**
   * Media data, set if reference_type is INLINE
   */
  @SpeakeasyMetadata()
  inline?: string;

  /**
   * Size of the data, in bytes
   */
  @SpeakeasyMetadata()
  length?: string;

  /**
   * MD5 hash for the payload.
   */
  @SpeakeasyMetadata()
  md5Hash?: string;

  /**
   * This is a copy of the tech.blob.ObjectId proto, which could not be used directly here due to transitive closure issues with JavaScript support; see http://b/8801763.
   */
  @SpeakeasyMetadata()
  objectId?: GdataObjectId;

  /**
   * Path to the data, set if reference_type is PATH
   */
  @SpeakeasyMetadata()
  path?: string;

  /**
   * Describes what the field reference contains.
   */
  @SpeakeasyMetadata()
  referenceType?: GdataCompositeMediaReferenceTypeEnum;

  /**
   * SHA-1 hash for the payload.
   */
  @SpeakeasyMetadata()
  sha1Hash?: string;
}
