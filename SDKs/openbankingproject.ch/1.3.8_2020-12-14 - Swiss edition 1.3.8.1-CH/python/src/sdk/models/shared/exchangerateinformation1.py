"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ExchangeRateInformation1RateTypeEnum(str, Enum):
    SPOT = 'SPOT'
    SALE = 'SALE'
    AGRD = 'AGRD'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExchangeRateInformation1:
    r"""as in ISO pain.001.001.03.ch.02 ExchangeRateInformation1"""
    
    contract_identification: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractIdentification'), 'exclude': lambda f: f is None }})  
    exchange_rate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exchangeRate'), 'exclude': lambda f: f is None }})  
    rate_type: Optional[ExchangeRateInformation1RateTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rateType'), 'exclude': lambda f: f is None }})  
    