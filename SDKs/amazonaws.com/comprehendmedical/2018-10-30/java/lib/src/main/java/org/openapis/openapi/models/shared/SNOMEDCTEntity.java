/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SNOMEDCTEntity -  The collection of medical entities extracted from the input text and their associated information. For each entity, the response provides the entity text, the entity category, where the entity text begins and ends, and the level of confidence that Comprehend Medical has in the detection and analysis. Attributes and traits of the entity are also returned. 
 */
public class SNOMEDCTEntity {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Attributes")
    public SNOMEDCTAttribute[] attributes;

    public SNOMEDCTEntity withAttributes(SNOMEDCTAttribute[] attributes) {
        this.attributes = attributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BeginOffset")
    public Long beginOffset;

    public SNOMEDCTEntity withBeginOffset(Long beginOffset) {
        this.beginOffset = beginOffset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Category")
    public SNOMEDCTEntityCategoryEnum category;

    public SNOMEDCTEntity withCategory(SNOMEDCTEntityCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EndOffset")
    public Long endOffset;

    public SNOMEDCTEntity withEndOffset(Long endOffset) {
        this.endOffset = endOffset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Long id;

    public SNOMEDCTEntity withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SNOMEDCTConcepts")
    public SNOMEDCTConcept[] snomedctConcepts;

    public SNOMEDCTEntity withSNOMEDCTConcepts(SNOMEDCTConcept[] snomedctConcepts) {
        this.snomedctConcepts = snomedctConcepts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Score")
    public Float score;

    public SNOMEDCTEntity withScore(Float score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Text")
    public String text;

    public SNOMEDCTEntity withText(String text) {
        this.text = text;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Traits")
    public SNOMEDCTTrait[] traits;

    public SNOMEDCTEntity withTraits(SNOMEDCTTrait[] traits) {
        this.traits = traits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public SNOMEDCTEntityTypeEnum type;

    public SNOMEDCTEntity withType(SNOMEDCTEntityTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public SNOMEDCTEntity(){}
}
