"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MitreAttackAdditionalTacticsEnum(str, Enum):
    TACTIC_UNSPECIFIED = 'TACTIC_UNSPECIFIED'
    RECONNAISSANCE = 'RECONNAISSANCE'
    RESOURCE_DEVELOPMENT = 'RESOURCE_DEVELOPMENT'
    INITIAL_ACCESS = 'INITIAL_ACCESS'
    EXECUTION = 'EXECUTION'
    PERSISTENCE = 'PERSISTENCE'
    PRIVILEGE_ESCALATION = 'PRIVILEGE_ESCALATION'
    DEFENSE_EVASION = 'DEFENSE_EVASION'
    CREDENTIAL_ACCESS = 'CREDENTIAL_ACCESS'
    DISCOVERY = 'DISCOVERY'
    LATERAL_MOVEMENT = 'LATERAL_MOVEMENT'
    COLLECTION = 'COLLECTION'
    COMMAND_AND_CONTROL = 'COMMAND_AND_CONTROL'
    EXFILTRATION = 'EXFILTRATION'
    IMPACT = 'IMPACT'

class MitreAttackAdditionalTechniquesEnum(str, Enum):
    TECHNIQUE_UNSPECIFIED = 'TECHNIQUE_UNSPECIFIED'
    ACTIVE_SCANNING = 'ACTIVE_SCANNING'
    SCANNING_IP_BLOCKS = 'SCANNING_IP_BLOCKS'
    INGRESS_TOOL_TRANSFER = 'INGRESS_TOOL_TRANSFER'
    NATIVE_API = 'NATIVE_API'
    SHARED_MODULES = 'SHARED_MODULES'
    COMMAND_AND_SCRIPTING_INTERPRETER = 'COMMAND_AND_SCRIPTING_INTERPRETER'
    UNIX_SHELL = 'UNIX_SHELL'
    RESOURCE_HIJACKING = 'RESOURCE_HIJACKING'
    PROXY = 'PROXY'
    EXTERNAL_PROXY = 'EXTERNAL_PROXY'
    MULTI_HOP_PROXY = 'MULTI_HOP_PROXY'
    DYNAMIC_RESOLUTION = 'DYNAMIC_RESOLUTION'
    UNSECURED_CREDENTIALS = 'UNSECURED_CREDENTIALS'
    VALID_ACCOUNTS = 'VALID_ACCOUNTS'
    LOCAL_ACCOUNTS = 'LOCAL_ACCOUNTS'
    CLOUD_ACCOUNTS = 'CLOUD_ACCOUNTS'
    NETWORK_DENIAL_OF_SERVICE = 'NETWORK_DENIAL_OF_SERVICE'
    PERMISSION_GROUPS_DISCOVERY = 'PERMISSION_GROUPS_DISCOVERY'
    CLOUD_GROUPS = 'CLOUD_GROUPS'
    EXFILTRATION_OVER_WEB_SERVICE = 'EXFILTRATION_OVER_WEB_SERVICE'
    EXFILTRATION_TO_CLOUD_STORAGE = 'EXFILTRATION_TO_CLOUD_STORAGE'
    ACCOUNT_MANIPULATION = 'ACCOUNT_MANIPULATION'
    SSH_AUTHORIZED_KEYS = 'SSH_AUTHORIZED_KEYS'
    CREATE_OR_MODIFY_SYSTEM_PROCESS = 'CREATE_OR_MODIFY_SYSTEM_PROCESS'
    STEAL_WEB_SESSION_COOKIE = 'STEAL_WEB_SESSION_COOKIE'
    MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE = 'MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE'
    EXPLOIT_PUBLIC_FACING_APPLICATION = 'EXPLOIT_PUBLIC_FACING_APPLICATION'
    MODIFY_AUTHENTICATION_PROCESS = 'MODIFY_AUTHENTICATION_PROCESS'
    DATA_DESTRUCTION = 'DATA_DESTRUCTION'
    DOMAIN_POLICY_MODIFICATION = 'DOMAIN_POLICY_MODIFICATION'
    IMPAIR_DEFENSES = 'IMPAIR_DEFENSES'
    NETWORK_SERVICE_DISCOVERY = 'NETWORK_SERVICE_DISCOVERY'
    ACCESS_TOKEN_MANIPULATION = 'ACCESS_TOKEN_MANIPULATION'
    ABUSE_ELEVATION_CONTROL_MECHANISM = 'ABUSE_ELEVATION_CONTROL_MECHANISM'
    DEFAULT_ACCOUNTS = 'DEFAULT_ACCOUNTS'

class MitreAttackPrimaryTacticEnum(str, Enum):
    r"""The MITRE ATT&CK tactic most closely represented by this finding, if any."""
    TACTIC_UNSPECIFIED = 'TACTIC_UNSPECIFIED'
    RECONNAISSANCE = 'RECONNAISSANCE'
    RESOURCE_DEVELOPMENT = 'RESOURCE_DEVELOPMENT'
    INITIAL_ACCESS = 'INITIAL_ACCESS'
    EXECUTION = 'EXECUTION'
    PERSISTENCE = 'PERSISTENCE'
    PRIVILEGE_ESCALATION = 'PRIVILEGE_ESCALATION'
    DEFENSE_EVASION = 'DEFENSE_EVASION'
    CREDENTIAL_ACCESS = 'CREDENTIAL_ACCESS'
    DISCOVERY = 'DISCOVERY'
    LATERAL_MOVEMENT = 'LATERAL_MOVEMENT'
    COLLECTION = 'COLLECTION'
    COMMAND_AND_CONTROL = 'COMMAND_AND_CONTROL'
    EXFILTRATION = 'EXFILTRATION'
    IMPACT = 'IMPACT'

class MitreAttackPrimaryTechniquesEnum(str, Enum):
    TECHNIQUE_UNSPECIFIED = 'TECHNIQUE_UNSPECIFIED'
    ACTIVE_SCANNING = 'ACTIVE_SCANNING'
    SCANNING_IP_BLOCKS = 'SCANNING_IP_BLOCKS'
    INGRESS_TOOL_TRANSFER = 'INGRESS_TOOL_TRANSFER'
    NATIVE_API = 'NATIVE_API'
    SHARED_MODULES = 'SHARED_MODULES'
    COMMAND_AND_SCRIPTING_INTERPRETER = 'COMMAND_AND_SCRIPTING_INTERPRETER'
    UNIX_SHELL = 'UNIX_SHELL'
    RESOURCE_HIJACKING = 'RESOURCE_HIJACKING'
    PROXY = 'PROXY'
    EXTERNAL_PROXY = 'EXTERNAL_PROXY'
    MULTI_HOP_PROXY = 'MULTI_HOP_PROXY'
    DYNAMIC_RESOLUTION = 'DYNAMIC_RESOLUTION'
    UNSECURED_CREDENTIALS = 'UNSECURED_CREDENTIALS'
    VALID_ACCOUNTS = 'VALID_ACCOUNTS'
    LOCAL_ACCOUNTS = 'LOCAL_ACCOUNTS'
    CLOUD_ACCOUNTS = 'CLOUD_ACCOUNTS'
    NETWORK_DENIAL_OF_SERVICE = 'NETWORK_DENIAL_OF_SERVICE'
    PERMISSION_GROUPS_DISCOVERY = 'PERMISSION_GROUPS_DISCOVERY'
    CLOUD_GROUPS = 'CLOUD_GROUPS'
    EXFILTRATION_OVER_WEB_SERVICE = 'EXFILTRATION_OVER_WEB_SERVICE'
    EXFILTRATION_TO_CLOUD_STORAGE = 'EXFILTRATION_TO_CLOUD_STORAGE'
    ACCOUNT_MANIPULATION = 'ACCOUNT_MANIPULATION'
    SSH_AUTHORIZED_KEYS = 'SSH_AUTHORIZED_KEYS'
    CREATE_OR_MODIFY_SYSTEM_PROCESS = 'CREATE_OR_MODIFY_SYSTEM_PROCESS'
    STEAL_WEB_SESSION_COOKIE = 'STEAL_WEB_SESSION_COOKIE'
    MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE = 'MODIFY_CLOUD_COMPUTE_INFRASTRUCTURE'
    EXPLOIT_PUBLIC_FACING_APPLICATION = 'EXPLOIT_PUBLIC_FACING_APPLICATION'
    MODIFY_AUTHENTICATION_PROCESS = 'MODIFY_AUTHENTICATION_PROCESS'
    DATA_DESTRUCTION = 'DATA_DESTRUCTION'
    DOMAIN_POLICY_MODIFICATION = 'DOMAIN_POLICY_MODIFICATION'
    IMPAIR_DEFENSES = 'IMPAIR_DEFENSES'
    NETWORK_SERVICE_DISCOVERY = 'NETWORK_SERVICE_DISCOVERY'
    ACCESS_TOKEN_MANIPULATION = 'ACCESS_TOKEN_MANIPULATION'
    ABUSE_ELEVATION_CONTROL_MECHANISM = 'ABUSE_ELEVATION_CONTROL_MECHANISM'
    DEFAULT_ACCOUNTS = 'DEFAULT_ACCOUNTS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MitreAttack:
    r"""MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org"""
    
    additional_tactics: Optional[list[MitreAttackAdditionalTacticsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalTactics'), 'exclude': lambda f: f is None }})
    r"""Additional MITRE ATT&CK tactics related to this finding, if any."""  
    additional_techniques: Optional[list[MitreAttackAdditionalTechniquesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalTechniques'), 'exclude': lambda f: f is None }})
    r"""Additional MITRE ATT&CK techniques related to this finding, if any, along with any of their respective parent techniques."""  
    primary_tactic: Optional[MitreAttackPrimaryTacticEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryTactic'), 'exclude': lambda f: f is None }})
    r"""The MITRE ATT&CK tactic most closely represented by this finding, if any."""  
    primary_techniques: Optional[list[MitreAttackPrimaryTechniquesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryTechniques'), 'exclude': lambda f: f is None }})
    r"""The MITRE ATT&CK technique most closely represented by this finding, if any. primary_techniques is a repeated field because there are multiple levels of MITRE ATT&CK techniques. If the technique most closely represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`), both the sub-technique and its parent technique(s) will be listed (e.g. `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`)."""  
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""The MITRE ATT&CK version referenced by the above fields. E.g. \\"8\\"."""  
    