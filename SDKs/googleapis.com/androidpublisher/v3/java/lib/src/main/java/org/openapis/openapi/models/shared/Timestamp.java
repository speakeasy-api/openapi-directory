/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Timestamp - A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970.
 */
public class Timestamp {
    /**
     * Non-negative fractions of a second at nanosecond resolution. Must be from 0 to 999,999,999 inclusive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nanos")
    public Integer nanos;
    public Timestamp withNanos(Integer nanos) {
        this.nanos = nanos;
        return this;
    }
    
    /**
     * Represents seconds of UTC time since Unix epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seconds")
    public String seconds;
    public Timestamp withSeconds(String seconds) {
        this.seconds = seconds;
        return this;
    }
    
}
