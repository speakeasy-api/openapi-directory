<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class JobStatistics2
{
	#[\JMS\Serializer\Annotation\SerializedName('biEngineStatistics')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BiEngineStatistics')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BiEngineStatistics $biEngineStatistics = null;
    
    /**
     * [Output only] Billing tier for the job.
     * 
     * @var ?int $billingTier
     */
	#[\JMS\Serializer\Annotation\SerializedName('billingTier')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $billingTier = null;
    
    /**
     * [Output only] Whether the query result was fetched from the query cache.
     * 
     * @var ?bool $cacheHit
     */
	#[\JMS\Serializer\Annotation\SerializedName('cacheHit')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cacheHit = null;
    
    /**
     * [Output only] [Preview] The number of row access policies affected by a DDL statement. Present only for DROP ALL ROW ACCESS POLICIES queries.
     * 
     * @var ?string $ddlAffectedRowAccessPolicyCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('ddlAffectedRowAccessPolicyCount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ddlAffectedRowAccessPolicyCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ddlDestinationTable')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TableReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TableReference $ddlDestinationTable = null;
    
    /**
     * The DDL operation performed, possibly dependent on the pre-existence of the DDL target. Possible values (new values might be added in the future): "CREATE": The query created the DDL target. "SKIP": No-op. Example cases: the query is CREATE TABLE IF NOT EXISTS while the table already exists, or the query is DROP TABLE IF EXISTS while the table does not exist. "REPLACE": The query replaced the DDL target. Example case: the query is CREATE OR REPLACE TABLE, and the table already exists. "DROP": The query deleted the DDL target.
     * 
     * @var ?string $ddlOperationPerformed
     */
	#[\JMS\Serializer\Annotation\SerializedName('ddlOperationPerformed')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ddlOperationPerformed = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ddlTargetDataset')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DatasetReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DatasetReference $ddlTargetDataset = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ddlTargetRoutine')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RoutineReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RoutineReference $ddlTargetRoutine = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ddlTargetRowAccessPolicy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RowAccessPolicyReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RowAccessPolicyReference $ddlTargetRowAccessPolicy = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ddlTargetTable')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TableReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TableReference $ddlTargetTable = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('dmlStats')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DmlStatistics')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DmlStatistics $dmlStats = null;
    
    /**
     * [Output only] The original estimate of bytes processed for the job.
     * 
     * @var ?string $estimatedBytesProcessed
     */
	#[\JMS\Serializer\Annotation\SerializedName('estimatedBytesProcessed')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $estimatedBytesProcessed = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('mlStatistics')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MlStatistics')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MlStatistics $mlStatistics = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('modelTraining')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BigQueryModelTraining')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BigQueryModelTraining $modelTraining = null;
    
    /**
     * [Output only, Beta] Deprecated; do not use.
     * 
     * @var ?int $modelTrainingCurrentIteration
     */
	#[\JMS\Serializer\Annotation\SerializedName('modelTrainingCurrentIteration')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $modelTrainingCurrentIteration = null;
    
    /**
     * [Output only, Beta] Deprecated; do not use.
     * 
     * @var ?string $modelTrainingExpectedTotalIteration
     */
	#[\JMS\Serializer\Annotation\SerializedName('modelTrainingExpectedTotalIteration')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $modelTrainingExpectedTotalIteration = null;
    
    /**
     * [Output only] The number of rows affected by a DML statement. Present only for DML statements INSERT, UPDATE or DELETE.
     * 
     * @var ?string $numDmlAffectedRows
     */
	#[\JMS\Serializer\Annotation\SerializedName('numDmlAffectedRows')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $numDmlAffectedRows = null;
    
    /**
     * [Output only] Describes execution plan for the query.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ExplainQueryStage> $queryPlan
     */
	#[\JMS\Serializer\Annotation\SerializedName('queryPlan')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ExplainQueryStage>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $queryPlan = null;
    
    /**
     * [Output only] Referenced routines (persistent user-defined functions and stored procedures) for the job.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RoutineReference> $referencedRoutines
     */
	#[\JMS\Serializer\Annotation\SerializedName('referencedRoutines')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RoutineReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $referencedRoutines = null;
    
    /**
     * [Output only] Referenced tables for the job. Queries that reference more than 50 tables will not have a complete list.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TableReference> $referencedTables
     */
	#[\JMS\Serializer\Annotation\SerializedName('referencedTables')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TableReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $referencedTables = null;
    
    /**
     * [Output only] Job resource usage breakdown by reservation.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\JobStatistics2ReservationUsage> $reservationUsage
     */
	#[\JMS\Serializer\Annotation\SerializedName('reservationUsage')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\JobStatistics2ReservationUsage>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $reservationUsage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('schema')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TableSchema')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TableSchema $schema = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('searchStatistics')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SearchStatistics')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SearchStatistics $searchStatistics = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sparkStatistics')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SparkStatistics')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SparkStatistics $sparkStatistics = null;
    
    /**
     * The type of query statement, if valid. Possible values (new values might be added in the future): "SELECT": SELECT query. "INSERT": INSERT query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language. "UPDATE": UPDATE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language. "DELETE": DELETE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language. "MERGE": MERGE query; see https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language. "ALTER_TABLE": ALTER TABLE query. "ALTER_VIEW": ALTER VIEW query. "ASSERT": ASSERT condition AS 'description'. "CREATE_FUNCTION": CREATE FUNCTION query. "CREATE_MODEL": CREATE [OR REPLACE] MODEL ... AS SELECT ... . "CREATE_PROCEDURE": CREATE PROCEDURE query. "CREATE_TABLE": CREATE [OR REPLACE] TABLE without AS SELECT. "CREATE_TABLE_AS_SELECT": CREATE [OR REPLACE] TABLE ... AS SELECT ... . "CREATE_VIEW": CREATE [OR REPLACE] VIEW ... AS SELECT ... . "DROP_FUNCTION" : DROP FUNCTION query. "DROP_PROCEDURE": DROP PROCEDURE query. "DROP_TABLE": DROP TABLE query. "DROP_VIEW": DROP VIEW query.
     * 
     * @var ?string $statementType
     */
	#[\JMS\Serializer\Annotation\SerializedName('statementType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statementType = null;
    
    /**
     * [Output only] [Beta] Describes a timeline of job execution.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\QueryTimelineSample> $timeline
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeline')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\QueryTimelineSample>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $timeline = null;
    
    /**
     * [Output only] Total bytes billed for the job.
     * 
     * @var ?string $totalBytesBilled
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalBytesBilled')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalBytesBilled = null;
    
    /**
     * [Output only] Total bytes processed for the job.
     * 
     * @var ?string $totalBytesProcessed
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalBytesProcessed')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalBytesProcessed = null;
    
    /**
     * [Output only] For dry-run jobs, totalBytesProcessed is an estimate and this field specifies the accuracy of the estimate. Possible values can be: UNKNOWN: accuracy of the estimate is unknown. PRECISE: estimate is precise. LOWER_BOUND: estimate is lower bound of what the query would cost. UPPER_BOUND: estimate is upper bound of what the query would cost.
     * 
     * @var ?string $totalBytesProcessedAccuracy
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalBytesProcessedAccuracy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalBytesProcessedAccuracy = null;
    
    /**
     * [Output only] Total number of partitions processed from all partitioned tables referenced in the job.
     * 
     * @var ?string $totalPartitionsProcessed
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalPartitionsProcessed')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalPartitionsProcessed = null;
    
    /**
     * [Output only] Slot-milliseconds for the job.
     * 
     * @var ?string $totalSlotMs
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalSlotMs')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalSlotMs = null;
    
    /**
     * [Output-only] Total bytes transferred for cross-cloud queries such as Cross Cloud Transfer and CREATE TABLE AS SELECT (CTAS).
     * 
     * @var ?string $transferredBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferredBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transferredBytes = null;
    
    /**
     * Standard SQL only: list of undeclared query parameters detected during a dry run validation.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\QueryParameter> $undeclaredQueryParameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('undeclaredQueryParameters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\QueryParameter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $undeclaredQueryParameters = null;
    
	public function __construct()
	{
		$this->biEngineStatistics = null;
		$this->billingTier = null;
		$this->cacheHit = null;
		$this->ddlAffectedRowAccessPolicyCount = null;
		$this->ddlDestinationTable = null;
		$this->ddlOperationPerformed = null;
		$this->ddlTargetDataset = null;
		$this->ddlTargetRoutine = null;
		$this->ddlTargetRowAccessPolicy = null;
		$this->ddlTargetTable = null;
		$this->dmlStats = null;
		$this->estimatedBytesProcessed = null;
		$this->mlStatistics = null;
		$this->modelTraining = null;
		$this->modelTrainingCurrentIteration = null;
		$this->modelTrainingExpectedTotalIteration = null;
		$this->numDmlAffectedRows = null;
		$this->queryPlan = null;
		$this->referencedRoutines = null;
		$this->referencedTables = null;
		$this->reservationUsage = null;
		$this->schema = null;
		$this->searchStatistics = null;
		$this->sparkStatistics = null;
		$this->statementType = null;
		$this->timeline = null;
		$this->totalBytesBilled = null;
		$this->totalBytesProcessed = null;
		$this->totalBytesProcessedAccuracy = null;
		$this->totalPartitionsProcessed = null;
		$this->totalSlotMs = null;
		$this->transferredBytes = null;
		$this->undeclaredQueryParameters = null;
	}
}
