/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GitConfig } from "./gitconfig";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeCodeRepositoryOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CodeRepositoryArn" })
  codeRepositoryArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CodeRepositoryName" })
  codeRepositoryName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "GitConfig" })
  @Type(() => GitConfig)
  gitConfig?: GitConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime: Date;
}
