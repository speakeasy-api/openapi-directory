"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import segment as shared_segment
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetAPIV2SegmentsSecurity:
    
    cd_oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetAPIV2SegmentsOrderByIDEnum(str, Enum):
    r"""The sort order of the list of segments, based on segment ID. If unspecified, the segments are returned in random order. If using paging to iterate through the results, sort order should be specified."""
    ASC = 'asc'
    DESC = 'desc'


@dataclasses.dataclass
class GetAPIV2SegmentsRequest:
    
    episode_id: int = dataclasses.field(metadata={'query_param': { 'field_name': 'episodeId', 'style': 'form', 'explode': True }})
    r"""The ID of the episode that owns the segment."""  
    order_by_id: Optional[GetAPIV2SegmentsOrderByIDEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'orderById', 'style': 'form', 'explode': True }})
    r"""The sort order of the list of segments, based on segment ID. If unspecified, the segments are returned in random order. If using paging to iterate through the results, sort order should be specified."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': True }})
    r"""The number of items to return. Must be between 0 and 500, inclusive."""  
    page_start: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageStart', 'style': 'form', 'explode': True }})
    r"""The start page of the results to return. The first item is indexed at 0."""  
    segment_number: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'segmentNumber', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class GetAPIV2SegmentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Authorization failed, or the user is not permitted to view this episode or its segments."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    segments: Optional[list[shared_segment.Segment]] = dataclasses.field(default=None)
    r"""The segments matching the query parameters"""  
    