/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The context of the comment (for inline/contextualized comments). A context will include all the information related to the location of the comment (i.e. score parts, range of measure, time position).
 *
 * @remarks
 *
 */
export class ScoreCommentContext extends SpeakeasyBase {
  /**
   * The list of measure UUIds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "measureUuids" })
  measureUuids: string[];

  /**
   * The unique identifier (UUID) of the score part
   */
  @SpeakeasyMetadata()
  @Expose({ name: "partUuid" })
  partUuid: string;

  /**
   * (Deprecated, use `staffUuid`) The identififer of the staff
   */
  @SpeakeasyMetadata()
  @Expose({ name: "staffIdx" })
  staffIdx?: number;

  /**
   * The unique identififer (UUID) of the staff
   */
  @SpeakeasyMetadata()
  @Expose({ name: "staffUuid" })
  staffUuid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startDpq" })
  startDpq: number;

  @SpeakeasyMetadata()
  @Expose({ name: "startTimePos" })
  startTimePos: number;

  @SpeakeasyMetadata()
  @Expose({ name: "stopDpq" })
  stopDpq: number;

  @SpeakeasyMetadata()
  @Expose({ name: "stopTimePos" })
  stopTimePos: number;
}
