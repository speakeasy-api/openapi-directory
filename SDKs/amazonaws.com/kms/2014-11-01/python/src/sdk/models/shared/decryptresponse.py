"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import encryptionalgorithmspec_enum as shared_encryptionalgorithmspec_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DecryptResponse:
    r"""Success"""
    
    encryption_algorithm: Optional[shared_encryptionalgorithmspec_enum.EncryptionAlgorithmSpecEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EncryptionAlgorithm'), 'exclude': lambda f: f is None }})  
    key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeyId'), 'exclude': lambda f: f is None }})  
    plaintext: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Plaintext'), 'exclude': lambda f: f is None }})  
    