"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datamodelconfiguration as shared_datamodelconfiguration
from ..shared import datasourceconfiguration as shared_datasourceconfiguration
from ..shared import reportconfiguration as shared_reportconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateBatchLoadTaskRequest:
    
    data_source_configuration: shared_datasourceconfiguration.DataSourceConfiguration = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataSourceConfiguration') }})  
    report_configuration: shared_reportconfiguration.ReportConfiguration = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReportConfiguration') }})
    r"""Report configuration for a batch load task. This contains details about where error reports are stored."""  
    target_database_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetDatabaseName') }})  
    target_table_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetTableName') }})  
    client_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientToken'), 'exclude': lambda f: f is None }})  
    data_model_configuration: Optional[shared_datamodelconfiguration.DataModelConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataModelConfiguration'), 'exclude': lambda f: f is None }})
    r"""<p/>"""  
    record_version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecordVersion'), 'exclude': lambda f: f is None }})  
    