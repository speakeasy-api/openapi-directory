<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListversionsRequest
{
    /**
     * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
     * 
     * @var string $accept
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Accept')]
    public string $accept;
    
    /**
     * Type of the content being sent.
     * 
     * @var string $contentType
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Content-Type')]
    public string $contentType;
    
    /**
     * Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.
     * 
     * @var string $dataEntityName
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=dataEntityName')]
    public string $dataEntityName;
    
    /**
     * If `load` is true, the response will return only these specific fields
     * 
     * @var ?string $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public ?string $fields = null;
    
    /**
     * ID of the Document.
     * 
     * @var string $id
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=id')]
    public string $id;
    
    /**
     * If true, return all the fields in each version of the document
     * 
     * @var ?bool $load
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=load')]
    public ?bool $load = null;
    
	public function __construct()
	{
		$this->accept = "";
		$this->contentType = "";
		$this->dataEntityName = "";
		$this->fields = null;
		$this->id = "";
		$this->load = null;
	}
}
