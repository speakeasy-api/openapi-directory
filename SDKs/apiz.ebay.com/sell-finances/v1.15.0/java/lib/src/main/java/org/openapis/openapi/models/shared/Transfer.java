/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Transfer - This type is the base response type used by &lt;code&gt;TRANSFER&lt;/code&gt; transaction type that is returned in the response.
 */
public class Transfer {
    /**
     * This type provided details on the funding source for the transfer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fundingSource")
    public FundingSource fundingSource;
    public Transfer withFundingSource(FundingSource fundingSource) {
        this.fundingSource = fundingSource;
        return this;
    }
    
    /**
     * This timestamp indicates the date/time of the transfer. The following (UTC) format is used: &lt;code&gt;YYYY-MM-DDTHH:MM:SS.SSSZ&lt;/code&gt;. For example, &lt;code&gt;2020-08-04T19:09:02.768Z&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionDate")
    public String transactionDate;
    public Transfer withTransactionDate(String transactionDate) {
        this.transactionDate = transactionDate;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferAmount")
    public Amount transferAmount;
    public Transfer withTransferAmount(Amount transferAmount) {
        this.transferAmount = transferAmount;
        return this;
    }
    
    /**
     * This type is used by the &lt;b&gt;transferDetail&lt;/b&gt; container, which provides more details about the transfer and the charge(s) associated with the transfer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferDetail")
    public TransferDetail transferDetail;
    public Transfer withTransferDetail(TransferDetail transferDetail) {
        this.transferDetail = transferDetail;
        return this;
    }
    
    /**
     * The unique identifier of the &lt;code&gt;TRANSFER&lt;/code&gt; transaction type. This is the same value that was passed into the end of the call URI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferId")
    public String transferId;
    public Transfer withTransferId(String transferId) {
        this.transferId = transferId;
        return this;
    }
    
}
