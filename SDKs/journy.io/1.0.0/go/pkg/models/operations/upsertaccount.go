// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// UpsertAccountRequestBodyIdentification - Account identification requires an accountId, domain or both
type UpsertAccountRequestBodyIdentification struct {
	// Unique identifier for the account in your database
	AccountID *string `json:"accountId,omitempty"`
	// The domain associated with the account (e.g. acme-inc.com)
	Domain *string `json:"domain,omitempty"`
}

// UpsertAccountRequestBody - Update properties and/or members of an account
type UpsertAccountRequestBody struct {
	// Account identification requires an accountId, domain or both
	Identification UpsertAccountRequestBodyIdentification `json:"identification"`
	// The properties being set, possible values are strings, booleans, numbers and datetimes (ISO 8601)
	Properties map[string]interface{} `json:"properties,omitempty"`
}

type UpsertAccountRequest struct {
	Request UpsertAccountRequestBody `request:"mediaType=application/json"`
}

type UpsertAccount500ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// UpsertAccount500ApplicationJSON - The message specifies what is done
type UpsertAccount500ApplicationJSON struct {
	Message string                              `json:"message"`
	Meta    UpsertAccount500ApplicationJSONMeta `json:"meta"`
}

type UpsertAccount429ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// UpsertAccount429ApplicationJSON - The message specifies what is done
type UpsertAccount429ApplicationJSON struct {
	Message string                              `json:"message"`
	Meta    UpsertAccount429ApplicationJSONMeta `json:"meta"`
}

type UpsertAccount403ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// UpsertAccount403ApplicationJSON - The message specifies what is done
type UpsertAccount403ApplicationJSON struct {
	Message string                              `json:"message"`
	Meta    UpsertAccount403ApplicationJSONMeta `json:"meta"`
}

type UpsertAccount401ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// UpsertAccount401ApplicationJSON - The message specifies what is done
type UpsertAccount401ApplicationJSON struct {
	Message string                              `json:"message"`
	Meta    UpsertAccount401ApplicationJSONMeta `json:"meta"`
}

// UpsertAccount400ApplicationJSONErrorsParameters - All query-, header- and path- parameters that seemed incorrect
type UpsertAccount400ApplicationJSONErrorsParameters struct {
	Header map[string]string `json:"header,omitempty"`
	Path   map[string]string `json:"path,omitempty"`
	Query  map[string]string `json:"query,omitempty"`
}

// UpsertAccount400ApplicationJSONErrors - Map that sums up all received values that seemed incorrect
type UpsertAccount400ApplicationJSONErrors struct {
	// All input fields that seemed incorrect
	Fields map[string]string `json:"fields,omitempty"`
	// All query-, header- and path- parameters that seemed incorrect
	Parameters *UpsertAccount400ApplicationJSONErrorsParameters `json:"parameters,omitempty"`
}

type UpsertAccount400ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// UpsertAccount400ApplicationJSON - The message specifies what is done
type UpsertAccount400ApplicationJSON struct {
	// Map that sums up all received values that seemed incorrect
	Errors  UpsertAccount400ApplicationJSONErrors `json:"errors"`
	Message string                                `json:"message"`
	Meta    UpsertAccount400ApplicationJSONMeta   `json:"meta"`
}

type UpsertAccount201ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// UpsertAccount201ApplicationJSON - Specifies if any warnings occurred when validating the properties
type UpsertAccount201ApplicationJSON struct {
	Message string                              `json:"message"`
	Meta    UpsertAccount201ApplicationJSONMeta `json:"meta"`
	// If validation fails, specifies the property name and error message
	Rejected map[string]string `json:"rejected,omitempty"`
}

type UpsertAccountResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Account will be created
	UpsertAccount201ApplicationJSONObject *UpsertAccount201ApplicationJSON
	// Bad request, some fields or parameters are incorrect
	UpsertAccount400ApplicationJSONObject *UpsertAccount400ApplicationJSON
	// No API Key was provided or the key is not authorised to perform the action
	UpsertAccount401ApplicationJSONObject *UpsertAccount401ApplicationJSON
	// The API Key provided is currently not enabled
	UpsertAccount403ApplicationJSONObject *UpsertAccount403ApplicationJSON
	// Too many API requests were send
	UpsertAccount429ApplicationJSONObject *UpsertAccount429ApplicationJSON
	// An unexpected error occurred
	UpsertAccount500ApplicationJSONObject *UpsertAccount500ApplicationJSON
}
