<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetDeviceSwitchPortsStatuses200ApplicationJSONLldp - The Link Layer Discovery Protocol (LLDP) information of the connected device.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetDeviceSwitchPortsStatuses200ApplicationJSONLldp
{
    /**
     * The device's chassis ID.
     * 
     * @var ?string $chassisId
     */
	#[\JMS\Serializer\Annotation\SerializedName('chassisId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chassisId = null;
    
    /**
     * The device's management IP.
     * 
     * @var ?string $managementAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('managementAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $managementAddress = null;
    
    /**
     * The device's management VLAN.
     * 
     * @var ?int $managementVlan
     */
	#[\JMS\Serializer\Annotation\SerializedName('managementVlan')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $managementVlan = null;
    
    /**
     * Description of the port from which the LLDP packet was sent.
     * 
     * @var ?string $portDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('portDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $portDescription = null;
    
    /**
     * Identifies the port from which the LLDP packet was sent
     * 
     * @var ?string $portId
     */
	#[\JMS\Serializer\Annotation\SerializedName('portId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $portId = null;
    
    /**
     * The port's VLAN.
     * 
     * @var ?int $portVlan
     */
	#[\JMS\Serializer\Annotation\SerializedName('portVlan')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $portVlan = null;
    
    /**
     * Identifies the device type, which indicates the functional capabilities of the device.
     * 
     * @var ?string $systemCapabilities
     */
	#[\JMS\Serializer\Annotation\SerializedName('systemCapabilities')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $systemCapabilities = null;
    
    /**
     * The device's system description.
     * 
     * @var ?string $systemDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('systemDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $systemDescription = null;
    
    /**
     * The device's system name.
     * 
     * @var ?string $systemName
     */
	#[\JMS\Serializer\Annotation\SerializedName('systemName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $systemName = null;
    
	public function __construct()
	{
		$this->chassisId = null;
		$this->managementAddress = null;
		$this->managementVlan = null;
		$this->portDescription = null;
		$this->portId = null;
		$this->portVlan = null;
		$this->systemCapabilities = null;
		$this->systemDescription = null;
		$this->systemName = null;
	}
}
