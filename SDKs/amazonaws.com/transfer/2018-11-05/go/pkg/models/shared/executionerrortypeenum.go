// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExecutionErrorTypeEnum string

const (
	ExecutionErrorTypeEnumPermissionDenied    ExecutionErrorTypeEnum = "PERMISSION_DENIED"
	ExecutionErrorTypeEnumCustomStepFailed    ExecutionErrorTypeEnum = "CUSTOM_STEP_FAILED"
	ExecutionErrorTypeEnumThrottled           ExecutionErrorTypeEnum = "THROTTLED"
	ExecutionErrorTypeEnumAlreadyExists       ExecutionErrorTypeEnum = "ALREADY_EXISTS"
	ExecutionErrorTypeEnumNotFound            ExecutionErrorTypeEnum = "NOT_FOUND"
	ExecutionErrorTypeEnumBadRequest          ExecutionErrorTypeEnum = "BAD_REQUEST"
	ExecutionErrorTypeEnumTimeout             ExecutionErrorTypeEnum = "TIMEOUT"
	ExecutionErrorTypeEnumInternalServerError ExecutionErrorTypeEnum = "INTERNAL_SERVER_ERROR"
)

func (e ExecutionErrorTypeEnum) ToPointer() *ExecutionErrorTypeEnum {
	return &e
}

func (e *ExecutionErrorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PERMISSION_DENIED":
		fallthrough
	case "CUSTOM_STEP_FAILED":
		fallthrough
	case "THROTTLED":
		fallthrough
	case "ALREADY_EXISTS":
		fallthrough
	case "NOT_FOUND":
		fallthrough
	case "BAD_REQUEST":
		fallthrough
	case "TIMEOUT":
		fallthrough
	case "INTERNAL_SERVER_ERROR":
		*e = ExecutionErrorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecutionErrorTypeEnum: %v", v)
	}
}
