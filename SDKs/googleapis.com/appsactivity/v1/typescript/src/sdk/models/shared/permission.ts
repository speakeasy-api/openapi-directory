/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { User } from "./user";
import { Expose, Type } from "class-transformer";

/**
 * Indicates the Google Drive permissions role. The role determines a user's ability to read, write, or comment on the file.
 */
export enum PermissionRoleEnum {
  Commenter = "commenter",
  FileOrganizer = "fileOrganizer",
  Owner = "owner",
  PublishedReader = "publishedReader",
  Reader = "reader",
  Writer = "writer",
}

/**
 * Indicates how widely permissions are granted.
 */
export enum PermissionTypeEnum {
  Anyone = "anyone",
  Domain = "domain",
  Group = "group",
  User = "user",
}

/**
 * Contains information about the permissions and type of access allowed with regards to a Google Drive object. This is a subset of the fields contained in a corresponding Drive Permissions object.
 */
export class Permission extends SpeakeasyBase {
  /**
   * The name of the user or group the permission applies to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The ID for this permission. Corresponds to the Drive API's permission ID returned as part of the Drive Permissions resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissionId" })
  permissionId?: string;

  /**
   * Indicates the Google Drive permissions role. The role determines a user's ability to read, write, or comment on the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: PermissionRoleEnum;

  /**
   * Indicates how widely permissions are granted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: PermissionTypeEnum;

  /**
   * A representation of a user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => User)
  user?: User;

  /**
   * Whether the permission requires a link to the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "withLink" })
  withLink?: boolean;
}
