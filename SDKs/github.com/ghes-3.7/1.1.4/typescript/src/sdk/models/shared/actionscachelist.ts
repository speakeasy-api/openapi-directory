/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class ActionsCacheListActionsCaches extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_accessed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastAccessedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ref" })
  ref?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "size_in_bytes" })
  sizeInBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}

/**
 * Repository actions caches
 */
export class ActionsCacheList extends SpeakeasyBase {
  /**
   * Array of caches
   */
  @SpeakeasyMetadata({ elemType: ActionsCacheListActionsCaches })
  @Expose({ name: "actions_caches" })
  @Type(() => ActionsCacheListActionsCaches)
  actionsCaches: ActionsCacheListActionsCaches[];

  /**
   * Total number of caches
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_count" })
  totalCount: number;
}
