// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeletePlatformVersionActionEnum
type GETDeletePlatformVersionActionEnum string

const (
	GETDeletePlatformVersionActionEnumDeletePlatformVersion GETDeletePlatformVersionActionEnum = "DeletePlatformVersion"
)

func (e *GETDeletePlatformVersionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeletePlatformVersion":
		*e = GETDeletePlatformVersionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeletePlatformVersionActionEnum: %s", s)
	}
}

// GETDeletePlatformVersionVersionEnum
type GETDeletePlatformVersionVersionEnum string

const (
	GETDeletePlatformVersionVersionEnumTwoThousandAndTen1201 GETDeletePlatformVersionVersionEnum = "2010-12-01"
)

func (e *GETDeletePlatformVersionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETDeletePlatformVersionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeletePlatformVersionVersionEnum: %s", s)
	}
}

type GETDeletePlatformVersionQueryParams struct {
	Action GETDeletePlatformVersionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ARN of the version of the custom platform.
	PlatformArn *string                             `queryParam:"style=form,explode=true,name=PlatformArn"`
	Version     GETDeletePlatformVersionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeletePlatformVersionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeletePlatformVersionRequest struct {
	QueryParams GETDeletePlatformVersionQueryParams
	Headers     GETDeletePlatformVersionHeaders
}

type GETDeletePlatformVersionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
