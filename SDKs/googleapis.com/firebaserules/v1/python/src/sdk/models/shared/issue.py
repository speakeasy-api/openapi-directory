"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sourceposition as shared_sourceposition
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class IssueSeverityEnum(str, Enum):
    r"""The severity of the issue."""
    SEVERITY_UNSPECIFIED = 'SEVERITY_UNSPECIFIED'
    DEPRECATION = 'DEPRECATION'
    WARNING = 'WARNING'
    ERROR = 'ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Issue:
    r"""Issues include warnings, errors, and deprecation notices."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Short error description."""  
    severity: Optional[IssueSeverityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('severity'), 'exclude': lambda f: f is None }})
    r"""The severity of the issue."""  
    source_position: Optional[shared_sourceposition.SourcePosition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourcePosition'), 'exclude': lambda f: f is None }})
    r"""Position in the `Source` content including its line, column number, and an index of the `File` in the `Source` message. Used for debug purposes."""  
    