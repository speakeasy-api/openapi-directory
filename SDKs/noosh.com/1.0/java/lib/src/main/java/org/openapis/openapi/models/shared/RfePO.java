/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * RfePO - Java type: com.noosh.domain.nooshapi.persist.po.RfePO
 */
public class RfePO {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public RfePO withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("details")
    public String details;
    public RfePO withDetails(String details) {
        this.details = details;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("estimate_due_date")
    public LocalDate estimateDueDate;
    public RfePO withEstimateDueDate(LocalDate estimateDueDate) {
        this.estimateDueDate = estimateDueDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("proposed_order_completion_date")
    public LocalDate proposedOrderCompletionDate;
    public RfePO withProposedOrderCompletionDate(LocalDate proposedOrderCompletionDate) {
        this.proposedOrderCompletionDate = proposedOrderCompletionDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rfe_number")
    public String rfeNumber;
    public RfePO withRfeNumber(String rfeNumber) {
        this.rfeNumber = rfeNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rfe_title")
    public String rfeTitle;
    public RfePO withRfeTitle(String rfeTitle) {
        this.rfeTitle = rfeTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specs")
    public RfeSpecPO[] specs;
    public RfePO withSpecs(RfeSpecPO[] specs) {
        this.specs = specs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supplier_user_ids")
    public Long[] supplierUserIds;
    public RfePO withSupplierUserIds(Long[] supplierUserIds) {
        this.supplierUserIds = supplierUserIds;
        return this;
    }
    
}
