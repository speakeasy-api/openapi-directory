/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstanceRequirementsRequest } from "./instancerequirementsrequest";

export enum GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum {
  I386 = "i386",
  X8664 = "x86_64",
  Arm64 = "arm64",
  X8664Mac = "x86_64_mac",
  Arm64Mac = "arm64_mac",
}

export enum GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnum {
  Hvm = "hvm",
  Paravirtual = "paravirtual",
}

export class GetInstanceTypesFromInstanceRequirementsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  architectureTypes: GetInstanceTypesFromInstanceRequirementsRequestArchitectureTypesEnum[];

  @SpeakeasyMetadata()
  dryRun?: boolean;

  @SpeakeasyMetadata()
  instanceRequirements: InstanceRequirementsRequest;

  @SpeakeasyMetadata()
  maxResults?: number;

  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata()
  virtualizationTypes: GetInstanceTypesFromInstanceRequirementsRequestVirtualizationTypesEnum[];
}
