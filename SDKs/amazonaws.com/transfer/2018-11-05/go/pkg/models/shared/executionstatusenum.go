// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExecutionStatusEnum string

const (
	ExecutionStatusEnumInProgress        ExecutionStatusEnum = "IN_PROGRESS"
	ExecutionStatusEnumCompleted         ExecutionStatusEnum = "COMPLETED"
	ExecutionStatusEnumException         ExecutionStatusEnum = "EXCEPTION"
	ExecutionStatusEnumHandlingException ExecutionStatusEnum = "HANDLING_EXCEPTION"
)

func (e *ExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "EXCEPTION":
		fallthrough
	case "HANDLING_EXCEPTION":
		*e = ExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecutionStatusEnum: %s", s)
	}
}
