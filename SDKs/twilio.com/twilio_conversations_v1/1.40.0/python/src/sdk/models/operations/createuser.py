"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import conversations_v1_user as shared_conversations_v1_user
from ..shared import user_enum_webhook_enabled_type_enum as shared_user_enum_webhook_enabled_type_enum
from typing import Optional

CREATE_USER_SERVERS = [
	"https://conversations.twilio.com",
]


@dataclasses.dataclass
class CreateUserSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateUserCreateUserRequest:
    
    identity: str = dataclasses.field(metadata={'form': { 'field_name': 'Identity' }})
    r"""The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive."""  
    attributes: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Attributes' }})
    r"""The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned."""  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""The string that you assigned to describe the resource."""  
    role_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'RoleSid' }})
    r"""The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the user."""  
    

@dataclasses.dataclass
class CreateUserRequest:
    
    request_body: Optional[CreateUserCreateUserRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    x_twilio_webhook_enabled: Optional[shared_user_enum_webhook_enabled_type_enum.UserEnumWebhookEnabledTypeEnum] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Twilio-Webhook-Enabled', 'style': 'simple', 'explode': False }})
    r"""The X-Twilio-Webhook-Enabled HTTP request header"""  
    

@dataclasses.dataclass
class CreateUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    conversations_v1_user: Optional[shared_conversations_v1_user.ConversationsV1User] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    