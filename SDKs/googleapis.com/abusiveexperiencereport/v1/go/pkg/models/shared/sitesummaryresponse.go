// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SiteSummaryResponseAbusiveStatusEnum - The site's Abusive Experience Report status.
type SiteSummaryResponseAbusiveStatusEnum string

const (
	SiteSummaryResponseAbusiveStatusEnumUnknown SiteSummaryResponseAbusiveStatusEnum = "UNKNOWN"
	SiteSummaryResponseAbusiveStatusEnumPassing SiteSummaryResponseAbusiveStatusEnum = "PASSING"
	SiteSummaryResponseAbusiveStatusEnumFailing SiteSummaryResponseAbusiveStatusEnum = "FAILING"
)

func (e SiteSummaryResponseAbusiveStatusEnum) ToPointer() *SiteSummaryResponseAbusiveStatusEnum {
	return &e
}

func (e *SiteSummaryResponseAbusiveStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "PASSING":
		fallthrough
	case "FAILING":
		*e = SiteSummaryResponseAbusiveStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SiteSummaryResponseAbusiveStatusEnum: %v", v)
	}
}

// SiteSummaryResponseFilterStatusEnum - The site's [enforcement status](https://support.google.com/webtools/answer/7538608).
type SiteSummaryResponseFilterStatusEnum string

const (
	SiteSummaryResponseFilterStatusEnumUnknown SiteSummaryResponseFilterStatusEnum = "UNKNOWN"
	SiteSummaryResponseFilterStatusEnumOn      SiteSummaryResponseFilterStatusEnum = "ON"
	SiteSummaryResponseFilterStatusEnumOff     SiteSummaryResponseFilterStatusEnum = "OFF"
	SiteSummaryResponseFilterStatusEnumPaused  SiteSummaryResponseFilterStatusEnum = "PAUSED"
	SiteSummaryResponseFilterStatusEnumPending SiteSummaryResponseFilterStatusEnum = "PENDING"
)

func (e SiteSummaryResponseFilterStatusEnum) ToPointer() *SiteSummaryResponseFilterStatusEnum {
	return &e
}

func (e *SiteSummaryResponseFilterStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "ON":
		fallthrough
	case "OFF":
		fallthrough
	case "PAUSED":
		fallthrough
	case "PENDING":
		*e = SiteSummaryResponseFilterStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SiteSummaryResponseFilterStatusEnum: %v", v)
	}
}

// SiteSummaryResponse - Response message for GetSiteSummary.
type SiteSummaryResponse struct {
	// The site's Abusive Experience Report status.
	AbusiveStatus *SiteSummaryResponseAbusiveStatusEnum `json:"abusiveStatus,omitempty"`
	// The time at which [enforcement](https://support.google.com/webtools/answer/7538608) against the site began or will begin. Not set when the filter_status is OFF.
	EnforcementTime *string `json:"enforcementTime,omitempty"`
	// The site's [enforcement status](https://support.google.com/webtools/answer/7538608).
	FilterStatus *SiteSummaryResponseFilterStatusEnum `json:"filterStatus,omitempty"`
	// The time at which the site's status last changed.
	LastChangeTime *string `json:"lastChangeTime,omitempty"`
	// A link to the full Abusive Experience Report for the site. Not set in ViolatingSitesResponse. Note that you must complete the [Search Console verification process](https://support.google.com/webmasters/answer/9008080) for the site before you can access the full report.
	ReportURL *string `json:"reportUrl,omitempty"`
	// The name of the reviewed site, e.g. `google.com`.
	ReviewedSite *string `json:"reviewedSite,omitempty"`
	// Whether the site is currently under review.
	UnderReview *bool `json:"underReview,omitempty"`
}
