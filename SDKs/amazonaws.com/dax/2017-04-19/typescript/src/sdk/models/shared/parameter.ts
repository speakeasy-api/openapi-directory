/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChangeTypeEnum } from "./changetypeenum";
import { IsModifiableEnum } from "./ismodifiableenum";
import { NodeTypeSpecificValue } from "./nodetypespecificvalue";
import { ParameterTypeEnum } from "./parametertypeenum";
import { Expose, Type } from "class-transformer";

/**
 * Describes an individual setting that controls some aspect of DAX behavior.
 */
export class Parameter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllowedValues" })
  allowedValues?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ChangeType" })
  changeType?: ChangeTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "DataType" })
  dataType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsModifiable" })
  isModifiable?: IsModifiableEnum;

  @SpeakeasyMetadata({ elemType: NodeTypeSpecificValue })
  @Expose({ name: "NodeTypeSpecificValues" })
  @Type(() => NodeTypeSpecificValue)
  nodeTypeSpecificValues?: NodeTypeSpecificValue[];

  @SpeakeasyMetadata()
  @Expose({ name: "ParameterName" })
  parameterName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParameterType" })
  parameterType?: ParameterTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ParameterValue" })
  parameterValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Source" })
  source?: string;
}
