/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetScoreRevisionDataQueryParams {
    /**
     * Only return files already generated and cached in Flat's production
     * cache. If the file is not availabe, a 404 will be returned
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=onlyCached")
    public Boolean onlyCached;
    public GetScoreRevisionDataQueryParams withOnlyCached(Boolean onlyCached) {
        this.onlyCached = onlyCached;
        return this;
    }
    
    /**
     * An optional a set of parts uuid to be exported. This parameter must be composed of parts uuids
     * separated by commas. For example "59df645f-bb1c-f1b4-b573-d2afc4491f94,34ef645f-1aef-f3bc-1564-34cca4492b87".
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=parts")
    public String parts;
    public GetScoreRevisionDataQueryParams withParts(String parts) {
        this.parts = parts;
        return this;
    }
    
    /**
     * This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sharingKey")
    public String sharingKey;
    public GetScoreRevisionDataQueryParams withSharingKey(String sharingKey) {
        this.sharingKey = sharingKey;
        return this;
    }
    
    /**
     * Returns a json with the `url` in it instead of redirecting
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=url")
    public Boolean url;
    public GetScoreRevisionDataQueryParams withUrl(Boolean url) {
        this.url = url;
        return this;
    }
    
}
