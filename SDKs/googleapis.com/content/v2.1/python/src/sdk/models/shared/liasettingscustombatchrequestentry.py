"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import liasettings as shared_liasettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LiasettingsCustomBatchRequestEntry:
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""The ID of the account for which to get/update account LIA settings."""  
    batch_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchId'), 'exclude': lambda f: f is None }})
    r"""An entry ID, unique within the batch request."""  
    contact_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactEmail'), 'exclude': lambda f: f is None }})
    r"""Inventory validation contact email. Required only for SetInventoryValidationContact."""  
    contact_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactName'), 'exclude': lambda f: f is None }})
    r"""Inventory validation contact name. Required only for SetInventoryValidationContact."""  
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""The country code. Required only for RequestInventoryVerification."""  
    gmb_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gmbEmail'), 'exclude': lambda f: f is None }})
    r"""The Business Profile. Required only for RequestGmbAccess."""  
    lia_settings: Optional[shared_liasettings.LiaSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('liaSettings'), 'exclude': lambda f: f is None }})
    r"""Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role."""  
    merchant_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantId'), 'exclude': lambda f: f is None }})
    r"""The ID of the managing account."""  
    method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""The method of the batch entry. Acceptable values are: - \\"`get`\\" - \\"`getAccessibleGmbAccounts`\\" - \\"`requestGmbAccess`\\" - \\"`requestInventoryVerification`\\" - \\"`setInventoryVerificationContact`\\" - \\"`update`\\" """  
    pos_data_provider_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('posDataProviderId'), 'exclude': lambda f: f is None }})
    r"""The ID of POS data provider. Required only for SetPosProvider."""  
    pos_external_account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('posExternalAccountId'), 'exclude': lambda f: f is None }})
    r"""The account ID by which this merchant is known to the POS provider."""  
    