// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PlayerScoreResponseBeatenScoreTimeSpansEnum string

const (
	PlayerScoreResponseBeatenScoreTimeSpansEnumScoreTimeSpanUnspecified PlayerScoreResponseBeatenScoreTimeSpansEnum = "SCORE_TIME_SPAN_UNSPECIFIED"
	PlayerScoreResponseBeatenScoreTimeSpansEnumAllTime                  PlayerScoreResponseBeatenScoreTimeSpansEnum = "ALL_TIME"
	PlayerScoreResponseBeatenScoreTimeSpansEnumWeekly                   PlayerScoreResponseBeatenScoreTimeSpansEnum = "WEEKLY"
	PlayerScoreResponseBeatenScoreTimeSpansEnumDaily                    PlayerScoreResponseBeatenScoreTimeSpansEnum = "DAILY"
)

func (e PlayerScoreResponseBeatenScoreTimeSpansEnum) ToPointer() *PlayerScoreResponseBeatenScoreTimeSpansEnum {
	return &e
}

func (e *PlayerScoreResponseBeatenScoreTimeSpansEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SCORE_TIME_SPAN_UNSPECIFIED":
		fallthrough
	case "ALL_TIME":
		fallthrough
	case "WEEKLY":
		fallthrough
	case "DAILY":
		*e = PlayerScoreResponseBeatenScoreTimeSpansEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayerScoreResponseBeatenScoreTimeSpansEnum: %v", v)
	}
}

// PlayerScoreResponse - A list of leaderboard entry resources.
type PlayerScoreResponse struct {
	// The time spans where the submitted score is better than the existing score for that time span.
	BeatenScoreTimeSpans []PlayerScoreResponseBeatenScoreTimeSpansEnum `json:"beatenScoreTimeSpans,omitempty"`
	// The formatted value of the submitted score.
	FormattedScore *string `json:"formattedScore,omitempty"`
	// Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreResponse`.
	Kind *string `json:"kind,omitempty"`
	// The leaderboard ID that this score was submitted to.
	LeaderboardID *string `json:"leaderboardId,omitempty"`
	// Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
	ScoreTag *string `json:"scoreTag,omitempty"`
	// The scores in time spans that have not been beaten. As an example, the submitted score may be better than the player's `DAILY` score, but not better than the player's scores for the `WEEKLY` or `ALL_TIME` time spans.
	UnbeatenScores []PlayerScore `json:"unbeatenScores,omitempty"`
}
