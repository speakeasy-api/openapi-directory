/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The way in which the media file is delivered.
 */
export enum MediaFileDeliveryTypeEnum {
  Stream = "Stream",
  Progressive = "Progressive",
  Download = "Download",
}

/**
 * The resolution of the video media.
 */
export enum MediaFileResolutionEnum1 {
  Sd = "SD",
  Hd720 = "HD-720",
  Hd1080 = "HD-1080",
  Hd4K = "HD-4K",
  External = "External",
  Unknown = "Unknown",
}

export class MediaFile extends SpeakeasyBase {
  /**
   * The number of audio channels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channels" })
  channels?: number;

  /**
   * The way in which the media file is delivered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryType" })
  deliveryType: MediaFileDeliveryTypeEnum;

  /**
   * The type of drm used to encrypt the media. 'None' if unencrypted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "drm" })
  drm: string;

  /**
   * The format the media was encoded in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format: string;

  /**
   * The height of the video media.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height: number;

  /**
   * The language code for the media, e.g. 'en'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language: string;

  /**
   * The name of the media file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The resolution of the video media.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resolution" })
  resolution: MediaFileResolutionEnum1;

  /**
   * The url to access the media file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * The width of the video media.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width: number;
}
