/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsCharges extends SpeakeasyBase {
  /**
   * Charge number of the charge which needs the triggering date to be provided. The charge's `triggerEvent` must have been set as `SpecificDate`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chargeNumber" })
  chargeNumber?: string;

  /**
   * Date in YYYY-MM-DD format. The specific trigger date you are to set for the charge.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "specificTriggerDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  specificTriggerDate?: Date;
}

/**
 * Name of the trigger date of the order action.
 */
export enum PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnum {
  ServiceActivation = "ServiceActivation",
  CustomerAcceptance = "CustomerAcceptance",
}

export class PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDates extends SpeakeasyBase {
  /**
   * Name of the trigger date of the order action.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDatesNameEnum;

  /**
   * Trigger date in YYYY-MM-DD format. The date you are to set as the service activation date or the customer acceptance date.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggerDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  triggerDate?: Date;
}

export class PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActions extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsCharges,
  })
  @Expose({ name: "charges" })
  @Type(
    () => PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsCharges
  )
  charges?: PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsCharges[];

  /**
   * Identifies which order action will have its triggering dates updated.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sequence" })
  sequence: number;

  /**
   * Container for the service activation and customer acceptance dates of the order action.
   */
  @SpeakeasyMetadata({
    elemType:
      PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDates,
  })
  @Expose({ name: "triggerDates" })
  @Type(
    () =>
      PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDates
  )
  triggerDates?: PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActionsTriggerDates[];
}

export class PUTOrderActionTriggerDatesRequestTypeSubscriptions extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActions,
  })
  @Expose({ name: "orderActions" })
  @Type(() => PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActions)
  orderActions?: PUTOrderActionTriggerDatesRequestTypeSubscriptionsOrderActions[];

  /**
   * Subscription number of a subscription in the `Pending` order for which you are to update the triggering dates. For example, A-S00000001.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionNumber" })
  subscriptionNumber: string;
}

export class PUTOrderActionTriggerDatesRequestType extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: PUTOrderActionTriggerDatesRequestTypeSubscriptions,
  })
  @Expose({ name: "subscriptions" })
  @Type(() => PUTOrderActionTriggerDatesRequestTypeSubscriptions)
  subscriptions?: PUTOrderActionTriggerDatesRequestTypeSubscriptions[];
}
