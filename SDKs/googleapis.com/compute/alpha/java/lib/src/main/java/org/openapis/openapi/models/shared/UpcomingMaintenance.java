/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpcomingMaintenance - Upcoming Maintenance notification information.
 */
public class UpcomingMaintenance {
    /**
     * Indicates if the maintenance can be customer triggered. From more detail, see go/sf-ctm-design.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canReschedule")
    public Boolean canReschedule;

    public UpcomingMaintenance withCanReschedule(Boolean canReschedule) {
        this.canReschedule = canReschedule;
        return this;
    }
    
    /**
     * [Output Only] The date when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date")
    public String date;

    public UpcomingMaintenance withDate(String date) {
        this.date = date;
        return this;
    }
    
    /**
     * The latest time for the planned maintenance window to start. This timestamp value is in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latestWindowStartTime")
    public String latestWindowStartTime;

    public UpcomingMaintenance withLatestWindowStartTime(String latestWindowStartTime) {
        this.latestWindowStartTime = latestWindowStartTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenanceStatus")
    public UpcomingMaintenanceMaintenanceStatusEnum maintenanceStatus;

    public UpcomingMaintenance withMaintenanceStatus(UpcomingMaintenanceMaintenanceStatusEnum maintenanceStatus) {
        this.maintenanceStatus = maintenanceStatus;
        return this;
    }
    
    /**
     * Represents a window of time using two timestamps: `earliest` and `latest`. This timestamp values are in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTimeWindow")
    public UpcomingMaintenanceTimeWindow startTimeWindow;

    public UpcomingMaintenance withStartTimeWindow(UpcomingMaintenanceTimeWindow startTimeWindow) {
        this.startTimeWindow = startTimeWindow;
        return this;
    }
    
    /**
     * [Output Only] The time when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time")
    public String time;

    public UpcomingMaintenance withTime(String time) {
        this.time = time;
        return this;
    }
    
    /**
     * Defines the type of maintenance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public UpcomingMaintenanceTypeEnum type;

    public UpcomingMaintenance withType(UpcomingMaintenanceTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The time by which the maintenance disruption will be completed. This timestamp value is in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("windowEndTime")
    public String windowEndTime;

    public UpcomingMaintenance withWindowEndTime(String windowEndTime) {
        this.windowEndTime = windowEndTime;
        return this;
    }
    
    /**
     * The current start time of the maintenance window. This timestamp value is in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("windowStartTime")
    public String windowStartTime;

    public UpcomingMaintenance withWindowStartTime(String windowStartTime) {
        this.windowStartTime = windowStartTime;
        return this;
    }
    
    public UpcomingMaintenance(){}
}
