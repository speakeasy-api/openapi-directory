"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DiagnosticLevelEnum(str, Enum):
    r"""Level to record this diagnostic."""
    UNKNOWN = 'UNKNOWN'
    INFORMATION = 'INFORMATION'
    WARNING = 'WARNING'
    ERROR = 'ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Diagnostic:
    
    field: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field'), 'exclude': lambda f: f is None }})
    r"""JsonPath expression on the resource that if non empty, indicates that this field needs to be extracted as a diagnostic."""  
    level: Optional[DiagnosticLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('level'), 'exclude': lambda f: f is None }})
    r"""Level to record this diagnostic."""  
    