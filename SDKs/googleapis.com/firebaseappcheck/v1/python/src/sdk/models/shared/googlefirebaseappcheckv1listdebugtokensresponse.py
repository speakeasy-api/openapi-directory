"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlefirebaseappcheckv1debugtoken as shared_googlefirebaseappcheckv1debugtoken
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleFirebaseAppcheckV1ListDebugTokensResponse:
    r"""Response message for the ListDebugTokens method."""
    
    debug_tokens: Optional[list[shared_googlefirebaseappcheckv1debugtoken.GoogleFirebaseAppcheckV1DebugToken]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debugTokens'), 'exclude': lambda f: f is None }})
    r"""The DebugTokens retrieved."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListDebugTokens to find the next group of DebugTokens. Page tokens are short-lived and should not be persisted."""  
    