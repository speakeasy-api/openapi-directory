"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import leaveperiod as shared_leaveperiod
from ..shared import validationerror as shared_validationerror
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LeaveApplicationInput:
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""The Description of the Leave"""  
    employee_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployeeID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for Payroll Employee"""  
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndDate'), 'exclude': lambda f: f is None }})
    r"""End date of the leave (YYYY-MM-DD)"""  
    leave_application_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeaveApplicationID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for Payroll Employee"""  
    leave_periods: Optional[list[shared_leaveperiod.LeavePeriod]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeavePeriods'), 'exclude': lambda f: f is None }})  
    leave_type_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeaveTypeID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for Leave Type"""  
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartDate'), 'exclude': lambda f: f is None }})
    r"""Start date of the leave (YYYY-MM-DD)"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Title'), 'exclude': lambda f: f is None }})
    r"""The title of the leave"""  
    validation_errors: Optional[list[shared_validationerror.ValidationError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationErrors'), 'exclude': lambda f: f is None }})
    r"""Displays array of validation error messages from the API"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LeaveApplication:
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""The Description of the Leave"""  
    employee_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployeeID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for Payroll Employee"""  
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndDate'), 'exclude': lambda f: f is None }})
    r"""End date of the leave (YYYY-MM-DD)"""  
    leave_application_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeaveApplicationID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for Payroll Employee"""  
    leave_periods: Optional[list[shared_leaveperiod.LeavePeriod]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeavePeriods'), 'exclude': lambda f: f is None }})  
    leave_type_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeaveTypeID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for Leave Type"""  
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartDate'), 'exclude': lambda f: f is None }})
    r"""Start date of the leave (YYYY-MM-DD)"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Title'), 'exclude': lambda f: f is None }})
    r"""The title of the leave"""  
    updated_date_utc: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedDateUTC'), 'exclude': lambda f: f is None }})
    r"""Last modified timestamp"""  
    validation_errors: Optional[list[shared_validationerror.ValidationError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationErrors'), 'exclude': lambda f: f is None }})
    r"""Displays array of validation error messages from the API"""  
    