// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListIndexesRequestBodyTypeEnum - <p>If specified, limits the output to only indexes of the specified Type, either <code>LOCAL</code> or <code>AGGREGATOR</code>.</p> <p>Use this option to discover the aggregator index for your account.</p>
type ListIndexesRequestBodyTypeEnum string

const (
	ListIndexesRequestBodyTypeEnumLocal      ListIndexesRequestBodyTypeEnum = "LOCAL"
	ListIndexesRequestBodyTypeEnumAggregator ListIndexesRequestBodyTypeEnum = "AGGREGATOR"
)

func (e *ListIndexesRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LOCAL":
		fallthrough
	case "AGGREGATOR":
		*e = ListIndexesRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListIndexesRequestBodyTypeEnum: %s", s)
	}
}

type ListIndexesRequestBody struct {
	// <p>The maximum number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value appropriate to the operation. If additional items exist beyond those included in the current response, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results.</p> <note> <p>An API operation can return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p> </note>
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The parameter for receiving additional results if you receive a <code>NextToken</code> response in a previous request. A <code>NextToken</code> response indicates that more output is available. Set this parameter to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.
	NextToken *string `json:"NextToken,omitempty"`
	// If specified, limits the response to only information about the index in the specified list of Amazon Web Services Regions.
	Regions []string `json:"Regions,omitempty"`
	// <p>If specified, limits the output to only indexes of the specified Type, either <code>LOCAL</code> or <code>AGGREGATOR</code>.</p> <p>Use this option to discover the aggregator index for your account.</p>
	Type *ListIndexesRequestBodyTypeEnum `json:"Type,omitempty"`
}

type ListIndexesRequest struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       ListIndexesRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListIndexesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListIndexesOutput *shared.ListIndexesOutput
	StatusCode        int
	RawResponse       *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
