/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec } from "./googlecloudmlv1studyconfigparameterspeccategoricalvaluespec";
import { GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec } from "./googlecloudmlv1studyconfigparameterspecdiscretevaluespec";
import { GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec } from "./googlecloudmlv1studyconfigparameterspecdoublevaluespec";
import { GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec } from "./googlecloudmlv1studyconfigparameterspecintegervaluespec";
import { GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec } from "./googlecloudmlv1studyconfigparameterspecmatchingparentcategoricalvaluespec";
import { GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec } from "./googlecloudmlv1studyconfigparameterspecmatchingparentdiscretevaluespec";
import { GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec } from "./googlecloudmlv1studyconfigparameterspecmatchingparentintvaluespec";
import { Expose, Type } from "class-transformer";

/**
 * How the parameter should be scaled. Leave unset for categorical parameters.
 */
export enum GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum {
  ScaleTypeUnspecified = "SCALE_TYPE_UNSPECIFIED",
  UnitLinearScale = "UNIT_LINEAR_SCALE",
  UnitLogScale = "UNIT_LOG_SCALE",
  UnitReverseLogScale = "UNIT_REVERSE_LOG_SCALE",
}

/**
 * Required. The type of the parameter.
 */
export enum GoogleCloudMlV1StudyConfigParameterSpecTypeEnum {
  ParameterTypeUnspecified = "PARAMETER_TYPE_UNSPECIFIED",
  Double = "DOUBLE",
  Integer = "INTEGER",
  Categorical = "CATEGORICAL",
  Discrete = "DISCRETE",
}

/**
 * Represents a single parameter to optimize.
 */
export class GoogleCloudMlV1StudyConfigParameterSpec extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "categoricalValueSpec" })
  @Type(() => GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec)
  categoricalValueSpec?: GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec;

  /**
   * A child node is active if the parameter's value matches the child node's matching_parent_values. If two items in child_parameter_specs have the same name, they must have disjoint matching_parent_values.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudMlV1StudyConfigParameterSpec })
  @Expose({ name: "childParameterSpecs" })
  @Type(() => GoogleCloudMlV1StudyConfigParameterSpec)
  childParameterSpecs?: GoogleCloudMlV1StudyConfigParameterSpec[];

  @SpeakeasyMetadata()
  @Expose({ name: "discreteValueSpec" })
  @Type(() => GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec)
  discreteValueSpec?: GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec;

  @SpeakeasyMetadata()
  @Expose({ name: "doubleValueSpec" })
  @Type(() => GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec)
  doubleValueSpec?: GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec;

  @SpeakeasyMetadata()
  @Expose({ name: "integerValueSpec" })
  @Type(() => GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec)
  integerValueSpec?: GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec;

  /**
   * Required. The parameter name must be unique amongst all ParameterSpecs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;

  /**
   * Represents the spec to match categorical values from parent parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentCategoricalValues" })
  @Type(
    () =>
      GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec
  )
  parentCategoricalValues?: GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec;

  /**
   * Represents the spec to match discrete values from parent parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentDiscreteValues" })
  @Type(
    () => GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec
  )
  parentDiscreteValues?: GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec;

  /**
   * Represents the spec to match integer values from parent parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentIntValues" })
  @Type(() => GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec)
  parentIntValues?: GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec;

  /**
   * How the parameter should be scaled. Leave unset for categorical parameters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scaleType" })
  scaleType?: GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum;

  /**
   * Required. The type of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GoogleCloudMlV1StudyConfigParameterSpecTypeEnum;
}
