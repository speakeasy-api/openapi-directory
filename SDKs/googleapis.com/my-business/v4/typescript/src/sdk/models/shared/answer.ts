/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Author } from "./author";
import { Expose, Type } from "class-transformer";

/**
 * Represents an answer to a question
 */
export class Answer extends SpeakeasyBase {
  /**
   * Represents the author of a question or answer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "author" })
  @Type(() => Author)
  author?: Author;

  /**
   * Output only. The timestamp for when the answer was written.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. The unique name for the answer accounts/* /locations/* /questions/* /answers/*
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The text of the answer. It should contain at least one non-whitespace character. The maximum length is 4096 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string;

  /**
   * Output only. The timestamp for when the answer was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * Output only. The number of upvotes for the answer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upvoteCount" })
  upvoteCount?: number;
}
