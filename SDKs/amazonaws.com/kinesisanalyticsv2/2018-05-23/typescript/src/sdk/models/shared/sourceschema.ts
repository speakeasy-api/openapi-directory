/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecordColumn } from "./recordcolumn";
import { RecordFormat } from "./recordformat";
import { Expose, Type } from "class-transformer";

/**
 * For a SQL-based Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.
 */
export class SourceSchema extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: RecordColumn })
  @Expose({ name: "RecordColumns" })
  @Type(() => RecordColumn)
  recordColumns: RecordColumn[];

  @SpeakeasyMetadata()
  @Expose({ name: "RecordEncoding" })
  recordEncoding?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RecordFormat" })
  @Type(() => RecordFormat)
  recordFormat: RecordFormat;
}
