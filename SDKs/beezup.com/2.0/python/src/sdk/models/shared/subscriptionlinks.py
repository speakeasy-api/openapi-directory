"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import link3 as shared_link3
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubscriptionLinks:
    
    activate: Optional[shared_link3.Link3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activate'), 'exclude': lambda f: f is None }})  
    deactivate: Optional[shared_link3.Link3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deactivate'), 'exclude': lambda f: f is None }})  
    delete: Optional[shared_link3.Link3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delete'), 'exclude': lambda f: f is None }})  
    reporting: Optional[shared_link3.Link3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reporting'), 'exclude': lambda f: f is None }})  
    retry: Optional[shared_link3.Link3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retry'), 'exclude': lambda f: f is None }})  
    