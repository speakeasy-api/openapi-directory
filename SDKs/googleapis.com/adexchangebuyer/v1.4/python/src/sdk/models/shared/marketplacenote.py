"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MarketplaceNote:
    r"""A proposal is associated with a bunch of notes which may optionally be associated with a deal and/or revision number."""
    
    creator_role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creatorRole'), 'exclude': lambda f: f is None }})
    r"""The role of the person (buyer/seller) creating the note. (readonly)"""  
    deal_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dealId'), 'exclude': lambda f: f is None }})
    r"""Notes can optionally be associated with a deal. (readonly, except on create)"""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"adexchangebuyer#marketplaceNote\\"."""  
    note: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('note'), 'exclude': lambda f: f is None }})
    r"""The actual note to attach. (readonly, except on create)"""  
    note_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('noteId'), 'exclude': lambda f: f is None }})
    r"""The unique id for the note. (readonly)"""  
    proposal_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('proposalId'), 'exclude': lambda f: f is None }})
    r"""The proposalId that a note is attached to. (readonly)"""  
    proposal_revision_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('proposalRevisionNumber'), 'exclude': lambda f: f is None }})
    r"""If the note is associated with a proposal revision number, then store that here. (readonly, except on create)"""  
    timestamp_ms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestampMs'), 'exclude': lambda f: f is None }})
    r"""The timestamp (ms since epoch) that this note was created. (readonly)"""  
    