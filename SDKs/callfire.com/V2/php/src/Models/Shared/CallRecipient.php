<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CallRecipient - Recipient of a campaign action. Can be a phone number, contact, or contact list with attributes added to action. It is required to specify one of this values
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CallRecipient
{
    /**
     * Map of user-defined string attributes associated with recipient
     * 
     * @var ?array<string, string> $attributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('attributes')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $attributes = null;
    
    /**
     * An id of existing contact used as recipient
     * 
     * @var ?int $contactId
     */
	#[\JMS\Serializer\Annotation\SerializedName('contactId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $contactId = null;
    
    /**
     * An IVR xml document describing dialplan to setup an IVR broadcast. If dialplan is set there is no need to set live, machine and transfer sounds (or vice versa)
     * 
     * @var ?string $dialplanXml
     */
	#[\JMS\Serializer\Annotation\SerializedName('dialplanXml')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dialplanXml = null;
    
    /**
     * ~
     * 
     * @var ?string $fromNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromNumber = null;
    
    /**
     * Text to be turned into a sound, this text will be played when the phone is answered
     * 
     * @var ?string $liveMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('liveMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $liveMessage = null;
    
    /**
     * An id of a sound file to play if phone is answered
     * 
     * @var ?int $liveMessageSoundId
     */
	#[\JMS\Serializer\Annotation\SerializedName('liveMessageSoundId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $liveMessageSoundId = null;
    
    /**
     * Text to be used to turn into sound, this text will be played when answering machine is detected
     * 
     * @var ?string $machineMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('machineMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $machineMessage = null;
    
    /**
     * An id of a sound file to play if answering machine is detected
     * 
     * @var ?int $machineMessageSoundId
     */
	#[\JMS\Serializer\Annotation\SerializedName('machineMessageSoundId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $machineMessageSoundId = null;
    
    /**
     * Recipient's phone number in E.164 format (11-digit) or short code. Example: 12132000384
     * 
     * @var ?string $phoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneNumber = null;
    
    /**
     * A digit pressed to initiate the transfer
     * 
     * @var ?string $transferDigit
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferDigit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transferDigit = null;
    
    /**
     * Text to be turned into sound, this text will be played when the transfer digit is played
     * 
     * @var ?string $transferMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transferMessage = null;
    
    /**
     * An id of a sound file to play if call is transferred
     * 
     * @var ?int $transferMessageSoundId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferMessageSoundId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $transferMessageSoundId = null;
    
    /**
     * Phone number in E.164 format (11-digit) to transfer the call to. Example: 12132000384
     * 
     * @var ?string $transferNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transferNumber = null;
    
    /**
     * The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CallRecipientVoiceEnum $voice
     */
	#[\JMS\Serializer\Annotation\SerializedName('voice')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CallRecipientVoiceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CallRecipientVoiceEnum $voice = null;
    
	public function __construct()
	{
		$this->attributes = null;
		$this->contactId = null;
		$this->dialplanXml = null;
		$this->fromNumber = null;
		$this->liveMessage = null;
		$this->liveMessageSoundId = null;
		$this->machineMessage = null;
		$this->machineMessageSoundId = null;
		$this->phoneNumber = null;
		$this->transferDigit = null;
		$this->transferMessage = null;
		$this->transferMessageSoundId = null;
		$this->transferNumber = null;
		$this->voice = null;
	}
}
