"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils

class ExternalAccountFundingEnum(str, Enum):
    r"""The type of the account to which the transfer will be sent."""
    CHECKING = 'checking'
    SAVINGS = 'savings'
    OTHER = 'other'

class ExternalAccountStatusEnum(str, Enum):
    r"""The External Account's status."""
    ACTIVE = 'active'
    ARCHIVED = 'archived'

class ExternalAccountTypeEnum(str, Enum):
    r"""A constant representing the object's type. For this resource it will always be `external_account`."""
    EXTERNAL_ACCOUNT = 'external_account'

class ExternalAccountVerificationStatusEnum(str, Enum):
    r"""If you have verified ownership of the External Account."""
    UNVERIFIED = 'unverified'
    PENDING = 'pending'
    VERIFIED = 'verified'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExternalAccount:
    r"""External Accounts represent accounts at financial institutions other than Increase. You can use this API to store their details for reuse."""
    
    account_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_number') }})
    r"""The destination account number."""  
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the External Account was created."""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""The External Account's description for display purposes."""  
    funding: ExternalAccountFundingEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('funding') }})
    r"""The type of the account to which the transfer will be sent."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The External Account's identifier."""  
    routing_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('routing_number') }})
    r"""The American Bankers' Association (ABA) Routing Transit Number (RTN)."""  
    status: ExternalAccountStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The External Account's status."""  
    type: ExternalAccountTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""A constant representing the object's type. For this resource it will always be `external_account`."""  
    verification_status: ExternalAccountVerificationStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verification_status') }})
    r"""If you have verified ownership of the External Account."""  
    