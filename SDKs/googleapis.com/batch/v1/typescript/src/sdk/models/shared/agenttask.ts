/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TaskSpec } from "./taskspec";
import { TaskStatus } from "./taskstatus";
import { Expose, Type } from "class-transformer";

/**
 * The intended state of the task.
 */
export enum AgentTaskIntendedStateEnum {
  IntendedStateUnspecified = "INTENDED_STATE_UNSPECIFIED",
  Assigned = "ASSIGNED",
  Cancelled = "CANCELLED",
  Deleted = "DELETED",
}

/**
 * TODO(b/182501497) The message needs to be redefined when the Agent API server updates data in storage per the backend design.
 */
export class AgentTask extends SpeakeasyBase {
  /**
   * The intended state of the task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "intendedState" })
  intendedState?: AgentTaskIntendedStateEnum;

  /**
   * The highest barrier reached by all tasks in the task's TaskGroup.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reachedBarrier" })
  reachedBarrier?: string;

  /**
   * Spec of a task
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spec" })
  @Type(() => TaskSpec)
  spec?: TaskSpec;

  /**
   * Status of a task
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => TaskStatus)
  status?: TaskStatus;

  /**
   * Task name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task" })
  task?: string;
}
