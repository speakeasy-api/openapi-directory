"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errormodel as shared_errormodel
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class UnloadServiceRequest:
    
    service_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'serviceId', 'style': 'simple', 'explode': False }})
    r"""Service ID of the service to be unloaded"""  
    
class UnloadService200ApplicationJSONStatusEnum(str, Enum):
    SUCCESS = 'success'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UnloadService200ApplicationJSON:
    r"""unloadService response"""
    
    api: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api') }})
    r"""The path of the REST API method"""  
    method: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method') }})
    r"""The name of the REST API method"""  
    response: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response') }})
    r"""Confirmation message"""  
    status: UnloadService200ApplicationJSONStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    

@dataclasses.dataclass
class UnloadServiceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_model: Optional[shared_errormodel.ErrorModel] = dataclasses.field(default=None)
    r"""Error response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    unload_service_200_application_json_object: Optional[UnloadService200ApplicationJSON] = dataclasses.field(default=None)
    r"""unloadService response"""  
    