// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConnectorEventEventSourceEnum - Unify event source
type ConnectorEventEventSourceEnum string

const (
	ConnectorEventEventSourceEnumNative  ConnectorEventEventSourceEnum = "native"
	ConnectorEventEventSourceEnumVirtual ConnectorEventEventSourceEnum = "virtual"
)

func (e ConnectorEventEventSourceEnum) ToPointer() *ConnectorEventEventSourceEnum {
	return &e
}

func (e *ConnectorEventEventSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "native":
		fallthrough
	case "virtual":
		*e = ConnectorEventEventSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectorEventEventSourceEnum: %v", v)
	}
}

// ConnectorEvent - Unify event that is supported on the connector. Events are delivered via Webhooks.
type ConnectorEvent struct {
	// Downstream event type
	DownstreamEventType *string `json:"downstream_event_type,omitempty"`
	// Unify entity type
	EntityType *string `json:"entity_type,omitempty"`
	// Unify event source
	EventSource *ConnectorEventEventSourceEnum `json:"event_source,omitempty"`
	// Unify event type
	EventType *string  `json:"event_type,omitempty"`
	Resources []string `json:"resources,omitempty"`
}
