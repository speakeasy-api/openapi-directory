/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.LocalDate;

/**
 * ReportTelephone200ApplicationXML - **HTTP Status Code:** `200`&lt;br&gt;
 * Telephone report returned.&lt;br&gt;
 * This is only available for paid account:{accountId}.&lt;br&gt;
 * The requested report cannot be generated for this account because this account has not subscribed to toll-free audio conference plan.&lt;br&gt;
 * Toll Report feature must be enabled to perform this action. Contact the Zoom Support team for help.
 */
public class ReportTelephone200ApplicationXML {
    /**
     * Start date for this report.
     */
    
    public LocalDate from;
    public ReportTelephone200ApplicationXML withFrom(LocalDate from) {
        this.from = from;
        return this;
    }
    
    /**
     * The page number of the current results.
     */
    
    public Long nextPageToken;
    public ReportTelephone200ApplicationXML withNextPageToken(Long nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The number of pages returned for the request made.
     */
    
    public Long pageCount;
    public ReportTelephone200ApplicationXML withPageCount(Long pageCount) {
        this.pageCount = pageCount;
        return this;
    }
    
    /**
     * The number of records returned with a single API call.
     */
    
    public Long pageSize;
    public ReportTelephone200ApplicationXML withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Array of telephony objects.
     */
    
    public ReportTelephone200ApplicationXMLTelephonyUsage[] telephonyUsage;
    public ReportTelephone200ApplicationXML withTelephonyUsage(ReportTelephone200ApplicationXMLTelephonyUsage[] telephonyUsage) {
        this.telephonyUsage = telephonyUsage;
        return this;
    }
    
    /**
     * End date for this report.
     */
    
    public LocalDate to;
    public ReportTelephone200ApplicationXML withTo(LocalDate to) {
        this.to = to;
        return this;
    }
    
    /**
     * The total number of all the records available across pages.
     */
    
    public Long totalRecords;
    public ReportTelephone200ApplicationXML withTotalRecords(Long totalRecords) {
        this.totalRecords = totalRecords;
        return this;
    }
    
}
