"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BillbeeInterfacesBillbeeAPIModelShipment:
    r"""Represents a single shipment."""
    
    billbee_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BillbeeId'), 'exclude': lambda f: f is None }})
    r"""The billbee internal id of the shipment"""  
    created: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Created'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The creation date"""  
    shipment_type: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShipmentType'), 'exclude': lambda f: f is None }})
    r"""Shipment Type, 0 if Shipment, 1 if Retoure"""  
    shipper: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Shipper'), 'exclude': lambda f: f is None }})
    r"""The name of the shipping provider"""  
    shipping_carrier: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingCarrier'), 'exclude': lambda f: f is None }})
    r"""The carrier used to ship the parcel with"""  
    shipping_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingId'), 'exclude': lambda f: f is None }})
    r"""The id of this shipment"""  
    shipping_provider_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingProviderId'), 'exclude': lambda f: f is None }})
    r"""The id of the used shipping provider"""  
    shipping_provider_product_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingProviderProductId'), 'exclude': lambda f: f is None }})
    r"""The id of the used shipping provider product"""  
    tracking_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrackingUrl'), 'exclude': lambda f: f is None }})
    r"""The url to track this shipment"""  
    