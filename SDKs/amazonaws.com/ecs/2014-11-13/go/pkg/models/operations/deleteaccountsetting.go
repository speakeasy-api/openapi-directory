// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteAccountSettingXAmzTargetEnum
type DeleteAccountSettingXAmzTargetEnum string

const (
	DeleteAccountSettingXAmzTargetEnumAmazonEc2ContainerServiceV20141113DeleteAccountSetting DeleteAccountSettingXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.DeleteAccountSetting"
)

func (e *DeleteAccountSettingXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerServiceV20141113.DeleteAccountSetting":
		*e = DeleteAccountSettingXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteAccountSettingXAmzTargetEnum: %s", s)
	}
}

type DeleteAccountSettingRequest struct {
	DeleteAccountSettingRequest shared.DeleteAccountSettingRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  DeleteAccountSettingXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteAccountSettingResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// Success
	DeleteAccountSettingResponse *shared.DeleteAccountSettingResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
}
