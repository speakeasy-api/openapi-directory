"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Ec2InstanceAttributes:
    r"""Provides information about the EC2 instances in a cluster grouped by category. For example, key name, subnet ID, IAM instance profile, and so on."""
    
    additional_master_security_groups: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalMasterSecurityGroups'), 'exclude': lambda f: f is None }})  
    additional_slave_security_groups: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalSlaveSecurityGroups'), 'exclude': lambda f: f is None }})  
    ec2_availability_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Ec2AvailabilityZone'), 'exclude': lambda f: f is None }})  
    ec2_key_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Ec2KeyName'), 'exclude': lambda f: f is None }})  
    ec2_subnet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Ec2SubnetId'), 'exclude': lambda f: f is None }})  
    emr_managed_master_security_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmrManagedMasterSecurityGroup'), 'exclude': lambda f: f is None }})  
    emr_managed_slave_security_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmrManagedSlaveSecurityGroup'), 'exclude': lambda f: f is None }})  
    iam_instance_profile: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IamInstanceProfile'), 'exclude': lambda f: f is None }})  
    requested_ec2_availability_zones: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequestedEc2AvailabilityZones'), 'exclude': lambda f: f is None }})  
    requested_ec2_subnet_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequestedEc2SubnetIds'), 'exclude': lambda f: f is None }})  
    service_access_security_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceAccessSecurityGroup'), 'exclude': lambda f: f is None }})  
    