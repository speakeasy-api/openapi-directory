// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListParameters200ApplicationJSONActionEnum - The id of the action
type ListParameters200ApplicationJSONActionEnum string

const (
	ListParameters200ApplicationJSONActionEnumListParameters ListParameters200ApplicationJSONActionEnum = "listParameters"
)

func (e *ListParameters200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "listParameters":
		*e = ListParameters200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListParameters200ApplicationJSONActionEnum: %s", s)
	}
}

// ListParameters200ApplicationJSONData - Parameters
type ListParameters200ApplicationJSONData struct {
	Parameters []shared.Parameter `json:"parameters"`
}

// ListParameters200ApplicationJSONResultEnum - Result of the request
type ListParameters200ApplicationJSONResultEnum string

const (
	ListParameters200ApplicationJSONResultEnumSuccess ListParameters200ApplicationJSONResultEnum = "success"
	ListParameters200ApplicationJSONResultEnumError   ListParameters200ApplicationJSONResultEnum = "error"
)

func (e *ListParameters200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = ListParameters200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListParameters200ApplicationJSONResultEnum: %s", s)
	}
}

// ListParameters200ApplicationJSON - Settings
type ListParameters200ApplicationJSON struct {
	// The id of the action
	Action ListParameters200ApplicationJSONActionEnum `json:"action"`
	// Parameters
	Data ListParameters200ApplicationJSONData `json:"data"`
	// Result of the request
	Result ListParameters200ApplicationJSONResultEnum `json:"result"`
}

type ListParametersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Settings
	ListParameters200ApplicationJSONObject *ListParameters200ApplicationJSON
}
