<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Notification - <p>A notification that's associated with a budget. A budget can have up to ten notifications. </p> <p>Each notification must have at least one subscriber. A notification can have one SNS subscriber and up to 10 email subscribers, for a total of 11 subscribers.</p> <p>For example, if you have a budget for 200 dollars and you want to be notified when you go over 160 dollars, create a notification with the following parameters:</p> <ul> <li> <p>A notificationType of <code>ACTUAL</code> </p> </li> <li> <p>A <code>thresholdType</code> of <code>PERCENTAGE</code> </p> </li> <li> <p>A <code>comparisonOperator</code> of <code>GREATER_THAN</code> </p> </li> <li> <p>A notification <code>threshold</code> of <code>80</code> </p> </li> </ul>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Notification
{
	#[\JMS\Serializer\Annotation\SerializedName('ComparisonOperator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ComparisonOperatorEnum>')]
    public ComparisonOperatorEnum $comparisonOperator;
    
	#[\JMS\Serializer\Annotation\SerializedName('NotificationState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NotificationStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NotificationStateEnum $notificationState = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('NotificationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NotificationTypeEnum>')]
    public NotificationTypeEnum $notificationType;
    
	#[\JMS\Serializer\Annotation\SerializedName('Threshold')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $threshold;
    
	#[\JMS\Serializer\Annotation\SerializedName('ThresholdType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ThresholdTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ThresholdTypeEnum $thresholdType = null;
    
	public function __construct()
	{
		$this->comparisonOperator = \OpenAPI\OpenAPI\Models\Shared\ComparisonOperatorEnum::GREATER_THAN;
		$this->notificationState = null;
		$this->notificationType = \OpenAPI\OpenAPI\Models\Shared\NotificationTypeEnum::ACTUAL;
		$this->threshold = 0;
		$this->thresholdType = null;
	}
}
