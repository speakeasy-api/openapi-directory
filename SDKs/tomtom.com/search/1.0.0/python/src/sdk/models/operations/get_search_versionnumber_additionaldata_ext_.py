"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import versionnumber_enum as shared_versionnumber_enum
from enum import Enum
from typing import Optional

class GetSearchVersionNumberAdditionalDataExtExtEnum(str, Enum):
    r"""Expected response format."""
    JSON = 'json'

class GetSearchVersionNumberAdditionalDataExtGeometriesZoomEnum(str, Enum):
    r"""Defines the precision of the geometries."""
    ZERO = '0'
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'
    FIVE = '5'
    SIX = '6'
    SEVEN = '7'
    EIGHT = '8'
    NINE = '9'
    TEN = '10'
    ELEVEN = '11'
    TWELVE = '12'
    THIRTEEN = '13'
    FOURTEEN = '14'
    FIFTEEN = '15'
    SIXTEEN = '16'
    SEVENTEEN = '17'
    EIGHTEEN = '18'
    NINETEEN = '19'
    TWENTY = '20'
    TWENTY_ONE = '21'
    TWENTY_TWO = '22'


@dataclasses.dataclass
class GetSearchVersionNumberAdditionalDataExtRequest:
    
    ext: GetSearchVersionNumberAdditionalDataExtExtEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'ext', 'style': 'simple', 'explode': False }})
    r"""Expected response format."""  
    geometries: str = dataclasses.field(metadata={'query_param': { 'field_name': 'geometries', 'style': 'form', 'explode': True }})
    r"""Comma separated list of geometry UUIDs, previously retrieved from an Search API request."""  
    version_number: shared_versionnumber_enum.VersionNumberEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'versionNumber', 'style': 'simple', 'explode': False }})
    r"""Service version number. The current value is 2."""  
    geometries_zoom: Optional[GetSearchVersionNumberAdditionalDataExtGeometriesZoomEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'geometriesZoom', 'style': 'form', 'explode': True }})
    r"""Defines the precision of the geometries."""  
    

@dataclasses.dataclass
class GetSearchVersionNumberAdditionalDataExtResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    