/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class DescribeSavingsPlansRequestBody extends SpeakeasyBase {
  /**
   * The filters.
   */
  @SpeakeasyMetadata({ elemType: shared.SavingsPlanFilter })
  @Expose({ name: "filters" })
  @Type(() => shared.SavingsPlanFilter)
  filters?: shared.SavingsPlanFilter[];

  /**
   * The maximum number of results to return with a single call. To retrieve additional results, make another call with the returned token value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxResults" })
  maxResults?: number;

  /**
   * The token for the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextToken" })
  nextToken?: string;

  /**
   * The Amazon Resource Names (ARN) of the Savings Plans.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "savingsPlanArns" })
  savingsPlanArns?: string[];

  /**
   * The IDs of the Savings Plans.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "savingsPlanIds" })
  savingsPlanIds?: string[];

  /**
   * The states.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "states" })
  states?: shared.SavingsPlanStateEnum[];
}

export class DescribeSavingsPlansRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: DescribeSavingsPlansRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class DescribeSavingsPlansResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  describeSavingsPlansResponse?: shared.DescribeSavingsPlansResponse;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
