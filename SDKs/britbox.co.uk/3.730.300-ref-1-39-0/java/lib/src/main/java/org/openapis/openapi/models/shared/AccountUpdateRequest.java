/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountUpdateRequest - Updated account details.
 */
public class AccountUpdateRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public Address address;

    public AccountUpdateRequest withAddress(Address address) {
        this.address = address;
        return this;
    }
    
    /**
     * The id of the payment instrument to use by default for account transactions.
     * 
     * **DEPRECATED** The property `defaultPaymentMethodId` is now preferred.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultPaymentInstrumentId")
    public String defaultPaymentInstrumentId;

    public AccountUpdateRequest withDefaultPaymentInstrumentId(String defaultPaymentInstrumentId) {
        this.defaultPaymentInstrumentId = defaultPaymentInstrumentId;
        return this;
    }
    
    /**
     * The id of the payment method to use by default for account transactions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultPaymentMethodId")
    public String defaultPaymentMethodId;

    public AccountUpdateRequest withDefaultPaymentMethodId(String defaultPaymentMethodId) {
        this.defaultPaymentMethodId = defaultPaymentMethodId;
        return this;
    }
    
    /**
     * The first name of the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstName")
    public String firstName;

    public AccountUpdateRequest withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * The last name of the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastName")
    public String lastName;

    public AccountUpdateRequest withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * The classification rating defining the minimum rating level a user should be
     * forced to enter the account pin code for playback. Anything at this rating
     * level or above will require the pin for playback.
     * 
     * e.g. AUOFLC-MA15+
     * 
     * If you want to disable this guard pass an empty string or `null`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minRatingPlaybackGuard")
    public String minRatingPlaybackGuard;

    public AccountUpdateRequest withMinRatingPlaybackGuard(String minRatingPlaybackGuard) {
        this.minRatingPlaybackGuard = minRatingPlaybackGuard;
        return this;
    }
    
    /**
     * The segments an account should be placed under
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("segments")
    public String[] segments;

    public AccountUpdateRequest withSegments(String[] segments) {
        this.segments = segments;
        return this;
    }
    
    /**
     * Whether usage tracking is associated with an account or anonymous.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackingEnabled")
    public Boolean trackingEnabled;

    public AccountUpdateRequest withTrackingEnabled(Boolean trackingEnabled) {
        this.trackingEnabled = trackingEnabled;
        return this;
    }
    
    public AccountUpdateRequest(){}
}
