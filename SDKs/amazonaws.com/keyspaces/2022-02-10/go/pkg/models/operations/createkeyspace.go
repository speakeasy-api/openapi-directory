// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateKeyspaceXAmzTargetEnum
type CreateKeyspaceXAmzTargetEnum string

const (
	CreateKeyspaceXAmzTargetEnumKeyspacesServiceCreateKeyspace CreateKeyspaceXAmzTargetEnum = "KeyspacesService.CreateKeyspace"
)

func (e CreateKeyspaceXAmzTargetEnum) ToPointer() *CreateKeyspaceXAmzTargetEnum {
	return &e
}

func (e *CreateKeyspaceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KeyspacesService.CreateKeyspace":
		*e = CreateKeyspaceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateKeyspaceXAmzTargetEnum: %v", v)
	}
}

type CreateKeyspaceRequest struct {
	CreateKeyspaceRequest shared.CreateKeyspaceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            CreateKeyspaceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateKeyspaceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateKeyspaceResponse *shared.CreateKeyspaceResponse
	// InternalServerException
	InternalServerException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ValidationException
	ValidationException interface{}
}
