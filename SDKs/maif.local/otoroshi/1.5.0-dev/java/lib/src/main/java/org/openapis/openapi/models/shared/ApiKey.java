/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApiKey - An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.
 */
public class ApiKey {
    /**
     * The group/service ids (prefixed by group_ or service_ on which the key is authorized
     */
    @JsonProperty("authorizedEntities")
    public String[] authorizedEntities;

    public ApiKey withAuthorizedEntities(String[] authorizedEntities) {
        this.authorizedEntities = authorizedEntities;
        return this;
    }
    
    /**
     * The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything
     */
    @JsonProperty("clientId")
    public String clientId;

    public ApiKey withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * The name of the api key, for humans ;-)
     */
    @JsonProperty("clientName")
    public String clientName;

    public ApiKey withClientName(String clientName) {
        this.clientName = clientName;
        return this;
    }
    
    /**
     * The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything
     */
    @JsonProperty("clientSecret")
    public String clientSecret;

    public ApiKey withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }
    
    /**
     * Authorized number of calls per day
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dailyQuota")
    public Long dailyQuota;

    public ApiKey withDailyQuota(Long dailyQuota) {
        this.dailyQuota = dailyQuota;
        return this;
    }
    
    /**
     * Whether or not the key is enabled. If disabled, resources won't be available to calls using this key
     */
    @JsonProperty("enabled")
    public Boolean enabled;

    public ApiKey withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * Bunch of metadata for the key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;

    public ApiKey withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Authorized number of calls per month
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monthlyQuota")
    public Long monthlyQuota;

    public ApiKey withMonthlyQuota(Long monthlyQuota) {
        this.monthlyQuota = monthlyQuota;
        return this;
    }
    
    /**
     * Authorized number of calls per second, measured on 10 seconds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("throttlingQuota")
    public Long throttlingQuota;

    public ApiKey withThrottlingQuota(Long throttlingQuota) {
        this.throttlingQuota = throttlingQuota;
        return this;
    }
    
    public ApiKey(@JsonProperty("authorizedEntities") String[] authorizedEntities, @JsonProperty("clientId") String clientId, @JsonProperty("clientName") String clientName, @JsonProperty("clientSecret") String clientSecret, @JsonProperty("enabled") Boolean enabled) {
        this.authorizedEntities = authorizedEntities;
        this.clientId = clientId;
        this.clientName = clientName;
        this.clientSecret = clientSecret;
        this.enabled = enabled;
  }
}
