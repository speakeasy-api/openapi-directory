/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class DirectoryChromeosdevicesListRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;
    public DirectoryChromeosdevicesListRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;
    public DirectoryChromeosdevicesListRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;
    public DirectoryChromeosdevicesListRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;
    public DirectoryChromeosdevicesListRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * The unique ID for the customer's Google Workspace account. As an account administrator, you can also use the `my_customer` alias to represent your account's `customerId`. The `customerId` is also returned as part of the [Users resource](/admin-sdk/directory/v1/reference/users).
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=customerId")
    public String customerId;
    public DirectoryChromeosdevicesListRequest withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;
    public DirectoryChromeosdevicesListRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Return devices from all child orgunits, as well as the specified org unit. If this is set to true, 'orgUnitPath' must be provided.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=includeChildOrgunits")
    public Boolean includeChildOrgunits;
    public DirectoryChromeosdevicesListRequest withIncludeChildOrgunits(Boolean includeChildOrgunits) {
        this.includeChildOrgunits = includeChildOrgunits;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;
    public DirectoryChromeosdevicesListRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Maximum number of results to return.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;
    public DirectoryChromeosdevicesListRequest withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;
    public DirectoryChromeosdevicesListRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Device property to use for sorting results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=orderBy")
    public DirectoryChromeosdevicesListOrderByEnum orderBy;
    public DirectoryChromeosdevicesListRequest withOrderBy(DirectoryChromeosdevicesListOrderByEnum orderBy) {
        this.orderBy = orderBy;
        return this;
    }
    
    /**
     * The full path of the organizational unit (minus the leading `/`) or its unique ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=orgUnitPath")
    public String orgUnitPath;
    public DirectoryChromeosdevicesListRequest withOrgUnitPath(String orgUnitPath) {
        this.orgUnitPath = orgUnitPath;
        return this;
    }
    
    /**
     * The `pageToken` query parameter is used to request the next page of query results. The follow-on request's `pageToken` query parameter is the `nextPageToken` from your previous response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageToken")
    public String pageToken;
    public DirectoryChromeosdevicesListRequest withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;
    public DirectoryChromeosdevicesListRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Restrict information returned to a set of selected fields.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=projection")
    public DirectoryChromeosdevicesListProjectionEnum projection;
    public DirectoryChromeosdevicesListRequest withProjection(DirectoryChromeosdevicesListProjectionEnum projection) {
        this.projection = projection;
        return this;
    }
    
    /**
     * Search string in the format given at https://developers.google.com/admin-sdk/directory/v1/list-query-operators
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=query")
    public String query;
    public DirectoryChromeosdevicesListRequest withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;
    public DirectoryChromeosdevicesListRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Whether to return results in ascending or descending order. Must be used with the `orderBy` parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sortOrder")
    public DirectoryChromeosdevicesListSortOrderEnum sortOrder;
    public DirectoryChromeosdevicesListRequest withSortOrder(DirectoryChromeosdevicesListSortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;
    public DirectoryChromeosdevicesListRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;
    public DirectoryChromeosdevicesListRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
}
