// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type StorageObjectsInsertSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type StorageObjectsInsertSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type StorageObjectsInsertSecurity struct {
	Option1 *StorageObjectsInsertSecurityOption1 `security:"option"`
	Option2 *StorageObjectsInsertSecurityOption2 `security:"option"`
}

// StorageObjectsInsertProjectionEnum - Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
type StorageObjectsInsertProjectionEnum string

const (
	StorageObjectsInsertProjectionEnumFull  StorageObjectsInsertProjectionEnum = "full"
	StorageObjectsInsertProjectionEnumNoACL StorageObjectsInsertProjectionEnum = "noAcl"
)

func (e StorageObjectsInsertProjectionEnum) ToPointer() *StorageObjectsInsertProjectionEnum {
	return &e
}

func (e *StorageObjectsInsertProjectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "full":
		fallthrough
	case "noAcl":
		*e = StorageObjectsInsertProjectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageObjectsInsertProjectionEnum: %v", v)
	}
}

type StorageObjectsInsertRequest struct {
	RequestBody []byte `request:"mediaType=application/octet-stream"`
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
	Bucket string `pathParam:"style=simple,explode=false,name=bucket"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Makes the operation conditional on whether the object's current generation matches the given value.
	IfGenerationMatch *string `queryParam:"style=form,explode=true,name=ifGenerationMatch"`
	// Makes the operation conditional on whether the object's current generation does not match the given value.
	IfGenerationNotMatch *string `queryParam:"style=form,explode=true,name=ifGenerationNotMatch"`
	// Makes the operation conditional on whether the object's current metageneration matches the given value.
	IfMetagenerationMatch *string `queryParam:"style=form,explode=true,name=ifMetagenerationMatch"`
	// Makes the operation conditional on whether the object's current metageneration does not match the given value.
	IfMetagenerationNotMatch *string `queryParam:"style=form,explode=true,name=ifMetagenerationNotMatch"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
	Projection *StorageObjectsInsertProjectionEnum `queryParam:"style=form,explode=true,name=projection"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type StorageObjectsInsertResponse struct {
	ContentType string
	// Successful response
	Object      *shared.Object
	StatusCode  int
	RawResponse *http.Response
}
