// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetInstancesHealthStatusQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// GetInstancesHealthStatusXAmzTargetEnum
type GetInstancesHealthStatusXAmzTargetEnum string

const (
	GetInstancesHealthStatusXAmzTargetEnumRoute53AutoNamingV20170314GetInstancesHealthStatus GetInstancesHealthStatusXAmzTargetEnum = "Route53AutoNaming_v20170314.GetInstancesHealthStatus"
)

func (e *GetInstancesHealthStatusXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Route53AutoNaming_v20170314.GetInstancesHealthStatus":
		*e = GetInstancesHealthStatusXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetInstancesHealthStatusXAmzTargetEnum: %s", s)
	}
}

type GetInstancesHealthStatusHeaders struct {
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetInstancesHealthStatusXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetInstancesHealthStatusRequest struct {
	QueryParams GetInstancesHealthStatusQueryParams
	Headers     GetInstancesHealthStatusHeaders
	Request     shared.GetInstancesHealthStatusRequest `request:"mediaType=application/json"`
}

type GetInstancesHealthStatusResponse struct {
	ContentType string
	// Success
	GetInstancesHealthStatusResponse *shared.GetInstancesHealthStatusResponse
	// InstanceNotFound
	InstanceNotFound interface{}
	// InvalidInput
	InvalidInput interface{}
	StatusCode   int
	RawResponse  *http.Response
	// ServiceNotFound
	ServiceNotFound interface{}
}
