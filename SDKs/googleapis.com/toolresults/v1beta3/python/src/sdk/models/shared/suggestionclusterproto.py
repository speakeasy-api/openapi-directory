"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import suggestionproto as shared_suggestionproto
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SuggestionClusterProtoCategoryEnum(str, Enum):
    r"""Category in which these types of suggestions should appear. Always set."""
    UNKNOWN_CATEGORY = 'unknownCategory'
    CONTENT_LABELING = 'contentLabeling'
    TOUCH_TARGET_SIZE = 'touchTargetSize'
    LOW_CONTRAST = 'lowContrast'
    IMPLEMENTATION = 'implementation'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SuggestionClusterProto:
    r"""A set of similar suggestions that we suspect are closely related. This proto and most of the nested protos are branched from foxandcrown.prelaunchreport.service.SuggestionClusterProto, replacing PLR's dependencies with FTL's."""
    
    category: Optional[SuggestionClusterProtoCategoryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category'), 'exclude': lambda f: f is None }})
    r"""Category in which these types of suggestions should appear. Always set."""  
    suggestions: Optional[list[shared_suggestionproto.SuggestionProto]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestions'), 'exclude': lambda f: f is None }})
    r"""A sequence of suggestions. All of the suggestions within a cluster must have the same SuggestionPriority and belong to the same SuggestionCategory. Suggestions with the same screenshot URL should be adjacent."""  
    