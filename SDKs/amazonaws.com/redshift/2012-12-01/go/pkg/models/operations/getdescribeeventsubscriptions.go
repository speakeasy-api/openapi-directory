// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeEventSubscriptionsActionEnum
type GETDescribeEventSubscriptionsActionEnum string

const (
	GETDescribeEventSubscriptionsActionEnumDescribeEventSubscriptions GETDescribeEventSubscriptionsActionEnum = "DescribeEventSubscriptions"
)

func (e *GETDescribeEventSubscriptionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeEventSubscriptions":
		*e = GETDescribeEventSubscriptionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEventSubscriptionsActionEnum: %s", s)
	}
}

// GETDescribeEventSubscriptionsVersionEnum
type GETDescribeEventSubscriptionsVersionEnum string

const (
	GETDescribeEventSubscriptionsVersionEnumTwoThousandAndTwelve1201 GETDescribeEventSubscriptionsVersionEnum = "2012-12-01"
)

func (e *GETDescribeEventSubscriptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETDescribeEventSubscriptionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEventSubscriptionsVersionEnum: %s", s)
	}
}

type GETDescribeEventSubscriptionsQueryParams struct {
	Action GETDescribeEventSubscriptionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// An optional parameter that specifies the starting point to return a set of response records. When the results of a DescribeEventSubscriptions request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// <p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// The name of the Amazon Redshift event notification subscription to be described.
	SubscriptionName *string `queryParam:"style=form,explode=true,name=SubscriptionName"`
	// A tag key or keys for which you want to return all matching event notification subscriptions that are associated with the specified key or keys. For example, suppose that you have subscriptions that are tagged with keys called <code>owner</code> and <code>environment</code>. If you specify both of these tag keys in the request, Amazon Redshift returns a response with the subscriptions that have either or both of these tag keys associated with them.
	TagKeys []string `queryParam:"style=form,explode=true,name=TagKeys"`
	// A tag value or values for which you want to return all matching event notification subscriptions that are associated with the specified tag value or values. For example, suppose that you have subscriptions that are tagged with values called <code>admin</code> and <code>test</code>. If you specify both of these tag values in the request, Amazon Redshift returns a response with the subscriptions that have either or both of these tag values associated with them.
	TagValues []string                                 `queryParam:"style=form,explode=true,name=TagValues"`
	Version   GETDescribeEventSubscriptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeEventSubscriptionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeEventSubscriptionsRequest struct {
	QueryParams GETDescribeEventSubscriptionsQueryParams
	Headers     GETDescribeEventSubscriptionsHeaders
}

type GETDescribeEventSubscriptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
