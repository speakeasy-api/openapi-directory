/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateHookOption - CreateHookOption options when create a hook
 */
public class CreateHookOption {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public CreateHookOption withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorization_header")
    public String authorizationHeader;
    public CreateHookOption withAuthorizationHeader(String authorizationHeader) {
        this.authorizationHeader = authorizationHeader;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branch_filter")
    public String branchFilter;
    public CreateHookOption withBranchFilter(String branchFilter) {
        this.branchFilter = branchFilter;
        return this;
    }
    
    /**
     * CreateHookOptionConfig has all config options in it
     * required are "content_type" and "url" Required
     */
    @JsonProperty("config")
    public java.util.Map<String, String> config;
    public CreateHookOption withConfig(java.util.Map<String, String> config) {
        this.config = config;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("events")
    public String[] events;
    public CreateHookOption withEvents(String[] events) {
        this.events = events;
        return this;
    }
    
    @JsonProperty("type")
    public CreateHookOptionTypeEnum type;
    public CreateHookOption withType(CreateHookOptionTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
