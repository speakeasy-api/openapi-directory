// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ChangeOrderStatusAPIModelStatusEnum - New status of the order
type ChangeOrderStatusAPIModelStatusEnum string

const (
	ChangeOrderStatusAPIModelStatusEnumPendingPayment ChangeOrderStatusAPIModelStatusEnum = "PendingPayment"
	ChangeOrderStatusAPIModelStatusEnumProcessing     ChangeOrderStatusAPIModelStatusEnum = "Processing"
	ChangeOrderStatusAPIModelStatusEnumShipped        ChangeOrderStatusAPIModelStatusEnum = "Shipped"
	ChangeOrderStatusAPIModelStatusEnumCompleted      ChangeOrderStatusAPIModelStatusEnum = "Completed"
	ChangeOrderStatusAPIModelStatusEnumOnHold         ChangeOrderStatusAPIModelStatusEnum = "OnHold"
	ChangeOrderStatusAPIModelStatusEnumCancelled      ChangeOrderStatusAPIModelStatusEnum = "Cancelled"
	ChangeOrderStatusAPIModelStatusEnumRefunded       ChangeOrderStatusAPIModelStatusEnum = "Refunded"
	ChangeOrderStatusAPIModelStatusEnumFailed         ChangeOrderStatusAPIModelStatusEnum = "Failed"
)

func (e ChangeOrderStatusAPIModelStatusEnum) ToPointer() *ChangeOrderStatusAPIModelStatusEnum {
	return &e
}

func (e *ChangeOrderStatusAPIModelStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PendingPayment":
		fallthrough
	case "Processing":
		fallthrough
	case "Shipped":
		fallthrough
	case "Completed":
		fallthrough
	case "OnHold":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Refunded":
		fallthrough
	case "Failed":
		*e = ChangeOrderStatusAPIModelStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChangeOrderStatusAPIModelStatusEnum: %v", v)
	}
}

type ChangeOrderStatusAPIModel struct {
	// Order Id
	ID *int `json:"Id,omitempty" form:"name=Id"`
	// Reason for status change
	Reason *string `json:"Reason,omitempty" form:"name=Reason"`
	// New status of the order
	Status *ChangeOrderStatusAPIModelStatusEnum `json:"Status,omitempty" form:"name=Status"`
}
