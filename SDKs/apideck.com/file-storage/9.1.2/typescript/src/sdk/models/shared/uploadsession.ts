/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class UploadSession extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "expires_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresAt?: Date;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Indicates if parts of the file can uploaded in parallel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parallel_upload_supported" })
  parallelUploadSupported?: boolean;

  /**
   * Size in bytes of each part of the file that you will upload. Uploaded parts need to be this size for the upload to be successful.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "part_size" })
  partSize?: number;

  /**
   * Indicates if the upload session was completed successfully.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * The range of bytes that was successfully uploaded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uploaded_byte_range" })
  uploadedByteRange?: string;
}
