"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import putsrpaddtype as shared_putsrpaddtype
from ..shared import putsrpremovetype as shared_putsrpremovetype
from ..shared import putsrpupdatetype as shared_putsrpupdatetype
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class PUTSubscriptionTypeRunBillingEnum(str, Enum):
    r"""Creates an invoice for a subscription. If you have the Invoice Settlement feature enabled, a credit memo might also be created based on the [invoice and credit memo generation rule](https://knowledgecenter.zuora.com/CB_Billing/Invoice_Settlement/Credit_and_Debit_Memos/Rules_for_Generating_Invoices_and_Credit_Memos).
    
    
    The billing documents generated
    in this operation is only for this subscription, not for the entire
    customer account.
    
    
    Possible values:
    
    - `true`: An invoice is created. If you have the Invoice Settlement feature enabled, a credit memo might also be created.
    
    
    - `false`: No invoice is created.
    
    
    **Note:** This field is in Zuora REST API version control. Supported
    minor versions are `211.0` or later. To use this field in the method,
    you must set the `zuora-version` parameter to the minor version number
    in the request header.
    """
    TRUE = 'true'
    FALSE = 'false'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PUTSubscriptionType:
    r"""Container for custom fields of a Subscription object."""
    
    add: Optional[list[shared_putsrpaddtype.PUTSrpAddType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('add'), 'exclude': lambda f: f is None }})
    r"""Container for adding one or more rate plans."""  
    application_order: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationOrder'), 'exclude': lambda f: f is None }})
    r"""The priority order to apply credit memos and/or unapplied payments to an invoice. Possible item values are: `CreditMemo`, `UnappliedPayment`.
    
    **Note:**
      - This field is valid only if the `applyCredit` field is set to `true`.
      - If no value is specified for this field, the default priority order is used, [\"CreditMemo\", \"UnappliedPayment\"], to apply credit memos first and then apply unapplied payments.
      - If only one item is specified, only the items of the spedified type are applied to invoices. For example, if the value is `[\"CreditMemo\"]`, only credit memos are used to apply to invoices.
    """  
    apply_credit: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applyCredit'), 'exclude': lambda f: f is None }})
    r"""Whether to automatically apply credit memos or unapplied payments, or both to an invoice.
    
    If the value is `true`, the credit memo or unapplied payment, or both will be automatically applied to the invoice. If no value is specified or the value is `false`, no action is taken.
    
    **Note:** This field is only available if you have [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information.
    """  
    apply_credit_balance: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applyCreditBalance'), 'exclude': lambda f: f is None }})
    r"""Whether to automatically apply a credit balance to an invoice.
    
    If the value is `true`, the credit balance is applied to the invoice. If the value is `false`, no action is taken.
    
    
    To view the credit balance adjustment, retrieve the details of the invoice using the Get Invoices method.
    
    Prerequisite: `invoice` must be `true`. 
    
    **Note:** 
      - If you are using the field `invoiceCollect` rather than the field `invoice`, the `invoiceCollect` value must be `true`.
      - This field is deprecated if you have the Invoice Settlement feature enabled.
    """  
    auto_renew: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoRenew'), 'exclude': lambda f: f is None }})
    r"""If `true`, this subscription automatically renews at the end of the subscription term. Default is `false`."""  
    collect: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collect'), 'exclude': lambda f: f is None }})
    r"""Collects an automatic payment for a subscription. The collection generated in this operation is only for this subscription, not for the entire customer account.
    
    If the value is `true`, the automatic payment is collected. If the value is `false`, no action is taken.
    
    Prerequisite: The `invoice` or `runBilling` field must be `true`. 
    
    **Note**: This field is only available if you set the `zuora-version` request header to `196.0` or later.
    """  
    cpq_bundle_json_id_qt: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CpqBundleJsonId__QT'), 'exclude': lambda f: f is None }})
    r"""The Bundle product structures from Zuora Quotes if you utilize Bundling in Salesforce. Do not change the value in this field."""  
    current_term: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentTerm'), 'exclude': lambda f: f is None }})
    r"""The length of the period for the current subscription term. If `termType` is `TERMED`, this field is required and must be greater than `0`. If `termType` is `EVERGREEN`, this value is ignored."""  
    current_term_period_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentTermPeriodType'), 'exclude': lambda f: f is None }})
    r"""The period type for the current subscription term.
    
    This field is used with the `CurrentTerm` field to specify the current subscription term.
    
    Values are:
    
    * `Month` (default)
    * `Year`
    * `Day`
    * `Week`
    """  
    document_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date of the billing document, in `yyyy-mm-dd` format. It represents the invoice date for invoices, credit memo date for credit memos, and debit memo date for debit memos.
    
    - If this field is specified, the specified date is used as the billing document date. 
    - If this field is not specified, the date specified in the `targetDate` is used as the billing document date.
    """  
    include_existing_draft_doc_items: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includeExistingDraftDocItems'), 'exclude': lambda f: f is None }})
    r"""Specifies whether to include draft invoice items in subscription previews.
    Values are:
    
    * `true` (default). Includes draft invoice items in the preview result.
    * `false`. Excludes draft invoice items in the preview result.
    
    **Note:** This field is in Zuora REST API version control. Supported minor versions are 207.0 or later. To use this field in the method, you must set the **zuora-version** parameter to the minor version number in the request header. See [Zuora REST API Versions](https://www.zuora.com/developer/api-reference/#section/API-Versions) for more information.
    """  
    include_existing_draft_invoice_items: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includeExistingDraftInvoiceItems'), 'exclude': lambda f: f is None }})
    r"""Specifies whether to include draft invoice items in subscription previews.
    Values are:
    
    * `true` (default). Includes draft invoice items in the preview result.
    * `false`. Excludes draft invoice items in the preview result.
    
    **Note:** This field is in Zuora REST API version control. Supported minor versions are 186.0, 187.0, 188.0, 189.0, and 196.0. See [Zuora REST API Versions](https://www.zuora.com/developer/api-reference/#section/API-Versions) for more information.
    """  
    integration_id_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IntegrationId__NS'), 'exclude': lambda f: f is None }})
    r"""ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    integration_status_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IntegrationStatus__NS'), 'exclude': lambda f: f is None }})
    r"""Status of the subscription's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    invoice: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoice'), 'exclude': lambda f: f is None }})
    r"""**Note:** This field has been replaced by the `runBilling` field. The
    `invoice` field is only available for backward compatibility.
    
    
    Creates an invoice for a subscription. The invoice generated in this
    operation is only for this subscription, not for the entire customer
    account.
    
    
    If the value is `true`, an invoice is created. If the value is
    `false`, no action is taken. The default value is `false`. 
    
    
    This field is in Zuora REST API version control. Supported minor
    versions are `196.0` and `207.0`. To use this field in the method, you
    must set the zuora-version parameter to the minor version number in
    the request header.
    """  
    invoice_collect: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceCollect'), 'exclude': lambda f: f is None }})
    r"""**Note:** This field has been replaced by the `invoice` field
    and the `collect` field. `invoiceCollect` is available only for backward
    compatibility.
    
    
    If `true`, an invoice is generated and payment collected automatically during
    the subscription process. If `false`, no invoicing or payment
    takes place.  The invoice generated in this operation is only for this subscription,
    not for the entire customer account.
    
    **Note**: This field is only available if you set the `zuora-version` request header to `186.0`, `187.0`, `188.0`, or `189.0`.
    """  
    invoice_separately: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceSeparately'), 'exclude': lambda f: f is None }})
    r"""Separates a single subscription from other subscriptions and invoices the charge independently.
    
    If the value is `true`, the subscription is billed separately from other subscriptions. If the value is `false`, the subscription is included with other subscriptions in the account invoice.
    
    The default value is `false`.
    Prerequisite: The default subscription setting Enable Subscriptions to be Invoiced Separately must be set to Yes.
    """  
    invoice_target_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceTargetDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""**Note:** This field has been replaced by the `targetDate` field. The
    `invoiceTargetDate` field is only available for backward
    compatibility.
    
    
    Date through which to calculate charges if an invoice is generated, as
    yyyy-mm-dd. Default is current date.
    
    
    This field is in Zuora REST API version control. Supported minor
    versions are `207.0` and earlier.
    """  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""String of up to 500 characters."""  
    opportunity_close_date_qt: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OpportunityCloseDate__QT'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The closing date of the Opportunity. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes."""  
    opportunity_name_qt: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OpportunityName__QT'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the Opportunity. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes."""  
    preview: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preview'), 'exclude': lambda f: f is None }})
    r"""If `true` the update is made in preview mode. The default setting is `false`."""  
    preview_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previewType'), 'exclude': lambda f: f is None }})
    r"""The type of preview you will receive.
    
    This field is in Zuora REST API version control. The supported values of this field depend on the REST API minor version you specified in the request header.
    
    
    * If you do not specify the REST API minor version or specify the minor version number to one of following values in the request header:
    
      * 186.0
      * 187.0
      * 188.0
      * 189.0
      * 196.0 
    
      The following values are supported in the **previewType** field:
    
      * InvoiceItem
      * ChargeMetrics
      * InvoiceItemChargeMetrics
    
      The default value is InvoiceItem.
    
    * If you specify the REST API minor version to 207.0 or later in the request header, the following values are supported in the **previewType** field:
    
      - LegalDoc
      - ChargeMetrics
      - LegalDocChargeMetrics
    
      The default value is LegalDoc.
    
    See [Zuora REST API Versions](https://www.zuora.com/developer/api-reference/#section/API-Versions) for more information.
    """  
    project_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Project__NS'), 'exclude': lambda f: f is None }})
    r"""The NetSuite project that the subscription was created from. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    quote_business_type_qt: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QuoteBusinessType__QT'), 'exclude': lambda f: f is None }})
    r"""The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes."""  
    quote_number_qt: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QuoteNumber__QT'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the Quote. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes."""  
    quote_type_qt: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QuoteType__QT'), 'exclude': lambda f: f is None }})
    r"""The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is used in Zuora data sources to report on Subscription metrics. If the subscription originated from Zuora Quotes, the value is populated with the value from Zuora Quotes."""  
    remove: Optional[list[shared_putsrpremovetype.PUTSrpRemoveType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remove'), 'exclude': lambda f: f is None }})
    r"""Container for removing one or more rate plans."""  
    renewal_setting: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renewalSetting'), 'exclude': lambda f: f is None }})
    r"""Specifies whether a termed subscription will remain `TERMED` or change to `EVERGREEN` when it is renewed.
    
    Values are:
    
    * `RENEW_WITH_SPECIFIC_TERM` (default)
    * `RENEW_TO_EVERGREEN`
    """  
    renewal_term: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renewalTerm'), 'exclude': lambda f: f is None }})
    r"""The length of the period for the subscription renewal term. Default is `0`."""  
    renewal_term_period_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renewalTermPeriodType'), 'exclude': lambda f: f is None }})
    r"""The period type for the subscription renewal term.
    
    This field is used with the `renewalTerm` field to specify the subscription renewal term.
    
    Values are:
    
    * `Month` (default)
    * `Year`
    * `Day`
    * `Week`
    """  
    run_billing: Optional[PUTSubscriptionTypeRunBillingEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('runBilling'), 'exclude': lambda f: f is None }})
    r"""Creates an invoice for a subscription. If you have the Invoice Settlement feature enabled, a credit memo might also be created based on the [invoice and credit memo generation rule](https://knowledgecenter.zuora.com/CB_Billing/Invoice_Settlement/Credit_and_Debit_Memos/Rules_for_Generating_Invoices_and_Credit_Memos).
    
    
    The billing documents generated
    in this operation is only for this subscription, not for the entire
    customer account.
    
    
    Possible values:
    
    - `true`: An invoice is created. If you have the Invoice Settlement feature enabled, a credit memo might also be created.
    
    
    - `false`: No invoice is created.
    
    
    **Note:** This field is in Zuora REST API version control. Supported
    minor versions are `211.0` or later. To use this field in the method,
    you must set the `zuora-version` parameter to the minor version number
    in the request header.
    """  
    sales_order_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SalesOrder__NS'), 'exclude': lambda f: f is None }})
    r"""The NetSuite sales order than the subscription was created from. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    sync_date_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SyncDate__NS'), 'exclude': lambda f: f is None }})
    r"""Date when the subscription was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    target_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date through which to calculate charges if an invoice or a credit memo is generated, as
    yyyy-mm-dd. Default is current date.
    
    
    **Note:** The credit memo is only available if you have the Invoice Settlement feature enabled.
    
    
    This field is in Zuora REST API version control. Supported minor
    versions are `211.0` and later. To use this field in the method, you
    must set the  `zuora-version` parameter to the minor version number in
    the request header.
    """  
    term_start_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('termStartDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date the subscription term begins, as yyyy-mm-dd. If this is a renewal subscription, this date is different from the subscription start date."""  
    term_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('termType'), 'exclude': lambda f: f is None }})
    r"""Possible values are: `TERMED`, `EVERGREEN`."""  
    update: Optional[list[shared_putsrpupdatetype.PUTSrpUpdateType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('update'), 'exclude': lambda f: f is None }})
    r"""Container for updating one or more rate plans."""  
    