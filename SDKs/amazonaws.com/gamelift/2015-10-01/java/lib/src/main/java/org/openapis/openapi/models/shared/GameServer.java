/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GameServer - &lt;p&gt; &lt;b&gt;This data type is used with the Amazon GameLift FleetIQ and game server groups.&lt;/b&gt; &lt;/p&gt; &lt;p&gt;Properties describing a game server that is running on an instance in a game server group. &lt;/p&gt; &lt;p&gt;A game server is created by a successful call to &lt;code&gt;RegisterGameServer&lt;/code&gt; and deleted by calling &lt;code&gt;DeregisterGameServer&lt;/code&gt;. A game server is claimed to host a game session by calling &lt;code&gt;ClaimGameServer&lt;/code&gt;. &lt;/p&gt;
 */
public class GameServer {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClaimStatus")
    public GameServerClaimStatusEnum claimStatus;

    public GameServer withClaimStatus(GameServerClaimStatusEnum claimStatus) {
        this.claimStatus = claimStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConnectionInfo")
    public String connectionInfo;

    public GameServer withConnectionInfo(String connectionInfo) {
        this.connectionInfo = connectionInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameServerData")
    public String gameServerData;

    public GameServer withGameServerData(String gameServerData) {
        this.gameServerData = gameServerData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameServerGroupArn")
    public String gameServerGroupArn;

    public GameServer withGameServerGroupArn(String gameServerGroupArn) {
        this.gameServerGroupArn = gameServerGroupArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameServerGroupName")
    public String gameServerGroupName;

    public GameServer withGameServerGroupName(String gameServerGroupName) {
        this.gameServerGroupName = gameServerGroupName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameServerId")
    public String gameServerId;

    public GameServer withGameServerId(String gameServerId) {
        this.gameServerId = gameServerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceId")
    public String instanceId;

    public GameServer withInstanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastClaimTime")
    public OffsetDateTime lastClaimTime;

    public GameServer withLastClaimTime(OffsetDateTime lastClaimTime) {
        this.lastClaimTime = lastClaimTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastHealthCheckTime")
    public OffsetDateTime lastHealthCheckTime;

    public GameServer withLastHealthCheckTime(OffsetDateTime lastHealthCheckTime) {
        this.lastHealthCheckTime = lastHealthCheckTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("RegistrationTime")
    public OffsetDateTime registrationTime;

    public GameServer withRegistrationTime(OffsetDateTime registrationTime) {
        this.registrationTime = registrationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UtilizationStatus")
    public GameServerUtilizationStatusEnum utilizationStatus;

    public GameServer withUtilizationStatus(GameServerUtilizationStatusEnum utilizationStatus) {
        this.utilizationStatus = utilizationStatus;
        return this;
    }
    
    public GameServer(){}
}
