/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostRegistrationSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  gmaAuth: string;
}

/**
 * code and secret to accept the invitation
 */
export class PostRegistrationRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Secret" })
  secret?: string;
}

export class PostRegistration201ApplicationJSONPrivate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "FolderId" })
  folderId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SpaceId" })
  spaceId?: string;
}

/**
 * Id of the private space and the contract folder
 */
export class PostRegistration201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Private" })
  @Type(() => PostRegistration201ApplicationJSONPrivate)
  private?: PostRegistration201ApplicationJSONPrivate;
}

export class PostRegistrationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Id of the private space and the contract folder
   */
  @SpeakeasyMetadata()
  postRegistration201ApplicationJSONObject?: PostRegistration201ApplicationJSON;
}
