/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GETPublicEmailTemplateResponse - OK
 */
public class GETPublicEmailTemplateResponse {
    /**
     * The status of the email template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public GETPublicEmailTemplateResponse withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * Email BCC address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bccEmailAddress")
    public String bccEmailAddress;
    public GETPublicEmailTemplateResponse withBccEmailAddress(String bccEmailAddress) {
        this.bccEmailAddress = bccEmailAddress;
        return this;
    }
    
    /**
     * Email CC address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ccEmailAddress")
    public String ccEmailAddress;
    public GETPublicEmailTemplateResponse withCcEmailAddress(String ccEmailAddress) {
        this.ccEmailAddress = ccEmailAddress;
        return this;
    }
    
    /**
     * Email cc type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ccEmailType")
    public GETPublicEmailTemplateResponseCcEmailTypeEnum ccEmailType;
    public GETPublicEmailTemplateResponse withCcEmailType(GETPublicEmailTemplateResponseCcEmailTypeEnum ccEmailType) {
        this.ccEmailType = ccEmailType;
        return this;
    }
    
    /**
     * The ID of the user who created the notification definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdBy")
    public String createdBy;
    public GETPublicEmailTemplateResponse withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * The time when the notification definition was created. Specified in the UTC timezone in the ISO860 format (YYYY-MM-DDThh:mm:ss.sTZD). E.g. 1997-07-16T19:20:30.45+00:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdOn")
    public OffsetDateTime createdOn;
    public GETPublicEmailTemplateResponse withCreatedOn(OffsetDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }
    
    /**
     * The description of the email template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GETPublicEmailTemplateResponse withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The email body. You can add merge fields in the email object using angle brackets. 
     * User can also embed html tags if 'isHtml' is true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailBody")
    public String emailBody;
    public GETPublicEmailTemplateResponse withEmailBody(String emailBody) {
        this.emailBody = emailBody;
        return this;
    }
    
    /**
     * The email subject. You can add merge fields in the email subject using angle brackets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailSubject")
    public String emailSubject;
    public GETPublicEmailTemplateResponse withEmailSubject(String emailSubject) {
        this.emailSubject = emailSubject;
        return this;
    }
    
    /**
     * The endcode type of the email body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encodingType")
    public GETPublicEmailTemplateResponseEncodingTypeEnum encodingType;
    public GETPublicEmailTemplateResponse withEncodingType(GETPublicEmailTemplateResponseEncodingTypeEnum encodingType) {
        this.encodingType = encodingType;
        return this;
    }
    
    /**
     * The name of the event type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTypeName")
    public String eventTypeName;
    public GETPublicEmailTemplateResponse withEventTypeName(String eventTypeName) {
        this.eventTypeName = eventTypeName;
        return this;
    }
    
    /**
     * The namespace of the `eventTypeName` field. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTypeNamespace")
    public String eventTypeNamespace;
    public GETPublicEmailTemplateResponse withEventTypeNamespace(String eventTypeNamespace) {
        this.eventTypeNamespace = eventTypeNamespace;
        return this;
    }
    
    /**
     * If formEmailType is SpecificEmail, this field is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fromEmailAddress")
    public String fromEmailAddress;
    public GETPublicEmailTemplateResponse withFromEmailAddress(String fromEmailAddress) {
        this.fromEmailAddress = fromEmailAddress;
        return this;
    }
    
    /**
     * The from email type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fromEmailType")
    public GETPublicEmailTemplateResponseFromEmailTypeEnum fromEmailType;
    public GETPublicEmailTemplateResponse withFromEmailType(GETPublicEmailTemplateResponseFromEmailTypeEnum fromEmailType) {
        this.fromEmailType = fromEmailType;
        return this;
    }
    
    /**
     * The name of email sender.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fromName")
    public String fromName;
    public GETPublicEmailTemplateResponse withFromName(String fromName) {
        this.fromName = fromName;
        return this;
    }
    
    /**
     * The filter rule associated with this notification definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETPublicEmailTemplateResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Specified whether the style of email body is HTML.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isHtml")
    public Boolean isHtml;
    public GETPublicEmailTemplateResponse withIsHtml(Boolean isHtml) {
        this.isHtml = isHtml;
        return this;
    }
    
    /**
     * The name of the email template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GETPublicEmailTemplateResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * If replyToEmailType is SpecificEmail, this field is required
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replyToEmailAddress")
    public String replyToEmailAddress;
    public GETPublicEmailTemplateResponse withReplyToEmailAddress(String replyToEmailAddress) {
        this.replyToEmailAddress = replyToEmailAddress;
        return this;
    }
    
    /**
     * The reply email type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replyToEmailType")
    public GETPublicEmailTemplateResponseReplyToEmailTypeEnum replyToEmailType;
    public GETPublicEmailTemplateResponse withReplyToEmailType(GETPublicEmailTemplateResponseReplyToEmailTypeEnum replyToEmailType) {
        this.replyToEmailType = replyToEmailType;
        return this;
    }
    
    /**
     * If toEmailType is SpecificEmail, this field is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("toEmailAddress")
    public String toEmailAddress;
    public GETPublicEmailTemplateResponse withToEmailAddress(String toEmailAddress) {
        this.toEmailAddress = toEmailAddress;
        return this;
    }
    
    /**
     * Email receive type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("toEmailType")
    public GETPublicEmailTemplateResponseToEmailTypeEnum toEmailType;
    public GETPublicEmailTemplateResponse withToEmailType(GETPublicEmailTemplateResponseToEmailTypeEnum toEmailType) {
        this.toEmailType = toEmailType;
        return this;
    }
    
    /**
     * The ID of the user who updated the notification definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedBy")
    public String updatedBy;
    public GETPublicEmailTemplateResponse withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
    /**
     * The time when the notification definition was updated. Specified in the UTC timezone in the ISO860 format (YYYY-MM-DDThh:mm:ss.sTZD). E.g. 1997-07-16T19:20:30.45+00:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedOn")
    public OffsetDateTime updatedOn;
    public GETPublicEmailTemplateResponse withUpdatedOn(OffsetDateTime updatedOn) {
        this.updatedOn = updatedOn;
        return this;
    }
    
}
