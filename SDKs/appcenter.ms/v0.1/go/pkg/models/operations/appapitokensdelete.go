// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AppAPITokensDeleteSecurity struct {
	Basic shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
}

type AppAPITokensDeletePathParams struct {
	// The unique ID (UUID) of the api token
	APITokenID string `pathParam:"style=simple,explode=false,name=api_token_id"`
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type AppAPITokensDeleteRequest struct {
	PathParams AppAPITokensDeletePathParams
	Security   AppAPITokensDeleteSecurity
}

type AppAPITokensDelete404ApplicationJSONErrorCodeEnum string

const (
	AppAPITokensDelete404ApplicationJSONErrorCodeEnumBadRequest          AppAPITokensDelete404ApplicationJSONErrorCodeEnum = "BadRequest"
	AppAPITokensDelete404ApplicationJSONErrorCodeEnumConflict            AppAPITokensDelete404ApplicationJSONErrorCodeEnum = "Conflict"
	AppAPITokensDelete404ApplicationJSONErrorCodeEnumNotAcceptable       AppAPITokensDelete404ApplicationJSONErrorCodeEnum = "NotAcceptable"
	AppAPITokensDelete404ApplicationJSONErrorCodeEnumNotFound            AppAPITokensDelete404ApplicationJSONErrorCodeEnum = "NotFound"
	AppAPITokensDelete404ApplicationJSONErrorCodeEnumInternalServerError AppAPITokensDelete404ApplicationJSONErrorCodeEnum = "InternalServerError"
	AppAPITokensDelete404ApplicationJSONErrorCodeEnumUnauthorized        AppAPITokensDelete404ApplicationJSONErrorCodeEnum = "Unauthorized"
	AppAPITokensDelete404ApplicationJSONErrorCodeEnumTooManyRequests     AppAPITokensDelete404ApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AppAPITokensDelete404ApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppAPITokensDelete404ApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppAPITokensDelete404ApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AppAPITokensDelete404ApplicationJSONError struct {
	Code    AppAPITokensDelete404ApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                            `json:"message"`
}

// AppAPITokensDelete404ApplicationJSON - NotFound
type AppAPITokensDelete404ApplicationJSON struct {
	Error AppAPITokensDelete404ApplicationJSONError `json:"error"`
}

type AppAPITokensDelete401ApplicationJSONErrorCodeEnum string

const (
	AppAPITokensDelete401ApplicationJSONErrorCodeEnumBadRequest          AppAPITokensDelete401ApplicationJSONErrorCodeEnum = "BadRequest"
	AppAPITokensDelete401ApplicationJSONErrorCodeEnumConflict            AppAPITokensDelete401ApplicationJSONErrorCodeEnum = "Conflict"
	AppAPITokensDelete401ApplicationJSONErrorCodeEnumNotAcceptable       AppAPITokensDelete401ApplicationJSONErrorCodeEnum = "NotAcceptable"
	AppAPITokensDelete401ApplicationJSONErrorCodeEnumNotFound            AppAPITokensDelete401ApplicationJSONErrorCodeEnum = "NotFound"
	AppAPITokensDelete401ApplicationJSONErrorCodeEnumInternalServerError AppAPITokensDelete401ApplicationJSONErrorCodeEnum = "InternalServerError"
	AppAPITokensDelete401ApplicationJSONErrorCodeEnumUnauthorized        AppAPITokensDelete401ApplicationJSONErrorCodeEnum = "Unauthorized"
	AppAPITokensDelete401ApplicationJSONErrorCodeEnumTooManyRequests     AppAPITokensDelete401ApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AppAPITokensDelete401ApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppAPITokensDelete401ApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppAPITokensDelete401ApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AppAPITokensDelete401ApplicationJSONError struct {
	Code    AppAPITokensDelete401ApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                            `json:"message"`
}

// AppAPITokensDelete401ApplicationJSON - Unauthorized
type AppAPITokensDelete401ApplicationJSON struct {
	Error AppAPITokensDelete401ApplicationJSONError `json:"error"`
}

type AppAPITokensDelete400ApplicationJSONErrorCodeEnum string

const (
	AppAPITokensDelete400ApplicationJSONErrorCodeEnumBadRequest          AppAPITokensDelete400ApplicationJSONErrorCodeEnum = "BadRequest"
	AppAPITokensDelete400ApplicationJSONErrorCodeEnumConflict            AppAPITokensDelete400ApplicationJSONErrorCodeEnum = "Conflict"
	AppAPITokensDelete400ApplicationJSONErrorCodeEnumNotAcceptable       AppAPITokensDelete400ApplicationJSONErrorCodeEnum = "NotAcceptable"
	AppAPITokensDelete400ApplicationJSONErrorCodeEnumNotFound            AppAPITokensDelete400ApplicationJSONErrorCodeEnum = "NotFound"
	AppAPITokensDelete400ApplicationJSONErrorCodeEnumInternalServerError AppAPITokensDelete400ApplicationJSONErrorCodeEnum = "InternalServerError"
	AppAPITokensDelete400ApplicationJSONErrorCodeEnumUnauthorized        AppAPITokensDelete400ApplicationJSONErrorCodeEnum = "Unauthorized"
	AppAPITokensDelete400ApplicationJSONErrorCodeEnumTooManyRequests     AppAPITokensDelete400ApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AppAPITokensDelete400ApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppAPITokensDelete400ApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppAPITokensDelete400ApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AppAPITokensDelete400ApplicationJSONError struct {
	Code    AppAPITokensDelete400ApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                            `json:"message"`
}

// AppAPITokensDelete400ApplicationJSON - Error
type AppAPITokensDelete400ApplicationJSON struct {
	Error AppAPITokensDelete400ApplicationJSONError `json:"error"`
}

type AppAPITokensDeleteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	AppAPITokensDelete400ApplicationJSONObject *AppAPITokensDelete400ApplicationJSON
	// Unauthorized
	AppAPITokensDelete401ApplicationJSONObject *AppAPITokensDelete401ApplicationJSON
	// NotFound
	AppAPITokensDelete404ApplicationJSONObject *AppAPITokensDelete404ApplicationJSON
}
