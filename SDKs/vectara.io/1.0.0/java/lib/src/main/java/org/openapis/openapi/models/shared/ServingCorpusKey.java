/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ServingCorpusKey {
    /**
     * The Corpus ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("corpusId")
    public Long corpusId;
    public ServingCorpusKey withCorpusId(Long corpusId) {
        this.corpusId = corpusId;
        return this;
    }
    
    /**
     * The Customer ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerId")
    public Long customerId;
    public ServingCorpusKey withCustomerId(Long customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * Weights on custom dimensions for the corpus.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dim")
    public VectaraservingCustomDimension[] dim;
    public ServingCorpusKey withDim(VectaraservingCustomDimension[] dim) {
        this.dim = dim;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadataFilter")
    public String metadataFilter;
    public ServingCorpusKey withMetadataFilter(String metadataFilter) {
        this.metadataFilter = metadataFilter;
        return this;
    }
    
    /**
     * Semantics controls the interpretation of the query string by the
     * server, and can be used to override the default semantics assigned
     * in the corpus definition.
     * 
     * 
     * 
     * 
     *  - DEFAULT: Use corpus-assigned semantics.  This is the most common setting.
     *  - QUERY: Use query semantics.  This is also common.
     *  - RESPONSE: Use response semantics.  Usage of this is rare.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("semantics")
    public CorpusKeySemanticsEnum semantics;
    public ServingCorpusKey withSemantics(CorpusKeySemanticsEnum semantics) {
        this.semantics = semantics;
        return this;
    }
    
}
