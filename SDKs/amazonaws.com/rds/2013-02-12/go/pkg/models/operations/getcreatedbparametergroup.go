// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateDBParameterGroupActionEnum
type GETCreateDBParameterGroupActionEnum string

const (
	GETCreateDBParameterGroupActionEnumCreateDbParameterGroup GETCreateDBParameterGroupActionEnum = "CreateDBParameterGroup"
)

func (e *GETCreateDBParameterGroupActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateDBParameterGroup":
		*e = GETCreateDBParameterGroupActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateDBParameterGroupActionEnum: %s", s)
	}
}

// GETCreateDBParameterGroupVersionEnum
type GETCreateDBParameterGroupVersionEnum string

const (
	GETCreateDBParameterGroupVersionEnumTwoThousandAndThirteen0212 GETCreateDBParameterGroupVersionEnum = "2013-02-12"
)

func (e *GETCreateDBParameterGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-02-12":
		*e = GETCreateDBParameterGroupVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateDBParameterGroupVersionEnum: %s", s)
	}
}

type GETCreateDBParameterGroupRequest struct {
	Action                 GETCreateDBParameterGroupActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DBParameterGroupFamily string                               `queryParam:"style=form,explode=true,name=DBParameterGroupFamily"`
	DBParameterGroupName   string                               `queryParam:"style=form,explode=true,name=DBParameterGroupName"`
	Description            string                               `queryParam:"style=form,explode=true,name=Description"`
	Version                GETCreateDBParameterGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm          *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateDBParameterGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
