// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudMlV1TrainingInputScaleTierEnum - Required. Specifies the machine types, the number of replicas for workers and parameter servers.
type GoogleCloudMlV1TrainingInputScaleTierEnum string

const (
	GoogleCloudMlV1TrainingInputScaleTierEnumBasic     GoogleCloudMlV1TrainingInputScaleTierEnum = "BASIC"
	GoogleCloudMlV1TrainingInputScaleTierEnumStandard1 GoogleCloudMlV1TrainingInputScaleTierEnum = "STANDARD_1"
	GoogleCloudMlV1TrainingInputScaleTierEnumPremium1  GoogleCloudMlV1TrainingInputScaleTierEnum = "PREMIUM_1"
	GoogleCloudMlV1TrainingInputScaleTierEnumBasicGpu  GoogleCloudMlV1TrainingInputScaleTierEnum = "BASIC_GPU"
	GoogleCloudMlV1TrainingInputScaleTierEnumBasicTpu  GoogleCloudMlV1TrainingInputScaleTierEnum = "BASIC_TPU"
	GoogleCloudMlV1TrainingInputScaleTierEnumCustom    GoogleCloudMlV1TrainingInputScaleTierEnum = "CUSTOM"
)

func (e *GoogleCloudMlV1TrainingInputScaleTierEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BASIC":
		fallthrough
	case "STANDARD_1":
		fallthrough
	case "PREMIUM_1":
		fallthrough
	case "BASIC_GPU":
		fallthrough
	case "BASIC_TPU":
		fallthrough
	case "CUSTOM":
		*e = GoogleCloudMlV1TrainingInputScaleTierEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudMlV1TrainingInputScaleTierEnum: %s", s)
	}
}

// GoogleCloudMlV1TrainingInput - Represents input parameters for a training job. When using the gcloud command to submit your training job, you can specify the input parameters as command-line arguments and/or in a YAML configuration file referenced from the --config command-line argument. For details, see the guide to [submitting a training job](/ai-platform/training/docs/training-jobs).
type GoogleCloudMlV1TrainingInput struct {
	// Optional. Command-line arguments passed to the training application when it starts. If your job uses a custom container, then the arguments are passed to the container's `ENTRYPOINT` command.
	Args []string `json:"args,omitempty"`
	// Optional. Whether you want AI Platform Training to enable [interactive shell access](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by TrainingOutput.web_access_uris or HyperparameterOutput.web_access_uris (within TrainingOutput.trials).
	EnableWebAccess *bool `json:"enableWebAccess,omitempty"`
	// Represents a custom encryption key configuration that can be applied to a resource.
	EncryptionConfig *GoogleCloudMlV1EncryptionConfig `json:"encryptionConfig,omitempty"`
	// Represents the configuration for a replica in a cluster.
	EvaluatorConfig *GoogleCloudMlV1ReplicaConfig `json:"evaluatorConfig,omitempty"`
	// Optional. The number of evaluator replicas to use for the training job. Each replica in the cluster will be of the type specified in `evaluator_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `evaluator_type`. The default value is zero.
	EvaluatorCount *string `json:"evaluatorCount,omitempty"`
	// Optional. Specifies the type of virtual machine to use for your training job's evaluator nodes. The supported values are the same as those described in the entry for `masterType`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. This value must be present when `scaleTier` is set to `CUSTOM` and `evaluatorCount` is greater than zero.
	EvaluatorType *string `json:"evaluatorType,omitempty"`
	// Represents a set of hyperparameters to optimize.
	Hyperparameters *GoogleCloudMlV1HyperparameterSpec `json:"hyperparameters,omitempty"`
	// Optional. A Google Cloud Storage path in which to store training outputs and other data needed for training. This path is passed to your TensorFlow program as the '--job-dir' command-line argument. The benefit of specifying this field is that Cloud ML validates the path for use in training.
	JobDir *string `json:"jobDir,omitempty"`
	// Represents the configuration for a replica in a cluster.
	MasterConfig *GoogleCloudMlV1ReplicaConfig `json:"masterConfig,omitempty"`
	// Optional. Specifies the type of virtual machine to use for your training job's master worker. You must specify this field when `scaleTier` is set to `CUSTOM`. You can use certain Compute Engine machine types directly in this field. See the [list of compatible Compute Engine machine types](/ai-platform/training/docs/machine-types#compute-engine-machine-types). Alternatively, you can use the certain legacy machine types in this field. See the [list of legacy machine types](/ai-platform/training/docs/machine-types#legacy-machine-types). Finally, if you want to use a TPU for training, specify `cloud_tpu` in this field. Learn more about the [special configuration options for training with TPUs](/ai-platform/training/docs/using-tpus#configuring_a_custom_tpu_machine).
	MasterType *string `json:"masterType,omitempty"`
	// Optional. The full name of the [Compute Engine network](/vpc/docs/vpc) to which the Job is peered. For example, `projects/12345/global/networks/myVPC`. The format of this field is `projects/{project}/global/networks/{network}`, where {project} is a project number (like `12345`) and {network} is network name. Private services access must already be configured for the network. If left unspecified, the Job is not peered with any network. [Learn about using VPC Network Peering.](/ai-platform/training/docs/vpc-peering).
	Network *string `json:"network,omitempty"`
	// Required. The Google Cloud Storage location of the packages with the training program and any additional dependencies. The maximum number of package URIs is 100.
	PackageUris []string `json:"packageUris,omitempty"`
	// Represents the configuration for a replica in a cluster.
	ParameterServerConfig *GoogleCloudMlV1ReplicaConfig `json:"parameterServerConfig,omitempty"`
	// Optional. The number of parameter server replicas to use for the training job. Each replica in the cluster will be of the type specified in `parameter_server_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `parameter_server_type`. The default value is zero.
	ParameterServerCount *string `json:"parameterServerCount,omitempty"`
	// Optional. Specifies the type of virtual machine to use for your training job's parameter server. The supported values are the same as those described in the entry for `master_type`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. This value must be present when `scaleTier` is set to `CUSTOM` and `parameter_server_count` is greater than zero.
	ParameterServerType *string `json:"parameterServerType,omitempty"`
	// Required. The Python module name to run after installing the packages.
	PythonModule *string `json:"pythonModule,omitempty"`
	// Optional. The version of Python used in training. You must either specify this field or specify `masterConfig.imageUri`. The following Python versions are available: * Python '3.7' is available when `runtime_version` is set to '1.15' or later. * Python '3.5' is available when `runtime_version` is set to a version from '1.4' to '1.14'. * Python '2.7' is available when `runtime_version` is set to '1.15' or earlier. Read more about the Python versions available for [each runtime version](/ml-engine/docs/runtime-version-list).
	PythonVersion *string `json:"pythonVersion,omitempty"`
	// Required. The region to run the training job in. See the [available regions](/ai-platform/training/docs/regions) for AI Platform Training.
	Region *string `json:"region,omitempty"`
	// Optional. The AI Platform runtime version to use for training. You must either specify this field or specify `masterConfig.imageUri`. For more information, see the [runtime version list](/ai-platform/training/docs/runtime-version-list) and learn [how to manage runtime versions](/ai-platform/training/docs/versioning).
	RuntimeVersion *string `json:"runtimeVersion,omitempty"`
	// Required. Specifies the machine types, the number of replicas for workers and parameter servers.
	ScaleTier *GoogleCloudMlV1TrainingInputScaleTierEnum `json:"scaleTier,omitempty"`
	// All parameters related to scheduling of training jobs.
	Scheduling *GoogleCloudMlV1Scheduling `json:"scheduling,omitempty"`
	// Optional. The email address of a service account to use when running the training appplication. You must have the `iam.serviceAccounts.actAs` permission for the specified service account. In addition, the AI Platform Training Google-managed service account must have the `roles/iam.serviceAccountAdmin` role for the specified service account. [Learn more about configuring a service account.](/ai-platform/training/docs/custom-service-account) If not specified, the AI Platform Training Google-managed service account is used by default.
	ServiceAccount *string `json:"serviceAccount,omitempty"`
	// Optional. Use `chief` instead of `master` in the `TF_CONFIG` environment variable when training with a custom container. Defaults to `false`. [Learn more about this field.](/ai-platform/training/docs/distributed-training-details#chief-versus-master) This field has no effect for training jobs that don't use a custom container.
	UseChiefInTfConfig *bool `json:"useChiefInTfConfig,omitempty"`
	// Represents the configuration for a replica in a cluster.
	WorkerConfig *GoogleCloudMlV1ReplicaConfig `json:"workerConfig,omitempty"`
	// Optional. The number of worker replicas to use for the training job. Each replica in the cluster will be of the type specified in `worker_type`. This value can only be used when `scale_tier` is set to `CUSTOM`. If you set this value, you must also set `worker_type`. The default value is zero.
	WorkerCount *string `json:"workerCount,omitempty"`
	// Optional. Specifies the type of virtual machine to use for your training job's worker nodes. The supported values are the same as those described in the entry for `masterType`. This value must be consistent with the category of machine type that `masterType` uses. In other words, both must be Compute Engine machine types or both must be legacy machine types. If you use `cloud_tpu` for this value, see special instructions for [configuring a custom TPU machine](/ml-engine/docs/tensorflow/using-tpus#configuring_a_custom_tpu_machine). This value must be present when `scaleTier` is set to `CUSTOM` and `workerCount` is greater than zero.
	WorkerType *string `json:"workerType,omitempty"`
}
