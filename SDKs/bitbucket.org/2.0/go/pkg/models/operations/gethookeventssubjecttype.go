// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetHookEventsSubjectTypeSecurity struct {
	APIKey *shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
	Basic  *shared.SchemeBasic  `security:"scheme,type=http,subtype=basic"`
	Oauth2 *shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

// GetHookEventsSubjectTypeSubjectTypeEnum - A resource or subject type.
type GetHookEventsSubjectTypeSubjectTypeEnum string

const (
	GetHookEventsSubjectTypeSubjectTypeEnumRepository GetHookEventsSubjectTypeSubjectTypeEnum = "repository"
	GetHookEventsSubjectTypeSubjectTypeEnumWorkspace  GetHookEventsSubjectTypeSubjectTypeEnum = "workspace"
)

func (e *GetHookEventsSubjectTypeSubjectTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "repository":
		fallthrough
	case "workspace":
		*e = GetHookEventsSubjectTypeSubjectTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHookEventsSubjectTypeSubjectTypeEnum: %s", s)
	}
}

type GetHookEventsSubjectTypePathParams struct {
	// A resource or subject type.
	SubjectType GetHookEventsSubjectTypeSubjectTypeEnum `pathParam:"style=simple,explode=false,name=subject_type"`
}

type GetHookEventsSubjectTypeRequest struct {
	PathParams GetHookEventsSubjectTypePathParams
	Security   GetHookEventsSubjectTypeSecurity
}

type GetHookEventsSubjectTypeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// If an invalid `{subject_type}` value was specified.
	Error map[string]interface{}
	// A paginated list of webhook types available to subscribe on.
	PaginatedHookEvents *shared.PaginatedHookEvents
}
