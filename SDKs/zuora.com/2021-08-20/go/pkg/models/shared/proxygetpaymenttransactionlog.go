// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ProxyGetPaymentTransactionLogGatewayStateEnum - The state of the transaction at the payment gateway.
type ProxyGetPaymentTransactionLogGatewayStateEnum string

const (
	ProxyGetPaymentTransactionLogGatewayStateEnumMarkedForSubmission ProxyGetPaymentTransactionLogGatewayStateEnum = "MarkedForSubmission"
	ProxyGetPaymentTransactionLogGatewayStateEnumSubmitted           ProxyGetPaymentTransactionLogGatewayStateEnum = "Submitted"
	ProxyGetPaymentTransactionLogGatewayStateEnumSettled             ProxyGetPaymentTransactionLogGatewayStateEnum = "Settled"
	ProxyGetPaymentTransactionLogGatewayStateEnumNotSubmitted        ProxyGetPaymentTransactionLogGatewayStateEnum = "NotSubmitted"
	ProxyGetPaymentTransactionLogGatewayStateEnumFailedToSettle      ProxyGetPaymentTransactionLogGatewayStateEnum = "FailedToSettle"
)

func (e *ProxyGetPaymentTransactionLogGatewayStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MarkedForSubmission":
		fallthrough
	case "Submitted":
		fallthrough
	case "Settled":
		fallthrough
	case "NotSubmitted":
		fallthrough
	case "FailedToSettle":
		*e = ProxyGetPaymentTransactionLogGatewayStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyGetPaymentTransactionLogGatewayStateEnum: %s", s)
	}
}

// ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum - The type of the transaction, either making a payment, or canceling a payment.
type ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum string

const (
	ProxyGetPaymentTransactionLogGatewayTransactionTypeEnumAuthorization ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum = "Authorization"
	ProxyGetPaymentTransactionLogGatewayTransactionTypeEnumSale          ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum = "Sale"
	ProxyGetPaymentTransactionLogGatewayTransactionTypeEnumVoid          ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum = "Void"
	ProxyGetPaymentTransactionLogGatewayTransactionTypeEnumInquiry       ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum = "Inquiry"
	ProxyGetPaymentTransactionLogGatewayTransactionTypeEnumVoidAuth      ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum = "VoidAuth"
)

func (e *ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Authorization":
		fallthrough
	case "Sale":
		fallthrough
	case "Void":
		fallthrough
	case "Inquiry":
		fallthrough
	case "VoidAuth":
		*e = ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum: %s", s)
	}
}

type ProxyGetPaymentTransactionLog struct {
	// The response code returned by the payment gateway referring to the AVS international response of the payment transaction.
	//
	AVSResponseCode *string `json:"AVSResponseCode,omitempty"`
	// The ID of the batch used to send the transaction if the request was sent in a batch.
	//
	BatchID *string `json:"BatchId,omitempty"`
	// The response code returned by the payment gateway referring to the CVV international response of the payment transaction.
	//
	CVVResponseCode *string `json:"CVVResponseCode,omitempty"`
	// The name of the payment gateway used to transact the current payment transaction log.
	//
	Gateway *string `json:"Gateway,omitempty"`
	// The code returned by the payment gateway for the payment. This code is gateway-dependent.
	//
	GatewayReasonCode *string `json:"GatewayReasonCode,omitempty"`
	// The message returned by the payment gateway for the payment. This message is gateway-dependent.
	//
	GatewayReasonCodeDescription *string `json:"GatewayReasonCodeDescription,omitempty"`
	// The state of the transaction at the payment gateway.
	//
	GatewayState *ProxyGetPaymentTransactionLogGatewayStateEnum `json:"GatewayState,omitempty"`
	// The type of the transaction, either making a payment, or canceling a payment.
	//
	GatewayTransactionType *ProxyGetPaymentTransactionLogGatewayTransactionTypeEnum `json:"GatewayTransactionType,omitempty"`
	// The ID of the payment transaction log.
	//
	ID *string `json:"Id,omitempty"`
	// The ID of the payment wherein the payment transaction log was recorded.
	//
	PaymentID *string `json:"PaymentId,omitempty"`
	// The payment transaction request string sent to the payment gateway.
	//
	RequestString *string `json:"RequestString,omitempty"`
	// The payment transaction response string returned by the payment gateway.
	//
	ResponseString *string `json:"ResponseString,omitempty"`
	// The transaction date when the payment was performed.
	//
	TransactionDate *time.Time `json:"TransactionDate,omitempty"`
	// The transaction ID returned by the payment gateway. This field is used to reconcile payment transactions between the payment gateway and records in Zuora.
	//
	TransactionID *string `json:"TransactionId,omitempty"`
}
