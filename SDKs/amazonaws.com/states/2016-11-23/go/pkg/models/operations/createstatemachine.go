// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateStateMachineXAmzTargetEnum
type CreateStateMachineXAmzTargetEnum string

const (
	CreateStateMachineXAmzTargetEnumAwsStepFunctionsCreateStateMachine CreateStateMachineXAmzTargetEnum = "AWSStepFunctions.CreateStateMachine"
)

func (e CreateStateMachineXAmzTargetEnum) ToPointer() *CreateStateMachineXAmzTargetEnum {
	return &e
}

func (e *CreateStateMachineXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSStepFunctions.CreateStateMachine":
		*e = CreateStateMachineXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateStateMachineXAmzTargetEnum: %v", v)
	}
}

type CreateStateMachineRequest struct {
	CreateStateMachineInput shared.CreateStateMachineInput   `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              CreateStateMachineXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateStateMachineResponse struct {
	ContentType string
	// Success
	CreateStateMachineOutput *shared.CreateStateMachineOutput
	// InvalidArn
	InvalidArn interface{}
	// InvalidDefinition
	InvalidDefinition interface{}
	// InvalidLoggingConfiguration
	InvalidLoggingConfiguration interface{}
	// InvalidName
	InvalidName interface{}
	// InvalidTracingConfiguration
	InvalidTracingConfiguration interface{}
	// StateMachineAlreadyExists
	StateMachineAlreadyExists interface{}
	// StateMachineDeleting
	StateMachineDeleting interface{}
	// StateMachineTypeNotSupported
	StateMachineTypeNotSupported interface{}
	StatusCode                   int
	RawResponse                  *http.Response
	// StateMachineLimitExceeded
	StateMachineLimitExceeded interface{}
	// TooManyTags
	TooManyTags interface{}
}
