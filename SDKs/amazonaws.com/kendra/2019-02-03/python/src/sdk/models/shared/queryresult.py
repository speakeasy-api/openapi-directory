"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import facetresult as shared_facetresult
from ..shared import queryresultitem as shared_queryresultitem
from ..shared import spellcorrectedquery as shared_spellcorrectedquery
from ..shared import warning as shared_warning
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QueryResult:
    r"""Success"""
    
    facet_results: Optional[list[shared_facetresult.FacetResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FacetResults'), 'exclude': lambda f: f is None }})  
    query_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QueryId'), 'exclude': lambda f: f is None }})  
    result_items: Optional[list[shared_queryresultitem.QueryResultItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResultItems'), 'exclude': lambda f: f is None }})  
    spell_corrected_queries: Optional[list[shared_spellcorrectedquery.SpellCorrectedQuery]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpellCorrectedQueries'), 'exclude': lambda f: f is None }})  
    total_number_of_results: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalNumberOfResults'), 'exclude': lambda f: f is None }})  
    warnings: Optional[list[shared_warning.WarningT]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Warnings'), 'exclude': lambda f: f is None }})  
    