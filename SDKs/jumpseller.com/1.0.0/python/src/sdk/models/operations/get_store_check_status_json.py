"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import partnererror as shared_partnererror
from typing import Any, Optional


@dataclasses.dataclass
class GetStoreCheckStatusJSONRequest:
    
    auth_token: str = dataclasses.field(metadata={'query_param': { 'field_name': 'auth_token', 'style': 'form', 'explode': True }})
    r"""Partner authentication token."""  
    partner_code: str = dataclasses.field(metadata={'query_param': { 'field_name': 'partner_code', 'style': 'form', 'explode': True }})
    r"""Partner code."""  
    store_code: str = dataclasses.field(metadata={'query_param': { 'field_name': 'store_code', 'style': 'form', 'explode': True }})
    r"""Store Code"""  
    locale: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'locale', 'style': 'form', 'explode': True }})
    r"""ISO 3166-2 code of the language used in the response messages."""  
    

@dataclasses.dataclass
class GetStoreCheckStatusJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_store_check_status_json_200_application_json_one_of: Optional[Any] = dataclasses.field(default=None)
    r"""A Store status object if creation is still in progress. A new Partner Store object when creation is done."""  
    partner_error: Optional[shared_partnererror.PartnerError] = dataclasses.field(default=None)
    r"""Bad Request."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    