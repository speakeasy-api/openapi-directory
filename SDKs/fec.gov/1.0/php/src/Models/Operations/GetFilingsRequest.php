<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetFilingsRequest
{
    /**
     * Amendent types:
     * 
     *     -N   new
     *     -A   amendment
     *     -T   terminated
     *     -C   consolidated
     *     -M   multi-candidate
     *     -S   secondary
     * 
     * NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetFilingsAmendmentIndicatorEnum> $amendmentIndicator
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=amendment_indicator')]
    public ?array $amendmentIndicator = null;
    
    /**
     * 
     * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
     * 
     * 
     * @var string $apiKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=api_key')]
    public string $apiKey;
    
    /**
     * 
     * Unique identifier for the electronic or paper report. This number is used to construct
     * PDF URLs to the original document.
     * 
     * 
     * @var ?array<string> $beginningImageNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=beginning_image_number')]
    public ?array $beginningImageNumber = null;
    
    /**
     * 
     * A unique identifier assigned to each candidate registered with the FEC.
     * If a person runs for several offices, that person will have separate candidate IDs for each office.
     * 
     * 
     * @var ?array<string> $candidateId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=candidate_id')]
    public ?array $candidateId = null;
    
    /**
     * 
     * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
     * 
     * 
     * @var ?array<string> $committeeId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_id')]
    public ?array $committeeId = null;
    
    /**
     * The one-letter type code of the organization:
     * 
     *         - C communication cost
     *         - D delegate
     *         - E electioneering communication
     *         - H House
     *         - I independent expenditure filer (not a committee)
     *         - N PAC - nonqualified
     *         - O independent expenditure-only (super PACs)
     *         - P presidential
     *         - Q PAC - qualified
     *         - S Senate
     *         - U single candidate independent expenditure
     *         - V PAC with non-contribution account, nonqualified
     *         - W PAC with non-contribution account, qualified
     *         - X party, nonqualified
     *         - Y party, qualified
     *         - Z national party non-federal account
     * 
     * 
     * @var ?string $committeeType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_type')]
    public ?string $committeeType = null;
    
    /**
     * 
     * Filter records to only those that were applicable to a given
     * two-year period.The cycle begins with an odd year and is named
     * for its ending, even year.
     * 
     * 
     * @var ?array<int> $cycle
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=cycle')]
    public ?array $cycle = null;
    
    /**
     * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
     * 
     * @var ?array<string> $district
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=district')]
    public ?array $district = null;
    
    /**
     * 
     * The type of document for documents other than reports:
     *     - 2 24 Hour Contribution Notice
     *     - 4 48 Hour Contribution Notice
     *     - A Debt Settlement Statement
     *     - B Acknowledgment of Receipt of Debt Settlement Statement
     *     - C RFAI: Debt Settlement First Notice
     *     - D Commission Debt Settlement Review
     *     - E Commission Response TO Debt Settlement Request
     *     - F Administrative Termination
     *     - G Debt Settlement Plan Amendment
     *     - H Disavowal Notice
     *     - I Disavowal Response
     *     - J Conduit Report
     *     - K Termination Approval
     *     - L Repeat Non-Filer Notice
     *     - M Filing Frequency Change Notice
     *     - N Paper Amendment to Electronic Report
     *     - O Acknowledgment of Filing Frequency Change
     *     - S RFAI: Debt Settlement Second
     *     - T Miscellaneous Report TO FEC
     *     - V Repeat Violation Notice (441A OR 441B)
     *     - P Notice of Paper Filing
     *     - R F3L Filing Frequency Change Notice
     *     - Q Acknowledgment of F3L Filing Frequency Change
     *     - U Unregistered Committee Notice
     * 
     * 
     * @var ?array<string> $documentType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=document_type')]
    public ?array $documentType = null;
    
    /**
     * Filing ID number
     * 
     * @var ?array<int> $fileNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=file_number')]
    public ?array $fileNumber = null;
    
    /**
     * The method used to file with the FEC, either electronic or on paper.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetFilingsFilerTypeEnum $filerType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filer_type')]
    public ?GetFilingsFilerTypeEnum $filerType = null;
    
    /**
     * 
     * The forms filed are categorized based on the nature of the filing:
     *     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13
     *     - NOTICE F5, F24, F6, F9, F10, F11
     *     - STATEMENT F1, F2
     *     - OTHER F1M, F8, F99, F12, FRQ
     * 
     * 
     * @var ?array<string> $formCategory
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=form_category')]
    public ?array $formCategory = null;
    
    /**
     * The form where the underlying data comes from, for example, Form 1 would appear as F1:
     * 
     *     - F1   Statement of Organization
     *     - F1M  Notification of Multicandidate Status
     *     - F2   Statement of Candidacy
     *     - F3   Report of Receipts and Disbursements for an Authorized Committee
     *     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President
     *     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs
     *     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee
     *     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention
     *     - F5   Report of Independent Expenditures Made and Contributions Received
     *     - F6   48 Hour Notice of Contributions/Loans Received
     *     - F7   Report of Communication Costs by Corporations and Membership Organizations
     *     - F8   Debt Settlement Plan
     *     - F9   24 Hour Notice of Disbursements for Electioneering Communications
     *     - F13  Report of Donations Accepted for Inaugural Committee
     *     - F99  Miscellaneous Text
     *     - FRQ  Request for Additional Information
     * 
     * 
     * @var ?array<string> $formType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=form_type')]
    public ?array $formType = null;
    
    /**
     * 
     * False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.
     * 
     * 
     * @var ?bool $isAmended
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_amended')]
    public ?bool $isAmended = null;
    
    /**
     * 
     * Selects all filings received before this date(MM/DD/YYYY or YYYY-MM-DD)
     * 
     * 
     * @var ?\DateTime $maxReceiptDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_receipt_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $maxReceiptDate = null;
    
    /**
     * 
     * Selects all filings received after this date(MM/DD/YYYY or YYYY-MM-DD)
     * 
     * 
     * @var ?\DateTime $minReceiptDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_receipt_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $minReceiptDate = null;
    
    /**
     * 
     * Report is either new or is the most-recently filed amendment
     * 
     * 
     * @var ?bool $mostRecent
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=most_recent')]
    public ?bool $mostRecent = null;
    
    /**
     * Federal office candidate runs for: H, S or P
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetFilingsOfficeEnum> $office
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=office')]
    public ?array $office = null;
    
    /**
     * For paginating through results, starting at page 1
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
     * 
     * @var ?array<string> $party
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=party')]
    public ?array $party = null;
    
    /**
     * The number of results returned per page. Defaults to 20.
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * 
     * Primary, general or special election indicator.
     * 
     * 
     * @var ?array<string> $primaryGeneralIndicator
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=primary_general_indicator')]
    public ?array $primaryGeneralIndicator = null;
    
    /**
     * 
     * Keyword search for filer name or ID
     * 
     * 
     * @var ?array<string> $qFiler
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q_filer')]
    public ?array $qFiler = null;
    
    /**
     * Name of report where the underlying data comes from:
     * 
     *     - 10D Pre-Election
     *     - 10G Pre-General
     *     - 10P Pre-Primary
     *     - 10R Pre-Run-Off
     *     - 10S Pre-Special
     *     - 12C Pre-Convention
     *     - 12G Pre-General
     *     - 12P Pre-Primary
     *     - 12R Pre-Run-Off
     *     - 12S Pre-Special
     *     - 30D Post-Election
     *     - 30G Post-General
     *     - 30P Post-Primary
     *     - 30R Post-Run-Off
     *     - 30S Post-Special
     *     - 60D Post-Convention
     *     - M1  January Monthly
     *     - M10 October Monthly
     *     - M11 November Monthly
     *     - M12 December Monthly
     *     - M2  February Monthly
     *     - M3  March Monthly
     *     - M4  April Monthly
     *     - M5  May Monthly
     *     - M6  June Monthly
     *     - M7  July Monthly
     *     - M8  August Monthly
     *     - M9  September Monthly
     *     - MY  Mid-Year Report
     *     - Q1  April Quarterly
     *     - Q2  July Quarterly
     *     - Q3  October Quarterly
     *     - TER Termination Report
     *     - YE  Year-End
     *     - ADJ COMP ADJUST AMEND
     *     - CA  COMPREHENSIVE AMEND
     *     - 90S Post Inaugural Supplement
     *     - 90D Post Inaugural
     *     - 48  48 Hour Notification
     *     - 24  24 Hour Notification
     *     - M7S July Monthly/Semi-Annual
     *     - MSA Monthly Semi-Annual (MY)
     *     - MYS Monthly Year End/Semi-Annual
     *     - Q2S July Quarterly/Semi-Annual
     *     - QSA Quarterly Semi-Annual (MY)
     *     - QYS Quarterly Year End/Semi-Annual
     *     - QYE Quarterly Semi-Annual (YE)
     *     - QMS Quarterly Mid-Year/ Semi-Annual
     *     - MSY Monthly Semi-Annual (YE)
     * 
     * 
     * @var ?array<string> $reportType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=report_type')]
    public ?array $reportType = null;
    
    /**
     * 
     * Forms with coverage date - 
     *     year from the coverage ending date.
     * Forms without coverage date - 
     *     year from the receipt date.
     * 
     * 
     * @var ?array<int> $reportYear
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=report_year')]
    public ?array $reportYear = null;
    
    /**
     * Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:
     * 
     *     - 1 Statement of Organization
     *     - 2 Report of Receipts and Expenditures (Form 3 and 3X)
     *     - 3 Second Notice - Reports
     *     - 4 Request for Additional Information
     *     - 5 Informational - Reports
     *     - 6 Second Notice - Statement of Organization
     *     - 7 Failure to File
     *     - 8 From Public Disclosure
     *     - 9 From Multi Candidate Status
     * 
     * 
     * @var ?array<string> $requestType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=request_type')]
    public ?array $requestType = null;
    
    /**
     * 
     * Provide a field to sort by. Use `-` for descending order. ex: `-case_no`
     * 
     * 
     * @var ?array<string> $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?array $sort = null;
    
    /**
     * Hide null values on sorted column(s).
     * 
     * @var ?bool $sortHideNull
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_hide_null')]
    public ?bool $sortHideNull = null;
    
    /**
     * Toggle that filters out all rows having sort column that is non-null
     * 
     * @var ?bool $sortNullOnly
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_null_only')]
    public ?bool $sortNullOnly = null;
    
    /**
     * Toggle that sorts null values last
     * 
     * @var ?bool $sortNullsLast
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_nulls_last')]
    public ?bool $sortNullsLast = null;
    
    /**
     * US state or territory where a candidate runs for office
     * 
     * @var ?array<string> $state
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state')]
    public ?array $state = null;
    
	public function __construct()
	{
		$this->amendmentIndicator = null;
		$this->apiKey = "";
		$this->beginningImageNumber = null;
		$this->candidateId = null;
		$this->committeeId = null;
		$this->committeeType = null;
		$this->cycle = null;
		$this->district = null;
		$this->documentType = null;
		$this->fileNumber = null;
		$this->filerType = null;
		$this->formCategory = null;
		$this->formType = null;
		$this->isAmended = null;
		$this->maxReceiptDate = null;
		$this->minReceiptDate = null;
		$this->mostRecent = null;
		$this->office = null;
		$this->page = null;
		$this->party = null;
		$this->perPage = null;
		$this->primaryGeneralIndicator = null;
		$this->qFiler = null;
		$this->reportType = null;
		$this->reportYear = null;
		$this->requestType = null;
		$this->sort = null;
		$this->sortHideNull = null;
		$this->sortNullOnly = null;
		$this->sortNullsLast = null;
		$this->state = null;
	}
}
