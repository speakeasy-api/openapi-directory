"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class ManageEventActionEnum(str, Enum):
    CREATE = 'create'
    FIRE = 'fire'
    CHANGE = 'change'
    DELETE = 'delete'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManageEvent:
    r"""Collaborator user id and permission type"""
    
    action: Optional[ManageEventActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action'), 'exclude': lambda f: f is None }})  
    action_params: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action_params'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    