// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StatefulRuleProtocolEnum string

const (
	StatefulRuleProtocolEnumIP     StatefulRuleProtocolEnum = "IP"
	StatefulRuleProtocolEnumTCP    StatefulRuleProtocolEnum = "TCP"
	StatefulRuleProtocolEnumUDP    StatefulRuleProtocolEnum = "UDP"
	StatefulRuleProtocolEnumIcmp   StatefulRuleProtocolEnum = "ICMP"
	StatefulRuleProtocolEnumHTTP   StatefulRuleProtocolEnum = "HTTP"
	StatefulRuleProtocolEnumFtp    StatefulRuleProtocolEnum = "FTP"
	StatefulRuleProtocolEnumTLS    StatefulRuleProtocolEnum = "TLS"
	StatefulRuleProtocolEnumSmb    StatefulRuleProtocolEnum = "SMB"
	StatefulRuleProtocolEnumDNS    StatefulRuleProtocolEnum = "DNS"
	StatefulRuleProtocolEnumDcerpc StatefulRuleProtocolEnum = "DCERPC"
	StatefulRuleProtocolEnumSSH    StatefulRuleProtocolEnum = "SSH"
	StatefulRuleProtocolEnumSMTP   StatefulRuleProtocolEnum = "SMTP"
	StatefulRuleProtocolEnumImap   StatefulRuleProtocolEnum = "IMAP"
	StatefulRuleProtocolEnumMsn    StatefulRuleProtocolEnum = "MSN"
	StatefulRuleProtocolEnumKrb5   StatefulRuleProtocolEnum = "KRB5"
	StatefulRuleProtocolEnumIkev2  StatefulRuleProtocolEnum = "IKEV2"
	StatefulRuleProtocolEnumTftp   StatefulRuleProtocolEnum = "TFTP"
	StatefulRuleProtocolEnumNtp    StatefulRuleProtocolEnum = "NTP"
	StatefulRuleProtocolEnumDhcp   StatefulRuleProtocolEnum = "DHCP"
)

func (e StatefulRuleProtocolEnum) ToPointer() *StatefulRuleProtocolEnum {
	return &e
}

func (e *StatefulRuleProtocolEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IP":
		fallthrough
	case "TCP":
		fallthrough
	case "UDP":
		fallthrough
	case "ICMP":
		fallthrough
	case "HTTP":
		fallthrough
	case "FTP":
		fallthrough
	case "TLS":
		fallthrough
	case "SMB":
		fallthrough
	case "DNS":
		fallthrough
	case "DCERPC":
		fallthrough
	case "SSH":
		fallthrough
	case "SMTP":
		fallthrough
	case "IMAP":
		fallthrough
	case "MSN":
		fallthrough
	case "KRB5":
		fallthrough
	case "IKEV2":
		fallthrough
	case "TFTP":
		fallthrough
	case "NTP":
		fallthrough
	case "DHCP":
		*e = StatefulRuleProtocolEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatefulRuleProtocolEnum: %v", v)
	}
}
