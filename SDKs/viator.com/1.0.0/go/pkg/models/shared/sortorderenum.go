// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SortOrderEnum - **sort order** in which to return the results that is *one of*:
//
//   - `'TOP_SELLERS'`: the top sellers
//   - `'REVIEW_AVG_RATING_A'`: ascending by average traveler rating (low -&gt; high)
//   - `'REVIEW_AVG_RATING_D'`: descending by average traveler rating (high -&gt; low)
//   - `'PRICE_FROM_A'`: ascending by price (low -&gt; high)
//   - `'PRICE_FROM_D'`: descending by price (high -&gt; low)
type SortOrderEnum string

const (
	SortOrderEnumTopSellers       SortOrderEnum = "TOP_SELLERS"
	SortOrderEnumReviewAvgRatingA SortOrderEnum = "REVIEW_AVG_RATING_A"
	SortOrderEnumReviewAvgRatingD SortOrderEnum = "REVIEW_AVG_RATING_D"
	SortOrderEnumPriceFromA       SortOrderEnum = "PRICE_FROM_A"
	SortOrderEnumPriceFromD       SortOrderEnum = "PRICE_FROM_D"
)

func (e *SortOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TOP_SELLERS":
		fallthrough
	case "REVIEW_AVG_RATING_A":
		fallthrough
	case "REVIEW_AVG_RATING_D":
		fallthrough
	case "PRICE_FROM_A":
		fallthrough
	case "PRICE_FROM_D":
		*e = SortOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SortOrderEnum: %s", s)
	}
}
