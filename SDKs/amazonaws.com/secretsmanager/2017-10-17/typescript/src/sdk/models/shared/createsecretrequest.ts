/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ReplicaRegionType } from "./replicaregiontype";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateSecretRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ReplicaRegionType })
  @Expose({ name: "AddReplicaRegions" })
  @Type(() => ReplicaRegionType)
  addReplicaRegions?: ReplicaRegionType[];

  @SpeakeasyMetadata()
  @Expose({ name: "ClientRequestToken" })
  clientRequestToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ForceOverwriteReplicaSecret" })
  forceOverwriteReplicaSecret?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecretBinary" })
  secretBinary?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecretString" })
  secretString?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
