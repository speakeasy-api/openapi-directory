/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CompressionEnumEnum } from "./compressionenumenum";
import { EncryptionAlgEnum } from "./encryptionalgenum";
import { MdnResponseEnum } from "./mdnresponseenum";
import { MdnSigningAlgEnum } from "./mdnsigningalgenum";
import { SigningAlgEnum } from "./signingalgenum";
import { Expose } from "class-transformer";

/**
 * Contains the details for a connector object. The connector object is used for AS2 outbound processes, to connect the Transfer Family customer with the trading partner.
 */
export class As2ConnectorConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Compression" })
  compression?: CompressionEnumEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EncryptionAlgorithm" })
  encryptionAlgorithm?: EncryptionAlgEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LocalProfileId" })
  localProfileId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MdnResponse" })
  mdnResponse?: MdnResponseEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MdnSigningAlgorithm" })
  mdnSigningAlgorithm?: MdnSigningAlgEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MessageSubject" })
  messageSubject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PartnerProfileId" })
  partnerProfileId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SigningAlgorithm" })
  signingAlgorithm?: SigningAlgEnum;
}
