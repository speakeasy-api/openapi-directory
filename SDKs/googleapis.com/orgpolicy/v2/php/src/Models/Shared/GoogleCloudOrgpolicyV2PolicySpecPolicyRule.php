<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudOrgpolicyV2PolicySpecPolicyRule - A rule used to express this policy.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudOrgpolicyV2PolicySpecPolicyRule
{
    /**
     * Setting this to true means that all values are allowed. This field can be set only in policies for list constraints.
     * 
     * @var ?bool $allowAll
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowAll')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowAll = null;
    
    /**
     * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleTypeExpr $condition
     */
	#[\JMS\Serializer\Annotation\SerializedName('condition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleTypeExpr')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleTypeExpr $condition = null;
    
    /**
     * Setting this to true means that all values are denied. This field can be set only in policies for list constraints.
     * 
     * @var ?bool $denyAll
     */
	#[\JMS\Serializer\Annotation\SerializedName('denyAll')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $denyAll = null;
    
    /**
     * If `true`, then the policy is enforced. If `false`, then any configuration is acceptable. This field can be set only in policies for boolean constraints.
     * 
     * @var ?bool $enforce
     */
	#[\JMS\Serializer\Annotation\SerializedName('enforce')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enforce = null;
    
    /**
     * A message that holds specific allowed and denied values. This message can define specific values and subtrees of the Resource Manager resource hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or denied. This is achieved by using the `under:` and optional `is:` prefixes. The `under:` prefix is used to denote resource subtree values. The `is:` prefix is used to denote specific values, and is required only if the value contains a ":". Values prefixed with "is:" are treated the same as values with no prefix. Ancestry subtrees must be in one of the following formats: - "projects/", e.g. "projects/tokyo-rain-123" - "folders/", e.g. "folders/1234" - "organizations/", e.g. "organizations/1234" The `supports_under` field of the associated `Constraint` defines whether ancestry prefixes can be used.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues $values
     */
	#[\JMS\Serializer\Annotation\SerializedName('values')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues $values = null;
    
	public function __construct()
	{
		$this->allowAll = null;
		$this->condition = null;
		$this->denyAll = null;
		$this->enforce = null;
		$this->values = null;
	}
}
