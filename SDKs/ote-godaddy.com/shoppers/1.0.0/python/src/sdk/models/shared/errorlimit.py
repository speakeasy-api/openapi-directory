"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import errorfield as shared_errorfield
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ErrorLimit:
    r"""Too many requests received within interval"""
    
    code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})
    r"""Short identifier for the error, suitable for indicating the specific error within client code"""  
    retry_after_sec: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retryAfterSec') }})
    r"""Number of seconds to wait before attempting a similar request"""  
    fields_: Optional[list[shared_errorfield.ErrorField]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})
    r"""List of the specific fields, and the errors found with their contents"""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""Human-readable, English description of the error"""  
    