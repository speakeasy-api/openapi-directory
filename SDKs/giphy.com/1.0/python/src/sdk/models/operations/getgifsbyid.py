"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import gif as shared_gif
from ..shared import meta as shared_meta
from ..shared import pagination as shared_pagination
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetGifsByIDRequest:
    
    ids: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ids', 'style': 'form', 'explode': True }})
    r"""Filters results by specified GIF IDs, separated by commas."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetGifsByID200ApplicationJSON:
    
    data: Optional[list[shared_gif.Gif]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data'), 'exclude': lambda f: f is None }})  
    meta: Optional[shared_meta.Meta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meta'), 'exclude': lambda f: f is None }})
    r"""The Meta Object contains basic information regarding the request, whether it was successful, and the response given by the API.  Check `responses` to see a description of types of response codes the API might give you under different cirumstances."""  
    pagination: Optional[shared_pagination.Pagination] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pagination'), 'exclude': lambda f: f is None }})
    r"""The Pagination Object contains information relating to the number of total results available as well as the number of results fetched and their relative positions."""  
    

@dataclasses.dataclass
class GetGifsByIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_gifs_by_id_200_application_json_object: Optional[GetGifsByID200ApplicationJSON] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    