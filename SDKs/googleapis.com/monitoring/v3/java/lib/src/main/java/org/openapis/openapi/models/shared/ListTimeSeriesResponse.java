/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ListTimeSeriesResponse - The ListTimeSeries response.
 */
public class ListTimeSeriesResponse {
    /**
     * Query execution errors that may have caused the time series data returned to be incomplete.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionErrors")
    public Status[] executionErrors;
    public ListTimeSeriesResponse withExecutionErrors(Status[] executionErrors) {
        this.executionErrors = executionErrors;
        return this;
    }
    
    /**
     * If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextPageToken")
    public String nextPageToken;
    public ListTimeSeriesResponse withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * One or more time series that match the filter included in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeSeries")
    public TimeSeries[] timeSeries;
    public ListTimeSeriesResponse withTimeSeries(TimeSeries[] timeSeries) {
        this.timeSeries = timeSeries;
        return this;
    }
    
    /**
     * The unit in which all time_series point values are reported. unit follows the UCUM format for units as seen in https://unitsofmeasure.org/ucum.html. If different time_series have different units (for example, because they come from different metric types, or a unit is absent), then unit will be "{not_a_unit}".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit")
    public String unit;
    public ListTimeSeriesResponse withUnit(String unit) {
        this.unit = unit;
        return this;
    }
    
}
