"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import amount as shared_amount
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransferFundsRequest:
    
    amount: shared_amount.Amount = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})  
    destination_account_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationAccountCode') }})
    r"""The code of the account to which the funds are to be credited.
    >The state of the Account Holder of this account must be Active.
    """  
    source_account_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceAccountCode') }})
    r"""The code of the account from which the funds are to be debited.
    >The state of the Account Holder of this account must be Active and allow payouts.
    """  
    transfer_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferCode') }})
    r"""The code related to the type of transfer being performed.
    >The permitted codes differ for each platform account and are defined in their service level agreement.
    """  
    merchant_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantReference'), 'exclude': lambda f: f is None }})
    r"""A value that can be supplied at the discretion of the executing user in order to link multiple transactions to one another."""  
    