<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RestoreMssqlDbJobConfig - Restore configuration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RestoreMssqlDbJobConfig
{
    /**
     * A Boolean value that determines the recovery option to use during database restore. When this value is 'true', the database is restored using the RECOVERY option and is fully functional at the end of the restore operation. When this value is 'false', the database is restored using the NORECOVERY option and remains in recovering mode at the end of the restore operation.
     * 
     * @var ?bool $finishRecovery
     */
	#[\JMS\Serializer\Annotation\SerializedName('finishRecovery')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $finishRecovery = null;
    
    /**
     * Maximum number of parallel data streams that can be used to copy data to the target system.
     * 
     * @var ?int $maxDataStreams
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxDataStreams')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxDataStreams = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('recoveryPoint')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MssqlRecoveryPoint')]
    public MssqlRecoveryPoint $recoveryPoint;
    
	public function __construct()
	{
		$this->finishRecovery = null;
		$this->maxDataStreams = null;
		$this->recoveryPoint = new \OpenAPI\OpenAPI\Models\Shared\MssqlRecoveryPoint();
	}
}
