/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class AppsListTestersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class AppsListTestersRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum AppsListTestersDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class AppsListTestersDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: AppsListTestersDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class AppsListTestersDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => AppsListTestersDefaultApplicationJSONError)
  error: AppsListTestersDefaultApplicationJSONError;
}

/**
 * The creation origin of this user
 */
export enum AppsListTesters200ApplicationJSONOriginEnum {
  Appcenter = "appcenter",
  Hockeyapp = "hockeyapp",
  Codepush = "codepush",
}

export enum AppsListTesters200ApplicationJSONPermissionsEnum {
  Manager = "manager",
  Developer = "developer",
  Viewer = "viewer",
  Tester = "tester",
}

export class AppsListTesters200ApplicationJSON extends SpeakeasyBase {
  /**
   * The avatar URL of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_url" })
  avatarUrl?: string;

  /**
   * User is required to send an old password in order to change the password.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "can_change_password" })
  canChangePassword?: boolean;

  /**
   * The full name of the user. Might for example be first and last name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The email address of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * The unique id (UUID) of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The unique name that is used to identify the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The creation origin of this user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin: AppsListTesters200ApplicationJSONOriginEnum;

  /**
   * The permissions the user has for the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  permissions?: AppsListTesters200ApplicationJSONPermissionsEnum[];
}

export class AppsListTestersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: AppsListTesters200ApplicationJSON })
  appsListTesters200ApplicationJSONObjects?: AppsListTesters200ApplicationJSON[];

  /**
   * Error
   */
  @SpeakeasyMetadata()
  appsListTestersDefaultApplicationJSONObject?: AppsListTestersDefaultApplicationJSON;
}
