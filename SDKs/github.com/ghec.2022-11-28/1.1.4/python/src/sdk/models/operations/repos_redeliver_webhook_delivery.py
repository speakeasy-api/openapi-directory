"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import scim_error as shared_scim_error
from ..shared import validation_error as shared_validation_error
from typing import Any, Optional


@dataclasses.dataclass
class ReposRedeliverWebhookDeliveryRequest:
    
    delivery_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'delivery_id', 'style': 'simple', 'explode': False }})  
    hook_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'hook_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the hook."""  
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})
    r"""The account owner of the repository. The name is not case sensitive."""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})
    r"""The name of the repository. The name is not case sensitive."""  
    

@dataclasses.dataclass
class ReposRedeliverWebhookDeliveryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Bad Request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    repos_redeliver_webhook_delivery_202_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Accepted"""  
    scim_error: Optional[shared_scim_error.ScimError] = dataclasses.field(default=None)
    r"""Bad Request"""  
    validation_error: Optional[shared_validation_error.ValidationError] = dataclasses.field(default=None)
    r"""Validation failed, or the endpoint has been spammed."""  
    