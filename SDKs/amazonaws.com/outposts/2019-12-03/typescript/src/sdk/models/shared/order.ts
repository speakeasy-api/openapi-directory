/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LineItem } from "./lineitem";
import { OrderStatusEnum } from "./orderstatusenum";
import { OrderTypeEnum } from "./ordertypeenum";
import { PaymentOptionEnum } from "./paymentoptionenum";
import { PaymentTermEnum } from "./paymenttermenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about an order.
 */
export class Order extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: LineItem })
  @Expose({ name: "LineItems" })
  @Type(() => LineItem)
  lineItems?: LineItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "OrderFulfilledDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  orderFulfilledDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "OrderId" })
  orderId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OrderSubmissionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  orderSubmissionDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "OrderType" })
  orderType?: OrderTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "OutpostId" })
  outpostId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PaymentOption" })
  paymentOption?: PaymentOptionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PaymentTerm" })
  paymentTerm?: PaymentTermEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: OrderStatusEnum;
}
