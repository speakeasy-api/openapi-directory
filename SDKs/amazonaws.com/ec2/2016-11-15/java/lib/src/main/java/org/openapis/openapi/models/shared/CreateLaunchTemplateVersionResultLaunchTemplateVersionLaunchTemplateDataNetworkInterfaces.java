/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces - Describes a network interface.
 */
public class CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces {
    
    public Boolean associateCarrierIpAddress;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withAssociateCarrierIpAddress(Boolean associateCarrierIpAddress) {
        this.associateCarrierIpAddress = associateCarrierIpAddress;
        return this;
    }
    
    
    public Boolean associatePublicIpAddress;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withAssociatePublicIpAddress(Boolean associatePublicIpAddress) {
        this.associatePublicIpAddress = associatePublicIpAddress;
        return this;
    }
    
    
    public Boolean deleteOnTermination;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withDeleteOnTermination(Boolean deleteOnTermination) {
        this.deleteOnTermination = deleteOnTermination;
        return this;
    }
    
    
    public String description;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withDescription(String description) {
        this.description = description;
        return this;
    }
    
    
    public Long deviceIndex;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withDeviceIndex(Long deviceIndex) {
        this.deviceIndex = deviceIndex;
        return this;
    }
    
    
    public String[] groups;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withGroups(String[] groups) {
        this.groups = groups;
        return this;
    }
    
    
    public String interfaceType;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withInterfaceType(String interfaceType) {
        this.interfaceType = interfaceType;
        return this;
    }
    
    
    public Long ipv4PrefixCount;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withIpv4PrefixCount(Long ipv4PrefixCount) {
        this.ipv4PrefixCount = ipv4PrefixCount;
        return this;
    }
    
    
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfacesIpv4Prefixes[] ipv4Prefixes;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withIpv4Prefixes(CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfacesIpv4Prefixes[] ipv4Prefixes) {
        this.ipv4Prefixes = ipv4Prefixes;
        return this;
    }
    
    
    public Long ipv6AddressCount;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withIpv6AddressCount(Long ipv6AddressCount) {
        this.ipv6AddressCount = ipv6AddressCount;
        return this;
    }
    
    
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfacesIpv6Addresses[] ipv6Addresses;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withIpv6Addresses(CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfacesIpv6Addresses[] ipv6Addresses) {
        this.ipv6Addresses = ipv6Addresses;
        return this;
    }
    
    
    public Long ipv6PrefixCount;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withIpv6PrefixCount(Long ipv6PrefixCount) {
        this.ipv6PrefixCount = ipv6PrefixCount;
        return this;
    }
    
    
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfacesIpv6Prefixes[] ipv6Prefixes;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withIpv6Prefixes(CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfacesIpv6Prefixes[] ipv6Prefixes) {
        this.ipv6Prefixes = ipv6Prefixes;
        return this;
    }
    
    
    public Long networkCardIndex;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withNetworkCardIndex(Long networkCardIndex) {
        this.networkCardIndex = networkCardIndex;
        return this;
    }
    
    
    public String networkInterfaceId;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withNetworkInterfaceId(String networkInterfaceId) {
        this.networkInterfaceId = networkInterfaceId;
        return this;
    }
    
    
    public String privateIpAddress;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withPrivateIpAddress(String privateIpAddress) {
        this.privateIpAddress = privateIpAddress;
        return this;
    }
    
    
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfacesPrivateIpAddresses[] privateIpAddresses;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withPrivateIpAddresses(CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfacesPrivateIpAddresses[] privateIpAddresses) {
        this.privateIpAddresses = privateIpAddresses;
        return this;
    }
    
    
    public Long secondaryPrivateIpAddressCount;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withSecondaryPrivateIpAddressCount(Long secondaryPrivateIpAddressCount) {
        this.secondaryPrivateIpAddressCount = secondaryPrivateIpAddressCount;
        return this;
    }
    
    
    public String subnetId;
    public CreateLaunchTemplateVersionResultLaunchTemplateVersionLaunchTemplateDataNetworkInterfaces withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }
    
}
