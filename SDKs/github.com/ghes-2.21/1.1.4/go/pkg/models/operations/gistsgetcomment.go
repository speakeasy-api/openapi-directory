// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GistsGetCommentRequest struct {
	// comment_id parameter
	CommentID int64 `pathParam:"style=simple,explode=false,name=comment_id"`
	// gist_id parameter
	GistID string `pathParam:"style=simple,explode=false,name=gist_id"`
}

type GistsGetComment403ApplicationJSONBlock struct {
	CreatedAt *string `json:"created_at,omitempty"`
	HTMLURL   *string `json:"html_url,omitempty"`
	Reason    *string `json:"reason,omitempty"`
}

// GistsGetComment403ApplicationJSON - Forbidden Gist
type GistsGetComment403ApplicationJSON struct {
	Block            *GistsGetComment403ApplicationJSONBlock `json:"block,omitempty"`
	DocumentationURL *string                                 `json:"documentation_url,omitempty"`
	Message          *string                                 `json:"message,omitempty"`
}

type GistsGetCommentResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	GistComment *shared.GistComment
	// Forbidden Gist
	GistsGetComment403ApplicationJSONObject *GistsGetComment403ApplicationJSON
}
