// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// MigrationsStartImportRequestBodyVcsEnum - The originating VCS type. Without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.
type MigrationsStartImportRequestBodyVcsEnum string

const (
	MigrationsStartImportRequestBodyVcsEnumSubversion MigrationsStartImportRequestBodyVcsEnum = "subversion"
	MigrationsStartImportRequestBodyVcsEnumGit        MigrationsStartImportRequestBodyVcsEnum = "git"
	MigrationsStartImportRequestBodyVcsEnumMercurial  MigrationsStartImportRequestBodyVcsEnum = "mercurial"
	MigrationsStartImportRequestBodyVcsEnumTfvc       MigrationsStartImportRequestBodyVcsEnum = "tfvc"
)

func (e *MigrationsStartImportRequestBodyVcsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "subversion":
		fallthrough
	case "git":
		fallthrough
	case "mercurial":
		fallthrough
	case "tfvc":
		*e = MigrationsStartImportRequestBodyVcsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MigrationsStartImportRequestBodyVcsEnum: %s", s)
	}
}

type MigrationsStartImportRequestBody struct {
	// For a tfvc import, the name of the project that is being imported.
	TfvcProject *string `json:"tfvc_project,omitempty"`
	// The originating VCS type. Without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.
	Vcs *MigrationsStartImportRequestBodyVcsEnum `json:"vcs,omitempty"`
	// If authentication is required, the password to provide to `vcs_url`.
	VcsPassword *string `json:"vcs_password,omitempty"`
	// The URL of the originating repository.
	VcsURL string `json:"vcs_url"`
	// If authentication is required, the username to provide to `vcs_url`.
	VcsUsername *string `json:"vcs_username,omitempty"`
}

type MigrationsStartImportRequest struct {
	RequestBody MigrationsStartImportRequestBody `request:"mediaType=application/json"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type MigrationsStartImportResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	Import *shared.Import
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
