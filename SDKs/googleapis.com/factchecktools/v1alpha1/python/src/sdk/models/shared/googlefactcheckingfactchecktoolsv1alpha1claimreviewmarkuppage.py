"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlefactcheckingfactchecktoolsv1alpha1claimreviewauthor as shared_googlefactcheckingfactchecktoolsv1alpha1claimreviewauthor
from ..shared import googlefactcheckingfactchecktoolsv1alpha1claimreviewmarkup as shared_googlefactcheckingfactchecktoolsv1alpha1claimreviewmarkup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage:
    r"""Holds one or more instances of `ClaimReview` markup for a webpage."""
    
    claim_review_author: Optional[shared_googlefactcheckingfactchecktoolsv1alpha1claimreviewauthor.GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('claimReviewAuthor'), 'exclude': lambda f: f is None }})
    r"""Information about the claim review author."""  
    claim_review_markups: Optional[list[shared_googlefactcheckingfactchecktoolsv1alpha1claimreviewmarkup.GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('claimReviewMarkups'), 'exclude': lambda f: f is None }})
    r"""A list of individual claim reviews for this page. Each item in the list corresponds to one `ClaimReview` element."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of this `ClaimReview` markup page resource, in the form of `pages/{page_id}`. Except for update requests, this field is output-only and should not be set by the user."""  
    page_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageUrl'), 'exclude': lambda f: f is None }})
    r"""The URL of the page associated with this `ClaimReview` markup. While every individual `ClaimReview` has its own URL field, semantically this is a page-level field, and each `ClaimReview` on this page will use this value unless individually overridden. Corresponds to `ClaimReview.url`"""  
    publish_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publishDate'), 'exclude': lambda f: f is None }})
    r"""The date when the fact check was published. Similar to the URL, semantically this is a page-level field, and each `ClaimReview` on this page will contain the same value. Corresponds to `ClaimReview.datePublished`"""  
    version_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionId'), 'exclude': lambda f: f is None }})
    r"""The version ID for this markup. Except for update requests, this field is output-only and should not be set by the user."""  
    