// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetConversationMessagesPathParams struct {
	// The ID of the conversation to return messages from.
	ConversationID string `pathParam:"style=simple,explode=false,name=conversation_id"`
}

type GetConversationMessagesQueryParams struct {
	// Client device pixel ratio used to determine thumbnail size (default 1.0).
	DevicePixelRatio *float64 `queryParam:"style=form,explode=true,name=device_pixel_ratio"`
	// If set to 1, the conversation will be returned along with the messages.
	IncludeConversation *int64 `queryParam:"style=form,explode=true,name=include_conversation"`
	// The page of messages to return.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of messages to return per page (must be >= 1 and <= 30).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
}

type GetConversationMessagesRequest struct {
	PathParams  GetConversationMessagesPathParams
	QueryParams GetConversationMessagesQueryParams
}

// GetConversationMessages200ApplicationJSON - The messages and page data.  The conversation data is optional and is only returned if the include_conversation parameter is set.
type GetConversationMessages200ApplicationJSON struct {
	// A conversation between the current user and another user.
	Conversation *shared.Conversation `json:"conversation,omitempty"`
	Messages     []shared.Message     `json:"messages,omitempty"`
	Page         *int64               `json:"page,omitempty"`
	PerPage      *int64               `json:"per_page,omitempty"`
}

type GetConversationMessagesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The messages and page data.  The conversation data is optional and is only returned if the include_conversation parameter is set.
	//
	GetConversationMessages200ApplicationJSONObject *GetConversationMessages200ApplicationJSON
}
