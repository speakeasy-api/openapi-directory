/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PipeSourceSelfManagedKafkaParameters - The parameters for using a self-managed Apache Kafka stream as a source.
 */
public class PipeSourceSelfManagedKafkaParameters {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalBootstrapServers")
    public String[] additionalBootstrapServers;
    public PipeSourceSelfManagedKafkaParameters withAdditionalBootstrapServers(String[] additionalBootstrapServers) {
        this.additionalBootstrapServers = additionalBootstrapServers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BatchSize")
    public Long batchSize;
    public PipeSourceSelfManagedKafkaParameters withBatchSize(Long batchSize) {
        this.batchSize = batchSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConsumerGroupID")
    public String consumerGroupID;
    public PipeSourceSelfManagedKafkaParameters withConsumerGroupID(String consumerGroupID) {
        this.consumerGroupID = consumerGroupID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Credentials")
    public SelfManagedKafkaAccessConfigurationCredentials credentials;
    public PipeSourceSelfManagedKafkaParameters withCredentials(SelfManagedKafkaAccessConfigurationCredentials credentials) {
        this.credentials = credentials;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaximumBatchingWindowInSeconds")
    public Long maximumBatchingWindowInSeconds;
    public PipeSourceSelfManagedKafkaParameters withMaximumBatchingWindowInSeconds(Long maximumBatchingWindowInSeconds) {
        this.maximumBatchingWindowInSeconds = maximumBatchingWindowInSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ServerRootCaCertificate")
    public String serverRootCaCertificate;
    public PipeSourceSelfManagedKafkaParameters withServerRootCaCertificate(String serverRootCaCertificate) {
        this.serverRootCaCertificate = serverRootCaCertificate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StartingPosition")
    public SelfManagedKafkaStartPositionEnum startingPosition;
    public PipeSourceSelfManagedKafkaParameters withStartingPosition(SelfManagedKafkaStartPositionEnum startingPosition) {
        this.startingPosition = startingPosition;
        return this;
    }
    
    @JsonProperty("TopicName")
    public String topicName;
    public PipeSourceSelfManagedKafkaParameters withTopicName(String topicName) {
        this.topicName = topicName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Vpc")
    public SelfManagedKafkaAccessConfigurationVpc vpc;
    public PipeSourceSelfManagedKafkaParameters withVpc(SelfManagedKafkaAccessConfigurationVpc vpc) {
        this.vpc = vpc;
        return this;
    }
    
}
