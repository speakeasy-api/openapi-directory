"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import methodname_enum as shared_methodname_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CorsRule:
    r"""A rule for a CORS policy. You can add up to 100 rules to a CORS policy. If more than one rule applies, the service uses the first applicable rule listed."""
    
    allowed_headers: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllowedHeaders') }})  
    allowed_origins: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllowedOrigins') }})  
    allowed_methods: Optional[list[shared_methodname_enum.MethodNameEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllowedMethods'), 'exclude': lambda f: f is None }})  
    expose_headers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExposeHeaders'), 'exclude': lambda f: f is None }})  
    max_age_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxAgeSeconds'), 'exclude': lambda f: f is None }})  
    