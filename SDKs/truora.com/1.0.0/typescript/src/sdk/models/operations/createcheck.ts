/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CreateCheckSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Truora-API-Key",
  })
  apiKey: string;
}

/**
 * Describes the background check priority. The amount of high priority checks is limited by country. Medium priority is used by default
 */
export enum CreateCheckTruoraPriorityEnum {
  Low = "low",
  Medium = "medium",
  High = "high",
}

export class CreateCheckRequest extends SpeakeasyBase {
  /**
   * Request body create a background check
   */
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  createCheckInput: shared.CreateCheckInput;

  /**
   * Describes the background check priority. The amount of high priority checks is limited by country. Medium priority is used by default
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Truora-Priority",
  })
  truoraPriority?: CreateCheckTruoraPriorityEnum;
}

export class CreateCheckResponse extends SpeakeasyBase {
  /**
   * Click to view/hide response structure
   */
  @SpeakeasyMetadata()
  checkOutput?: shared.CheckOutput;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Validation error, at least one of the parameters was invalid.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
