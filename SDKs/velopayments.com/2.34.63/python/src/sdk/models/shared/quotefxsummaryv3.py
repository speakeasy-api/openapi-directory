"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QuoteFxSummaryV3:
    
    creation_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Timestamp of when the quote was created"""  
    funding_status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fundingStatus') }})
    r"""Current status of the funding associated with this quote. One of the following values: UNFUNDED, INSTRUCTED, FUNDED"""  
    payment_currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentCurrency') }})
    r"""Valid ISO 4217 3 letter currency code. See the <a href=\\"https://www.iso.org/iso-4217-currency-codes.html\\" target=\\"_blank\\" a>ISO specification</a> for details."""  
    quote_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quoteId') }})
    r"""The id of the created quote"""  
    rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rate') }})
    r"""The conversion rate (from the source currency to the payment currency)"""  
    source_currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceCurrency') }})
    r"""Valid ISO 4217 3 letter currency code. See the <a href=\\"https://www.iso.org/iso-4217-currency-codes.html\\" target=\\"_blank\\" a>ISO specification</a> for details."""  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Current status of the fx quote. One of the following values: UNQUOTED, QUOTED, EXPIRED, EXECUTED, REJECTED"""  
    total_payment_amount: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalPaymentAmount') }})
    r"""The amount (in minor units) that the payee will receive"""  
    total_source_amount: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalSourceAmount') }})
    r"""The amount (in minor units) that will be paid from the source account"""  
    expiry_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiryTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The timestamp for when the quote will expire"""  
    inverted_rate: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invertedRate'), 'exclude': lambda f: f is None }})
    r"""The inverse conversion rate (from paymnent currency to source currency)"""  
    