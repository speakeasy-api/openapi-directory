/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RunJobFlowInput -  Input to the &lt;a&gt;RunJobFlow&lt;/a&gt; operation. 
 */
public class RunJobFlowInput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalInfo")
    public String additionalInfo;

    public RunJobFlowInput withAdditionalInfo(String additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AmiVersion")
    public String amiVersion;

    public RunJobFlowInput withAmiVersion(String amiVersion) {
        this.amiVersion = amiVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Applications")
    public Application[] applications;

    public RunJobFlowInput withApplications(Application[] applications) {
        this.applications = applications;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AutoScalingRole")
    public String autoScalingRole;

    public RunJobFlowInput withAutoScalingRole(String autoScalingRole) {
        this.autoScalingRole = autoScalingRole;
        return this;
    }
    
    /**
     * An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. For alternative cluster termination options, see &lt;a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html"&gt;Control cluster termination&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AutoTerminationPolicy")
    public AutoTerminationPolicy autoTerminationPolicy;

    public RunJobFlowInput withAutoTerminationPolicy(AutoTerminationPolicy autoTerminationPolicy) {
        this.autoTerminationPolicy = autoTerminationPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BootstrapActions")
    public BootstrapActionConfig[] bootstrapActions;

    public RunJobFlowInput withBootstrapActions(BootstrapActionConfig[] bootstrapActions) {
        this.bootstrapActions = bootstrapActions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Configurations")
    public Configuration[] configurations;

    public RunJobFlowInput withConfigurations(Configuration[] configurations) {
        this.configurations = configurations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomAmiId")
    public String customAmiId;

    public RunJobFlowInput withCustomAmiId(String customAmiId) {
        this.customAmiId = customAmiId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EbsRootVolumeSize")
    public Long ebsRootVolumeSize;

    public RunJobFlowInput withEbsRootVolumeSize(Long ebsRootVolumeSize) {
        this.ebsRootVolumeSize = ebsRootVolumeSize;
        return this;
    }
    
    @JsonProperty("Instances")
    public JobFlowInstancesConfig instances;

    public RunJobFlowInput withInstances(JobFlowInstancesConfig instances) {
        this.instances = instances;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobFlowRole")
    public String jobFlowRole;

    public RunJobFlowInput withJobFlowRole(String jobFlowRole) {
        this.jobFlowRole = jobFlowRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KerberosAttributes")
    public KerberosAttributes kerberosAttributes;

    public RunJobFlowInput withKerberosAttributes(KerberosAttributes kerberosAttributes) {
        this.kerberosAttributes = kerberosAttributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LogEncryptionKmsKeyId")
    public String logEncryptionKmsKeyId;

    public RunJobFlowInput withLogEncryptionKmsKeyId(String logEncryptionKmsKeyId) {
        this.logEncryptionKmsKeyId = logEncryptionKmsKeyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LogUri")
    public String logUri;

    public RunJobFlowInput withLogUri(String logUri) {
        this.logUri = logUri;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ManagedScalingPolicy")
    public ManagedScalingPolicy managedScalingPolicy;

    public RunJobFlowInput withManagedScalingPolicy(ManagedScalingPolicy managedScalingPolicy) {
        this.managedScalingPolicy = managedScalingPolicy;
        return this;
    }
    
    @JsonProperty("Name")
    public String name;

    public RunJobFlowInput withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NewSupportedProducts")
    public SupportedProductConfig[] newSupportedProducts;

    public RunJobFlowInput withNewSupportedProducts(SupportedProductConfig[] newSupportedProducts) {
        this.newSupportedProducts = newSupportedProducts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OSReleaseLabel")
    public String osReleaseLabel;

    public RunJobFlowInput withOSReleaseLabel(String osReleaseLabel) {
        this.osReleaseLabel = osReleaseLabel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlacementGroupConfigs")
    public PlacementGroupConfig[] placementGroupConfigs;

    public RunJobFlowInput withPlacementGroupConfigs(PlacementGroupConfig[] placementGroupConfigs) {
        this.placementGroupConfigs = placementGroupConfigs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReleaseLabel")
    public String releaseLabel;

    public RunJobFlowInput withReleaseLabel(String releaseLabel) {
        this.releaseLabel = releaseLabel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RepoUpgradeOnBoot")
    public RepoUpgradeOnBootEnum repoUpgradeOnBoot;

    public RunJobFlowInput withRepoUpgradeOnBoot(RepoUpgradeOnBootEnum repoUpgradeOnBoot) {
        this.repoUpgradeOnBoot = repoUpgradeOnBoot;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScaleDownBehavior")
    public ScaleDownBehaviorEnum scaleDownBehavior;

    public RunJobFlowInput withScaleDownBehavior(ScaleDownBehaviorEnum scaleDownBehavior) {
        this.scaleDownBehavior = scaleDownBehavior;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecurityConfiguration")
    public String securityConfiguration;

    public RunJobFlowInput withSecurityConfiguration(String securityConfiguration) {
        this.securityConfiguration = securityConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ServiceRole")
    public String serviceRole;

    public RunJobFlowInput withServiceRole(String serviceRole) {
        this.serviceRole = serviceRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StepConcurrencyLevel")
    public Long stepConcurrencyLevel;

    public RunJobFlowInput withStepConcurrencyLevel(Long stepConcurrencyLevel) {
        this.stepConcurrencyLevel = stepConcurrencyLevel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Steps")
    public StepConfig[] steps;

    public RunJobFlowInput withSteps(StepConfig[] steps) {
        this.steps = steps;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SupportedProducts")
    public String[] supportedProducts;

    public RunJobFlowInput withSupportedProducts(String[] supportedProducts) {
        this.supportedProducts = supportedProducts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;

    public RunJobFlowInput withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VisibleToAllUsers")
    public Boolean visibleToAllUsers;

    public RunJobFlowInput withVisibleToAllUsers(Boolean visibleToAllUsers) {
        this.visibleToAllUsers = visibleToAllUsers;
        return this;
    }
    
    public RunJobFlowInput(@JsonProperty("Instances") JobFlowInstancesConfig instances, @JsonProperty("Name") String name) {
        this.instances = instances;
        this.name = name;
  }
}
