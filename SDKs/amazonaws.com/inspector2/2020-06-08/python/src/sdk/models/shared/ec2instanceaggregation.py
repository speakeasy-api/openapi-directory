"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ec2instancesortby_enum as shared_ec2instancesortby_enum
from ..shared import mapfilter as shared_mapfilter
from ..shared import sortorder_enum as shared_sortorder_enum
from ..shared import stringfilter as shared_stringfilter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Ec2InstanceAggregation:
    r"""The details that define an aggregation based on Amazon EC2 instances."""
    
    amis: Optional[list[shared_stringfilter.StringFilter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amis'), 'exclude': lambda f: f is None }})  
    instance_ids: Optional[list[shared_stringfilter.StringFilter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instanceIds'), 'exclude': lambda f: f is None }})  
    instance_tags: Optional[list[shared_mapfilter.MapFilter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instanceTags'), 'exclude': lambda f: f is None }})  
    operating_systems: Optional[list[shared_stringfilter.StringFilter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operatingSystems'), 'exclude': lambda f: f is None }})  
    sort_by: Optional[shared_ec2instancesortby_enum.Ec2InstanceSortByEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sortBy'), 'exclude': lambda f: f is None }})  
    sort_order: Optional[shared_sortorder_enum.SortOrderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sortOrder'), 'exclude': lambda f: f is None }})  
    