/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListFunctions20200531QueryParams {
    /**
     * Use this field when paginating results to indicate where to begin in your list of functions. The response includes functions in the list that occur after the marker. To get the next page of the list, set this field's value to the value of &lt;code&gt;NextMarker&lt;/code&gt; from the current page's response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Marker")
    public String marker;
    public ListFunctions20200531QueryParams withMarker(String marker) {
        this.marker = marker;
        return this;
    }
    
    /**
     * The maximum number of functions that you want in the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxItems")
    public String maxItems;
    public ListFunctions20200531QueryParams withMaxItems(String maxItems) {
        this.maxItems = maxItems;
        return this;
    }
    
    /**
     * An optional filter to return only the functions that are in the specified stage, either &lt;code&gt;DEVELOPMENT&lt;/code&gt; or &lt;code&gt;LIVE&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Stage")
    public ListFunctions20200531StageEnum stage;
    public ListFunctions20200531QueryParams withStage(ListFunctions20200531StageEnum stage) {
        this.stage = stage;
        return this;
    }
    
}
