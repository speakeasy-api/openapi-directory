"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AppAPIWMMEndpointsWMMMagneticFieldRequest:
    
    altitude: float = dataclasses.field(metadata={'query_param': { 'field_name': 'altitude', 'style': 'form', 'explode': True }})
    r"""Geodetic Altitude 0 km to 600 km."""  
    latitude: float = dataclasses.field(metadata={'query_param': { 'field_name': 'latitude', 'style': 'form', 'explode': True }})
    r"""Geodetic Latitude. -90 deg (S) to 90 deg (N)."""  
    longitude: float = dataclasses.field(metadata={'query_param': { 'field_name': 'longitude', 'style': 'form', 'explode': True }})
    r"""Geodetic Longitude. -180 deg (W) to 180 deg (E)."""  
    year: float = dataclasses.field(metadata={'query_param': { 'field_name': 'year', 'style': 'form', 'explode': True }})
    r"""Year as a decimal in the range 2015-2025 (2017.5 would be half way through 2017)."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPIWMMEndpointsWMMMagneticField200ApplicationJSONDeclination:
    r"""The angle in the horizontal plane between magnetic north and true north. Declination is positive when magnetic north is east of true north."""
    
    units: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('units'), 'exclude': lambda f: f is None }})  
    value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPIWMMEndpointsWMMMagneticField200ApplicationJSONGridVariation:
    r"""Referenced to grid north, referenced to 0 deg meridian of a polar stereographic projection.  Only defined for latitudes greater than 55 degrees and less than -55 degrees (arctic and antarctic)."""
    
    units: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('units'), 'exclude': lambda f: f is None }})  
    value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPIWMMEndpointsWMMMagneticField200ApplicationJSONInclination:
    r"""Also known as 'dip', is the angle made between the horizontal plane and the magnetic field vector at some position. Positive inclination corresponds to a downward pointing."""
    
    units: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('units'), 'exclude': lambda f: f is None }})  
    value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPIWMMEndpointsWMMMagneticField200ApplicationJSONTotalIntensity:
    r"""Total magnetic field intensity in nano Teslas."""
    
    units: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('units'), 'exclude': lambda f: f is None }})  
    value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPIWMMEndpointsWMMMagneticField200ApplicationJSON:
    r"""Successful magnetic field intensity calculation"""
    
    declination: Optional[AppAPIWMMEndpointsWMMMagneticField200ApplicationJSONDeclination] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('declination'), 'exclude': lambda f: f is None }})
    r"""The angle in the horizontal plane between magnetic north and true north. Declination is positive when magnetic north is east of true north."""  
    grid_variation: Optional[AppAPIWMMEndpointsWMMMagneticField200ApplicationJSONGridVariation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grid_variation'), 'exclude': lambda f: f is None }})
    r"""Referenced to grid north, referenced to 0 deg meridian of a polar stereographic projection.  Only defined for latitudes greater than 55 degrees and less than -55 degrees (arctic and antarctic)."""  
    inclination: Optional[AppAPIWMMEndpointsWMMMagneticField200ApplicationJSONInclination] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inclination'), 'exclude': lambda f: f is None }})
    r"""Also known as 'dip', is the angle made between the horizontal plane and the magnetic field vector at some position. Positive inclination corresponds to a downward pointing."""  
    total_intensity: Optional[AppAPIWMMEndpointsWMMMagneticField200ApplicationJSONTotalIntensity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_intensity'), 'exclude': lambda f: f is None }})
    r"""Total magnetic field intensity in nano Teslas."""  
    

@dataclasses.dataclass
class AppAPIWMMEndpointsWMMMagneticFieldResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    app_api_wmm_endpoints_wmm_magnetic_field_200_application_json_object: Optional[AppAPIWMMEndpointsWMMMagneticField200ApplicationJSON] = dataclasses.field(default=None)
    r"""Successful magnetic field intensity calculation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    