<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VappExportSnapshotJobConfig - Configuration for the request to export the specified vApp snapshot.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VappExportSnapshotJobConfig
{
    /**
     * Target type for the specified vApp export.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VappExportModeEnum $exportMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('exportMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VappExportModeEnum>')]
    public VappExportModeEnum $exportMode;
    
    /**
     * Array of vApp networks that are in the specified vApp snapshot and should be set up as part of the export operation. A vApp network that is not included in the array will not be set up in the exported vApp.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\CreateVappNetworkParams> $networksToRestore
     */
	#[\JMS\Serializer\Annotation\SerializedName('networksToRestore')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CreateVappNetworkParams>')]
    public array $networksToRestore;
    
	#[\JMS\Serializer\Annotation\SerializedName('newVappParams')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CreateNewVappParams')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNewVappParams $newVappParams = null;
    
    /**
     * Boolean value that indicates whether to power on the exported vApp. Use 'true' to turn the power on for the exported vApp or use 'false' to leave the power off for the exported vApp.
     * 
     * @var ?bool $shouldPowerOnVappAfterExport
     */
	#[\JMS\Serializer\Annotation\SerializedName('shouldPowerOnVappAfterExport')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shouldPowerOnVappAfterExport = null;
    
    /**
     * ID assigned to the target vApp object, when the export is into an existing vApp. When the export is not into a target vApp, remove the 'targetVappId' member.
     * 
     * @var ?string $targetVappId
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetVappId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetVappId = null;
    
    /**
     * An array containing summary information for the virtual machines included in the vApp export.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\VappVmRestoreSpec> $vmsToExport
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmsToExport')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VappVmRestoreSpec>')]
    public array $vmsToExport;
    
	public function __construct()
	{
		$this->exportMode = \OpenAPI\OpenAPI\Models\Shared\VappExportModeEnum::EXPORT_TO_NEW_VAPP;
		$this->networksToRestore = [];
		$this->newVappParams = null;
		$this->shouldPowerOnVappAfterExport = null;
		$this->targetVappId = null;
		$this->vmsToExport = [];
	}
}
