/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum ExportTemplateTemplateLanguageLabelEnum {
  Django = "Django",
  Jinja2 = "Jinja2",
}

export enum ExportTemplateTemplateLanguageValueEnum {
  Django = "django",
  Jinja2 = "jinja2",
}

export class ExportTemplateTemplateLanguage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: ExportTemplateTemplateLanguageLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: ExportTemplateTemplateLanguageValueEnum;
}

export class ExportTemplate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "content_type" })
  contentType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Extension to append to the rendered filename
   */
  @SpeakeasyMetadata()
  @Expose({ name: "file_extension" })
  fileExtension?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Defaults to <code>text/plain</code>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mime_type" })
  mimeType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The list of objects being exported is passed as a context variable named <code>queryset</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template_code" })
  templateCode: string;

  @SpeakeasyMetadata()
  @Expose({ name: "template_language" })
  @Type(() => ExportTemplateTemplateLanguage)
  templateLanguage?: ExportTemplateTemplateLanguage;
}
