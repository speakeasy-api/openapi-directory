"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inputprocessingconfiguration as shared_inputprocessingconfiguration
from ..shared import inputstartingpositionconfiguration as shared_inputstartingpositionconfiguration
from ..shared import s3configuration as shared_s3configuration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DiscoverInputSchemaRequest:
    
    input_processing_configuration: Optional[shared_inputprocessingconfiguration.InputProcessingConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputProcessingConfiguration'), 'exclude': lambda f: f is None }})  
    input_starting_position_configuration: Optional[shared_inputstartingpositionconfiguration.InputStartingPositionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputStartingPositionConfiguration'), 'exclude': lambda f: f is None }})  
    resource_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceARN'), 'exclude': lambda f: f is None }})  
    role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoleARN'), 'exclude': lambda f: f is None }})  
    s3_configuration: Optional[shared_s3configuration.S3Configuration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Configuration'), 'exclude': lambda f: f is None }})  
    