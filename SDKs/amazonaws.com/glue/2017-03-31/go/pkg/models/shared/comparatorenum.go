// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ComparatorEnum string

const (
	ComparatorEnumEquals            ComparatorEnum = "EQUALS"
	ComparatorEnumGreaterThan       ComparatorEnum = "GREATER_THAN"
	ComparatorEnumLessThan          ComparatorEnum = "LESS_THAN"
	ComparatorEnumGreaterThanEquals ComparatorEnum = "GREATER_THAN_EQUALS"
	ComparatorEnumLessThanEquals    ComparatorEnum = "LESS_THAN_EQUALS"
)

func (e ComparatorEnum) ToPointer() *ComparatorEnum {
	return &e
}

func (e *ComparatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EQUALS":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "GREATER_THAN_EQUALS":
		fallthrough
	case "LESS_THAN_EQUALS":
		*e = ComparatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ComparatorEnum: %v", v)
	}
}
