"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PrivateLinkCreator:
    
    expires_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expires_date'), 'exclude': lambda f: f is None }})
    r"""Date when this private link should expire - optional. By default private links expire in 365 days."""  
    read_only: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('read_only'), 'exclude': lambda f: f is None }})
    r"""Optional, default true. Set to false to give private link users editing rights for this collection."""  
    