"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PackageEntity:
    r"""Package's parent is a schema."""
    
    custom_features: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFeatures'), 'exclude': lambda f: f is None }})
    r"""Custom engine specific features."""  
    package_body: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packageBody'), 'exclude': lambda f: f is None }})
    r"""The SQL code which creates the package body. If the package specification has cursors or subprograms, then the package body is mandatory."""  
    package_sql_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packageSqlCode'), 'exclude': lambda f: f is None }})
    r"""The SQL code which creates the package."""  
    