/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RelatedItemContent } from "./relateditemcontent";
import { RelatedItemTypeEnum } from "./relateditemtypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A list of items that represent RelatedItems.
 */
export class SearchRelatedItemsResponseItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "associationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  associationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  @Type(() => RelatedItemContent)
  content: RelatedItemContent;

  @SpeakeasyMetadata()
  @Expose({ name: "relatedItemId" })
  relatedItemId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RelatedItemTypeEnum;
}
