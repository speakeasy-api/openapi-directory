/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorkflowInvocation - Represents a single invocation of a compilation result.
 */
public class WorkflowInvocation {
    /**
     * Immutable. The name of the compilation result to compile. Must be in the format `projects/* /locations/* /repositories/* /compilationResults/*`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compilationResult")
    public String compilationResult;

    public WorkflowInvocation withCompilationResult(String compilationResult) {
        this.compilationResult = compilationResult;
        return this;
    }
    
    /**
     * Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invocationConfig")
    public InvocationConfig invocationConfig;

    public WorkflowInvocation withInvocationConfig(InvocationConfig invocationConfig) {
        this.invocationConfig = invocationConfig;
        return this;
    }
    
    /**
     * Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invocationTiming")
    public Interval invocationTiming;

    public WorkflowInvocation withInvocationTiming(Interval invocationTiming) {
        this.invocationTiming = invocationTiming;
        return this;
    }
    
    /**
     * Output only. The workflow invocation's name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public WorkflowInvocation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. This workflow invocation's current state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public WorkflowInvocationStateEnum state;

    public WorkflowInvocation withState(WorkflowInvocationStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Immutable. The name of the workflow config to invoke. Must be in the format `projects/* /locations/* /repositories/* /workflowConfigs/*`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflowConfig")
    public String workflowConfig;

    public WorkflowInvocation withWorkflowConfig(String workflowConfig) {
        this.workflowConfig = workflowConfig;
        return this;
    }
    
    public WorkflowInvocation(){}
}
