/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ScreenshotType {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activity_id")
    public String activityId;

    public ScreenshotType withActivityId(String activityId) {
        this.activityId = activityId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("browser")
    public String browser;

    public ScreenshotType withBrowser(String browser) {
        this.browser = browser;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("browser_version")
    public String browserVersion;

    public ScreenshotType withBrowserVersion(String browserVersion) {
        this.browserVersion = browserVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("os")
    public String os;

    public ScreenshotType withOs(String os) {
        this.os = os;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resolution")
    public String resolution;

    public ScreenshotType withResolution(String resolution) {
        this.resolution = resolution;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("screenshot_url")
    public String screenshotUrl;

    public ScreenshotType withScreenshotUrl(String screenshotUrl) {
        this.screenshotUrl = screenshotUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public ScreenshotType withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnail_url")
    public String thumbnailUrl;

    public ScreenshotType withThumbnailUrl(String thumbnailUrl) {
        this.thumbnailUrl = thumbnailUrl;
        return this;
    }
    
    public ScreenshotType(){}
}
