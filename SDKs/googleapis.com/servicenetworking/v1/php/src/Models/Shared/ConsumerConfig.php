<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ConsumerConfig - Configuration information for a private service access connection.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ConsumerConfig
{
    /**
     * Represents one or multiple Cloud SQL configurations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CloudSQLConfig> $cloudsqlConfigs
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloudsqlConfigs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CloudSQLConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $cloudsqlConfigs = null;
    
    /**
     * Export custom routes flag value for peering from consumer to producer.
     * 
     * @var ?bool $consumerExportCustomRoutes
     */
	#[\JMS\Serializer\Annotation\SerializedName('consumerExportCustomRoutes')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $consumerExportCustomRoutes = null;
    
    /**
     * Export subnet routes with public ip flag value for peering from consumer to producer.
     * 
     * @var ?bool $consumerExportSubnetRoutesWithPublicIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('consumerExportSubnetRoutesWithPublicIp')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $consumerExportSubnetRoutesWithPublicIp = null;
    
    /**
     * Import custom routes flag value for peering from consumer to producer.
     * 
     * @var ?bool $consumerImportCustomRoutes
     */
	#[\JMS\Serializer\Annotation\SerializedName('consumerImportCustomRoutes')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $consumerImportCustomRoutes = null;
    
    /**
     * Import subnet routes with public ip flag value for peering from consumer to producer.
     * 
     * @var ?bool $consumerImportSubnetRoutesWithPublicIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('consumerImportSubnetRoutesWithPublicIp')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $consumerImportSubnetRoutesWithPublicIp = null;
    
    /**
     * Export custom routes flag value for peering from producer to consumer.
     * 
     * @var ?bool $producerExportCustomRoutes
     */
	#[\JMS\Serializer\Annotation\SerializedName('producerExportCustomRoutes')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $producerExportCustomRoutes = null;
    
    /**
     * Export subnet routes with public ip flag value for peering from producer to consumer.
     * 
     * @var ?bool $producerExportSubnetRoutesWithPublicIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('producerExportSubnetRoutesWithPublicIp')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $producerExportSubnetRoutesWithPublicIp = null;
    
    /**
     * Import custom routes flag value for peering from producer to consumer.
     * 
     * @var ?bool $producerImportCustomRoutes
     */
	#[\JMS\Serializer\Annotation\SerializedName('producerImportCustomRoutes')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $producerImportCustomRoutes = null;
    
    /**
     * Import subnet routes with public ip flag value for peering from producer to consumer.
     * 
     * @var ?bool $producerImportSubnetRoutesWithPublicIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('producerImportSubnetRoutesWithPublicIp')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $producerImportSubnetRoutesWithPublicIp = null;
    
    /**
     * Output only. The VPC host network that is used to host managed service instances. In the format, projects/{project}/global/networks/{network} where {project} is the project number e.g. '12345' and {network} is the network name.
     * 
     * @var ?string $producerNetwork
     */
	#[\JMS\Serializer\Annotation\SerializedName('producerNetwork')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $producerNetwork = null;
    
    /**
     * Output only. The reserved ranges associated with this private service access connection.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleCloudServicenetworkingV1ConsumerConfigReservedRange> $reservedRanges
     */
	#[\JMS\Serializer\Annotation\SerializedName('reservedRanges')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleCloudServicenetworkingV1ConsumerConfigReservedRange>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $reservedRanges = null;
    
    /**
     * Output only. The IP ranges already in use by consumer or producer
     * 
     * @var ?array<string> $usedIpRanges
     */
	#[\JMS\Serializer\Annotation\SerializedName('usedIpRanges')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $usedIpRanges = null;
    
    /**
     * Output only. Indicates whether the VPC Service Controls reference architecture is configured for the producer VPC host network.
     * 
     * @var ?bool $vpcScReferenceArchitectureEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('vpcScReferenceArchitectureEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $vpcScReferenceArchitectureEnabled = null;
    
	public function __construct()
	{
		$this->cloudsqlConfigs = null;
		$this->consumerExportCustomRoutes = null;
		$this->consumerExportSubnetRoutesWithPublicIp = null;
		$this->consumerImportCustomRoutes = null;
		$this->consumerImportSubnetRoutesWithPublicIp = null;
		$this->producerExportCustomRoutes = null;
		$this->producerExportSubnetRoutesWithPublicIp = null;
		$this->producerImportCustomRoutes = null;
		$this->producerImportSubnetRoutesWithPublicIp = null;
		$this->producerNetwork = null;
		$this->reservedRanges = null;
		$this->usedIpRanges = null;
		$this->vpcScReferenceArchitectureEnabled = null;
	}
}
