/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NameServer } from "./nameserver";
import { Registrant } from "./registrant";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DomainDetail extends SpeakeasyBase {
  /**
   * Indication if the domain renew state can be changed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "can_toggle_renew" })
  canToggleRenew?: boolean;

  /**
   * The domain name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain_name" })
  domainName?: string;

  /**
   * Expiration date of the domain
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiration_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expirationDate?: Date;

  /**
   * Nameservers of the domain
   */
  @SpeakeasyMetadata({ elemType: NameServer })
  @Expose({ name: "name_servers" })
  @Type(() => NameServer)
  nameServers?: NameServer[];

  @SpeakeasyMetadata()
  @Expose({ name: "registrant" })
  @Type(() => Registrant)
  registrant?: Registrant;

  /**
   * Indication of renewal.<br />
   *
   * @remarks
   * No value indicates that the renewal state could not be determined at the moment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "will_renew" })
  willRenew?: boolean;
}
