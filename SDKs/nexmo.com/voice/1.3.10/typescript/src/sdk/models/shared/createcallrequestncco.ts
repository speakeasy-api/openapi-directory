/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EndpointPhoneFrom } from "./endpointphonefrom";
import { Expose, Type } from "class-transformer";

/**
 * The HTTP method used to send event information to `event_url`.
 */
export enum CreateCallRequestNccoEventMethodEnum {
  Post = "POST",
  Get = "GET",
}

/**
 * Configure the behavior when Vonage detects that the call is answered by voicemail. If `continue`, Vonage sends an HTTP request to `event_url` with the Call event machine. If `hangup`, Vonage ends the call.
 */
export enum CreateCallRequestNccoMachineDetectionEnum {
  Continue = "continue",
  Hangup = "hangup",
}

export class CreateCallRequestNcco extends SpeakeasyBase {
  /**
   * The HTTP method used to send event information to `event_url`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_method" })
  eventMethod?: CreateCallRequestNccoEventMethodEnum;

  /**
   * **Required** unless `event_url` is configured at the application
   *
   * @remarks
   * level, see [Create an Application](/api/application.v2#createApplication)
   *
   * The webhook endpoint where call progress events are
   * sent to. For more information about the values sent, see
   * [Event webhook](/voice/voice-api/webhook-reference#event-webhook).
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_url" })
  eventUrl?: string[];

  /**
   * Connect to a Phone (PSTN) number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Type(() => EndpointPhoneFrom)
  from: EndpointPhoneFrom;

  /**
   * Set the number of seconds that elapse before Vonage hangs up after the call state changes to answered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "length_timer" })
  lengthTimer?: number;

  /**
   * Configure the behavior when Vonage detects that the call is answered by voicemail. If `continue`, Vonage sends an HTTP request to `event_url` with the Call event machine. If `hangup`, Vonage ends the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "machine_detection" })
  machineDetection?: CreateCallRequestNccoMachineDetectionEnum;

  /**
   * The [Nexmo Call Control Object](/voice/voice-api/ncco-reference) to use for this call.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ncco" })
  ncco: Record<string, any>[];

  /**
   * Set to `true` to use random phone number as `from`. The number will be selected from the list of the numbers assigned to the current application. `random_from_number: true` cannot be used together with `from`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "random_from_number" })
  randomFromNumber?: boolean;

  /**
   * Set the number of seconds that elapse before Vonage hangs up after the call state changes to ‘ringing’.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ringing_timer" })
  ringingTimer?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to: any[];
}
