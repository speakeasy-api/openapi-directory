// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateOutpostPathParams struct {
	//  The ID or the Amazon Resource Name (ARN) of the Outpost.
	OutpostID string `pathParam:"style=simple,explode=false,name=OutpostId"`
}

type UpdateOutpostHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateOutpostRequestBodySupportedHardwareTypeEnum -  The type of hardware for this Outpost.
type UpdateOutpostRequestBodySupportedHardwareTypeEnum string

const (
	UpdateOutpostRequestBodySupportedHardwareTypeEnumRack   UpdateOutpostRequestBodySupportedHardwareTypeEnum = "RACK"
	UpdateOutpostRequestBodySupportedHardwareTypeEnumServer UpdateOutpostRequestBodySupportedHardwareTypeEnum = "SERVER"
)

func (e *UpdateOutpostRequestBodySupportedHardwareTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RACK":
		fallthrough
	case "SERVER":
		*e = UpdateOutpostRequestBodySupportedHardwareTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateOutpostRequestBodySupportedHardwareTypeEnum: %s", s)
	}
}

type UpdateOutpostRequestBody struct {
	// The description of the Outpost.
	Description *string `json:"Description,omitempty"`
	// The name of the Outpost.
	Name *string `json:"Name,omitempty"`
	//  The type of hardware for this Outpost.
	SupportedHardwareType *UpdateOutpostRequestBodySupportedHardwareTypeEnum `json:"SupportedHardwareType,omitempty"`
}

type UpdateOutpostRequest struct {
	PathParams UpdateOutpostPathParams
	Headers    UpdateOutpostHeaders
	Request    UpdateOutpostRequestBody `request:"mediaType=application/json"`
}

type UpdateOutpostResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// Success
	UpdateOutpostOutput *shared.UpdateOutpostOutput
	// ValidationException
	ValidationException interface{}
}
