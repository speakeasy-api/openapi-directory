// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EnvironmentStateEnum - Output only. Current execution state of this environment.
type EnvironmentStateEnum string

const (
	EnvironmentStateEnumStateUnspecified EnvironmentStateEnum = "STATE_UNSPECIFIED"
	EnvironmentStateEnumSuspended        EnvironmentStateEnum = "SUSPENDED"
	EnvironmentStateEnumPending          EnvironmentStateEnum = "PENDING"
	EnvironmentStateEnumRunning          EnvironmentStateEnum = "RUNNING"
	EnvironmentStateEnumDeleting         EnvironmentStateEnum = "DELETING"
)

func (e EnvironmentStateEnum) ToPointer() *EnvironmentStateEnum {
	return &e
}

func (e *EnvironmentStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "SUSPENDED":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "DELETING":
		*e = EnvironmentStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnvironmentStateEnum: %v", v)
	}
}

// Environment - A Cloud Shell environment, which is defined as the combination of a Docker image specifying what is installed on the environment and a home directory containing the user's data that will remain across sessions. Each user has at least an environment with the ID "default".
type Environment struct {
	// Required. Immutable. Full path to the Docker image used to run this environment, e.g. "gcr.io/dev-con/cloud-devshell:latest".
	DockerImage *string `json:"dockerImage,omitempty"`
	// Output only. The environment's identifier, unique among the user's environments.
	ID *string `json:"id,omitempty"`
	// Immutable. Full name of this resource, in the format `users/{owner_email}/environments/{environment_id}`. `{owner_email}` is the email address of the user to whom this environment belongs, and `{environment_id}` is the identifier of this environment. For example, `users/someone@example.com/environments/default`.
	Name *string `json:"name,omitempty"`
	// Output only. Public keys associated with the environment. Clients can connect to this environment via SSH only if they possess a private key corresponding to at least one of these public keys. Keys can be added to or removed from the environment using the AddPublicKey and RemovePublicKey methods.
	PublicKeys []string `json:"publicKeys,omitempty"`
	// Output only. Host to which clients can connect to initiate SSH sessions with the environment.
	SSHHost *string `json:"sshHost,omitempty"`
	// Output only. Port to which clients can connect to initiate SSH sessions with the environment.
	SSHPort *int `json:"sshPort,omitempty"`
	// Output only. Username that clients should use when initiating SSH sessions with the environment.
	SSHUsername *string `json:"sshUsername,omitempty"`
	// Output only. Current execution state of this environment.
	State *EnvironmentStateEnum `json:"state,omitempty"`
	// Output only. Host to which clients can connect to initiate HTTPS or WSS connections with the environment.
	WebHost *string `json:"webHost,omitempty"`
}
