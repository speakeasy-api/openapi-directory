/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListPackagesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-rh-identity",
  })
  rhIdentity: string;
}

/**
 * Sort field
 */
export enum ListPackagesSortEnum {
  Id = "id",
  Name = "name",
  SystemsInstalled = "systems_installed",
  SystemsUpdatable = "systems_updatable",
}

export class ListPackagesRequest extends SpeakeasyBase {
  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[name]",
  })
  filterName?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[summary]",
  })
  filterSummary?: string;

  /**
   * Filter systems by their SAP SIDs
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[system_profile][sap_sids][in]",
  })
  filterSystemProfileSapSidsIn?: string[];

  /**
   * Filter only SAP systems
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[system_profile][sap_system]",
  })
  filterSystemProfileSapSystem?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[systems_installed]",
  })
  filterSystemsInstalled?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[systems_updatable]",
  })
  filterSystemsUpdatable?: string;

  /**
   * Limit for paging, set -1 to return all
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Offset for paging
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Find matching text
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search?: string;

  /**
   * Sort field
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: ListPackagesSortEnum;

  /**
   * Tag filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tags" })
  tags?: string[];
}

export class ListPackagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  controllersPackagesResponse?: shared.ControllersPackagesResponse;
}
