/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PredictionsRequest extends SpeakeasyBase {
  /**
   * A calendar year
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year?: number;
}

export class Predictions400ApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp: string;
}

/**
 * Bad Request
 */
export class Predictions400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => Predictions400ApplicationJSONError)
  error?: Predictions400ApplicationJSONError;
}

/**
 * OK
 */
export class Predictions200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Prediction })
  @Expose({ name: "predictions" })
  @Type(() => shared.Prediction)
  predictions?: shared.Prediction[];
}

export class PredictionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  predictions200ApplicationJSONObject?: Predictions200ApplicationJSON;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  predictions400ApplicationJSONObject?: Predictions400ApplicationJSON;
}
