// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeviceFieldsPushProviderEnum string

const (
	DeviceFieldsPushProviderEnumFirebase DeviceFieldsPushProviderEnum = "firebase"
	DeviceFieldsPushProviderEnumApn      DeviceFieldsPushProviderEnum = "apn"
	DeviceFieldsPushProviderEnumHuawei   DeviceFieldsPushProviderEnum = "huawei"
	DeviceFieldsPushProviderEnumXiaomi   DeviceFieldsPushProviderEnum = "xiaomi"
)

func (e *DeviceFieldsPushProviderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "firebase":
		fallthrough
	case "apn":
		fallthrough
	case "huawei":
		fallthrough
	case "xiaomi":
		*e = DeviceFieldsPushProviderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceFieldsPushProviderEnum: %s", s)
	}
}

type DeviceFields struct {
	// Device ID
	ID           *string                       `json:"id,omitempty"`
	PushProvider *DeviceFieldsPushProviderEnum `json:"push_provider,omitempty"`
	// Name of the push provider configuration
	PushProviderName *string `json:"push_provider_name,omitempty"`
}
