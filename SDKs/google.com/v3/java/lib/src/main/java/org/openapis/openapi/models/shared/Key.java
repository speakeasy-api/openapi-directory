/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Key - Key of a result.
 */
public class Key {
    /**
     * The number of days in advance the user wants to book the itinerary. If `advanceBookingWindow` is not a value of the `aggregateBy` parameter in the request call, then the `advanceBookingWindow` field is not returned in the `Key`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advanceBookingWindow")
    public Integer advanceBookingWindow;

    public Key withAdvanceBookingWindow(Integer advanceBookingWindow) {
        this.advanceBookingWindow = advanceBookingWindow;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkinDate")
    public Date checkinDate;

    public Key withCheckinDate(Date checkinDate) {
        this.checkinDate = checkinDate;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date")
    public Date date;

    public Key withDate(Date date) {
        this.date = date;
        return this;
    }
    
    /**
     * The user\u2019s device type. If `deviceType` is not a value of the `aggregateBy` parameter in the request call, then the `deviceType` field is not returned in the `Key`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceType")
    public KeyDeviceTypeEnum deviceType;

    public Key withDeviceType(KeyDeviceTypeEnum deviceType) {
        this.deviceType = deviceType;
        return this;
    }
    
    /**
     * CLDR region code of the country/region of the hotel. If `hotelRegionCode` is not a value of the `aggregateBy` parameter in the request call, then the `hotelRegionCode` field is not returned in the `Key`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hotelRegionCode")
    public String hotelRegionCode;

    public Key withHotelRegionCode(String hotelRegionCode) {
        this.hotelRegionCode = hotelRegionCode;
        return this;
    }
    
    /**
     * The number of nights for the itinerary. If `lengthOfStayDays` is not a value of the `aggregateBy` parameter in the request call, then the `lengthOfStayDays` field is not returned in the `Key`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lengthOfStayDays")
    public Integer lengthOfStayDays;

    public Key withLengthOfStayDays(Integer lengthOfStayDays) {
        this.lengthOfStayDays = lengthOfStayDays;
        return this;
    }
    
    /**
     * The total occupancy of the itinerary. If `occupancy` is not a value of the `aggregateBy` parameter in the request call, then the `occupancy` field is not returned in the `Key`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("occupancy")
    public Integer occupancy;

    public Key withOccupancy(Integer occupancy) {
        this.occupancy = occupancy;
        return this;
    }
    
    /**
     * Partner's hotel ID. If `partnerHotelId` is not a value of the `aggregateBy` parameter in the request call, then the `partnerHotelId` field is not returned in the `Key`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partnerHotelId")
    public String partnerHotelId;

    public Key withPartnerHotelId(String partnerHotelId) {
        this.partnerHotelId = partnerHotelId;
        return this;
    }
    
    /**
     * ISO 3116 region code of the country/region of the user. If `userRegionCode` is not a value of the `aggregateBy` parameter in the request call, then the `userRegionCode` field is not returned in the `Key`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userRegionCode")
    public String userRegionCode;

    public Key withUserRegionCode(String userRegionCode) {
        this.userRegionCode = userRegionCode;
        return this;
    }
    
    public Key(){}
}
