/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class LHDeepLinksITCOQueryParams {
    /**
     * Cabin class: 'economy', 'premium_economy', 'business', 'first' (Acceptable values are: "", "economy", "premium_economy", "business", "first")
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cabin-class")
    public String cabinClass;
    public LHDeepLinksITCOQueryParams withCabinClass(String cabinClass) {
        this.cabinClass = cabinClass;
        return this;
    }
    
    /**
     * Carrier for which the deep link will be created (e.g. 'LH')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=catalogues")
    public String catalogues;
    public LHDeepLinksITCOQueryParams withCatalogues(String catalogues) {
        this.catalogues = catalogues;
        return this;
    }
    
    /**
     * 2-letter ISO 3166-1 country code
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=country")
    public String country;
    public LHDeepLinksITCOQueryParams withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Journey destination. 3-letter IATA airport or city code (e.g. 'MAD')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=destination")
    public String destination;
    public LHDeepLinksITCOQueryParams withDestination(String destination) {
        this.destination = destination;
        return this;
    }
    
    /**
     * Deep link encryption-key
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=encryption-key")
    public String encryptionKey;
    public LHDeepLinksITCOQueryParams withEncryptionKey(String encryptionKey) {
        this.encryptionKey = encryptionKey;
        return this;
    }
    
    /**
     * Travel fare (e.g. '1341.45')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fare")
    public String fare;
    public LHDeepLinksITCOQueryParams withFare(String fare) {
        this.fare = fare;
        return this;
    }
    
    /**
     * Fare currency (e.g. 'EUR')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fare-currency")
    public String fareCurrency;
    public LHDeepLinksITCOQueryParams withFareCurrency(String fareCurrency) {
        this.fareCurrency = fareCurrency;
        return this;
    }
    
    /**
     * 2-letter ISO 3166-1 language code
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=lang")
    public String lang;
    public LHDeepLinksITCOQueryParams withLang(String lang) {
        this.lang = lang;
        return this;
    }
    
    /**
     * Travel net fare. Total fare less taxes and charges (e.g. '1140')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=net-fare")
    public String netFare;
    public LHDeepLinksITCOQueryParams withNetFare(String netFare) {
        this.netFare = netFare;
        return this;
    }
    
    /**
     * Journey origin. 3-letter IATA airport or city code (e.g. 'FRA')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=origin")
    public String origin;
    public LHDeepLinksITCOQueryParams withOrigin(String origin) {
        this.origin = origin;
        return this;
    }
    
    /**
     * Outbound flight segments in the sequence of travel (e.g. 'LH096;LH480')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=outbound-segments")
    public String outboundSegments;
    public LHDeepLinksITCOQueryParams withOutboundSegments(String outboundSegments) {
        this.outboundSegments = outboundSegments;
        return this;
    }
    
    /**
     * Deep link partner id (e.g. '1247')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=partnerid")
    public String partnerid;
    public LHDeepLinksITCOQueryParams withPartnerid(String partnerid) {
        this.partnerid = partnerid;
        return this;
    }
    
    /**
     * Journey return-date (YYYY-MM-DD)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=return-date")
    public String returnDate;
    public LHDeepLinksITCOQueryParams withReturnDate(String returnDate) {
        this.returnDate = returnDate;
        return this;
    }
    
    /**
     * Flight segments in the sequence of travel (e.g. 'LH7465;LH431')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=return-segments")
    public String returnSegments;
    public LHDeepLinksITCOQueryParams withReturnSegments(String returnSegments) {
        this.returnSegments = returnSegments;
        return this;
    }
    
    /**
     * Deep link tracking ID
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=trackingid")
    public String trackingid;
    public LHDeepLinksITCOQueryParams withTrackingid(String trackingid) {
        this.trackingid = trackingid;
        return this;
    }
    
    /**
     * Journey travel-date (YYYY-MM-DD)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=travel-date")
    public String travelDate;
    public LHDeepLinksITCOQueryParams withTravelDate(String travelDate) {
        this.travelDate = travelDate;
        return this;
    }
    
    /**
     * Type and number of travelers (e.g. '(adult=2;child=2;infant=1)')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=travelers")
    public String travelers;
    public LHDeepLinksITCOQueryParams withTravelers(String travelers) {
        this.travelers = travelers;
        return this;
    }
    
}
