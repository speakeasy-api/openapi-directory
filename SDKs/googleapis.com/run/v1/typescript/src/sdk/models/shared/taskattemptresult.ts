/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleRpcStatus } from "./googlerpcstatus";
import { Expose, Type } from "class-transformer";

/**
 * Result of a task attempt.
 */
export class TaskAttemptResult extends SpeakeasyBase {
  /**
   * Optional. The exit code of this attempt. This may be unset if the container was unable to exit cleanly with a code due to some other failure. See status field for possible failure details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exitCode" })
  exitCode?: number;

  /**
   * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => GoogleRpcStatus)
  status?: GoogleRpcStatus;
}
