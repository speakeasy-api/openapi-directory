"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetWorkspaceSlugOrganizationsSecurity:
    
    bearer: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class GetWorkspaceSlugOrganizationsDirectionEnum(str, Enum):
    ASC = 'ASC'
    DESC = 'DESC'

class GetWorkspaceSlugOrganizationsItemsEnum(str, Enum):
    TEN = '10'
    FIFTY = '50'
    ONE_HUNDRED = '100'

class GetWorkspaceSlugOrganizationsSortEnum(str, Enum):
    NAME = 'name'
    WEBSITE = 'website'
    MEMBERS_COUNT = 'members_count'
    EMPLOYEES_COUNT = 'employees_count'


@dataclasses.dataclass
class GetWorkspaceSlugOrganizationsRequest:
    
    workspace_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workspace_slug', 'style': 'simple', 'explode': False }})  
    direction: Optional[GetWorkspaceSlugOrganizationsDirectionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'direction', 'style': 'form', 'explode': True }})  
    items: Optional[GetWorkspaceSlugOrganizationsItemsEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'items', 'style': 'form', 'explode': True }})  
    page: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})  
    query: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'query', 'style': 'form', 'explode': True }})  
    sort: Optional[GetWorkspaceSlugOrganizationsSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class GetWorkspaceSlugOrganizationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    