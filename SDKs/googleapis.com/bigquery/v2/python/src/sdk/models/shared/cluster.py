"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import featurevalue as shared_featurevalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Cluster:
    r"""Message containing the information about one cluster."""
    
    centroid_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('centroidId'), 'exclude': lambda f: f is None }})
    r"""Centroid id."""  
    count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""Count of training data rows that were assigned to this cluster."""  
    feature_values: Optional[list[shared_featurevalue.FeatureValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('featureValues'), 'exclude': lambda f: f is None }})
    r"""Values of highly variant features for this cluster."""  
    