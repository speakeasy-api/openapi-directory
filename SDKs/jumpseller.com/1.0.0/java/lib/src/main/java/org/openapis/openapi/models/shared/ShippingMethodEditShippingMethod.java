/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ShippingMethodEditShippingMethod {
    /**
     * URL that receives the shipping data and returns rates
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callback_url")
    public String callbackUrl;
    public ShippingMethodEditShippingMethod withCallbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
        return this;
    }
    
    /**
     * City/Municipality name of origin
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;
    public ShippingMethodEditShippingMethod withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * URL that returns available shipping services
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fetch_services_url")
    public String fetchServicesUrl;
    public ShippingMethodEditShippingMethod withFetchServicesUrl(String fetchServicesUrl) {
        this.fetchServicesUrl = fetchServicesUrl;
        return this;
    }
    
    /**
     * Name of the Shipping Method
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ShippingMethodEditShippingMethod withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Postal/Zipcode of origin
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postal")
    public String postal;
    public ShippingMethodEditShippingMethod withPostal(String postal) {
        this.postal = postal;
        return this;
    }
    
    /**
     * State/Region code of origin
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public ShippingMethodEditShippingMethod withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Token used to authentica on the the fetch_services_url
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token")
    public String token;
    public ShippingMethodEditShippingMethod withToken(String token) {
        this.token = token;
        return this;
    }
    
}
