// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum - Format of the response
type GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum string

const (
	GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnumJSON  GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum = "json"
	GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnumJsonp GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum = "jsonp"
	GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnumXML   GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum = "xml"
)

func (e GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum) ToPointer() *GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum {
	return &e
}

func (e *GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "jsonp":
		fallthrough
	case "xml":
		*e = GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum: %v", v)
	}
}

// GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatVersionNumberEnum - Version of the service to call. The current version is 1
type GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatVersionNumberEnum int64

const (
	GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatVersionNumberEnumOne GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatVersionNumberEnum = 1
)

func (e GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatVersionNumberEnum) ToPointer() *GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatVersionNumberEnum {
	return &e
}

func (e *GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatVersionNumberEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		*e = GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatVersionNumberEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatVersionNumberEnum: %v", v)
	}
}

type GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatRequest struct {
	// Specifies the jsonp callback method. Only used when format is jsonp.
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Format of the response
	Format GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Maximum latitude coordinate of bounding box defined in terms of latitude/longitude.
	MaxLat float64 `pathParam:"style=simple,explode=false,name=maxLat"`
	// Maximum longitude coordinate of bounding box defined in terms of latitude/longitude.
	MaxLon float64 `pathParam:"style=simple,explode=false,name=maxLon"`
	// Minimum latitude coordinate of bounding box defined in terms of latitude/longitude.
	MinLat float64 `pathParam:"style=simple,explode=false,name=minLat"`
	// Minimum longitude coordinate of bounding box defined in terms of latitude/longitude.
	MinLon float64 `pathParam:"style=simple,explode=false,name=minLon"`
	// Version of the service to call. The current version is 1
	VersionNumber GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatVersionNumberEnum `pathParam:"style=simple,explode=false,name=versionNumber"`
}

type GetMapVersionNumberCopyrightsMinLonMinLatMaxLonMaxLatFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
