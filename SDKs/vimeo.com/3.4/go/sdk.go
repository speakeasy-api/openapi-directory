// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdk

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/utils"
	"time"
)

// ServerList contains the list of servers available to the SDK
var ServerList = []string{
	// Vimeo.com
	"https://api.vimeo.com",
}

// HTTPClient provides an interface for suplying the SDK with a custom HTTP client
type HTTPClient interface {
	Do(req *http.Request) (*http.Response, error)
}

// String provides a helper function to return a pointer to a string
func String(s string) *string { return &s }

type SDK struct {
	APIInformation                      *apiInformation
	AlbumsAlbumVideos                   *albumsAlbumVideos
	AlbumsCustomAlbumLogos              *albumsCustomAlbumLogos
	AlbumsCustomAlbumThumbnails         *albumsCustomAlbumThumbnails
	AlbumsEssentials                    *albumsEssentials
	AuthenticationExtrasEssentials      *authenticationExtrasEssentials
	CategoriesChannels                  *categoriesChannels
	CategoriesEssentials                *categoriesEssentials
	CategoriesGroups                    *categoriesGroups
	CategoriesSubscriptions             *categoriesSubscriptions
	CategoriesVideos                    *categoriesVideos
	ChannelsCategories                  *channelsCategories
	ChannelsEssentials                  *channelsEssentials
	ChannelsModerators                  *channelsModerators
	ChannelsPrivateChannelMembers       *channelsPrivateChannelMembers
	ChannelsSubscriptionsAndSubscribers *channelsSubscriptionsAndSubscribers
	ChannelsTags                        *channelsTags
	ChannelsVideos                      *channelsVideos
	EmbedPresetsCustomLogos             *embedPresetsCustomLogos
	EmbedPresetsEssentials              *embedPresetsEssentials
	EmbedPresetsVideos                  *embedPresetsVideos
	GroupsEssentials                    *groupsEssentials
	GroupsSubscription                  *groupsSubscription
	GroupsUsers                         *groupsUsers
	GroupsVideos                        *groupsVideos
	LikesEssentials                     *likesEssentials
	OnDemandBackgrounds                 *onDemandBackgrounds
	OnDemandEssentials                  *onDemandEssentials
	OnDemandGenres                      *onDemandGenres
	OnDemandPosters                     *onDemandPosters
	OnDemandPromotions                  *onDemandPromotions
	OnDemandPurchasesAndRentals         *onDemandPurchasesAndRentals
	OnDemandRegions                     *onDemandRegions
	OnDemandSeasons                     *onDemandSeasons
	OnDemandVideos                      *onDemandVideos
	PortfoliosEssentials                *portfoliosEssentials
	PortfoliosVideos                    *portfoliosVideos
	ProjectsEssentials                  *projectsEssentials
	ProjectsVideos                      *projectsVideos
	TagsEssentials                      *tagsEssentials
	UsersEssentials                     *usersEssentials
	UsersFeed                           *usersFeed
	UsersFollows                        *usersFollows
	UsersInternal                       *usersInternal
	UsersPictures                       *usersPictures
	UsersWatchHistory                   *usersWatchHistory
	VideosComments                      *videosComments
	VideosContentRatings                *videosContentRatings
	VideosCreativeCommons               *videosCreativeCommons
	VideosCredits                       *videosCredits
	VideosEmbedPrivacy                  *videosEmbedPrivacy
	VideosEssentials                    *videosEssentials
	VideosLanguages                     *videosLanguages
	VideosRecommendations               *videosRecommendations
	VideosTags                          *videosTags
	VideosTextTracks                    *videosTextTracks
	VideosThumbnails                    *videosThumbnails
	VideosUpload                        *videosUpload
	VideosVersions                      *videosVersions
	VideosViewingPrivacy                *videosViewingPrivacy
	WatchLaterQueueEssentials           *watchLaterQueueEssentials

	// Non-idiomatic field names below are to namespace fields from the fields names above to avoid name conflicts
	_defaultClient  HTTPClient
	_securityClient HTTPClient
	_security       *shared.Security
	_serverURL      string
	_language       string
	_sdkVersion     string
	_genVersion     string
}

type SDKOption func(*SDK)

// WithServerURL allows the overriding of the default server URL
func WithServerURL(serverURL string) SDKOption {
	return func(sdk *SDK) {
		sdk._serverURL = serverURL
	}
}

// WithTemplatedServerURL allows the overriding of the default server URL with a templated URL populated with the provided parameters
func WithTemplatedServerURL(serverURL string, params map[string]string) SDKOption {
	return func(sdk *SDK) {
		if params != nil {
			serverURL = utils.ReplaceParameters(serverURL, params)
		}

		sdk._serverURL = serverURL
	}
}

// WithClient allows the overriding of the default HTTP client used by the SDK
func WithClient(client HTTPClient) SDKOption {
	return func(sdk *SDK) {
		sdk._defaultClient = client
	}
}

// WithSecurity configures the SDK to use the provided security details
func WithSecurity(security shared.Security) SDKOption {
	return func(sdk *SDK) {
		sdk._security = &security
	}
}

// New creates a new instance of the SDK with the provided options
func New(opts ...SDKOption) *SDK {
	sdk := &SDK{
		_language:   "go",
		_sdkVersion: "0.0.1",
		_genVersion: "internal",
	}
	for _, opt := range opts {
		opt(sdk)
	}

	// Use WithClient to override the default client if you would like to customize the timeout
	if sdk._defaultClient == nil {
		sdk._defaultClient = &http.Client{Timeout: 60 * time.Second}
	}
	if sdk._securityClient == nil {
		if sdk._security != nil {
			sdk._securityClient = utils.ConfigureSecurityClient(sdk._defaultClient, sdk._security)
		} else {
			sdk._securityClient = sdk._defaultClient
		}
	}

	if sdk._serverURL == "" {
		sdk._serverURL = ServerList[0]
	}

	sdk.APIInformation = newAPIInformation(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.AlbumsAlbumVideos = newAlbumsAlbumVideos(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.AlbumsCustomAlbumLogos = newAlbumsCustomAlbumLogos(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.AlbumsCustomAlbumThumbnails = newAlbumsCustomAlbumThumbnails(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.AlbumsEssentials = newAlbumsEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.AuthenticationExtrasEssentials = newAuthenticationExtrasEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CategoriesChannels = newCategoriesChannels(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CategoriesEssentials = newCategoriesEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CategoriesGroups = newCategoriesGroups(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CategoriesSubscriptions = newCategoriesSubscriptions(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CategoriesVideos = newCategoriesVideos(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ChannelsCategories = newChannelsCategories(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ChannelsEssentials = newChannelsEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ChannelsModerators = newChannelsModerators(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ChannelsPrivateChannelMembers = newChannelsPrivateChannelMembers(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ChannelsSubscriptionsAndSubscribers = newChannelsSubscriptionsAndSubscribers(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ChannelsTags = newChannelsTags(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ChannelsVideos = newChannelsVideos(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.EmbedPresetsCustomLogos = newEmbedPresetsCustomLogos(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.EmbedPresetsEssentials = newEmbedPresetsEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.EmbedPresetsVideos = newEmbedPresetsVideos(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.GroupsEssentials = newGroupsEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.GroupsSubscription = newGroupsSubscription(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.GroupsUsers = newGroupsUsers(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.GroupsVideos = newGroupsVideos(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.LikesEssentials = newLikesEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.OnDemandBackgrounds = newOnDemandBackgrounds(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.OnDemandEssentials = newOnDemandEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.OnDemandGenres = newOnDemandGenres(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.OnDemandPosters = newOnDemandPosters(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.OnDemandPromotions = newOnDemandPromotions(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.OnDemandPurchasesAndRentals = newOnDemandPurchasesAndRentals(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.OnDemandRegions = newOnDemandRegions(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.OnDemandSeasons = newOnDemandSeasons(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.OnDemandVideos = newOnDemandVideos(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.PortfoliosEssentials = newPortfoliosEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.PortfoliosVideos = newPortfoliosVideos(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ProjectsEssentials = newProjectsEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ProjectsVideos = newProjectsVideos(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.TagsEssentials = newTagsEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.UsersEssentials = newUsersEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.UsersFeed = newUsersFeed(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.UsersFollows = newUsersFollows(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.UsersInternal = newUsersInternal(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.UsersPictures = newUsersPictures(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.UsersWatchHistory = newUsersWatchHistory(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosComments = newVideosComments(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosContentRatings = newVideosContentRatings(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosCreativeCommons = newVideosCreativeCommons(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosCredits = newVideosCredits(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosEmbedPrivacy = newVideosEmbedPrivacy(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosEssentials = newVideosEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosLanguages = newVideosLanguages(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosRecommendations = newVideosRecommendations(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosTags = newVideosTags(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosTextTracks = newVideosTextTracks(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosThumbnails = newVideosThumbnails(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosUpload = newVideosUpload(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosVersions = newVideosVersions(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.VideosViewingPrivacy = newVideosViewingPrivacy(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.WatchLaterQueueEssentials = newWatchLaterQueueEssentials(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	return sdk
}
