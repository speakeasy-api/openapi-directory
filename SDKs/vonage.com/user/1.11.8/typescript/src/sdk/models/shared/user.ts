/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Contact } from "./contact";
import { UserExtension } from "./userextension";
import { Expose, Type } from "class-transformer";

export class User extends SpeakeasyBase {
  /**
   * Collection of contact objects
   */
  @SpeakeasyMetadata({ elemType: Contact })
  @Expose({ name: "contact_numbers" })
  @Type(() => Contact)
  contactNumbers?: Contact[];

  /**
   * Email address of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Collection of extension objects
   */
  @SpeakeasyMetadata({ elemType: UserExtension })
  @Expose({ name: "extensions" })
  @Type(() => UserExtension)
  extensions?: UserExtension[];

  /**
   * First name of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  /**
   * Unique identifier of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Last name of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * Login name of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "login_name" })
  loginName?: string;
}
