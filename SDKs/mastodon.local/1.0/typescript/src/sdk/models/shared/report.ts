/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Account } from "./account";
import { Expose, Transform, Type } from "class-transformer";

export enum ReportCategoryEnum {
  Other = "other",
  Spam = "spam",
  Violation = "violation",
}

/**
 * Reports filed against users and/or statuses, to be taken action on by moderators.
 *
 * @see {@link https://docs.joinmastodon.org/entities/report/}
 */
export class Report extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action_taken" })
  actionTaken?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "action_taken_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  actionTakenAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: ReportCategoryEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "forwarded" })
  forwarded?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rule_ids" })
  ruleIds?: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "status_ids" })
  statusIds?: number[];

  /**
   * Represents a user of Mastodon and their associated profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_account" })
  @Type(() => Account)
  targetAccount?: Account;
}
