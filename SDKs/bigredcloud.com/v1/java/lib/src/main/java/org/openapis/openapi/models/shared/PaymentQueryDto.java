/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class PaymentQueryDto {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("acCode")
    public String acCode;

    public PaymentQueryDto withAcCode(String acCode) {
        this.acCode = acCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("acEntries")
    public AcEntryDto[] acEntries;

    public PaymentQueryDto withAcEntries(AcEntryDto[] acEntries) {
        this.acEntries = acEntries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountCode")
    public String bankAccountCode;

    public PaymentQueryDto withBankAccountCode(String bankAccountCode) {
        this.bankAccountCode = bankAccountCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountId")
    public Long bankAccountId;

    public PaymentQueryDto withBankAccountId(Long bankAccountId) {
        this.bankAccountId = bankAccountId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bookTranTypeId")
    public Long bookTranTypeId;

    public PaymentQueryDto withBookTranTypeId(Long bookTranTypeId) {
        this.bookTranTypeId = bookTranTypeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public AcudfValueDto[] customFields;

    public PaymentQueryDto withCustomFields(AcudfValueDto[] customFields) {
        this.customFields = customFields;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("detailCollection")
    public String[] detailCollection;

    public PaymentQueryDto withDetailCollection(String[] detailCollection) {
        this.detailCollection = detailCollection;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discount")
    public Double discount;

    public PaymentQueryDto withDiscount(Double discount) {
        this.discount = discount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("entryDate")
    public OffsetDateTime entryDate;

    public PaymentQueryDto withEntryDate(OffsetDateTime entryDate) {
        this.entryDate = entryDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public PaymentQueryDto withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("note")
    public String note;

    public PaymentQueryDto withNote(String note) {
        this.note = note;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plaidTransactionId")
    public String plaidTransactionId;

    public PaymentQueryDto withPlaidTransactionId(String plaidTransactionId) {
        this.plaidTransactionId = plaidTransactionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("procDate")
    public OffsetDateTime procDate;

    public PaymentQueryDto withProcDate(OffsetDateTime procDate) {
        this.procDate = procDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public PaymentQueryDto withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supplierId")
    public Long supplierId;

    public PaymentQueryDto withSupplierId(Long supplierId) {
        this.supplierId = supplierId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public String timestamp;

    public PaymentQueryDto withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Double total;

    public PaymentQueryDto withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferBankCode")
    public String transferBankCode;

    public PaymentQueryDto withTransferBankCode(String transferBankCode) {
        this.transferBankCode = transferBankCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferBankId")
    public Long transferBankId;

    public PaymentQueryDto withTransferBankId(Long transferBankId) {
        this.transferBankId = transferBankId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unallocated")
    public Double unallocated;

    public PaymentQueryDto withUnallocated(Double unallocated) {
        this.unallocated = unallocated;
        return this;
    }
    
    public PaymentQueryDto(){}
}
