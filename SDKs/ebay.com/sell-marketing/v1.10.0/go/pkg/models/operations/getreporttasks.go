// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetReportTasksSecurity struct {
	APIAuth shared.SchemeAPIAuth `security:"scheme,type=oauth2"`
}

type GetReportTasksQueryParams struct {
	// Specifies the maximum number of report tasks to return on a page in the paginated response. Default: 10 Maximum: 500
	Limit *string `queryParam:"style=form,explode=true,name=limit"`
	// Specifies the number of report tasks to skip in the result set before returning the first report in the paginated response. Combine offset with the limit query parameter to control the reports returned in the response. For example, if you supply an offset of 0 and a limit of 10, the response contains the first 10 reports from the complete list of report tasks retrieved by the call. If offset is 10 and limit is 10, the first page of the response contains reports 11-20 from the complete result set. Default: 0
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
	// This parameter filters the returned report tasks by their status. Supply a comma-separated list of the report statuses you want returned. The results are filtered to include only the report statuses you specify. Note: The results might not include some report tasks if other search conditions exclude them. Valid values: &nbsp;&nbsp;&nbsp;PENDING &nbsp;&nbsp;&nbsp;SUCCESS &nbsp;&nbsp;&nbsp;FAILED
	ReportTaskStatuses *string `queryParam:"style=form,explode=true,name=report_task_statuses"`
}

type GetReportTasksRequest struct {
	QueryParams GetReportTasksQueryParams
	Security    GetReportTasksSecurity
}

type GetReportTasksResponse struct {
	ContentType string
	// Success
	ReportTaskPagedCollection *shared.ReportTaskPagedCollection
	StatusCode                int
	RawResponse               *http.Response
}
