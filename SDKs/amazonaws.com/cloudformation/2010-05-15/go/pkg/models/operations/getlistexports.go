// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListExportsActionEnum
type GETListExportsActionEnum string

const (
	GETListExportsActionEnumListExports GETListExportsActionEnum = "ListExports"
)

func (e *GETListExportsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListExports":
		*e = GETListExportsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListExportsActionEnum: %s", s)
	}
}

// GETListExportsVersionEnum
type GETListExportsVersionEnum string

const (
	GETListExportsVersionEnumTwoThousandAndTen0515 GETListExportsVersionEnum = "2010-05-15"
)

func (e *GETListExportsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = GETListExportsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListExportsVersionEnum: %s", s)
	}
}

type GETListExportsRequest struct {
	Action GETListExportsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A string (provided by the <a>ListExports</a> response output) that identifies the next page of exported output values that you asked to retrieve.
	NextToken         *string                   `queryParam:"style=form,explode=true,name=NextToken"`
	Version           GETListExportsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListExportsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
