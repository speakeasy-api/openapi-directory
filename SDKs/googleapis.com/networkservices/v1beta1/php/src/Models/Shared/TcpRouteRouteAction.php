<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TcpRouteRouteAction - The specifications for routing traffic and applying associated policies.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TcpRouteRouteAction
{
    /**
     * Optional. The destination services to which traffic should be forwarded. At least one destination service is required. Only one of route destination or original destination can be set.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TcpRouteRouteDestination> $destinations
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TcpRouteRouteDestination>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $destinations = null;
    
    /**
     * Optional. If true, Router will use the destination IP and port of the original connection as the destination of the request. Default is false. Only one of route destinations or original destination can be set.
     * 
     * @var ?bool $originalDestination
     */
	#[\JMS\Serializer\Annotation\SerializedName('originalDestination')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $originalDestination = null;
    
	public function __construct()
	{
		$this->destinations = null;
		$this->originalDestination = null;
	}
}
