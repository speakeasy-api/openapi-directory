// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NfsExportPermissionsEnum - Export permissions.
type NfsExportPermissionsEnum string

const (
	NfsExportPermissionsEnumPermissionsUnspecified NfsExportPermissionsEnum = "PERMISSIONS_UNSPECIFIED"
	NfsExportPermissionsEnumReadOnly               NfsExportPermissionsEnum = "READ_ONLY"
	NfsExportPermissionsEnumReadWrite              NfsExportPermissionsEnum = "READ_WRITE"
)

func (e *NfsExportPermissionsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PERMISSIONS_UNSPECIFIED":
		fallthrough
	case "READ_ONLY":
		fallthrough
	case "READ_WRITE":
		*e = NfsExportPermissionsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NfsExportPermissionsEnum: %s", s)
	}
}

// NfsExport - A NFS export entry.
type NfsExport struct {
	// Allow dev.
	AllowDev *bool `json:"allowDev,omitempty"`
	// Allow the setuid flag.
	AllowSuid *bool `json:"allowSuid,omitempty"`
	// A CIDR range.
	Cidr *string `json:"cidr,omitempty"`
	// Either a single machine, identified by an ID, or a comma-separated list of machine IDs.
	MachineID *string `json:"machineId,omitempty"`
	// Network to use to publish the export.
	NetworkID *string `json:"networkId,omitempty"`
	// Disable root squashing.
	NoRootSquash *bool `json:"noRootSquash,omitempty"`
	// Export permissions.
	Permissions *NfsExportPermissionsEnum `json:"permissions,omitempty"`
}
