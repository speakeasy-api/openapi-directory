<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HmacKeyMetadata - JSON template to produce a JSON-style HMAC Key metadata resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HmacKeyMetadata
{
    /**
     * The ID of the HMAC Key.
     * 
     * @var ?string $accessId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accessId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accessId = null;
    
    /**
     * HTTP 1.1 Entity tag for the HMAC key.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * The ID of the HMAC key, including the Project ID and the Access ID.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Project ID owning the service account to which the key authenticates.
     * 
     * @var ?string $projectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('projectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $projectId = null;
    
    /**
     * The link to this resource.
     * 
     * @var ?string $selfLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfLink')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selfLink = null;
    
    /**
     * The email address of the key's associated service account.
     * 
     * @var ?string $serviceAccountEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceAccountEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceAccountEmail = null;
    
    /**
     * The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED.
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
    /**
     * The creation time of the HMAC key in RFC 3339 format.
     * 
     * @var ?\DateTime $timeCreated
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeCreated')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $timeCreated = null;
    
    /**
     * The last modification time of the HMAC key metadata in RFC 3339 format.
     * 
     * @var ?\DateTime $updated
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updated = null;
    
	public function __construct()
	{
		$this->accessId = null;
		$this->etag = null;
		$this->id = null;
		$this->kind = null;
		$this->projectId = null;
		$this->selfLink = null;
		$this->serviceAccountEmail = null;
		$this->state = null;
		$this->timeCreated = null;
		$this->updated = null;
	}
}
