/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class CreateScheduledAuditResponse {
    
    public String contentType;
    public CreateScheduledAuditResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateScheduledAuditResponse createScheduledAuditResponse;
    public CreateScheduledAuditResponse withCreateScheduledAuditResponse(org.openapis.openapi.models.shared.CreateScheduledAuditResponse createScheduledAuditResponse) {
        this.createScheduledAuditResponse = createScheduledAuditResponse;
        return this;
    }
    
    /**
     * InternalFailureException
     */
    
    public Object internalFailureException;
    public CreateScheduledAuditResponse withInternalFailureException(Object internalFailureException) {
        this.internalFailureException = internalFailureException;
        return this;
    }
    
    /**
     * InvalidRequestException
     */
    
    public Object invalidRequestException;
    public CreateScheduledAuditResponse withInvalidRequestException(Object invalidRequestException) {
        this.invalidRequestException = invalidRequestException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;
    public CreateScheduledAuditResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    
    public Integer statusCode;
    public CreateScheduledAuditResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public CreateScheduledAuditResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceAlreadyExistsException
     */
    
    public Object resourceAlreadyExistsException;
    public CreateScheduledAuditResponse withResourceAlreadyExistsException(Object resourceAlreadyExistsException) {
        this.resourceAlreadyExistsException = resourceAlreadyExistsException;
        return this;
    }
    
    /**
     * ThrottlingException
     */
    
    public Object throttlingException;
    public CreateScheduledAuditResponse withThrottlingException(Object throttlingException) {
        this.throttlingException = throttlingException;
        return this;
    }
    
}
