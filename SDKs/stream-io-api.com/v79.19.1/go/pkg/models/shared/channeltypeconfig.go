// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type ChannelTypeConfigAutomodEnum string

const (
	ChannelTypeConfigAutomodEnumDisabled ChannelTypeConfigAutomodEnum = "disabled"
	ChannelTypeConfigAutomodEnumSimple   ChannelTypeConfigAutomodEnum = "simple"
	ChannelTypeConfigAutomodEnumAi       ChannelTypeConfigAutomodEnum = "AI"
)

func (e *ChannelTypeConfigAutomodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "disabled":
		fallthrough
	case "simple":
		fallthrough
	case "AI":
		*e = ChannelTypeConfigAutomodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChannelTypeConfigAutomodEnum: %s", s)
	}
}

type ChannelTypeConfigAutomodBehaviorEnum string

const (
	ChannelTypeConfigAutomodBehaviorEnumFlag  ChannelTypeConfigAutomodBehaviorEnum = "flag"
	ChannelTypeConfigAutomodBehaviorEnumBlock ChannelTypeConfigAutomodBehaviorEnum = "block"
)

func (e *ChannelTypeConfigAutomodBehaviorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "flag":
		fallthrough
	case "block":
		*e = ChannelTypeConfigAutomodBehaviorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChannelTypeConfigAutomodBehaviorEnum: %s", s)
	}
}

type ChannelTypeConfigBlocklistBehaviorEnum string

const (
	ChannelTypeConfigBlocklistBehaviorEnumFlag  ChannelTypeConfigBlocklistBehaviorEnum = "flag"
	ChannelTypeConfigBlocklistBehaviorEnumBlock ChannelTypeConfigBlocklistBehaviorEnum = "block"
)

func (e *ChannelTypeConfigBlocklistBehaviorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "flag":
		fallthrough
	case "block":
		*e = ChannelTypeConfigBlocklistBehaviorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChannelTypeConfigBlocklistBehaviorEnum: %s", s)
	}
}

type ChannelTypeConfig struct {
	Automod         ChannelTypeConfigAutomodEnum         `json:"automod"`
	AutomodBehavior ChannelTypeConfigAutomodBehaviorEnum `json:"automod_behavior"`
	// Sets thresholds for AI moderation
	AutomodThresholds *Thresholds                             `json:"automod_thresholds,omitempty"`
	Blocklist         *string                                 `json:"blocklist,omitempty"`
	BlocklistBehavior *ChannelTypeConfigBlocklistBehaviorEnum `json:"blocklist_behavior,omitempty"`
	// List of commands that channel supports
	Commands          []Command           `json:"commands"`
	ConnectEvents     bool                `json:"connect_events"`
	CreatedAt         time.Time           `json:"created_at"`
	CustomEvents      bool                `json:"custom_events"`
	Grants            map[string][]string `json:"grants"`
	MaxMessageLength  float64             `json:"max_message_length"`
	MessageRetention  string              `json:"message_retention"`
	Mutes             bool                `json:"mutes"`
	Name              string              `json:"name"`
	Permissions       []PolicyRequest1    `json:"permissions"`
	PushNotifications bool                `json:"push_notifications"`
	Quotes            bool                `json:"quotes"`
	Reactions         bool                `json:"reactions"`
	ReadEvents        bool                `json:"read_events"`
	Reminders         bool                `json:"reminders"`
	Replies           bool                `json:"replies"`
	Search            bool                `json:"search"`
	TypingEvents      bool                `json:"typing_events"`
	UpdatedAt         time.Time           `json:"updated_at"`
	Uploads           bool                `json:"uploads"`
	URLEnrichment     bool                `json:"url_enrichment"`
}
