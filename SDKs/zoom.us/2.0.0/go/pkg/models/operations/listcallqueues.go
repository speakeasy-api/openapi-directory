// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListCallQueuesSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type ListCallQueuesQueryParams struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned from a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
}

type ListCallQueuesRequest struct {
	QueryParams ListCallQueuesQueryParams
	Security    ListCallQueuesSecurity
}

// ListCallQueues200ApplicationXMLCallQueuesPhoneNumbersSourceEnum - Source
type ListCallQueues200ApplicationXMLCallQueuesPhoneNumbersSourceEnum string

const (
	ListCallQueues200ApplicationXMLCallQueuesPhoneNumbersSourceEnumInternal ListCallQueues200ApplicationXMLCallQueuesPhoneNumbersSourceEnum = "internal"
	ListCallQueues200ApplicationXMLCallQueuesPhoneNumbersSourceEnumExternal ListCallQueues200ApplicationXMLCallQueuesPhoneNumbersSourceEnum = "external"
)

func (e *ListCallQueues200ApplicationXMLCallQueuesPhoneNumbersSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal":
		fallthrough
	case "external":
		*e = ListCallQueues200ApplicationXMLCallQueuesPhoneNumbersSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCallQueues200ApplicationXMLCallQueuesPhoneNumbersSourceEnum: %s", s)
	}
}

type ListCallQueues200ApplicationXMLCallQueuesPhoneNumbers struct {
	// Unique Identifier of the Phone number assigned.
	ID *string
	// Phone number.
	Number *string
	// Source
	Source *ListCallQueues200ApplicationXMLCallQueuesPhoneNumbersSourceEnum
}

type ListCallQueues200ApplicationXMLCallQueuesSite struct {
	// Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.
	ID *string
	// Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	Name *string
}

// ListCallQueues200ApplicationXMLCallQueuesStatusEnum - Status of the Call Queue.<br>`active`: Call queue is enabled and active.<br>`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.
type ListCallQueues200ApplicationXMLCallQueuesStatusEnum string

const (
	ListCallQueues200ApplicationXMLCallQueuesStatusEnumActive   ListCallQueues200ApplicationXMLCallQueuesStatusEnum = "active"
	ListCallQueues200ApplicationXMLCallQueuesStatusEnumInactive ListCallQueues200ApplicationXMLCallQueuesStatusEnum = "inactive"
)

func (e *ListCallQueues200ApplicationXMLCallQueuesStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = ListCallQueues200ApplicationXMLCallQueuesStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCallQueues200ApplicationXMLCallQueuesStatusEnum: %s", s)
	}
}

type ListCallQueues200ApplicationXMLCallQueues struct {
	// Extension number assigned to the queue.
	ExtensionNumber *int64
	// Unique Identifier of the Call Queue.
	ID *string
	// Name of the Call Queue.
	Name *string
	// Phone number(s) assigned to the call queue.
	PhoneNumbers []ListCallQueues200ApplicationXMLCallQueuesPhoneNumbers
	Site         *ListCallQueues200ApplicationXMLCallQueuesSite
	// Status of the Call Queue.<br>`active`: Call queue is enabled and active.<br>`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.
	Status *ListCallQueues200ApplicationXMLCallQueuesStatusEnum
}

// ListCallQueues200ApplicationXML - **HTTP Status Code:** `200` **OK**<br>
// Call Queues listed successfully.
type ListCallQueues200ApplicationXML struct {
	CallQueues []ListCallQueues200ApplicationXMLCallQueues
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// The number of records returned from a single API call.
	PageSize *int64
	// The total number of records found for this query.
	TotalRecords *int64
}

// ListCallQueues200ApplicationJSONCallQueuesPhoneNumbersSourceEnum - Source
type ListCallQueues200ApplicationJSONCallQueuesPhoneNumbersSourceEnum string

const (
	ListCallQueues200ApplicationJSONCallQueuesPhoneNumbersSourceEnumInternal ListCallQueues200ApplicationJSONCallQueuesPhoneNumbersSourceEnum = "internal"
	ListCallQueues200ApplicationJSONCallQueuesPhoneNumbersSourceEnumExternal ListCallQueues200ApplicationJSONCallQueuesPhoneNumbersSourceEnum = "external"
)

func (e *ListCallQueues200ApplicationJSONCallQueuesPhoneNumbersSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal":
		fallthrough
	case "external":
		*e = ListCallQueues200ApplicationJSONCallQueuesPhoneNumbersSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCallQueues200ApplicationJSONCallQueuesPhoneNumbersSourceEnum: %s", s)
	}
}

type ListCallQueues200ApplicationJSONCallQueuesPhoneNumbers struct {
	// Unique Identifier of the Phone number assigned.
	ID *string `json:"id,omitempty"`
	// Phone number.
	Number *string `json:"number,omitempty"`
	// Source
	Source *ListCallQueues200ApplicationJSONCallQueuesPhoneNumbersSourceEnum `json:"source,omitempty"`
}

type ListCallQueues200ApplicationJSONCallQueuesSite struct {
	// Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned.
	ID *string `json:"id,omitempty"`
	// Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).
	Name *string `json:"name,omitempty"`
}

// ListCallQueues200ApplicationJSONCallQueuesStatusEnum - Status of the Call Queue.<br>`active`: Call queue is enabled and active.<br>`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.
type ListCallQueues200ApplicationJSONCallQueuesStatusEnum string

const (
	ListCallQueues200ApplicationJSONCallQueuesStatusEnumActive   ListCallQueues200ApplicationJSONCallQueuesStatusEnum = "active"
	ListCallQueues200ApplicationJSONCallQueuesStatusEnumInactive ListCallQueues200ApplicationJSONCallQueuesStatusEnum = "inactive"
)

func (e *ListCallQueues200ApplicationJSONCallQueuesStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = ListCallQueues200ApplicationJSONCallQueuesStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCallQueues200ApplicationJSONCallQueuesStatusEnum: %s", s)
	}
}

type ListCallQueues200ApplicationJSONCallQueues struct {
	// Extension number assigned to the queue.
	ExtensionNumber *int64 `json:"extension_number,omitempty"`
	// Unique Identifier of the Call Queue.
	ID *string `json:"id,omitempty"`
	// Name of the Call Queue.
	Name *string `json:"name,omitempty"`
	// Phone number(s) assigned to the call queue.
	PhoneNumbers []ListCallQueues200ApplicationJSONCallQueuesPhoneNumbers `json:"phone_numbers,omitempty"`
	Site         *ListCallQueues200ApplicationJSONCallQueuesSite          `json:"site,omitempty"`
	// Status of the Call Queue.<br>`active`: Call queue is enabled and active.<br>`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.
	Status *ListCallQueues200ApplicationJSONCallQueuesStatusEnum `json:"status,omitempty"`
}

// ListCallQueues200ApplicationJSON - **HTTP Status Code:** `200` **OK**<br>
// Call Queues listed successfully.
type ListCallQueues200ApplicationJSON struct {
	CallQueues []ListCallQueues200ApplicationJSONCallQueues `json:"call_queues,omitempty"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of records returned from a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// The total number of records found for this query.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type ListCallQueuesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK**<br>
	// Call Queues listed successfully.
	ListCallQueues200ApplicationJSONObject *ListCallQueues200ApplicationJSON
}
