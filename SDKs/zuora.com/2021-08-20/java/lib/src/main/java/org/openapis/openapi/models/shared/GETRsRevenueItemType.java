/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * GETRsRevenueItemType - Container for custom fields of a Revenue Schedule Item object.
 * 
 */
public class GETRsRevenueItemType {
    /**
     * The accounting period end date. The accounting period end date of the open-ended accounting period is null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("accountingPeriodEndDate")
    public LocalDate accountingPeriodEndDate;
    public GETRsRevenueItemType withAccountingPeriodEndDate(LocalDate accountingPeriodEndDate) {
        this.accountingPeriodEndDate = accountingPeriodEndDate;
        return this;
    }
    
    /**
     * The name of the accounting period. The open-ended accounting period is named `Open-Ended`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountingPeriodName")
    public String accountingPeriodName;
    public GETRsRevenueItemType withAccountingPeriodName(String accountingPeriodName) {
        this.accountingPeriodName = accountingPeriodName;
        return this;
    }
    
    /**
     * The accounting period start date.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("accountingPeriodStartDate")
    public LocalDate accountingPeriodStartDate;
    public GETRsRevenueItemType withAccountingPeriodStartDate(LocalDate accountingPeriodStartDate) {
        this.accountingPeriodStartDate = accountingPeriodStartDate;
        return this;
    }
    
    /**
     * The amount of the revenue item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public String amount;
    public GETRsRevenueItemType withAmount(String amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The type of currency used.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public GETRsRevenueItemType withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The accounting code for deferred revenue, such as Monthly Recurring Liability. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deferredRevenueAccountingCode")
    public String deferredRevenueAccountingCode;
    public GETRsRevenueItemType withDeferredRevenueAccountingCode(String deferredRevenueAccountingCode) {
        this.deferredRevenueAccountingCode = deferredRevenueAccountingCode;
        return this;
    }
    
    /**
     * The type of the deferred revenue accounting code, such as Deferred Revenue. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deferredRevenueAccountingCodeType")
    public String deferredRevenueAccountingCodeType;
    public GETRsRevenueItemType withDeferredRevenueAccountingCodeType(String deferredRevenueAccountingCodeType) {
        this.deferredRevenueAccountingCodeType = deferredRevenueAccountingCodeType;
        return this;
    }
    
    /**
     * Indicates if the accounting period is closed or open.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isAccountingPeriodClosed")
    public Boolean isAccountingPeriodClosed;
    public GETRsRevenueItemType withIsAccountingPeriodClosed(Boolean isAccountingPeriodClosed) {
        this.isAccountingPeriodClosed = isAccountingPeriodClosed;
        return this;
    }
    
    /**
     * The accounting code for recognized revenue, such as Monthly Recurring Charges or Overage Charges. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, the value is ignored.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recognizedRevenueAccountingCode")
    public String recognizedRevenueAccountingCode;
    public GETRsRevenueItemType withRecognizedRevenueAccountingCode(String recognizedRevenueAccountingCode) {
        this.recognizedRevenueAccountingCode = recognizedRevenueAccountingCode;
        return this;
    }
    
    /**
     * The type of the recognized revenue accounting code, such as Sales Revenue or Sales Discount. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recognizedRevenueAccountingCodeType")
    public String recognizedRevenueAccountingCodeType;
    public GETRsRevenueItemType withRecognizedRevenueAccountingCodeType(String recognizedRevenueAccountingCodeType) {
        this.recognizedRevenueAccountingCodeType = recognizedRevenueAccountingCodeType;
        return this;
    }
    
}
