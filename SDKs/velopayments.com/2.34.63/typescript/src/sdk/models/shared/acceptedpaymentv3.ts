/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class AcceptedPaymentV3 extends SpeakeasyBase {
  /**
   * The amount of the payment in minor units
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * Valid ISO 4217 3 letter currency code. See the <a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a>ISO specification</a> for details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencyType" })
  currencyType: string;

  /**
   * <p>Any value here will override the memo value in the parent payout</p>
   *
   * @remarks
   * <p>This should be the reference field on the statement seen by the payee (but not via ACH)</p>
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentMemo" })
  paymentMemo?: string;

  /**
   * <p>Metadata about the payment that may be relevant to the specific rails or remote system making the payout</p>
   *
   * @remarks
   * <p>The structure of the data will be dictated by the requirements of the payment rails</p>
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentMetadata" })
  paymentMetadata?: string;

  /**
   * A reference identifier for the payor for the given payee payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payorPaymentId" })
  payorPaymentId: string;

  /**
   * Indicates the 3rd party system involved in making this payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "railsId" })
  railsId: string;

  /**
   * Your identifier for the payee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remoteId" })
  remoteId: string;

  /**
   * <p>The identifier for the remote payments system if not Velo</p>
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remoteSystemId" })
  remoteSystemId?: string;

  /**
   * The identifier of the source account to debit the payment from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceAccountName" })
  sourceAccountName: string;
}
