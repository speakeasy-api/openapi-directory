/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EnterpriseCrmEventbusProtoWorkflowAlertConfig - Message to be used to configure custom alerting in the {@code EventConfig} protos for an event.
 */
public class EnterpriseCrmEventbusProtoWorkflowAlertConfig {
    /**
     * For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aggregationPeriod")
    public String aggregationPeriod;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withAggregationPeriod(String aggregationPeriod) {
        this.aggregationPeriod = aggregationPeriod;
        return this;
    }
    
    /**
     * Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alertDisabled")
    public Boolean alertDisabled;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withAlertDisabled(Boolean alertDisabled) {
        this.alertDisabled = alertDisabled;
        return this;
    }
    
    /**
     * A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alertName")
    public String alertName;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withAlertName(String alertName) {
        this.alertName = alertName;
        return this;
    }
    
    /**
     * Client associated with this alert configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("durationThresholdMs")
    public String durationThresholdMs;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withDurationThresholdMs(String durationThresholdMs) {
        this.durationThresholdMs = durationThresholdMs;
        return this;
    }
    
    /**
     * List of error enums for alerts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorEnumList")
    public EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList errorEnumList;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withErrorEnumList(EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList errorEnumList) {
        this.errorEnumList = errorEnumList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricType")
    public EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum metricType;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withMetricType(EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum metricType) {
        this.metricType = metricType;
        return this;
    }
    
    /**
     * For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numAggregationPeriods")
    public Integer numAggregationPeriods;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withNumAggregationPeriods(Integer numAggregationPeriods) {
        this.numAggregationPeriods = numAggregationPeriods;
        return this;
    }
    
    /**
     * For either events or tasks, depending on the type of alert, count only final attempts, not retries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onlyFinalAttempt")
    public Boolean onlyFinalAttempt;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withOnlyFinalAttempt(Boolean onlyFinalAttempt) {
        this.onlyFinalAttempt = onlyFinalAttempt;
        return this;
    }
    
    /**
     * Link to a playbook for resolving the issue that triggered this alert.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("playbookUrl")
    public String playbookUrl;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withPlaybookUrl(String playbookUrl) {
        this.playbookUrl = playbookUrl;
        return this;
    }
    
    /**
     * The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thresholdType")
    public EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum thresholdType;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withThresholdType(EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum thresholdType) {
        this.thresholdType = thresholdType;
        return this;
    }
    
    /**
     * The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thresholdValue")
    public EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue thresholdValue;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withThresholdValue(EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue thresholdValue) {
        this.thresholdValue = thresholdValue;
        return this;
    }
    
    /**
     * List of error enums for alerts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warningEnumList")
    public EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList warningEnumList;
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig withWarningEnumList(EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList warningEnumList) {
        this.warningEnumList = warningEnumList;
        return this;
    }
    
}
