/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PlaceGetByTypeRequest extends SpeakeasyBase {
  /**
   * An optional parameter to limit the results to active records only (Currently only the 'VariableMessageSign' place type is supported)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=activeOnly",
  })
  activeOnly?: boolean;

  /**
   * A comma-separated list of the types to return. Max. approx 12 types.
   *
   * @remarks
   *             A valid list of place types can be obtained from the /Place/Meta/placeTypes endpoint.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=types",
  })
  types: string[];
}

export class PlaceGetByTypeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.TflApiPresentationEntitiesPlace })
  tflApiPresentationEntitiesPlaces?: shared.TflApiPresentationEntitiesPlace[];
}
