/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LendingDetection } from "./lendingdetection";
import { Expose, Type } from "class-transformer";

/**
 * Holds the normalized key-value pairs returned by AnalyzeDocument, including the document type, detected text, and geometry.
 */
export class LendingField extends SpeakeasyBase {
  /**
   * The results extracted for a lending document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "KeyDetection" })
  @Type(() => LendingDetection)
  keyDetection?: LendingDetection;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;

  @SpeakeasyMetadata({ elemType: LendingDetection })
  @Expose({ name: "ValueDetections" })
  @Type(() => LendingDetection)
  valueDetections?: LendingDetection[];
}
