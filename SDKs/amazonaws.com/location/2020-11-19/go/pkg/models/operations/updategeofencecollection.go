// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateGeofenceCollectionPathParams struct {
	// The name of the geofence collection to update.
	CollectionName string `pathParam:"style=simple,explode=false,name=CollectionName"`
}

type UpdateGeofenceCollectionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateGeofenceCollectionRequestBodyPricingPlanEnum - No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
type UpdateGeofenceCollectionRequestBodyPricingPlanEnum string

const (
	UpdateGeofenceCollectionRequestBodyPricingPlanEnumRequestBasedUsage     UpdateGeofenceCollectionRequestBodyPricingPlanEnum = "RequestBasedUsage"
	UpdateGeofenceCollectionRequestBodyPricingPlanEnumMobileAssetTracking   UpdateGeofenceCollectionRequestBodyPricingPlanEnum = "MobileAssetTracking"
	UpdateGeofenceCollectionRequestBodyPricingPlanEnumMobileAssetManagement UpdateGeofenceCollectionRequestBodyPricingPlanEnum = "MobileAssetManagement"
)

func (e *UpdateGeofenceCollectionRequestBodyPricingPlanEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RequestBasedUsage":
		fallthrough
	case "MobileAssetTracking":
		fallthrough
	case "MobileAssetManagement":
		*e = UpdateGeofenceCollectionRequestBodyPricingPlanEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateGeofenceCollectionRequestBodyPricingPlanEnum: %s", s)
	}
}

type UpdateGeofenceCollectionRequestBody struct {
	// Updates the description for the geofence collection.
	Description *string `json:"Description,omitempty"`
	// No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
	PricingPlan *UpdateGeofenceCollectionRequestBodyPricingPlanEnum `json:"PricingPlan,omitempty"`
	// This parameter is no longer used.
	PricingPlanDataSource *string `json:"PricingPlanDataSource,omitempty"`
}

type UpdateGeofenceCollectionRequest struct {
	PathParams UpdateGeofenceCollectionPathParams
	Headers    UpdateGeofenceCollectionHeaders
	Request    UpdateGeofenceCollectionRequestBody `request:"mediaType=application/json"`
}

type UpdateGeofenceCollectionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateGeofenceCollectionResponse *shared.UpdateGeofenceCollectionResponse
	// ValidationException
	ValidationException interface{}
}
