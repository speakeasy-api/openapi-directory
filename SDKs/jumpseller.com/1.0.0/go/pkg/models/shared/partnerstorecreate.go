// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PartnerStoreCreatePlanNameEnum - New Store plan name.
type PartnerStoreCreatePlanNameEnum string

const (
	PartnerStoreCreatePlanNameEnumPro     PartnerStoreCreatePlanNameEnum = "pro"
	PartnerStoreCreatePlanNameEnumPlus    PartnerStoreCreatePlanNameEnum = "plus"
	PartnerStoreCreatePlanNameEnumPremium PartnerStoreCreatePlanNameEnum = "premium"
)

func (e PartnerStoreCreatePlanNameEnum) ToPointer() *PartnerStoreCreatePlanNameEnum {
	return &e
}

func (e *PartnerStoreCreatePlanNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pro":
		fallthrough
	case "plus":
		fallthrough
	case "premium":
		*e = PartnerStoreCreatePlanNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PartnerStoreCreatePlanNameEnum: %v", v)
	}
}

// PartnerStoreCreate - New partnered Store parameters.
type PartnerStoreCreate struct {
	// Partner code.
	Aff *string `json:"aff,omitempty"`
	// New Store administrator email.
	Email *string `json:"email,omitempty"`
	// ISO3166-2 code for the store langauge.
	Locale *string `json:"locale,omitempty"`
	// New Store administrator password.
	Password *string `json:"password,omitempty"`
	// New Store plan name.
	PlanName *PartnerStoreCreatePlanNameEnum `json:"plan_name,omitempty"`
	// Indicates whether the request should fail if the Store name provided is already in use.
	RejectDuplicates *bool `json:"reject_duplicates,omitempty"`
	// New Store name.
	StoreName *string `json:"store_name,omitempty"`
}
