"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import accounts_v1_credential_credential_aws as shared_accounts_v1_credential_credential_aws
from typing import Optional

CREATE_CREDENTIAL_AWS_SERVERS = [
	"https://accounts.twilio.com",
]


@dataclasses.dataclass
class CreateCredentialAwsSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateCredentialAwsCreateCredentialAwsRequest:
    
    credentials: str = dataclasses.field(metadata={'form': { 'field_name': 'Credentials' }})
    r"""A string that contains the AWS access credentials in the format `<AWS_ACCESS_KEY_ID>:<AWS_SECRET_ACCESS_KEY>`. For example, `AKIAIOSFODNN7EXAMPLE:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`"""  
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'AccountSid' }})
    r"""The SID of the Subaccount that this Credential should be associated with. Must be a valid Subaccount of the account issuing the request."""  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""A descriptive string that you create to describe the resource. It can be up to 64 characters long."""  
    

@dataclasses.dataclass
class CreateCredentialAwsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    accounts_v1_credential_credential_aws: Optional[shared_accounts_v1_credential_credential_aws.AccountsV1CredentialCredentialAws] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    