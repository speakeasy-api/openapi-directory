"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import continuousprojectlinks as shared_continuousprojectlinks
from ..shared import subscription as shared_subscription
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContinuousProject:
    r"""Newly created continuous project"""
    
    analytics_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analytics_enabled'), 'exclude': lambda f: f is None }})
    r"""Should we collect analytics data from Active for this continuous project?"""  
    auto_start_postedit: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_start_postedit'), 'exclude': lambda f: f is None }})
    r"""Immediately start post-editing project for translation requests that are applied MT."""  
    created_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    is_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_enabled'), 'exclude': lambda f: f is None }})  
    last_activity_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_activity_at'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z"""  
    links: Optional[shared_continuousprojectlinks.ContinuousProjectLinks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links'), 'exclude': lambda f: f is None }})  
    mt_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mt_enabled'), 'exclude': lambda f: f is None }})
    r"""Immediately apply MT on translation requests if they are missing from TM."""  
    mt_engine: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mt_engine'), 'exclude': lambda f: f is None }})
    r"""One of \\"MOTAWORD\\", \\"GOOGLE\\", \\"AMAZON\\", \\"MS\\". Default is \\"MOTAWORD\\"."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    postedit_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postedit_enabled'), 'exclude': lambda f: f is None }})
    r"""Get an instant quote for translation requests that are applied MT."""  
    source_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source_language'), 'exclude': lambda f: f is None }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""One of \\"a => ACTIVE\\", \\"i => INACTIVE\\", \\"d => DELETED\\", \\"c => SCHEDULED CANCELLATION\\", \\"p => SCHEDULED CHANGE\\" """  
    subscription: Optional[shared_subscription.Subscription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscription'), 'exclude': lambda f: f is None }})  
    target_languages: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target_languages'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Continuous project type. We currently have only 2 types, NULL and \\"active\\"."""  
    word_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('word_count'), 'exclude': lambda f: f is None }})  
    