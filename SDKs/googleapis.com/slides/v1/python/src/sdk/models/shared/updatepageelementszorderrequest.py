"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UpdatePageElementsZOrderRequestOperationEnum(str, Enum):
    r"""The Z-order operation to apply on the page elements. When applying the operation on multiple page elements, the relative Z-orders within these page elements before the operation is maintained."""
    Z_ORDER_OPERATION_UNSPECIFIED = 'Z_ORDER_OPERATION_UNSPECIFIED'
    BRING_TO_FRONT = 'BRING_TO_FRONT'
    BRING_FORWARD = 'BRING_FORWARD'
    SEND_BACKWARD = 'SEND_BACKWARD'
    SEND_TO_BACK = 'SEND_TO_BACK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdatePageElementsZOrderRequest:
    r"""Updates the Z-order of page elements. Z-order is an ordering of the elements on the page from back to front. The page element in the front may cover the elements that are behind it."""
    
    operation: Optional[UpdatePageElementsZOrderRequestOperationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operation'), 'exclude': lambda f: f is None }})
    r"""The Z-order operation to apply on the page elements. When applying the operation on multiple page elements, the relative Z-orders within these page elements before the operation is maintained."""  
    page_element_object_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageElementObjectIds'), 'exclude': lambda f: f is None }})
    r"""The object IDs of the page elements to update. All the page elements must be on the same page and must not be grouped."""  
    