"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DashboardMeetingsResponse = exports.DashboardMeetings200ApplicationJSON = exports.DashboardMeetings200ApplicationJSONMetrics = exports.DashboardMeetings200ApplicationJSONMetricsTrackingFields = exports.DashboardMeetings200ApplicationJSONMetricsCustomKeys = exports.DashboardMeetings200ApplicationXML = exports.DashboardMeetings200ApplicationXMLMetrics = exports.DashboardMeetings200ApplicationXMLMetricsTrackingFields = exports.DashboardMeetings200ApplicationXMLMetricsCustomKeys = exports.DashboardMeetingsRequest = exports.DashboardMeetingsTypeEnum = exports.DashboardMeetingsIncludeFieldsEnum = exports.DashboardMeetingsSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var DashboardMeetingsSecurity = /** @class */ (function (_super) {
    __extends(DashboardMeetingsSecurity, _super);
    function DashboardMeetingsSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], DashboardMeetingsSecurity.prototype, "oAuth", void 0);
    return DashboardMeetingsSecurity;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetingsSecurity = DashboardMeetingsSecurity;
/**
 * Set the value of this field to "tracking_fields" if you would like to include tracking fields of each meeting in the response.
 */
var DashboardMeetingsIncludeFieldsEnum;
(function (DashboardMeetingsIncludeFieldsEnum) {
    DashboardMeetingsIncludeFieldsEnum["TrackingFields"] = "tracking_fields";
})(DashboardMeetingsIncludeFieldsEnum = exports.DashboardMeetingsIncludeFieldsEnum || (exports.DashboardMeetingsIncludeFieldsEnum = {}));
/**
 * Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>
 *
 * @remarks
 *
 * If you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.
 */
var DashboardMeetingsTypeEnum;
(function (DashboardMeetingsTypeEnum) {
    DashboardMeetingsTypeEnum["Past"] = "past";
    DashboardMeetingsTypeEnum["PastOne"] = "pastOne";
    DashboardMeetingsTypeEnum["Live"] = "live";
})(DashboardMeetingsTypeEnum = exports.DashboardMeetingsTypeEnum || (exports.DashboardMeetingsTypeEnum = {}));
var DashboardMeetingsRequest = /** @class */ (function (_super) {
    __extends(DashboardMeetingsRequest, _super);
    function DashboardMeetingsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
        }),
        __metadata("design:type", Date)
    ], DashboardMeetingsRequest.prototype, "from", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=include_fields",
        }),
        __metadata("design:type", String)
    ], DashboardMeetingsRequest.prototype, "includeFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=next_page_token",
        }),
        __metadata("design:type", String)
    ], DashboardMeetingsRequest.prototype, "nextPageToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=page_size",
        }),
        __metadata("design:type", Number)
    ], DashboardMeetingsRequest.prototype, "pageSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
        }),
        __metadata("design:type", Date)
    ], DashboardMeetingsRequest.prototype, "to", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=type" }),
        __metadata("design:type", String)
    ], DashboardMeetingsRequest.prototype, "type", void 0);
    return DashboardMeetingsRequest;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetingsRequest = DashboardMeetingsRequest;
var DashboardMeetings200ApplicationXMLMetricsCustomKeys = /** @class */ (function (_super) {
    __extends(DashboardMeetings200ApplicationXMLMetricsCustomKeys, _super);
    function DashboardMeetings200ApplicationXMLMetricsCustomKeys() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetricsCustomKeys.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetricsCustomKeys.prototype, "value", void 0);
    return DashboardMeetings200ApplicationXMLMetricsCustomKeys;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetings200ApplicationXMLMetricsCustomKeys = DashboardMeetings200ApplicationXMLMetricsCustomKeys;
var DashboardMeetings200ApplicationXMLMetricsTrackingFields = /** @class */ (function (_super) {
    __extends(DashboardMeetings200ApplicationXMLMetricsTrackingFields, _super);
    function DashboardMeetings200ApplicationXMLMetricsTrackingFields() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetricsTrackingFields.prototype, "field", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetricsTrackingFields.prototype, "value", void 0);
    return DashboardMeetings200ApplicationXMLMetricsTrackingFields;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetings200ApplicationXMLMetricsTrackingFields = DashboardMeetings200ApplicationXMLMetricsTrackingFields;
/**
 * Meeting metric details.
 */
var DashboardMeetings200ApplicationXMLMetrics = /** @class */ (function (_super) {
    __extends(DashboardMeetings200ApplicationXMLMetrics, _super);
    function DashboardMeetings200ApplicationXMLMetrics() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DashboardMeetings200ApplicationXMLMetricsCustomKeys,
        }),
        __metadata("design:type", Array)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "customKeys", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "dept", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "email", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "endTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "has3rdPartyAudio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "hasPstn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "hasRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "hasScreenShare", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "hasSip", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "hasVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "hasVoip", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "host", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "inRoomParticipants", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "participants", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "topic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DashboardMeetings200ApplicationXMLMetricsTrackingFields,
        }),
        __metadata("design:type", Array)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "trackingFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "userType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXMLMetrics.prototype, "uuid", void 0);
    return DashboardMeetings200ApplicationXMLMetrics;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetings200ApplicationXMLMetrics = DashboardMeetings200ApplicationXMLMetrics;
/**
 * Pagination object.
 */
var DashboardMeetings200ApplicationXML = /** @class */ (function (_super) {
    __extends(DashboardMeetings200ApplicationXML, _super);
    function DashboardMeetings200ApplicationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DashboardMeetings200ApplicationXML.prototype, "from", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DashboardMeetings200ApplicationXMLMetrics }),
        __metadata("design:type", Array)
    ], DashboardMeetings200ApplicationXML.prototype, "meetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationXML.prototype, "nextPageToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationXML.prototype, "pageCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationXML.prototype, "pageSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DashboardMeetings200ApplicationXML.prototype, "to", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationXML.prototype, "totalRecords", void 0);
    return DashboardMeetings200ApplicationXML;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetings200ApplicationXML = DashboardMeetings200ApplicationXML;
var DashboardMeetings200ApplicationJSONMetricsCustomKeys = /** @class */ (function (_super) {
    __extends(DashboardMeetings200ApplicationJSONMetricsCustomKeys, _super);
    function DashboardMeetings200ApplicationJSONMetricsCustomKeys() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetricsCustomKeys.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetricsCustomKeys.prototype, "value", void 0);
    return DashboardMeetings200ApplicationJSONMetricsCustomKeys;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetings200ApplicationJSONMetricsCustomKeys = DashboardMeetings200ApplicationJSONMetricsCustomKeys;
var DashboardMeetings200ApplicationJSONMetricsTrackingFields = /** @class */ (function (_super) {
    __extends(DashboardMeetings200ApplicationJSONMetricsTrackingFields, _super);
    function DashboardMeetings200ApplicationJSONMetricsTrackingFields() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "field" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetricsTrackingFields.prototype, "field", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetricsTrackingFields.prototype, "value", void 0);
    return DashboardMeetings200ApplicationJSONMetricsTrackingFields;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetings200ApplicationJSONMetricsTrackingFields = DashboardMeetings200ApplicationJSONMetricsTrackingFields;
/**
 * Meeting metric details.
 */
var DashboardMeetings200ApplicationJSONMetrics = /** @class */ (function (_super) {
    __extends(DashboardMeetings200ApplicationJSONMetrics, _super);
    function DashboardMeetings200ApplicationJSONMetrics() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DashboardMeetings200ApplicationJSONMetricsCustomKeys,
        }),
        (0, class_transformer_1.Expose)({ name: "custom_keys" }),
        (0, class_transformer_1.Type)(function () { return DashboardMeetings200ApplicationJSONMetricsCustomKeys; }),
        __metadata("design:type", Array)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "customKeys", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dept" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "dept", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "duration" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "email" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "email", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "end_time" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "endTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_3rd_party_audio" }),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "has3rdPartyAudio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_pstn" }),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "hasPstn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_recording" }),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "hasRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_screen_share" }),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "hasScreenShare", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_sip" }),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "hasSip", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_video" }),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "hasVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_voip" }),
        __metadata("design:type", Boolean)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "hasVoip", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "host", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "in_room_participants" }),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "inRoomParticipants", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "participants" }),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "participants", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start_time" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "topic" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "topic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DashboardMeetings200ApplicationJSONMetricsTrackingFields,
        }),
        (0, class_transformer_1.Expose)({ name: "tracking_fields" }),
        (0, class_transformer_1.Type)(function () { return DashboardMeetings200ApplicationJSONMetricsTrackingFields; }),
        __metadata("design:type", Array)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "trackingFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "user_type" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "userType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uuid" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSONMetrics.prototype, "uuid", void 0);
    return DashboardMeetings200ApplicationJSONMetrics;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetings200ApplicationJSONMetrics = DashboardMeetings200ApplicationJSONMetrics;
/**
 * Pagination object.
 */
var DashboardMeetings200ApplicationJSON = /** @class */ (function (_super) {
    __extends(DashboardMeetings200ApplicationJSON, _super);
    function DashboardMeetings200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "from" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], DashboardMeetings200ApplicationJSON.prototype, "from", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DashboardMeetings200ApplicationJSONMetrics }),
        (0, class_transformer_1.Expose)({ name: "meetings" }),
        (0, class_transformer_1.Type)(function () { return DashboardMeetings200ApplicationJSONMetrics; }),
        __metadata("design:type", Array)
    ], DashboardMeetings200ApplicationJSON.prototype, "meetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "next_page_token" }),
        __metadata("design:type", String)
    ], DashboardMeetings200ApplicationJSON.prototype, "nextPageToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "page_count" }),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationJSON.prototype, "pageCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "page_size" }),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationJSON.prototype, "pageSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "to" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], DashboardMeetings200ApplicationJSON.prototype, "to", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total_records" }),
        __metadata("design:type", Number)
    ], DashboardMeetings200ApplicationJSON.prototype, "totalRecords", void 0);
    return DashboardMeetings200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetings200ApplicationJSON = DashboardMeetings200ApplicationJSON;
var DashboardMeetingsResponse = /** @class */ (function (_super) {
    __extends(DashboardMeetingsResponse, _super);
    function DashboardMeetingsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], DashboardMeetingsResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardMeetingsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DashboardMeetingsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], DashboardMeetingsResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DashboardMeetings200ApplicationJSON)
    ], DashboardMeetingsResponse.prototype, "dashboardMeetings200ApplicationJSONObject", void 0);
    return DashboardMeetingsResponse;
}(utils_1.SpeakeasyBase));
exports.DashboardMeetingsResponse = DashboardMeetingsResponse;
