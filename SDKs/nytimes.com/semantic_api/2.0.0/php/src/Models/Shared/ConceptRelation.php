<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ConceptRelation
{
	#[\JMS\Serializer\Annotation\SerializedName('concept_created')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conceptCreated = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $conceptId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conceptName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conceptStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conceptType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('concept_updated')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conceptUpdated = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('is_times_tag')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $isTimesTag = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('vernacular')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vernacular = null;
    
	public function __construct()
	{
		$this->conceptCreated = null;
		$this->conceptId = null;
		$this->conceptName = null;
		$this->conceptStatus = null;
		$this->conceptType = null;
		$this->conceptUpdated = null;
		$this->isTimesTag = null;
		$this->vernacular = null;
	}
}
