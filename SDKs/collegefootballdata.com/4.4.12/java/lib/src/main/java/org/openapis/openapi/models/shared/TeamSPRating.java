/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TeamSPRating {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conference")
    public String conference;

    public TeamSPRating withConference(String conference) {
        this.conference = conference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defense")
    public TeamSPRatingDefense defense;

    public TeamSPRating withDefense(TeamSPRatingDefense defense) {
        this.defense = defense;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offense")
    public TeamSPRatingOffense offense;

    public TeamSPRating withOffense(TeamSPRatingOffense offense) {
        this.offense = offense;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ranking")
    public Double ranking;

    public TeamSPRating withRanking(Double ranking) {
        this.ranking = ranking;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rating")
    public Double rating;

    public TeamSPRating withRating(Double rating) {
        this.rating = rating;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secondOrderWins")
    public Double secondOrderWins;

    public TeamSPRating withSecondOrderWins(Double secondOrderWins) {
        this.secondOrderWins = secondOrderWins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sos")
    public Double sos;

    public TeamSPRating withSos(Double sos) {
        this.sos = sos;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specialTeams")
    public TeamSPRatingSpecialTeams specialTeams;

    public TeamSPRating withSpecialTeams(TeamSPRatingSpecialTeams specialTeams) {
        this.specialTeams = specialTeams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("team")
    public String team;

    public TeamSPRating withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("year")
    public Long year;

    public TeamSPRating withYear(Long year) {
        this.year = year;
        return this;
    }
    
    public TeamSPRating(){}
}
