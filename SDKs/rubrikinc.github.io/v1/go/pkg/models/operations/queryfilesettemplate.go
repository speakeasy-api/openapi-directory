// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryFilesetTemplateOperatingSystemTypeEnum - Filter the summary information based on the operating system type of the fileset. Accepted values: 'Windows', 'UnixLike', 'ANY', 'NONE'.
// Use **_NONE_** to only return information for fileset templates that do not have operating system type set.
// Use **_ANY_** to only return information for fileset templates that have operating system type set.
type QueryFilesetTemplateOperatingSystemTypeEnum string

const (
	QueryFilesetTemplateOperatingSystemTypeEnumUnixLike QueryFilesetTemplateOperatingSystemTypeEnum = "UnixLike"
	QueryFilesetTemplateOperatingSystemTypeEnumWindows  QueryFilesetTemplateOperatingSystemTypeEnum = "Windows"
	QueryFilesetTemplateOperatingSystemTypeEnumAny      QueryFilesetTemplateOperatingSystemTypeEnum = "ANY"
	QueryFilesetTemplateOperatingSystemTypeEnumNone     QueryFilesetTemplateOperatingSystemTypeEnum = "NONE"
)

func (e QueryFilesetTemplateOperatingSystemTypeEnum) ToPointer() *QueryFilesetTemplateOperatingSystemTypeEnum {
	return &e
}

func (e *QueryFilesetTemplateOperatingSystemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UnixLike":
		fallthrough
	case "Windows":
		fallthrough
	case "ANY":
		fallthrough
	case "NONE":
		*e = QueryFilesetTemplateOperatingSystemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFilesetTemplateOperatingSystemTypeEnum: %v", v)
	}
}

// QueryFilesetTemplateShareTypeEnum - Filter the summary information based on the share type where the fileset is assigned to. Accepted values: 'NFS', 'SMB', 'ANY', 'NONE'.
// Use **_NONE_** to only return information for fileset templates that do not have share type set.
// Use **_ANY_** to only return information for fileset templates that have share type set.
type QueryFilesetTemplateShareTypeEnum string

const (
	QueryFilesetTemplateShareTypeEnumNfs  QueryFilesetTemplateShareTypeEnum = "NFS"
	QueryFilesetTemplateShareTypeEnumSmb  QueryFilesetTemplateShareTypeEnum = "SMB"
	QueryFilesetTemplateShareTypeEnumAny  QueryFilesetTemplateShareTypeEnum = "ANY"
	QueryFilesetTemplateShareTypeEnumNone QueryFilesetTemplateShareTypeEnum = "NONE"
)

func (e QueryFilesetTemplateShareTypeEnum) ToPointer() *QueryFilesetTemplateShareTypeEnum {
	return &e
}

func (e *QueryFilesetTemplateShareTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NFS":
		fallthrough
	case "SMB":
		fallthrough
	case "ANY":
		fallthrough
	case "NONE":
		*e = QueryFilesetTemplateShareTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFilesetTemplateShareTypeEnum: %v", v)
	}
}

// QueryFilesetTemplateSortByEnum - Specifies a comma-separated list of fileset attributes to use in sorting the fileset summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.
//
// Valid attributes are: **_name_**, **_includes_**, **_excludes_**, **_exceptions_**, **_hostCount_**, **_shareType_**. Default sort_order is ascending.
type QueryFilesetTemplateSortByEnum string

const (
	QueryFilesetTemplateSortByEnumName       QueryFilesetTemplateSortByEnum = "name"
	QueryFilesetTemplateSortByEnumHostCount  QueryFilesetTemplateSortByEnum = "hostCount"
	QueryFilesetTemplateSortByEnumIncludes   QueryFilesetTemplateSortByEnum = "includes"
	QueryFilesetTemplateSortByEnumExcludes   QueryFilesetTemplateSortByEnum = "excludes"
	QueryFilesetTemplateSortByEnumExceptions QueryFilesetTemplateSortByEnum = "exceptions"
	QueryFilesetTemplateSortByEnumShareType  QueryFilesetTemplateSortByEnum = "shareType"
)

func (e QueryFilesetTemplateSortByEnum) ToPointer() *QueryFilesetTemplateSortByEnum {
	return &e
}

func (e *QueryFilesetTemplateSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "hostCount":
		fallthrough
	case "includes":
		fallthrough
	case "excludes":
		fallthrough
	case "exceptions":
		fallthrough
	case "shareType":
		*e = QueryFilesetTemplateSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFilesetTemplateSortByEnum: %v", v)
	}
}

// QueryFilesetTemplateSortOrderEnum - Sort order, either ascending or descending.
type QueryFilesetTemplateSortOrderEnum string

const (
	QueryFilesetTemplateSortOrderEnumAsc  QueryFilesetTemplateSortOrderEnum = "asc"
	QueryFilesetTemplateSortOrderEnumDesc QueryFilesetTemplateSortOrderEnum = "desc"
)

func (e QueryFilesetTemplateSortOrderEnum) ToPointer() *QueryFilesetTemplateSortOrderEnum {
	return &e
}

func (e *QueryFilesetTemplateSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryFilesetTemplateSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFilesetTemplateSortOrderEnum: %v", v)
	}
}

type QueryFilesetTemplateRequest struct {
	// Retrieve fileset templates with a name matching the provided name. The search is performed as a case-insensitive infix search.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Filter the summary information based on the operating system type of the fileset. Accepted values: 'Windows', 'UnixLike', 'ANY', 'NONE'.
	// Use **_NONE_** to only return information for fileset templates that do not have operating system type set.
	// Use **_ANY_** to only return information for fileset templates that have operating system type set.
	OperatingSystemType *QueryFilesetTemplateOperatingSystemTypeEnum `queryParam:"style=form,explode=true,name=operating_system_type"`
	// Filter the summary information based on the primary_cluster_id of the primary Rubrik cluster.
	// Use **_local_** as the primary_cluster_id of the Rubrik cluster that is hosting the current REST API session.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Filter the summary information based on the share type where the fileset is assigned to. Accepted values: 'NFS', 'SMB', 'ANY', 'NONE'.
	// Use **_NONE_** to only return information for fileset templates that do not have share type set.
	// Use **_ANY_** to only return information for fileset templates that have share type set.
	ShareType *QueryFilesetTemplateShareTypeEnum `queryParam:"style=form,explode=true,name=share_type"`
	// Specifies a comma-separated list of fileset attributes to use in sorting the fileset summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.
	//
	// Valid attributes are: **_name_**, **_includes_**, **_excludes_**, **_exceptions_**, **_hostCount_**, **_shareType_**. Default sort_order is ascending.
	SortBy *QueryFilesetTemplateSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *QueryFilesetTemplateSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryFilesetTemplateResponse struct {
	ContentType string
	// Summary information for all fileset templates.
	FilesetTemplateDetailListResponse *shared.FilesetTemplateDetailListResponse
	StatusCode                        int
	RawResponse                       *http.Response
}
