"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SkippedDetail:
    r"""Details for an outcome with a SKIPPED outcome summary."""
    
    incompatible_app_version: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('incompatibleAppVersion'), 'exclude': lambda f: f is None }})
    r"""If the App doesn't support the specific API level."""  
    incompatible_architecture: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('incompatibleArchitecture'), 'exclude': lambda f: f is None }})
    r"""If the App doesn't run on the specific architecture, for example, x86."""  
    incompatible_device: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('incompatibleDevice'), 'exclude': lambda f: f is None }})
    r"""If the requested OS version doesn't run on the specific device model."""  
    