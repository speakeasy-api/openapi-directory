"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LicenseSFXAudioLayoutEnum(str, Enum):
    AMBISONIC = 'ambisonic'
    FIVE_1 = '5.1'
    STEREO = 'stereo'

class LicenseSFXFormatEnum(str, Enum):
    WAV = 'wav'
    MP3 = 'mp3'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LicenseSFX:
    
    sfx_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sfx_id') }})
    r"""ID of the sounds effect being licensed"""  
    subscription_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscription_id') }})
    r"""ID of the subscription to use for the download."""  
    audio_layout: Optional[LicenseSFXAudioLayoutEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audio_layout'), 'exclude': lambda f: f is None }})  
    format: Optional[LicenseSFXFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})  
    search_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_id'), 'exclude': lambda f: f is None }})
    r"""ID of the search that led to this licensing event"""  
    