"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metadatum as shared_metadatum
from ..shared import sku as shared_sku
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Item1:
    
    created_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt') }})  
    cycle_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cycleCount') }})  
    endpoint: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endpoint') }})  
    is_skipped: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSkipped') }})  
    last_update: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastUpdate') }})  
    metadata: list[shared_metadatum.Metadatum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata') }})  
    original_item_index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originalItemIndex') }})  
    original_order_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originalOrderId') }})  
    price_at_subscription_date: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceAtSubscriptionDate') }})  
    quantity: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity') }})  
    selling_price: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellingPrice') }})  
    sku: shared_sku.Sku = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sku') }})  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    subscription_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubscriptionId') }})  
    