/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attachment } from "./attachment";
import { Attribute } from "./attribute";
import { ConnectivityEnum } from "./connectivityenum";
import { Container } from "./container";
import { EphemeralStorage } from "./ephemeralstorage";
import { HealthStatusEnum } from "./healthstatusenum";
import { InferenceAccelerator } from "./inferenceaccelerator";
import { LaunchTypeEnum } from "./launchtypeenum";
import { Tag } from "./tag";
import { TaskOverride } from "./taskoverride";
import { TaskStopCodeEnum } from "./taskstopcodeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Details on a task in a cluster.
 */
export class Task extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Attachment })
  @Expose({ name: "attachments" })
  @Type(() => Attachment)
  attachments?: Attachment[];

  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "attributes" })
  @Type(() => Attribute)
  attributes?: Attribute[];

  @SpeakeasyMetadata()
  @Expose({ name: "availabilityZone" })
  availabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "capacityProviderName" })
  capacityProviderName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "clusterArn" })
  clusterArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectivity" })
  connectivity?: ConnectivityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "connectivityAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  connectivityAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "containerInstanceArn" })
  containerInstanceArn?: string;

  @SpeakeasyMetadata({ elemType: Container })
  @Expose({ name: "containers" })
  @Type(() => Container)
  containers?: Container[];

  @SpeakeasyMetadata()
  @Expose({ name: "cpu" })
  cpu?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "desiredStatus" })
  desiredStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enableExecuteCommand" })
  enableExecuteCommand?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ephemeralStorage" })
  @Type(() => EphemeralStorage)
  ephemeralStorage?: EphemeralStorage;

  @SpeakeasyMetadata()
  @Expose({ name: "executionStoppedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  executionStoppedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  group?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "healthStatus" })
  healthStatus?: HealthStatusEnum;

  @SpeakeasyMetadata({ elemType: InferenceAccelerator })
  @Expose({ name: "inferenceAccelerators" })
  @Type(() => InferenceAccelerator)
  inferenceAccelerators?: InferenceAccelerator[];

  @SpeakeasyMetadata()
  @Expose({ name: "lastStatus" })
  lastStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "launchType" })
  launchType?: LaunchTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "memory" })
  memory?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "overrides" })
  @Type(() => TaskOverride)
  overrides?: TaskOverride;

  @SpeakeasyMetadata()
  @Expose({ name: "platformFamily" })
  platformFamily?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "platformVersion" })
  platformVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pullStartedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  pullStartedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "pullStoppedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  pullStoppedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "startedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "startedBy" })
  startedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stopCode" })
  stopCode?: TaskStopCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "stoppedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stoppedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "stoppedReason" })
  stoppedReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stoppingAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stoppingAt?: Date;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "taskArn" })
  taskArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "taskDefinitionArn" })
  taskDefinitionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}
