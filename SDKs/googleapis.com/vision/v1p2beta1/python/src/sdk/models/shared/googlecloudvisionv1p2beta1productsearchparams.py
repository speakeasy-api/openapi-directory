"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudvisionv1p2beta1boundingpoly as shared_googlecloudvisionv1p2beta1boundingpoly
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudVisionV1p2beta1ProductSearchParams:
    r"""Parameters for a product search request."""
    
    bounding_poly: Optional[shared_googlecloudvisionv1p2beta1boundingpoly.GoogleCloudVisionV1p2beta1BoundingPoly] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('boundingPoly'), 'exclude': lambda f: f is None }})
    r"""A bounding polygon for the detected image annotation."""  
    filter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filter'), 'exclude': lambda f: f is None }})
    r"""The filtering expression. This can be used to restrict search results based on Product labels. We currently support an AND of OR of key-value expressions, where each expression within an OR must have the same key. An '=' should be used to connect the key and value. For example, \\"(color = red OR color = blue) AND brand = Google\\" is acceptable, but \\"(color = red OR brand = Google)\\" is not acceptable. \\"color: red\\" is not acceptable because it uses a ':' instead of an '='."""  
    product_categories: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productCategories'), 'exclude': lambda f: f is None }})
    r"""The list of product categories to search in. Currently, we only consider the first category, and either \\"homegoods-v2\\", \\"apparel-v2\\", \\"toys-v2\\", \\"packagedgoods-v1\\", or \\"general-v1\\" should be specified. The legacy categories \\"homegoods\\", \\"apparel\\", and \\"toys\\" are still supported but will be deprecated. For new products, please use \\"homegoods-v2\\", \\"apparel-v2\\", or \\"toys-v2\\" for better product search accuracy. It is recommended to migrate existing products to these categories as well."""  
    product_set: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productSet'), 'exclude': lambda f: f is None }})
    r"""The resource name of a ProductSet to be searched for similar images. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`."""  
    