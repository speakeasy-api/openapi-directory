/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PropertyPredicate } from "./propertypredicate";
import { ResourceShareTypeEnum } from "./resourcesharetypeenum";
import { SortCriterion } from "./sortcriterion";
import { Expose, Type } from "class-transformer";

export class SearchTablesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CatalogId" })
  catalogId?: string;

  @SpeakeasyMetadata({ elemType: PropertyPredicate })
  @Expose({ name: "Filters" })
  @Type(() => PropertyPredicate)
  filters?: PropertyPredicate[];

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceShareType" })
  resourceShareType?: ResourceShareTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SearchText" })
  searchText?: string;

  @SpeakeasyMetadata({ elemType: SortCriterion })
  @Expose({ name: "SortCriteria" })
  @Type(() => SortCriterion)
  sortCriteria?: SortCriterion[];
}
