// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateWorkloadSharePathParams struct {
	ShareID    string `pathParam:"style=simple,explode=false,name=ShareId"`
	WorkloadID string `pathParam:"style=simple,explode=false,name=WorkloadId"`
}

type UpdateWorkloadShareHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateWorkloadShareRequestBodyPermissionTypeEnum - Permission granted on a workload share.
type UpdateWorkloadShareRequestBodyPermissionTypeEnum string

const (
	UpdateWorkloadShareRequestBodyPermissionTypeEnumReadonly    UpdateWorkloadShareRequestBodyPermissionTypeEnum = "READONLY"
	UpdateWorkloadShareRequestBodyPermissionTypeEnumContributor UpdateWorkloadShareRequestBodyPermissionTypeEnum = "CONTRIBUTOR"
)

func (e *UpdateWorkloadShareRequestBodyPermissionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "READONLY":
		fallthrough
	case "CONTRIBUTOR":
		*e = UpdateWorkloadShareRequestBodyPermissionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateWorkloadShareRequestBodyPermissionTypeEnum: %s", s)
	}
}

type UpdateWorkloadShareRequestBody struct {
	// Permission granted on a workload share.
	PermissionType UpdateWorkloadShareRequestBodyPermissionTypeEnum `json:"PermissionType"`
}

type UpdateWorkloadShareRequest struct {
	PathParams UpdateWorkloadSharePathParams
	Headers    UpdateWorkloadShareHeaders
	Request    UpdateWorkloadShareRequestBody `request:"mediaType=application/json"`
}

type UpdateWorkloadShareResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateWorkloadShareOutput *shared.UpdateWorkloadShareOutput
	// ValidationException
	ValidationException interface{}
}
