// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CalendarEventsDeleteSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type CalendarEventsDeleteSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type CalendarEventsDeleteSecurity struct {
	Option1 *CalendarEventsDeleteSecurityOption1 `security:"option"`
	Option2 *CalendarEventsDeleteSecurityOption2 `security:"option"`
}

type CalendarEventsDeletePathParams struct {
	// Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
	CalendarID string `pathParam:"style=simple,explode=false,name=calendarId"`
	// Event identifier.
	EventID string `pathParam:"style=simple,explode=false,name=eventId"`
}

// CalendarEventsDeleteSendUpdatesEnum - Guests who should receive notifications about the deletion of the event.
type CalendarEventsDeleteSendUpdatesEnum string

const (
	CalendarEventsDeleteSendUpdatesEnumAll          CalendarEventsDeleteSendUpdatesEnum = "all"
	CalendarEventsDeleteSendUpdatesEnumExternalOnly CalendarEventsDeleteSendUpdatesEnum = "externalOnly"
	CalendarEventsDeleteSendUpdatesEnumNone         CalendarEventsDeleteSendUpdatesEnum = "none"
)

func (e *CalendarEventsDeleteSendUpdatesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "externalOnly":
		fallthrough
	case "none":
		*e = CalendarEventsDeleteSendUpdatesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CalendarEventsDeleteSendUpdatesEnum: %s", s)
	}
}

type CalendarEventsDeleteQueryParams struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Deprecated. Please use sendUpdates instead.
	//
	// Whether to send notifications about the deletion of the event. Note that some emails might still be sent even if you set the value to false. The default is false.
	SendNotifications *bool `queryParam:"style=form,explode=true,name=sendNotifications"`
	// Guests who should receive notifications about the deletion of the event.
	SendUpdates *CalendarEventsDeleteSendUpdatesEnum `queryParam:"style=form,explode=true,name=sendUpdates"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type CalendarEventsDeleteRequest struct {
	PathParams  CalendarEventsDeletePathParams
	QueryParams CalendarEventsDeleteQueryParams
	Security    CalendarEventsDeleteSecurity
}

type CalendarEventsDeleteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
