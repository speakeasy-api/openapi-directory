"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import rulegroupvariablesipsetsdetails as shared_rulegroupvariablesipsetsdetails
from ..shared import rulegroupvariablesportsetsdetails as shared_rulegroupvariablesportsetsdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RuleGroupVariables:
    r"""Additional settings to use in the specified rules."""
    
    ip_sets: Optional[shared_rulegroupvariablesipsetsdetails.RuleGroupVariablesIPSetsDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IpSets'), 'exclude': lambda f: f is None }})  
    port_sets: Optional[shared_rulegroupvariablesportsetsdetails.RuleGroupVariablesPortSetsDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PortSets'), 'exclude': lambda f: f is None }})  
    