/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomFieldDTO } from "./customfielddto";
import { PersonContactDTO } from "./personcontactdto";
import { Expose, Type } from "class-transformer";

export enum ProviderPersonDTOGenderEnum {
  Female = "FEMALE",
  Male = "MALE",
}

/**
 * Success
 */
export class ProviderPersonDTO extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "contact" })
  @Type(() => PersonContactDTO)
  contact?: PersonContactDTO;

  @SpeakeasyMetadata({ elemType: CustomFieldDTO })
  @Expose({ name: "customFields" })
  @Type(() => CustomFieldDTO)
  customFields?: CustomFieldDTO[];

  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender?: ProviderPersonDTOGenderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "motherTonguesIds" })
  motherTonguesIds?: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "positionId" })
  positionId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "providerId" })
  providerId?: number;
}
