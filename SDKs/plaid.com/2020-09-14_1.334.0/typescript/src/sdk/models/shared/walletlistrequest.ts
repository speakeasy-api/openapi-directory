/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WalletISOCurrencyCodeEnum } from "./walletisocurrencycodeenum";
import { Expose } from "class-transformer";

/**
 * WalletListRequest defines the request schema for `/wallet/list`
 */
export class WalletListRequest extends SpeakeasyBase {
  /**
   * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  /**
   * The number of e-wallets to fetch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  /**
   * A base64 value representing the latest e-wallet that has already been requested. Set this to `next_cursor` received from the previous `/wallet/list` request. If provided, the response will only contain e-wallets created before that e-wallet. If omitted, the response will contain e-wallets starting from the most recent, and in descending order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * An ISO-4217 currency code, used with e-wallets and transactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iso_currency_code" })
  isoCurrencyCode?: WalletISOCurrencyCodeEnum;

  /**
   * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;
}
