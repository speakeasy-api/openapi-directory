<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BankAccount - Represents a bank account. For more information about 
 * 
 * linking a bank account to a Square account, see 
 * [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BankAccount
{
    /**
     * The last few digits of the account number.
     * 
     * @var string $accountNumberSuffix
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_number_suffix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountNumberSuffix;
    
    /**
     * The financial purpose of the associated bank account.
     * 
     * @var string $accountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountType;
    
    /**
     * Read only. Name of actual financial institution. 
     * 
     * For example "Bank of America".
     * 
     * @var ?string $bankName
     */
	#[\JMS\Serializer\Annotation\SerializedName('bank_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankName = null;
    
    /**
     * The ISO 3166 Alpha-2 country code where the bank account is based.
     * 
     * @var string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $country;
    
    /**
     * Indicates whether it is possible for Square to send money to this bank account.
     * 
     * @var bool $creditable
     */
	#[\JMS\Serializer\Annotation\SerializedName('creditable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $creditable;
    
    /**
     * The 3-character ISO 4217 currency code indicating the operating
     * 
     * currency of the bank account. For example, the currency code for US dollars
     * is `USD`.
     * 
     * @var string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currency;
    
    /**
     * Reference identifier that will be displayed to UK bank account owners
     * 
     * when collecting direct debit authorization. Only required for UK bank accounts.
     * 
     * @var ?string $debitMandateReferenceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('debit_mandate_reference_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $debitMandateReferenceId = null;
    
    /**
     * Indicates whether it is possible for Square to take money from this 
     * 
     * bank account.
     * 
     * @var bool $debitable
     */
	#[\JMS\Serializer\Annotation\SerializedName('debitable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $debitable;
    
    /**
     * A Square-assigned, unique identifier for the bank account based on the
     * 
     * account information. The account fingerprint can be used to compare account
     * entries and determine if the they represent the same real-world bank account.
     * 
     * @var ?string $fingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprint = null;
    
    /**
     * Name of the account holder. This name must match the name 
     * 
     * on the targeted bank account record.
     * 
     * @var string $holderName
     */
	#[\JMS\Serializer\Annotation\SerializedName('holder_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $holderName;
    
    /**
     * The unique, Square-issued identifier for the bank account.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The location to which the bank account belongs.
     * 
     * @var ?string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationId = null;
    
    /**
     * Primary identifier for the bank. For more information, see 
     * 
     * [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
     * 
     * @var string $primaryBankIdentificationNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('primary_bank_identification_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryBankIdentificationNumber;
    
    /**
     * Client-provided identifier for linking the banking account to an entity
     * 
     * in a third-party system (for example, a bank account number or a user identifier).
     * 
     * @var ?string $referenceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $referenceId = null;
    
    /**
     * Secondary identifier for the bank. For more information, see 
     * 
     * [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
     * 
     * @var ?string $secondaryBankIdentificationNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('secondary_bank_identification_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secondaryBankIdentificationNumber = null;
    
    /**
     * Read-only. The current verification status of this BankAccount object.
     * 
     * @var string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $status;
    
    /**
     * The current version of the `BankAccount`.
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
	public function __construct()
	{
		$this->accountNumberSuffix = "";
		$this->accountType = "";
		$this->bankName = null;
		$this->country = "";
		$this->creditable = false;
		$this->currency = "";
		$this->debitMandateReferenceId = null;
		$this->debitable = false;
		$this->fingerprint = null;
		$this->holderName = "";
		$this->id = "";
		$this->locationId = null;
		$this->primaryBankIdentificationNumber = "";
		$this->referenceId = null;
		$this->secondaryBankIdentificationNumber = null;
		$this->status = "";
		$this->version = null;
	}
}
