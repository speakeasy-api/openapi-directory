// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RestoreInput - Represents both a request to Restore some portion of a Backup into a target GKE cluster and a record of the restore operation itself. Next id: 18
type RestoreInput struct {
	// Required. Immutable. A reference to the Backup used as the source from which this Restore will restore. Note that this Backup must be a sub-resource of the RestorePlan's backup_plan. Format: `projects/*/locations/*/backupPlans/*/backups/*`.
	Backup *string `json:"backup,omitempty"`
	// User specified descriptive string for this Restore.
	Description *string `json:"description,omitempty"`
	// A set of custom labels supplied by user.
	Labels map[string]string `json:"labels,omitempty"`
	// Configuration of a restore. Next id: 12
	RestoreConfig *RestoreConfig `json:"restoreConfig,omitempty"`
}

// RestoreStateEnum - Output only. The current state of the Restore.
type RestoreStateEnum string

const (
	RestoreStateEnumStateUnspecified RestoreStateEnum = "STATE_UNSPECIFIED"
	RestoreStateEnumCreating         RestoreStateEnum = "CREATING"
	RestoreStateEnumInProgress       RestoreStateEnum = "IN_PROGRESS"
	RestoreStateEnumSucceeded        RestoreStateEnum = "SUCCEEDED"
	RestoreStateEnumFailed           RestoreStateEnum = "FAILED"
	RestoreStateEnumDeleting         RestoreStateEnum = "DELETING"
)

func (e RestoreStateEnum) ToPointer() *RestoreStateEnum {
	return &e
}

func (e *RestoreStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETING":
		*e = RestoreStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RestoreStateEnum: %v", v)
	}
}

// Restore - Represents both a request to Restore some portion of a Backup into a target GKE cluster and a record of the restore operation itself. Next id: 18
type Restore struct {
	// Required. Immutable. A reference to the Backup used as the source from which this Restore will restore. Note that this Backup must be a sub-resource of the RestorePlan's backup_plan. Format: `projects/*/locations/*/backupPlans/*/backups/*`.
	Backup *string `json:"backup,omitempty"`
	// Output only. The target cluster into which this Restore will restore data. Valid formats: - `projects/*/locations/*/clusters/*` - `projects/*/zones/*/clusters/*` Inherited from parent RestorePlan's cluster value.
	Cluster *string `json:"cluster,omitempty"`
	// Output only. Timestamp of when the restore operation completed.
	CompleteTime *string `json:"completeTime,omitempty"`
	// Output only. The timestamp when this Restore resource was created.
	CreateTime *string `json:"createTime,omitempty"`
	// User specified descriptive string for this Restore.
	Description *string `json:"description,omitempty"`
	// Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform restore updates in order to avoid race conditions: An `etag` is returned in the response to `GetRestore`, and systems are expected to put that etag in the request to `UpdateRestore` or `DeleteRestore` to ensure that their change will be applied to the same version of the resource.
	Etag *string `json:"etag,omitempty"`
	// A set of custom labels supplied by user.
	Labels map[string]string `json:"labels,omitempty"`
	// Output only. The full name of the Restore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*`
	Name *string `json:"name,omitempty"`
	// Output only. Number of resources excluded during the restore execution.
	ResourcesExcludedCount *int `json:"resourcesExcludedCount,omitempty"`
	// Output only. Number of resources that failed to be restored during the restore execution.
	ResourcesFailedCount *int `json:"resourcesFailedCount,omitempty"`
	// Output only. Number of resources restored during the restore execution.
	ResourcesRestoredCount *int `json:"resourcesRestoredCount,omitempty"`
	// Configuration of a restore. Next id: 12
	RestoreConfig *RestoreConfig `json:"restoreConfig,omitempty"`
	// Output only. The current state of the Restore.
	State *RestoreStateEnum `json:"state,omitempty"`
	// Output only. Human-readable description of why the Restore is in its current state.
	StateReason *string `json:"stateReason,omitempty"`
	// Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
	UID *string `json:"uid,omitempty"`
	// Output only. The timestamp when this Restore resource was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Output only. Number of volumes restored during the restore execution.
	VolumesRestoredCount *int `json:"volumesRestoredCount,omitempty"`
}
