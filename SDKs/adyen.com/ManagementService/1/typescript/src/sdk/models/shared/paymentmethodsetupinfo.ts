/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApplePayInfo } from "./applepayinfo";
import { BcmcInfo } from "./bcmcinfo";
import { CartesBancairesInfo } from "./cartesbancairesinfo";
import { GiroPayInfo } from "./giropayinfo";
import { GooglePayInfo } from "./googlepayinfo";
import { KlarnaInfo } from "./klarnainfo";
import { MealVoucherFRInfo } from "./mealvoucherfrinfo";
import { PayPalInfo } from "./paypalinfo";
import { SofortInfo } from "./sofortinfo";
import { SwishInfo } from "./swishinfo";
import { VippsInfo } from "./vippsinfo";
import { Expose, Type } from "class-transformer";

/**
 * The sales channel. Required if the merchant account does not have a sales channel. When you provide this field, it overrides the default sales channel set on the merchant account.
 *
 * @remarks
 *
 * Possible values: **eCommerce**, **pos**, **contAuth**, and **moto**.
 */
export enum PaymentMethodSetupInfoShopperInteractionEnum {
  ECommerce = "eCommerce",
  Pos = "pos",
  Moto = "moto",
  ContAuth = "contAuth",
}

/**
 * Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).
 */
export enum PaymentMethodSetupInfoTypeEnum {
  Afterpaytouch = "afterpaytouch",
  Alipay = "alipay",
  AlipayHk = "alipay_hk",
  Amex = "amex",
  Applepay = "applepay",
  Bcmc = "bcmc",
  Blik = "blik",
  Cartebancaire = "cartebancaire",
  Clearpay = "clearpay",
  Cup = "cup",
  Diners = "diners",
  DirectEbanking = "directEbanking",
  DirectdebitGB = "directdebit_GB",
  Discover = "discover",
  EbankingFI = "ebanking_FI",
  EftposAustralia = "eftpos_australia",
  Elo = "elo",
  Elocredit = "elocredit",
  Elodebit = "elodebit",
  Girocard = "girocard",
  Giropay = "giropay",
  Googlepay = "googlepay",
  Hiper = "hiper",
  Hipercard = "hipercard",
  Ideal = "ideal",
  InteracCard = "interac_card",
  Jcb = "jcb",
  Klarna = "klarna",
  KlarnaAccount = "klarna_account",
  KlarnaPaynow = "klarna_paynow",
  Maestro = "maestro",
  Mbway = "mbway",
  Mc = "mc",
  Mcdebit = "mcdebit",
  MealVoucherFR = "mealVoucher_FR",
  Mobilepay = "mobilepay",
  Multibanco = "multibanco",
  OnlineBankingPL = "onlineBanking_PL",
  Paypal = "paypal",
  Payshop = "payshop",
  Swish = "swish",
  Trustly = "trustly",
  Vipps = "vipps",
  Visa = "visa",
  Visadebit = "visadebit",
  Vpay = "vpay",
  Wechatpay = "wechatpay",
  WechatpayPos = "wechatpay_pos",
}

export class PaymentMethodSetupInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "applePay" })
  @Type(() => ApplePayInfo)
  applePay?: ApplePayInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "bcmc" })
  @Type(() => BcmcInfo)
  bcmc?: BcmcInfo;

  /**
   * The unique identifier of the business line.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "businessLineId" })
  businessLineId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cartesBancaires" })
  @Type(() => CartesBancairesInfo)
  cartesBancaires?: CartesBancairesInfo;

  /**
   * The list of countries where a payment method is available. By default, all countries supported by the payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "countries" })
  countries?: string[];

  /**
   * The list of currencies that a payment method supports. By default, all currencies supported by the payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencies" })
  currencies?: string[];

  /**
   * The list of custom routing flags to route payment to the intended acquirer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customRoutingFlags" })
  customRoutingFlags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "giroPay" })
  @Type(() => GiroPayInfo)
  giroPay?: GiroPayInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "googlePay" })
  @Type(() => GooglePayInfo)
  googlePay?: GooglePayInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "klarna" })
  @Type(() => KlarnaInfo)
  klarna?: KlarnaInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "mealVoucher_FR" })
  @Type(() => MealVoucherFRInfo)
  mealVoucherFR?: MealVoucherFRInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "paypal" })
  @Type(() => PayPalInfo)
  paypal?: PayPalInfo;

  /**
   * Your reference for the payment method. Supported characters a-z, A-Z, 0-9.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * The sales channel. Required if the merchant account does not have a sales channel. When you provide this field, it overrides the default sales channel set on the merchant account.
   *
   * @remarks
   *
   * Possible values: **eCommerce**, **pos**, **contAuth**, and **moto**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperInteraction" })
  shopperInteraction?: PaymentMethodSetupInfoShopperInteractionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "sofort" })
  @Type(() => SofortInfo)
  sofort?: SofortInfo;

  /**
   * The ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/post/stores__resParam_id), if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storeId" })
  storeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "swish" })
  @Type(() => SwishInfo)
  swish?: SwishInfo;

  /**
   * Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: PaymentMethodSetupInfoTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "vipps" })
  @Type(() => VippsInfo)
  vipps?: VippsInfo;
}
