// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ForkScoreSecurity struct {
	OAuth2 shared.SchemeOAuth2 `security:"scheme,type=oauth2"`
}

type ForkScorePathParams struct {
	// Unique identifier of the score document. This can be a Flat Score unique identifier (i.e. `ScoreDetails.id`) or, if the score is also a Google Drive file, the Drive file unique identifier prefixed with `drive-` (e.g. `drive-0B000000000`).
	//
	Score string `pathParam:"style=simple,explode=false,name=score"`
}

type ForkScoreQueryParams struct {
	// This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.
	//
	SharingKey *string `queryParam:"style=form,explode=true,name=sharingKey"`
}

type ForkScoreRequest struct {
	PathParams  ForkScorePathParams
	QueryParams ForkScoreQueryParams
	Request     shared.ScoreFork `request:"mediaType=application/json"`
	Security    ForkScoreSecurity
}

type ForkScoreResponse struct {
	ContentType string
	// Account overquota
	FlatErrorResponse *shared.FlatErrorResponse
	// Score details
	ScoreDetails *shared.ScoreDetails
	StatusCode   int
	RawResponse  *http.Response
}
