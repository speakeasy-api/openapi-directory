"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Optional

class MatchedOffers:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_productoffers(self, request: operations.GetProductoffersRequest) -> operations.GetProductoffersResponse:
        r"""Get Matched Offer's Data by Product ID
        Offers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured. 
        
        This endpoint retrieves the available offers for a speciic Product ID in the marketplace's catalog. It differs from the Get Suggestions endpoints, since it retrieves products that were already matched by the marketplace operator, and are currently active in its catalog. 
        
        The call returns a list of offers for that ID, that contain the following data: 
        
        - Seller that sells the SKU 
        
        - Correspondent SKU ID 
        
        - SKU's price value 
        
        - Inventory level 
        
        - Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) that it is available at.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetProductoffersRequest, base_url, '/offer-manager/pvt/product/{productId}', request)
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.GetProductoffersRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetProductoffersResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_sk_uoffers(self, request: operations.GetSKUoffersRequest) -> operations.GetSKUoffersResponse:
        r"""Get Matched Offer's Data by SKU ID
        Offers are seller products and SKUs that were sent to the marketplace, and already have their price and inventory level configured. 
        
        This endpoint retrieves the available offers for a speciic SKU ID in the marketplace's catalog. It differs from the Get Suggestions endpoints, since it retrieves products that were already matched by the marketplace operator, and are currently active in its catalog. 
        
        The call returns a list of offers for that ID, that contain the following data: 
        
        - Seller that sells the SKU 
        
        - Correspondent SKU ID 
        
        - SKU's price value 
        
        - Inventory level 
        
        - Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) that it is available at.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetSKUoffersRequest, base_url, '/offer-manager/pvt/product/{productId}/sku/{skuId}', request)
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.GetSKUoffersRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSKUoffersResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def getofferslist(self, request: operations.GetofferslistRequest) -> operations.GetofferslistResponse:
        r"""Get Matched Offers List
        Offers are seller's products and SKUs that were sent to the marketplace, and already have their price and inventory level configured. 
        
         This endpoint retrieves the available offers in a marketplace. It differs from the Get Suggestions endpoints, since it retrieves products that were already matched by the marketplace, and are currently in its catalog. 
        
        It is possible to filter the search through the following parameters: 
        
        - rows 
        - sort 
        
        - start 
        
        - fq
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/offer-manager/pvt/offers'
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.GetofferslistRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetofferslistResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[list[operations.GetofferslistGetMatchedOffersResponse]])
                res.get_matched_offers_responses = out

        return res

    