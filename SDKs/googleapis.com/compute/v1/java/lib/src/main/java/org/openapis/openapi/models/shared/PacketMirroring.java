/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PacketMirroring - Represents a Packet Mirroring resource. Packet Mirroring clones the traffic of specified instances in your Virtual Private Cloud (VPC) network and forwards it to a collector destination, such as an instance group of an internal TCP/UDP load balancer, for analysis or examination. For more information about setting up Packet Mirroring, see Using Packet Mirroring.
 */
public class PacketMirroring {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collectorIlb")
    public PacketMirroringForwardingRuleInfo collectorIlb;
    public PacketMirroring withCollectorIlb(PacketMirroringForwardingRuleInfo collectorIlb) {
        this.collectorIlb = collectorIlb;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public PacketMirroring withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public PacketMirroring withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Indicates whether or not this packet mirroring takes effect. If set to FALSE, this packet mirroring policy will not be enforced on the network. The default is TRUE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enable")
    public PacketMirroringEnableEnum enable;
    public PacketMirroring withEnable(PacketMirroringEnableEnum enable) {
        this.enable = enable;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filter")
    public PacketMirroringFilter filter;
    public PacketMirroring withFilter(PacketMirroringFilter filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public PacketMirroring withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#packetMirroring for packet mirrorings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public PacketMirroring withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mirroredResources")
    public PacketMirroringMirroredResourceInfo mirroredResources;
    public PacketMirroring withMirroredResources(PacketMirroringMirroredResourceInfo mirroredResources) {
        this.mirroredResources = mirroredResources;
        return this;
    }
    
    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PacketMirroring withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public PacketMirroringNetworkInfo network;
    public PacketMirroring withNetwork(PacketMirroringNetworkInfo network) {
        this.network = network;
        return this;
    }
    
    /**
     * The priority of applying this configuration. Priority is used to break ties in cases where there is more than one matching rule. In the case of two rules that apply for a given Instance, the one with the lowest-numbered priority value wins. Default value is 1000. Valid range is 0 through 65535.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public Long priority;
    public PacketMirroring withPriority(Long priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * [Output Only] URI of the region where the packetMirroring resides.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;
    public PacketMirroring withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public PacketMirroring withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
}
