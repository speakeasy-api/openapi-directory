"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import ext_enum as shared_ext_enum
from ..shared import versionnumber_enum as shared_versionnumber_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSearchVersionNumberSearchAlongRouteQueryExtRequestBodyRoutePoints:
    
    lat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lat'), 'exclude': lambda f: f is None }})  
    lon: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lon'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSearchVersionNumberSearchAlongRouteQueryExtRequestBodyRoute:
    
    points: Optional[list[PostSearchVersionNumberSearchAlongRouteQueryExtRequestBodyRoutePoints]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('points'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSearchVersionNumberSearchAlongRouteQueryExtRequestBody:
    
    route: Optional[PostSearchVersionNumberSearchAlongRouteQueryExtRequestBodyRoute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('route'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostSearchVersionNumberSearchAlongRouteQueryExtRequest:
    
    ext: shared_ext_enum.ExtEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'ext', 'style': 'simple', 'explode': False }})
    r"""Expected response format."""  
    max_detour_time: int = dataclasses.field(metadata={'query_param': { 'field_name': 'maxDetourTime', 'style': 'form', 'explode': True }})
    r"""Maximum detour time"""  
    query: str = dataclasses.field(metadata={'path_param': { 'field_name': 'query', 'style': 'simple', 'explode': False }})
    r"""Query string. Must be properly URL encoded."""  
    version_number: shared_versionnumber_enum.VersionNumberEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'versionNumber', 'style': 'simple', 'explode': False }})
    r"""Service version number. The current value is 2."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Maximum number of search results that will be returned."""  
    request_body: Optional[PostSearchVersionNumberSearchAlongRouteQueryExtRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class PostSearchVersionNumberSearchAlongRouteQueryExtResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    