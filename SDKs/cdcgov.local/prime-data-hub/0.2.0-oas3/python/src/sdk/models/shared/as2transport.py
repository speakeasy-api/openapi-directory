"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class As2Transport:
    r"""Describes a single AS2 connection in all of it variations"""
    
    receiver_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiverId') }})
    r"""The AS2 id of the receiver. Usually, the same for all senders."""  
    receiver_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiverUrl') }})
    r"""The URL to the AS2 end-point"""  
    sender_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('senderId') }})
    r"""The AS2 id of the sender. Usually, assigned by receiver to PRIME."""  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The discriminator"""  
    content_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentDescription'), 'exclude': lambda f: f is None }})
    r"""A description of the content of the message. Usually, the same for all messages."""  
    mime_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mimeType'), 'exclude': lambda f: f is None }})
    r"""The MIME type of the message"""  
    sender_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('senderEmail'), 'exclude': lambda f: f is None }})
    r"""The email address to contact someone about the message"""  
    