// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListSigningCertificatesActionEnum
type POSTListSigningCertificatesActionEnum string

const (
	POSTListSigningCertificatesActionEnumListSigningCertificates POSTListSigningCertificatesActionEnum = "ListSigningCertificates"
)

func (e POSTListSigningCertificatesActionEnum) ToPointer() *POSTListSigningCertificatesActionEnum {
	return &e
}

func (e *POSTListSigningCertificatesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListSigningCertificates":
		*e = POSTListSigningCertificatesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListSigningCertificatesActionEnum: %v", v)
	}
}

// POSTListSigningCertificatesVersionEnum
type POSTListSigningCertificatesVersionEnum string

const (
	POSTListSigningCertificatesVersionEnumTwoThousandAndTen0508 POSTListSigningCertificatesVersionEnum = "2010-05-08"
)

func (e POSTListSigningCertificatesVersionEnum) ToPointer() *POSTListSigningCertificatesVersionEnum {
	return &e
}

func (e *POSTListSigningCertificatesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTListSigningCertificatesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListSigningCertificatesVersionEnum: %v", v)
	}
}

type POSTListSigningCertificatesRequest struct {
	Action POSTListSigningCertificatesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxItems          *string                                `queryParam:"style=form,explode=true,name=MaxItems"`
	RequestBody       []byte                                 `request:"mediaType=text/xml"`
	Version           POSTListSigningCertificatesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListSigningCertificatesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
