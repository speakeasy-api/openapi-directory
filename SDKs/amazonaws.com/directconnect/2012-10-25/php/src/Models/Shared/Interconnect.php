<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Interconnect - Information about an interconnect.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Interconnect
{
	#[\JMS\Serializer\Annotation\SerializedName('awsDevice')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $awsDevice = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('awsDeviceV2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $awsDeviceV2 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('awsLogicalDeviceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $awsLogicalDeviceId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('bandwidth')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bandwidth = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hasLogicalRedundancy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\HasLogicalRedundancyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HasLogicalRedundancyEnum $hasLogicalRedundancy = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('interconnectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $interconnectId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('interconnectName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $interconnectName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('interconnectState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InterconnectStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InterconnectStateEnum $interconnectState = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('jumboFrameCapable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $jumboFrameCapable = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('lagId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lagId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('loaIssueTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $loaIssueTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $location = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('providerName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $providerName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $region = null;
    
    /**
     * $tags
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Tag> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Tag>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->awsDevice = null;
		$this->awsDeviceV2 = null;
		$this->awsLogicalDeviceId = null;
		$this->bandwidth = null;
		$this->hasLogicalRedundancy = null;
		$this->interconnectId = null;
		$this->interconnectName = null;
		$this->interconnectState = null;
		$this->jumboFrameCapable = null;
		$this->lagId = null;
		$this->loaIssueTime = null;
		$this->location = null;
		$this->providerName = null;
		$this->region = null;
		$this->tags = null;
	}
}
