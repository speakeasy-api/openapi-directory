// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeLoggingStatusActionEnum
type GETDescribeLoggingStatusActionEnum string

const (
	GETDescribeLoggingStatusActionEnumDescribeLoggingStatus GETDescribeLoggingStatusActionEnum = "DescribeLoggingStatus"
)

func (e *GETDescribeLoggingStatusActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeLoggingStatus":
		*e = GETDescribeLoggingStatusActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeLoggingStatusActionEnum: %s", s)
	}
}

// GETDescribeLoggingStatusVersionEnum
type GETDescribeLoggingStatusVersionEnum string

const (
	GETDescribeLoggingStatusVersionEnumTwoThousandAndTwelve1201 GETDescribeLoggingStatusVersionEnum = "2012-12-01"
)

func (e *GETDescribeLoggingStatusVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETDescribeLoggingStatusVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeLoggingStatusVersionEnum: %s", s)
	}
}

type GETDescribeLoggingStatusRequest struct {
	Action GETDescribeLoggingStatusActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The identifier of the cluster from which to get the logging status.</p> <p>Example: <code>examplecluster</code> </p>
	ClusterIdentifier string                              `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	Version           GETDescribeLoggingStatusVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeLoggingStatusResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
