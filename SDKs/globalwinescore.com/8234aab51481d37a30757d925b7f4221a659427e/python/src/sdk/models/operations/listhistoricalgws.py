"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class ListHistoricalGWSColorEnum(str, Enum):
    r"""The lowercase color of the wine."""
    RED = 'red'
    WHITE = 'white'
    PINK = 'pink'

class ListHistoricalGWSOrderingEnum(str, Enum):
    r"""Which field to use when ordering the results."""
    DATE = 'date'
    MINUS_DATE = '-date'
    SCORE = 'score'
    MINUS_SCORE = '-score'


@dataclasses.dataclass
class ListHistoricalGWSRequest:
    
    authorization: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Authorization', 'style': 'simple', 'explode': False }})  
    color: Optional[ListHistoricalGWSColorEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'color', 'style': 'form', 'explode': True }})
    r"""The lowercase color of the wine."""  
    is_primeurs: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'is_primeurs', 'style': 'form', 'explode': True }})
    r"""Only show the <a href=\\"See https://en.wikipedia.org/wiki/En_primeur\\">en primeur</a> GlobalWineScores"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Number of results to return per page."""  
    lwin: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'lwin', 'style': 'form', 'explode': True }})
    r"""L-WIN wine identifier (See definition <a href=\\"https://www.liv-ex.com/lwin/\\" target=\\"_blank\\">here</a>)"""  
    lwin_11: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'lwin_11', 'style': 'form', 'explode': True }})
    r"""L-WIN wine/vintage identifier (See definition <a href=\\"https://www.liv-ex.com/lwin/\\" target=\\"_blank\\">here</a>)"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""The initial index from which to return the results."""  
    ordering: Optional[ListHistoricalGWSOrderingEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ordering', 'style': 'form', 'explode': True }})
    r"""Which field to use when ordering the results."""  
    vintage: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'vintage', 'style': 'form', 'explode': True }})
    r"""The vintage you want to search against."""  
    wine_id: Optional[list[int]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'wine_id', 'style': 'form', 'explode': True }})
    r"""The exact `id` of the wine. Can be used multiple times (e.g `?wine_id=114959&wine_id=114952`) <br/> If you need to find the `wine_id` for your wines, use our <a href=\\"https://api.globalwinescore.com/search/\\" target=\\"_blank\\">search page</a>"""  
    

@dataclasses.dataclass
class ListHistoricalGWSResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    