/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetOrganizationSensorReadingsLatestRequest {
    /**
     * A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=endingBefore")
    public String endingBefore;

    public GetOrganizationSensorReadingsLatestRequest withEndingBefore(String endingBefore) {
        this.endingBefore = endingBefore;
        return this;
    }
    
    /**
     * Types of sensor readings to retrieve. If no metrics are supplied, all available types of readings will be retrieved. Allowed values are battery, button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=metrics")
    public String[] metrics;

    public GetOrganizationSensorReadingsLatestRequest withMetrics(String[] metrics) {
        this.metrics = metrics;
        return this;
    }
    
    /**
     * Optional parameter to filter readings by network.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=networkIds")
    public String[] networkIds;

    public GetOrganizationSensorReadingsLatestRequest withNetworkIds(String[] networkIds) {
        this.networkIds = networkIds;
        return this;
    }
    
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=organizationId")
    public String organizationId;

    public GetOrganizationSensorReadingsLatestRequest withOrganizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }
    
    /**
     * The number of entries per page returned. Acceptable range is 3 - 100. Default is 100.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=perPage")
    public Long perPage;

    public GetOrganizationSensorReadingsLatestRequest withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * Optional parameter to filter readings by sensor.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=serials")
    public String[] serials;

    public GetOrganizationSensorReadingsLatestRequest withSerials(String[] serials) {
        this.serials = serials;
        return this;
    }
    
    /**
     * A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=startingAfter")
    public String startingAfter;

    public GetOrganizationSensorReadingsLatestRequest withStartingAfter(String startingAfter) {
        this.startingAfter = startingAfter;
        return this;
    }
    
    public GetOrganizationSensorReadingsLatestRequest(@JsonProperty("organizationId") String organizationId) {
        this.organizationId = organizationId;
  }
}
