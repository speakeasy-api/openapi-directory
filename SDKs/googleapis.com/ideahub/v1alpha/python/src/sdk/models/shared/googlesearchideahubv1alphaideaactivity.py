"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleSearchIdeahubV1alphaIdeaActivityTypeEnum(str, Enum):
    r"""The type of activity performed."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    POST_DRAFTED = 'POST_DRAFTED'
    POST_PUBLISHED = 'POST_PUBLISHED'
    POST_DELETED = 'POST_DELETED'
    POST_UNPUBLISHED = 'POST_UNPUBLISHED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleSearchIdeahubV1alphaIdeaActivity:
    r"""An idea activity entry."""
    
    ideas: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ideas'), 'exclude': lambda f: f is None }})
    r"""The Idea IDs for this entry. If empty, topics should be set."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for the idea activity. The name is ignored when creating an idea activity. Format: platforms/{platform}/properties/{property}/ideaActivities/{idea_activity}"""  
    topics: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('topics'), 'exclude': lambda f: f is None }})
    r"""The Topic IDs for this entry. If empty, ideas should be set."""  
    type: Optional[GoogleSearchIdeahubV1alphaIdeaActivityTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of activity performed."""  
    uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri'), 'exclude': lambda f: f is None }})
    r"""The uri the activity relates to."""  
    