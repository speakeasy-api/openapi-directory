"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import transaction as shared_transaction
from enum import Enum
from typing import Optional

class GetTransactionAccountsIDTransactionsTypeEnum(str, Enum):
    r"""Limit to transactions of this type."""
    DEBIT = 'debit'
    CREDIT = 'credit'


@dataclasses.dataclass
class GetTransactionAccountsIDTransactionsRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the transaction account."""  
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_date', 'style': 'form', 'explode': True }})
    r"""Limit to transactions on or before this date. Required if start_date is provided. If not provided, defaults to today's date."""  
    needs_review: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'needs_review', 'style': 'form', 'explode': True }})
    r"""Limit to transactions that need to be reviewed."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Choose a particular page of the results."""  
    search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search', 'style': 'form', 'explode': True }})
    r"""Limit to transactions matching a keyword search string. The provided string is matched against the transaction amount, account name, payee, category title, note, labels, and the date in ISO 8601 format."""  
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'start_date', 'style': 'form', 'explode': True }})
    r"""Limit to transactions on or after this date. Required if end_date is provided. If not provided, defaults to the furtherest date allowed by the user's subscription."""  
    type: Optional[GetTransactionAccountsIDTransactionsTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""Limit to transactions of this type."""  
    uncategorised: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'uncategorised', 'style': 'form', 'explode': True }})
    r"""Limit to uncategorised transactions."""  
    updated_since: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'updated_since', 'style': 'form', 'explode': True }})
    r"""Limit to transactions updated since an ISO 8601 timestamp."""  
    

@dataclasses.dataclass
class GetTransactionAccountsIDTransactionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Bad Request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    transactions: Optional[list[shared_transaction.Transaction]] = dataclasses.field(default=None)
    r"""Success"""  
    