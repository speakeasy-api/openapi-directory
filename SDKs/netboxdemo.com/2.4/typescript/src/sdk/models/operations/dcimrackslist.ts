/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class DcimRacksListRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=desc_units",
  })
  descUnits?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=facility_id",
  })
  facilityId?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=group" })
  group?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=group_id",
  })
  groupId?: string;

  /**
   * Multiple values may be separated by commas.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id__in",
  })
  idIn?: string;

  /**
   * Number of results to return per page.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * The initial index from which to return the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=role" })
  role?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=role_id",
  })
  roleId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=serial",
  })
  serial?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=site" })
  site?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=site_id",
  })
  siteId?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tag" })
  tag?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=tenant",
  })
  tenant?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=tenant_id",
  })
  tenantId?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=u_height",
  })
  uHeight?: number;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=width" })
  width?: string;
}

export class DcimRacksList200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;

  @SpeakeasyMetadata({ elemType: shared.Rack })
  @Expose({ name: "results" })
  @Type(() => shared.Rack)
  results: shared.Rack[];
}

export class DcimRacksListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  dcimRacksList200ApplicationJSONObject?: DcimRacksList200ApplicationJSON;
}
