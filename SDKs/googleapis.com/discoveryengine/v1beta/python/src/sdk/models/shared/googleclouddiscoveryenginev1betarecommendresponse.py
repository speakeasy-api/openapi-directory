"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddiscoveryenginev1betarecommendresponserecommendationresult as shared_googleclouddiscoveryenginev1betarecommendresponserecommendationresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDiscoveryengineV1betaRecommendResponse:
    r"""Response message for Recommend method."""
    
    attribution_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributionToken'), 'exclude': lambda f: f is None }})
    r"""A unique attribution token. This should be included in the UserEvent logs resulting from this recommendation, which enables accurate attribution of recommendation model performance."""  
    missing_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('missingIds'), 'exclude': lambda f: f is None }})
    r"""IDs of documents in the request that were missing from the default Branch associated with the requested ServingConfig."""  
    results: Optional[list[shared_googleclouddiscoveryenginev1betarecommendresponserecommendationresult.GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results'), 'exclude': lambda f: f is None }})
    r"""A list of recommended Documents. The order represents the ranking (from the most relevant Document to the least)."""  
    validate_only: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validateOnly'), 'exclude': lambda f: f is None }})
    r"""True if RecommendRequest.validate_only was set."""  
    