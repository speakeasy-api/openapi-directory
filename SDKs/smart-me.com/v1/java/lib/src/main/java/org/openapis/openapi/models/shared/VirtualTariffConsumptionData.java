/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VirtualTariffConsumptionData - Container class for the virtual tariff consumption
 */
public class VirtualTariffConsumptionData {
    /**
     * The consumption (e.g. kWh) of this tariff
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Consumption")
    public Double consumption;

    public VirtualTariffConsumptionData withConsumption(Double consumption) {
        this.consumption = consumption;
        return this;
    }
    
    /**
     * The currency of the price
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Currency")
    public String currency;

    public VirtualTariffConsumptionData withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The Name of this virtual tariff
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public VirtualTariffConsumptionData withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The price of the energy in this timerange
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Price")
    public Double price;

    public VirtualTariffConsumptionData withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * The type of the virtual tariff (e.g. solar)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TariffType")
    public VirtualTariffConsumptionDataTariffTypeEnum tariffType;

    public VirtualTariffConsumptionData withTariffType(VirtualTariffConsumptionDataTariffTypeEnum tariffType) {
        this.tariffType = tariffType;
        return this;
    }
    
    public VirtualTariffConsumptionData(){}
}
