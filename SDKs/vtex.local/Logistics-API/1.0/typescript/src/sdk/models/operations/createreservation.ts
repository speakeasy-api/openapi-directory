/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateReservationCreateReservationRequestDeliveryItemOptionItemDimension extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height: number;

  @SpeakeasyMetadata()
  @Expose({ name: "length" })
  length: number;

  @SpeakeasyMetadata()
  @Expose({ name: "weight" })
  weight: number;

  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width: number;
}

export class CreateReservationCreateReservationRequestDeliveryItemOptionItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "additionalHandlingTime" })
  additionalHandlingTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dimension" })
  @Type(
    () =>
      CreateReservationCreateReservationRequestDeliveryItemOptionItemDimension
  )
  dimension: CreateReservationCreateReservationRequestDeliveryItemOptionItemDimension;

  @SpeakeasyMetadata()
  @Expose({ name: "groupItemId" })
  groupItemId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "kitItem" })
  kitItem: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price: number;

  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity: number;
}

export class CreateReservationCreateReservationRequestDeliveryItemOptionLocationInStore extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "IsCheckedIn" })
  isCheckedIn: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "StoreId" })
  storeId: string;
}

export class CreateReservationCreateReservationRequestDeliveryItemOptionLocation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  @SpeakeasyMetadata()
  @Expose({ name: "inStore" })
  @Type(
    () =>
      CreateReservationCreateReservationRequestDeliveryItemOptionLocationInStore
  )
  inStore: CreateReservationCreateReservationRequestDeliveryItemOptionLocationInStore;

  @SpeakeasyMetadata()
  @Expose({ name: "zipCode" })
  zipCode: string;
}

export class CreateReservationCreateReservationRequestDeliveryItemOption extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "aditionalTimeBlockedDays" })
  aditionalTimeBlockedDays: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deliveryWindows" })
  deliveryWindows: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dockTime" })
  dockTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "item" })
  @Type(() => CreateReservationCreateReservationRequestDeliveryItemOptionItem)
  item: CreateReservationCreateReservationRequestDeliveryItemOptionItem;

  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice: number;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(
    () => CreateReservationCreateReservationRequestDeliveryItemOptionLocation
  )
  location: CreateReservationCreateReservationRequestDeliveryItemOptionLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "promotionalPrice" })
  promotionalPrice: number;

  @SpeakeasyMetadata()
  @Expose({ name: "slaType" })
  slaType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slaTypeName" })
  slaTypeName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeToDockPlusDockTime" })
  timeToDockPlusDockTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalTime" })
  totalTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transitTime" })
  transitTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "wareHouseId" })
  wareHouseId: string;
}

export class CreateReservationCreateReservationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "autorizationExpirationTTL" })
  autorizationExpirationTTL: string;

  @SpeakeasyMetadata({
    elemType: CreateReservationCreateReservationRequestDeliveryItemOption,
  })
  @Expose({ name: "deliveryItemOptions" })
  @Type(() => CreateReservationCreateReservationRequestDeliveryItemOption)
  deliveryItemOptions: CreateReservationCreateReservationRequestDeliveryItemOption[];

  @SpeakeasyMetadata()
  @Expose({ name: "lockId" })
  lockId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "salesChannel" })
  salesChannel: string;
}

export class CreateReservationRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateReservationCreateReservationRequest;
}

export class CreateReservation200ApplicationJSONSlaRequestItem1Dimension1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height: number;

  @SpeakeasyMetadata()
  @Expose({ name: "length" })
  length: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxSumDimension" })
  maxSumDimension: number;

  @SpeakeasyMetadata()
  @Expose({ name: "weight" })
  weight: number;

  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width: number;
}

export class CreateReservation200ApplicationJSONSlaRequestItem1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "additionalHandlingTime" })
  additionalHandlingTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dimension" })
  @Type(() => CreateReservation200ApplicationJSONSlaRequestItem1Dimension1)
  dimension: CreateReservation200ApplicationJSONSlaRequestItem1Dimension1;

  @SpeakeasyMetadata()
  @Expose({ name: "groupItemId" })
  groupItemId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "kitItem" })
  kitItem: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "modal" })
  modal: string;

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price: number;

  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unlimitedQuantity" })
  unlimitedQuantity: boolean;
}

export class CreateReservation200ApplicationJSONSlaRequestLocation1InStore1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "IsCheckedIn" })
  isCheckedIn: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "StoreId" })
  storeId: string;
}

export class CreateReservation200ApplicationJSONSlaRequestLocation1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deliveryPointId" })
  deliveryPointId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "inStore" })
  @Type(() => CreateReservation200ApplicationJSONSlaRequestLocation1InStore1)
  inStore: CreateReservation200ApplicationJSONSlaRequestLocation1InStore1;

  @SpeakeasyMetadata()
  @Expose({ name: "point" })
  point: string;

  @SpeakeasyMetadata()
  @Expose({ name: "zipCode" })
  zipCode: string;
}

export class CreateReservation200ApplicationJSONSlaRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryWindows" })
  deliveryWindows: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dockTime" })
  dockTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "freightTableId" })
  freightTableId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "freightTableName" })
  freightTableName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "item" })
  @Type(() => CreateReservation200ApplicationJSONSlaRequestItem1)
  item: CreateReservation200ApplicationJSONSlaRequestItem1;

  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice: number;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => CreateReservation200ApplicationJSONSlaRequestLocation1)
  location: CreateReservation200ApplicationJSONSlaRequestLocation1;

  @SpeakeasyMetadata()
  @Expose({ name: "pickupStoreInfo" })
  pickupStoreInfo: string;

  @SpeakeasyMetadata()
  @Expose({ name: "promotionalPrice" })
  promotionalPrice: number;

  @SpeakeasyMetadata()
  @Expose({ name: "slaType" })
  slaType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slaTypeName" })
  slaTypeName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeToDockPlusDockTime" })
  timeToDockPlusDockTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalTime" })
  totalTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transitTime" })
  transitTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "wareHouseId" })
  wareHouseId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "wmsEndPoint" })
  wmsEndPoint: string;
}

/**
 * OK
 */
export class CreateReservation200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizedDateUtc" })
  authorizedDateUtc: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CanceledDateUtc" })
  canceledDateUtc: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConfirmedDateUtc" })
  confirmedDateUtc: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Errors" })
  errors: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "IsSucess" })
  isSucess: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateDateUtc" })
  lastUpdateDateUtc: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LockId" })
  lockId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaximumConfirmationDateUtc" })
  maximumConfirmationDateUtc: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PickupPointItemOptions" })
  pickupPointItemOptions: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReservationDateUtc" })
  reservationDateUtc: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SalesChannel" })
  salesChannel: string;

  @SpeakeasyMetadata({
    elemType: CreateReservation200ApplicationJSONSlaRequest,
  })
  @Expose({ name: "SlaRequest" })
  @Type(() => CreateReservation200ApplicationJSONSlaRequest)
  slaRequest: CreateReservation200ApplicationJSONSlaRequest[];

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status: number;
}

export class CreateReservationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  createReservation200ApplicationJSONObject?: CreateReservation200ApplicationJSON;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
