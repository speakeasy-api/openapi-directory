// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeNetworkInterfaceAttributeActionEnum
type GETDescribeNetworkInterfaceAttributeActionEnum string

const (
	GETDescribeNetworkInterfaceAttributeActionEnumDescribeNetworkInterfaceAttribute GETDescribeNetworkInterfaceAttributeActionEnum = "DescribeNetworkInterfaceAttribute"
)

func (e GETDescribeNetworkInterfaceAttributeActionEnum) ToPointer() *GETDescribeNetworkInterfaceAttributeActionEnum {
	return &e
}

func (e *GETDescribeNetworkInterfaceAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeNetworkInterfaceAttribute":
		*e = GETDescribeNetworkInterfaceAttributeActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeNetworkInterfaceAttributeActionEnum: %v", v)
	}
}

// GETDescribeNetworkInterfaceAttributeAttributeEnum - The attribute of the network interface. This parameter is required.
type GETDescribeNetworkInterfaceAttributeAttributeEnum string

const (
	GETDescribeNetworkInterfaceAttributeAttributeEnumDescription     GETDescribeNetworkInterfaceAttributeAttributeEnum = "description"
	GETDescribeNetworkInterfaceAttributeAttributeEnumGroupSet        GETDescribeNetworkInterfaceAttributeAttributeEnum = "groupSet"
	GETDescribeNetworkInterfaceAttributeAttributeEnumSourceDestCheck GETDescribeNetworkInterfaceAttributeAttributeEnum = "sourceDestCheck"
	GETDescribeNetworkInterfaceAttributeAttributeEnumAttachment      GETDescribeNetworkInterfaceAttributeAttributeEnum = "attachment"
)

func (e GETDescribeNetworkInterfaceAttributeAttributeEnum) ToPointer() *GETDescribeNetworkInterfaceAttributeAttributeEnum {
	return &e
}

func (e *GETDescribeNetworkInterfaceAttributeAttributeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "description":
		fallthrough
	case "groupSet":
		fallthrough
	case "sourceDestCheck":
		fallthrough
	case "attachment":
		*e = GETDescribeNetworkInterfaceAttributeAttributeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeNetworkInterfaceAttributeAttributeEnum: %v", v)
	}
}

// GETDescribeNetworkInterfaceAttributeVersionEnum
type GETDescribeNetworkInterfaceAttributeVersionEnum string

const (
	GETDescribeNetworkInterfaceAttributeVersionEnumTwoThousandAndSixteen1115 GETDescribeNetworkInterfaceAttributeVersionEnum = "2016-11-15"
)

func (e GETDescribeNetworkInterfaceAttributeVersionEnum) ToPointer() *GETDescribeNetworkInterfaceAttributeVersionEnum {
	return &e
}

func (e *GETDescribeNetworkInterfaceAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDescribeNetworkInterfaceAttributeVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeNetworkInterfaceAttributeVersionEnum: %v", v)
	}
}

type GETDescribeNetworkInterfaceAttributeRequest struct {
	Action GETDescribeNetworkInterfaceAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The attribute of the network interface. This parameter is required.
	Attribute *GETDescribeNetworkInterfaceAttributeAttributeEnum `queryParam:"style=form,explode=true,name=Attribute"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the network interface.
	NetworkInterfaceID string                                          `queryParam:"style=form,explode=true,name=NetworkInterfaceId"`
	Version            GETDescribeNetworkInterfaceAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm      *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeNetworkInterfaceAttributeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
