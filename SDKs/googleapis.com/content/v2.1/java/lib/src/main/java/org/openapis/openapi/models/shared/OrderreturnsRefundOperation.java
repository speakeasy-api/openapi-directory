/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrderreturnsRefundOperation {
    /**
     * If true, the item will be fully refunded. Allowed only when payment_type is FOP. Merchant can choose this refund option to indicate the full remaining amount of corresponding object to be refunded to the customer through FOP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullRefund")
    public Boolean fullRefund;
    public OrderreturnsRefundOperation withFullRefund(Boolean fullRefund) {
        this.fullRefund = fullRefund;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partialRefund")
    public OrderreturnsPartialRefund partialRefund;
    public OrderreturnsRefundOperation withPartialRefund(OrderreturnsPartialRefund partialRefund) {
        this.partialRefund = partialRefund;
        return this;
    }
    
    /**
     * The payment way of issuing refund. Default value is ORIGINAL_FOP if not set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentType")
    public String paymentType;
    public OrderreturnsRefundOperation withPaymentType(String paymentType) {
        this.paymentType = paymentType;
        return this;
    }
    
    /**
     * The explanation of the reason.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reasonText")
    public String reasonText;
    public OrderreturnsRefundOperation withReasonText(String reasonText) {
        this.reasonText = reasonText;
        return this;
    }
    
    /**
     * Code of the refund reason.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnRefundReason")
    public String returnRefundReason;
    public OrderreturnsRefundOperation withReturnRefundReason(String returnRefundReason) {
        this.returnRefundReason = returnRefundReason;
        return this;
    }
    
}
