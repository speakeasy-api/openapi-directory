/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SqlParameter } from "./sqlparameter";
import { StatusStringEnum } from "./statusstringenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The SQL statement to run.
 */
export class StatementData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsBatchStatement" })
  isBatchStatement?: boolean;

  @SpeakeasyMetadata({ elemType: SqlParameter })
  @Expose({ name: "QueryParameters" })
  @Type(() => SqlParameter)
  queryParameters?: SqlParameter[];

  @SpeakeasyMetadata()
  @Expose({ name: "QueryString" })
  queryString?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "QueryStrings" })
  queryStrings?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SecretArn" })
  secretArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StatementName" })
  statementName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: StatusStringEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
