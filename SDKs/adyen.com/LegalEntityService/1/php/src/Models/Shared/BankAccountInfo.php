<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class BankAccountInfo
{
    /**
     * The bank account number (without separators).
     * 
     * 
     *  When this is provided, the `branchCode` is also required.
     * 
     * @var ?string $accountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountNumber = null;
    
    /**
     * The type of bank account.
     * 
     * @var ?string $accountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountType = null;
    
    /**
     * The bank's BIC or SWIFT code.
     * 
     * @var ?string $bankBicSwift
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankBicSwift')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankBicSwift = null;
    
    /**
     * The city where the bank is located.
     * 
     * @var ?string $bankCity
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankCity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankCity = null;
    
    /**
     * The bank code of the banking institution with which the bank account is registered.
     * 
     * @var ?string $bankCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankCode = null;
    
    /**
     * The name of the banking institution where the bank account is held.
     * 
     * @var ?string $bankName
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankName = null;
    
    /**
     * The branch code of the branch under which the bank account is registered.
     * 
     * 
     * Required when you provide an `accountNumber`.
     * 
     *  In the following countries, this value corresponds to:
     * 
     * 
     * * United States: routing number
     * * United Kingdom: sort code
     * * Germany: Bankleitzahl
     * 
     * @var ?string $branchCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('branchCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $branchCode = null;
    
    /**
     * The check code of the bank account.
     * 
     * @var ?string $checkCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('checkCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $checkCode = null;
    
    /**
     * The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the bank account is registered. For example, **NL**.
     * 
     * @var ?string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('countryCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $countryCode = null;
    
    /**
     * The account's three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). For example, **EUR**.
     * 
     * @var string $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currencyCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currencyCode;
    
    /**
     * The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html) standard.
     * 
     * @var ?string $iban
     */
	#[\JMS\Serializer\Annotation\SerializedName('iban')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iban = null;
    
	public function __construct()
	{
		$this->accountNumber = null;
		$this->accountType = null;
		$this->bankBicSwift = null;
		$this->bankCity = null;
		$this->bankCode = null;
		$this->bankName = null;
		$this->branchCode = null;
		$this->checkCode = null;
		$this->countryCode = null;
		$this->currencyCode = "";
		$this->iban = null;
	}
}
