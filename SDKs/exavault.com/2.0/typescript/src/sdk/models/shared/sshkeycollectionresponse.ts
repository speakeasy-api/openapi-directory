/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SSHKey } from "./sshkey";
import { User } from "./user";
import { Expose, Type } from "class-transformer";

/**
 * Successful Operation
 */
export class SSHKeyCollectionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: SSHKey })
  @Expose({ name: "data" })
  @Type(() => SSHKey)
  data?: SSHKey[];

  @SpeakeasyMetadata({ elemType: User })
  @Expose({ name: "included" })
  @Type(() => User)
  included?: User[];

  /**
   * Http status code of the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "responseStatus" })
  responseStatus?: number;

  /**
   * Number of returned results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnedResults" })
  returnedResults?: number;

  /**
   * Total results found.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalResults" })
  totalResults?: number;
}
