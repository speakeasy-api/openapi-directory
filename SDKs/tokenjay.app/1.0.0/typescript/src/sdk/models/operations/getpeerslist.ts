/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetPeersListRequest extends SpeakeasyBase {
  /**
   * Set to true to show peers not open to be connected
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=closedApi",
  })
  closedApi?: boolean;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Set to true to show unreachable peers in the list
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=unreachable",
  })
  unreachable?: boolean;
}

export class GetPeersListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  getPeersList400WildcardString?: string;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  getPeersList401WildcardString?: string;

  /**
   * Not Found
   */
  @SpeakeasyMetadata()
  getPeersList404WildcardString?: string;

  /**
   * Conflict
   */
  @SpeakeasyMetadata()
  getPeersList409WildcardString?: string;
}
