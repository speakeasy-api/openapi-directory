// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateDomainActionEnum
type POSTCreateDomainActionEnum string

const (
	POSTCreateDomainActionEnumCreateDomain POSTCreateDomainActionEnum = "CreateDomain"
)

func (e POSTCreateDomainActionEnum) ToPointer() *POSTCreateDomainActionEnum {
	return &e
}

func (e *POSTCreateDomainActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateDomain":
		*e = POSTCreateDomainActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateDomainActionEnum: %v", v)
	}
}

// POSTCreateDomainVersionEnum
type POSTCreateDomainVersionEnum string

const (
	POSTCreateDomainVersionEnumTwoThousandAndEleven0201 POSTCreateDomainVersionEnum = "2011-02-01"
)

func (e POSTCreateDomainVersionEnum) ToPointer() *POSTCreateDomainVersionEnum {
	return &e
}

func (e *POSTCreateDomainVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-02-01":
		*e = POSTCreateDomainVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateDomainVersionEnum: %v", v)
	}
}

type POSTCreateDomainRequest struct {
	Action            POSTCreateDomainActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                      `request:"mediaType=text/xml"`
	Version           POSTCreateDomainVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateDomainResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
