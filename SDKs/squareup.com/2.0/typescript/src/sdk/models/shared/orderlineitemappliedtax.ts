/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Money } from "./money";
import { Expose, Type } from "class-transformer";

/**
 * Represents an applied portion of a tax to a line item in an order.
 *
 * @remarks
 *
 * Order-scoped taxes automatically include the applied taxes in each line item.
 * Line item taxes must be referenced from any applicable line items.
 * The corresponding applied money is automatically computed, based on the
 * set of participating line items.
 */
export class OrderLineItemAppliedTax extends SpeakeasyBase {
  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "applied_money" })
  @Type(() => Money)
  appliedMoney?: Money;

  /**
   * The `uid` of the tax for which this applied tax represents. It must reference
   *
   * @remarks
   * a tax present in the `order.taxes` field.
   *
   * This field is immutable. To change which taxes apply to a line item, delete and add a new
   * `OrderLineItemAppliedTax`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_uid" })
  taxUid: string;

  /**
   * A unique ID that identifies the applied tax only within this order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;
}
