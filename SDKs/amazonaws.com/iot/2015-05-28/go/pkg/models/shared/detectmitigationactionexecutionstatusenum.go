// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DetectMitigationActionExecutionStatusEnum string

const (
	DetectMitigationActionExecutionStatusEnumInProgress DetectMitigationActionExecutionStatusEnum = "IN_PROGRESS"
	DetectMitigationActionExecutionStatusEnumSuccessful DetectMitigationActionExecutionStatusEnum = "SUCCESSFUL"
	DetectMitigationActionExecutionStatusEnumFailed     DetectMitigationActionExecutionStatusEnum = "FAILED"
	DetectMitigationActionExecutionStatusEnumSkipped    DetectMitigationActionExecutionStatusEnum = "SKIPPED"
)

func (e *DetectMitigationActionExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IN_PROGRESS":
		fallthrough
	case "SUCCESSFUL":
		fallthrough
	case "FAILED":
		fallthrough
	case "SKIPPED":
		*e = DetectMitigationActionExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DetectMitigationActionExecutionStatusEnum: %s", s)
	}
}
