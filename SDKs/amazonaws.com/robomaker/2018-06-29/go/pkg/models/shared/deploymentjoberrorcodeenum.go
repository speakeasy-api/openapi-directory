// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeploymentJobErrorCodeEnum string

const (
	DeploymentJobErrorCodeEnumResourceNotFound                    DeploymentJobErrorCodeEnum = "ResourceNotFound"
	DeploymentJobErrorCodeEnumEnvironmentSetupError               DeploymentJobErrorCodeEnum = "EnvironmentSetupError"
	DeploymentJobErrorCodeEnumEtagMismatch                        DeploymentJobErrorCodeEnum = "EtagMismatch"
	DeploymentJobErrorCodeEnumFailureThresholdBreached            DeploymentJobErrorCodeEnum = "FailureThresholdBreached"
	DeploymentJobErrorCodeEnumRobotDeploymentAborted              DeploymentJobErrorCodeEnum = "RobotDeploymentAborted"
	DeploymentJobErrorCodeEnumRobotDeploymentNoResponse           DeploymentJobErrorCodeEnum = "RobotDeploymentNoResponse"
	DeploymentJobErrorCodeEnumRobotAgentConnectionTimeout         DeploymentJobErrorCodeEnum = "RobotAgentConnectionTimeout"
	DeploymentJobErrorCodeEnumGreengrassDeploymentFailed          DeploymentJobErrorCodeEnum = "GreengrassDeploymentFailed"
	DeploymentJobErrorCodeEnumInvalidGreengrassGroup              DeploymentJobErrorCodeEnum = "InvalidGreengrassGroup"
	DeploymentJobErrorCodeEnumMissingRobotArchitecture            DeploymentJobErrorCodeEnum = "MissingRobotArchitecture"
	DeploymentJobErrorCodeEnumMissingRobotApplicationArchitecture DeploymentJobErrorCodeEnum = "MissingRobotApplicationArchitecture"
	DeploymentJobErrorCodeEnumMissingRobotDeploymentResource      DeploymentJobErrorCodeEnum = "MissingRobotDeploymentResource"
	DeploymentJobErrorCodeEnumGreengrassGroupVersionDoesNotExist  DeploymentJobErrorCodeEnum = "GreengrassGroupVersionDoesNotExist"
	DeploymentJobErrorCodeEnumLambdaDeleted                       DeploymentJobErrorCodeEnum = "LambdaDeleted"
	DeploymentJobErrorCodeEnumExtractingBundleFailure             DeploymentJobErrorCodeEnum = "ExtractingBundleFailure"
	DeploymentJobErrorCodeEnumPreLaunchFileFailure                DeploymentJobErrorCodeEnum = "PreLaunchFileFailure"
	DeploymentJobErrorCodeEnumPostLaunchFileFailure               DeploymentJobErrorCodeEnum = "PostLaunchFileFailure"
	DeploymentJobErrorCodeEnumBadPermissionError                  DeploymentJobErrorCodeEnum = "BadPermissionError"
	DeploymentJobErrorCodeEnumDownloadConditionFailed             DeploymentJobErrorCodeEnum = "DownloadConditionFailed"
	DeploymentJobErrorCodeEnumBadLambdaAssociated                 DeploymentJobErrorCodeEnum = "BadLambdaAssociated"
	DeploymentJobErrorCodeEnumInternalServerError                 DeploymentJobErrorCodeEnum = "InternalServerError"
	DeploymentJobErrorCodeEnumRobotApplicationDoesNotExist        DeploymentJobErrorCodeEnum = "RobotApplicationDoesNotExist"
	DeploymentJobErrorCodeEnumDeploymentFleetDoesNotExist         DeploymentJobErrorCodeEnum = "DeploymentFleetDoesNotExist"
	DeploymentJobErrorCodeEnumFleetDeploymentTimeout              DeploymentJobErrorCodeEnum = "FleetDeploymentTimeout"
)

func (e DeploymentJobErrorCodeEnum) ToPointer() *DeploymentJobErrorCodeEnum {
	return &e
}

func (e *DeploymentJobErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ResourceNotFound":
		fallthrough
	case "EnvironmentSetupError":
		fallthrough
	case "EtagMismatch":
		fallthrough
	case "FailureThresholdBreached":
		fallthrough
	case "RobotDeploymentAborted":
		fallthrough
	case "RobotDeploymentNoResponse":
		fallthrough
	case "RobotAgentConnectionTimeout":
		fallthrough
	case "GreengrassDeploymentFailed":
		fallthrough
	case "InvalidGreengrassGroup":
		fallthrough
	case "MissingRobotArchitecture":
		fallthrough
	case "MissingRobotApplicationArchitecture":
		fallthrough
	case "MissingRobotDeploymentResource":
		fallthrough
	case "GreengrassGroupVersionDoesNotExist":
		fallthrough
	case "LambdaDeleted":
		fallthrough
	case "ExtractingBundleFailure":
		fallthrough
	case "PreLaunchFileFailure":
		fallthrough
	case "PostLaunchFileFailure":
		fallthrough
	case "BadPermissionError":
		fallthrough
	case "DownloadConditionFailed":
		fallthrough
	case "BadLambdaAssociated":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "RobotApplicationDoesNotExist":
		fallthrough
	case "DeploymentFleetDoesNotExist":
		fallthrough
	case "FleetDeploymentTimeout":
		*e = DeploymentJobErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeploymentJobErrorCodeEnum: %v", v)
	}
}
