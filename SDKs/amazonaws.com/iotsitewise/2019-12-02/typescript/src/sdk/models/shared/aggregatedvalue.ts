/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Aggregates } from "./aggregates";
import { QualityEnum } from "./qualityenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains aggregated asset property values (for example, average, minimum, and maximum).
 */
export class AggregatedValue extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "quality" })
  quality?: QualityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  @Type(() => Aggregates)
  value: Aggregates;
}
