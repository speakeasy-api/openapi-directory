// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TargetWindowTargetWindowOptionEnum - Type of browser window for which the backup image of the flash creative can be displayed.
type TargetWindowTargetWindowOptionEnum string

const (
	TargetWindowTargetWindowOptionEnumNewWindow     TargetWindowTargetWindowOptionEnum = "NEW_WINDOW"
	TargetWindowTargetWindowOptionEnumCurrentWindow TargetWindowTargetWindowOptionEnum = "CURRENT_WINDOW"
	TargetWindowTargetWindowOptionEnumCustom        TargetWindowTargetWindowOptionEnum = "CUSTOM"
)

func (e TargetWindowTargetWindowOptionEnum) ToPointer() *TargetWindowTargetWindowOptionEnum {
	return &e
}

func (e *TargetWindowTargetWindowOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NEW_WINDOW":
		fallthrough
	case "CURRENT_WINDOW":
		fallthrough
	case "CUSTOM":
		*e = TargetWindowTargetWindowOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetWindowTargetWindowOptionEnum: %v", v)
	}
}

// TargetWindow - Target Window.
type TargetWindow struct {
	// User-entered value.
	CustomHTML *string `json:"customHtml,omitempty"`
	// Type of browser window for which the backup image of the flash creative can be displayed.
	TargetWindowOption *TargetWindowTargetWindowOptionEnum `json:"targetWindowOption,omitempty"`
}
