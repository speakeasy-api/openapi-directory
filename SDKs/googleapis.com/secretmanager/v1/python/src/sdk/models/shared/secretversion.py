"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import replicationstatus as shared_replicationstatus
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SecretVersionStateEnum(str, Enum):
    r"""Output only. The current state of the SecretVersion."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'
    DESTROYED = 'DESTROYED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SecretVersion:
    r"""A secret version resource in the Secret Manager API."""
    
    client_specified_payload_checksum: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientSpecifiedPayloadChecksum'), 'exclude': lambda f: f is None }})
    r"""Output only. True if payload checksum specified in SecretPayload object has been received by SecretManagerService on SecretManagerService.AddSecretVersion."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time at which the SecretVersion was created."""  
    destroy_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destroyTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time this SecretVersion was destroyed. Only present if state is DESTROYED."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Output only. Etag of the currently stored SecretVersion."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The resource name of the SecretVersion in the format `projects/*/secrets/*/versions/*`. SecretVersion IDs in a Secret start at 1 and are incremented for each subsequent version of the secret."""  
    replication_status: Optional[shared_replicationstatus.ReplicationStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replicationStatus'), 'exclude': lambda f: f is None }})
    r"""The replication status of a SecretVersion."""  
    state: Optional[SecretVersionStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. The current state of the SecretVersion."""  
    