// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NodeRebootParameterNodeRebootOptionEnum - When to reboot the compute node and what to do with currently running tasks. The default value is requeue.
type NodeRebootParameterNodeRebootOptionEnum string

const (
	NodeRebootParameterNodeRebootOptionEnumRequeue        NodeRebootParameterNodeRebootOptionEnum = "requeue"
	NodeRebootParameterNodeRebootOptionEnumTerminate      NodeRebootParameterNodeRebootOptionEnum = "terminate"
	NodeRebootParameterNodeRebootOptionEnumTaskcompletion NodeRebootParameterNodeRebootOptionEnum = "taskcompletion"
	NodeRebootParameterNodeRebootOptionEnumRetaineddata   NodeRebootParameterNodeRebootOptionEnum = "retaineddata"
)

func (e NodeRebootParameterNodeRebootOptionEnum) ToPointer() *NodeRebootParameterNodeRebootOptionEnum {
	return &e
}

func (e *NodeRebootParameterNodeRebootOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "requeue":
		fallthrough
	case "terminate":
		fallthrough
	case "taskcompletion":
		fallthrough
	case "retaineddata":
		*e = NodeRebootParameterNodeRebootOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NodeRebootParameterNodeRebootOptionEnum: %v", v)
	}
}

// NodeRebootParameter - Parameters for a ComputeNodeOperations.Reboot request.
type NodeRebootParameter struct {
	// When to reboot the compute node and what to do with currently running tasks. The default value is requeue.
	NodeRebootOption *NodeRebootParameterNodeRebootOptionEnum `json:"nodeRebootOption,omitempty"`
}
