/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The classification for application component types.
 */
export enum PutPortfolioPreferencesRequestBodyApplicationModeEnum {
  All = "ALL",
  Known = "KNOWN",
  Unknown = "UNKNOWN",
}

/**
 *  Application preferences that you specify.
 */
export class PutPortfolioPreferencesRequestBodyApplicationPreferences extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "managementPreference" })
  @Type(() => shared.ManagementPreference)
  managementPreference?: shared.ManagementPreference;
}

/**
 *  Preferences on managing your databases on AWS.
 */
export class PutPortfolioPreferencesRequestBodyDatabasePreferences extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "databaseManagementPreference" })
  databaseManagementPreference?: shared.DatabaseManagementPreferenceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "databaseMigrationPreference" })
  @Type(() => shared.DatabaseMigrationPreference)
  databaseMigrationPreference?: shared.DatabaseMigrationPreference;
}

/**
 *  Rank of business goals based on priority.
 */
export class PutPortfolioPreferencesRequestBodyPrioritizeBusinessGoals extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "businessGoals" })
  @Type(() => shared.BusinessGoals)
  businessGoals?: shared.BusinessGoals;
}

export class PutPortfolioPreferencesRequestBody extends SpeakeasyBase {
  /**
   * The classification for application component types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "applicationMode" })
  applicationMode?: PutPortfolioPreferencesRequestBodyApplicationModeEnum;

  /**
   *  Application preferences that you specify.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "applicationPreferences" })
  @Type(() => PutPortfolioPreferencesRequestBodyApplicationPreferences)
  applicationPreferences?: PutPortfolioPreferencesRequestBodyApplicationPreferences;

  /**
   *  Preferences on managing your databases on AWS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "databasePreferences" })
  @Type(() => PutPortfolioPreferencesRequestBodyDatabasePreferences)
  databasePreferences?: PutPortfolioPreferencesRequestBodyDatabasePreferences;

  /**
   *  Rank of business goals based on priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prioritizeBusinessGoals" })
  @Type(() => PutPortfolioPreferencesRequestBodyPrioritizeBusinessGoals)
  prioritizeBusinessGoals?: PutPortfolioPreferencesRequestBodyPrioritizeBusinessGoals;
}

export class PutPortfolioPreferencesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PutPortfolioPreferencesRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class PutPortfolioPreferencesResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  putPortfolioPreferencesResponse?: Record<string, any>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
