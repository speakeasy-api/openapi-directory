<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * V1Refund - V1Refund
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class V1Refund
{
    /**
     * The time when the merchant initiated the refund for Square to process, in ISO 8601 format.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * Indicates whether or not the refund is associated with an exchange. If is_exchange is true, the refund reflects the value of goods returned in the exchange not the total money refunded.
     * 
     * @var ?bool $isExchange
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_exchange')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isExchange = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('merchant_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $merchantId = null;
    
    /**
     * A Square-issued ID associated with the refund. For single-tender refunds, payment_id is the ID of the original payment ID. For split-tender refunds, payment_id is the ID of the original tender. For exchange-based refunds (is_exchange == true), payment_id is the ID of the original payment ID even if the payment includes other tenders.
     * 
     * @var ?string $paymentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentId = null;
    
    /**
     * The time when Square processed the refund on behalf of the merchant, in ISO 8601 format.
     * 
     * @var ?string $processedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('processed_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $processedAt = null;
    
    /**
     * The merchant-specified reason for the refund.
     * 
     * @var ?string $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reason = null;
    
    /**
     * All of the additive taxes associated with the refund.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\V1PaymentTax> $refundedAdditiveTax
     */
	#[\JMS\Serializer\Annotation\SerializedName('refunded_additive_tax')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\V1PaymentTax>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $refundedAdditiveTax = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('refunded_additive_tax_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\V1Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?V1Money $refundedAdditiveTaxMoney = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('refunded_discount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\V1Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?V1Money $refundedDiscountMoney = null;
    
    /**
     * All of the inclusive taxes associated with the refund.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\V1PaymentTax> $refundedInclusiveTax
     */
	#[\JMS\Serializer\Annotation\SerializedName('refunded_inclusive_tax')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\V1PaymentTax>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $refundedInclusiveTax = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('refunded_inclusive_tax_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\V1Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?V1Money $refundedInclusiveTaxMoney = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('refunded_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\V1Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?V1Money $refundedMoney = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('refunded_processing_fee_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\V1Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?V1Money $refundedProcessingFeeMoney = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('refunded_surcharge_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\V1Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?V1Money $refundedSurchargeMoney = null;
    
    /**
     * A list of all surcharges associated with the refund.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\V1PaymentSurcharge> $refundedSurcharges
     */
	#[\JMS\Serializer\Annotation\SerializedName('refunded_surcharges')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\V1PaymentSurcharge>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $refundedSurcharges = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('refunded_tax_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\V1Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?V1Money $refundedTaxMoney = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('refunded_tip_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\V1Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?V1Money $refundedTipMoney = null;
    
    /**
     * The type of refund
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->createdAt = null;
		$this->isExchange = null;
		$this->merchantId = null;
		$this->paymentId = null;
		$this->processedAt = null;
		$this->reason = null;
		$this->refundedAdditiveTax = null;
		$this->refundedAdditiveTaxMoney = null;
		$this->refundedDiscountMoney = null;
		$this->refundedInclusiveTax = null;
		$this->refundedInclusiveTaxMoney = null;
		$this->refundedMoney = null;
		$this->refundedProcessingFeeMoney = null;
		$this->refundedSurchargeMoney = null;
		$this->refundedSurcharges = null;
		$this->refundedTaxMoney = null;
		$this->refundedTipMoney = null;
		$this->type = null;
	}
}
