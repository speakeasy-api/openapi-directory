/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccessEffectEnum } from "./accesseffectenum";
import { Expose } from "class-transformer";

/**
 * The rules for the given impersonation role.
 */
export class ImpersonationRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Effect" })
  effect: AccessEffectEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ImpersonationRuleId" })
  impersonationRuleId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotTargetUsers" })
  notTargetUsers?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "TargetUsers" })
  targetUsers?: string[];
}
