"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComparisonOperatorEnum = void 0;
/**
 * <p>A comparison operator is an enumeration of several operations:</p> <ul> <li><code>EQ</code> for <em>equal</em>.</li> <li><code>NE</code> for <em>not equal</em>.</li> <li><code>IN</code> checks for exact matches.</li> <li><code>LE</code> for <em>less than or equal to</em>.</li> <li><code>LT</code> for <em>less than</em>.</li> <li><code>GE</code> for <em>greater than or equal to</em>.</li> <li><code>GT</code> for <em>greater than</em>.</li> <li><code>BETWEEN</code> for <em>between</em>.</li> <li><code>NOT_NULL</code> for <em>exists</em>.</li> <li><code>NULL</code> for <em>not exists</em>.</li> <li><code>CONTAINS</code> for substring or value in a set.</li> <li><code>NOT_CONTAINS</code> for absence of a substring or absence of a value in a set.</li> <li><code>BEGINS_WITH</code> for a substring prefix.</li> </ul> <p>Scan operations support all available comparison operators.</p> <p>Query operations support a subset of the available comparison operators: EQ, LE, LT, GE, GT, BETWEEN, and BEGINS_WITH.</p>
 */
var ComparisonOperatorEnum;
(function (ComparisonOperatorEnum) {
    ComparisonOperatorEnum["Eq"] = "EQ";
    ComparisonOperatorEnum["Ne"] = "NE";
    ComparisonOperatorEnum["In"] = "IN";
    ComparisonOperatorEnum["Le"] = "LE";
    ComparisonOperatorEnum["Lt"] = "LT";
    ComparisonOperatorEnum["Ge"] = "GE";
    ComparisonOperatorEnum["Gt"] = "GT";
    ComparisonOperatorEnum["Between"] = "BETWEEN";
    ComparisonOperatorEnum["NotNull"] = "NOT_NULL";
    ComparisonOperatorEnum["Null"] = "NULL";
    ComparisonOperatorEnum["Contains"] = "CONTAINS";
    ComparisonOperatorEnum["NotContains"] = "NOT_CONTAINS";
    ComparisonOperatorEnum["BeginsWith"] = "BEGINS_WITH";
})(ComparisonOperatorEnum = exports.ComparisonOperatorEnum || (exports.ComparisonOperatorEnum = {}));
