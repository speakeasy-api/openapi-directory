// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataUploadFrequencyEnum string

const (
	DataUploadFrequencyEnumPt5M  DataUploadFrequencyEnum = "PT5M"
	DataUploadFrequencyEnumPt10M DataUploadFrequencyEnum = "PT10M"
	DataUploadFrequencyEnumPt15M DataUploadFrequencyEnum = "PT15M"
	DataUploadFrequencyEnumPt30M DataUploadFrequencyEnum = "PT30M"
	DataUploadFrequencyEnumPt1H  DataUploadFrequencyEnum = "PT1H"
)

func (e DataUploadFrequencyEnum) ToPointer() *DataUploadFrequencyEnum {
	return &e
}

func (e *DataUploadFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PT5M":
		fallthrough
	case "PT10M":
		fallthrough
	case "PT15M":
		fallthrough
	case "PT30M":
		fallthrough
	case "PT1H":
		*e = DataUploadFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataUploadFrequencyEnum: %v", v)
	}
}
