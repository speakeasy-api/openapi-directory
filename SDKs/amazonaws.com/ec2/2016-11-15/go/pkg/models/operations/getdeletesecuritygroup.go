// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteSecurityGroupActionEnum
type GETDeleteSecurityGroupActionEnum string

const (
	GETDeleteSecurityGroupActionEnumDeleteSecurityGroup GETDeleteSecurityGroupActionEnum = "DeleteSecurityGroup"
)

func (e *GETDeleteSecurityGroupActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteSecurityGroup":
		*e = GETDeleteSecurityGroupActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteSecurityGroupActionEnum: %s", s)
	}
}

// GETDeleteSecurityGroupVersionEnum
type GETDeleteSecurityGroupVersionEnum string

const (
	GETDeleteSecurityGroupVersionEnumTwoThousandAndSixteen1115 GETDeleteSecurityGroupVersionEnum = "2016-11-15"
)

func (e *GETDeleteSecurityGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteSecurityGroupVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteSecurityGroupVersionEnum: %s", s)
	}
}

type GETDeleteSecurityGroupQueryParams struct {
	Action GETDeleteSecurityGroupActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the security group. Required for a nondefault VPC.
	GroupID *string `queryParam:"style=form,explode=true,name=GroupId"`
	// [EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, you must specify the security group ID.
	GroupName *string                           `queryParam:"style=form,explode=true,name=GroupName"`
	Version   GETDeleteSecurityGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteSecurityGroupHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteSecurityGroupRequest struct {
	QueryParams GETDeleteSecurityGroupQueryParams
	Headers     GETDeleteSecurityGroupHeaders
}

type GETDeleteSecurityGroupResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
