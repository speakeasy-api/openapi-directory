"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ecscontaineroverride as shared_ecscontaineroverride
from ..shared import ecsephemeralstorage as shared_ecsephemeralstorage
from ..shared import ecsinferenceacceleratoroverride as shared_ecsinferenceacceleratoroverride
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EcsTaskOverride:
    r"""The overrides that are associated with a task."""
    
    container_overrides: Optional[list[shared_ecscontaineroverride.EcsContainerOverride]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ContainerOverrides'), 'exclude': lambda f: f is None }})  
    cpu: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Cpu'), 'exclude': lambda f: f is None }})  
    ephemeral_storage: Optional[shared_ecsephemeralstorage.EcsEphemeralStorage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EphemeralStorage'), 'exclude': lambda f: f is None }})  
    execution_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionRoleArn'), 'exclude': lambda f: f is None }})  
    inference_accelerator_overrides: Optional[list[shared_ecsinferenceacceleratoroverride.EcsInferenceAcceleratorOverride]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InferenceAcceleratorOverrides'), 'exclude': lambda f: f is None }})  
    memory: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Memory'), 'exclude': lambda f: f is None }})  
    task_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaskRoleArn'), 'exclude': lambda f: f is None }})  
    