// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateTenantWebhookXSdsDateFormatEnum - Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
type CreateTenantWebhookXSdsDateFormatEnum string

const (
	CreateTenantWebhookXSdsDateFormatEnumUtc    CreateTenantWebhookXSdsDateFormatEnum = "UTC"
	CreateTenantWebhookXSdsDateFormatEnumLocal  CreateTenantWebhookXSdsDateFormatEnum = "LOCAL"
	CreateTenantWebhookXSdsDateFormatEnumOffset CreateTenantWebhookXSdsDateFormatEnum = "OFFSET"
	CreateTenantWebhookXSdsDateFormatEnumEpoch  CreateTenantWebhookXSdsDateFormatEnum = "EPOCH"
	CreateTenantWebhookXSdsDateFormatEnumLeet   CreateTenantWebhookXSdsDateFormatEnum = "LEET"
)

func (e CreateTenantWebhookXSdsDateFormatEnum) ToPointer() *CreateTenantWebhookXSdsDateFormatEnum {
	return &e
}

func (e *CreateTenantWebhookXSdsDateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UTC":
		fallthrough
	case "LOCAL":
		fallthrough
	case "OFFSET":
		fallthrough
	case "EPOCH":
		fallthrough
	case "LEET":
		*e = CreateTenantWebhookXSdsDateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTenantWebhookXSdsDateFormatEnum: %v", v)
	}
}

type CreateTenantWebhookRequest struct {
	CreateWebhookRequest shared.CreateWebhookRequest `request:"mediaType=application/json"`
	// Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
	XSdsDateFormat *CreateTenantWebhookXSdsDateFormatEnum `header:"style=simple,explode=false,name=X-Sds-Date-Format"`
	// Service Authentication token
	XSdsServiceToken *string `header:"style=simple,explode=false,name=X-Sds-Service-Token"`
}

type CreateTenantWebhookResponse struct {
	ContentType string
	// Bad Request
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// Created
	Webhook *shared.Webhook
}
