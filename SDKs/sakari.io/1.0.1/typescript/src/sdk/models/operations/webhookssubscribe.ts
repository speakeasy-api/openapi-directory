/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class WebhooksSubscribeSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  sakariAuth: string;
}

export enum WebhooksSubscribeRequestBodyEventTypesEnum {
  ContactCreated = "contact-created",
  ContactUpdated = "contact-updated",
  ContactRemoved = "contact-removed",
  MessageReceived = "message-received",
  MessageSent = "message-sent",
  MessageStatus = "message-status",
  ConversationStarted = "conversation-started",
  ContactOptOut = "contact-opt-out",
  ContactOptIn = "contact-opt-in",
  ListOptOut = "list-opt-out",
  ListOptIn = "list-opt-in",
}

export class WebhooksSubscribeRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "eventTypes" })
  eventTypes?: WebhooksSubscribeRequestBodyEventTypesEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

export class WebhooksSubscribeRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: WebhooksSubscribeRequestBody;

  /**
   * Account to apply operations to
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=accountId",
  })
  accountId: string;
}

export class WebhooksSubscribeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * successful operation
   */
  @SpeakeasyMetadata()
  webhookResponse?: shared.WebhookResponse;
}
