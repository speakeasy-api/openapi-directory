// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LivingAreaLayoutBalconyExceptionEnum - Balcony exception.
type LivingAreaLayoutBalconyExceptionEnum string

const (
	LivingAreaLayoutBalconyExceptionEnumExceptionUnspecified LivingAreaLayoutBalconyExceptionEnum = "EXCEPTION_UNSPECIFIED"
	LivingAreaLayoutBalconyExceptionEnumUnderConstruction    LivingAreaLayoutBalconyExceptionEnum = "UNDER_CONSTRUCTION"
	LivingAreaLayoutBalconyExceptionEnumDependentOnSeason    LivingAreaLayoutBalconyExceptionEnum = "DEPENDENT_ON_SEASON"
	LivingAreaLayoutBalconyExceptionEnumDependentOnDayOfWeek LivingAreaLayoutBalconyExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *LivingAreaLayoutBalconyExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = LivingAreaLayoutBalconyExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LivingAreaLayoutBalconyExceptionEnum: %s", s)
	}
}

// LivingAreaLayoutLivingAreaSqMetersExceptionEnum - Living area sq meters exception.
type LivingAreaLayoutLivingAreaSqMetersExceptionEnum string

const (
	LivingAreaLayoutLivingAreaSqMetersExceptionEnumExceptionUnspecified LivingAreaLayoutLivingAreaSqMetersExceptionEnum = "EXCEPTION_UNSPECIFIED"
	LivingAreaLayoutLivingAreaSqMetersExceptionEnumUnderConstruction    LivingAreaLayoutLivingAreaSqMetersExceptionEnum = "UNDER_CONSTRUCTION"
	LivingAreaLayoutLivingAreaSqMetersExceptionEnumDependentOnSeason    LivingAreaLayoutLivingAreaSqMetersExceptionEnum = "DEPENDENT_ON_SEASON"
	LivingAreaLayoutLivingAreaSqMetersExceptionEnumDependentOnDayOfWeek LivingAreaLayoutLivingAreaSqMetersExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *LivingAreaLayoutLivingAreaSqMetersExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = LivingAreaLayoutLivingAreaSqMetersExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LivingAreaLayoutLivingAreaSqMetersExceptionEnum: %s", s)
	}
}

// LivingAreaLayoutLoftExceptionEnum - Loft exception.
type LivingAreaLayoutLoftExceptionEnum string

const (
	LivingAreaLayoutLoftExceptionEnumExceptionUnspecified LivingAreaLayoutLoftExceptionEnum = "EXCEPTION_UNSPECIFIED"
	LivingAreaLayoutLoftExceptionEnumUnderConstruction    LivingAreaLayoutLoftExceptionEnum = "UNDER_CONSTRUCTION"
	LivingAreaLayoutLoftExceptionEnumDependentOnSeason    LivingAreaLayoutLoftExceptionEnum = "DEPENDENT_ON_SEASON"
	LivingAreaLayoutLoftExceptionEnumDependentOnDayOfWeek LivingAreaLayoutLoftExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *LivingAreaLayoutLoftExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = LivingAreaLayoutLoftExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LivingAreaLayoutLoftExceptionEnum: %s", s)
	}
}

// LivingAreaLayoutNonSmokingExceptionEnum - Non smoking exception.
type LivingAreaLayoutNonSmokingExceptionEnum string

const (
	LivingAreaLayoutNonSmokingExceptionEnumExceptionUnspecified LivingAreaLayoutNonSmokingExceptionEnum = "EXCEPTION_UNSPECIFIED"
	LivingAreaLayoutNonSmokingExceptionEnumUnderConstruction    LivingAreaLayoutNonSmokingExceptionEnum = "UNDER_CONSTRUCTION"
	LivingAreaLayoutNonSmokingExceptionEnumDependentOnSeason    LivingAreaLayoutNonSmokingExceptionEnum = "DEPENDENT_ON_SEASON"
	LivingAreaLayoutNonSmokingExceptionEnumDependentOnDayOfWeek LivingAreaLayoutNonSmokingExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *LivingAreaLayoutNonSmokingExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = LivingAreaLayoutNonSmokingExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LivingAreaLayoutNonSmokingExceptionEnum: %s", s)
	}
}

// LivingAreaLayoutPatioExceptionEnum - Patio exception.
type LivingAreaLayoutPatioExceptionEnum string

const (
	LivingAreaLayoutPatioExceptionEnumExceptionUnspecified LivingAreaLayoutPatioExceptionEnum = "EXCEPTION_UNSPECIFIED"
	LivingAreaLayoutPatioExceptionEnumUnderConstruction    LivingAreaLayoutPatioExceptionEnum = "UNDER_CONSTRUCTION"
	LivingAreaLayoutPatioExceptionEnumDependentOnSeason    LivingAreaLayoutPatioExceptionEnum = "DEPENDENT_ON_SEASON"
	LivingAreaLayoutPatioExceptionEnumDependentOnDayOfWeek LivingAreaLayoutPatioExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *LivingAreaLayoutPatioExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = LivingAreaLayoutPatioExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LivingAreaLayoutPatioExceptionEnum: %s", s)
	}
}

// LivingAreaLayoutStairsExceptionEnum - Stairs exception.
type LivingAreaLayoutStairsExceptionEnum string

const (
	LivingAreaLayoutStairsExceptionEnumExceptionUnspecified LivingAreaLayoutStairsExceptionEnum = "EXCEPTION_UNSPECIFIED"
	LivingAreaLayoutStairsExceptionEnumUnderConstruction    LivingAreaLayoutStairsExceptionEnum = "UNDER_CONSTRUCTION"
	LivingAreaLayoutStairsExceptionEnumDependentOnSeason    LivingAreaLayoutStairsExceptionEnum = "DEPENDENT_ON_SEASON"
	LivingAreaLayoutStairsExceptionEnumDependentOnDayOfWeek LivingAreaLayoutStairsExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *LivingAreaLayoutStairsExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = LivingAreaLayoutStairsExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LivingAreaLayoutStairsExceptionEnum: %s", s)
	}
}

// LivingAreaLayout - Information about the layout of the living area.
type LivingAreaLayout struct {
	// Balcony. An outdoor platform attached to a building and surrounded by a short wall, fence or other safety railing. The balcony is accessed through a door in a guestroom or suite and is for use by the guest staying in that room. May or may not include seating or outdoor furniture. Is not located on the ground floor. Also lanai.
	Balcony *bool `json:"balcony,omitempty"`
	// Balcony exception.
	BalconyException *LivingAreaLayoutBalconyExceptionEnum `json:"balconyException,omitempty"`
	// Living area sq meters. The measurement in meters of the area of a guestroom's living space.
	LivingAreaSqMeters *float32 `json:"livingAreaSqMeters,omitempty"`
	// Living area sq meters exception.
	LivingAreaSqMetersException *LivingAreaLayoutLivingAreaSqMetersExceptionEnum `json:"livingAreaSqMetersException,omitempty"`
	// Loft. A three-walled upper area accessed by stairs or a ladder that overlooks the lower area of a room.
	Loft *bool `json:"loft,omitempty"`
	// Loft exception.
	LoftException *LivingAreaLayoutLoftExceptionEnum `json:"loftException,omitempty"`
	// Non smoking. A guestroom in which the smoking of cigarettes, cigars and pipes is prohibited.
	NonSmoking *bool `json:"nonSmoking,omitempty"`
	// Non smoking exception.
	NonSmokingException *LivingAreaLayoutNonSmokingExceptionEnum `json:"nonSmokingException,omitempty"`
	// Patio. A paved, outdoor area with seating attached to and accessed through a ground-floor guestroom for use by the occupants of the guestroom.
	Patio *bool `json:"patio,omitempty"`
	// Patio exception.
	PatioException *LivingAreaLayoutPatioExceptionEnum `json:"patioException,omitempty"`
	// Stairs. There are steps leading from one level or story to another in the unit.
	Stairs *bool `json:"stairs,omitempty"`
	// Stairs exception.
	StairsException *LivingAreaLayoutStairsExceptionEnum `json:"stairsException,omitempty"`
}
