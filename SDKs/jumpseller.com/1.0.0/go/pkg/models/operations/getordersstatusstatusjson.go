// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetOrdersStatusStatusJSONStatusEnum - Status of the Order used as filter
type GetOrdersStatusStatusJSONStatusEnum string

const (
	GetOrdersStatusStatusJSONStatusEnumAbandoned      GetOrdersStatusStatusJSONStatusEnum = "Abandoned"
	GetOrdersStatusStatusJSONStatusEnumCanceled       GetOrdersStatusStatusJSONStatusEnum = "Canceled"
	GetOrdersStatusStatusJSONStatusEnumPendingPayment GetOrdersStatusStatusJSONStatusEnum = "Pending Payment"
	GetOrdersStatusStatusJSONStatusEnumPaid           GetOrdersStatusStatusJSONStatusEnum = "Paid"
)

func (e *GetOrdersStatusStatusJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Abandoned":
		fallthrough
	case "Canceled":
		fallthrough
	case "Pending Payment":
		fallthrough
	case "Paid":
		*e = GetOrdersStatusStatusJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrdersStatusStatusJSONStatusEnum: %s", s)
	}
}

type GetOrdersStatusStatusJSONPathParams struct {
	// Status of the Order used as filter
	Status GetOrdersStatusStatusJSONStatusEnum `pathParam:"style=simple,explode=false,name=status"`
}

type GetOrdersStatusStatusJSONQueryParams struct {
	// API OAuth token.
	Authtoken string `queryParam:"style=form,explode=true,name=authtoken"`
	// API OAuth login.
	Login string `queryParam:"style=form,explode=true,name=login"`
}

type GetOrdersStatusStatusJSONRequest struct {
	PathParams  GetOrdersStatusStatusJSONPathParams
	QueryParams GetOrdersStatusStatusJSONQueryParams
}

type GetOrdersStatusStatusJSONResponse struct {
	ContentType string
	// OK
	Orders      []shared.Order
	StatusCode  int
	RawResponse *http.Response
	// Status Invalid.
	StatusInvalid *shared.StatusInvalid
}
