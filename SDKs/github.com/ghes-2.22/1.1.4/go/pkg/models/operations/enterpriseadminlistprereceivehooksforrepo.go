// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type EnterpriseAdminListPreReceiveHooksForRepoPathParams struct {
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	Repo  string `pathParam:"style=simple,explode=false,name=repo"`
}

// EnterpriseAdminListPreReceiveHooksForRepoSortEnum
type EnterpriseAdminListPreReceiveHooksForRepoSortEnum string

const (
	EnterpriseAdminListPreReceiveHooksForRepoSortEnumCreated EnterpriseAdminListPreReceiveHooksForRepoSortEnum = "created"
	EnterpriseAdminListPreReceiveHooksForRepoSortEnumUpdated EnterpriseAdminListPreReceiveHooksForRepoSortEnum = "updated"
	EnterpriseAdminListPreReceiveHooksForRepoSortEnumName    EnterpriseAdminListPreReceiveHooksForRepoSortEnum = "name"
)

func (e *EnterpriseAdminListPreReceiveHooksForRepoSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "created":
		fallthrough
	case "updated":
		fallthrough
	case "name":
		*e = EnterpriseAdminListPreReceiveHooksForRepoSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseAdminListPreReceiveHooksForRepoSortEnum: %s", s)
	}
}

type EnterpriseAdminListPreReceiveHooksForRepoQueryParams struct {
	// One of `asc` (ascending) or `desc` (descending).
	Direction *shared.DirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Results per page (max 100)
	PerPage *int64                                             `queryParam:"style=form,explode=true,name=per_page"`
	Sort    *EnterpriseAdminListPreReceiveHooksForRepoSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type EnterpriseAdminListPreReceiveHooksForRepoRequest struct {
	PathParams  EnterpriseAdminListPreReceiveHooksForRepoPathParams
	QueryParams EnterpriseAdminListPreReceiveHooksForRepoQueryParams
}

type EnterpriseAdminListPreReceiveHooksForRepoResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	RepositoryPreReceiveHooks []shared.RepositoryPreReceiveHook
}
