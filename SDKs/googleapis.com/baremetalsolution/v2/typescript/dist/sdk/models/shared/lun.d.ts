import { SpeakeasyBase } from "../../../internal/utils";
/**
 * The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.
 */
export declare enum LunMultiprotocolTypeEnum {
    MultiprotocolTypeUnspecified = "MULTIPROTOCOL_TYPE_UNSPECIFIED",
    Linux = "LINUX"
}
/**
 * The state of this storage volume.
 */
export declare enum LunStateEnum {
    StateUnspecified = "STATE_UNSPECIFIED",
    Creating = "CREATING",
    Updating = "UPDATING",
    Ready = "READY",
    Deleting = "DELETING",
    CoolOff = "COOL_OFF"
}
/**
 * The storage type for this LUN.
 */
export declare enum LunStorageTypeEnum {
    StorageTypeUnspecified = "STORAGE_TYPE_UNSPECIFIED",
    Ssd = "SSD",
    Hdd = "HDD"
}
/**
 * A storage volume logical unit number (LUN).
 */
export declare class Lun extends SpeakeasyBase {
    /**
     * Display if this LUN is a boot LUN.
     */
    bootLun?: boolean;
    /**
     * Output only. Time after which LUN will be fully deleted. It is filled only for LUNs in COOL_OFF state.
     */
    expireTime?: string;
    /**
     * An identifier for the LUN, generated by the backend.
     */
    id?: string;
    /**
     * Output only. Instances this Lun is attached to.
     */
    instances?: string[];
    /**
     * The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.
     */
    multiprotocolType?: LunMultiprotocolTypeEnum;
    /**
     * Output only. The name of the LUN.
     */
    name?: string;
    /**
     * Display if this LUN can be shared between multiple physical servers.
     */
    shareable?: boolean;
    /**
     * The size of this LUN, in gigabytes.
     */
    sizeGb?: string;
    /**
     * The state of this storage volume.
     */
    state?: LunStateEnum;
    /**
     * The storage type for this LUN.
     */
    storageType?: LunStorageTypeEnum;
    /**
     * Display the storage volume for this LUN.
     */
    storageVolume?: string;
    /**
     * The WWID for this LUN.
     */
    wwid?: string;
}
/**
 * A storage volume logical unit number (LUN).
 */
export declare class LunInput extends SpeakeasyBase {
    /**
     * Display if this LUN is a boot LUN.
     */
    bootLun?: boolean;
    /**
     * An identifier for the LUN, generated by the backend.
     */
    id?: string;
    /**
     * The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.
     */
    multiprotocolType?: LunMultiprotocolTypeEnum;
    /**
     * Display if this LUN can be shared between multiple physical servers.
     */
    shareable?: boolean;
    /**
     * The size of this LUN, in gigabytes.
     */
    sizeGb?: string;
    /**
     * The state of this storage volume.
     */
    state?: LunStateEnum;
    /**
     * The storage type for this LUN.
     */
    storageType?: LunStorageTypeEnum;
    /**
     * Display the storage volume for this LUN.
     */
    storageVolume?: string;
    /**
     * The WWID for this LUN.
     */
    wwid?: string;
}
