// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAPIV2BroadcastservicesSecurity struct {
	CdOauth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// GetAPIV2BroadcastservicesOrderByIDEnum - The sort order of the list of broadcast services, based on broadcast service ID. If unspecified, the broadcast services are returned in random order. If using paging to iterate through the results, sort order should be specified.
type GetAPIV2BroadcastservicesOrderByIDEnum string

const (
	GetAPIV2BroadcastservicesOrderByIDEnumAsc  GetAPIV2BroadcastservicesOrderByIDEnum = "asc"
	GetAPIV2BroadcastservicesOrderByIDEnumDesc GetAPIV2BroadcastservicesOrderByIDEnum = "desc"
)

func (e *GetAPIV2BroadcastservicesOrderByIDEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetAPIV2BroadcastservicesOrderByIDEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAPIV2BroadcastservicesOrderByIDEnum: %s", s)
	}
}

type GetAPIV2BroadcastservicesRequest struct {
	// The sort order of the list of broadcast services, based on broadcast service ID. If unspecified, the broadcast services are returned in random order. If using paging to iterate through the results, sort order should be specified.
	OrderByID *GetAPIV2BroadcastservicesOrderByIDEnum `queryParam:"style=form,explode=true,name=orderById"`
	// The number of items to return. Must be between 0 and 500, inclusive.
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// The start page of the results to return. The first item is indexed at 0.
	PageStart *int `queryParam:"style=form,explode=true,name=pageStart"`
}

type GetAPIV2BroadcastservicesResponse struct {
	ContentType string
	// The matching broadcast services.
	Episodes []shared.Episode
	// The request is missing required data or invalid.
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
