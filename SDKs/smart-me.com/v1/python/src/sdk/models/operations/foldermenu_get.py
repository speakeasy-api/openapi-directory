"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import foldermenuconfiguration as shared_foldermenuconfiguration
from typing import Optional


@dataclasses.dataclass
class FolderMenuGetRequest:
    
    filter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""(optional) Filter for the folders and meters:
                all: load everything
                assigned: load only folders and meters that are assigend to a folder
                unassigend: load only meters that are not assigend to a folder
                user: load only folder and all users assigned to this folders
                subuserlist: load all subusers as a list
    """  
    

@dataclasses.dataclass
class FolderMenuGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    folder_menu_configuration: Optional[shared_foldermenuconfiguration.FolderMenuConfiguration] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    