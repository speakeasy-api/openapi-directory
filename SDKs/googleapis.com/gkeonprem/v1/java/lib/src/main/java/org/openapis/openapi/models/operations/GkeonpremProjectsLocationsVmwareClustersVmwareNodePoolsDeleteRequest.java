/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * If set to true, and the VMware node pool is not found, the request will succeed but no action will be taken on the server and return a completed LRO.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=allowMissing")
    public Boolean allowMissing;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withAllowMissing(Boolean allowMissing) {
        this.allowMissing = allowMissing;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * The current etag of the VmwareNodePool. If an etag is provided and does not match the current etag of the node pool, deletion will be blocked and an ABORTED error will be returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=etag")
    public String etag;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * If set to true, the deletion of a VMware node pool resource will succeed even if errors occur during deletion. This parameter can be used when you want to delete GCP's node pool resource and you've already deleted the on-prem admin cluster that hosted your node pool. WARNING: Using this parameter when your user cluster still exists may result in a deleted GCP node pool but an existing on-prem node pool.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ignoreErrors")
    public Boolean ignoreErrors;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withIgnoreErrors(Boolean ignoreErrors) {
        this.ignoreErrors = ignoreErrors;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Required. The name of the node pool to delete. Format: projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=name")
    public String name;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
    /**
     * If set, only validate the request, but do not actually delete the node pool.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=validateOnly")
    public Boolean validateOnly;

    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest withValidateOnly(Boolean validateOnly) {
        this.validateOnly = validateOnly;
        return this;
    }
    
    public GkeonpremProjectsLocationsVmwareClustersVmwareNodePoolsDeleteRequest(@JsonProperty("name") String name) {
        this.name = name;
  }
}
