// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InsertionOrderBillableOutcomeEnum - Immutable. The billable outcome of the insertion order.
type InsertionOrderBillableOutcomeEnum string

const (
	InsertionOrderBillableOutcomeEnumBillableOutcomeUnspecified              InsertionOrderBillableOutcomeEnum = "BILLABLE_OUTCOME_UNSPECIFIED"
	InsertionOrderBillableOutcomeEnumBillableOutcomePayPerImpression         InsertionOrderBillableOutcomeEnum = "BILLABLE_OUTCOME_PAY_PER_IMPRESSION"
	InsertionOrderBillableOutcomeEnumBillableOutcomePayPerClick              InsertionOrderBillableOutcomeEnum = "BILLABLE_OUTCOME_PAY_PER_CLICK"
	InsertionOrderBillableOutcomeEnumBillableOutcomePayPerViewableImpression InsertionOrderBillableOutcomeEnum = "BILLABLE_OUTCOME_PAY_PER_VIEWABLE_IMPRESSION"
)

func (e *InsertionOrderBillableOutcomeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BILLABLE_OUTCOME_UNSPECIFIED":
		fallthrough
	case "BILLABLE_OUTCOME_PAY_PER_IMPRESSION":
		fallthrough
	case "BILLABLE_OUTCOME_PAY_PER_CLICK":
		fallthrough
	case "BILLABLE_OUTCOME_PAY_PER_VIEWABLE_IMPRESSION":
		*e = InsertionOrderBillableOutcomeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InsertionOrderBillableOutcomeEnum: %s", s)
	}
}

// InsertionOrderEntityStatusEnum - Required. Controls whether or not the insertion order can spend its budget and bid on inventory. * For CreateInsertionOrder method, only `ENTITY_STATUS_DRAFT` is allowed. To activate an insertion order, use UpdateInsertionOrder method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * An insertion order cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * An insertion order cannot be set to `ENTITY_STATUS_ACTIVE` if its parent campaign is not active.
type InsertionOrderEntityStatusEnum string

const (
	InsertionOrderEntityStatusEnumEntityStatusUnspecified          InsertionOrderEntityStatusEnum = "ENTITY_STATUS_UNSPECIFIED"
	InsertionOrderEntityStatusEnumEntityStatusActive               InsertionOrderEntityStatusEnum = "ENTITY_STATUS_ACTIVE"
	InsertionOrderEntityStatusEnumEntityStatusArchived             InsertionOrderEntityStatusEnum = "ENTITY_STATUS_ARCHIVED"
	InsertionOrderEntityStatusEnumEntityStatusDraft                InsertionOrderEntityStatusEnum = "ENTITY_STATUS_DRAFT"
	InsertionOrderEntityStatusEnumEntityStatusPaused               InsertionOrderEntityStatusEnum = "ENTITY_STATUS_PAUSED"
	InsertionOrderEntityStatusEnumEntityStatusScheduledForDeletion InsertionOrderEntityStatusEnum = "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
)

func (e *InsertionOrderEntityStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENTITY_STATUS_UNSPECIFIED":
		fallthrough
	case "ENTITY_STATUS_ACTIVE":
		fallthrough
	case "ENTITY_STATUS_ARCHIVED":
		fallthrough
	case "ENTITY_STATUS_DRAFT":
		fallthrough
	case "ENTITY_STATUS_PAUSED":
		fallthrough
	case "ENTITY_STATUS_SCHEDULED_FOR_DELETION":
		*e = InsertionOrderEntityStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InsertionOrderEntityStatusEnum: %s", s)
	}
}

// InsertionOrderInsertionOrderTypeEnum - The type of insertion order. If this field is unspecified in creation, the value defaults to `RTB`.
type InsertionOrderInsertionOrderTypeEnum string

const (
	InsertionOrderInsertionOrderTypeEnumInsertionOrderTypeUnspecified InsertionOrderInsertionOrderTypeEnum = "INSERTION_ORDER_TYPE_UNSPECIFIED"
	InsertionOrderInsertionOrderTypeEnumRtb                           InsertionOrderInsertionOrderTypeEnum = "RTB"
	InsertionOrderInsertionOrderTypeEnumOverTheTop                    InsertionOrderInsertionOrderTypeEnum = "OVER_THE_TOP"
)

func (e *InsertionOrderInsertionOrderTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INSERTION_ORDER_TYPE_UNSPECIFIED":
		fallthrough
	case "RTB":
		fallthrough
	case "OVER_THE_TOP":
		*e = InsertionOrderInsertionOrderTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InsertionOrderInsertionOrderTypeEnum: %s", s)
	}
}

// InsertionOrderInput - A single insertion order.
type InsertionOrderInput struct {
	// Settings that control the bid strategy. Bid strategy determines the bid price.
	BidStrategy *BiddingStrategy `json:"bidStrategy,omitempty"`
	// Immutable. The billable outcome of the insertion order.
	BillableOutcome *InsertionOrderBillableOutcomeEnum `json:"billableOutcome,omitempty"`
	// Settings that control how insertion order budget is allocated.
	Budget *InsertionOrderBudget `json:"budget,omitempty"`
	// Required. Immutable. The unique ID of the campaign that the insertion order belongs to.
	CampaignID *string `json:"campaignId,omitempty"`
	// Required. The display name of the insertion order. Must be UTF-8 encoded with a maximum size of 240 bytes.
	DisplayName *string `json:"displayName,omitempty"`
	// Required. Controls whether or not the insertion order can spend its budget and bid on inventory. * For CreateInsertionOrder method, only `ENTITY_STATUS_DRAFT` is allowed. To activate an insertion order, use UpdateInsertionOrder method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * An insertion order cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * An insertion order cannot be set to `ENTITY_STATUS_ACTIVE` if its parent campaign is not active.
	EntityStatus *InsertionOrderEntityStatusEnum `json:"entityStatus,omitempty"`
	// Settings that control the number of times a user may be shown with the same ad during a given time period.
	FrequencyCap *FrequencyCap `json:"frequencyCap,omitempty"`
	// The type of insertion order. If this field is unspecified in creation, the value defaults to `RTB`.
	InsertionOrderType *InsertionOrderInsertionOrderTypeEnum `json:"insertionOrderType,omitempty"`
	// Integration details of an entry.
	IntegrationDetails *IntegrationDetails `json:"integrationDetails,omitempty"`
	// Settings that control the rate at which a budget is spent.
	Pacing *Pacing `json:"pacing,omitempty"`
	// The partner costs associated with the insertion order. If absent or empty in CreateInsertionOrder method, the newly created insertion order will inherit partner costs from the partner settings.
	PartnerCosts []PartnerCost `json:"partnerCosts,omitempty"`
	// Settings that control the performance goal of a campaign or insertion order.
	PerformanceGoal *PerformanceGoal `json:"performanceGoal,omitempty"`
}

// InsertionOrderReservationTypeEnum - Output only. The reservation type of the insertion order.
type InsertionOrderReservationTypeEnum string

const (
	InsertionOrderReservationTypeEnumReservationTypeUnspecified            InsertionOrderReservationTypeEnum = "RESERVATION_TYPE_UNSPECIFIED"
	InsertionOrderReservationTypeEnumReservationTypeNotGuaranteed          InsertionOrderReservationTypeEnum = "RESERVATION_TYPE_NOT_GUARANTEED"
	InsertionOrderReservationTypeEnumReservationTypeProgrammaticGuaranteed InsertionOrderReservationTypeEnum = "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED"
	InsertionOrderReservationTypeEnumReservationTypeTagGuaranteed          InsertionOrderReservationTypeEnum = "RESERVATION_TYPE_TAG_GUARANTEED"
)

func (e *InsertionOrderReservationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RESERVATION_TYPE_UNSPECIFIED":
		fallthrough
	case "RESERVATION_TYPE_NOT_GUARANTEED":
		fallthrough
	case "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED":
		fallthrough
	case "RESERVATION_TYPE_TAG_GUARANTEED":
		*e = InsertionOrderReservationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InsertionOrderReservationTypeEnum: %s", s)
	}
}

// InsertionOrder - A single insertion order.
type InsertionOrder struct {
	// Output only. The unique ID of the advertiser the insertion order belongs to.
	AdvertiserID *string `json:"advertiserId,omitempty"`
	// Settings that control the bid strategy. Bid strategy determines the bid price.
	BidStrategy *BiddingStrategy `json:"bidStrategy,omitempty"`
	// Immutable. The billable outcome of the insertion order.
	BillableOutcome *InsertionOrderBillableOutcomeEnum `json:"billableOutcome,omitempty"`
	// Settings that control how insertion order budget is allocated.
	Budget *InsertionOrderBudget `json:"budget,omitempty"`
	// Required. Immutable. The unique ID of the campaign that the insertion order belongs to.
	CampaignID *string `json:"campaignId,omitempty"`
	// Required. The display name of the insertion order. Must be UTF-8 encoded with a maximum size of 240 bytes.
	DisplayName *string `json:"displayName,omitempty"`
	// Required. Controls whether or not the insertion order can spend its budget and bid on inventory. * For CreateInsertionOrder method, only `ENTITY_STATUS_DRAFT` is allowed. To activate an insertion order, use UpdateInsertionOrder method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * An insertion order cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * An insertion order cannot be set to `ENTITY_STATUS_ACTIVE` if its parent campaign is not active.
	EntityStatus *InsertionOrderEntityStatusEnum `json:"entityStatus,omitempty"`
	// Settings that control the number of times a user may be shown with the same ad during a given time period.
	FrequencyCap *FrequencyCap `json:"frequencyCap,omitempty"`
	// Output only. The unique ID of the insertion order. Assigned by the system.
	InsertionOrderID *string `json:"insertionOrderId,omitempty"`
	// The type of insertion order. If this field is unspecified in creation, the value defaults to `RTB`.
	InsertionOrderType *InsertionOrderInsertionOrderTypeEnum `json:"insertionOrderType,omitempty"`
	// Integration details of an entry.
	IntegrationDetails *IntegrationDetails `json:"integrationDetails,omitempty"`
	// Output only. The resource name of the insertion order.
	Name *string `json:"name,omitempty"`
	// Settings that control the rate at which a budget is spent.
	Pacing *Pacing `json:"pacing,omitempty"`
	// The partner costs associated with the insertion order. If absent or empty in CreateInsertionOrder method, the newly created insertion order will inherit partner costs from the partner settings.
	PartnerCosts []PartnerCost `json:"partnerCosts,omitempty"`
	// Settings that control the performance goal of a campaign or insertion order.
	PerformanceGoal *PerformanceGoal `json:"performanceGoal,omitempty"`
	// Output only. The reservation type of the insertion order.
	ReservationType *InsertionOrderReservationTypeEnum `json:"reservationType,omitempty"`
	// Output only. The timestamp when the insertion order was last updated. Assigned by the system.
	UpdateTime *string `json:"updateTime,omitempty"`
}
