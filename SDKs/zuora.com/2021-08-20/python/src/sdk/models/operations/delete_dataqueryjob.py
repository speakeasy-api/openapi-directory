"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import dataqueryerrorresponse as shared_dataqueryerrorresponse
from ..shared import deletedataqueryjobresponse as shared_deletedataqueryjobresponse
from typing import Optional


@dataclasses.dataclass
class DELETEDataQueryJobRequest:
    
    authorization: str = dataclasses.field(metadata={'header': { 'field_name': 'Authorization', 'style': 'simple', 'explode': False }})
    r"""`Bearer {token}` for a valid OAuth token."""  
    job_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'job-id', 'style': 'simple', 'explode': False }})
    r"""Internal identifier of the query job."""  
    zuora_entity_ids: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Zuora-Entity-Ids', 'style': 'simple', 'explode': False }})
    r"""An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header."""  
    zuora_track_id: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Zuora-Track-Id', 'style': 'simple', 'explode': False }})
    r"""A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    
    The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`\"`), and quote (`'`).
    """  
    

@dataclasses.dataclass
class DELETEDataQueryJobResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    data_query_error_response: Optional[shared_dataqueryerrorresponse.DataQueryErrorResponse] = dataclasses.field(default=None)
    r"""Bad Request"""  
    delete_data_query_job_response: Optional[shared_deletedataqueryjobresponse.DeleteDataQueryJobResponse] = dataclasses.field(default=None)
    r"""OK"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    