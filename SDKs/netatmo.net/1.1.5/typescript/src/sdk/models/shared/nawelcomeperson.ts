/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NAWelcomeFace } from "./nawelcomeface";
import { Expose, Type } from "class-transformer";

export class NAWelcomePerson extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "face" })
  @Type(() => NAWelcomeFace)
  face?: NAWelcomeFace;

  /**
   * Id of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Time at which the person was last seen.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_seen" })
  lastSeen?: number;

  /**
   * True if the Person is out of sight.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "out_of_sight" })
  outOfSight?: boolean;

  /**
   * Name of the person, if pseudo is missing, person is unknown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pseudo" })
  pseudo?: string;
}
