/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Defines the request schema for `/sandbox/bank_transfer/simulate`
 */
export class SandboxBankTransferSimulateRequest extends SpeakeasyBase {
  /**
   * Plaidâ€™s unique identifier for a bank transfer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bank_transfer_id" })
  bankTransferId: string;

  /**
   * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  /**
   * The asynchronous event to be simulated. May be: `posted`, `failed`, or `reversed`.
   *
   * @remarks
   *
   * An error will be returned if the event type is incompatible with the current transfer status. Compatible status --> event type transitions include:
   *
   * `pending` --> `failed`
   *
   * `pending` --> `posted`
   *
   * `posted` --> `reversed`
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_type" })
  eventType: string;

  /**
   * The failure reason if the type of this transfer is `"failed"` or `"reversed"`. Null value otherwise.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failure_reason" })
  failureReason?: Record<string, any>;

  /**
   * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;
}
