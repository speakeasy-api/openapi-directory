/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Value } from "./value";
import { Expose, Type } from "class-transformer";

/**
 * A position in a query result set.
 */
export class Cursor extends SpeakeasyBase {
  /**
   * If the position is just before or just after the given values, relative to the sort order defined by the query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "before" })
  before?: boolean;

  /**
   * The values that represent a position, in the order they appear in the order by clause of a query. Can contain fewer values than specified in the order by clause.
   */
  @SpeakeasyMetadata({ elemType: Value })
  @Expose({ name: "values" })
  @Type(() => Value)
  values?: Value[];
}
