// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// GoogleCloudDialogflowV2beta1QueryResult - Represents the result of conversational query or event processing.
type GoogleCloudDialogflowV2beta1QueryResult struct {
	// The action name from the matched intent.
	Action *string `json:"action,omitempty"`
	// This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters.
	AllRequiredParamsPresent *bool `json:"allRequiredParamsPresent,omitempty"`
	// Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
	CancelsSlotFilling *bool `json:"cancelsSlotFilling,omitempty"`
	// Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors
	DiagnosticInfo map[string]interface{} `json:"diagnosticInfo,omitempty"`
	// The collection of rich messages to present to the user.
	FulfillmentMessages []GoogleCloudDialogflowV2beta1IntentMessage `json:"fulfillmentMessages,omitempty"`
	// The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.
	FulfillmentText *string `json:"fulfillmentText,omitempty"`
	// An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).
	Intent *GoogleCloudDialogflowV2beta1Intent `json:"intent,omitempty"`
	// The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.
	IntentDetectionConfidence *float32 `json:"intentDetectionConfidence,omitempty"`
	// Represents the result of querying a Knowledge base.
	KnowledgeAnswers *GoogleCloudDialogflowV2beta1KnowledgeAnswers `json:"knowledgeAnswers,omitempty"`
	// The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
	LanguageCode *string `json:"languageCode,omitempty"`
	// The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.
	OutputContexts []GoogleCloudDialogflowV2beta1Context `json:"outputContexts,omitempty"`
	// The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value
	Parameters map[string]interface{} `json:"parameters,omitempty"`
	// The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input.
	QueryText *string `json:"queryText,omitempty"`
	// The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config
	SentimentAnalysisResult *GoogleCloudDialogflowV2beta1SentimentAnalysisResult `json:"sentimentAnalysisResult,omitempty"`
	// The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.
	SpeechRecognitionConfidence *float32 `json:"speechRecognitionConfidence,omitempty"`
	// If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.
	WebhookPayload map[string]interface{} `json:"webhookPayload,omitempty"`
	// If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response.
	WebhookSource *string `json:"webhookSource,omitempty"`
}
