/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum UpdateNetworkWirelessSsidBonjourForwardingRequestBodyRulesServicesEnum {
  Afp = "AFP",
  AirPlay = "AirPlay",
  AllServices = "All Services",
  BitTorrent = "BitTorrent",
  Ftp = "FTP",
  Printers = "Printers",
  Ssh = "SSH",
  Samba = "Samba",
  Scanners = "Scanners",
  IChat = "iChat",
  ITunes = "iTunes",
}

export class UpdateNetworkWirelessSsidBonjourForwardingRequestBodyRules extends SpeakeasyBase {
  /**
   * A description for your Bonjour forwarding rule. Optional.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "services" })
  services: UpdateNetworkWirelessSsidBonjourForwardingRequestBodyRulesServicesEnum[];

  /**
   * The ID of the service VLAN. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanId" })
  vlanId: string;
}

export class UpdateNetworkWirelessSsidBonjourForwardingRequestBody extends SpeakeasyBase {
  /**
   * If true, Bonjour forwarding is enabled on this SSID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * List of bonjour forwarding rules.
   */
  @SpeakeasyMetadata({
    elemType: UpdateNetworkWirelessSsidBonjourForwardingRequestBodyRules,
  })
  @Expose({ name: "rules" })
  @Type(() => UpdateNetworkWirelessSsidBonjourForwardingRequestBodyRules)
  rules?: UpdateNetworkWirelessSsidBonjourForwardingRequestBodyRules[];
}

export class UpdateNetworkWirelessSsidBonjourForwardingRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateNetworkWirelessSsidBonjourForwardingRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=number",
  })
  number: string;
}

export class UpdateNetworkWirelessSsidBonjourForwardingResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkWirelessSsidBonjourForwarding200ApplicationJSONObject?: Record<
    string,
    any
  >;
}
