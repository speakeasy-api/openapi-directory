/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateDownloadShareRequest - Request model for creating a Download Share
 */
public class CreateDownloadShareRequest {
    /**
     * &amp;#128679; Deprecated since v4.20.0
     * 
     * Language tag for messages to creator
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creatorLanguage")
    public String creatorLanguage;
    public CreateDownloadShareRequest withCreatorLanguage(String creatorLanguage) {
        this.creatorLanguage = creatorLanguage;
        return this;
    }
    
    /**
     * Expiration information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiration")
    public ObjectExpiration expiration;
    public CreateDownloadShareRequest withExpiration(ObjectExpiration expiration) {
        this.expiration = expiration;
        return this;
    }
    
    /**
     * File key information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileKey")
    public FileKey fileKey;
    public CreateDownloadShareRequest withFileKey(FileKey fileKey) {
        this.fileKey = fileKey;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Internal notes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalNotes")
    public String internalNotes;
    public CreateDownloadShareRequest withInternalNotes(String internalNotes) {
        this.internalNotes = internalNotes;
        return this;
    }
    
    /**
     * Key pair container
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyPair")
    public UserKeyPairContainer keyPair;
    public CreateDownloadShareRequest withKeyPair(UserKeyPairContainer keyPair) {
        this.keyPair = keyPair;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * Notification email content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mailBody")
    public String mailBody;
    public CreateDownloadShareRequest withMailBody(String mailBody) {
        this.mailBody = mailBody;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * CSV string of recipient email addresses
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mailRecipients")
    public String mailRecipients;
    public CreateDownloadShareRequest withMailRecipients(String mailRecipients) {
        this.mailRecipients = mailRecipients;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * Notification email subject
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mailSubject")
    public String mailSubject;
    public CreateDownloadShareRequest withMailSubject(String mailSubject) {
        this.mailSubject = mailSubject;
        return this;
    }
    
    /**
     * Max allowed downloads
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDownloads")
    public Integer maxDownloads;
    public CreateDownloadShareRequest withMaxDownloads(Integer maxDownloads) {
        this.maxDownloads = maxDownloads;
        return this;
    }
    
    /**
     * Alias name
     * 
     * (default: name of the shared node)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CreateDownloadShareRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Source node ID
     */
    @JsonProperty("nodeId")
    public Long nodeId;
    public CreateDownloadShareRequest withNodeId(Long nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    /**
     * User notes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public CreateDownloadShareRequest withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.20.0
     * 
     * Notify creator on every download.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifyCreator")
    public Boolean notifyCreator;
    public CreateDownloadShareRequest withNotifyCreator(Boolean notifyCreator) {
        this.notifyCreator = notifyCreator;
        return this;
    }
    
    /**
     * Access password, not allowed for encrypted shares
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;
    public CreateDownloadShareRequest withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Language tag for messages to receiver
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receiverLanguage")
    public String receiverLanguage;
    public CreateDownloadShareRequest withReceiverLanguage(String receiverLanguage) {
        this.receiverLanguage = receiverLanguage;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * Notify recipients via email
     * 
     * Please use `POST /shares/downloads/{share_id}/email` API instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sendMail")
    public Boolean sendMail;
    public CreateDownloadShareRequest withSendMail(Boolean sendMail) {
        this.sendMail = sendMail;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * Send share password via SMS
     * 
     * Please use `textMessageRecipients` attribute instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sendSms")
    public Boolean sendSms;
    public CreateDownloadShareRequest withSendSms(Boolean sendSms) {
        this.sendSms = sendSms;
        return this;
    }
    
    /**
     * Show creator first and last name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showCreatorName")
    public Boolean showCreatorName;
    public CreateDownloadShareRequest withShowCreatorName(Boolean showCreatorName) {
        this.showCreatorName = showCreatorName;
        return this;
    }
    
    /**
     * Show creator email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showCreatorUsername")
    public Boolean showCreatorUsername;
    public CreateDownloadShareRequest withShowCreatorUsername(Boolean showCreatorUsername) {
        this.showCreatorUsername = showCreatorUsername;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * CSV string of recipient MSISDNs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smsRecipients")
    public String smsRecipients;
    public CreateDownloadShareRequest withSmsRecipients(String smsRecipients) {
        this.smsRecipients = smsRecipients;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * List of recipient FQTNs
     * 
     * E.123 / E.164 Format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textMessageRecipients")
    public String[] textMessageRecipients;
    public CreateDownloadShareRequest withTextMessageRecipients(String[] textMessageRecipients) {
        this.textMessageRecipients = textMessageRecipients;
        return this;
    }
    
}
