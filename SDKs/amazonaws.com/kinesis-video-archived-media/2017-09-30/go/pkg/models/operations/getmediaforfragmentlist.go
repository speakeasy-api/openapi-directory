// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetMediaForFragmentListRequestBody struct {
	// A list of the numbers of fragments for which to retrieve media. You retrieve these values with <a>ListFragments</a>.
	Fragments []string `json:"Fragments"`
	// The Amazon Resource Name (ARN) of the stream from which to retrieve fragment media. Specify either this parameter or the <code>StreamName</code> parameter.
	StreamARN *string `json:"StreamARN,omitempty"`
	// The name of the stream from which to retrieve fragment media. Specify either this parameter or the <code>StreamARN</code> parameter.
	StreamName *string `json:"StreamName,omitempty"`
}

type GetMediaForFragmentListRequest struct {
	RequestBody       GetMediaForFragmentListRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GetMediaForFragmentListResponse struct {
	// ClientLimitExceededException
	ClientLimitExceededException interface{}
	ContentType                  string
	// Success
	GetMediaForFragmentListOutput *shared.GetMediaForFragmentListOutput
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
