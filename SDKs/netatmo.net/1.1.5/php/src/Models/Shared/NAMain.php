<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class NAMain
{
	#[\JMS\Serializer\Annotation\SerializedName('_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('cipher_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cipherId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('co2_calibrating')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $co2Calibrating = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('dashboard_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NADashboardData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NADashboardData $dashboardData = null;
    
    /**
     * $dataType
     * 
     * @var ?array<string> $dataType
     */
	#[\JMS\Serializer\Annotation\SerializedName('data_type')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dataType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('date_setup')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $dateSetup = null;
    
    /**
     * true when the device is a user favorite and not owned by them
     * 
     * @var ?bool $favorite
     */
	#[\JMS\Serializer\Annotation\SerializedName('favorite')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $favorite = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('firmware')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $firmware = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_setup')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $lastSetup = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_status_store')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $lastStatusStore = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_upgrade')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $lastUpgrade = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('module_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $moduleName = null;
    
    /**
     * $modules
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NAStationModule> $modules
     */
	#[\JMS\Serializer\Annotation\SerializedName('modules')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NAStationModule>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $modules = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('place')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NAPlace')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NAPlace $place = null;
    
    /**
     * true when the station was seen by the Netatmo cloud within the last 4 hours
     * 
     * @var ?bool $reachable
     */
	#[\JMS\Serializer\Annotation\SerializedName('reachable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $reachable = null;
    
    /**
     * true when the user was invited to (or has favorited) a station, false when the user owns it
     * 
     * @var ?bool $readOnly
     */
	#[\JMS\Serializer\Annotation\SerializedName('read_only')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $readOnly = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('station_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stationName = null;
    
    /**
     * Included in every device or module. It defines the type of the device/module. Its values are among :
     * 
     * NAMain : for the base station
     * NAModule1 : for the outdoor module
     * NAModule4 : for the additionnal indoor module
     * NAModule3 : for the rain gauge module
     * NAPlug : for the thermostat relay/plug
     * NATherm1 : for the thermostat module
     * 
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * It contains the current wifi status. The different thresholds to take into account are
     * 
     * RSSI_THRESHOLD_0 = 86 bad signal
     * RSSI_THRESHOLD_1 = 71 middle quality signal
     * RSSI_THRESHOLD_2 = 56 good signal
     * 
     * 
     * @var ?int $wifiStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('wifi_status')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $wifiStatus = null;
    
	public function __construct()
	{
		$this->id = null;
		$this->cipherId = null;
		$this->co2Calibrating = null;
		$this->dashboardData = null;
		$this->dataType = null;
		$this->dateSetup = null;
		$this->favorite = null;
		$this->firmware = null;
		$this->lastSetup = null;
		$this->lastStatusStore = null;
		$this->lastUpgrade = null;
		$this->moduleName = null;
		$this->modules = null;
		$this->place = null;
		$this->reachable = null;
		$this->readOnly = null;
		$this->stationName = null;
		$this->type = null;
		$this->wifiStatus = null;
	}
}
