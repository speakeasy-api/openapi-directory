"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchLoadProgressReport:
    r"""Details about the progress of a batch load task."""
    
    bytes_metered: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BytesMetered'), 'exclude': lambda f: f is None }})  
    file_failures: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FileFailures'), 'exclude': lambda f: f is None }})  
    parse_failures: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ParseFailures'), 'exclude': lambda f: f is None }})  
    record_ingestion_failures: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecordIngestionFailures'), 'exclude': lambda f: f is None }})  
    records_ingested: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecordsIngested'), 'exclude': lambda f: f is None }})  
    records_processed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecordsProcessed'), 'exclude': lambda f: f is None }})  
    