/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 *  The criteria for a behavior.
 */
export enum ListActiveViolationsBehaviorCriteriaTypeEnum {
  Static = "STATIC",
  Statistical = "STATISTICAL",
  MachineLearning = "MACHINE_LEARNING",
}

/**
 * The verification state of the violation (detect alarm).
 */
export enum ListActiveViolationsVerificationStateEnum {
  FalsePositive = "FALSE_POSITIVE",
  BenignPositive = "BENIGN_POSITIVE",
  TruePositive = "TRUE_POSITIVE",
  Unknown = "UNKNOWN",
}

export class ListActiveViolationsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   *  The criteria for a behavior.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=behaviorCriteriaType",
  })
  behaviorCriteriaType?: ListActiveViolationsBehaviorCriteriaTypeEnum;

  /**
   *  A list of all suppressed alerts.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=listSuppressedAlerts",
  })
  listSuppressedAlerts?: boolean;

  /**
   * The maximum number of results to return at one time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxResults",
  })
  maxResults?: number;

  /**
   * The token for the next set of results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=nextToken",
  })
  nextToken?: string;

  /**
   * The name of the Device Defender security profile for which violations are listed.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=securityProfileName",
  })
  securityProfileName?: string;

  /**
   * The name of the thing whose active violations are listed.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=thingName",
  })
  thingName?: string;

  /**
   * The verification state of the violation (detect alarm).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=verificationState",
  })
  verificationState?: ListActiveViolationsVerificationStateEnum;
}

export class ListActiveViolationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listActiveViolationsResponse?: shared.ListActiveViolationsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;
}
