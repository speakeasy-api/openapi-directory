"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import paymentdispute as shared_paymentdispute
from typing import Optional

GET_PAYMENT_DISPUTE_SERVERS = [
	"https://apiz.ebay.com{basePath}",
    r"""Production"""
]


@dataclasses.dataclass
class GetPaymentDisputeSecurity:
    
    api_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetPaymentDisputeRequest:
    
    payment_dispute_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'payment_dispute_id', 'style': 'simple', 'explode': False }})
    r"""This is the unique identifier of the payment dispute. This path parameter must be passed in at the end of the call URI to identify the payment dispute to retrieve. This identifier is automatically created by eBay once the payment dispute comes into the eBay system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong> response."""  
    

@dataclasses.dataclass
class GetPaymentDisputeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    payment_dispute: Optional[shared_paymentdispute.PaymentDispute] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    