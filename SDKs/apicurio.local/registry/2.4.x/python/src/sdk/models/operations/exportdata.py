"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import downloadref as shared_downloadref
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class ExportDataRequest:
    
    for_browser: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'forBrowser', 'style': 'form', 'explode': True }})
    r"""Indicates if the operation is done for a browser.  If true, the response will be a JSON payload with a property called `href`.  This `href` will be a single-use, naked download link suitable for use by a web browser to download the content."""  
    

@dataclasses.dataclass
class ExportDataResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    download_ref: Optional[shared_downloadref.DownloadRef] = dataclasses.field(default=None)
    r"""Response when the export is successful."""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Common response for all operations that can fail with an unexpected server error."""  
    file_content: Optional[bytes] = dataclasses.field(default=None)
    r"""Response when the export is successful."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    