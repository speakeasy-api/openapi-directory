/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LineItemPricingTaxDetail } from "./lineitempricingtaxdetail";
import { OrderFee } from "./orderfee";
import { Expose, Type } from "class-transformer";

export class OrderPricing extends SpeakeasyBase {
  /**
   * Discount from promotional pricing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount" })
  discount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fees" })
  @Type(() => OrderFee)
  fees: OrderFee;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Sum of list prices for the entire cart
   */
  @SpeakeasyMetadata()
  @Expose({ name: "list" })
  list: number;

  /**
   * Savings off of list price <pre>`savings` = `list` - `subtotal`</pre>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "savings" })
  savings: number;

  /**
   * Price with `discount` and without taxes or fees
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subtotal" })
  subtotal: number;

  /**
   * A collection of line item tax details
   */
  @SpeakeasyMetadata({ elemType: LineItemPricingTaxDetail })
  @Expose({ name: "taxDetails" })
  @Type(() => LineItemPricingTaxDetail)
  taxDetails?: LineItemPricingTaxDetail[];

  /**
   * Taxes for the entire cart
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxes" })
  taxes: number;

  /**
   * Price the customer pays <pre>`total` = `subtotal` + `taxes` + `fees.total`</pre>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;
}
