/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class LabOrderIcd10Code extends SpeakeasyBase {
  /**
   * The numeric ICD-10 code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Short description  of the ICD-10 code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;
}

/**
 * `"Normal"` or `"STAT"`. Default `"Normal"`
 */
export enum LabOrderPriorityEnum {
  N = "N",
  S = "S",
}

/**
 * Created
 */
export class LabOrder extends SpeakeasyBase {
  /**
   * For external use only
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accession_number" })
  accessionNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "doctor" })
  doctor: number;

  /**
   * Associated `/lab_documents` objects
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documents" })
  documents?: string[];

  /**
   * ICD-10 codes of the conditions which the tests concerns.
   */
  @SpeakeasyMetadata({ elemType: LabOrderIcd10Code })
  @Expose({ name: "icd10_codes" })
  @Type(() => LabOrderIcd10Code)
  icd10Codes?: LabOrderIcd10Code[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "patient" })
  patient: number;

  /**
   * `"Normal"` or `"STAT"`. Default `"Normal"`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: LabOrderPriorityEnum;

  /**
   * The ID printed on the requisition PDF. Generally the same as id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requisition_id" })
  requisitionId?: string;

  /**
   * Equivalent to HL7's ORC.5. Defaults to `"N"`.
   *
   * @remarks
   * Value | Notes
   * ----- | -----
   * `"N"` | not sent                                          |
   * `"Q"` | queued for processing                             |
   * `"A"` | `ABN (Advance Beneficiary Notice)` required       |
   * `"S"` | send                                              |
   * `"R"` | results received                                  |
   * `"E"` | error                                             |
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sublab" })
  sublab: number;

  /**
   * Time at which the order was submitted. Defaults to now
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;
}
