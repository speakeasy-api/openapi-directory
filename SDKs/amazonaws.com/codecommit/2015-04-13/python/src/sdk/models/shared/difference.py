"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import blobmetadata as shared_blobmetadata
from ..shared import changetypeenum_enum as shared_changetypeenum_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Difference:
    r"""Returns information about a set of differences for a commit specifier."""
    
    after_blob: Optional[shared_blobmetadata.BlobMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('afterBlob'), 'exclude': lambda f: f is None }})  
    before_blob: Optional[shared_blobmetadata.BlobMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beforeBlob'), 'exclude': lambda f: f is None }})  
    change_type: Optional[shared_changetypeenum_enum.ChangeTypeEnumEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('changeType'), 'exclude': lambda f: f is None }})  
    