"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import holiday as shared_holiday
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProvinceIDEnum(str, Enum):
    r"""Canadian province abbreviations"""
    AB = 'AB'
    BC = 'BC'
    MB = 'MB'
    NB = 'NB'
    NL = 'NL'
    NS = 'NS'
    NT = 'NT'
    NU = 'NU'
    ON = 'ON'
    PE = 'PE'
    QC = 'QC'
    SK = 'SK'
    YT = 'YT'

class ProvinceOptionalEnum(str, Enum):
    r"""Whether this province optionally observes a given holiday."""
    ONE = '1'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Province:
    r"""A Canadian province or territory"""
    
    id: ProvinceIDEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Canadian province abbreviations"""  
    name_en: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameEn') }})
    r"""English name"""  
    name_fr: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameFr') }})
    r"""French name"""  
    source_en: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceEn') }})
    r"""Name of reference page with public holidays for this region"""  
    source_link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceLink') }})
    r"""URL to public holidays reference for this region"""  
    next_holiday: Optional[shared_holiday.Holiday] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextHoliday'), 'exclude': lambda f: f is None }})
    r"""A Canadian holiday. Includes a name, the literal date of the holiday, the observed date of the holiday (ie, accommodating for weekends), and a list of regions that observe this holiday."""  
    optional: Optional[ProvinceOptionalEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('optional'), 'exclude': lambda f: f is None }})
    r"""Whether this province optionally observes a given holiday."""  
    provinces: Optional[list[shared_holiday.Holiday]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provinces'), 'exclude': lambda f: f is None }})  
    