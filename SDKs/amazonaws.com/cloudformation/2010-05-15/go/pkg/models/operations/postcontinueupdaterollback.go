// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTContinueUpdateRollbackActionEnum
type POSTContinueUpdateRollbackActionEnum string

const (
	POSTContinueUpdateRollbackActionEnumContinueUpdateRollback POSTContinueUpdateRollbackActionEnum = "ContinueUpdateRollback"
)

func (e *POSTContinueUpdateRollbackActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ContinueUpdateRollback":
		*e = POSTContinueUpdateRollbackActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTContinueUpdateRollbackActionEnum: %s", s)
	}
}

// POSTContinueUpdateRollbackVersionEnum
type POSTContinueUpdateRollbackVersionEnum string

const (
	POSTContinueUpdateRollbackVersionEnumTwoThousandAndTen0515 POSTContinueUpdateRollbackVersionEnum = "2010-05-15"
)

func (e *POSTContinueUpdateRollbackVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = POSTContinueUpdateRollbackVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTContinueUpdateRollbackVersionEnum: %s", s)
	}
}

type POSTContinueUpdateRollbackQueryParams struct {
	Action  POSTContinueUpdateRollbackActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTContinueUpdateRollbackVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTContinueUpdateRollbackHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTContinueUpdateRollbackRequest struct {
	QueryParams POSTContinueUpdateRollbackQueryParams
	Headers     POSTContinueUpdateRollbackHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTContinueUpdateRollbackResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
