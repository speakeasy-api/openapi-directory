/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetADeviceSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class GetADeviceRequest extends SpeakeasyBase {
  /**
   * Unique Identifier of the device.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=deviceId",
  })
  deviceId: string;
}

/**
 * User to whom the device has been assigned.
 */
export class GetADevice200ApplicationXMLAssignee extends SpeakeasyBase {
  /**
   * Extension number of the Zoom Phone used by the user.
   */
  @SpeakeasyMetadata()
  extensionNumber?: number;

  /**
   * User ID of the user to whom the device has been assigned.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the user.
   */
  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Line subscription.
 */
export class GetADevice200ApplicationXMLProvisionSipAccountsSharedLineLineSubscription extends SpeakeasyBase {
  /**
   * Display name.
   */
  @SpeakeasyMetadata()
  displayName?: string;

  /**
   * Extension number.
   */
  @SpeakeasyMetadata()
  extensionNumber?: number;

  /**
   * Phone number.
   */
  @SpeakeasyMetadata()
  phoneNumber?: string;
}

/**
 * Return additional provisioning information with generic device SIP credentials.
 */
export class GetADevice200ApplicationXMLProvisionSipAccountsSharedLine extends SpeakeasyBase {
  /**
   * Alias.
   */
  @SpeakeasyMetadata()
  alias?: string;

  /**
   * Line subscription.
   */
  @SpeakeasyMetadata()
  lineSubscription?: GetADevice200ApplicationXMLProvisionSipAccountsSharedLineLineSubscription;

  /**
   * Outbound caller ID.
   */
  @SpeakeasyMetadata()
  outboundCallerId?: string;
}

export class GetADevice200ApplicationXMLProvisionSipAccounts extends SpeakeasyBase {
  /**
   * Authorization ID of the SIP account provided in the provisioning process.
   */
  @SpeakeasyMetadata()
  authorizationId?: string;

  /**
   * Outbound proxy provided in the provisioning process.
   */
  @SpeakeasyMetadata()
  outboundProxy?: string;

  /**
   * Password entered during the  provisioning process.
   */
  @SpeakeasyMetadata()
  password?: string;

  /**
   * Return additional provisioning information with generic device SIP credentials.
   */
  @SpeakeasyMetadata()
  sharedLine?: GetADevice200ApplicationXMLProvisionSipAccountsSharedLine;

  /**
   * SIP Domain provided in the provisioning process.<br>
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  sipDomain?: string;

  /**
   * User name of the SIP account provided in the provisioning process.
   */
  @SpeakeasyMetadata()
  userName?: string;
}

/**
 * [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
 *
 * @remarks
 *
 * * `ztp` : Zero touch provisioning.
 * * `assisted`: Assisted provisioning.
 * * `manual`: Manual provisioning.
 *
 *
 */
export enum GetADevice200ApplicationXMLProvisionTypeEnum {
  Assisted = "assisted",
  Ztp = "ztp",
  Manual = "manual",
}

/**
 * Provisioning information of a device.
 */
export class GetADevice200ApplicationXMLProvision extends SpeakeasyBase {
  /**
   * SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.
   */
  @SpeakeasyMetadata({
    elemType: GetADevice200ApplicationXMLProvisionSipAccounts,
  })
  sipAccounts?: GetADevice200ApplicationXMLProvisionSipAccounts[];

  /**
   * [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
   *
   * @remarks
   *
   * * `ztp` : Zero touch provisioning.
   * * `assisted`: Assisted provisioning.
   * * `manual`: Manual provisioning.
   *
   *
   */
  @SpeakeasyMetadata()
  type?: GetADevice200ApplicationXMLProvisionTypeEnum;

  /**
   * Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.
   */
  @SpeakeasyMetadata()
  url?: string;
}

export class GetADevice200ApplicationXMLSite extends SpeakeasyBase {
  /**
   * The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).
   */
  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Status of the device. The value is either `online` or `offline`.
 */
export enum GetADevice200ApplicationXMLStatusEnum {
  Online = "online",
  Offline = "offline",
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Device information retrieved successfully.
 */
export class GetADevice200ApplicationXML extends SpeakeasyBase {
  /**
   * User to whom the device has been assigned.
   */
  @SpeakeasyMetadata()
  assignee?: GetADevice200ApplicationXMLAssignee;

  /**
   * Includes manufacturer name and the model name.
   */
  @SpeakeasyMetadata()
  deviceType?: string;

  /**
   * Display name of the device.
   */
  @SpeakeasyMetadata()
  displayName?: string;

  /**
   * Device ID - Unique Identifier of the Device.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * MAC address or serial number of the device.
   */
  @SpeakeasyMetadata()
  macAddress?: string;

  /**
   * Provisioning information of a device.
   */
  @SpeakeasyMetadata()
  provision?: GetADevice200ApplicationXMLProvision;

  @SpeakeasyMetadata()
  site?: GetADevice200ApplicationXMLSite;

  /**
   * Status of the device. The value is either `online` or `offline`.
   */
  @SpeakeasyMetadata()
  status?: GetADevice200ApplicationXMLStatusEnum;
}

/**
 * User to whom the device has been assigned.
 */
export class GetADevice200ApplicationJSONAssignee extends SpeakeasyBase {
  /**
   * Extension number of the Zoom Phone used by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: number;

  /**
   * User ID of the user to whom the device has been assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Line subscription.
 */
export class GetADevice200ApplicationJSONProvisionSipAccountsSharedLineLineSubscription extends SpeakeasyBase {
  /**
   * Display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * Extension number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: number;

  /**
   * Phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;
}

/**
 * Return additional provisioning information with generic device SIP credentials.
 */
export class GetADevice200ApplicationJSONProvisionSipAccountsSharedLine extends SpeakeasyBase {
  /**
   * Alias.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alias" })
  alias?: string;

  /**
   * Line subscription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line_subscription" })
  @Type(
    () =>
      GetADevice200ApplicationJSONProvisionSipAccountsSharedLineLineSubscription
  )
  lineSubscription?: GetADevice200ApplicationJSONProvisionSipAccountsSharedLineLineSubscription;

  /**
   * Outbound caller ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outbound_caller_id" })
  outboundCallerId?: string;
}

export class GetADevice200ApplicationJSONProvisionSipAccounts extends SpeakeasyBase {
  /**
   * Authorization ID of the SIP account provided in the provisioning process.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorization_id" })
  authorizationId?: string;

  /**
   * Outbound proxy provided in the provisioning process.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outbound_proxy" })
  outboundProxy?: string;

  /**
   * Password entered during the  provisioning process.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * Return additional provisioning information with generic device SIP credentials.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shared_line" })
  @Type(() => GetADevice200ApplicationJSONProvisionSipAccountsSharedLine)
  sharedLine?: GetADevice200ApplicationJSONProvisionSipAccountsSharedLine;

  /**
   * SIP Domain provided in the provisioning process.<br>
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sip_domain" })
  sipDomain?: string;

  /**
   * User name of the SIP account provided in the provisioning process.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_name" })
  userName?: string;
}

/**
 * [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
 *
 * @remarks
 *
 * * `ztp` : Zero touch provisioning.
 * * `assisted`: Assisted provisioning.
 * * `manual`: Manual provisioning.
 *
 *
 */
export enum GetADevice200ApplicationJSONProvisionTypeEnum {
  Assisted = "assisted",
  Ztp = "ztp",
  Manual = "manual",
}

/**
 * Provisioning information of a device.
 */
export class GetADevice200ApplicationJSONProvision extends SpeakeasyBase {
  /**
   * SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.
   */
  @SpeakeasyMetadata({
    elemType: GetADevice200ApplicationJSONProvisionSipAccounts,
  })
  @Expose({ name: "sip_accounts" })
  @Type(() => GetADevice200ApplicationJSONProvisionSipAccounts)
  sipAccounts?: GetADevice200ApplicationJSONProvisionSipAccounts[];

  /**
   * [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
   *
   * @remarks
   *
   * * `ztp` : Zero touch provisioning.
   * * `assisted`: Assisted provisioning.
   * * `manual`: Manual provisioning.
   *
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetADevice200ApplicationJSONProvisionTypeEnum;

  /**
   * Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

export class GetADevice200ApplicationJSONSite extends SpeakeasyBase {
  /**
   * The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Status of the device. The value is either `online` or `offline`.
 */
export enum GetADevice200ApplicationJSONStatusEnum {
  Online = "online",
  Offline = "offline",
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Device information retrieved successfully.
 */
export class GetADevice200ApplicationJSON extends SpeakeasyBase {
  /**
   * User to whom the device has been assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignee" })
  @Type(() => GetADevice200ApplicationJSONAssignee)
  assignee?: GetADevice200ApplicationJSONAssignee;

  /**
   * Includes manufacturer name and the model name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "device_type" })
  deviceType?: string;

  /**
   * Display name of the device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * Device ID - Unique Identifier of the Device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * MAC address or serial number of the device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mac_address" })
  macAddress?: string;

  /**
   * Provisioning information of a device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision" })
  @Type(() => GetADevice200ApplicationJSONProvision)
  provision?: GetADevice200ApplicationJSONProvision;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  @Type(() => GetADevice200ApplicationJSONSite)
  site?: GetADevice200ApplicationJSONSite;

  /**
   * Status of the device. The value is either `online` or `offline`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetADevice200ApplicationJSONStatusEnum;
}

export class GetADeviceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK**<br>
   *
   * @remarks
   * Device information retrieved successfully.
   */
  @SpeakeasyMetadata()
  getADevice200ApplicationJSONObject?: GetADevice200ApplicationJSON;
}
