<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Video
{
    /**
     * Element's cache policy. When true, the cached version (if exists) is used. When false, the assets is downloaded.
     * 
     * @var ?bool $cache
     */
	#[\JMS\Serializer\Annotation\SerializedName('cache')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cache = null;
    
    /**
     * Allows to define a color (or a range of colors) that will be converted to transparent
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VideoChromaKey $chromaKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('chroma-key')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoChromaKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VideoChromaKey $chromaKey = null;
    
    /**
     * Used for adding your comments
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
    /**
     * Crops the element
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VideoCrop $crop
     */
	#[\JMS\Serializer\Annotation\SerializedName('crop')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoCrop')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VideoCrop $crop = null;
    
    /**
     * Element's duration in seconds. A value of -1 auto calculates the duration based on the asset intrinsic length or the scene duration.
     * 
     * @var ?float $duration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $duration = null;
    
    /**
     * Element's time span added after the playback.
     * 
     * @var ?float $extraTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('extra-time')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $extraTime = null;
    
    /**
     * Adds a fade in effect to the element. Value in seconds.
     * 
     * @var ?float $fadeIn
     */
	#[\JMS\Serializer\Annotation\SerializedName('fade-in')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $fadeIn = null;
    
    /**
     * Adds a fade out effect to the element. Value in seconds.
     * 
     * @var ?float $fadeOut
     */
	#[\JMS\Serializer\Annotation\SerializedName('fade-out')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $fadeOut = null;
    
    /**
     * Sets the number of loops the video to play. Use -1 for an infinite loop. The default value of 1 plays the video just once.
     * 
     * @var ?int $loop
     */
	#[\JMS\Serializer\Annotation\SerializedName('loop')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $loop = null;
    
    /**
     * Mutes the audio
     * 
     * @var ?bool $muted
     */
	#[\JMS\Serializer\Annotation\SerializedName('muted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $muted = null;
    
    /**
     * Pans the element to the specified direction. If <code>zoom</code> property is not specified, the effect is a non-zooming pan
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VideoPanEnum $pan
     */
	#[\JMS\Serializer\Annotation\SerializedName('pan')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VideoPanEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VideoPanEnum $pan = null;
    
    /**
     * Sets the element position in the scene. A value of 'custom' sets a custom position based on the provided 'x' and 'y' properties
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VideoPositionEnum $position
     */
	#[\JMS\Serializer\Annotation\SerializedName('position')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VideoPositionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VideoPositionEnum $position = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('rotate')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoRotate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VideoRotate $rotate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('scale')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoScale')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VideoScale $scale = null;
    
    /**
     * URL to the asset file. Videos can be in MP4, MKV, MOV but MP4 is recommended.
     * 
     * @var ?string $src
     */
	#[\JMS\Serializer\Annotation\SerializedName('src')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $src = null;
    
    /**
     * Element's starting time in seconds relative to the container scene or the movie if the element is in the Movie's elements array.
     * 
     * @var ?float $start
     */
	#[\JMS\Serializer\Annotation\SerializedName('start')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $start = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VideoTypeEnum>')]
    public VideoTypeEnum $type;
    
	#[\JMS\Serializer\Annotation\SerializedName('volume')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $volume = null;
    
    /**
     * Sets the horizontal position of the element in the scene. The value <code>0</code> is on the left side
     * 
     * @var ?float $x
     */
	#[\JMS\Serializer\Annotation\SerializedName('x')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $x = null;
    
    /**
     * Sets the vertical position of the element in the scene. The value <code>0</code> is on the top side
     * 
     * @var ?float $y
     */
	#[\JMS\Serializer\Annotation\SerializedName('y')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $y = null;
    
    /**
     * Element's z-index. Use this property to reorganize the layering of the elements like in HTML
     * 
     * @var ?float $zIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('z-index')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $zIndex = null;
    
    /**
     * Zooms the element with the specified level percentage. Positive values zoom in, negative values zoom out, zero does not zoom. Zoom can be combined with the <code>pan</code> property to set the focus point of the zooming
     * 
     * @var ?int $zoom
     */
	#[\JMS\Serializer\Annotation\SerializedName('zoom')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $zoom = null;
    
	public function __construct()
	{
		$this->cache = null;
		$this->chromaKey = null;
		$this->comment = null;
		$this->crop = null;
		$this->duration = null;
		$this->extraTime = null;
		$this->fadeIn = null;
		$this->fadeOut = null;
		$this->loop = null;
		$this->muted = null;
		$this->pan = null;
		$this->position = null;
		$this->rotate = null;
		$this->scale = null;
		$this->src = null;
		$this->start = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\VideoTypeEnum::VIDEO;
		$this->volume = null;
		$this->x = null;
		$this->y = null;
		$this->zIndex = null;
		$this->zoom = null;
	}
}
