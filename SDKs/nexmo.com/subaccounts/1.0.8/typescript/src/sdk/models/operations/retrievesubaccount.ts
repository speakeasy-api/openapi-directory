/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class RetrieveSubaccountSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class RetrieveSubaccountRequest extends SpeakeasyBase {
  /**
   * ID of the primary account
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=api_key",
  })
  apiKey: string;

  /**
   * ID of the subaccount
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=subaccount_key",
  })
  subaccountKey: string;
}

/**
 * Invalid API Key
 */
export class RetrieveSubaccount404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

/**
 * Credential is missing or invalid
 */
export class RetrieveSubaccount401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class RetrieveSubaccountResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Subaccount response
   */
  @SpeakeasyMetadata()
  subaccountResponse?: shared.SubaccountResponse;

  /**
   * Action is forbidden
   */
  @SpeakeasyMetadata()
  unprovisionedErrorResponse?: shared.UnprovisionedErrorResponse;

  /**
   * Credential is missing or invalid
   */
  @SpeakeasyMetadata()
  retrieveSubaccount401ApplicationJSONObject?: RetrieveSubaccount401ApplicationJSON;

  /**
   * The account ID provided does not exist in our system or you do not have access
   */
  @SpeakeasyMetadata()
  retrieveSubaccount404ApplicationJSONObject?: RetrieveSubaccount404ApplicationJSON;
}
