"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import appexternalcpd as shared_appexternalcpd
from ..shared import dnsruledescriptor as shared_dnsruledescriptor
from ..shared import featuredependency as shared_featuredependency
from ..shared import latencydescriptor as shared_latencydescriptor
from ..shared import servicedependency as shared_servicedependency
from ..shared import servicedescriptor as shared_servicedescriptor
from ..shared import trafficruledescriptor as shared_trafficruledescriptor
from ..shared import transportdependency as shared_transportdependency
from typing import Optional


@dataclasses.dataclass
class AppD:
    r"""Content of the AppD is returned."""
    
    app_description: str = dataclasses.field()
    r"""Human readable description of the MEC application."""  
    app_d_id: str = dataclasses.field()
    r"""Identifier of this MEC application descriptor. This attribute shall be globally unique. See noteÂ 1."""  
    app_d_version: str = dataclasses.field()
    r"""Identifies the version of the application descriptor."""  
    app_name: str = dataclasses.field()
    r"""Name to identify the MEC application."""  
    app_provider: str = dataclasses.field()
    r"""Provider of the application and of the AppD."""  
    app_soft_version: str = dataclasses.field()
    r"""Identifies the version of software of the MEC application."""  
    mec_version: list[str] = dataclasses.field()
    r"""Identifies version(s) of MEC system compatible with the MEC application described in this version of the AppD."""  
    sw_image_descriptor: str = dataclasses.field()
    r"""Ref NFV"""  
    virtual_compute_descriptor: str = dataclasses.field()
    r"""Ref NFV"""  
    app_dns_rule: Optional[list[shared_dnsruledescriptor.DNSRuleDescriptor]] = dataclasses.field(default=None)
    r"""Describes DNS rules the MEC application requires."""  
    app_ext_cpd: Optional[list[shared_appexternalcpd.AppExternalCpd]] = dataclasses.field(default=None)
    r"""Describes external interface(s) exposed by this MEC application."""  
    app_feature_optional: Optional[list[shared_featuredependency.FeatureDependency]] = dataclasses.field(default=None)
    r"""Describes features a MEC application may use if available."""  
    app_feature_required: Optional[list[shared_featuredependency.FeatureDependency]] = dataclasses.field(default=None)
    r"""Describes features a MEC application requires to run."""  
    app_info_name: Optional[str] = dataclasses.field(default=None)
    r"""Human readable name for the MEC application."""  
    app_latency: Optional[shared_latencydescriptor.LatencyDescriptor] = dataclasses.field(default=None)  
    app_service_optional: Optional[list[shared_servicedependency.ServiceDependency]] = dataclasses.field(default=None)
    r"""Describes services a MEC application may use if available."""  
    app_service_produced: Optional[list[shared_servicedescriptor.ServiceDescriptor]] = dataclasses.field(default=None)
    r"""Describes services a MEC application is able to produce to the platform or other MEC applications. Only relevant for service-producing apps."""  
    app_service_required: Optional[list[shared_servicedependency.ServiceDependency]] = dataclasses.field(default=None)
    r"""Describes services a MEC application requires to run."""  
    app_traffic_rule: Optional[list[shared_trafficruledescriptor.TrafficRuleDescriptor]] = dataclasses.field(default=None)
    r"""Describes traffic rules the MEC application requires."""  
    change_app_instance_state_op_config: Optional[str] = dataclasses.field(default=None)
    r"""NFV"""  
    terminate_app_instance_op_config: Optional[str] = dataclasses.field(default=None)
    r"""NFV"""  
    transport_dependencies: Optional[list[shared_transportdependency.TransportDependency]] = dataclasses.field(default=None)
    r"""Transports, if any, that this application requires to be provided by the platform. These transports will be used by the application to deliver services provided by this application. Only relevant for service-producing apps. See note 2."""  
    virtual_storage_descriptor: Optional[list[str]] = dataclasses.field(default=None)
    r"""Defines descriptors of virtual storage resources to be used by the MEC application."""  
    