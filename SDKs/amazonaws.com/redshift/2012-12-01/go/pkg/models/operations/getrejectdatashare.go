// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRejectDataShareActionEnum
type GETRejectDataShareActionEnum string

const (
	GETRejectDataShareActionEnumRejectDataShare GETRejectDataShareActionEnum = "RejectDataShare"
)

func (e *GETRejectDataShareActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RejectDataShare":
		*e = GETRejectDataShareActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRejectDataShareActionEnum: %s", s)
	}
}

// GETRejectDataShareVersionEnum
type GETRejectDataShareVersionEnum string

const (
	GETRejectDataShareVersionEnumTwoThousandAndTwelve1201 GETRejectDataShareVersionEnum = "2012-12-01"
)

func (e *GETRejectDataShareVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETRejectDataShareVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRejectDataShareVersionEnum: %s", s)
	}
}

type GETRejectDataShareRequest struct {
	Action GETRejectDataShareActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The Amazon Resource Name (ARN) of the datashare to reject.
	DataShareArn      string                        `queryParam:"style=form,explode=true,name=DataShareArn"`
	Version           GETRejectDataShareVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRejectDataShareResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
