// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartFraudsterRegistrationJobXAmzTargetEnum
type StartFraudsterRegistrationJobXAmzTargetEnum string

const (
	StartFraudsterRegistrationJobXAmzTargetEnumVoiceIDStartFraudsterRegistrationJob StartFraudsterRegistrationJobXAmzTargetEnum = "VoiceID.StartFraudsterRegistrationJob"
)

func (e StartFraudsterRegistrationJobXAmzTargetEnum) ToPointer() *StartFraudsterRegistrationJobXAmzTargetEnum {
	return &e
}

func (e *StartFraudsterRegistrationJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VoiceID.StartFraudsterRegistrationJob":
		*e = StartFraudsterRegistrationJobXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartFraudsterRegistrationJobXAmzTargetEnum: %v", v)
	}
}

type StartFraudsterRegistrationJobRequest struct {
	StartFraudsterRegistrationJobRequest shared.StartFraudsterRegistrationJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           StartFraudsterRegistrationJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartFraudsterRegistrationJobResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// Success
	StartFraudsterRegistrationJobResponse *shared.StartFraudsterRegistrationJobResponse
	StatusCode                            int
	RawResponse                           *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
