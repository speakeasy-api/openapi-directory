/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class MeetingRecordingRegistrantStatusSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export enum MeetingRecordingRegistrantStatusApplicationJSONActionEnum {
  Approve = "approve",
  Deny = "deny",
}

export class MeetingRecordingRegistrantStatusApplicationJSONRegistrants extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

/**
 * Registrant Status
 */
export class MeetingRecordingRegistrantStatusApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action: MeetingRecordingRegistrantStatusApplicationJSONActionEnum;

  /**
   * List of registrants
   */
  @SpeakeasyMetadata({
    elemType: MeetingRecordingRegistrantStatusApplicationJSONRegistrants,
  })
  @Expose({ name: "registrants" })
  @Type(() => MeetingRecordingRegistrantStatusApplicationJSONRegistrants)
  registrants?: MeetingRecordingRegistrantStatusApplicationJSONRegistrants[];
}

export class MeetingRecordingRegistrantStatusRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: MeetingRecordingRegistrantStatusApplicationJSON;

  /**
   * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
   *
   * @remarks
   *
   * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=meetingId",
  })
  meetingId: number;
}

export class MeetingRecordingRegistrantStatusResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
