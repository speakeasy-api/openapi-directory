// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReservationAffinityConsumeReservationTypeEnum - Optional. Type of reservation to consume
type ReservationAffinityConsumeReservationTypeEnum string

const (
	ReservationAffinityConsumeReservationTypeEnumTypeUnspecified     ReservationAffinityConsumeReservationTypeEnum = "TYPE_UNSPECIFIED"
	ReservationAffinityConsumeReservationTypeEnumNoReservation       ReservationAffinityConsumeReservationTypeEnum = "NO_RESERVATION"
	ReservationAffinityConsumeReservationTypeEnumAnyReservation      ReservationAffinityConsumeReservationTypeEnum = "ANY_RESERVATION"
	ReservationAffinityConsumeReservationTypeEnumSpecificReservation ReservationAffinityConsumeReservationTypeEnum = "SPECIFIC_RESERVATION"
)

func (e *ReservationAffinityConsumeReservationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "NO_RESERVATION":
		fallthrough
	case "ANY_RESERVATION":
		fallthrough
	case "SPECIFIC_RESERVATION":
		*e = ReservationAffinityConsumeReservationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReservationAffinityConsumeReservationTypeEnum: %s", s)
	}
}

// ReservationAffinity - Reservation Affinity for consuming Zonal reservation.
type ReservationAffinity struct {
	// Optional. Type of reservation to consume
	ConsumeReservationType *ReservationAffinityConsumeReservationTypeEnum `json:"consumeReservationType,omitempty"`
	// Optional. Corresponds to the label key of reservation resource.
	Key *string `json:"key,omitempty"`
	// Optional. Corresponds to the label values of reservation resource.
	Values []string `json:"values,omitempty"`
}
