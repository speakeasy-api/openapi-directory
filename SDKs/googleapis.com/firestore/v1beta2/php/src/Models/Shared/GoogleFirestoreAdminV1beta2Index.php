<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleFirestoreAdminV1beta2Index - Cloud Firestore indexes enable simple and complex queries against documents in a database.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleFirestoreAdminV1beta2Index
{
    /**
     * The fields supported by this index. For composite indexes, this is always 2 or more fields. The last field entry is always for the field path `__name__`. If, on creation, `__name__` was not specified as the last field, it will be added automatically with the same direction as that of the last field defined. If the final field in a composite index is not directional, the `__name__` will be ordered ASCENDING (unless explicitly specified). For single field indexes, this will always be exactly one entry with a field path equal to the field path of the associated field.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleFirestoreAdminV1beta2IndexField> $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleFirestoreAdminV1beta2IndexField>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fields = null;
    
    /**
     * Output only. A server defined name for this index. The form of this name for composite indexes will be: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}` For single field indexes, this field will be empty.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleFirestoreAdminV1beta2IndexQueryScopeEnum $queryScope
     */
	#[\JMS\Serializer\Annotation\SerializedName('queryScope')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleFirestoreAdminV1beta2IndexQueryScopeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleFirestoreAdminV1beta2IndexQueryScopeEnum $queryScope = null;
    
    /**
     * Output only. The serving state of the index.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleFirestoreAdminV1beta2IndexStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleFirestoreAdminV1beta2IndexStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleFirestoreAdminV1beta2IndexStateEnum $state = null;
    
	public function __construct()
	{
		$this->fields = null;
		$this->name = null;
		$this->queryScope = null;
		$this->state = null;
	}
}
