"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAnalyticsAdminV1alphaDataRetentionSettingsEventDataRetentionEnum(str, Enum):
    r"""The length of time that event-level data is retained."""
    RETENTION_DURATION_UNSPECIFIED = 'RETENTION_DURATION_UNSPECIFIED'
    TWO_MONTHS = 'TWO_MONTHS'
    FOURTEEN_MONTHS = 'FOURTEEN_MONTHS'
    TWENTY_SIX_MONTHS = 'TWENTY_SIX_MONTHS'
    THIRTY_EIGHT_MONTHS = 'THIRTY_EIGHT_MONTHS'
    FIFTY_MONTHS = 'FIFTY_MONTHS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsAdminV1alphaDataRetentionSettings:
    r"""Settings values for data retention. This is a singleton resource."""
    
    event_data_retention: Optional[GoogleAnalyticsAdminV1alphaDataRetentionSettingsEventDataRetentionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventDataRetention'), 'exclude': lambda f: f is None }})
    r"""The length of time that event-level data is retained."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Resource name for this DataRetentionSetting resource. Format: properties/{property}/dataRetentionSettings"""  
    reset_user_data_on_new_activity: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resetUserDataOnNewActivity'), 'exclude': lambda f: f is None }})
    r"""If true, reset the retention period for the user identifier with every event from that user."""  
    