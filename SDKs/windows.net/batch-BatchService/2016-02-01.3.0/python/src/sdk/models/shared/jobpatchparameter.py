"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import jobconstraints as shared_jobconstraints
from ..shared import metadataitem as shared_metadataitem
from ..shared import poolinformation as shared_poolinformation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobPatchParameter:
    r"""Parameters for a CloudJobOperations.Patch request."""
    
    constraints: Optional[shared_jobconstraints.JobConstraints] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('constraints'), 'exclude': lambda f: f is None }})
    r"""Specifies the execution constraints for jobs created on a schedule."""  
    metadata: Optional[list[shared_metadataitem.MetadataItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""A list of name-value pairs associated with the job as metadata. If omitted, the existing job metadata is left unchanged."""  
    pool_info: Optional[shared_poolinformation.PoolInformation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('poolInfo'), 'exclude': lambda f: f is None }})
    r"""Specifies how a job should be assigned to a pool."""  
    priority: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priority'), 'exclude': lambda f: f is None }})
    r"""The priority of the job. Priority values can range from -1000 to 1000, with -1000 being the lowest priority and 1000 being the highest priority. If omitted, the priority of the job is left unchanged."""  
    