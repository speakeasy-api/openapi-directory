"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import instancereference as shared_instancereference
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnPremisesConfiguration:
    r"""On-premises instance configuration."""
    
    ca_certificate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caCertificate'), 'exclude': lambda f: f is None }})
    r"""PEM representation of the trusted CA's x509 certificate."""  
    client_certificate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientCertificate'), 'exclude': lambda f: f is None }})
    r"""PEM representation of the replica's x509 certificate."""  
    client_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientKey'), 'exclude': lambda f: f is None }})
    r"""PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate."""  
    dump_file_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dumpFilePath'), 'exclude': lambda f: f is None }})
    r"""The dump file to create the Cloud SQL replica."""  
    host_port: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hostPort'), 'exclude': lambda f: f is None }})
    r"""The host and port of the on-premises instance in host:port format"""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""This is always `sql#onPremisesConfiguration`."""  
    password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password'), 'exclude': lambda f: f is None }})
    r"""The password for connecting to on-premises instance."""  
    source_instance: Optional[shared_instancereference.InstanceReference] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceInstance'), 'exclude': lambda f: f is None }})
    r"""Reference to another Cloud SQL instance."""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username'), 'exclude': lambda f: f is None }})
    r"""The username for connecting to on-premises instance."""  
    