/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CreateNetworkFirmwareUpgradesRollback200ApplicationJSON - Successful operation
 */
public class CreateNetworkFirmwareUpgradesRollback200ApplicationJSON {
    /**
     * Product type to rollback (if the network is a combined network)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("product")
    public CreateNetworkFirmwareUpgradesRollback200ApplicationJSONProductEnum product;
    public CreateNetworkFirmwareUpgradesRollback200ApplicationJSON withProduct(CreateNetworkFirmwareUpgradesRollback200ApplicationJSONProductEnum product) {
        this.product = product;
        return this;
    }
    
    /**
     * Reasons for the rollback
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reasons")
    public CreateNetworkFirmwareUpgradesRollback200ApplicationJSONReasons[] reasons;
    public CreateNetworkFirmwareUpgradesRollback200ApplicationJSON withReasons(CreateNetworkFirmwareUpgradesRollback200ApplicationJSONReasons[] reasons) {
        this.reasons = reasons;
        return this;
    }
    
    /**
     * Status of the rollback
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public CreateNetworkFirmwareUpgradesRollback200ApplicationJSONStatusEnum status;
    public CreateNetworkFirmwareUpgradesRollback200ApplicationJSON withStatus(CreateNetworkFirmwareUpgradesRollback200ApplicationJSONStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Scheduled time for the rollback
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("time")
    public OffsetDateTime time;
    public CreateNetworkFirmwareUpgradesRollback200ApplicationJSON withTime(OffsetDateTime time) {
        this.time = time;
        return this;
    }
    
    /**
     * Version to downgrade to (if the network has firmware flexibility)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("toVersion")
    public CreateNetworkFirmwareUpgradesRollback200ApplicationJSONToVersion toVersion;
    public CreateNetworkFirmwareUpgradesRollback200ApplicationJSON withToVersion(CreateNetworkFirmwareUpgradesRollback200ApplicationJSONToVersion toVersion) {
        this.toVersion = toVersion;
        return this;
    }
    
    /**
     * Batch ID of the firmware rollback
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upgradeBatchId")
    public String upgradeBatchId;
    public CreateNetworkFirmwareUpgradesRollback200ApplicationJSON withUpgradeBatchId(String upgradeBatchId) {
        this.upgradeBatchId = upgradeBatchId;
        return this;
    }
    
}
