<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateArtifactRequest
{
    /**
     * The content of the artifact being created. This is often, but not always, JSON data
     * 
     * representing one of the supported artifact types:
     * 
     * * Avro (`AVRO`)
     * * Protobuf (`PROTOBUF`)
     * * Protobuf File Descriptor (`PROTOBUF_FD`)
     * * JSON Schema (`JSON`)
     * * Kafka Connect (`KCONNECT`)
     * * OpenAPI (`OPENAPI`)
     * * AsyncAPI (`ASYNCAPI`)
     * * GraphQL (`GRAPHQL`)
     * * Web Services Description Language (`WSDL`)
     * * XML Schema (`XSD`)
     * 
     * 
     * @var string $requestBody
     */
	#[SpeakeasyMetadata('request:mediaType=*/*')]
    public string $requestBody;
    
    /**
     * A client-provided, globally unique identifier for the new artifact.
     * 
     * @var ?string $xRegistryArtifactId
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Registry-ArtifactId')]
    public ?string $xRegistryArtifactId = null;
    
    /**
     * Specifies the type of the artifact being added. Possible values include:
     * 
     * 
     * * Avro (`AVRO`)
     * * Protobuf (`PROTOBUF`)
     * * Protobuf File Descriptor (`PROTOBUF_FD`)
     * * JSON Schema (`JSON`)
     * * Kafka Connect (`KCONNECT`)
     * * OpenAPI (`OPENAPI`)
     * * AsyncAPI (`ASYNCAPI`)
     * * GraphQL (`GRAPHQL`)
     * * Web Services Description Language (`WSDL`)
     * * XML Schema (`XSD`)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateArtifactXRegistryArtifactTypeEnum $xRegistryArtifactType
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Registry-ArtifactType')]
    public ?CreateArtifactXRegistryArtifactTypeEnum $xRegistryArtifactType = null;
    
    /**
     * Set this option to instruct the server on what to do if the artifact already exists.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateArtifactIfExistsEnum $ifExists
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ifExists')]
    public ?CreateArtifactIfExistsEnum $ifExists = null;
    
	public function __construct()
	{
		$this->requestBody = "";
		$this->xRegistryArtifactId = null;
		$this->xRegistryArtifactType = null;
		$this->ifExists = null;
	}
}
