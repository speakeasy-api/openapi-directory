/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JWKSAlgoSettings - Settings for a JWK set
 */
public class JWKSAlgoSettings {
    /**
     * The headers for the http call
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public java.util.Map<String, String> headers;

    public JWKSAlgoSettings withHeaders(java.util.Map<String, String> headers) {
        this.headers = headers;
        return this;
    }
    
    /**
     * The type of key: RSA or EC
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kty")
    public String kty;

    public JWKSAlgoSettings withKty(String kty) {
        this.kty = kty;
        return this;
    }
    
    /**
     * The timeout of the http call
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeout")
    public Long timeout;

    public JWKSAlgoSettings withTimeout(Long timeout) {
        this.timeout = timeout;
        return this;
    }
    
    /**
     * The ttl of the keyset
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ttl")
    public Long ttl;

    public JWKSAlgoSettings withTtl(Long ttl) {
        this.ttl = ttl;
        return this;
    }
    
    /**
     * String with value JWKSAlgoSettings
     */
    @JsonProperty("type")
    public String type;

    public JWKSAlgoSettings withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * The url for the http call
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public JWKSAlgoSettings withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public JWKSAlgoSettings(@JsonProperty("type") String type) {
        this.type = type;
  }
}
