// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ScriptErrorErrorCodeEnum - The type of error.
type ScriptErrorErrorCodeEnum string

const (
	ScriptErrorErrorCodeEnumErrorCodeUnspecified ScriptErrorErrorCodeEnum = "ERROR_CODE_UNSPECIFIED"
	ScriptErrorErrorCodeEnumSyntaxError          ScriptErrorErrorCodeEnum = "SYNTAX_ERROR"
	ScriptErrorErrorCodeEnumDeprecatedSyntax     ScriptErrorErrorCodeEnum = "DEPRECATED_SYNTAX"
	ScriptErrorErrorCodeEnumInternalError        ScriptErrorErrorCodeEnum = "INTERNAL_ERROR"
)

func (e ScriptErrorErrorCodeEnum) ToPointer() *ScriptErrorErrorCodeEnum {
	return &e
}

func (e *ScriptErrorErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERROR_CODE_UNSPECIFIED":
		fallthrough
	case "SYNTAX_ERROR":
		fallthrough
	case "DEPRECATED_SYNTAX":
		fallthrough
	case "INTERNAL_ERROR":
		*e = ScriptErrorErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScriptErrorErrorCodeEnum: %v", v)
	}
}

// ScriptError - An error message for a custom bidding script.
type ScriptError struct {
	// The column number in the script where the error was thrown.
	Column *string `json:"column,omitempty"`
	// The type of error.
	ErrorCode *ScriptErrorErrorCodeEnum `json:"errorCode,omitempty"`
	// The detailed error message.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// The line number in the script where the error was thrown.
	Line *string `json:"line,omitempty"`
}
