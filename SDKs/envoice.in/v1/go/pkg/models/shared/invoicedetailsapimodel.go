// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// InvoiceDetailsAPIModelStatusEnum - Indicate the status of the invoice (paid/unpaid/overdue)
type InvoiceDetailsAPIModelStatusEnum string

const (
	InvoiceDetailsAPIModelStatusEnumDraft   InvoiceDetailsAPIModelStatusEnum = "Draft"
	InvoiceDetailsAPIModelStatusEnumPaid    InvoiceDetailsAPIModelStatusEnum = "Paid"
	InvoiceDetailsAPIModelStatusEnumUnpaid  InvoiceDetailsAPIModelStatusEnum = "Unpaid"
	InvoiceDetailsAPIModelStatusEnumOverdue InvoiceDetailsAPIModelStatusEnum = "Overdue"
	InvoiceDetailsAPIModelStatusEnumVoid    InvoiceDetailsAPIModelStatusEnum = "Void"
)

func (e *InvoiceDetailsAPIModelStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Draft":
		fallthrough
	case "Paid":
		fallthrough
	case "Unpaid":
		fallthrough
	case "Overdue":
		fallthrough
	case "Void":
		*e = InvoiceDetailsAPIModelStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceDetailsAPIModelStatusEnum: %s", s)
	}
}

type InvoiceDetailsAPIModel struct {
	// Security access token used for accessing the invoice anonymously
	AccessToken *string                `json:"AccessToken,omitempty"`
	Client      *ClientDetailsAPIModel `json:"Client,omitempty"`
	// Indicate from which invoice this invoice has been cloned from
	ClonedFromID *int                     `json:"ClonedFromId,omitempty"`
	Currency     *CurrencyDetailsAPIModel `json:"Currency,omitempty"`
	// Amount that goes as a discount
	DiscountAmount *float64 `json:"DiscountAmount,omitempty"`
	// Indicates when the invoice will be proclamed as due
	Duedate *time.Time `json:"Duedate,omitempty"`
	// Indicate that the invoice allows the user to pay the invoice partially
	EnablePartialPayments *bool `json:"EnablePartialPayments,omitempty"`
	// Invoice id
	ID *int `json:"Id,omitempty"`
	// Hold the id of the invoice category
	InvoiceCategoryID *int `json:"InvoiceCategoryId,omitempty"`
	// Indicates when the invoice was issued
	IssuedOn *time.Time `json:"IssuedOn,omitempty"`
	// Internal note regarding the invoice
	Notes *string `json:"Notes,omitempty"`
	// Unique invoice number
	Number *string `json:"Number,omitempty"`
	// Unique number generated by the buyer
	PoNumber *string `json:"PoNumber,omitempty"`
	// Definition of invoice recurring profile
	RecurringProfile *InvoiceRecurringAPIModel `json:"RecurringProfile,omitempty"`
	// Hold the id of the recurring profile
	RecurringProfileID *int `json:"RecurringProfileId,omitempty"`
	// Should send email reminders to client?
	ShouldSendReminders *bool `json:"ShouldSendReminders,omitempty"`
	// Indicate the status of the invoice (paid/unpaid/overdue)
	Status *InvoiceDetailsAPIModelStatusEnum `json:"Status,omitempty"`
	// Total amount of the invoice without tax
	SubTotalAmount *float64 `json:"SubTotalAmount,omitempty"`
	// Amount that goes to the tax
	TaxAmount *float64 `json:"TaxAmount,omitempty"`
	// Terms of agreement
	Terms *string `json:"Terms,omitempty"`
	// Total amount of the invoice with tax
	TotalAmount *float64 `json:"TotalAmount,omitempty"`
}
