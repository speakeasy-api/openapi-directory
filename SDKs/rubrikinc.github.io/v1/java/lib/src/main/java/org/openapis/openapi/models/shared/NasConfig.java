/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NasConfig {
    /**
     * TLS certification to validate NAS server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiCertificate")
    public String apiCertificate;

    public NasConfig withApiCertificate(String apiCertificate) {
        this.apiCertificate = apiCertificate;
        return this;
    }
    
    /**
     * API endpoint to access NAS API 'FLASHBLADE'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiEndpoint")
    public String apiEndpoint;

    public NasConfig withApiEndpoint(String apiEndpoint) {
        this.apiEndpoint = apiEndpoint;
        return this;
    }
    
    /**
     * Hostname or IP used in the NAS API calls.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiHostname")
    public String apiHostname;

    public NasConfig withApiHostname(String apiHostname) {
        this.apiHostname = apiHostname;
        return this;
    }
    
    /**
     * Password to access NAS API 'ISILON/NETAPP'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiPassword")
    public String apiPassword;

    public NasConfig withApiPassword(String apiPassword) {
        this.apiPassword = apiPassword;
        return this;
    }
    
    /**
     * API token to access NAS API 'FLASHBLADE'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiToken")
    public String apiToken;

    public NasConfig withApiToken(String apiToken) {
        this.apiToken = apiToken;
        return this;
    }
    
    /**
     * Username to access NAS API 'ISILON/NETAPP'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiUsername")
    public String apiUsername;

    public NasConfig withApiUsername(String apiUsername) {
        this.apiUsername = apiUsername;
        return this;
    }
    
    /**
     * Indicates if Changelist is enabled on Isilon NAS share. When this value is 'true', metadata fetches during backup operations use the Isilon Changelist feature. The Changelist feature improves incremental backup performance by tracking the difference between two snapshots, reducing the metadata scanning time during a backup job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isIsilonChangelistEnabled")
    public Boolean isIsilonChangelistEnabled;

    public NasConfig withIsIsilonChangelistEnabled(Boolean isIsilonChangelistEnabled) {
        this.isIsilonChangelistEnabled = isIsilonChangelistEnabled;
        return this;
    }
    
    /**
     * Indicates if SnapDiff is enabled on NetApp NAS share. When this value is 'true', metadata fetches during backup operations use the NetApp SnapDiff feature. The SnapDiff feature improves incremental backup performance by tracking the difference between two snapshots, reducing the metadata scanning time during a backup job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isNetAppSnapDiffEnabled")
    public Boolean isNetAppSnapDiffEnabled;

    public NasConfig withIsNetAppSnapDiffEnabled(Boolean isNetAppSnapDiffEnabled) {
        this.isNetAppSnapDiffEnabled = isNetAppSnapDiffEnabled;
        return this;
    }
    
    /**
     * Specifies whether shares on the NAS host are automatically discovered. When this value is 'true', Rubrik periodically (every 30 minutes by default) connects to the NAS host to discover NFS and SMB shares.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isShareAutoDiscoveryEnabled")
    public Boolean isShareAutoDiscoveryEnabled;

    public NasConfig withIsShareAutoDiscoveryEnabled(Boolean isShareAutoDiscoveryEnabled) {
        this.isShareAutoDiscoveryEnabled = isShareAutoDiscoveryEnabled;
        return this;
    }
    
    /**
     * Type of NAS vendor 'ISILON/NETAPP/FLASHBLADE'.
     */
    @JsonProperty("vendorType")
    public String vendorType;

    public NasConfig withVendorType(String vendorType) {
        this.vendorType = vendorType;
        return this;
    }
    
    /**
     * Name of the Isilon zone that data IP belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zoneName")
    public String zoneName;

    public NasConfig withZoneName(String zoneName) {
        this.zoneName = zoneName;
        return this;
    }
    
    public NasConfig(@JsonProperty("vendorType") String vendorType) {
        this.vendorType = vendorType;
  }
}
