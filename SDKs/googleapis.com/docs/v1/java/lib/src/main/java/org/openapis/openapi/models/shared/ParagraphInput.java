/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ParagraphInput - A StructuralElement representing a paragraph. A paragraph is a range of content that's terminated with a newline character.
 */
public class ParagraphInput {
    /**
     * Describes the bullet of a paragraph.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bullet")
    public Bullet bullet;

    public ParagraphInput withBullet(Bullet bullet) {
        this.bullet = bullet;
        return this;
    }
    
    /**
     * The content of the paragraph, broken down into its component parts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("elements")
    public ParagraphElementInput[] elements;

    public ParagraphInput withElements(ParagraphElementInput[] elements) {
        this.elements = elements;
        return this;
    }
    
    /**
     * Styles that apply to a whole paragraph. Inherited paragraph styles are represented as unset fields in this message. A paragraph style's parent depends on where the paragraph style is defined: * The ParagraphStyle on a Paragraph inherits from the paragraph's corresponding named style type. * The ParagraphStyle on a named style inherits from the normal text named style. * The ParagraphStyle of the normal text named style inherits from the default paragraph style in the Docs editor. * The ParagraphStyle on a Paragraph element that's contained in a table may inherit its paragraph style from the table style. If the paragraph style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paragraphStyle")
    public ParagraphStyle paragraphStyle;

    public ParagraphInput withParagraphStyle(ParagraphStyle paragraphStyle) {
        this.paragraphStyle = paragraphStyle;
        return this;
    }
    
    /**
     * The IDs of the positioned objects tethered to this paragraph.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("positionedObjectIds")
    public String[] positionedObjectIds;

    public ParagraphInput withPositionedObjectIds(String[] positionedObjectIds) {
        this.positionedObjectIds = positionedObjectIds;
        return this;
    }
    
    /**
     * The suggested changes to this paragraph's bullet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedBulletChanges")
    public java.util.Map<String, SuggestedBullet> suggestedBulletChanges;

    public ParagraphInput withSuggestedBulletChanges(java.util.Map<String, SuggestedBullet> suggestedBulletChanges) {
        this.suggestedBulletChanges = suggestedBulletChanges;
        return this;
    }
    
    /**
     * The suggested paragraph style changes to this paragraph, keyed by suggestion ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedParagraphStyleChanges")
    public java.util.Map<String, SuggestedParagraphStyle> suggestedParagraphStyleChanges;

    public ParagraphInput withSuggestedParagraphStyleChanges(java.util.Map<String, SuggestedParagraphStyle> suggestedParagraphStyleChanges) {
        this.suggestedParagraphStyleChanges = suggestedParagraphStyleChanges;
        return this;
    }
    
    /**
     * The IDs of the positioned objects suggested to be attached to this paragraph, keyed by suggestion ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedPositionedObjectIds")
    public java.util.Map<String, ObjectReferences> suggestedPositionedObjectIds;

    public ParagraphInput withSuggestedPositionedObjectIds(java.util.Map<String, ObjectReferences> suggestedPositionedObjectIds) {
        this.suggestedPositionedObjectIds = suggestedPositionedObjectIds;
        return this;
    }
    
    public ParagraphInput(){}
}
