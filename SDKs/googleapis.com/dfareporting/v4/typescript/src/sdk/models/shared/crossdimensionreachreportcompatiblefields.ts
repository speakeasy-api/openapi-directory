/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Dimension } from "./dimension";
import { Metric } from "./metric";
import { Expose, Type } from "class-transformer";

/**
 * Represents fields that are compatible to be selected for a report of type "CROSS_DIMENSION_REACH".
 */
export class CrossDimensionReachReportCompatibleFields extends SpeakeasyBase {
  /**
   * Dimensions which are compatible to be selected in the "breakdown" section of the report.
   */
  @SpeakeasyMetadata({ elemType: Dimension })
  @Expose({ name: "breakdown" })
  @Type(() => Dimension)
  breakdown?: Dimension[];

  /**
   * Dimensions which are compatible to be selected in the "dimensionFilters" section of the report.
   */
  @SpeakeasyMetadata({ elemType: Dimension })
  @Expose({ name: "dimensionFilters" })
  @Type(() => Dimension)
  dimensionFilters?: Dimension[];

  /**
   * The kind of resource this is, in this case dfareporting#crossDimensionReachReportCompatibleFields.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Metrics which are compatible to be selected in the "metricNames" section of the report.
   */
  @SpeakeasyMetadata({ elemType: Metric })
  @Expose({ name: "metrics" })
  @Type(() => Metric)
  metrics?: Metric[];

  /**
   * Metrics which are compatible to be selected in the "overlapMetricNames" section of the report.
   */
  @SpeakeasyMetadata({ elemType: Metric })
  @Expose({ name: "overlapMetrics" })
  @Type(() => Metric)
  overlapMetrics?: Metric[];
}
