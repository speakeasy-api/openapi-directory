/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2Finding - Represents a piece of potentially sensitive content.
 */
public class GooglePrivacyDlpV2Finding {
    /**
     * Timestamp when finding was detected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public GooglePrivacyDlpV2Finding withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * The unique finding id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("findingId")
    public String findingId;
    public GooglePrivacyDlpV2Finding withFindingId(String findingId) {
        this.findingId = findingId;
        return this;
    }
    
    /**
     * Type of information detected by the API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("infoType")
    public GooglePrivacyDlpV2InfoType infoType;
    public GooglePrivacyDlpV2Finding withInfoType(GooglePrivacyDlpV2InfoType infoType) {
        this.infoType = infoType;
        return this;
    }
    
    /**
     * Time the job started that produced this finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobCreateTime")
    public String jobCreateTime;
    public GooglePrivacyDlpV2Finding withJobCreateTime(String jobCreateTime) {
        this.jobCreateTime = jobCreateTime;
        return this;
    }
    
    /**
     * The job that stored the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobName")
    public String jobName;
    public GooglePrivacyDlpV2Finding withJobName(String jobName) {
        this.jobName = jobName;
        return this;
    }
    
    /**
     * The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public GooglePrivacyDlpV2Finding withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Confidence of how likely it is that the `info_type` is correct.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("likelihood")
    public GooglePrivacyDlpV2FindingLikelihoodEnum likelihood;
    public GooglePrivacyDlpV2Finding withLikelihood(GooglePrivacyDlpV2FindingLikelihoodEnum likelihood) {
        this.likelihood = likelihood;
        return this;
    }
    
    /**
     * Specifies the location of the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public GooglePrivacyDlpV2Location location;
    public GooglePrivacyDlpV2Finding withLocation(GooglePrivacyDlpV2Location location) {
        this.location = location;
        return this;
    }
    
    /**
     * Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GooglePrivacyDlpV2Finding withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quote")
    public String quote;
    public GooglePrivacyDlpV2Finding withQuote(String quote) {
        this.quote = quote;
        return this;
    }
    
    /**
     * Message for infoType-dependent details parsed from quote.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quoteInfo")
    public GooglePrivacyDlpV2QuoteInfo quoteInfo;
    public GooglePrivacyDlpV2Finding withQuoteInfo(GooglePrivacyDlpV2QuoteInfo quoteInfo) {
        this.quoteInfo = quoteInfo;
        return this;
    }
    
    /**
     * The job that stored the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceName")
    public String resourceName;
    public GooglePrivacyDlpV2Finding withResourceName(String resourceName) {
        this.resourceName = resourceName;
        return this;
    }
    
    /**
     * Job trigger name, if applicable, for this finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerName")
    public String triggerName;
    public GooglePrivacyDlpV2Finding withTriggerName(String triggerName) {
        this.triggerName = triggerName;
        return this;
    }
    
}
