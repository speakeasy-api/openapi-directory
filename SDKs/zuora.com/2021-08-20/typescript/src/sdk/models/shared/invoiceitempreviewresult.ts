/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class InvoiceItemPreviewResultAdditionalInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unitOfMeasure" })
  unitOfMeasure?: string;
}

export enum InvoiceItemPreviewResultProcessingTypeEnum {
  Charge = "Charge",
  Discount = "Discount",
  Tax = "Tax",
}

export class InvoiceItemPreviewResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "additionalInfo" })
  @Type(() => InvoiceItemPreviewResultAdditionalInfo)
  additionalInfo?: InvoiceItemPreviewResultAdditionalInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "amountWithoutTax" })
  amountWithoutTax?: number;

  /**
   * Available when the chargeNumber of the charge that discount applies to was specified in the request or when the order is amending an existing subscription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appliedToChargeNumber" })
  appliedToChargeNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "chargeDescription" })
  chargeDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "chargeName" })
  chargeName?: string;

  /**
   * Available when the chargeNumber was specified in the request or when the order is amending an existing subscription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chargeNumber" })
  chargeNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "processingType" })
  processingType?: InvoiceItemPreviewResultProcessingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "productName" })
  productName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "productRatePlanChargeId" })
  productRatePlanChargeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceEndDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceStartDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionNumber" })
  subscriptionNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "taxAmount" })
  taxAmount?: number;
}
