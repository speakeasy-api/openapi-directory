// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomFieldCompactResourceSubtypeEnum - The type of the custom field. Must be one of the given values.
type CustomFieldCompactResourceSubtypeEnum string

const (
	CustomFieldCompactResourceSubtypeEnumText      CustomFieldCompactResourceSubtypeEnum = "text"
	CustomFieldCompactResourceSubtypeEnumEnum      CustomFieldCompactResourceSubtypeEnum = "enum"
	CustomFieldCompactResourceSubtypeEnumMultiEnum CustomFieldCompactResourceSubtypeEnum = "multi_enum"
	CustomFieldCompactResourceSubtypeEnumNumber    CustomFieldCompactResourceSubtypeEnum = "number"
)

func (e *CustomFieldCompactResourceSubtypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "text":
		fallthrough
	case "enum":
		fallthrough
	case "multi_enum":
		fallthrough
	case "number":
		*e = CustomFieldCompactResourceSubtypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomFieldCompactResourceSubtypeEnum: %s", s)
	}
}

// CustomFieldCompactTypeEnum - *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.
type CustomFieldCompactTypeEnum string

const (
	CustomFieldCompactTypeEnumText      CustomFieldCompactTypeEnum = "text"
	CustomFieldCompactTypeEnumEnum      CustomFieldCompactTypeEnum = "enum"
	CustomFieldCompactTypeEnumMultiEnum CustomFieldCompactTypeEnum = "multi_enum"
	CustomFieldCompactTypeEnumNumber    CustomFieldCompactTypeEnum = "number"
)

func (e *CustomFieldCompactTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "text":
		fallthrough
	case "enum":
		fallthrough
	case "multi_enum":
		fallthrough
	case "number":
		*e = CustomFieldCompactTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomFieldCompactTypeEnum: %s", s)
	}
}

// CustomFieldCompact - Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [Custom Fields](/docs/asana-custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.
//
// Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.
type CustomFieldCompact struct {
	// A string representation for the value of the custom field. Integrations that don't require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.
	DisplayValue *string `json:"display_value,omitempty"`
	// *Conditional*. Determines if the custom field is enabled or not.
	Enabled *bool `json:"enabled,omitempty"`
	// *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).
	EnumOptions []EnumOption `json:"enum_options,omitempty"`
	// Globally unique identifier of the resource, as a string.
	Gid *string `json:"gid,omitempty"`
	// The name of the custom field.
	Name *string `json:"name,omitempty"`
	// *Conditional*. This number is the value of a number custom field.
	NumberValue *float64 `json:"number_value,omitempty"`
	// The type of the custom field. Must be one of the given values.
	//
	ResourceSubtype *CustomFieldCompactResourceSubtypeEnum `json:"resource_subtype,omitempty"`
	// The base type of this resource.
	ResourceType *string `json:"resource_type,omitempty"`
	// *Conditional*. This string is the value of a text custom field.
	TextValue *string `json:"text_value,omitempty"`
	// *Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.
	//
	Type *CustomFieldCompactTypeEnum `json:"type,omitempty"`
}
