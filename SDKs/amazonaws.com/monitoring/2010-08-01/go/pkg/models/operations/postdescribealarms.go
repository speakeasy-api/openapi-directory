// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeAlarmsActionEnum
type POSTDescribeAlarmsActionEnum string

const (
	POSTDescribeAlarmsActionEnumDescribeAlarms POSTDescribeAlarmsActionEnum = "DescribeAlarms"
)

func (e POSTDescribeAlarmsActionEnum) ToPointer() *POSTDescribeAlarmsActionEnum {
	return &e
}

func (e *POSTDescribeAlarmsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeAlarms":
		*e = POSTDescribeAlarmsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeAlarmsActionEnum: %v", v)
	}
}

// POSTDescribeAlarmsVersionEnum
type POSTDescribeAlarmsVersionEnum string

const (
	POSTDescribeAlarmsVersionEnumTwoThousandAndTen0801 POSTDescribeAlarmsVersionEnum = "2010-08-01"
)

func (e POSTDescribeAlarmsVersionEnum) ToPointer() *POSTDescribeAlarmsVersionEnum {
	return &e
}

func (e *POSTDescribeAlarmsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-08-01":
		*e = POSTDescribeAlarmsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeAlarmsVersionEnum: %v", v)
	}
}

type POSTDescribeAlarmsRequest struct {
	Action POSTDescribeAlarmsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxRecords *string `queryParam:"style=form,explode=true,name=MaxRecords"`
	// Pagination token
	NextToken         *string                       `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                        `request:"mediaType=text/xml"`
	Version           POSTDescribeAlarmsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeAlarmsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
