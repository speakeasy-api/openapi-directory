"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PlanDataTypeOfPlanBasedOnTheSourceEnum(str, Enum):
    STARTER = 'STARTER'
    SFDC_1_M_EDITION = 'SFDC_1M_EDITION'
    BRONZE = 'BRONZE'
    SILVER = 'SILVER'
    GOLD = 'GOLD'
    DATASET_DOWNLOAD = 'DATASET_DOWNLOAD'

class PlanDataServiceThatProvisionedThePlanEnum(str, Enum):
    SALESFORCE = 'SALESFORCE'
    HEROKU = 'HEROKU'
    SF_AUTO_PROVISION = 'SF_AUTO_PROVISION'
    SF_AUTO_PROVISION_BOUND = 'SF_AUTO_PROVISION_BOUND'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlanData:
    
    amount: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})  
    plan: Optional[PlanDataTypeOfPlanBasedOnTheSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan'), 'exclude': lambda f: f is None }})  
    source: Optional[PlanDataServiceThatProvisionedThePlanEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})  
    