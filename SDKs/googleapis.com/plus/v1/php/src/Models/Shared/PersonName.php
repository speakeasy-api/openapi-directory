<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PersonName - An object representation of the individual components of a person's name.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PersonName
{
    /**
     * The family name (last name) of this person.
     * 
     * @var ?string $familyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('familyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $familyName = null;
    
    /**
     * The full name of this person, including middle names, suffixes, etc.
     * 
     * @var ?string $formatted
     */
	#[\JMS\Serializer\Annotation\SerializedName('formatted')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formatted = null;
    
    /**
     * The given name (first name) of this person.
     * 
     * @var ?string $givenName
     */
	#[\JMS\Serializer\Annotation\SerializedName('givenName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $givenName = null;
    
    /**
     * The honorific prefixes (such as "Dr." or "Mrs.") for this person.
     * 
     * @var ?string $honorificPrefix
     */
	#[\JMS\Serializer\Annotation\SerializedName('honorificPrefix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $honorificPrefix = null;
    
    /**
     * The honorific suffixes (such as "Jr.") for this person.
     * 
     * @var ?string $honorificSuffix
     */
	#[\JMS\Serializer\Annotation\SerializedName('honorificSuffix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $honorificSuffix = null;
    
    /**
     * The middle name of this person.
     * 
     * @var ?string $middleName
     */
	#[\JMS\Serializer\Annotation\SerializedName('middleName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $middleName = null;
    
	public function __construct()
	{
		$this->familyName = null;
		$this->formatted = null;
		$this->givenName = null;
		$this->honorificPrefix = null;
		$this->honorificSuffix = null;
		$this->middleName = null;
	}
}
