/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ManagedCertificate - Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so.
 */
public class ManagedCertificate {
    /**
     * Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationAttemptInfo")
    public AuthorizationAttemptInfo[] authorizationAttemptInfo;
    public ManagedCertificate withAuthorizationAttemptInfo(AuthorizationAttemptInfo[] authorizationAttemptInfo) {
        this.authorizationAttemptInfo = authorizationAttemptInfo;
        return this;
    }
    
    /**
     * Immutable. Authorizations that will be used for performing domain authorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dnsAuthorizations")
    public String[] dnsAuthorizations;
    public ManagedCertificate withDnsAuthorizations(String[] dnsAuthorizations) {
        this.dnsAuthorizations = dnsAuthorizations;
        return this;
    }
    
    /**
     * Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domains")
    public String[] domains;
    public ManagedCertificate withDomains(String[] domains) {
        this.domains = domains;
        return this;
    }
    
    /**
     * Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/* /locations/* /certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issuanceConfig")
    public String issuanceConfig;
    public ManagedCertificate withIssuanceConfig(String issuanceConfig) {
        this.issuanceConfig = issuanceConfig;
        return this;
    }
    
    /**
     * Information about issues with provisioning a Managed Certificate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provisioningIssue")
    public ProvisioningIssue provisioningIssue;
    public ManagedCertificate withProvisioningIssue(ProvisioningIssue provisioningIssue) {
        this.provisioningIssue = provisioningIssue;
        return this;
    }
    
    /**
     * Output only. State of the managed certificate resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ManagedCertificateStateEnum state;
    public ManagedCertificate withState(ManagedCertificateStateEnum state) {
        this.state = state;
        return this;
    }
    
}
