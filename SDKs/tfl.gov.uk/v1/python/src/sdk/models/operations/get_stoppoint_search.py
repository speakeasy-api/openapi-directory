"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import tfl_api_presentation_entities_searchresponse as shared_tfl_api_presentation_entities_searchresponse
from typing import Optional


@dataclasses.dataclass
class GetStopPointSearchRequest:
    
    query: str = dataclasses.field(metadata={'query_param': { 'field_name': 'query', 'style': 'form', 'explode': True }})
    r"""The query string, case-insensitive. Leading and trailing wildcards are applied automatically."""  
    fares_only: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'faresOnly', 'style': 'form', 'explode': True }})
    r"""True to only return stations in that have Fares data available for single fares to another station."""  
    include_hubs: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includeHubs', 'style': 'form', 'explode': True }})
    r"""If true, returns results including HUBs."""  
    lines: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'lines', 'style': 'form', 'explode': True }})
    r"""An optional, parameter separated list of the lines to filter by"""  
    max_results: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxResults', 'style': 'form', 'explode': True }})
    r"""An optional result limit, defaulting to and with a maximum of 50. Since children of the stop point heirarchy are returned for matches,
                it is possible that the flattened result set will contain more than 50 items.
    """  
    modes: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'modes', 'style': 'form', 'explode': True }})
    r"""An optional, parameter separated list of the modes to filter by"""  
    tfl_operated_national_rail_stations_only: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tflOperatedNationalRailStationsOnly', 'style': 'form', 'explode': True }})
    r"""If the national-rail mode is included, this flag will filter the national rail stations so that only those operated by TfL are returned"""  
    

@dataclasses.dataclass
class GetStopPointSearchResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tfl_api_presentation_entities_search_response: Optional[shared_tfl_api_presentation_entities_searchresponse.TflAPIPresentationEntitiesSearchResponse] = dataclasses.field(default=None)
    r"""OK"""  
    