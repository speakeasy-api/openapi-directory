<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ShareAttributes - Attributes of the share including the name, path and share recipients. 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ShareAttributes
{
    /**
     * Description of the share access rights.
     * 
     * @var ?string $accessDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('accessDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accessDescription = null;
    
    /**
     * An object defining what a not-logged-in visitor can do with the share contents
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AccessMode $accessMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('accessMode')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AccessMode')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccessMode $accessMode = null;
    
    /**
     * Timestamp of share creation.
     * 
     * @var ?\DateTime $created
     */
	#[\JMS\Serializer\Annotation\SerializedName('created')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $created = null;
    
    /**
     * True if share can be embedded.
     * 
     * @var ?bool $embed
     */
	#[\JMS\Serializer\Annotation\SerializedName('embed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $embed = null;
    
    /**
     * Expiration date of the share.
     * 
     * @var ?string $expiration
     */
	#[\JMS\Serializer\Annotation\SerializedName('expiration')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expiration = null;
    
    /**
     * True if the share has expired.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShareAttributesExpiredEnum $expired
     */
	#[\JMS\Serializer\Annotation\SerializedName('expired')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ShareAttributesExpiredEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShareAttributesExpiredEnum $expired = null;
    
    /**
     * Flag to show if separate folders should be created for each file upload to receive folder.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShareAttributesFileDropCreateFoldersEnum $fileDropCreateFolders
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileDropCreateFolders')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ShareAttributesFileDropCreateFoldersEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShareAttributesFileDropCreateFoldersEnum $fileDropCreateFolders = null;
    
    /**
     * ID of the form.
     * 
     * @var ?int $formId
     */
	#[\JMS\Serializer\Annotation\SerializedName('formId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $formId = null;
    
    /**
     * True if share has notification.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShareAttributesHasNotificationEnum $hasNotification
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasNotification')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ShareAttributesHasNotificationEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShareAttributesHasNotificationEnum $hasNotification = null;
    
    /**
     * True if the share has password.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShareAttributesHasPasswordEnum $hasPassword
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasPassword')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ShareAttributesHasPasswordEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShareAttributesHasPasswordEnum $hasPassword = null;
    
    /**
     * Share hash.
     * 
     * @var ?string $hash
     */
	#[\JMS\Serializer\Annotation\SerializedName('hash')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hash = null;
    
    /**
     * True if share inherited from parent folder.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShareAttributesInheritedEnum $inherited
     */
	#[\JMS\Serializer\Annotation\SerializedName('inherited')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ShareAttributesInheritedEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShareAttributesInheritedEnum $inherited = null;
    
    /**
     * Array of invitation messages.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ShareMessage> $messages
     */
	#[\JMS\Serializer\Annotation\SerializedName('messages')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ShareMessage>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $messages = null;
    
    /**
     * Timestamp of share modification. Can be `null` if it wasn't modified.
     * 
     * @var ?\DateTime $modified
     */
	#[\JMS\Serializer\Annotation\SerializedName('modified')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $modified = null;
    
    /**
     * Share name.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Share owner's hash.
     * 
     * @var ?string $ownerHash
     */
	#[\JMS\Serializer\Annotation\SerializedName('ownerHash')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ownerHash = null;
    
    /**
     * Path to the shared resource in your account.
     * 
     * @var ?array<string> $paths
     */
	#[\JMS\Serializer\Annotation\SerializedName('paths')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $paths = null;
    
    /**
     * True if the share has a public url.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShareAttributesPublicEnum $public
     */
	#[\JMS\Serializer\Annotation\SerializedName('public')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ShareAttributesPublicEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShareAttributesPublicEnum $public = null;
    
    /**
     * Array of recipients.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ShareRecipient> $recipients
     */
	#[\JMS\Serializer\Annotation\SerializedName('recipients')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ShareRecipient>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $recipients = null;
    
    /**
     * True if share requires email to access.
     * 
     * @var ?bool $requireEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('requireEmail')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $requireEmail = null;
    
    /**
     * Invitations resent date. Can be `null` if resent never happened.
     * 
     * @var ?\DateTime $resent
     */
	#[\JMS\Serializer\Annotation\SerializedName('resent')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $resent = null;
    
    /**
     * Share activity status. Can be active (1) or deactivated (0).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShareAttributesStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ShareAttributesStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShareAttributesStatusEnum $status = null;
    
    /**
     * Checks recipient received status and returns whether it's been received (`complete`,) partial received (`incomplete`,) or not received yet (`pending`.)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShareAttributesTrackingStatusEnum $trackingStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('trackingStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ShareAttributesTrackingStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShareAttributesTrackingStatusEnum $trackingStatus = null;
    
    /**
     * Type of share.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShareAttributesTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ShareAttributesTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShareAttributesTypeEnum $type = null;
    
	public function __construct()
	{
		$this->accessDescription = null;
		$this->accessMode = null;
		$this->created = null;
		$this->embed = null;
		$this->expiration = null;
		$this->expired = null;
		$this->fileDropCreateFolders = null;
		$this->formId = null;
		$this->hasNotification = null;
		$this->hasPassword = null;
		$this->hash = null;
		$this->inherited = null;
		$this->messages = null;
		$this->modified = null;
		$this->name = null;
		$this->ownerHash = null;
		$this->paths = null;
		$this->public = null;
		$this->recipients = null;
		$this->requireEmail = null;
		$this->resent = null;
		$this->status = null;
		$this->trackingStatus = null;
		$this->type = null;
	}
}
