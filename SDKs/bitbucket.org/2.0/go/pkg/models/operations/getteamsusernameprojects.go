// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetTeamsUsernameProjectsSecurity struct {
	APIKey *shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
	Basic  *shared.SchemeBasic  `security:"scheme,type=http,subtype=basic"`
	Oauth2 *shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

type GetTeamsUsernameProjectsPathParams struct {
	// This can either be the username or the UUID of the account,
	// surrounded by curly-braces, for example: `{account UUID}`. An account
	// is either a team or user.
	//
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

type GetTeamsUsernameProjectsRequest struct {
	PathParams GetTeamsUsernameProjectsPathParams
	Security   GetTeamsUsernameProjectsSecurity
}

type GetTeamsUsernameProjectsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The requesting user isn't authorized to read the list of projects for the specified team.
	Error map[string]interface{}
	// A paginated list of projects that belong to the specified team.
	PaginatedProjects *shared.PaginatedProjects
}
