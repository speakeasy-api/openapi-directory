"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import typedattributevaluerange as shared_typedattributevaluerange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TypedLinkAttributeRange:
    r"""Identifies the range of attributes that are used by a specified filter."""
    
    range: shared_typedattributevaluerange.TypedAttributeValueRange = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Range') }})  
    attribute_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttributeName'), 'exclude': lambda f: f is None }})  
    