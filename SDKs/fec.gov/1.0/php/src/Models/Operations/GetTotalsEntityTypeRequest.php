<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetTotalsEntityTypeRequest
{
    /**
     * 
     * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
     * 
     * 
     * @var string $apiKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=api_key')]
    public string $apiKey;
    
    /**
     * The one-letter designation code of the organization:
     * 
     *          - A authorized by a candidate
     *          - J joint fundraising committee
     *          - P principal campaign committee of a candidate
     *          - U unauthorized
     *          - B lobbyist/registrant PAC
     *          - D leadership PAC
     * 
     * 
     * @var ?array<string> $committeeDesignation
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_designation')]
    public ?array $committeeDesignation = null;
    
    /**
     * 
     * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
     * 
     * 
     * @var ?array<string> $committeeId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_id')]
    public ?array $committeeId = null;
    
    /**
     * US state or territory
     * 
     * @var ?array<string> $committeeState
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_state')]
    public ?array $committeeState = null;
    
    /**
     * The one-letter type code of the organization:
     * 
     *         - C communication cost
     *         - D delegate
     *         - E electioneering communication
     *         - H House
     *         - I independent expenditure filer (not a committee)
     *         - N PAC - nonqualified
     *         - O independent expenditure-only (super PACs)
     *         - P presidential
     *         - Q PAC - qualified
     *         - S Senate
     *         - U single candidate independent expenditure
     *         - V PAC with non-contribution account, nonqualified
     *         - W PAC with non-contribution account, qualified
     *         - X party, nonqualified
     *         - Y party, qualified
     *         - Z national party non-federal account
     * 
     * 
     * @var ?array<string> $committeeType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_type')]
    public ?array $committeeType = null;
    
    /**
     * 
     * Filter records to only those that were applicable to a given
     * two-year period.The cycle begins with an odd year and is named
     * for its ending, even year.
     * 
     * 
     * @var ?array<int> $cycle
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=cycle')]
    public ?array $cycle = null;
    
    /**
     * Committee groupings based on FEC filing form.                 Choose one of: `presidential`, `pac`, `party`, `pac-party`,                 `house-senate`, or `ie-only`
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetTotalsEntityTypeEntityTypeEnum $entityType
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=entity_type')]
    public GetTotalsEntityTypeEntityTypeEnum $entityType;
    
    /**
     * The one-letter 
     * 
     *     code of the filing frequency:
     *          - A Administratively terminated
     *          - D Debt
     *          - M Monthly filer
     *          - Q Quarterly filer
     *          - T Terminated
     *          - W Waived
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetTotalsEntityTypeFilingFrequencyEnum> $filingFrequency
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filing_frequency')]
    public ?array $filingFrequency = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxDisbursements
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_disbursements')]
    public ?string $maxDisbursements = null;
    
    /**
     * Filter for committees whose first Form 1 was received on or before this date.
     * 
     * @var ?\DateTime $maxFirstF1Date
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_first_f1_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $maxFirstF1Date = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxLastCashOnHandEndPeriod
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_last_cash_on_hand_end_period')]
    public ?string $maxLastCashOnHandEndPeriod = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxLastDebtsOwedByCommittee
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_last_debts_owed_by_committee')]
    public ?string $maxLastDebtsOwedByCommittee = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxReceipts
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_receipts')]
    public ?string $maxReceipts = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minDisbursements
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_disbursements')]
    public ?string $minDisbursements = null;
    
    /**
     * Filter for committees whose first Form 1 was received on or after this date.
     * 
     * @var ?\DateTime $minFirstF1Date
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_first_f1_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $minFirstF1Date = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minLastCashOnHandEndPeriod
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_last_cash_on_hand_end_period')]
    public ?string $minLastCashOnHandEndPeriod = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minLastDebtsOwedByCommittee
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_last_debts_owed_by_committee')]
    public ?string $minLastDebtsOwedByCommittee = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minReceipts
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_receipts')]
    public ?string $minReceipts = null;
    
    /**
     * The one-letter code for the kind for organization:
     * 
     *         - C corporation
     *         - L labor organization
     *         - M membership organization
     *         - T trade association
     *         - V cooperative
     *         - W corporation without capital stock
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetTotalsEntityTypeOrganizationTypeEnum> $organizationType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=organization_type')]
    public ?array $organizationType = null;
    
    /**
     * For paginating through results, starting at page 1
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * The number of results returned per page. Defaults to 20.
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * Provide a field to sort by. Use `-` for descending order.
     * 
     * 
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * Hide null values on sorted column(s).
     * 
     * @var ?bool $sortHideNull
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_hide_null')]
    public ?bool $sortHideNull = null;
    
    /**
     * Toggle that filters out all rows having sort column that is non-null
     * 
     * @var ?bool $sortNullOnly
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_null_only')]
    public ?bool $sortNullOnly = null;
    
    /**
     * Toggle that sorts null values last
     * 
     * @var ?bool $sortNullsLast
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_nulls_last')]
    public ?bool $sortNullsLast = null;
    
    /**
     * 
     * A unique identifier assigned to each candidate registered with the FEC.
     * If a person runs for several offices, that person will have separate candidate IDs for each office. This is a filter for Leadership PAC sponsor.
     * 
     * 
     * @var ?array<string> $sponsorCandidateId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sponsor_candidate_id')]
    public ?array $sponsorCandidateId = null;
    
    /**
     * Name of the Committee's treasurer. If multiple treasurers for the committee, the most recent treasurer will be shown.
     * 
     * @var ?array<string> $treasurerName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=treasurer_name')]
    public ?array $treasurerName = null;
    
	public function __construct()
	{
		$this->apiKey = "";
		$this->committeeDesignation = null;
		$this->committeeId = null;
		$this->committeeState = null;
		$this->committeeType = null;
		$this->cycle = null;
		$this->entityType = \OpenAPI\OpenAPI\Models\Operations\GetTotalsEntityTypeEntityTypeEnum::PRESIDENTIAL;
		$this->filingFrequency = null;
		$this->maxDisbursements = null;
		$this->maxFirstF1Date = null;
		$this->maxLastCashOnHandEndPeriod = null;
		$this->maxLastDebtsOwedByCommittee = null;
		$this->maxReceipts = null;
		$this->minDisbursements = null;
		$this->minFirstF1Date = null;
		$this->minLastCashOnHandEndPeriod = null;
		$this->minLastDebtsOwedByCommittee = null;
		$this->minReceipts = null;
		$this->organizationType = null;
		$this->page = null;
		$this->perPage = null;
		$this->sort = null;
		$this->sortHideNull = null;
		$this->sortNullOnly = null;
		$this->sortNullsLast = null;
		$this->sponsorCandidateId = null;
		$this->treasurerName = null;
	}
}
