<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RateEstimate - A rate estimate
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RateEstimate
{
    /**
     * carrier code
     * 
     * @var string $carrierCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('carrier_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $carrierCode;
    
    /**
     * The carrier delivery days
     * 
     * @var ?string $carrierDeliveryDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('carrier_delivery_days')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $carrierDeliveryDays = null;
    
    /**
     * carrier friendly name
     * 
     * @var string $carrierFriendlyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('carrier_friendly_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $carrierFriendlyName;
    
    /**
     * A string that uniquely identifies the carrier
     * 
     * @var string $carrierId
     */
	#[\JMS\Serializer\Annotation\SerializedName('carrier_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $carrierId;
    
    /**
     * carrier nickname
     * 
     * @var string $carrierNickname
     */
	#[\JMS\Serializer\Annotation\SerializedName('carrier_nickname')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $carrierNickname;
    
    /**
     * The confirmation amount
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue $confirmationAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('confirmation_amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue')]
    public RateEstimateMonetaryValue $confirmationAmount;
    
    /**
     * The number of days estimated for delivery, this will show the _actual_ delivery
     * 
     * time if for example, the package gets shipped on a Friday
     * 
     * 
     * @var ?int $deliveryDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('delivery_days')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $deliveryDays = null;
    
    /**
     * The error messages
     * 
     * @var array<string> $errorMessages
     */
	#[\JMS\Serializer\Annotation\SerializedName('error_messages')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $errorMessages;
    
	#[\JMS\Serializer\Annotation\SerializedName('estimated_delivery_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $estimatedDeliveryDate = null;
    
    /**
     * Indicates if the rate is guaranteed.
     * 
     * @var bool $guaranteedService
     */
	#[\JMS\Serializer\Annotation\SerializedName('guaranteed_service')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $guaranteedService;
    
    /**
     * The insurance amount
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue $insuranceAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('insurance_amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue')]
    public RateEstimateMonetaryValue $insuranceAmount;
    
    /**
     * Indicates if the rates been negotiated
     * 
     * @var bool $negotiatedRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('negotiated_rate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $negotiatedRate;
    
    /**
     * Any other charges associated with this rate
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue $otherAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('other_amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue')]
    public RateEstimateMonetaryValue $otherAmount;
    
    /**
     * package type that this rate was estimated for
     * 
     * @var string $packageType
     */
	#[\JMS\Serializer\Annotation\SerializedName('package_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $packageType;
    
	#[\JMS\Serializer\Annotation\SerializedName('rate_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RateEstimateRateTypeEnum>')]
    public RateEstimateRateTypeEnum $rateType;
    
    /**
     * service code for the rate
     * 
     * @var string $serviceCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('service_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serviceCode;
    
    /**
     * service type
     * 
     * @var string $serviceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('service_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serviceType;
    
    /**
     * ship date
     * 
     * @var ?\DateTime $shipDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ship_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $shipDate = null;
    
    /**
     * The shipping amount
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue $shippingAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('shipping_amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue')]
    public RateEstimateMonetaryValue $shippingAmount;
    
    /**
     * Tariff and additional taxes associated with an international shipment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue $taxAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax_amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RateEstimateMonetaryValue $taxAmount = null;
    
    /**
     * Indicates if rate is trackable
     * 
     * @var bool $trackable
     */
	#[\JMS\Serializer\Annotation\SerializedName('trackable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $trackable;
    
	#[\JMS\Serializer\Annotation\SerializedName('validation_status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RateEstimateValidationStatusEnum>')]
    public RateEstimateValidationStatusEnum $validationStatus;
    
    /**
     * The warning messages
     * 
     * @var array<string> $warningMessages
     */
	#[\JMS\Serializer\Annotation\SerializedName('warning_messages')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $warningMessages;
    
    /**
     * Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of
     * 
     * custom zones that vary depending upon the ship_to and ship_from location
     * 
     * 
     * @var int $zone
     */
	#[\JMS\Serializer\Annotation\SerializedName('zone')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $zone;
    
	public function __construct()
	{
		$this->carrierCode = "";
		$this->carrierDeliveryDays = null;
		$this->carrierFriendlyName = "";
		$this->carrierId = "";
		$this->carrierNickname = "";
		$this->confirmationAmount = new \OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue();
		$this->deliveryDays = null;
		$this->errorMessages = [];
		$this->estimatedDeliveryDate = null;
		$this->guaranteedService = false;
		$this->insuranceAmount = new \OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue();
		$this->negotiatedRate = false;
		$this->otherAmount = new \OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue();
		$this->packageType = "";
		$this->rateType = \OpenAPI\OpenAPI\Models\Shared\RateEstimateRateTypeEnum::CHECK;
		$this->serviceCode = "";
		$this->serviceType = "";
		$this->shipDate = null;
		$this->shippingAmount = new \OpenAPI\OpenAPI\Models\Shared\RateEstimateMonetaryValue();
		$this->taxAmount = null;
		$this->trackable = false;
		$this->validationStatus = \OpenAPI\OpenAPI\Models\Shared\RateEstimateValidationStatusEnum::VALID;
		$this->warningMessages = [];
		$this->zone = 0;
	}
}
