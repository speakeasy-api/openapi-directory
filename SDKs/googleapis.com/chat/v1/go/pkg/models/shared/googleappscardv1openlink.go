// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAppsCardV1OpenLinkOnCloseEnum - Whether the client forgets about a link after opening it, or observes it until the window closes. Not supported by Chat apps.
type GoogleAppsCardV1OpenLinkOnCloseEnum string

const (
	GoogleAppsCardV1OpenLinkOnCloseEnumNothing GoogleAppsCardV1OpenLinkOnCloseEnum = "NOTHING"
	GoogleAppsCardV1OpenLinkOnCloseEnumReload  GoogleAppsCardV1OpenLinkOnCloseEnum = "RELOAD"
)

func (e *GoogleAppsCardV1OpenLinkOnCloseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NOTHING":
		fallthrough
	case "RELOAD":
		*e = GoogleAppsCardV1OpenLinkOnCloseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsCardV1OpenLinkOnCloseEnum: %s", s)
	}
}

// GoogleAppsCardV1OpenLinkOpenAsEnum - How to open a link. Not supported by Chat apps.
type GoogleAppsCardV1OpenLinkOpenAsEnum string

const (
	GoogleAppsCardV1OpenLinkOpenAsEnumFullSize GoogleAppsCardV1OpenLinkOpenAsEnum = "FULL_SIZE"
	GoogleAppsCardV1OpenLinkOpenAsEnumOverlay  GoogleAppsCardV1OpenLinkOpenAsEnum = "OVERLAY"
)

func (e *GoogleAppsCardV1OpenLinkOpenAsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FULL_SIZE":
		fallthrough
	case "OVERLAY":
		*e = GoogleAppsCardV1OpenLinkOpenAsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsCardV1OpenLinkOpenAsEnum: %s", s)
	}
}

// GoogleAppsCardV1OpenLink - Represents an `onClick` event that opens a hyperlink.
type GoogleAppsCardV1OpenLink struct {
	// Whether the client forgets about a link after opening it, or observes it until the window closes. Not supported by Chat apps.
	OnClose *GoogleAppsCardV1OpenLinkOnCloseEnum `json:"onClose,omitempty"`
	// How to open a link. Not supported by Chat apps.
	OpenAs *GoogleAppsCardV1OpenLinkOpenAsEnum `json:"openAs,omitempty"`
	// The URL to open.
	URL *string `json:"url,omitempty"`
}
