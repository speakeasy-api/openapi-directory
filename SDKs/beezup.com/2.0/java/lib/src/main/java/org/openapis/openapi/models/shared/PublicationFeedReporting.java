/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PublicationFeedReporting - Publication feed reporting
 */
public class PublicationFeedReporting {
    /**
     * Indicates if the publication is completed or not
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completed")
    public Boolean completed;

    public PublicationFeedReporting withCompleted(Boolean completed) {
        this.completed = completed;
        return this;
    }
    
    /**
     * The feed publication end time (UTC timezone)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endUtcDate")
    public OffsetDateTime endUtcDate;

    public PublicationFeedReporting withEndUtcDate(OffsetDateTime endUtcDate) {
        this.endUtcDate = endUtcDate;
        return this;
    }
    
    /**
     * The error message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;

    public PublicationFeedReporting withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * The product count downloaded from BeezUP Export
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exportedProducts")
    public Integer exportedProducts;

    public PublicationFeedReporting withExportedProducts(Integer exportedProducts) {
        this.exportedProducts = exportedProducts;
        return this;
    }
    
    /**
     * The item count (products or offers) the marketplace flagged as failed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failedItems")
    public Integer failedItems;

    public PublicationFeedReporting withFailedItems(Integer failedItems) {
        this.failedItems = failedItems;
        return this;
    }
    
    /**
     * The Feed Type
     */
    @JsonProperty("feedType")
    public FeedTypeEnum feedType;

    public PublicationFeedReporting withFeedType(FeedTypeEnum feedType) {
        this.feedType = feedType;
        return this;
    }
    
    /**
     * The error message if the Html Report generation failed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("htmlReportGenerationErrorMessage")
    public String htmlReportGenerationErrorMessage;

    public PublicationFeedReporting withHtmlReportGenerationErrorMessage(String htmlReportGenerationErrorMessage) {
        this.htmlReportGenerationErrorMessage = htmlReportGenerationErrorMessage;
        return this;
    }
    
    /**
     * The Url for the Html Report generated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("htmlReportUrl")
    public String htmlReportUrl;

    public PublicationFeedReporting withHtmlReportUrl(String htmlReportUrl) {
        this.htmlReportUrl = htmlReportUrl;
        return this;
    }
    
    /**
     * The processing status
     */
    @JsonProperty("processingStatus")
    public String processingStatus;

    public PublicationFeedReporting withProcessingStatus(String processingStatus) {
        this.processingStatus = processingStatus;
        return this;
    }
    
    /**
     * The item count (products or offers) the marketplace flagged as successful
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publishedItems")
    public Integer publishedItems;

    public PublicationFeedReporting withPublishedItems(Integer publishedItems) {
        this.publishedItems = publishedItems;
        return this;
    }
    
    /**
     * The item count (products or offers) the marketplace flagged as successful with warnings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publishedItemsWithWarning")
    public Integer publishedItemsWithWarning;

    public PublicationFeedReporting withPublishedItemsWithWarning(Integer publishedItemsWithWarning) {
        this.publishedItemsWithWarning = publishedItemsWithWarning;
        return this;
    }
    
    /**
     * The feed publication start time (UTC timezone)
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startUtcDate")
    public OffsetDateTime startUtcDate;

    public PublicationFeedReporting withStartUtcDate(OffsetDateTime startUtcDate) {
        this.startUtcDate = startUtcDate;
        return this;
    }
    
    /**
     * The item count (products or offers) sent to the marketplace
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transmittedItems")
    public Integer transmittedItems;

    public PublicationFeedReporting withTransmittedItems(Integer transmittedItems) {
        this.transmittedItems = transmittedItems;
        return this;
    }
    
    public PublicationFeedReporting(@JsonProperty("feedType") FeedTypeEnum feedType, @JsonProperty("processingStatus") String processingStatus, @JsonProperty("startUtcDate") OffsetDateTime startUtcDate) {
        this.feedType = feedType;
        this.processingStatus = processingStatus;
        this.startUtcDate = startUtcDate;
  }
}
