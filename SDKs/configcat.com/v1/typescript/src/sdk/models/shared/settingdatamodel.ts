/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SettingTypeEnum } from "./settingtypeenum";
import { Expose, Transform } from "class-transformer";

export class SettingDataModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "creatorEmail" })
  creatorEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creatorFullName" })
  creatorFullName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hint" })
  hint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isWatching" })
  isWatching?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "settingId" })
  settingId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "settingType" })
  settingType?: SettingTypeEnum;
}
