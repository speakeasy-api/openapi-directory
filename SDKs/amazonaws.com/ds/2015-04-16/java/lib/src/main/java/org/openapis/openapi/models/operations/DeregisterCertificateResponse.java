/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class DeregisterCertificateResponse {
    /**
     * CertificateDoesNotExistException
     */
    
    public Object certificateDoesNotExistException;

    public DeregisterCertificateResponse withCertificateDoesNotExistException(Object certificateDoesNotExistException) {
        this.certificateDoesNotExistException = certificateDoesNotExistException;
        return this;
    }
    
    /**
     * CertificateInUseException
     */
    
    public Object certificateInUseException;

    public DeregisterCertificateResponse withCertificateInUseException(Object certificateInUseException) {
        this.certificateInUseException = certificateInUseException;
        return this;
    }
    
    /**
     * ClientException
     */
    
    public Object clientException;

    public DeregisterCertificateResponse withClientException(Object clientException) {
        this.clientException = clientException;
        return this;
    }
    
    
    public String contentType;

    public DeregisterCertificateResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> deregisterCertificateResult;

    public DeregisterCertificateResponse withDeregisterCertificateResult(java.util.Map<String, Object> deregisterCertificateResult) {
        this.deregisterCertificateResult = deregisterCertificateResult;
        return this;
    }
    
    /**
     * DirectoryDoesNotExistException
     */
    
    public Object directoryDoesNotExistException;

    public DeregisterCertificateResponse withDirectoryDoesNotExistException(Object directoryDoesNotExistException) {
        this.directoryDoesNotExistException = directoryDoesNotExistException;
        return this;
    }
    
    /**
     * DirectoryUnavailableException
     */
    
    public Object directoryUnavailableException;

    public DeregisterCertificateResponse withDirectoryUnavailableException(Object directoryUnavailableException) {
        this.directoryUnavailableException = directoryUnavailableException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public DeregisterCertificateResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * ServiceException
     */
    
    public Object serviceException;

    public DeregisterCertificateResponse withServiceException(Object serviceException) {
        this.serviceException = serviceException;
        return this;
    }
    
    
    public Integer statusCode;

    public DeregisterCertificateResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public DeregisterCertificateResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;

    public DeregisterCertificateResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    public DeregisterCertificateResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
