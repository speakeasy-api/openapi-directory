"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ThresholdColorEnum(str, Enum):
    r"""The state color for this threshold. Color is not allowed in a XyChart."""
    COLOR_UNSPECIFIED = 'COLOR_UNSPECIFIED'
    YELLOW = 'YELLOW'
    RED = 'RED'

class ThresholdDirectionEnum(str, Enum):
    r"""The direction for the current threshold. Direction is not allowed in a XyChart."""
    DIRECTION_UNSPECIFIED = 'DIRECTION_UNSPECIFIED'
    ABOVE = 'ABOVE'
    BELOW = 'BELOW'

class ThresholdTargetAxisEnum(str, Enum):
    r"""The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard."""
    TARGET_AXIS_UNSPECIFIED = 'TARGET_AXIS_UNSPECIFIED'
    Y1 = 'Y1'
    Y2 = 'Y2'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Threshold:
    r"""Defines a threshold for categorizing time series values."""
    
    color: Optional[ThresholdColorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('color'), 'exclude': lambda f: f is None }})
    r"""The state color for this threshold. Color is not allowed in a XyChart."""  
    direction: Optional[ThresholdDirectionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('direction'), 'exclude': lambda f: f is None }})
    r"""The direction for the current threshold. Direction is not allowed in a XyChart."""  
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})
    r"""A label for the threshold."""  
    target_axis: Optional[ThresholdTargetAxisEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetAxis'), 'exclude': lambda f: f is None }})
    r"""The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard."""  
    value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The value of the threshold. The value should be defined in the native scale of the metric."""  
    