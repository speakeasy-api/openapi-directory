/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TranslateDocumentRequest - A document translation request.
 */
public class TranslateDocumentRequest {
    /**
     * Optional. This flag is to support user customized attribution. If not provided, the default is `Machine Translated by Google`. Customized attribution should follow rules in https://cloud.google.com/translate/attribution#attribution_and_logos
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customizedAttribution")
    public String customizedAttribution;

    public TranslateDocumentRequest withCustomizedAttribution(String customizedAttribution) {
        this.customizedAttribution = customizedAttribution;
        return this;
    }
    
    /**
     * A document translation request input config.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentInputConfig")
    public DocumentInputConfig documentInputConfig;

    public TranslateDocumentRequest withDocumentInputConfig(DocumentInputConfig documentInputConfig) {
        this.documentInputConfig = documentInputConfig;
        return this;
    }
    
    /**
     * A document translation request output config.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentOutputConfig")
    public DocumentOutputConfig documentOutputConfig;

    public TranslateDocumentRequest withDocumentOutputConfig(DocumentOutputConfig documentOutputConfig) {
        this.documentOutputConfig = documentOutputConfig;
        return this;
    }
    
    /**
     * Optional. If true, enable auto rotation correction in DVS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableRotationCorrection")
    public Boolean enableRotationCorrection;

    public TranslateDocumentRequest withEnableRotationCorrection(Boolean enableRotationCorrection) {
        this.enableRotationCorrection = enableRotationCorrection;
        return this;
    }
    
    /**
     * Optional. If true, use the text removal server to remove the shadow text on background image for native pdf translation. Shadow removal feature can only be enabled when is_translate_native_pdf_only: false &amp;&amp; pdf_native_only: false
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableShadowRemovalNativePdf")
    public Boolean enableShadowRemovalNativePdf;

    public TranslateDocumentRequest withEnableShadowRemovalNativePdf(Boolean enableShadowRemovalNativePdf) {
        this.enableShadowRemovalNativePdf = enableShadowRemovalNativePdf;
        return this;
    }
    
    /**
     * Configures which glossary should be used for a specific target language, and defines options for applying that glossary.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("glossaryConfig")
    public TranslateTextGlossaryConfig glossaryConfig;

    public TranslateDocumentRequest withGlossaryConfig(TranslateTextGlossaryConfig glossaryConfig) {
        this.glossaryConfig = glossaryConfig;
        return this;
    }
    
    /**
     * Optional. is_translate_native_pdf_only field for external customers. If true, the page limit of online native pdf translation is 300 and only native pdf pages will be translated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isTranslateNativePdfOnly")
    public Boolean isTranslateNativePdfOnly;

    public TranslateDocumentRequest withIsTranslateNativePdfOnly(Boolean isTranslateNativePdfOnly) {
        this.isTranslateNativePdfOnly = isTranslateNativePdfOnly;
        return this;
    }
    
    /**
     * Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public TranslateDocumentRequest withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Optional. The `model` type requested for this translation. The format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, If not provided, the default Google model (NMT) will be used for translation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("model")
    public String model;

    public TranslateDocumentRequest withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * Optional. The BCP-47 language code of the input document if known, for example, "en-US" or "sr-Latn". Supported language codes are listed in Language Support. If the source language isn't specified, the API attempts to identify the source language automatically and returns the source language within the response. Source language must be specified if the request contains a glossary or a custom model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceLanguageCode")
    public String sourceLanguageCode;

    public TranslateDocumentRequest withSourceLanguageCode(String sourceLanguageCode) {
        this.sourceLanguageCode = sourceLanguageCode;
        return this;
    }
    
    /**
     * Required. The BCP-47 language code to use for translation of the input document, set to one of the language codes listed in Language Support.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetLanguageCode")
    public String targetLanguageCode;

    public TranslateDocumentRequest withTargetLanguageCode(String targetLanguageCode) {
        this.targetLanguageCode = targetLanguageCode;
        return this;
    }
    
    public TranslateDocumentRequest(){}
}
