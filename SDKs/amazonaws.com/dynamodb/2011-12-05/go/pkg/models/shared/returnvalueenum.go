// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReturnValueEnum - <p>Use this parameter if you want to get the attribute name-value pairs before or after they are modified. For <code>PUT</code> operations, the possible parameter values are <code>NONE</code> (default) or <code>ALL_OLD</code>. For update operations, the possible parameter values are <code>NONE</code> (default) or <code>ALL_OLD</code>, <code>UPDATED_OLD</code>, <code>ALL_NEW</code> or <code>UPDATED_NEW</code>.</p> <ul> <li><code>NONE</code>: Nothing is returned.</li> <li><code>ALL_OLD</code>: Returns the attributes of the item as they were before the operation.</li> <li><code>UPDATED_OLD</code>: Returns the values of the updated attributes, only, as they were before the operation.</li> <li><code>ALL_NEW</code>: Returns all the attributes and their new values after the operation.</li> <li><code>UPDATED_NEW</code>: Returns the values of the updated attributes, only, as they are after the operation.</li> </ul>
type ReturnValueEnum string

const (
	ReturnValueEnumNone       ReturnValueEnum = "NONE"
	ReturnValueEnumAllOld     ReturnValueEnum = "ALL_OLD"
	ReturnValueEnumUpdatedOld ReturnValueEnum = "UPDATED_OLD"
	ReturnValueEnumAllNew     ReturnValueEnum = "ALL_NEW"
	ReturnValueEnumUpdatedNew ReturnValueEnum = "UPDATED_NEW"
)

func (e *ReturnValueEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NONE":
		fallthrough
	case "ALL_OLD":
		fallthrough
	case "UPDATED_OLD":
		fallthrough
	case "ALL_NEW":
		fallthrough
	case "UPDATED_NEW":
		*e = ReturnValueEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnValueEnum: %s", s)
	}
}
