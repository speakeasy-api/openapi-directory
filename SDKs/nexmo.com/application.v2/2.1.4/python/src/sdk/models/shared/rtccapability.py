"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RtcCapabilityWebhooksEventURLHTTPMethodEnum(str, Enum):
    GET = 'GET'
    POST = 'POST'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RtcCapabilityWebhooksEventURL:
    r"""Vonage will send RTC events to this URL"""
    
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    http_method: Optional[RtcCapabilityWebhooksEventURLHTTPMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_method'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RtcCapabilityWebhooks:
    
    event_url: Optional[RtcCapabilityWebhooksEventURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_url'), 'exclude': lambda f: f is None }})
    r"""Vonage will send RTC events to this URL"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RtcCapability:
    r"""RTC / Conversation Service related configuration"""
    
    leg_persistence_time: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('leg_persistence_time'), 'exclude': lambda f: f is None }})  
    signed_callbacks: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signed_callbacks'), 'exclude': lambda f: f is None }})  
    webhooks: Optional[RtcCapabilityWebhooks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhooks'), 'exclude': lambda f: f is None }})  
    