<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateStageRequestBody
{
    /**
     * Optional name that can be specified for the stage being created.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Array of participant token configuration objects to attach to the new stage.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ParticipantTokenConfiguration> $participantTokenConfigurations
     */
	#[\JMS\Serializer\Annotation\SerializedName('participantTokenConfigurations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ParticipantTokenConfiguration>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $participantTokenConfigurations = null;
    
    /**
     * Tags attached to the resource. Array of maps, each of the form <code>string:string (key:value)</code>. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging AWS Resources</a> for details, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS has no constraints on tags beyond what is documented there. 
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->name = null;
		$this->participantTokenConfigurations = null;
		$this->tags = null;
	}
}
