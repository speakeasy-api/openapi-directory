/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FeatureParameter } from "./featureparameter";
import { FeatureTypeEnum } from "./featuretypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeFeatureMetadataResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureGroupArn" })
  featureGroupArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureGroupName" })
  featureGroupName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureName" })
  featureName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureType" })
  featureType: FeatureTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime: Date;

  @SpeakeasyMetadata({ elemType: FeatureParameter })
  @Expose({ name: "Parameters" })
  @Type(() => FeatureParameter)
  parameters?: FeatureParameter[];
}
