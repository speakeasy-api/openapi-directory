// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type SearchWordsRequest struct {
	// Search term is a Regular Expression
	AllowRegex *string `queryParam:"style=form,explode=true,name=allowRegex"`
	// Search case sensitive
	CaseSensitive *string `queryParam:"style=form,explode=true,name=caseSensitive"`
	// Exclude these comma-delimited parts of speech (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
	ExcludePartOfSpeech *string `queryParam:"style=form,explode=true,name=excludePartOfSpeech"`
	// Only include these comma-delimited parts of speech (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
	IncludePartOfSpeech *string `queryParam:"style=form,explode=true,name=includePartOfSpeech"`
	// Maximum number of results to return
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Maximum corpus frequency for terms
	MaxCorpusCount *int `queryParam:"style=form,explode=true,name=maxCorpusCount"`
	// Maximum dictionary definition count
	MaxDictionaryCount *int `queryParam:"style=form,explode=true,name=maxDictionaryCount"`
	// Maximum word length
	MaxLength *int `queryParam:"style=form,explode=true,name=maxLength"`
	// Minimum corpus frequency for terms
	MinCorpusCount *int `queryParam:"style=form,explode=true,name=minCorpusCount"`
	// Minimum number of dictionary entries for words returned
	MinDictionaryCount *int `queryParam:"style=form,explode=true,name=minDictionaryCount"`
	// Minimum word length
	MinLength *int `queryParam:"style=form,explode=true,name=minLength"`
	// Search query
	Query string `pathParam:"style=simple,explode=false,name=query"`
	// Results to skip
	Skip *int `queryParam:"style=form,explode=true,name=skip"`
}

type SearchWordsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
