/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle } from "./chromecrosdpanelautosettingsprotopolicyapilifecycle";
import { GoogleChromePolicyVersionsV1AdditionalTargetKeyName } from "./googlechromepolicyversionsv1additionaltargetkeyname";
import { GoogleChromePolicyVersionsV1PolicySchemaFieldDescription } from "./googlechromepolicyversionsv1policyschemafielddescription";
import { GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription } from "./googlechromepolicyversionsv1policyschemanoticedescription";
import { Proto2FileDescriptorProto } from "./proto2filedescriptorproto";
import { Expose, Type } from "class-transformer";

export enum GoogleChromePolicyVersionsV1PolicySchemaValidTargetResourcesEnum {
  TargetResourceUnspecified = "TARGET_RESOURCE_UNSPECIFIED",
  OrgUnit = "ORG_UNIT",
  Group = "GROUP",
}

/**
 * Resource representing a policy schema.
 */
export class GoogleChromePolicyVersionsV1PolicySchema extends SpeakeasyBase {
  /**
   * Output only. Specific access restrictions related to this policy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessRestrictions" })
  accessRestrictions?: string[];

  /**
   * Output only. Additional key names that will be used to identify the target of the policy value. When specifying a `policyTargetKey`, each of the additional keys specified here will have to be included in the `additionalTargetKeys` map.
   */
  @SpeakeasyMetadata({
    elemType: GoogleChromePolicyVersionsV1AdditionalTargetKeyName,
  })
  @Expose({ name: "additionalTargetKeyNames" })
  @Type(() => GoogleChromePolicyVersionsV1AdditionalTargetKeyName)
  additionalTargetKeyNames?: GoogleChromePolicyVersionsV1AdditionalTargetKeyName[];

  /**
   * Title of the category in which a setting belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categoryTitle" })
  categoryTitle?: string;

  /**
   * Describes a complete .proto file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "definition" })
  @Type(() => Proto2FileDescriptorProto)
  definition?: Proto2FileDescriptorProto;

  /**
   * Output only. Detailed description of each field that is part of the schema.
   */
  @SpeakeasyMetadata({
    elemType: GoogleChromePolicyVersionsV1PolicySchemaFieldDescription,
  })
  @Expose({ name: "fieldDescriptions" })
  @Type(() => GoogleChromePolicyVersionsV1PolicySchemaFieldDescription)
  fieldDescriptions?: GoogleChromePolicyVersionsV1PolicySchemaFieldDescription[];

  /**
   * Format: name=customers/{customer}/policySchemas/{schema_namespace}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. Special notice messages related to setting certain values in certain fields in the schema.
   */
  @SpeakeasyMetadata({
    elemType: GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription,
  })
  @Expose({ name: "notices" })
  @Type(() => GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription)
  notices?: GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription[];

  @SpeakeasyMetadata()
  @Expose({ name: "policyApiLifecycle" })
  @Type(() => ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle)
  policyApiLifecycle?: ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle;

  /**
   * Output only. Description about the policy schema for user consumption.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policyDescription" })
  policyDescription?: string;

  /**
   * Output only. The fully qualified name of the policy schema. This value is used to fill the field `policy_schema` in PolicyValue when calling BatchInheritOrgUnitPolicies BatchModifyOrgUnitPolicies BatchModifyGroupPolicies or BatchDeleteGroupPolicies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schemaName" })
  schemaName?: string;

  /**
   * Output only. URI to related support article for this schema.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supportUri" })
  supportUri?: string;

  /**
   * Output only. Information about applicable target resources for the policy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validTargetResources" })
  validTargetResources?: GoogleChromePolicyVersionsV1PolicySchemaValidTargetResourcesEnum[];
}
