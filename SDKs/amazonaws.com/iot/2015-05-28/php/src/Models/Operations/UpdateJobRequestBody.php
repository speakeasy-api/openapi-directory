<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateJobRequestBody
{
    /**
     * The criteria that determine when and how a job abort takes place.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateJobRequestBodyAbortConfig $abortConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('abortConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateJobRequestBodyAbortConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateJobRequestBodyAbortConfig $abortConfig = null;
    
    /**
     * A short text description of the job.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The configuration that determines how many retries are allowed for each failure type for a job.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateJobRequestBodyJobExecutionsRetryConfig $jobExecutionsRetryConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobExecutionsRetryConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateJobRequestBodyJobExecutionsRetryConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateJobRequestBodyJobExecutionsRetryConfig $jobExecutionsRetryConfig = null;
    
    /**
     * Allows you to create a staged rollout of a job.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateJobRequestBodyJobExecutionsRolloutConfig $jobExecutionsRolloutConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobExecutionsRolloutConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateJobRequestBodyJobExecutionsRolloutConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateJobRequestBodyJobExecutionsRolloutConfig $jobExecutionsRolloutConfig = null;
    
    /**
     * Configuration for pre-signed S3 URLs.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateJobRequestBodyPresignedUrlConfig $presignedUrlConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('presignedUrlConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateJobRequestBodyPresignedUrlConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateJobRequestBodyPresignedUrlConfig $presignedUrlConfig = null;
    
    /**
     * Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateJobRequestBodyTimeoutConfig $timeoutConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeoutConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateJobRequestBodyTimeoutConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateJobRequestBodyTimeoutConfig $timeoutConfig = null;
    
	public function __construct()
	{
		$this->abortConfig = null;
		$this->description = null;
		$this->jobExecutionsRetryConfig = null;
		$this->jobExecutionsRolloutConfig = null;
		$this->presignedUrlConfig = null;
		$this->timeoutConfig = null;
	}
}
