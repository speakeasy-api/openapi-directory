"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class UpdateRoleSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateRoleApplicationJSONSubAccountPrivileges:
    r"""This field will only be displayed to accounts that are enrolled in the partner plan and follow master accounts and sub accounts structure."""
    
    second_level: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('second_level'), 'exclude': lambda f: f is None }})
    r"""Indicates how the account can manage sub accounts. The value can be one of the following:<br>
    `1`: Manage the sub account as an owner of the account.<br>
    `2`: Manage the sub account with the same privileges as the current account.<br>
    `3`: Manage the sub account with specified privileges.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateRoleApplicationJSON:
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the role."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Role Id."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the role."""  
    privileges: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privileges'), 'exclude': lambda f: f is None }})
    r"""Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges)."""  
    sub_account_privileges: Optional[UpdateRoleApplicationJSONSubAccountPrivileges] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sub_account_privileges'), 'exclude': lambda f: f is None }})
    r"""This field will only be displayed to accounts that are enrolled in the partner plan and follow master accounts and sub accounts structure."""  
    total_members: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_members'), 'exclude': lambda f: f is None }})
    r"""Total members assigned to that role."""  
    

@dataclasses.dataclass
class UpdateRoleRequest:
    
    role_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'roleId', 'style': 'simple', 'explode': False }})
    r"""Role Id"""  
    request_body: Optional[UpdateRoleApplicationJSON] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateRoleResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_role_200_application_json_any: Optional[Any] = dataclasses.field(default=None)
    r"""**Error Code:** `200`<br>
    The account must be a paid account to update the role.
    """  
    