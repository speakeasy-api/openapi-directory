"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LabrpResponse = exports.Labrp400ApplicationJSON = exports.Labrp400ApplicationJSONErrorDescriptionEnum = exports.Labrp400ApplicationJSONErrorEnum = exports.Labrp401ApplicationJSON = exports.Labrp401ApplicationJSONErrorDescriptionEnum = exports.Labrp401ApplicationJSONErrorEnum = exports.Labrp404ApplicationJSON = exports.Labrp404ApplicationJSONErrorDescriptionEnum = exports.Labrp404ApplicationJSONErrorEnum = exports.Labrp500ApplicationJSON = exports.Labrp500ApplicationJSONErrorDescriptionEnum = exports.Labrp500ApplicationJSONErrorEnum = exports.Labrp502ApplicationJSON = exports.Labrp502ApplicationJSONErrorDescriptionEnum = exports.Labrp502ApplicationJSONErrorEnum = exports.Labrp503ApplicationJSON = exports.Labrp503ApplicationJSONErrorDescriptionEnum = exports.Labrp503ApplicationJSONErrorEnum = exports.Labrp504ApplicationJSON = exports.Labrp504ApplicationJSONErrorDescriptionEnum = exports.Labrp504ApplicationJSONErrorEnum = exports.LabrpRequestBody = exports.LabrpRequestBodyFormatEnum = exports.LabrpRequestBodyCertificateParameters = exports.LabrpSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
var LabrpSecurity = /** @class */ (function (_super) {
    __extends(LabrpSecurity, _super);
    function LabrpSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=header;name=X-APISETU-APIKEY",
        }),
        __metadata("design:type", String)
    ], LabrpSecurity.prototype, "apiKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=header;name=X-APISETU-CLIENTID",
        }),
        __metadata("design:type", String)
    ], LabrpSecurity.prototype, "clientId", void 0);
    return LabrpSecurity;
}(utils_1.SpeakeasyBase));
exports.LabrpSecurity = LabrpSecurity;
var LabrpRequestBodyCertificateParameters = /** @class */ (function (_super) {
    __extends(LabrpRequestBodyCertificateParameters, _super);
    function LabrpRequestBodyCertificateParameters() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DOB" }),
        __metadata("design:type", String)
    ], LabrpRequestBodyCertificateParameters.prototype, "dob", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FullName" }),
        __metadata("design:type", String)
    ], LabrpRequestBodyCertificateParameters.prototype, "fullName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "GENDER" }),
        __metadata("design:type", String)
    ], LabrpRequestBodyCertificateParameters.prototype, "gender", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MobileNoRQ" }),
        __metadata("design:type", String)
    ], LabrpRequestBodyCertificateParameters.prototype, "mobileNoRQ", void 0);
    return LabrpRequestBodyCertificateParameters;
}(utils_1.SpeakeasyBase));
exports.LabrpRequestBodyCertificateParameters = LabrpRequestBodyCertificateParameters;
/**
 * The format of the certificate in response.
 */
var LabrpRequestBodyFormatEnum;
(function (LabrpRequestBodyFormatEnum) {
    LabrpRequestBodyFormatEnum["Pdf"] = "pdf";
})(LabrpRequestBodyFormatEnum = exports.LabrpRequestBodyFormatEnum || (exports.LabrpRequestBodyFormatEnum = {}));
/**
 * Request format
 */
var LabrpRequestBody = /** @class */ (function (_super) {
    __extends(LabrpRequestBody, _super);
    function LabrpRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateParameters" }),
        (0, class_transformer_1.Type)(function () { return LabrpRequestBodyCertificateParameters; }),
        __metadata("design:type", LabrpRequestBodyCertificateParameters)
    ], LabrpRequestBody.prototype, "certificateParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "consentArtifact" }),
        (0, class_transformer_1.Type)(function () { return shared.ConsentArtifactSchema; }),
        __metadata("design:type", shared.ConsentArtifactSchema)
    ], LabrpRequestBody.prototype, "consentArtifact", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "format" }),
        __metadata("design:type", String)
    ], LabrpRequestBody.prototype, "format", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "txnId" }),
        __metadata("design:type", String)
    ], LabrpRequestBody.prototype, "txnId", void 0);
    return LabrpRequestBody;
}(utils_1.SpeakeasyBase));
exports.LabrpRequestBody = LabrpRequestBody;
var Labrp504ApplicationJSONErrorEnum;
(function (Labrp504ApplicationJSONErrorEnum) {
    Labrp504ApplicationJSONErrorEnum["GatewayTimeout"] = "gateway_timeout";
})(Labrp504ApplicationJSONErrorEnum = exports.Labrp504ApplicationJSONErrorEnum || (exports.Labrp504ApplicationJSONErrorEnum = {}));
var Labrp504ApplicationJSONErrorDescriptionEnum;
(function (Labrp504ApplicationJSONErrorDescriptionEnum) {
    Labrp504ApplicationJSONErrorDescriptionEnum["PublisherServiceDidNotRespondInTime"] = "Publisher service did not respond in time";
})(Labrp504ApplicationJSONErrorDescriptionEnum = exports.Labrp504ApplicationJSONErrorDescriptionEnum || (exports.Labrp504ApplicationJSONErrorDescriptionEnum = {}));
/**
 * Gateway timeout
 */
var Labrp504ApplicationJSON = /** @class */ (function (_super) {
    __extends(Labrp504ApplicationJSON, _super);
    function Labrp504ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        __metadata("design:type", String)
    ], Labrp504ApplicationJSON.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "errorDescription" }),
        __metadata("design:type", String)
    ], Labrp504ApplicationJSON.prototype, "errorDescription", void 0);
    return Labrp504ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.Labrp504ApplicationJSON = Labrp504ApplicationJSON;
var Labrp503ApplicationJSONErrorEnum;
(function (Labrp503ApplicationJSONErrorEnum) {
    Labrp503ApplicationJSONErrorEnum["ServiceUnavailable"] = "service_unavailable";
})(Labrp503ApplicationJSONErrorEnum = exports.Labrp503ApplicationJSONErrorEnum || (exports.Labrp503ApplicationJSONErrorEnum = {}));
var Labrp503ApplicationJSONErrorDescriptionEnum;
(function (Labrp503ApplicationJSONErrorDescriptionEnum) {
    Labrp503ApplicationJSONErrorDescriptionEnum["PublisherServiceIsTemporarilyUnavailable"] = "Publisher service is temporarily unavailable";
})(Labrp503ApplicationJSONErrorDescriptionEnum = exports.Labrp503ApplicationJSONErrorDescriptionEnum || (exports.Labrp503ApplicationJSONErrorDescriptionEnum = {}));
/**
 * Service unavailable
 */
var Labrp503ApplicationJSON = /** @class */ (function (_super) {
    __extends(Labrp503ApplicationJSON, _super);
    function Labrp503ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        __metadata("design:type", String)
    ], Labrp503ApplicationJSON.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "errorDescription" }),
        __metadata("design:type", String)
    ], Labrp503ApplicationJSON.prototype, "errorDescription", void 0);
    return Labrp503ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.Labrp503ApplicationJSON = Labrp503ApplicationJSON;
var Labrp502ApplicationJSONErrorEnum;
(function (Labrp502ApplicationJSONErrorEnum) {
    Labrp502ApplicationJSONErrorEnum["BadGatewy"] = "bad_gatewy";
})(Labrp502ApplicationJSONErrorEnum = exports.Labrp502ApplicationJSONErrorEnum || (exports.Labrp502ApplicationJSONErrorEnum = {}));
var Labrp502ApplicationJSONErrorDescriptionEnum;
(function (Labrp502ApplicationJSONErrorDescriptionEnum) {
    Labrp502ApplicationJSONErrorDescriptionEnum["PublisherServiceReturnedAnInvalidResponse"] = "Publisher service returned an invalid response";
})(Labrp502ApplicationJSONErrorDescriptionEnum = exports.Labrp502ApplicationJSONErrorDescriptionEnum || (exports.Labrp502ApplicationJSONErrorDescriptionEnum = {}));
/**
 * Bad gateway
 */
var Labrp502ApplicationJSON = /** @class */ (function (_super) {
    __extends(Labrp502ApplicationJSON, _super);
    function Labrp502ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        __metadata("design:type", String)
    ], Labrp502ApplicationJSON.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "errorDescription" }),
        __metadata("design:type", String)
    ], Labrp502ApplicationJSON.prototype, "errorDescription", void 0);
    return Labrp502ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.Labrp502ApplicationJSON = Labrp502ApplicationJSON;
var Labrp500ApplicationJSONErrorEnum;
(function (Labrp500ApplicationJSONErrorEnum) {
    Labrp500ApplicationJSONErrorEnum["InternalServerError"] = "internal_server_error";
})(Labrp500ApplicationJSONErrorEnum = exports.Labrp500ApplicationJSONErrorEnum || (exports.Labrp500ApplicationJSONErrorEnum = {}));
var Labrp500ApplicationJSONErrorDescriptionEnum;
(function (Labrp500ApplicationJSONErrorDescriptionEnum) {
    Labrp500ApplicationJSONErrorDescriptionEnum["InternalServerError"] = "Internal server error";
})(Labrp500ApplicationJSONErrorDescriptionEnum = exports.Labrp500ApplicationJSONErrorDescriptionEnum || (exports.Labrp500ApplicationJSONErrorDescriptionEnum = {}));
/**
 * Internal server error
 */
var Labrp500ApplicationJSON = /** @class */ (function (_super) {
    __extends(Labrp500ApplicationJSON, _super);
    function Labrp500ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        __metadata("design:type", String)
    ], Labrp500ApplicationJSON.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "errorDescription" }),
        __metadata("design:type", String)
    ], Labrp500ApplicationJSON.prototype, "errorDescription", void 0);
    return Labrp500ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.Labrp500ApplicationJSON = Labrp500ApplicationJSON;
var Labrp404ApplicationJSONErrorEnum;
(function (Labrp404ApplicationJSONErrorEnum) {
    Labrp404ApplicationJSONErrorEnum["RecordNotFound"] = "record_not_found";
    Labrp404ApplicationJSONErrorEnum["UrlNotFound"] = "url_not_found";
})(Labrp404ApplicationJSONErrorEnum = exports.Labrp404ApplicationJSONErrorEnum || (exports.Labrp404ApplicationJSONErrorEnum = {}));
var Labrp404ApplicationJSONErrorDescriptionEnum;
(function (Labrp404ApplicationJSONErrorDescriptionEnum) {
    Labrp404ApplicationJSONErrorDescriptionEnum["NoRecordFound"] = "No record found";
    Labrp404ApplicationJSONErrorDescriptionEnum["YourAPIUrlOrPathIsIncorrect"] = "Your API url or path is incorrect";
})(Labrp404ApplicationJSONErrorDescriptionEnum = exports.Labrp404ApplicationJSONErrorDescriptionEnum || (exports.Labrp404ApplicationJSONErrorDescriptionEnum = {}));
/**
 * No record found
 */
var Labrp404ApplicationJSON = /** @class */ (function (_super) {
    __extends(Labrp404ApplicationJSON, _super);
    function Labrp404ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        __metadata("design:type", String)
    ], Labrp404ApplicationJSON.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "errorDescription" }),
        __metadata("design:type", String)
    ], Labrp404ApplicationJSON.prototype, "errorDescription", void 0);
    return Labrp404ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.Labrp404ApplicationJSON = Labrp404ApplicationJSON;
var Labrp401ApplicationJSONErrorEnum;
(function (Labrp401ApplicationJSONErrorEnum) {
    Labrp401ApplicationJSONErrorEnum["InvalidAuthentication"] = "invalid_authentication";
    Labrp401ApplicationJSONErrorEnum["InvalidAuthorization"] = "invalid_authorization";
})(Labrp401ApplicationJSONErrorEnum = exports.Labrp401ApplicationJSONErrorEnum || (exports.Labrp401ApplicationJSONErrorEnum = {}));
var Labrp401ApplicationJSONErrorDescriptionEnum;
(function (Labrp401ApplicationJSONErrorDescriptionEnum) {
    Labrp401ApplicationJSONErrorDescriptionEnum["AuthenticationFailed"] = "Authentication failed";
    Labrp401ApplicationJSONErrorDescriptionEnum["YouAreNotAuthorizedToUseThisAPI"] = "You are not authorized to use this API";
})(Labrp401ApplicationJSONErrorDescriptionEnum = exports.Labrp401ApplicationJSONErrorDescriptionEnum || (exports.Labrp401ApplicationJSONErrorDescriptionEnum = {}));
/**
 * Unauthorized access
 */
var Labrp401ApplicationJSON = /** @class */ (function (_super) {
    __extends(Labrp401ApplicationJSON, _super);
    function Labrp401ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        __metadata("design:type", String)
    ], Labrp401ApplicationJSON.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "errorDescription" }),
        __metadata("design:type", String)
    ], Labrp401ApplicationJSON.prototype, "errorDescription", void 0);
    return Labrp401ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.Labrp401ApplicationJSON = Labrp401ApplicationJSON;
var Labrp400ApplicationJSONErrorEnum;
(function (Labrp400ApplicationJSONErrorEnum) {
    Labrp400ApplicationJSONErrorEnum["MissingParameter"] = "missing_parameter";
    Labrp400ApplicationJSONErrorEnum["InvalidParameter"] = "invalid_parameter";
    Labrp400ApplicationJSONErrorEnum["InvalidFormat"] = "invalid_format";
    Labrp400ApplicationJSONErrorEnum["InvalidTxnid"] = "invalid_txnid";
    Labrp400ApplicationJSONErrorEnum["InvalidConsentid"] = "invalid_consentid";
})(Labrp400ApplicationJSONErrorEnum = exports.Labrp400ApplicationJSONErrorEnum || (exports.Labrp400ApplicationJSONErrorEnum = {}));
var Labrp400ApplicationJSONErrorDescriptionEnum;
(function (Labrp400ApplicationJSONErrorDescriptionEnum) {
    Labrp400ApplicationJSONErrorDescriptionEnum["PleaseProvideAllMandatoryParameters"] = "Please provide all mandatory parameters";
    Labrp400ApplicationJSONErrorDescriptionEnum["BadRequest"] = "Bad request";
    Labrp400ApplicationJSONErrorDescriptionEnum["TheFormatParameterIsInvalid"] = "The format parameter is invalid";
    Labrp400ApplicationJSONErrorDescriptionEnum["TheTxnIdParameterMustBeInUUIDFormat"] = "The txnId parameter must be in UUID format";
    Labrp400ApplicationJSONErrorDescriptionEnum["TheConsentIdParameterMustBeInUUIDFormat"] = "The consentId parameter must be in UUID format";
})(Labrp400ApplicationJSONErrorDescriptionEnum = exports.Labrp400ApplicationJSONErrorDescriptionEnum || (exports.Labrp400ApplicationJSONErrorDescriptionEnum = {}));
/**
 * Bad request
 */
var Labrp400ApplicationJSON = /** @class */ (function (_super) {
    __extends(Labrp400ApplicationJSON, _super);
    function Labrp400ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        __metadata("design:type", String)
    ], Labrp400ApplicationJSON.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "errorDescription" }),
        __metadata("design:type", String)
    ], Labrp400ApplicationJSON.prototype, "errorDescription", void 0);
    return Labrp400ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.Labrp400ApplicationJSON = Labrp400ApplicationJSON;
var LabrpResponse = /** @class */ (function (_super) {
    __extends(LabrpResponse, _super);
    function LabrpResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], LabrpResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], LabrpResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], LabrpResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Labrp400ApplicationJSON)
    ], LabrpResponse.prototype, "labrp400ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Labrp401ApplicationJSON)
    ], LabrpResponse.prototype, "labrp401ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Labrp404ApplicationJSON)
    ], LabrpResponse.prototype, "labrp404ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Labrp500ApplicationJSON)
    ], LabrpResponse.prototype, "labrp500ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Labrp502ApplicationJSON)
    ], LabrpResponse.prototype, "labrp502ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Labrp503ApplicationJSON)
    ], LabrpResponse.prototype, "labrp503ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Labrp504ApplicationJSON)
    ], LabrpResponse.prototype, "labrp504ApplicationJSONObject", void 0);
    return LabrpResponse;
}(utils_1.SpeakeasyBase));
exports.LabrpResponse = LabrpResponse;
