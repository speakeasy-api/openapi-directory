"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import range as shared_range
from ..shared import tablecelllocation as shared_tablecelllocation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeleteParagraphBulletsRequest:
    r"""Deletes bullets from all of the paragraphs that overlap with the given text index range. The nesting level of each paragraph will be visually preserved by adding indent to the start of the corresponding paragraph."""
    
    cell_location: Optional[shared_tablecelllocation.TableCellLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cellLocation'), 'exclude': lambda f: f is None }})
    r"""A location of a single table cell within a table."""  
    object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectId'), 'exclude': lambda f: f is None }})
    r"""The object ID of the shape or table containing the text to delete bullets from."""  
    text_range: Optional[shared_range.Range] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textRange'), 'exclude': lambda f: f is None }})
    r"""Specifies a contiguous range of an indexed collection, such as characters in text."""  
    