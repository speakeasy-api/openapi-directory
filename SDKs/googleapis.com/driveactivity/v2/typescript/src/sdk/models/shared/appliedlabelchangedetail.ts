/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FieldValueChange } from "./fieldvaluechange";
import { Expose, Type } from "class-transformer";

export enum AppliedLabelChangeDetailTypesEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  LabelAdded = "LABEL_ADDED",
  LabelRemoved = "LABEL_REMOVED",
  LabelFieldValueChanged = "LABEL_FIELD_VALUE_CHANGED",
  LabelAppliedByItemCreate = "LABEL_APPLIED_BY_ITEM_CREATE",
}

/**
 * A change made to a Label on the Target.
 */
export class AppliedLabelChangeDetail extends SpeakeasyBase {
  /**
   * Field Changes. Only present if `types` contains `LABEL_FIELD_VALUE_CHANGED`.
   */
  @SpeakeasyMetadata({ elemType: FieldValueChange })
  @Expose({ name: "fieldChanges" })
  @Type(() => FieldValueChange)
  fieldChanges?: FieldValueChange[];

  /**
   * The Label name representing the Label that changed. This name always contains the revision of the Label that was used when this Action occurred. The format is `labels/id@revision`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * The human-readable title of the label that changed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The types of changes made to the Label on the Target.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "types" })
  types?: AppliedLabelChangeDetailTypesEnum[];
}
