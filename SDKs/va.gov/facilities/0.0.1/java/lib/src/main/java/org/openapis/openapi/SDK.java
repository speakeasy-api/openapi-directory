/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * ## Background
 * 
 * This RESTful API provides information about physical VA facilities. Information available includes
 * geographic location, address, phone, hours of operation, and available services.
 * 
 * VA operates several different types of facilities, the types represented in this API include:
 * - Health Facilities (vha)
 * - Benefits Facilities (vba)
 * - Cemeteries (nca)
 * - Vet Centers (vc)
 * 
 * To read an FAQ on how wait times are calculated, click the "For more information" link on [this page](https://www.accesstocare.va.gov/PWT/SearchWaitTimes).
 * 
 * ## Getting Started
 * 
 * ### Base URLs
 * 
 * The base URLs for the VA Facilities API in the various environments are:
 * - Sandbox: `https://sandbox-api.va.gov/services/va_facilities/v0`
 * - Production: `https://api.va.gov/services/va_facilities/v0`
 * 
 * ### Authorization
 * 
 * API requests are authorized through a symmetric API token, provided in an HTTP header with name `apikey`.
 * 
 * ### Response Formats
 * 
 * Clients may request several response formats by setting the `Accept` header.
 * - `application/json` - The default JSON response format complies with JSON API. This media type is *not* available for bulk requests using the `/facilities/all` endpoint. It will return `406 Not Acceptable`.
 * - `application/geo+json` - GeoJSON-compliant format, representing each facility as a feature with a point geometry.
 * - `application/vnd.geo+json` - Deprecated. Prefer application/geo+json.
 * - `text/csv` - Available for the bulk download operation only. Some structured fields are omitted from the CSV response.
 * 
 * ### Response Elements
 * 
 * Some data elements within the response are only present for facilities of a given type:
 * - The patient satisfaction scores contained in the `satisfaction` element are only applicable
 *   to VA health facilities.
 * - The patient wait time values contained in the `wait_times` element are only applicable to
 *   VA health facilities.
 * - The list of available services in the `services` element is only applicable to VA health and
 *   benefits facilities.
 * - The operational hours special instructions contained in the `operational_hours_special_instructions` element is only applicable to VA health and Vet Center facilities.
 * 
 * ### Facility ID Formats and Constraints
 * 
 * A facility ID has the format `prefix_stationNumber`. The prefix is one of nca, vc, vba, or vha. Cemeteries may be national (VA) or non-national; non-national cemeteries have the station number prefixed with an `s`. There are no other constraints on the format. Examples:
 * - Health: `vha_402GA`
 * - Benefits: `vba_539GB`
 * - National cemetery: `nca_063`
 * - Non-national cemetery: `nca_s1082`
 * - Vet center: `vc_0872MVC`
 * 
 * 
 * ### Mobile Facilities
 * 
 * The mobile health facilities move regularly within a region. If a facility comes back from this API with `"mobile": "true"`, the latitude/longitude and address could be inaccurate. To get the exact current location, please call the number listed.
 * 
 * ## Deprecations
 * 
 * - `active_status` field is deprecated and replaced with `operating_status`.
 * - `application/vnd.geo+json` media type is deprecated and replaced by `application/geo+json`
 * 
 * 
 * ## Reference
 * 
 * - [Raw VA Facilities Open API Spec](https://api.va.gov/services/va_facilities/docs/v0/api)
 * - [GeoJSON Format](https://tools.ietf.org/html/rfc7946)
 * - [JSON API Format](https://jsonapi.org/format/)
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        /**
         * Sandbox
         */
        "https://sandbox-api.va.gov/services/va_facilities/{version}",
        /**
         * Production
         */
        "https://api.va.gov/services/va_facilities/{version}",
	};
  	
    /**
     * VA Facilities API
     */
    public Facilities facilities;	

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}
		
		
		this.facilities = new Facilities(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
	}
}