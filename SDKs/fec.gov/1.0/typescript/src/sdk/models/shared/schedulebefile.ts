/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommitteeHistory } from "./committeehistory";
import { EFilings } from "./efilings";
import { Expose, Transform, Type } from "class-transformer";

export class ScheduleBEfile extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amendment_indicator" })
  amendmentIndicator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_schedule_name" })
  backReferenceScheduleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_transaction_id" })
  backReferenceTransactionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "beginning_image_number" })
  beginningImageNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "beneficiary_committee_name" })
  beneficiaryCommitteeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office" })
  candidateOffice?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_district" })
  candidateOfficeDistrict?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committee" })
  @Type(() => CommitteeHistory)
  committee?: CommitteeHistory;

  /**
   *
   * @remarks
   * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committee_id" })
  committeeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "csv_url" })
  csvUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "disbursement_amount" })
  disbursementAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "disbursement_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  disbursementDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "disbursement_description" })
  disbursementDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "disbursement_type" })
  disbursementType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "entity_type" })
  entityType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fec_url" })
  fecUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "file_number" })
  fileNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "filing" })
  @Type(() => EFilings)
  filing?: EFilings;

  /**
   *
   * @remarks
   * An unique identifier for each page where the electronic or paper filing is reported.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image_number" })
  imageNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_notice" })
  isNotice?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "line_number" })
  lineNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "load_timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  loadTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_code" })
  memoCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_text" })
  memoText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_name" })
  payeeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pdf_url" })
  pdfUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient_city" })
  recipientCity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient_name" })
  recipientName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient_prefix" })
  recipientPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient_state" })
  recipientState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient_suffix" })
  recipientSuffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient_zip" })
  recipientZip?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "related_line_number" })
  relatedLineNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "report_type" })
  reportType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "semi_annual_bundled_refund" })
  semiAnnualBundledRefund?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId?: string;
}
