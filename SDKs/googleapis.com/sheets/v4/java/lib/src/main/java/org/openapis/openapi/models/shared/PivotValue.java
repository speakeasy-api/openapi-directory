/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PivotValue - The definition of how a value in a pivot table should be calculated.
 */
public class PivotValue {
    /**
     * If specified, indicates that pivot values should be displayed as the result of a calculation with another pivot value. For example, if calculated_display_type is specified as PERCENT_OF_GRAND_TOTAL, all the pivot values are displayed as the percentage of the grand total. In the Sheets editor, this is referred to as "Show As" in the value section of a pivot table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("calculatedDisplayType")
    public PivotValueCalculatedDisplayTypeEnum calculatedDisplayType;

    public PivotValue withCalculatedDisplayType(PivotValueCalculatedDisplayTypeEnum calculatedDisplayType) {
        this.calculatedDisplayType = calculatedDisplayType;
        return this;
    }
    
    /**
     * An unique identifier that references a data source column.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataSourceColumnReference")
    public DataSourceColumnReference dataSourceColumnReference;

    public PivotValue withDataSourceColumnReference(DataSourceColumnReference dataSourceColumnReference) {
        this.dataSourceColumnReference = dataSourceColumnReference;
        return this;
    }
    
    /**
     * A custom formula to calculate the value. The formula must start with an `=` character.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formula")
    public String formula;

    public PivotValue withFormula(String formula) {
        this.formula = formula;
        return this;
    }
    
    /**
     * A name to use for the value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public PivotValue withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The column offset of the source range that this value reads from. For example, if the source was `C10:E15`, a `sourceColumnOffset` of `0` means this value refers to column `C`, whereas the offset `1` would refer to column `D`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceColumnOffset")
    public Integer sourceColumnOffset;

    public PivotValue withSourceColumnOffset(Integer sourceColumnOffset) {
        this.sourceColumnOffset = sourceColumnOffset;
        return this;
    }
    
    /**
     * A function to summarize the value. If formula is set, the only supported values are SUM and CUSTOM. If sourceColumnOffset is set, then `CUSTOM` is not supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("summarizeFunction")
    public PivotValueSummarizeFunctionEnum summarizeFunction;

    public PivotValue withSummarizeFunction(PivotValueSummarizeFunctionEnum summarizeFunction) {
        this.summarizeFunction = summarizeFunction;
        return this;
    }
    
    public PivotValue(){}
}
