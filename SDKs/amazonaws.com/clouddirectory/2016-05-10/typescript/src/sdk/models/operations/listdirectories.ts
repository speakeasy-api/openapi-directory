/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The state of the directories in the list. Can be either Enabled, Disabled, or Deleted.
 */
export enum ListDirectoriesRequestBodyStateEnum {
  Enabled = "ENABLED",
  Disabled = "DISABLED",
  Deleted = "DELETED",
}

export class ListDirectoriesRequestBody extends SpeakeasyBase {
  /**
   * The maximum number of results to retrieve.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  /**
   * The pagination token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  /**
   * The state of the directories in the list. Can be either Enabled, Disabled, or Deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ListDirectoriesRequestBodyStateEnum;
}

export class ListDirectoriesRequest extends SpeakeasyBase {
  /**
   * Pagination limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxResults",
  })
  maxResults?: string;

  /**
   * Pagination token
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NextToken",
  })
  nextToken?: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ListDirectoriesRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class ListDirectoriesResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: shared.AccessDeniedException;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServiceException
   */
  @SpeakeasyMetadata()
  internalServiceException?: shared.InternalServiceException;

  /**
   * InvalidArnException
   */
  @SpeakeasyMetadata()
  invalidArnException?: shared.InvalidArnException;

  /**
   * InvalidNextTokenException
   */
  @SpeakeasyMetadata()
  invalidNextTokenException?: shared.InvalidNextTokenException;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: shared.LimitExceededException;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listDirectoriesResponse?: shared.ListDirectoriesResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * RetryableConflictException
   */
  @SpeakeasyMetadata()
  retryableConflictException?: shared.RetryableConflictException;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: shared.ValidationException;
}
