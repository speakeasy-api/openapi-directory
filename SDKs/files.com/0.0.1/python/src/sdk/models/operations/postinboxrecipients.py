"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import inboxrecipiententity as shared_inboxrecipiententity
from typing import Optional


@dataclasses.dataclass
class PostInboxRecipientsRequestBody:
    
    inbox_id: int = dataclasses.field(metadata={'multipart_form': { 'field_name': 'inbox_id' }})
    r"""Inbox to share."""  
    recipient: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'recipient' }})
    r"""Email address to share this inbox with."""  
    company: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'company' }})
    r"""Company of recipient."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'name' }})
    r"""Name of recipient."""  
    note: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'note' }})
    r"""Note to include in email."""  
    share_after_create: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'share_after_create' }})
    r"""Set to true to share the link with the recipient upon creation."""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'user_id' }})
    r"""User ID.  Provide a value of `0` to operate the current session's user."""  
    

@dataclasses.dataclass
class PostInboxRecipientsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    inbox_recipient_entity: Optional[shared_inboxrecipiententity.InboxRecipientEntity] = dataclasses.field(default=None)
    r"""The InboxRecipients object."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    