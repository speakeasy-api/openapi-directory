"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimension as shared_dimension
from ..shared import standardunit_enum as shared_standardunit_enum
from ..shared import statisticset as shared_statisticset
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class MetricDatum:
    r"""Encapsulates the information sent to either create a metric or add new values to be aggregated into an existing metric."""
    
    metric_name: str = dataclasses.field()  
    counts: Optional[list[float]] = dataclasses.field(default=None)  
    dimensions: Optional[list[shared_dimension.Dimension]] = dataclasses.field(default=None)  
    statistic_values: Optional[shared_statisticset.StatisticSet] = dataclasses.field(default=None)  
    storage_resolution: Optional[int] = dataclasses.field(default=None)  
    timestamp: Optional[datetime] = dataclasses.field(default=None)  
    unit: Optional[shared_standardunit_enum.StandardUnitEnum] = dataclasses.field(default=None)  
    value: Optional[float] = dataclasses.field(default=None)  
    values: Optional[list[float]] = dataclasses.field(default=None)  
    