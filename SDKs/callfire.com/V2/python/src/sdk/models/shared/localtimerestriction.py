"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LocalTimeRestriction:
    r"""Represents a range of time during which CallFire will send a call or text to recipients. Timeframe uses the local timezone of recipient's number"""
    
    begin_hour: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beginHour'), 'exclude': lambda f: f is None }})
    r"""An hour of restriction start"""  
    begin_minute: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beginMinute'), 'exclude': lambda f: f is None }})
    r"""The minutes to start a restriction"""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""A restriction enabled"""  
    end_hour: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endHour'), 'exclude': lambda f: f is None }})
    r"""An hour of restriction end"""  
    end_minute: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endMinute'), 'exclude': lambda f: f is None }})
    r"""The minutes of restriction end"""  
    