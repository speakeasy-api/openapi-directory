<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TranslateTextGlossaryConfig - Configures which glossary is used for a specific target language and defines options for applying that glossary.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TranslateTextGlossaryConfig
{
    /**
     * Required. The `glossary` to be applied for this translation. The format depends on the glossary: - User-provided custom glossary: `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`
     * 
     * @var ?string $glossary
     */
	#[\JMS\Serializer\Annotation\SerializedName('glossary')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $glossary = null;
    
    /**
     * Optional. Indicates match is case insensitive. The default value is `false` if missing.
     * 
     * @var ?bool $ignoreCase
     */
	#[\JMS\Serializer\Annotation\SerializedName('ignoreCase')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ignoreCase = null;
    
	public function __construct()
	{
		$this->glossary = null;
		$this->ignoreCase = null;
	}
}
