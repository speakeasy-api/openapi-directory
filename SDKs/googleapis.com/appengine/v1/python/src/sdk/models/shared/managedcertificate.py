"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ManagedCertificateStatusEnum(str, Enum):
    r"""Status of certificate management. Refers to the most recent certificate acquisition or renewal attempt.@OutputOnly"""
    MANAGEMENT_STATUS_UNSPECIFIED = 'MANAGEMENT_STATUS_UNSPECIFIED'
    OK = 'OK'
    PENDING = 'PENDING'
    FAILED_RETRYING_NOT_VISIBLE = 'FAILED_RETRYING_NOT_VISIBLE'
    FAILED_PERMANENT = 'FAILED_PERMANENT'
    FAILED_RETRYING_CAA_FORBIDDEN = 'FAILED_RETRYING_CAA_FORBIDDEN'
    FAILED_RETRYING_CAA_CHECKING = 'FAILED_RETRYING_CAA_CHECKING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManagedCertificate:
    r"""A certificate managed by App Engine."""
    
    last_renewal_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastRenewalTime'), 'exclude': lambda f: f is None }})
    r"""Time at which the certificate was last renewed. The renewal process is fully managed. Certificate renewal will automatically occur before the certificate expires. Renewal errors can be tracked via ManagementStatus.@OutputOnly"""  
    status: Optional[ManagedCertificateStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of certificate management. Refers to the most recent certificate acquisition or renewal attempt.@OutputOnly"""  
    