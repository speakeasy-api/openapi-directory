// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DataLeakPreventionChangeTypeEnum - The type of Data Leak Prevention (DLP) change.
type DataLeakPreventionChangeTypeEnum string

const (
	DataLeakPreventionChangeTypeEnumTypeUnspecified DataLeakPreventionChangeTypeEnum = "TYPE_UNSPECIFIED"
	DataLeakPreventionChangeTypeEnumFlagged         DataLeakPreventionChangeTypeEnum = "FLAGGED"
	DataLeakPreventionChangeTypeEnumCleared         DataLeakPreventionChangeTypeEnum = "CLEARED"
)

func (e *DataLeakPreventionChangeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "FLAGGED":
		fallthrough
	case "CLEARED":
		*e = DataLeakPreventionChangeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataLeakPreventionChangeTypeEnum: %s", s)
	}
}

// DataLeakPreventionChange - A change in the object's data leak prevention status.
type DataLeakPreventionChange struct {
	// The type of Data Leak Prevention (DLP) change.
	Type *DataLeakPreventionChangeTypeEnum `json:"type,omitempty"`
}
