/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExperimentExecution } from "./experimentexecution";
import { ExperimentSchedule } from "./experimentschedule";
import { ExperimentStatusEnum } from "./experimentstatusenum";
import { ExperimentTypeEnum } from "./experimenttypeenum";
import { MetricGoal } from "./metricgoal";
import { OnlineAbDefinition } from "./onlineabdefinition";
import { Treatment } from "./treatment";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A structure containing the configuration details of an experiment.
 */
export class Experiment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "execution" })
  @Type(() => ExperimentExecution)
  execution?: ExperimentExecution;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime: Date;

  @SpeakeasyMetadata({ elemType: MetricGoal })
  @Expose({ name: "metricGoals" })
  @Type(() => MetricGoal)
  metricGoals?: MetricGoal[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "onlineAbDefinition" })
  @Type(() => OnlineAbDefinition)
  onlineAbDefinition?: OnlineAbDefinition;

  @SpeakeasyMetadata()
  @Expose({ name: "project" })
  project?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "randomizationSalt" })
  randomizationSalt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "samplingRate" })
  samplingRate?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "schedule" })
  @Type(() => ExperimentSchedule)
  schedule?: ExperimentSchedule;

  @SpeakeasyMetadata()
  @Expose({ name: "segment" })
  segment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: ExperimentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusReason" })
  statusReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: Treatment })
  @Expose({ name: "treatments" })
  @Type(() => Treatment)
  treatments?: Treatment[];

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ExperimentTypeEnum;
}
