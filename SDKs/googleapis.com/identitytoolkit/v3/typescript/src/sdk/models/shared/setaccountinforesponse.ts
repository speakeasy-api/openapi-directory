/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class SetAccountInfoResponseProviderUserInfo extends SpeakeasyBase {
  /**
   * The user's display name at the IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * User's identifier at IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "federatedId" })
  federatedId?: string;

  /**
   * The user's photo url at the IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoUrl" })
  photoUrl?: string;

  /**
   * The IdP ID. For whitelisted IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "providerId" })
  providerId?: string;
}

/**
 * Respone of setting the account information.
 */
export class SetAccountInfoResponse extends SpeakeasyBase {
  /**
   * The name of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The email of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * If email has been verified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailVerified" })
  emailVerified?: boolean;

  /**
   * If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiresIn" })
  expiresIn?: string;

  /**
   * The Gitkit id token to login the newly sign up user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idToken" })
  idToken?: string;

  /**
   * The fixed string "identitytoolkit#SetAccountInfoResponse".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The local ID of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "localId" })
  localId?: string;

  /**
   * The new email the user attempts to change to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "newEmail" })
  newEmail?: string;

  /**
   * The user's hashed password.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "passwordHash" })
  passwordHash?: string;

  /**
   * The photo url of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoUrl" })
  photoUrl?: string;

  /**
   * The user's profiles at the associated IdPs.
   */
  @SpeakeasyMetadata({ elemType: SetAccountInfoResponseProviderUserInfo })
  @Expose({ name: "providerUserInfo" })
  @Type(() => SetAccountInfoResponseProviderUserInfo)
  providerUserInfo?: SetAccountInfoResponseProviderUserInfo[];

  /**
   * If idToken is STS id token, then this field will be refresh token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refreshToken" })
  refreshToken?: string;
}
