// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetFeatureClassesOutputFormatEnum - The format of the output.
type GetFeatureClassesOutputFormatEnum string

const (
	GetFeatureClassesOutputFormatEnumJSON GetFeatureClassesOutputFormatEnum = "json"
	GetFeatureClassesOutputFormatEnumXML  GetFeatureClassesOutputFormatEnum = "xml"
)

func (e GetFeatureClassesOutputFormatEnum) ToPointer() *GetFeatureClassesOutputFormatEnum {
	return &e
}

func (e *GetFeatureClassesOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		*e = GetFeatureClassesOutputFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFeatureClassesOutputFormatEnum: %v", v)
	}
}

type GetFeatureClassesRequest struct {
	// The format of the output.
	OutputFormat GetFeatureClassesOutputFormatEnum `queryParam:"style=form,explode=true,name=outputFormat"`
}

type GetFeatureClassesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
