"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CaOptions:
    r"""Describes values that are relevant in a CA certificate."""
    
    is_ca: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isCa'), 'exclude': lambda f: f is None }})
    r"""Optional. Refers to the \\"CA\\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate."""  
    max_issuer_path_length: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxIssuerPathLength'), 'exclude': lambda f: f is None }})
    r"""Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate."""  
    