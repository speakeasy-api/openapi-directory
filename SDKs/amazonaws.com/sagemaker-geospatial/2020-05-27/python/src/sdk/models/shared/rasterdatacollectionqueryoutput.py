"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import areaofinterest as shared_areaofinterest
from ..shared import propertyfilters as shared_propertyfilters
from ..shared import timerangefilterinput as shared_timerangefilterinput
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RasterDataCollectionQueryOutput:
    r"""<p/>"""
    
    raster_data_collection_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RasterDataCollectionArn') }})  
    raster_data_collection_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RasterDataCollectionName') }})  
    time_range_filter: shared_timerangefilterinput.TimeRangeFilterInput = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimeRangeFilter') }})  
    area_of_interest: Optional[shared_areaofinterest.AreaOfInterest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AreaOfInterest'), 'exclude': lambda f: f is None }})  
    property_filters: Optional[shared_propertyfilters.PropertyFilters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PropertyFilters'), 'exclude': lambda f: f is None }})  
    