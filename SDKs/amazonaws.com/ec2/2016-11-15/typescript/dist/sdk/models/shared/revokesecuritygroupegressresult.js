"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RevokeSecurityGroupEgressResult = exports.RevokeSecurityGroupEgressResultUnknownIpPermissions = exports.RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs = exports.RevokeSecurityGroupEgressResultUnknownIpPermissionsPrefixListIds = exports.RevokeSecurityGroupEgressResultUnknownIpPermissionsIpv6Ranges = exports.RevokeSecurityGroupEgressResultUnknownIpPermissionsIpRanges = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * Describes an IPv4 range.
 */
var RevokeSecurityGroupEgressResultUnknownIpPermissionsIpRanges = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressResultUnknownIpPermissionsIpRanges, _super);
    function RevokeSecurityGroupEgressResultUnknownIpPermissionsIpRanges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsIpRanges.prototype, "cidrIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsIpRanges.prototype, "description", void 0);
    return RevokeSecurityGroupEgressResultUnknownIpPermissionsIpRanges;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressResultUnknownIpPermissionsIpRanges = RevokeSecurityGroupEgressResultUnknownIpPermissionsIpRanges;
/**
 * [EC2-VPC only] Describes an IPv6 range.
 */
var RevokeSecurityGroupEgressResultUnknownIpPermissionsIpv6Ranges = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressResultUnknownIpPermissionsIpv6Ranges, _super);
    function RevokeSecurityGroupEgressResultUnknownIpPermissionsIpv6Ranges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsIpv6Ranges.prototype, "cidrIpv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsIpv6Ranges.prototype, "description", void 0);
    return RevokeSecurityGroupEgressResultUnknownIpPermissionsIpv6Ranges;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressResultUnknownIpPermissionsIpv6Ranges = RevokeSecurityGroupEgressResultUnknownIpPermissionsIpv6Ranges;
/**
 * Describes a prefix list ID.
 */
var RevokeSecurityGroupEgressResultUnknownIpPermissionsPrefixListIds = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressResultUnknownIpPermissionsPrefixListIds, _super);
    function RevokeSecurityGroupEgressResultUnknownIpPermissionsPrefixListIds() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsPrefixListIds.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsPrefixListIds.prototype, "prefixListId", void 0);
    return RevokeSecurityGroupEgressResultUnknownIpPermissionsPrefixListIds;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressResultUnknownIpPermissionsPrefixListIds = RevokeSecurityGroupEgressResultUnknownIpPermissionsPrefixListIds;
/**
 * <p>Describes a security group and Amazon Web Services account ID pair.</p> <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note>
 */
var RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs, _super);
    function RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "groupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "groupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "peeringStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "userId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "vpcId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "vpcPeeringConnectionId", void 0);
    return RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs = RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs;
/**
 * Describes a set of permissions for a security group rule.
 */
var RevokeSecurityGroupEgressResultUnknownIpPermissions = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressResultUnknownIpPermissions, _super);
    function RevokeSecurityGroupEgressResultUnknownIpPermissions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissions.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissions.prototype, "ipProtocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupEgressResultUnknownIpPermissionsIpRanges,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissions.prototype, "ipRanges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupEgressResultUnknownIpPermissionsIpv6Ranges,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissions.prototype, "ipv6Ranges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupEgressResultUnknownIpPermissionsPrefixListIds,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissions.prototype, "prefixListIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissions.prototype, "toPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupEgressResultUnknownIpPermissionsUserIdGroupPairs,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressResultUnknownIpPermissions.prototype, "userIdGroupPairs", void 0);
    return RevokeSecurityGroupEgressResultUnknownIpPermissions;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressResultUnknownIpPermissions = RevokeSecurityGroupEgressResultUnknownIpPermissions;
/**
 * Success
 */
var RevokeSecurityGroupEgressResult = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupEgressResult, _super);
    function RevokeSecurityGroupEgressResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RevokeSecurityGroupEgressResult.prototype, "return", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupEgressResultUnknownIpPermissions,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupEgressResult.prototype, "unknownIpPermissions", void 0);
    return RevokeSecurityGroupEgressResult;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupEgressResult = RevokeSecurityGroupEgressResult;
