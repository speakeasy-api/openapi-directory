/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InAppMessageContent } from "./inappmessagecontent";
import { LayoutEnum } from "./layoutenum";
import { TemplateTypeEnum } from "./templatetypeenum";
import { Expose, Type } from "class-transformer";

/**
 * In-App Template Response.
 */
export class InAppTemplateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata({ elemType: InAppMessageContent })
  @Expose({ name: "Content" })
  @Type(() => InAppMessageContent)
  content?: InAppMessageContent[];

  @SpeakeasyMetadata()
  @Expose({ name: "CreationDate" })
  creationDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomConfig" })
  customConfig?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedDate" })
  lastModifiedDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Layout" })
  layout?: LayoutEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateDescription" })
  templateDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateName" })
  templateName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateType" })
  templateType: TemplateTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Version" })
  version?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
