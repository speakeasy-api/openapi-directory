<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ChargeTier
{
    /**
     * Limit on the number of units for which the tier is effective.
     * 
     * 
     * 
     * @var ?float $endingUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('endingUnit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $endingUnit = null;
    
    /**
     * Price or per-unit price of the tier, depending on the value of the `priceFormat` field.
     * 
     * 
     * 
     * @var float $price
     */
	#[\JMS\Serializer\Annotation\SerializedName('price')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $price;
    
    /**
     * Specifies whether the tier has a fixed price or a per-unit price.
     * 
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ChargeTierPriceFormatEnum $priceFormat
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceFormat')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ChargeTierPriceFormatEnum>')]
    public ChargeTierPriceFormatEnum $priceFormat;
    
    /**
     * Number of units at which the tier becomes effective.
     * 
     * 
     * 
     * @var float $startingUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('startingUnit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $startingUnit;
    
    /**
     * Index of the tier in the charge.
     * 
     * 
     * 
     * @var int $tier
     */
	#[\JMS\Serializer\Annotation\SerializedName('tier')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $tier;
    
	public function __construct()
	{
		$this->endingUnit = null;
		$this->price = 0;
		$this->priceFormat = \OpenAPI\OpenAPI\Models\Shared\ChargeTierPriceFormatEnum::FLAT_FEE;
		$this->startingUnit = 0;
		$this->tier = 0;
	}
}
