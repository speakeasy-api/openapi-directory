"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StreamingStragglerInfo:
    r"""Information useful for streaming straggler identification and debugging."""
    
    data_watermark_lag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataWatermarkLag'), 'exclude': lambda f: f is None }})
    r"""The event-time watermark lag at the time of the straggler detection."""  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""End time of this straggler."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""Start time of this straggler."""  
    system_watermark_lag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('systemWatermarkLag'), 'exclude': lambda f: f is None }})
    r"""The system watermark lag at the time of the straggler detection."""  
    worker_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workerName'), 'exclude': lambda f: f is None }})
    r"""Name of the worker where the straggler was detected."""  
    