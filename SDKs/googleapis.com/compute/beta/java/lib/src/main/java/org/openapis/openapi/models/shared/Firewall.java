/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Firewall - Represents a Firewall Rule resource. Firewall rules allow or deny ingress traffic to, and egress traffic from your instances. For more information, read Firewall rules.
 */
public class Firewall {
    /**
     * The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowed")
    public FirewallAllowed[] allowed;

    public Firewall withAllowed(FirewallAllowed[] allowed) {
        this.allowed = allowed;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public Firewall withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a denied connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("denied")
    public FirewallDenied[] denied;

    public Firewall withDenied(FirewallDenied[] denied) {
        this.denied = denied;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this field when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Firewall withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * If destination ranges are specified, the firewall rule applies only to traffic that has destination IP address in these ranges. These ranges must be expressed in CIDR format. Both IPv4 and IPv6 are supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationRanges")
    public String[] destinationRanges;

    public Firewall withDestinationRanges(String[] destinationRanges) {
        this.destinationRanges = destinationRanges;
        return this;
    }
    
    /**
     * Direction of traffic to which this firewall applies, either `INGRESS` or `EGRESS`. The default is `INGRESS`. For `EGRESS` traffic, you cannot specify the sourceTags fields.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public FirewallDirectionEnum direction;

    public Firewall withDirection(FirewallDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Denotes whether the firewall rule is disabled. When set to true, the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall rule will be enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabled")
    public Boolean disabled;

    public Firewall withDisabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }
    
    /**
     * Deprecated in favor of enable in LogConfig. This field denotes whether to enable logging for a particular firewall rule. If logging is enabled, logs will be exported t Cloud Logging.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableLogging")
    public Boolean enableLogging;

    public Firewall withEnableLogging(Boolean enableLogging) {
        this.enableLogging = enableLogging;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Firewall withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#firewall for firewall rules.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Firewall withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The available logging options for a firewall rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logConfig")
    public FirewallLogConfig logConfig;

    public Firewall withLogConfig(FirewallLogConfig logConfig) {
        this.logConfig = logConfig;
        return this;
    }
    
    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Firewall withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * URL of the network resource for this firewall rule. If not specified when creating a firewall rule, the default network is used: global/networks/default If you choose to specify this field, you can specify the network as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network - projects/myproject/global/networks/my-network - global/networks/default 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public Firewall withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * Priority for this rule. This is an integer between `0` and `65535`, both inclusive. The default value is `1000`. Relative priorities determine which rule takes effect if multiple rules apply. Lower values indicate higher priority. For example, a rule with priority `0` has higher precedence than a rule with priority `1`. DENY rules take precedence over ALLOW rules if they have equal priority. Note that VPC networks have implied rules with a priority of `65535`. To avoid conflicts with the implied rules, use a priority number less than `65535`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public Integer priority;

    public Firewall withPriority(Integer priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public Firewall withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * If source ranges are specified, the firewall rule applies only to traffic that has a source IP address in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both fields are set, the rule applies to traffic that has a source IP address within sourceRanges OR a source IP from a resource with a matching tag listed in the sourceTags field. The connection does not need to match both fields for the rule to apply. Both IPv4 and IPv6 are supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceRanges")
    public String[] sourceRanges;

    public Firewall withSourceRanges(String[] sourceRanges) {
        this.sourceRanges = sourceRanges;
        return this;
    }
    
    /**
     * If source service accounts are specified, the firewall rules apply only to traffic originating from an instance with a service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same time as sourceServiceAccounts. If both are set, the firewall applies to traffic that has a source IP address within the sourceRanges OR a source IP that belongs to an instance with service account listed in sourceServiceAccount. The connection does not need to match both fields for the firewall to apply. sourceServiceAccounts cannot be used at the same time as sourceTags or targetTags.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceServiceAccounts")
    public String[] sourceServiceAccounts;

    public Firewall withSourceServiceAccounts(String[] sourceServiceAccounts) {
        this.sourceServiceAccounts = sourceServiceAccounts;
        return this;
    }
    
    /**
     * If source tags are specified, the firewall rule applies only to traffic with source IPs that match the primary network interfaces of VM instances that have the tag and are in the same VPC network. Source tags cannot be used to control traffic to an instance's external IP address, it only applies to traffic between instances in the same virtual network. Because tags are associated with instances, not IP addresses. One or both of sourceRanges and sourceTags may be set. If both fields are set, the firewall applies to traffic that has a source IP address within sourceRanges OR a source IP from a resource with a matching tag listed in the sourceTags field. The connection does not need to match both fields for the firewall to apply.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceTags")
    public String[] sourceTags;

    public Firewall withSourceTags(String[] sourceTags) {
        this.sourceTags = sourceTags;
        return this;
    }
    
    /**
     * A list of service accounts indicating sets of instances located in the network that may make network connections as specified in allowed[]. targetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetServiceAccounts")
    public String[] targetServiceAccounts;

    public Firewall withTargetServiceAccounts(String[] targetServiceAccounts) {
        this.targetServiceAccounts = targetServiceAccounts;
        return this;
    }
    
    /**
     * A list of tags that controls which instances the firewall rule applies to. If targetTags are specified, then the firewall rule applies only to instances in the VPC network that have one of those tags. If no targetTags are specified, the firewall rule applies to all instances on the specified network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetTags")
    public String[] targetTags;

    public Firewall withTargetTags(String[] targetTags) {
        this.targetTags = targetTags;
        return this;
    }
    
    public Firewall(){}
}
