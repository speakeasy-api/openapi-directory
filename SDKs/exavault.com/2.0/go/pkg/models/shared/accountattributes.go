// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type AccountAttributesAllowedIP struct {
	IPEnd   *string `json:"ipEnd,omitempty"`
	IPStart *string `json:"ipStart,omitempty"`
}

// AccountAttributesStatusEnum - Account status flag. A one (1) means the account is active; zero (0) means it is suspended.
type AccountAttributesStatusEnum int

const (
	AccountAttributesStatusEnumOne  AccountAttributesStatusEnum = 1
	AccountAttributesStatusEnumZero AccountAttributesStatusEnum = 0
)

func (e AccountAttributesStatusEnum) ToPointer() *AccountAttributesStatusEnum {
	return &e
}

func (e *AccountAttributesStatusEnum) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 0:
		*e = AccountAttributesStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountAttributesStatusEnum: %v", v)
	}
}

type AccountAttributes struct {
	// Name of the account
	AccountName *string `json:"accountName,omitempty"`
	// Whether the web application onboarding help is enabled for new users in the account.
	AccountOnboarding *bool `json:"accountOnboarding,omitempty"`
	// Range of IP addresses allowed to access this account.
	AllowedIP []AccountAttributesAllowedIP `json:"allowedIp,omitempty"`
	// Branding flag. Set to `true` if the account has branding functionality enabled.
	Branding         *bool             `json:"branding,omitempty"`
	BrandingSettings *BrandingSettings `json:"brandingSettings,omitempty"`
	// (ExaVault Use Only) Internal ID of the account in CMS.
	ClientID *int `json:"clientId,omitempty"`
	// Flag to indicate whether the account requires complex passwords. Set to `true` to require complex passwords on all users and shares.
	ComplexPasswords *bool `json:"complexPasswords,omitempty"`
	// Timestamp of account creation.
	Created *time.Time `json:"created,omitempty"`
	// Custom domain flag. Set to `true` if account type allows custom domain functionality.
	CustomDomain *bool `json:"customDomain,omitempty"`
	// Custom signature for all account emails users or recipients will receive.
	CustomSignature *string `json:"customSignature,omitempty"`
	// Custom domain used to brand this account.
	ExternalDomains []string `json:"externalDomains,omitempty"`
	// Maximum number of users the account can have. This can be increased by contacting ExaVault Support.
	MaxUsers *int `json:"maxUsers,omitempty"`
	// Timestamp of account modification.
	Modified    *time.Time   `json:"modified,omitempty"`
	PlanDetails *PlanDetails `json:"planDetails,omitempty"`
	Quota       *Quota       `json:"quota,omitempty"`
	// Flag to indicate whether the account disables connections via insecure protocols (e.g. FTP). Set to `true` to disable all traffic over port 21.
	SecureOnly *bool `json:"secureOnly,omitempty"`
	// Flag to indicate showing of referrals links in the account. Set to `true` to include marketing messages in share invitations.
	ShowReferralLinks *bool `json:"showReferralLinks,omitempty"`
	// Account status flag. A one (1) means the account is active; zero (0) means it is suspended.
	Status *AccountAttributesStatusEnum `json:"status,omitempty"`
	// Current number of users on the account.
	UserCount *int `json:"userCount,omitempty"`
	// Content of welcome email each new user will receive.
	WelcomeEmailContent *string `json:"welcomeEmailContent,omitempty"`
	// Subject of welcome email each new user will receive.
	WelcomeEmailSubject *string `json:"welcomeEmailSubject,omitempty"`
}
