"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import address as shared_address
from ..shared import contact as shared_contact
from ..shared import phone as shared_phone
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BusinessAccount:
    r"""The type that defines the fields for the business account information."""
    
    address: Optional[shared_address.Address] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})
    r"""The type that defines the fields for an address."""  
    doing_business_as: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doingBusinessAs'), 'exclude': lambda f: f is None }})
    r"""An additional name that is used for their business on eBay. The business name is returned in the name field."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""The email address of the business account."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The business name associated with the user's eBay account."""  
    primary_contact: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryContact'), 'exclude': lambda f: f is None }})
    r"""The type that defines the fields for the information of the contact person for the account."""  
    primary_phone: Optional[shared_phone.Phone] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryPhone'), 'exclude': lambda f: f is None }})
    r"""The type that defines the fields for the details of a phone."""  
    secondary_phone: Optional[shared_phone.Phone] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secondaryPhone'), 'exclude': lambda f: f is None }})
    r"""The type that defines the fields for the details of a phone."""  
    website: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('website'), 'exclude': lambda f: f is None }})
    r"""The business website address associated with the eBay account."""  
    