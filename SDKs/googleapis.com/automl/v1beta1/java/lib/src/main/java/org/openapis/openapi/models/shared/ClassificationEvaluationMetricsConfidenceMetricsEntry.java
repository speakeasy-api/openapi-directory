/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ClassificationEvaluationMetricsConfidenceMetricsEntry - Metrics for a single confidence threshold.
 */
public class ClassificationEvaluationMetricsConfidenceMetricsEntry {
    /**
     * Output only. Metrics are computed with an assumption that the model never returns predictions with score lower than this value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidenceThreshold")
    public Float confidenceThreshold;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withConfidenceThreshold(Float confidenceThreshold) {
        this.confidenceThreshold = confidenceThreshold;
        return this;
    }
    
    /**
     * Output only. The harmonic mean of recall and precision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("f1Score")
    public Float f1Score;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withF1Score(Float f1Score) {
        this.f1Score = f1Score;
        return this;
    }
    
    /**
     * Output only. The harmonic mean of recall_at1 and precision_at1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("f1ScoreAt1")
    public Float f1ScoreAt1;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withF1ScoreAt1(Float f1ScoreAt1) {
        this.f1ScoreAt1 = f1ScoreAt1;
        return this;
    }
    
    /**
     * Output only. The number of ground truth labels that are not matched by a model created label.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("falseNegativeCount")
    public String falseNegativeCount;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withFalseNegativeCount(String falseNegativeCount) {
        this.falseNegativeCount = falseNegativeCount;
        return this;
    }
    
    /**
     * Output only. The number of model created labels that do not match a ground truth label.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("falsePositiveCount")
    public String falsePositiveCount;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withFalsePositiveCount(String falsePositiveCount) {
        this.falsePositiveCount = falsePositiveCount;
        return this;
    }
    
    /**
     * Output only. False Positive Rate for the given confidence threshold.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("falsePositiveRate")
    public Float falsePositiveRate;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withFalsePositiveRate(Float falsePositiveRate) {
        this.falsePositiveRate = falsePositiveRate;
        return this;
    }
    
    /**
     * Output only. The False Positive Rate when only considering the label that has the highest prediction score and not below the confidence threshold for each example.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("falsePositiveRateAt1")
    public Float falsePositiveRateAt1;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withFalsePositiveRateAt1(Float falsePositiveRateAt1) {
        this.falsePositiveRateAt1 = falsePositiveRateAt1;
        return this;
    }
    
    /**
     * Output only. Metrics are computed with an assumption that the model always returns at most this many predictions (ordered by their score, descendingly), but they all still need to meet the confidence_threshold.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("positionThreshold")
    public Integer positionThreshold;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withPositionThreshold(Integer positionThreshold) {
        this.positionThreshold = positionThreshold;
        return this;
    }
    
    /**
     * Output only. Precision for the given confidence threshold.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("precision")
    public Float precision;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withPrecision(Float precision) {
        this.precision = precision;
        return this;
    }
    
    /**
     * Output only. The precision when only considering the label that has the highest prediction score and not below the confidence threshold for each example.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("precisionAt1")
    public Float precisionAt1;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withPrecisionAt1(Float precisionAt1) {
        this.precisionAt1 = precisionAt1;
        return this;
    }
    
    /**
     * Output only. Recall (True Positive Rate) for the given confidence threshold.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recall")
    public Float recall;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withRecall(Float recall) {
        this.recall = recall;
        return this;
    }
    
    /**
     * Output only. The Recall (True Positive Rate) when only considering the label that has the highest prediction score and not below the confidence threshold for each example.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recallAt1")
    public Float recallAt1;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withRecallAt1(Float recallAt1) {
        this.recallAt1 = recallAt1;
        return this;
    }
    
    /**
     * Output only. The number of labels that were not created by the model, but if they would, they would not match a ground truth label.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trueNegativeCount")
    public String trueNegativeCount;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withTrueNegativeCount(String trueNegativeCount) {
        this.trueNegativeCount = trueNegativeCount;
        return this;
    }
    
    /**
     * Output only. The number of model created labels that match a ground truth label.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("truePositiveCount")
    public String truePositiveCount;

    public ClassificationEvaluationMetricsConfidenceMetricsEntry withTruePositiveCount(String truePositiveCount) {
        this.truePositiveCount = truePositiveCount;
        return this;
    }
    
    public ClassificationEvaluationMetricsConfidenceMetricsEntry(){}
}
