/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Changes } from "./changes";
import { DnsKeys } from "./dnskeys";
import { ManagedZoneOperations } from "./managedzoneoperations";
import { ManagedZones } from "./managedzones";
import { Policies } from "./policies";
import { Projects } from "./projects";
import { ResourceRecordSets } from "./resourcerecordsets";
import { ResponsePolicies } from "./responsepolicies";
import { ResponsePolicyRules } from "./responsepolicyrules";
import axios, { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://dns.googleapis.com/"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 *
 * @see {@link https://cloud.google.com/dns/docs}
 */
export class SDK {
  public changes: Changes;
  public dnsKeys: DnsKeys;
  public managedZoneOperations: ManagedZoneOperations;
  public managedZones: ManagedZones;
  public policies: Policies;
  public projects: Projects;
  public resourceRecordSets: ResourceRecordSets;
  public responsePolicies: ResponsePolicies;
  public responsePolicyRules: ResponsePolicyRules;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.changes = new Changes(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.dnsKeys = new DnsKeys(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.managedZoneOperations = new ManagedZoneOperations(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.managedZones = new ManagedZones(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.policies = new Policies(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.projects = new Projects(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.resourceRecordSets = new ResourceRecordSets(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.responsePolicies = new ResponsePolicies(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.responsePolicyRules = new ResponsePolicyRules(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
