/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class CreateUpdateAddressRequests extends SpeakeasyBase {
  /**
   * Address name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressName" })
  addressName?: string;

  /**
   * Type of address. For example, `Residential` or `Pickup`, among others.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressType" })
  addressType?: string;

  /**
   * City of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Complement to the shipping address in case it applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement?: string;

  /**
   * Three letter ISO code of the country of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Neighborhood of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "neighborhood" })
  neighborhood?: string;

  /**
   * Number of the building, house or apartment in the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Postal Code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * Name of the person who is going to receive the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverName" })
  receiverName?: string;

  /**
   * Complement that might help locate the shipping address more precisely in case of delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * State of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Street of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street?: string;

  /**
   * ID of the customer to whom the address belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}
