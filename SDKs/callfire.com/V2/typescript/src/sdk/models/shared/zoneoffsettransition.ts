/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Duration } from "./duration";
import { ZoneOffset } from "./zoneoffset";
import { Expose, Transform, Type } from "class-transformer";

/**
 * ~
 */
export class ZoneOffsetTransition extends SpeakeasyBase {
  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateTimeAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTimeAfter?: Date;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateTimeBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTimeBefore?: Date;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  @Type(() => Duration)
  duration?: Duration;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gap" })
  gap?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instant" })
  instant?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offsetAfter" })
  @Type(() => ZoneOffset)
  offsetAfter?: ZoneOffset;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offsetBefore" })
  @Type(() => ZoneOffset)
  offsetBefore?: ZoneOffset;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overlap" })
  overlap?: boolean;
}
