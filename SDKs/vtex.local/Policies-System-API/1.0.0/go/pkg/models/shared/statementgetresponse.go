// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type StatementGetResponseConditionConditions struct {
	// These are the conditions the actions can have. The possible values are `[]`, `stringEquals`, and `numericGreaterThan`
	Conditions []string `json:"conditions,omitempty"`
	// The element that will define what the policy will influence. This field has the possible values `skuId`, `brandId`, `discountPercentage`
	Key *string `json:"key,omitempty"`
	// The action of the condition. This operation possible values are `None`, `stringEquals`, `stringEqualsIgnoreCase`, `numericEquals`, `numericLessThan`, `numericLessThanEquals`,   `numericGreaterThan`, `numericGreaterThanEquals`, `bool`, `not`, `or`, `and`, `dateTimeUtcGreaterThan`, `dateTimeUtcLessThan`, and `between`
	Operation *string `json:"operation,omitempty"`
	// Value of the key
	Values []string `json:"values,omitempty"`
}

// StatementGetResponseCondition - Condition to activate this policy. This object can have a maximum of ten recursive conditions
type StatementGetResponseCondition struct {
	// List of conditions that will activate the policy
	Conditions []StatementGetResponseConditionConditions `json:"conditions,omitempty"`
}

type StatementGetResponse struct {
	// Actions that the Policy will execute
	Actions []interface{} `json:"actions,omitempty"`
	// Condition to activate this policy. This object can have a maximum of ten recursive conditions
	Condition *StatementGetResponseCondition `json:"condition,omitempty"`
	// This field is not functional at the moment. To create a correct request, fill the field with `Allow`
	Effect string `json:"effect"`
	// This operation will determine if all the conditions need to be valid or at least one of them, if the conditions array is not empty.  The possible values to these fields are `None`, `stringEquals`, `stringEqualsIgnoreCase`, `numericEquals`, `numericLessThan`, `numericLessThanEquals`,   `numericGreaterThan`, `numericGreaterThanEquals`, `bool`, `not`, `or`, `and`, `dateTimeUtcGreaterThan`, `dateTimeUtcLessThan`, and `between`
	Operation *string `json:"operation,omitempty"`
	// Scope on which this policy must be evaluated
	Resource *string `json:"resource,omitempty"`
}
