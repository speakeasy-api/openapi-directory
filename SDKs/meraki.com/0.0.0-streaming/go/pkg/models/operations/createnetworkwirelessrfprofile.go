// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum - Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual.
type CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum string

const (
	CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnumTwo4ghz CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum = "2.4ghz"
	CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnumFiveghz CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum = "5ghz"
	CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnumDual    CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum = "dual"
)

func (e CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum) ToPointer() *CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum {
	return &e
}

func (e *CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2.4ghz":
		fallthrough
	case "5ghz":
		fallthrough
	case "dual":
		*e = CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum: %v", v)
	}
}

// CreateNetworkWirelessRfProfileRequestBodyApBandSettings - Settings that will be enabled if selectionType is set to 'ap'.
type CreateNetworkWirelessRfProfileRequestBodyApBandSettings struct {
	// Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual.
	BandOperationMode *CreateNetworkWirelessRfProfileRequestBodyApBandSettingsBandOperationModeEnum `json:"bandOperationMode,omitempty"`
	// Steers client to most open band. Can be either true or false. Defaults to true.
	BandSteeringEnabled *bool `json:"bandSteeringEnabled,omitempty"`
}

// CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnum - Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
type CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnum string

const (
	CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnumAp   CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnum = "ap"
	CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnumSsid CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnum = "ssid"
)

func (e CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnum) ToPointer() *CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnum {
	return &e
}

func (e *CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ap":
		fallthrough
	case "ssid":
		*e = CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnum: %v", v)
	}
}

// CreateNetworkWirelessRfProfileRequestBodyFiveGhzSettings - Settings related to 5Ghz band
type CreateNetworkWirelessRfProfileRequestBodyFiveGhzSettings struct {
	// Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'. Defaults to auto.
	ChannelWidth *string `json:"channelWidth,omitempty"`
	// Sets max power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 30.
	MaxPower *int64 `json:"maxPower,omitempty"`
	// Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'. Defaults to 12.
	MinBitrate *int64 `json:"minBitrate,omitempty"`
	// Sets min power (dBm) of 5Ghz band. Can be integer between 2 and 30. Defaults to 8.
	MinPower *int64 `json:"minPower,omitempty"`
	// The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
	Rxsop *int64 `json:"rxsop,omitempty"`
	// Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157, 161, 165].
	ValidAutoChannels []int64 `json:"validAutoChannels,omitempty"`
}

// CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnum - Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
type CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnum string

const (
	CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnumBand CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnum = "band"
	CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnumSsid CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnum = "ssid"
)

func (e CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnum) ToPointer() *CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnum {
	return &e
}

func (e *CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "band":
		fallthrough
	case "ssid":
		*e = CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnum: %v", v)
	}
}

// CreateNetworkWirelessRfProfileRequestBodyTwoFourGhzSettings - Settings related to 2.4Ghz band
type CreateNetworkWirelessRfProfileRequestBodyTwoFourGhzSettings struct {
	// Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering. Defaults to true.
	AxEnabled *bool `json:"axEnabled,omitempty"`
	// Sets max power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 30.
	MaxPower *int64 `json:"maxPower,omitempty"`
	// Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults to 11.
	MinBitrate *float32 `json:"minBitrate,omitempty"`
	// Sets min power (dBm) of 2.4Ghz band. Can be integer between 2 and 30. Defaults to 5.
	MinPower *int64 `json:"minPower,omitempty"`
	// The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will reset this to the default.
	Rxsop *int64 `json:"rxsop,omitempty"`
	// Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'. Defaults to [1, 6, 11].
	ValidAutoChannels []int64 `json:"validAutoChannels,omitempty"`
}

type CreateNetworkWirelessRfProfileRequestBody struct {
	// Settings that will be enabled if selectionType is set to 'ap'.
	ApBandSettings *CreateNetworkWirelessRfProfileRequestBodyApBandSettings `json:"apBandSettings,omitempty"`
	// Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
	BandSelectionType CreateNetworkWirelessRfProfileRequestBodyBandSelectionTypeEnum `json:"bandSelectionType"`
	// Steers client to best available access point. Can be either true or false. Defaults to true.
	ClientBalancingEnabled *bool `json:"clientBalancingEnabled,omitempty"`
	// Settings related to 5Ghz band
	FiveGhzSettings *CreateNetworkWirelessRfProfileRequestBodyFiveGhzSettings `json:"fiveGhzSettings,omitempty"`
	// Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
	MinBitrateType *CreateNetworkWirelessRfProfileRequestBodyMinBitrateTypeEnum `json:"minBitrateType,omitempty"`
	// The name of the new profile. Must be unique. This param is required on creation.
	Name string `json:"name"`
	// Settings related to 2.4Ghz band
	TwoFourGhzSettings *CreateNetworkWirelessRfProfileRequestBodyTwoFourGhzSettings `json:"twoFourGhzSettings,omitempty"`
}

type CreateNetworkWirelessRfProfileRequest struct {
	RequestBody CreateNetworkWirelessRfProfileRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                    `pathParam:"style=simple,explode=false,name=networkId"`
}

type CreateNetworkWirelessRfProfileResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	CreateNetworkWirelessRfProfile201ApplicationJSONObject map[string]interface{}
}
