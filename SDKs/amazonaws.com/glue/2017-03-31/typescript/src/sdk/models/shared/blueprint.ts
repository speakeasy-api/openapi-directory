/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BlueprintStatusEnum } from "./blueprintstatusenum";
import { LastActiveDefinition } from "./lastactivedefinition";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The details of a blueprint.
 */
export class Blueprint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BlueprintLocation" })
  blueprintLocation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BlueprintServiceLocation" })
  blueprintServiceLocation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorMessage" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastActiveDefinition" })
  @Type(() => LastActiveDefinition)
  lastActiveDefinition?: LastActiveDefinition;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParameterSpec" })
  parameterSpec?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: BlueprintStatusEnum;
}
