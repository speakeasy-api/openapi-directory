"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import location as shared_location
from ..shared import tablecolumnproperties as shared_tablecolumnproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateTableColumnPropertiesRequest:
    r"""Updates the TableColumnProperties of columns in a table."""
    
    column_indices: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columnIndices'), 'exclude': lambda f: f is None }})
    r"""The list of zero-based column indices whose property should be updated. If no indices are specified, all columns will be updated."""  
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})
    r"""The fields that should be updated. At least one field must be specified. The root `tableColumnProperties` is implied and should not be specified. A single `\\"*\\"` can be used as short-hand for listing every field. For example to update the column width, set `fields` to `\\"width\\"`."""  
    table_column_properties: Optional[shared_tablecolumnproperties.TableColumnProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableColumnProperties'), 'exclude': lambda f: f is None }})
    r"""The properties of a column in a table."""  
    table_start_location: Optional[shared_location.Location] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableStartLocation'), 'exclude': lambda f: f is None }})
    r"""A particular location in the document."""  
    