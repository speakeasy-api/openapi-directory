// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BillingAggregatedInformationGetByAppSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type BillingAggregatedInformationGetByAppPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

// BillingAggregatedInformationGetByAppPeriodEnum - Type of period that should be included in the Billing Information
type BillingAggregatedInformationGetByAppPeriodEnum string

const (
	BillingAggregatedInformationGetByAppPeriodEnumPrevious BillingAggregatedInformationGetByAppPeriodEnum = "Previous"
	BillingAggregatedInformationGetByAppPeriodEnumCurrent  BillingAggregatedInformationGetByAppPeriodEnum = "Current"
	BillingAggregatedInformationGetByAppPeriodEnumNext     BillingAggregatedInformationGetByAppPeriodEnum = "Next"
)

func (e *BillingAggregatedInformationGetByAppPeriodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Previous":
		fallthrough
	case "Current":
		fallthrough
	case "Next":
		*e = BillingAggregatedInformationGetByAppPeriodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingAggregatedInformationGetByAppPeriodEnum: %s", s)
	}
}

// BillingAggregatedInformationGetByAppServiceEnum - Type of service that should be included in the Billing Information
type BillingAggregatedInformationGetByAppServiceEnum string

const (
	BillingAggregatedInformationGetByAppServiceEnumTest  BillingAggregatedInformationGetByAppServiceEnum = "Test"
	BillingAggregatedInformationGetByAppServiceEnumBuild BillingAggregatedInformationGetByAppServiceEnum = "Build"
)

func (e *BillingAggregatedInformationGetByAppServiceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Test":
		fallthrough
	case "Build":
		*e = BillingAggregatedInformationGetByAppServiceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingAggregatedInformationGetByAppServiceEnum: %s", s)
	}
}

type BillingAggregatedInformationGetByAppQueryParams struct {
	// Type of period that should be included in the Billing Information
	Period *BillingAggregatedInformationGetByAppPeriodEnum `queryParam:"style=form,explode=true,name=period"`
	// Type of service that should be included in the Billing Information
	Service *BillingAggregatedInformationGetByAppServiceEnum `queryParam:"style=form,explode=true,name=service"`
	// Controls whether the API should show the original plan when Azure Subscription is not enabled
	ShowOriginalPlans *bool `queryParam:"style=form,explode=true,name=showOriginalPlans"`
}

type BillingAggregatedInformationGetByAppRequest struct {
	PathParams  BillingAggregatedInformationGetByAppPathParams
	QueryParams BillingAggregatedInformationGetByAppQueryParams
	Security    BillingAggregatedInformationGetByAppSecurity
}

// BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnum - The status code return by the API. It can be 400 or 403 or 500.
type BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnum string

const (
	BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnumFourHundred         BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnum = "400"
	BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnumFourHundredAndThree BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnum = "403"
	BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnumFiveHundred         BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnum = "500"
)

func (e *BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		fallthrough
	case "403":
		fallthrough
	case "500":
		*e = BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type BillingAggregatedInformationGetByAppDefaultApplicationJSONError struct {
	// The status code return by the API. It can be 400 or 403 or 500.
	Code *BillingAggregatedInformationGetByAppDefaultApplicationJSONErrorCodeEnum `json:"code,omitempty"`
	// The reason for the request failed
	Message *string `json:"message,omitempty"`
}

// BillingAggregatedInformationGetByAppDefaultApplicationJSON - Error
type BillingAggregatedInformationGetByAppDefaultApplicationJSON struct {
	Error *BillingAggregatedInformationGetByAppDefaultApplicationJSONError `json:"error,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnum - State of the Azure subscription used for billing
type BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnum string

const (
	BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnumEnabled  BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnum = "Enabled"
	BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnumDisabled BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnum = "Disabled"
	BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnumNotSet   BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnum = "NotSet"
)

func (e *BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Enabled":
		fallthrough
	case "Disabled":
		fallthrough
	case "NotSet":
		*e = BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnum: %s", s)
	}
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum - Service that receives payments for this billing plan.
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum string

const (
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnumNone      BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum = "None"
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnumAppCenter BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum = "AppCenter"
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnumGitHub    BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum = "GitHub"
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnumXtc       BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum = "Xtc"
)

func (e *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AppCenter":
		fallthrough
	case "GitHub":
		fallthrough
	case "Xtc":
		*e = BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum: %s", s)
	}
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanServiceEnum - Name of the service that the plan applies to.
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanServiceEnum string

const (
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanServiceEnumBuild BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanServiceEnum = "Build"
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanServiceEnumTest  BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanServiceEnum = "Test"
)

func (e *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanServiceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Build":
		fallthrough
	case "Test":
		*e = BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanServiceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanServiceEnum: %s", s)
	}
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan - Billing Plan
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan struct {
	// Collection of attribute values.
	Attributes map[string]map[string]interface{} `json:"attributes,omitempty"`
	// The Billing Plan ID
	ID *string `json:"id,omitempty"`
	// A collection of named numeric values
	Limits   map[string]float64 `json:"limits,omitempty"`
	ParentID *string            `json:"parentId,omitempty"`
	// Service that receives payments for this billing plan.
	PaymentSource *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum `json:"paymentSource,omitempty"`
	// Price of the Billing Plan
	Price *float64 `json:"price,omitempty"`
	// Name of the service that the plan applies to.
	Service *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlanServiceEnum `json:"service,omitempty"`
	// Version of the Billing Plan schema
	Version *string `json:"version,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccount - Selection of a billing plan
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccount struct {
	// Number of instances of the billing plan.
	Count *int64 `json:"count,omitempty"`
	// Billing Plan
	Plan *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccountPlan `json:"plan,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriod - Billing plans for a given period
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriod struct {
	// Selection of a billing plan
	ByAccount *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriodByAccount `json:"byAccount,omitempty"`
	// Exclusive end of the period.
	EndTime *string `json:"endTime,omitempty"`
	// Inclusive start of the period
	StartTime *string `json:"startTime,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildService - Billing Plans for a single service
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildService struct {
	// Can customer select trial plan for that service (if it exists)?
	CanSelectTrialPlan *bool `json:"canSelectTrialPlan,omitempty"`
	// Billing plans for a given period
	CurrentBillingPeriod *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildServiceCurrentBillingPeriod `json:"currentBillingPeriod,omitempty"`
	// Expiration time of the last selected trial plan. Will be null if trial plan was not used.
	LastTrialPlanExpirationTime *string `json:"lastTrialPlanExpirationTime,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum - Service that receives payments for this billing plan.
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum string

const (
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnumNone      BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum = "None"
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnumAppCenter BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum = "AppCenter"
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnumGitHub    BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum = "GitHub"
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnumXtc       BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum = "Xtc"
)

func (e *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AppCenter":
		fallthrough
	case "GitHub":
		fallthrough
	case "Xtc":
		*e = BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum: %s", s)
	}
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnum - Name of the service that the plan applies to.
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnum string

const (
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnumBuild BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnum = "Build"
	BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnumTest  BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnum = "Test"
)

func (e *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Build":
		fallthrough
	case "Test":
		*e = BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnum: %s", s)
	}
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan - Billing Plan
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan struct {
	// Collection of attribute values.
	Attributes map[string]map[string]interface{} `json:"attributes,omitempty"`
	// The Billing Plan ID
	ID *string `json:"id,omitempty"`
	// A collection of named numeric values
	Limits   map[string]float64 `json:"limits,omitempty"`
	ParentID *string            `json:"parentId,omitempty"`
	// Service that receives payments for this billing plan.
	PaymentSource *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanPaymentSourceEnum `json:"paymentSource,omitempty"`
	// Price of the Billing Plan
	Price *float64 `json:"price,omitempty"`
	// Name of the service that the plan applies to.
	Service *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlanServiceEnum `json:"service,omitempty"`
	// Version of the Billing Plan schema
	Version *string `json:"version,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccount - Selection of a billing plan
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccount struct {
	// Number of instances of the billing plan.
	Count *int64 `json:"count,omitempty"`
	// Billing Plan
	Plan *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccountPlan `json:"plan,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriod - Billing plans for a given period
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriod struct {
	// Selection of a billing plan
	ByAccount *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriodByAccount `json:"byAccount,omitempty"`
	// Exclusive end of the period.
	EndTime *string `json:"endTime,omitempty"`
	// Inclusive start of the period
	StartTime *string `json:"startTime,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestService - Billing Plans for a single service
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestService struct {
	// Can customer select trial plan for that service (if it exists)?
	CanSelectTrialPlan *bool `json:"canSelectTrialPlan,omitempty"`
	// Billing plans for a given period
	CurrentBillingPeriod *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestServiceCurrentBillingPeriod `json:"currentBillingPeriod,omitempty"`
	// Expiration time of the last selected trial plan. Will be null if trial plan was not used.
	LastTrialPlanExpirationTime *string `json:"lastTrialPlanExpirationTime,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlans - Billing Plans section in the Billing Information
type BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlans struct {
	// Billing Plans for a single service
	BuildService *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansBuildService `json:"buildService,omitempty"`
	// Billing Plans for a single service
	TestService *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlansTestService `json:"testService,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONUsageBuildServiceCurrentUsagePeriod - Usage for a single period
type BillingAggregatedInformationGetByApp200ApplicationJSONUsageBuildServiceCurrentUsagePeriod struct {
	// A collection of named numeric values
	ByAccount map[string]float64 `json:"byAccount,omitempty"`
	// A collection of  named numeric values grouped by app
	ByApp map[string]map[string]float64 `json:"byApp,omitempty"`
	// Exclusive end time of the usage period.
	EndTime *string `json:"endTime,omitempty"`
	// Inclusive start time of the usage period
	StartTime *string `json:"startTime,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONUsageBuildService - Resource usage for a single Mobile Center service
type BillingAggregatedInformationGetByApp200ApplicationJSONUsageBuildService struct {
	// Usage for a single period
	CurrentUsagePeriod *BillingAggregatedInformationGetByApp200ApplicationJSONUsageBuildServiceCurrentUsagePeriod `json:"currentUsagePeriod,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONUsageTestServiceCurrentUsagePeriod - Usage for a single period
type BillingAggregatedInformationGetByApp200ApplicationJSONUsageTestServiceCurrentUsagePeriod struct {
	// A collection of named numeric values
	ByAccount map[string]float64 `json:"byAccount,omitempty"`
	// A collection of  named numeric values grouped by app
	ByApp map[string]map[string]float64 `json:"byApp,omitempty"`
	// Exclusive end time of the usage period.
	EndTime *string `json:"endTime,omitempty"`
	// Inclusive start time of the usage period
	StartTime *string `json:"startTime,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONUsageTestService - Resource usage for a single Mobile Center service
type BillingAggregatedInformationGetByApp200ApplicationJSONUsageTestService struct {
	// Usage for a single period
	CurrentUsagePeriod *BillingAggregatedInformationGetByApp200ApplicationJSONUsageTestServiceCurrentUsagePeriod `json:"currentUsagePeriod,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSONUsage - Usage section in the Billing Information
type BillingAggregatedInformationGetByApp200ApplicationJSONUsage struct {
	// Resource usage for a single Mobile Center service
	BuildService *BillingAggregatedInformationGetByApp200ApplicationJSONUsageBuildService `json:"buildService,omitempty"`
	// Resource usage for a single Mobile Center service
	TestService *BillingAggregatedInformationGetByApp200ApplicationJSONUsageTestService `json:"testService,omitempty"`
}

// BillingAggregatedInformationGetByApp200ApplicationJSON - Aggregated Billing Information for a user or an organization
type BillingAggregatedInformationGetByApp200ApplicationJSON struct {
	// Unique identifier for the Azure subscription used for billing
	AzureSubscriptionID *string `json:"azureSubscriptionId,omitempty"`
	// State of the Azure subscription used for billing
	AzureSubscriptionState *BillingAggregatedInformationGetByApp200ApplicationJSONAzureSubscriptionStateEnum `json:"azureSubscriptionState,omitempty"`
	// Billing Plans section in the Billing Information
	BillingPlans *BillingAggregatedInformationGetByApp200ApplicationJSONBillingPlans `json:"billingPlans,omitempty"`
	// ID of the user or organization
	ID *string `json:"id,omitempty"`
	// The ISO 8601 datetime of last modification
	Timestamp *string `json:"timestamp,omitempty"`
	// Usage section in the Billing Information
	Usage *BillingAggregatedInformationGetByApp200ApplicationJSONUsage `json:"usage,omitempty"`
	// Version of the Billing Information schema
	Version *string `json:"version,omitempty"`
}

type BillingAggregatedInformationGetByAppResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Aggregated Billing Information for owner of a given app
	BillingAggregatedInformationGetByApp200ApplicationJSONObject *BillingAggregatedInformationGetByApp200ApplicationJSON
	// Error code with reason
	BillingAggregatedInformationGetByAppDefaultApplicationJSONObject *BillingAggregatedInformationGetByAppDefaultApplicationJSON
}
