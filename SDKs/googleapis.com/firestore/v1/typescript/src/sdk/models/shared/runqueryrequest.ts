/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StructuredQuery } from "./structuredquery";
import { TransactionOptions } from "./transactionoptions";
import { Expose, Type } from "class-transformer";

/**
 * The request for Firestore.RunQuery.
 */
export class RunQueryRequest extends SpeakeasyBase {
  /**
   * Options for creating a new transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "newTransaction" })
  @Type(() => TransactionOptions)
  newTransaction?: TransactionOptions;

  /**
   * Reads documents as they were at the given time. This may not be older than 270 seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readTime" })
  readTime?: string;

  /**
   * A Firestore query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "structuredQuery" })
  @Type(() => StructuredQuery)
  structuredQuery?: StructuredQuery;

  /**
   * Run the query within an already active transaction. The value here is the opaque transaction ID to execute the query in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction" })
  transaction?: string;
}
