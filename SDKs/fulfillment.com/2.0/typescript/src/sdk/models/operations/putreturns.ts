/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class PutReturnsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  fdcAuth: string;
}

export class PutReturnsRmaRequestV2Items extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "quantityExpected" })
  quantityExpected: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku: string;
}

/**
 * RMA
 */
export class PutReturnsRmaRequestV2 extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PutReturnsRmaRequestV2Items })
  @Expose({ name: "items" })
  @Type(() => PutReturnsRmaRequestV2Items)
  items: PutReturnsRmaRequestV2Items[];

  @SpeakeasyMetadata()
  @Expose({ name: "merchantOrderId" })
  merchantOrderId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient" })
  @Type(
    () =>
      shared.OneordersPostRequestBodyContentApplication1jsonSchemaPropertiesRecipient
  )
  recipient: shared.OneordersPostRequestBodyContentApplication1jsonSchemaPropertiesRecipient;

  @SpeakeasyMetadata()
  @Expose({ name: "rmaNumber" })
  rmaNumber: string;
}

export class PutReturnsRmaResponseV2Items extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "quantityExpected" })
  quantityExpected: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku: string;
}

export class PutReturnsRmaResponseV2ConsigneeV2IsoCountryV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Two character ISO code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iso2" })
  iso2?: string;

  /**
   * Country Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class PutReturnsRmaResponseV2ConsigneeV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address1" })
  address1: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address2" })
  address2?: string;

  /**
   * City
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressLocality" })
  addressLocality: string;

  /**
   * Province / State
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressRegion" })
  addressRegion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "companyName" })
  companyName?: string;

  /**
   * Ideally provide the two character ISO code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "iso" })
  @Type(() => PutReturnsRmaResponseV2ConsigneeV2IsoCountryV2)
  iso?: PutReturnsRmaResponseV2ConsigneeV2IsoCountryV2;

  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * Postal Code / Zip
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedBy" })
  @Type(
    () =>
      shared.OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy
  )
  updatedBy?: shared.OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy;
}

/**
 * RMA Created
 */
export class PutReturnsRmaResponseV2 extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PutReturnsRmaResponseV2Items })
  @Expose({ name: "items" })
  @Type(() => PutReturnsRmaResponseV2Items)
  items: PutReturnsRmaResponseV2Items[];

  @SpeakeasyMetadata()
  @Expose({ name: "merchantOrderId" })
  merchantOrderId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient" })
  @Type(() => PutReturnsRmaResponseV2ConsigneeV2)
  recipient: PutReturnsRmaResponseV2ConsigneeV2;

  @SpeakeasyMetadata()
  @Expose({ name: "rmaNumber" })
  rmaNumber: string;
}

export class PutReturnsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * RMA Created
   */
  @SpeakeasyMetadata()
  rmaResponseV2?: PutReturnsRmaResponseV2;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A Component of Your Request Was Not Found
   */
  @SpeakeasyMetadata()
  oneordersGetResponses404ContentApplication1jsonSchema?: shared.OneordersGetResponses404ContentApplication1jsonSchema;

  /**
   * RMA Updated
   */
  @SpeakeasyMetadata()
  onereturnsPutResponses201ContentApplication1jsonSchema?: shared.OnereturnsPutResponses201ContentApplication1jsonSchema;
}
