"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2entitytypeentity as shared_googleclouddialogflowv2entitytypeentity
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDialogflowV2EntityTypeAutoExpansionModeEnum(str, Enum):
    r"""Optional. Indicates whether the entity type can be automatically expanded."""
    AUTO_EXPANSION_MODE_UNSPECIFIED = 'AUTO_EXPANSION_MODE_UNSPECIFIED'
    AUTO_EXPANSION_MODE_DEFAULT = 'AUTO_EXPANSION_MODE_DEFAULT'

class GoogleCloudDialogflowV2EntityTypeKindEnum(str, Enum):
    r"""Required. Indicates the kind of entity type."""
    KIND_UNSPECIFIED = 'KIND_UNSPECIFIED'
    KIND_MAP = 'KIND_MAP'
    KIND_LIST = 'KIND_LIST'
    KIND_REGEXP = 'KIND_REGEXP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2EntityType:
    r"""Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview)."""
    
    auto_expansion_mode: Optional[GoogleCloudDialogflowV2EntityTypeAutoExpansionModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoExpansionMode'), 'exclude': lambda f: f is None }})
    r"""Optional. Indicates whether the entity type can be automatically expanded."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The name of the entity type."""  
    enable_fuzzy_extraction: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableFuzzyExtraction'), 'exclude': lambda f: f is None }})
    r"""Optional. Enables fuzzy entity extraction during classification."""  
    entities: Optional[list[shared_googleclouddialogflowv2entitytypeentity.GoogleCloudDialogflowV2EntityTypeEntity]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entities'), 'exclude': lambda f: f is None }})
    r"""Optional. The collection of entity entries associated with the entity type."""  
    kind: Optional[GoogleCloudDialogflowV2EntityTypeKindEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Required. Indicates the kind of entity type."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`."""  
    