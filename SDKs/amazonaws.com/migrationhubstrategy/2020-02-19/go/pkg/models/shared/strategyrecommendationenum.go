// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StrategyRecommendationEnum string

const (
	StrategyRecommendationEnumRecommended    StrategyRecommendationEnum = "recommended"
	StrategyRecommendationEnumViableOption   StrategyRecommendationEnum = "viableOption"
	StrategyRecommendationEnumNotRecommended StrategyRecommendationEnum = "notRecommended"
	StrategyRecommendationEnumPotential      StrategyRecommendationEnum = "potential"
)

func (e StrategyRecommendationEnum) ToPointer() *StrategyRecommendationEnum {
	return &e
}

func (e *StrategyRecommendationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "recommended":
		fallthrough
	case "viableOption":
		fallthrough
	case "notRecommended":
		fallthrough
	case "potential":
		*e = StrategyRecommendationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StrategyRecommendationEnum: %v", v)
	}
}
