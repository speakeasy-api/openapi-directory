/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MaintenanceWindowResourceTypeEnum } from "./maintenancewindowresourcetypeenum";
import { PatchOrchestratorFilter } from "./patchorchestratorfilter";
import { Target } from "./target";
import { Expose, Type } from "class-transformer";

export class DescribeMaintenanceWindowScheduleRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PatchOrchestratorFilter })
  @Expose({ name: "Filters" })
  @Type(() => PatchOrchestratorFilter)
  filters?: PatchOrchestratorFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceType" })
  resourceType?: MaintenanceWindowResourceTypeEnum;

  @SpeakeasyMetadata({ elemType: Target })
  @Expose({ name: "Targets" })
  @Type(() => Target)
  targets?: Target[];

  @SpeakeasyMetadata()
  @Expose({ name: "WindowId" })
  windowId?: string;
}
