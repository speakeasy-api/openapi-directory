/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Event - A JSON object containing the event
 */
public class Event {
    /**
     * Unique identifier for resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Event withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * An object containing the payload, if any, of the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payload")
    public Object payload;

    public Event withPayload(Object payload) {
        this.payload = payload;
        return this;
    }
    
    /**
     * [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time_created")
    public String timeCreated;

    public Event withTimeCreated(String timeCreated) {
        this.timeCreated = timeCreated;
        return this;
    }
    
    /**
     * [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this event was generated on the device. This is the device's own timestamp. Could be different due to buffering and clock differences.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time_event")
    public String timeEvent;

    public Event withTimeEvent(String timeEvent) {
        this.timeEvent = timeEvent;
        return this;
    }
    
    /**
     * [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this resource is going to be deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time_expire")
    public String timeExpire;

    public Event withTimeExpire(String timeExpire) {
        this.timeExpire = timeExpire;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topic")
    public EventTopic topic;

    public Event withTopic(EventTopic topic) {
        this.topic = topic;
        return this;
    }
    
    /**
     * Url to the individual resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public Event withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public Event(){}
}
