// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

type CancelSubscriptionCancellationPolicyEnum string

const (
	CancelSubscriptionCancellationPolicyEnumEndOfCurrentTerm       CancelSubscriptionCancellationPolicyEnum = "EndOfCurrentTerm"
	CancelSubscriptionCancellationPolicyEnumEndOfLastInvoicePeriod CancelSubscriptionCancellationPolicyEnum = "EndOfLastInvoicePeriod"
	CancelSubscriptionCancellationPolicyEnumSpecificDate           CancelSubscriptionCancellationPolicyEnum = "SpecificDate"
)

func (e *CancelSubscriptionCancellationPolicyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EndOfCurrentTerm":
		fallthrough
	case "EndOfLastInvoicePeriod":
		fallthrough
	case "SpecificDate":
		*e = CancelSubscriptionCancellationPolicyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelSubscriptionCancellationPolicyEnum: %s", s)
	}
}

// CancelSubscription - Information about an order action of type `CancelSubscription`.
type CancelSubscription struct {
	CancellationEffectiveDate *types.Date                              `json:"cancellationEffectiveDate,omitempty"`
	CancellationPolicy        CancelSubscriptionCancellationPolicyEnum `json:"cancellationPolicy"`
}
