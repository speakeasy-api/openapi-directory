/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DiskPartition - Disk Partition details.
 */
public class DiskPartition {
    /**
     * Partition capacity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capacityBytes")
    public String capacityBytes;
    public DiskPartition withCapacityBytes(String capacityBytes) {
        this.capacityBytes = capacityBytes;
        return this;
    }
    
    /**
     * Partition file system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileSystem")
    public String fileSystem;
    public DiskPartition withFileSystem(String fileSystem) {
        this.fileSystem = fileSystem;
        return this;
    }
    
    /**
     * Partition free space.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("freeBytes")
    public String freeBytes;
    public DiskPartition withFreeBytes(String freeBytes) {
        this.freeBytes = freeBytes;
        return this;
    }
    
    /**
     * Mount pount (Linux/Windows) or drive letter (Windows).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mountPoint")
    public String mountPoint;
    public DiskPartition withMountPoint(String mountPoint) {
        this.mountPoint = mountPoint;
        return this;
    }
    
    /**
     * Disk partition list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subPartitions")
    public DiskPartitionList subPartitions;
    public DiskPartition withSubPartitions(DiskPartitionList subPartitions) {
        this.subPartitions = subPartitions;
        return this;
    }
    
    /**
     * Partition type (e.g. BIOS boot).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public DiskPartition withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Partition UUID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uuid")
    public String uuid;
    public DiskPartition withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
}
