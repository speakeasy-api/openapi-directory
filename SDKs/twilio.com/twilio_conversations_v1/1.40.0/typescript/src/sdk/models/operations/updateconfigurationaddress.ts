/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateConfigurationAddressServerList = [
  "https://conversations.twilio.com",
] as const;

export class UpdateConfigurationAddressSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateConfigurationAddressUpdateConfigurationAddressRequest extends SpeakeasyBase {
  /**
   * Conversation Service for the auto-created conversation. If not set, the conversation is created in the default service.
   */
  @SpeakeasyMetadata({ data: "form, name=AutoCreation.ConversationServiceSid" })
  autoCreationConversationServiceSid?: string;

  /**
   * Enable/Disable auto-creating conversations for messages to this address
   */
  @SpeakeasyMetadata({ data: "form, name=AutoCreation.Enabled" })
  autoCreationEnabled?: boolean;

  /**
   * For type `studio`, the studio flow SID where the webhook should be sent to.
   */
  @SpeakeasyMetadata({ data: "form, name=AutoCreation.StudioFlowSid" })
  autoCreationStudioFlowSid?: string;

  /**
   * For type `studio`, number of times to retry the webhook request
   */
  @SpeakeasyMetadata({ data: "form, name=AutoCreation.StudioRetryCount" })
  autoCreationStudioRetryCount?: number;

  @SpeakeasyMetadata({ data: "form, name=AutoCreation.Type" })
  autoCreationType?: shared.ConfigurationAddressEnumAutoCreationTypeEnum;

  /**
   * The list of events, firing webhook event for this Conversation. Values can be any of the following: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationStateUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`, `onDeliveryUpdated`
   */
  @SpeakeasyMetadata({ data: "form, name=AutoCreation.WebhookFilters" })
  autoCreationWebhookFilters?: string[];

  @SpeakeasyMetadata({ data: "form, name=AutoCreation.WebhookMethod" })
  autoCreationWebhookMethod?: shared.ConfigurationAddressEnumMethodEnum;

  /**
   * For type `webhook`, the url for the webhook request.
   */
  @SpeakeasyMetadata({ data: "form, name=AutoCreation.WebhookUrl" })
  autoCreationWebhookUrl?: string;

  /**
   * The human-readable name of this configuration, limited to 256 characters. Optional.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;
}

export class UpdateConfigurationAddressRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateConfigurationAddressUpdateConfigurationAddressRequest;

  /**
   * The SID of the Address Configuration resource. This value can be either the `sid` or the `address` of the configuration
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class UpdateConfigurationAddressResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  conversationsV1ConfigurationAddress?: shared.ConversationsV1ConfigurationAddress;
}
