"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import categoricalparameterrange as shared_categoricalparameterrange
from ..shared import continuousparameterrange as shared_continuousparameterrange
from ..shared import integerparameterrange as shared_integerparameterrange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ParameterRanges:
    r"""Specifies the categorical, continuous, and integer hyperparameters, and their ranges of tunable values. The range of tunable values determines which values that a hyperparameter tuning job can choose for the specified hyperparameter. This object is part of the <a>HyperParameterTuningJobConfig</a> object."""
    
    categorical_parameter_ranges: Optional[list[shared_categoricalparameterrange.CategoricalParameterRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CategoricalParameterRanges'), 'exclude': lambda f: f is None }})  
    continuous_parameter_ranges: Optional[list[shared_continuousparameterrange.ContinuousParameterRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ContinuousParameterRanges'), 'exclude': lambda f: f is None }})  
    integer_parameter_ranges: Optional[list[shared_integerparameterrange.IntegerParameterRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IntegerParameterRanges'), 'exclude': lambda f: f is None }})  
    