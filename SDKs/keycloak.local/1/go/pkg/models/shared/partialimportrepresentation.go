// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PartialImportRepresentationPolicyEnum string

const (
	PartialImportRepresentationPolicyEnumSkip      PartialImportRepresentationPolicyEnum = "SKIP"
	PartialImportRepresentationPolicyEnumOverwrite PartialImportRepresentationPolicyEnum = "OVERWRITE"
	PartialImportRepresentationPolicyEnumFail      PartialImportRepresentationPolicyEnum = "FAIL"
)

func (e *PartialImportRepresentationPolicyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SKIP":
		fallthrough
	case "OVERWRITE":
		fallthrough
	case "FAIL":
		*e = PartialImportRepresentationPolicyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PartialImportRepresentationPolicyEnum: %s", s)
	}
}

type PartialImportRepresentation struct {
	Clients           []ClientRepresentation                 `json:"clients,omitempty"`
	Groups            []GroupRepresentation                  `json:"groups,omitempty"`
	IdentityProviders []IdentityProviderRepresentation       `json:"identityProviders,omitempty"`
	IfResourceExists  *string                                `json:"ifResourceExists,omitempty"`
	Policy            *PartialImportRepresentationPolicyEnum `json:"policy,omitempty"`
	Roles             *RolesRepresentation                   `json:"roles,omitempty"`
	Users             []UserRepresentation                   `json:"users,omitempty"`
}
