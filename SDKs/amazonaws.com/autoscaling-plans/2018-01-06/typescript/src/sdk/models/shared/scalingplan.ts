/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApplicationSource } from "./applicationsource";
import { ScalingInstruction } from "./scalinginstruction";
import { ScalingPlanStatusCodeEnum } from "./scalingplanstatuscodeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents a scaling plan.
 */
export class ScalingPlan extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApplicationSource" })
  @Type(() => ApplicationSource)
  applicationSource: ApplicationSource;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata({ elemType: ScalingInstruction })
  @Expose({ name: "ScalingInstructions" })
  @Type(() => ScalingInstruction)
  scalingInstructions: ScalingInstruction[];

  @SpeakeasyMetadata()
  @Expose({ name: "ScalingPlanName" })
  scalingPlanName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScalingPlanVersion" })
  scalingPlanVersion: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusCode" })
  statusCode: ScalingPlanStatusCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  statusStartTime?: Date;
}
