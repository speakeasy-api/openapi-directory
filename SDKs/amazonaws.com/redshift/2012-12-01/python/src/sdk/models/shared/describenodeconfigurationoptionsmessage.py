"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import actiontype_enum as shared_actiontype_enum
from ..shared import nodeconfigurationoptionsfiltername_enum as shared_nodeconfigurationoptionsfiltername_enum
from ..shared import operatortype_enum as shared_operatortype_enum
from typing import Optional


@dataclasses.dataclass
class DescribeNodeConfigurationOptionsMessageFilters:
    r"""A set of elements to filter the returned node configurations."""
    
    name: Optional[shared_nodeconfigurationoptionsfiltername_enum.NodeConfigurationOptionsFilterNameEnum] = dataclasses.field(default=None)  
    operator: Optional[shared_operatortype_enum.OperatorTypeEnum] = dataclasses.field(default=None)  
    values: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeNodeConfigurationOptionsMessage:
    
    action_type: shared_actiontype_enum.ActionTypeEnum = dataclasses.field()  
    cluster_identifier: Optional[str] = dataclasses.field(default=None)  
    filters: Optional[list[DescribeNodeConfigurationOptionsMessageFilters]] = dataclasses.field(default=None)  
    marker: Optional[str] = dataclasses.field(default=None)  
    max_records: Optional[int] = dataclasses.field(default=None)  
    owner_account: Optional[str] = dataclasses.field(default=None)  
    snapshot_arn: Optional[str] = dataclasses.field(default=None)  
    snapshot_identifier: Optional[str] = dataclasses.field(default=None)  
    