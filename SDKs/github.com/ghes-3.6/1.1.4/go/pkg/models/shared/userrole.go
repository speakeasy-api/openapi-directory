// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UserRoleValueEnum - The role value representing a user role in GitHub.
type UserRoleValueEnum string

const (
	UserRoleValueEnumUserMixed                                            UserRoleValueEnum = "User"
	UserRoleValueEnumUserLower                                            UserRoleValueEnum = "user"
	UserRoleValueEnumTwentySevend9891d2c174f45A262781a0e55c80a            UserRoleValueEnum = "27d9891d-2c17-4f45-a262-781a0e55c80a"
	UserRoleValueEnumRestrictedUserMixed                                  UserRoleValueEnum = "Restricted User"
	UserRoleValueEnumRestrictedUserLower                                  UserRoleValueEnum = "restricted_user"
	UserRoleValueEnumOneebc4a02E56c43a692a502ee09b90824                   UserRoleValueEnum = "1ebc4a02-e56c-43a6-92a5-02ee09b90824"
	UserRoleValueEnumEnterpriseOwnerMixed                                 UserRoleValueEnum = "Enterprise Owner"
	UserRoleValueEnumEnterpriseOwnerLower                                 UserRoleValueEnum = "enterprise_owner"
	UserRoleValueEnumNineHundredAndEightyOnedf19088014618A08aD91f6206c954 UserRoleValueEnum = "981df190-8801-4618-a08a-d91f6206c954"
	UserRoleValueEnumBa4987abA1c3412aB58c360fc407cb10                     UserRoleValueEnum = "ba4987ab-a1c3-412a-b58c-360fc407cb10"
	UserRoleValueEnumBillingManagerMixed                                  UserRoleValueEnum = "Billing Manager"
	UserRoleValueEnumBillingManagerLower                                  UserRoleValueEnum = "billing_manager"
	UserRoleValueEnumZeroe338b8cCc7f498a928dEa3470d7e7e3                  UserRoleValueEnum = "0e338b8c-cc7f-498a-928d-ea3470d7e7e3"
	UserRoleValueEnumE6be2762E4ad4108B72d1bbe884a0f91                     UserRoleValueEnum = "e6be2762-e4ad-4108-b72d-1bbe884a0f91"
)

func (e UserRoleValueEnum) ToPointer() *UserRoleValueEnum {
	return &e
}

func (e *UserRoleValueEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "User":
		fallthrough
	case "user":
		fallthrough
	case "27d9891d-2c17-4f45-a262-781a0e55c80a":
		fallthrough
	case "Restricted User":
		fallthrough
	case "restricted_user":
		fallthrough
	case "1ebc4a02-e56c-43a6-92a5-02ee09b90824":
		fallthrough
	case "Enterprise Owner":
		fallthrough
	case "enterprise_owner":
		fallthrough
	case "981df190-8801-4618-a08a-d91f6206c954":
		fallthrough
	case "ba4987ab-a1c3-412a-b58c-360fc407cb10":
		fallthrough
	case "Billing Manager":
		fallthrough
	case "billing_manager":
		fallthrough
	case "0e338b8c-cc7f-498a-928d-ea3470d7e7e3":
		fallthrough
	case "e6be2762-e4ad-4108-b72d-1bbe884a0f91":
		*e = UserRoleValueEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserRoleValueEnum: %v", v)
	}
}

type UserRole struct {
	Display *string `json:"display,omitempty"`
	// Is the role a primary role for the user.
	Primary *bool   `json:"primary,omitempty"`
	Type    *string `json:"type,omitempty"`
	// The role value representing a user role in GitHub.
	Value UserRoleValueEnum `json:"value"`
}
