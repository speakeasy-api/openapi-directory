<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreatePayoutRequestV3 - Post amount to transfer using stored funding account details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreatePayoutRequestV3
{
    /**
     * $payments
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\PaymentInstructionV3> $payments
     */
	#[\JMS\Serializer\Annotation\SerializedName('payments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PaymentInstructionV3>')]
    public array $payments;
    
    /**
     * <p>The id of the payor whose source account(s) will be debited</p>
     * 
     * <p>payoutFromPayorId and payoutToPayorId must be both supplied or both omitted</p>
     * 
     * 
     * @var ?string $payoutFromPayorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payoutFromPayorId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payoutFromPayorId = null;
    
    /**
     * <p>Text applied to all payment memos unless specified explicitly on a payment</p>
     * 
     * <p>This should be the reference field on the statement seen by the payee (but not via ACH)</p>
     * 
     * 
     * @var ?string $payoutMemo
     */
	#[\JMS\Serializer\Annotation\SerializedName('payoutMemo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payoutMemo = null;
    
    /**
     * <p>The id of the payor whose payees will be paid</p>
     * 
     * <p>payoutFromPayorId and payoutToPayorId must be both supplied or both omitted</p>
     * 
     * 
     * @var ?string $payoutToPayorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payoutToPayorId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payoutToPayorId = null;
    
	public function __construct()
	{
		$this->payments = [];
		$this->payoutFromPayorId = null;
		$this->payoutMemo = null;
		$this->payoutToPayorId = null;
	}
}
