"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudmlv1_integratedgradientsattribution as shared_googlecloudmlv1_integratedgradientsattribution
from ..shared import googlecloudmlv1_sampledshapleyattribution as shared_googlecloudmlv1_sampledshapleyattribution
from ..shared import googlecloudmlv1_xraiattribution as shared_googlecloudmlv1_xraiattribution
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudMlV1ExplanationConfig:
    r"""Message holding configuration options for explaining model predictions. There are three feature attribution methods supported for TensorFlow models: integrated gradients, sampled Shapley, and XRAI. [Learn more about feature attributions.](/ai-platform/prediction/docs/ai-explanations/overview)"""
    
    integrated_gradients_attribution: Optional[shared_googlecloudmlv1_integratedgradientsattribution.GoogleCloudMlV1IntegratedGradientsAttribution] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integratedGradientsAttribution'), 'exclude': lambda f: f is None }})
    r"""Attributes credit by computing the Aumann-Shapley value taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1703.01365"""  
    sampled_shapley_attribution: Optional[shared_googlecloudmlv1_sampledshapleyattribution.GoogleCloudMlV1SampledShapleyAttribution] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sampledShapleyAttribution'), 'exclude': lambda f: f is None }})
    r"""An attribution method that approximates Shapley values for features that contribute to the label being predicted. A sampling strategy is used to approximate the value rather than considering all subsets of features."""  
    xrai_attribution: Optional[shared_googlecloudmlv1_xraiattribution.GoogleCloudMlV1XraiAttribution] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('xraiAttribution'), 'exclude': lambda f: f is None }})
    r"""Attributes credit by computing the XRAI taking advantage of the model's fully differentiable structure. Refer to this paper for more details: https://arxiv.org/abs/1906.02825 Currently only implemented for models with natural image inputs."""  
    