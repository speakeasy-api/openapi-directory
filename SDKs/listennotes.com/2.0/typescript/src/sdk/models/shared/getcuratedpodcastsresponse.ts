/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CuratedListSimple } from "./curatedlistsimple";
import { Expose, Type } from "class-transformer";

/**
 * OK
 */
export class GetCuratedPodcastsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CuratedListSimple })
  @Expose({ name: "curated_lists" })
  @Type(() => CuratedListSimple)
  curatedLists: CuratedListSimple[];

  @SpeakeasyMetadata()
  @Expose({ name: "has_next" })
  hasNext: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "has_previous" })
  hasPrevious: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_number" })
  nextPageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_number" })
  pageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_number" })
  previousPageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;
}
