"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import beezup_common_errorresponsemessage as shared_beezup_common_errorresponsemessage
from ..shared import publicchannelinfolist as shared_publicchannelinfolist
from typing import Optional


@dataclasses.dataclass
class GetChannelsRequest:
    
    accept_encoding: list[str] = dataclasses.field(metadata={'header': { 'field_name': 'Accept-Encoding', 'style': 'simple', 'explode': False }})
    r"""Allows the client to indicate whether it accepts a compressed encoding to reduce traffic size."""  
    country_iso_code: str = dataclasses.field(metadata={'path_param': { 'field_name': 'countryIsoCode', 'style': 'simple', 'explode': False }})
    r"""The country iso code alpha 3 based on this: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Decoding_table \ 
    To know which country are available you have to use the operation: GetChannelsByCountry
    """  
    if_none_match: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'If-None-Match', 'style': 'simple', 'explode': False }})
    r"""ETag value to identify the last known version of requested resource.\ 
    To avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\
    If the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\
    For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
    """  
    

@dataclasses.dataclass
class GetChannelsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    beez_up_common_error_response_message: Optional[shared_beezup_common_errorresponsemessage.BeezUPCommonErrorResponseMessage] = dataclasses.field(default=None)
    r"""Channel country not found"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    public_channel_info_list: Optional[shared_publicchannelinfolist.PublicChannelInfoList] = dataclasses.field(default=None)
    r"""The channel list for one country"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    