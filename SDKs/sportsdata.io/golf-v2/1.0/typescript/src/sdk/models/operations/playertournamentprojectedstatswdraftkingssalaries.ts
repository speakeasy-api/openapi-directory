/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
 */
export enum PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnum {
  Xml = "XML",
  Json = "JSON",
}

export class PlayerTournamentProjectedStatsWDraftkingsSalariesRequest extends SpeakeasyBase {
  /**
   * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=format",
  })
  format: PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnum;

  /**
   * The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>78</code>, <code>79</code>, <code>80</code>, etc.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=tournamentid",
  })
  tournamentid: string;
}

export class PlayerTournamentProjectedStatsWDraftkingsSalariesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata({ elemType: shared.PlayerTournamentProjection })
  playerTournamentProjections?: shared.PlayerTournamentProjection[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
