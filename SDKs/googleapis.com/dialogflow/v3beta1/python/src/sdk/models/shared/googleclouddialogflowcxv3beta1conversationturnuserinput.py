"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowcxv3beta1queryinput as shared_googleclouddialogflowcxv3beta1queryinput
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput:
    r"""The input from the human user."""
    
    enable_sentiment_analysis: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableSentimentAnalysis'), 'exclude': lambda f: f is None }})
    r"""Whether sentiment analysis is enabled."""  
    injected_parameters: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('injectedParameters'), 'exclude': lambda f: f is None }})
    r"""Parameters that need to be injected into the conversation during intent detection."""  
    input: Optional[shared_googleclouddialogflowcxv3beta1queryinput.GoogleCloudDialogflowCxV3beta1QueryInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('input'), 'exclude': lambda f: f is None }})
    r"""Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered."""  
    is_webhook_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isWebhookEnabled'), 'exclude': lambda f: f is None }})
    r"""If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled."""  
    