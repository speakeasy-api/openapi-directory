<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Address
{
    /**
     * The name of the city.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * The name of the company.
     * 
     * @var ?string $companyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('companyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyName = null;
    
    /**
     * The two-letter country code, in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * The postal code.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * The state or province as defined in [ISO 3166-2](https://www.iso.org/standard/72483.html). For example, **ON** for Ontario, Canada. 
     * 
     * 
     * Applicable for the following countries:
     * - Australia
     * - Brazil
     * - Canada
     * - India
     * - Mexico
     * - New Zealand
     * - United States
     * 
     * @var ?string $stateOrProvince
     */
	#[\JMS\Serializer\Annotation\SerializedName('stateOrProvince')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stateOrProvince = null;
    
    /**
     * The name of the street, and the house or building number.
     * 
     * @var ?string $streetAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('streetAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $streetAddress = null;
    
    /**
     * Additional address details, if any.
     * 
     * @var ?string $streetAddress2
     */
	#[\JMS\Serializer\Annotation\SerializedName('streetAddress2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $streetAddress2 = null;
    
	public function __construct()
	{
		$this->city = null;
		$this->companyName = null;
		$this->country = null;
		$this->postalCode = null;
		$this->stateOrProvince = null;
		$this->streetAddress = null;
		$this->streetAddress2 = null;
	}
}
