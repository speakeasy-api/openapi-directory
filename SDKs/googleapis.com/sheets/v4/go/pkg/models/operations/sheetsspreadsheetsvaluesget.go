// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SheetsSpreadsheetsValuesGetSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type SheetsSpreadsheetsValuesGetSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type SheetsSpreadsheetsValuesGetSecurityOption3 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type SheetsSpreadsheetsValuesGetSecurityOption4 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type SheetsSpreadsheetsValuesGetSecurityOption5 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type SheetsSpreadsheetsValuesGetSecurity struct {
	Option1 *SheetsSpreadsheetsValuesGetSecurityOption1 `security:"option"`
	Option2 *SheetsSpreadsheetsValuesGetSecurityOption2 `security:"option"`
	Option3 *SheetsSpreadsheetsValuesGetSecurityOption3 `security:"option"`
	Option4 *SheetsSpreadsheetsValuesGetSecurityOption4 `security:"option"`
	Option5 *SheetsSpreadsheetsValuesGetSecurityOption5 `security:"option"`
}

type SheetsSpreadsheetsValuesGetPathParams struct {
	// The [A1 notation or R1C1 notation](/sheets/api/guides/concepts#cell) of the range to retrieve values from.
	Range string `pathParam:"style=simple,explode=false,name=range"`
	// The ID of the spreadsheet to retrieve data from.
	SpreadsheetID string `pathParam:"style=simple,explode=false,name=spreadsheetId"`
}

// SheetsSpreadsheetsValuesGetDateTimeRenderOptionEnum - How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
type SheetsSpreadsheetsValuesGetDateTimeRenderOptionEnum string

const (
	SheetsSpreadsheetsValuesGetDateTimeRenderOptionEnumSerialNumber    SheetsSpreadsheetsValuesGetDateTimeRenderOptionEnum = "SERIAL_NUMBER"
	SheetsSpreadsheetsValuesGetDateTimeRenderOptionEnumFormattedString SheetsSpreadsheetsValuesGetDateTimeRenderOptionEnum = "FORMATTED_STRING"
)

func (e *SheetsSpreadsheetsValuesGetDateTimeRenderOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SERIAL_NUMBER":
		fallthrough
	case "FORMATTED_STRING":
		*e = SheetsSpreadsheetsValuesGetDateTimeRenderOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SheetsSpreadsheetsValuesGetDateTimeRenderOptionEnum: %s", s)
	}
}

// SheetsSpreadsheetsValuesGetMajorDimensionEnum - The major dimension that results should use. For example, if the spreadsheet data in Sheet1 is: `A1=1,B1=2,A2=3,B2=4`, then requesting `range=Sheet1!A1:B2?majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas requesting `range=Sheet1!A1:B2?majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
type SheetsSpreadsheetsValuesGetMajorDimensionEnum string

const (
	SheetsSpreadsheetsValuesGetMajorDimensionEnumDimensionUnspecified SheetsSpreadsheetsValuesGetMajorDimensionEnum = "DIMENSION_UNSPECIFIED"
	SheetsSpreadsheetsValuesGetMajorDimensionEnumRows                 SheetsSpreadsheetsValuesGetMajorDimensionEnum = "ROWS"
	SheetsSpreadsheetsValuesGetMajorDimensionEnumColumns              SheetsSpreadsheetsValuesGetMajorDimensionEnum = "COLUMNS"
)

func (e *SheetsSpreadsheetsValuesGetMajorDimensionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DIMENSION_UNSPECIFIED":
		fallthrough
	case "ROWS":
		fallthrough
	case "COLUMNS":
		*e = SheetsSpreadsheetsValuesGetMajorDimensionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SheetsSpreadsheetsValuesGetMajorDimensionEnum: %s", s)
	}
}

// SheetsSpreadsheetsValuesGetValueRenderOptionEnum - How values should be represented in the output. The default render option is FORMATTED_VALUE.
type SheetsSpreadsheetsValuesGetValueRenderOptionEnum string

const (
	SheetsSpreadsheetsValuesGetValueRenderOptionEnumFormattedValue   SheetsSpreadsheetsValuesGetValueRenderOptionEnum = "FORMATTED_VALUE"
	SheetsSpreadsheetsValuesGetValueRenderOptionEnumUnformattedValue SheetsSpreadsheetsValuesGetValueRenderOptionEnum = "UNFORMATTED_VALUE"
	SheetsSpreadsheetsValuesGetValueRenderOptionEnumFormula          SheetsSpreadsheetsValuesGetValueRenderOptionEnum = "FORMULA"
)

func (e *SheetsSpreadsheetsValuesGetValueRenderOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FORMATTED_VALUE":
		fallthrough
	case "UNFORMATTED_VALUE":
		fallthrough
	case "FORMULA":
		*e = SheetsSpreadsheetsValuesGetValueRenderOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SheetsSpreadsheetsValuesGetValueRenderOptionEnum: %s", s)
	}
}

type SheetsSpreadsheetsValuesGetQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
	DateTimeRenderOption *SheetsSpreadsheetsValuesGetDateTimeRenderOptionEnum `queryParam:"style=form,explode=true,name=dateTimeRenderOption"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The major dimension that results should use. For example, if the spreadsheet data in Sheet1 is: `A1=1,B1=2,A2=3,B2=4`, then requesting `range=Sheet1!A1:B2?majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas requesting `range=Sheet1!A1:B2?majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
	MajorDimension *SheetsSpreadsheetsValuesGetMajorDimensionEnum `queryParam:"style=form,explode=true,name=majorDimension"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// How values should be represented in the output. The default render option is FORMATTED_VALUE.
	ValueRenderOption *SheetsSpreadsheetsValuesGetValueRenderOptionEnum `queryParam:"style=form,explode=true,name=valueRenderOption"`
}

type SheetsSpreadsheetsValuesGetRequest struct {
	PathParams  SheetsSpreadsheetsValuesGetPathParams
	QueryParams SheetsSpreadsheetsValuesGetQueryParams
	Security    SheetsSpreadsheetsValuesGetSecurity
}

type SheetsSpreadsheetsValuesGetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	ValueRange *shared.ValueRange
}
