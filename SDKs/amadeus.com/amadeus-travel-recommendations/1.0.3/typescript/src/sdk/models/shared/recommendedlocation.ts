/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Geographic coordinates describing the position of any location on the surface of Earth
 */
export class RecommendedLocationGeoCode extends SpeakeasyBase {
  /**
   * Latitude of the position expressed in decimal degrees (WSG 84), e.g. 6.244203. A positive value denotes northern hemisphere or the equator, and a negative value denotes southern hemisphere. The number of digits to represent the precision of the coordinate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude?: number;

  /**
   * Longitude of the position expressed in decimal degrees (WSG 84), e.g. -75.581211. A positive value denotes east longitude or the prime meridian, and a negative value denotes west longitude.  The number of digits to represent the precision of the coordinate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude?: number;
}

/**
 * Description of a particular point or place in physical space
 */
export class RecommendedLocation extends SpeakeasyBase {
  /**
   * Geographic coordinates describing the position of any location on the surface of Earth
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoCode" })
  @Type(() => RecommendedLocationGeoCode)
  geoCode?: RecommendedLocationGeoCode;

  /**
   * IATA location code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iataCode" })
  iataCode?: string;

  /**
   * Label associated to the location (e.g. Eiffel Tower, Madison Square)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * percentage of similarity.
   *
   * @remarks
   *
   * 0 for not similar to 1 for exactly the same
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relevance" })
  relevance?: number;

  /**
   * Location sub-type (e.g. airport, port, rail-station, restaurant, atm...)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subtype" })
  subtype?: string;

  /**
   * Ressource type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
