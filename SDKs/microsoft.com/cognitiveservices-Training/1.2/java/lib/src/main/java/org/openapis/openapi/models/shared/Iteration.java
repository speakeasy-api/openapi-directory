/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Iteration - Iteration model to be sent over JSON
 */
public class Iteration {
    /**
     * Gets the time this iteration was completed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("Created")
    public OffsetDateTime created;
    public Iteration withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    /**
     * Get or sets a guid of the domain the iteration has been trained on
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DomainId")
    public String domainId;
    public Iteration withDomainId(String domainId) {
        this.domainId = domainId;
        return this;
    }
    
    /**
     * Whether the iteration can be exported to another format for download
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Exportable")
    public Boolean exportable;
    public Iteration withExportable(Boolean exportable) {
        this.exportable = exportable;
        return this;
    }
    
    /**
     * Gets the id of the iteration
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public Iteration withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets or sets a value indicating whether the iteration is the default iteration for the project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsDefault")
    public Boolean isDefault;
    public Iteration withIsDefault(Boolean isDefault) {
        this.isDefault = isDefault;
        return this;
    }
    
    /**
     * Gets the time this iteration was last modified
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModified")
    public OffsetDateTime lastModified;
    public Iteration withLastModified(OffsetDateTime lastModified) {
        this.lastModified = lastModified;
        return this;
    }
    
    /**
     * Gets or sets the name of the iteration
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public Iteration withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Gets the project id of the iteration
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProjectId")
    public String projectId;
    public Iteration withProjectId(String projectId) {
        this.projectId = projectId;
        return this;
    }
    
    /**
     * Gets the current iteration status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;
    public Iteration withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Gets the time this iteration was last modified
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("TrainedAt")
    public OffsetDateTime trainedAt;
    public Iteration withTrainedAt(OffsetDateTime trainedAt) {
        this.trainedAt = trainedAt;
        return this;
    }
    
}
