/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EeValidatePinRequest - Data for validating PIN.
 */
public class EeValidatePinRequest {
    /**
     * EE API authorization Token received from GET /ee/token/create.
     */
    @JsonProperty("accessToken")
    public String accessToken;

    public EeValidatePinRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * The pin entered by a user. 6 digits
     */
    @JsonProperty("pin")
    public String pin;

    public EeValidatePinRequest withPin(String pin) {
        this.pin = pin;
        return this;
    }
    
    /**
     * The pinReference.
     */
    @JsonProperty("pinReference")
    public String pinReference;

    public EeValidatePinRequest withPinReference(String pinReference) {
        this.pinReference = pinReference;
        return this;
    }
    
    /**
     * Tracking header to be able to search logs for a specific user requests. If not provided it will be generated. FE should store it for later user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackingHeader")
    public String trackingHeader;

    public EeValidatePinRequest withTrackingHeader(String trackingHeader) {
        this.trackingHeader = trackingHeader;
        return this;
    }
    
    public EeValidatePinRequest(@JsonProperty("accessToken") String accessToken, @JsonProperty("pin") String pin, @JsonProperty("pinReference") String pinReference) {
        this.accessToken = accessToken;
        this.pin = pin;
        this.pinReference = pinReference;
  }
}
