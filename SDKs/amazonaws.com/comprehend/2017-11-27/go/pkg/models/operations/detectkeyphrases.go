// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DetectKeyPhrasesXAmzTargetEnum
type DetectKeyPhrasesXAmzTargetEnum string

const (
	DetectKeyPhrasesXAmzTargetEnumComprehend20171127DetectKeyPhrases DetectKeyPhrasesXAmzTargetEnum = "Comprehend_20171127.DetectKeyPhrases"
)

func (e DetectKeyPhrasesXAmzTargetEnum) ToPointer() *DetectKeyPhrasesXAmzTargetEnum {
	return &e
}

func (e *DetectKeyPhrasesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Comprehend_20171127.DetectKeyPhrases":
		*e = DetectKeyPhrasesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DetectKeyPhrasesXAmzTargetEnum: %v", v)
	}
}

type DetectKeyPhrasesRequest struct {
	DetectKeyPhrasesRequest shared.DetectKeyPhrasesRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              DetectKeyPhrasesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DetectKeyPhrasesResponse struct {
	ContentType string
	// Success
	DetectKeyPhrasesResponse *shared.DetectKeyPhrasesResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// TextSizeLimitExceededException
	TextSizeLimitExceededException interface{}
	// UnsupportedLanguageException
	UnsupportedLanguageException interface{}
}
