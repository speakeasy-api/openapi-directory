/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ItemContent - Content of an item to be indexed and surfaced by Cloud Search. Only UTF-8 encoded strings are allowed as inlineContent. If the content is uploaded and not binary, it must be UTF-8 encoded.
 */
public class ItemContent {
    /**
     * Represents an upload session reference. This reference is created via upload method. This reference is valid for 30 days after its creation. Updating of item content may refer to this uploaded content via contentDataRef.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentDataRef")
    public UploadItemRef contentDataRef;
    public ItemContent withContentDataRef(UploadItemRef contentDataRef) {
        this.contentDataRef = contentDataRef;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentFormat")
    public ItemContentContentFormatEnum contentFormat;
    public ItemContent withContentFormat(ItemContentContentFormatEnum contentFormat) {
        this.contentFormat = contentFormat;
        return this;
    }
    
    /**
     * Hashing info calculated and provided by the API client for content. Can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hash")
    public String hash;
    public ItemContent withHash(String hash) {
        this.hash = hash;
        return this;
    }
    
    /**
     * Content that is supplied inlined within the update method. The maximum length is 102400 bytes (100 KiB).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inlineContent")
    public String inlineContent;
    public ItemContent withInlineContent(String inlineContent) {
        this.inlineContent = inlineContent;
        return this;
    }
    
}
