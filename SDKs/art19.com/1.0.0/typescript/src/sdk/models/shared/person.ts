/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceIdentifier } from "./resourceidentifier";
import { Expose, Transform, Type } from "class-transformer";

export class PersonAttributes extends SpeakeasyBase {
  /**
   * This will be replaced by the relationship `avatar` in a future update.<br/>
   *
   * @remarks
   * The image ID of an avatar or head shot of the person. Details can be
   * retrieved using the `/images` endpoint.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_id" })
  avatarId?: string;

  /**
   * The biography of the person without markup.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "biography" })
  biography?: string;

  /**
   * The birthday of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "born" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  born?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The day of death of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "died" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  died?: Date;

  /**
   * The first name of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  /**
   * The country the person is from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from_country" })
  fromCountry?: string;

  /**
   * The locality or city the person is from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from_locality" })
  fromLocality?: string;

  /**
   * The region/state/province the person is from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from_region" })
  fromRegion?: string;

  /**
   * The last name of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * The public email contact for the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public_email" })
  publicEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

/**
 * The avatar or head shot of the person. Details can be retrieved using the `/images` endpoint.
 *
 * @remarks
 *
 */
export class PersonRelationshipsAvatar extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

export class PersonRelationships extends SpeakeasyBase {
  /**
   * The avatar or head shot of the person. Details can be retrieved using the `/images` endpoint.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar" })
  @Type(() => PersonRelationshipsAvatar)
  avatar?: PersonRelationshipsAvatar;
}

export class Person extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => PersonAttributes)
  attributes?: PersonAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => PersonRelationships)
  relationships?: PersonRelationships;

  /**
   * The type of resource. This is always `people`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
