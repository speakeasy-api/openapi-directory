"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aggregateoperation as shared_aggregateoperation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Aggregate:
    r"""Specifies a transform that groups rows by chosen fields and computes the aggregated value by specified function."""
    
    aggs: list[shared_aggregateoperation.AggregateOperation] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Aggs') }})  
    groups: list[list[str]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Groups') }})  
    inputs: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Inputs') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    