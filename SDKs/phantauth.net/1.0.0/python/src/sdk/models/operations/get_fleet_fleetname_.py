"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class GetFleetFleetnameRequest:
    
    fleetname: str = dataclasses.field(metadata={'path_param': { 'field_name': 'fleetname', 'style': 'simple', 'explode': False }})
    r"""The identifier or email address of the fleet; it is integrated in the `sub` property and is the basis of the other generated properties."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetFleetFleetname200ApplicationJSON:
    r"""OK"""
    
    sub: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sub') }})
    r"""The name or email address of a given fleet. The fleet properties and fleet members are generated from this name. If provide an email address, you can customize the fleet logo by the use of the gravatar associated with the email address."""  
    at_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@id'), 'exclude': lambda f: f is None }})
    r"""URL of the Fleet's JSON representation."""  
    logo: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logo'), 'exclude': lambda f: f is None }})
    r"""The URL of the fleet logo, which can be customized by the gravatar associated with the email address in the `logo_email` property."""  
    logo_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logo_email'), 'exclude': lambda f: f is None }})
    r"""The email address of the fleet, either generated or provided in the `sub` property. The fleet logo can be customized by the use of the gravater associated with this email address."""  
    members: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('members'), 'exclude': lambda f: f is None }})
    r"""The client objects included in a fleet."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The displayed fleet name."""  
    profile: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profile'), 'exclude': lambda f: f is None }})
    r"""The URL of the Fleet profile."""  
    

@dataclasses.dataclass
class GetFleetFleetnameResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_fleet_fleetname_200_application_json_object: Optional[GetFleetFleetname200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    