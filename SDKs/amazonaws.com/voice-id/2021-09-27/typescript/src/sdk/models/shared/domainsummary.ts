/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DomainStatusEnum } from "./domainstatusenum";
import { ServerSideEncryptionConfiguration } from "./serversideencryptionconfiguration";
import { ServerSideEncryptionUpdateDetails } from "./serversideencryptionupdatedetails";
import { WatchlistDetails } from "./watchlistdetails";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains a summary of information about a domain.
 */
export class DomainSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainId" })
  domainId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainStatus" })
  domainStatus?: DomainStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerSideEncryptionConfiguration" })
  @Type(() => ServerSideEncryptionConfiguration)
  serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerSideEncryptionUpdateDetails" })
  @Type(() => ServerSideEncryptionUpdateDetails)
  serverSideEncryptionUpdateDetails?: ServerSideEncryptionUpdateDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "WatchlistDetails" })
  @Type(() => WatchlistDetails)
  watchlistDetails?: WatchlistDetails;
}
