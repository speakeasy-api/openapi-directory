// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyCertificatesActionEnum
type GETModifyCertificatesActionEnum string

const (
	GETModifyCertificatesActionEnumModifyCertificates GETModifyCertificatesActionEnum = "ModifyCertificates"
)

func (e *GETModifyCertificatesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyCertificates":
		*e = GETModifyCertificatesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyCertificatesActionEnum: %s", s)
	}
}

// GETModifyCertificatesVersionEnum
type GETModifyCertificatesVersionEnum string

const (
	GETModifyCertificatesVersionEnumTwoThousandAndFourteen1031 GETModifyCertificatesVersionEnum = "2014-10-31"
)

func (e *GETModifyCertificatesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = GETModifyCertificatesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyCertificatesVersionEnum: %s", s)
	}
}

type GETModifyCertificatesRequest struct {
	Action GETModifyCertificatesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The new default certificate identifier to override the current one with.</p> <p>To determine the valid values, use the <code>describe-certificates</code> CLI command or the <code>DescribeCertificates</code> API operation.</p>
	CertificateIdentifier *string `queryParam:"style=form,explode=true,name=CertificateIdentifier"`
	// A value that indicates whether to remove the override for the default certificate. If the override is removed, the default certificate is the system default.
	RemoveCustomerOverride *bool                            `queryParam:"style=form,explode=true,name=RemoveCustomerOverride"`
	Version                GETModifyCertificatesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm          *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyCertificatesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
