/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Media - Represents a media file which can be added to a text message
 */
public class Media {
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public Long accountId;

    public Media withAccountId(Long accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The time when the given resource was created, formatted in unix time milliseconds (read only). Example: 1473781817000 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created")
    public Long created;

    public Media withCreated(Long created) {
        this.created = created;
        return this;
    }
    
    /**
     * An id of a media file
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public Media withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * A size of a media file in bytes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lengthInBytes")
    public Long lengthInBytes;

    public Media withLengthInBytes(Long lengthInBytes) {
        this.lengthInBytes = lengthInBytes;
        return this;
    }
    
    /**
     * A MIME type of media file, ex: image/jpeg, image/png, video/mp4, audio/mp3, etc
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mediaType")
    public String mediaType;

    public Media withMediaType(String mediaType) {
        this.mediaType = mediaType;
        return this;
    }
    
    /**
     * A name of a media file
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Media withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A public URL of a media file
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publicUrl")
    public String publicUrl;

    public Media withPublicUrl(String publicUrl) {
        this.publicUrl = publicUrl;
        return this;
    }
    
    public Media(){}
}
