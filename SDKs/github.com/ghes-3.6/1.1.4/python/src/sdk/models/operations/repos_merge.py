"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import commit as shared_commit
from ..shared import validation_error as shared_validation_error
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReposMergeRequestBody:
    
    base: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('base') }})
    r"""The name of the base branch that the head will be merged into."""  
    head: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('head') }})
    r"""The head to merge. This can be a branch name or a commit SHA1."""  
    commit_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commit_message'), 'exclude': lambda f: f is None }})
    r"""Commit message to use for the merge commit. If omitted, a default message will be used."""  
    

@dataclasses.dataclass
class ReposMergeRequest:
    
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})
    r"""The account owner of the repository. The name is not case sensitive."""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})
    r"""The name of the repository. The name is not case sensitive."""  
    request_body: ReposMergeRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class ReposMergeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Forbidden"""  
    commit: Optional[shared_commit.Commit] = dataclasses.field(default=None)
    r"""Successful Response (The resulting merge commit)"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    validation_error: Optional[shared_validation_error.ValidationError] = dataclasses.field(default=None)
    r"""Validation failed, or the endpoint has been spammed."""  
    