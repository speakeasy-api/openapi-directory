/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TextEvent - Text
 */
public class TextEvent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_links")
    public TextEventLinks links;

    public TextEvent withLinks(TextEventLinks links) {
        this.links = links;
        return this;
    }
    
    /**
     * The body of the `text` event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body")
    public TextEventBody body;

    public TextEvent withBody(TextEventBody body) {
        this.body = body;
        return this;
    }
    
    /**
     * The ID of the Conversation that the member belongs to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversation_id")
    public String conversationId;

    public TextEvent withConversationId(String conversationId) {
        this.conversationId = conversationId;
        return this;
    }
    
    /**
     * The member ID of the sender
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public String from;

    public TextEvent withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * The ID of the event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public TextEvent withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The time that the event happened
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public String timestamp;

    public TextEvent withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * The event type (`text`)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public TextEvent withType(String type) {
        this.type = type;
        return this;
    }
    
    public TextEvent(){}
}
