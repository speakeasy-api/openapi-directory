// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PostV2ThirdPartyLiveFeedItemsRequestBody struct {
	// Equality filters that are applied to the event_occurred_at field. A single filter can be used by itself or combined with other filters to create a range.
	// ---CUSTOM---
	// {"keys":[{"description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"gt","type":"iso8601 string"},{"description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"gte","type":"iso8601 string"},{"description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"lt","type":"iso8601 string"},{"description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"lte","type":"iso8601 string"}],"type":"object"}
	//
	EventOccurredAt string `form:"name=event_occurred_at"`
	// Uniquely provided string specific to this event. This should be a value which can't be duplicated between external systems, meaning that an id is not sufficient.
	IdempotencyKey string `form:"name=idempotency_key"`
	// The message that relates to the subject. This message should start with a lower-case past-tense verb and end with a period (e.g. "received a package."). When live feed items are displayed to users, the subject's name is concatenated with the message and a joining space. Only <a> HTML tags with an "href" attribute are allowed. Other attributes and tags will be stripped.
	Message string `form:"name=message"`
	// The ID of the subject of the live feed item (i.e. the "person" id).
	SubjectID int64 `form:"name=subject_id"`
	// The type of the subject of the live feed item. Currently only "person" is supported.
	SubjectType string `form:"name=subject_type"`
	// The guid for the user that this live feed item should be shown to.
	UserGUID string `form:"name=user_guid"`
}

type PostV2ThirdPartyLiveFeedItemsRequest struct {
	Request PostV2ThirdPartyLiveFeedItemsRequestBody `request:"mediaType=application/x-www-form-urlencoded"`
}

type PostV2ThirdPartyLiveFeedItemsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
