"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudassetv1listconstraint as shared_googlecloudassetv1listconstraint
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class GoogleCloudAssetV1ConstraintConstraintDefaultEnum(str, Enum):
    r"""The evaluation behavior of this constraint in the absence of 'Policy'."""
    CONSTRAINT_DEFAULT_UNSPECIFIED = 'CONSTRAINT_DEFAULT_UNSPECIFIED'
    ALLOW = 'ALLOW'
    DENY = 'DENY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudAssetV1Constraint:
    r"""The definition of a constraint."""
    
    boolean_constraint: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('booleanConstraint'), 'exclude': lambda f: f is None }})
    r"""A `Constraint` that is either enforced or not. For example a constraint `constraints/compute.disableSerialPortAccess`. If it is enforced on a VM instance, serial port connections will not be opened to that instance."""  
    constraint_default: Optional[GoogleCloudAssetV1ConstraintConstraintDefaultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('constraintDefault'), 'exclude': lambda f: f is None }})
    r"""The evaluation behavior of this constraint in the absence of 'Policy'."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Detailed description of what this `Constraint` controls as well as how and where it is enforced."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""The human readable name of the constraint."""  
    list_constraint: Optional[shared_googlecloudassetv1listconstraint.GoogleCloudAssetV1ListConstraint] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listConstraint'), 'exclude': lambda f: f is None }})
    r"""A `Constraint` that allows or disallows a list of string values, which are configured by an organization's policy administrator with a `Policy`."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The unique name of the constraint. Format of the name should be * `constraints/{constraint_name}` For example, `constraints/compute.disableSerialPortAccess`."""  
    