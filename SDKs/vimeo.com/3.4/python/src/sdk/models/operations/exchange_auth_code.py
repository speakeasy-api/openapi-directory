"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import auth as shared_auth
from ..shared import auth_error as shared_auth_error
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ExchangeAuthCodeRequestBodyGrantTypeEnum(str, Enum):
    r"""The grant type. Must be set to `authorization_code`."""
    AUTHORIZATION_CODE = 'authorization_code'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExchangeAuthCodeRequestBody:
    
    code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})
    r"""The authorization code received from the authorization server."""  
    grant_type: ExchangeAuthCodeRequestBodyGrantTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grant_type') }})
    r"""The grant type. Must be set to `authorization_code`."""  
    redirect_uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('redirect_uri') }})
    r"""The redirect URI. Must match the URI from `/oauth/authorize`."""  
    

@dataclasses.dataclass
class ExchangeAuthCodeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    auth: Optional[shared_auth.Auth] = dataclasses.field(default=None)
    r"""The authorization code was exchanged."""  
    auth_error: Optional[shared_auth_error.AuthError] = dataclasses.field(default=None)
    r"""* The grant type is invalid.
    * The authorization code is invalid.
    * The redirect URI doesn't match the URI to create the authorization code.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    