"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import externalevententity as shared_externalevententity
from enum import Enum
from typing import Optional

class PostExternalEventsRequestBodyStatusEnum(str, Enum):
    r"""Status of event."""
    SUCCESS = 'success'
    FAILURE = 'failure'
    PARTIAL_FAILURE = 'partial_failure'
    IN_PROGRESS = 'in_progress'
    SKIPPED = 'skipped'


@dataclasses.dataclass
class PostExternalEventsRequestBody:
    
    body: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'body' }})
    r"""Event body"""  
    status: PostExternalEventsRequestBodyStatusEnum = dataclasses.field(metadata={'multipart_form': { 'field_name': 'status' }})
    r"""Status of event."""  
    

@dataclasses.dataclass
class PostExternalEventsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    external_event_entity: Optional[shared_externalevententity.ExternalEventEntity] = dataclasses.field(default=None)
    r"""The ExternalEvents object."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    