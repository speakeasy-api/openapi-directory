/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CloudPubsubTopic } from "./cloudpubsubtopic";
import { Feed } from "./feed";
import { Expose, Type } from "class-transformer";

/**
 * An instruction to Classroom to send notifications from the `feed` to the provided destination.
 */
export class Registration extends SpeakeasyBase {
  /**
   * A reference to a Cloud Pub/Sub topic. To register for notifications, the owner of the topic must grant `classroom-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cloudPubsubTopic" })
  @Type(() => CloudPubsubTopic)
  cloudPubsubTopic?: CloudPubsubTopic;

  /**
   * The time until which the `Registration` is effective. This is a read-only field assigned by the server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiryTime" })
  expiryTime?: string;

  /**
   * A class of notifications that an application can register to receive. For example: "all roster changes for a domain".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feed" })
  @Type(() => Feed)
  feed?: Feed;

  /**
   * A server-generated unique identifier for this `Registration`. Read-only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registrationId" })
  registrationId?: string;
}
