/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetOrganizationDevices200ApplicationJSON {
    /**
     * Physical address of the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;

    public GetOrganizationDevices200ApplicationJSON withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * Firmware version of the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firmware")
    public String firmware;

    public GetOrganizationDevices200ApplicationJSON withFirmware(String firmware) {
        this.firmware = firmware;
        return this;
    }
    
    /**
     * LAN IP address of the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lanIp")
    public String lanIp;

    public GetOrganizationDevices200ApplicationJSON withLanIp(String lanIp) {
        this.lanIp = lanIp;
        return this;
    }
    
    /**
     * Latitude of the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lat")
    public Float lat;

    public GetOrganizationDevices200ApplicationJSON withLat(Float lat) {
        this.lat = lat;
        return this;
    }
    
    /**
     * Longitude of the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lng")
    public Float lng;

    public GetOrganizationDevices200ApplicationJSON withLng(Float lng) {
        this.lng = lng;
        return this;
    }
    
    /**
     * MAC address of the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mac")
    public String mac;

    public GetOrganizationDevices200ApplicationJSON withMac(String mac) {
        this.mac = mac;
        return this;
    }
    
    /**
     * Model of the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("model")
    public String model;

    public GetOrganizationDevices200ApplicationJSON withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * Name of the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GetOrganizationDevices200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * ID of the network the device belongs to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkId")
    public String networkId;

    public GetOrganizationDevices200ApplicationJSON withNetworkId(String networkId) {
        this.networkId = networkId;
        return this;
    }
    
    /**
     * Notes for the device, limited to 255 characters
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public GetOrganizationDevices200ApplicationJSON withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Product type of the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productType")
    public String productType;

    public GetOrganizationDevices200ApplicationJSON withProductType(String productType) {
        this.productType = productType;
        return this;
    }
    
    /**
     * Serial number of the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serial")
    public String serial;

    public GetOrganizationDevices200ApplicationJSON withSerial(String serial) {
        this.serial = serial;
        return this;
    }
    
    /**
     * List of tags assigned to the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;

    public GetOrganizationDevices200ApplicationJSON withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    public GetOrganizationDevices200ApplicationJSON(){}
}
