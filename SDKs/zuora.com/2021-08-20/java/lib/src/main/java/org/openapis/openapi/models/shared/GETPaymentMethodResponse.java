/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GETPaymentMethodResponse - Container for custom fields of a payment method object.
 * 
 */
public class GETPaymentMethodResponse {
    /**
     * ID of a PayPal billing agreement. For example, I-1TJ3GAGG82Y9.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BAID")
    public String baid;
    public GETPaymentMethodResponse withBaid(String baid) {
        this.baid = baid;
        return this;
    }
    
    /**
     * The International Bank Account Number used to create the SEPA payment method. The value is masked.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IBAN")
    public String iban;
    public GETPaymentMethodResponse withIban(String iban) {
        this.iban = iban;
        return this;
    }
    
    /**
     * The account holder information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountHolderInfo")
    public GETPMAccountHolderInfo accountHolderInfo;
    public GETPaymentMethodResponse withAccountHolderInfo(GETPMAccountHolderInfo accountHolderInfo) {
        this.accountHolderInfo = accountHolderInfo;
        return this;
    }
    
    /**
     * The number of the customer's bank account and it is masked.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public GETPaymentMethodResponse withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * The nine-digit routing number or ABA number used by banks. This field is only required if the `type` field is set to `ACH`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankABACode")
    public String bankABACode;
    public GETPaymentMethodResponse withBankABACode(String bankABACode) {
        this.bankABACode = bankABACode;
        return this;
    }
    
    /**
     * The name of the account holder, which can be either a person or a company. This field is only required if the `type` field is set to `ACH`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountName")
    public String bankAccountName;
    public GETPaymentMethodResponse withBankAccountName(String bankAccountName) {
        this.bankAccountName = bankAccountName;
        return this;
    }
    
    /**
     * The bank account number associated with the ACH payment. This field is only required if the `type` field is set to `ACH`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountNumber")
    public String bankAccountNumber;
    public GETPaymentMethodResponse withBankAccountNumber(String bankAccountNumber) {
        this.bankAccountNumber = bankAccountNumber;
        return this;
    }
    
    /**
     * The type of bank account associated with the ACH payment. This field is only required if the `type` field is set to `ACH`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountType")
    public GETPaymentMethodResponseBankAccountTypeEnum bankAccountType;
    public GETPaymentMethodResponse withBankAccountType(GETPaymentMethodResponseBankAccountTypeEnum bankAccountType) {
        this.bankAccountType = bankAccountType;
        return this;
    }
    
    /**
     * The sort code or number that identifies the bank. This is also known as the sort code.         
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankCode")
    public String bankCode;
    public GETPaymentMethodResponse withBankCode(String bankCode) {
        this.bankCode = bankCode;
        return this;
    }
    
    /**
     * The name of the bank where the ACH payment account is held. This field is only required if the `type` field is set to `ACH`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankName")
    public String bankName;
    public GETPaymentMethodResponse withBankName(String bankName) {
        this.bankName = bankName;
        return this;
    }
    
    /**
     * The type of the Bank Transfer payment method. For example, `SEPA`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankTransferType")
    public String bankTransferType;
    public GETPaymentMethodResponse withBankTransferType(String bankTransferType) {
        this.bankTransferType = bankTransferType;
        return this;
    }
    
    /**
     * The branch code of the bank used for Direct Debit.          
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branchCode")
    public String branchCode;
    public GETPaymentMethodResponse withBranchCode(String branchCode) {
        this.branchCode = branchCode;
        return this;
    }
    
    /**
     * The BIC code used for SEPA. The value is masked.       
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("businessIdentificationCode")
    public String businessIdentificationCode;
    public GETPaymentMethodResponse withBusinessIdentificationCode(String businessIdentificationCode) {
        this.businessIdentificationCode = businessIdentificationCode;
        return this;
    }
    
    /**
     * The masked credit card number. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardNumber")
    public String cardNumber;
    public GETPaymentMethodResponse withCardNumber(String cardNumber) {
        this.cardNumber = cardNumber;
        return this;
    }
    
    /**
     * Email address associated with the PayPal payment method. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public GETPaymentMethodResponse withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * One or two digits expiration month (1-12).
     *         
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expirationMonth")
    public Long expirationMonth;
    public GETPaymentMethodResponse withExpirationMonth(Long expirationMonth) {
        this.expirationMonth = expirationMonth;
        return this;
    }
    
    /**
     * Four-digit expiration year.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expirationYear")
    public Long expirationYear;
    public GETPaymentMethodResponse withExpirationYear(Long expirationYear) {
        this.expirationYear = expirationYear;
        return this;
    }
    
    /**
     * The payment method ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETPaymentMethodResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The identity number used for Bank Transfer.        
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identityNumber")
    public String identityNumber;
    public GETPaymentMethodResponse withIdentityNumber(String identityNumber) {
        this.identityNumber = identityNumber;
        return this;
    }
    
    /**
     * Indicates whether this payment method is the default payment method for the account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDefault")
    public Boolean isDefault;
    public GETPaymentMethodResponse withIsDefault(Boolean isDefault) {
        this.isDefault = isDefault;
        return this;
    }
    
    /**
     * The mandate information for the Credit Card, ACH, or Bank Transfer payment method.
     * 
     * The following mandate fields are specific to the ACH and Bank Transfer payment methods:
     * * `mandateId`
     * * `mandateReceivedStatus`
     * * `existingMandateStatus`
     * * `mandateCreationDate`
     * * `mandateUpdateDate`
     * * `mandateStatus`
     * * `mandateReason`
     * 
     * The following mandate fields are specific to the Credit Card payment method:
     * * `mitTransactionId`
     * * `mitProfileAgreedOn`
     * * `mitConsentAgreementRef`
     * * `mitConsentAgreementSrc`
     * * `mitProfileType`
     * * `mitProfileAction`
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandateInfo")
    public POSTPMMandateInfo mandateInfo;
    public GETPaymentMethodResponse withMandateInfo(POSTPMMandateInfo mandateInfo) {
        this.mandateInfo = mandateInfo;
        return this;
    }
    
    /**
     * The PayPal preapproval key.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preapprovalKey")
    public String preapprovalKey;
    public GETPaymentMethodResponse withPreapprovalKey(String preapprovalKey) {
        this.preapprovalKey = preapprovalKey;
        return this;
    }
    
    /**
     * The CVV or CVV2 security code for the credit card or debit card.
     *             Only required if changing expirationMonth, expirationYear, or cardHolderName.
     *             To ensure PCI compliance, this value isn''t stored and can''t be queried.                  
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityCode")
    public String securityCode;
    public GETPaymentMethodResponse withSecurityCode(String securityCode) {
        this.securityCode = securityCode;
        return this;
    }
    
    /**
     * The status of the payment method.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public GETPaymentMethodResponseStatusEnum status;
    public GETPaymentMethodResponse withStatus(GETPaymentMethodResponseStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The type of the payment method. For example, `CreditCard`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public GETPaymentMethodResponse withType(String type) {
        this.type = type;
        return this;
    }
    
}
