/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GetSaveOntologyTagFormatEnum {
  Json = "json",
  Xml = "xml",
  Html = "html",
  Dump = "dump",
  Jpg = "jpg",
  Pdf = "pdf",
}

export class GetSaveOntologyTagRequest extends SpeakeasyBase {
  /**
   * The authentication key
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=auth" })
  auth: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=format",
  })
  format?: GetSaveOntologyTagFormatEnum;

  /**
   * The pathway identifier
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=pwId" })
  pwId: string;

  /**
   * The ontology term to apply
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=term" })
  term: string;

  /**
   * The identifier of the term in the ontology
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=termId",
  })
  termId: string;

  /**
   * The username
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=user" })
  user: string;
}

export class GetSaveOntologyTagResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
