"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tensorflowtensorproto as shared_tensorflowtensorproto
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TensorflowVariantTensorDataProto:
    r"""Protocol buffer representing the serialization format of DT_VARIANT tensors."""
    
    metadata: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Portions of the object that are not Tensors."""  
    tensors: Optional[list[shared_tensorflowtensorproto.TensorflowTensorProto]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tensors'), 'exclude': lambda f: f is None }})
    r"""Tensors contained within objects being serialized."""  
    type_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type_name'), 'exclude': lambda f: f is None }})
    r"""Name of the type of objects being serialized."""  
    