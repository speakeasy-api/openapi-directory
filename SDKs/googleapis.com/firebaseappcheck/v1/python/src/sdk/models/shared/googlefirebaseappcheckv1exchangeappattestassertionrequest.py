"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest:
    r"""Request message for the ExchangeAppAttestAssertion method."""
    
    artifact: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('artifact'), 'exclude': lambda f: f is None }})
    r"""Required. The artifact returned by a previous call to ExchangeAppAttestAttestation."""  
    assertion: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assertion'), 'exclude': lambda f: f is None }})
    r"""Required. The CBOR-encoded assertion returned by the client-side App Attest API."""  
    challenge: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('challenge'), 'exclude': lambda f: f is None }})
    r"""Required. A one-time challenge returned by an immediately prior call to GenerateAppAttestChallenge."""  
    