/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class GetAddressInfoResponseUtxosTokens extends SpeakeasyBase {
  /**
   * Whether the tokens can be aggregated together
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregationPolicy" })
  aggregationPolicy?: string;

  /**
   * Number of Tokens
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * Decimal places the token is divisible to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "divisibility" })
  divisibility?: number;

  /**
   * TXID the token originally was issued in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issueTxid" })
  issueTxid?: string;

  /**
   * Whether the token is locked, preventing more from being issued
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockStatus" })
  lockStatus?: boolean;

  /**
   * Unique NTP1 identifier for this token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tokenId" })
  tokenId?: string;
}

export class GetAddressInfoResponseUtxos extends SpeakeasyBase {
  /**
   * Blockheight of the UTXO
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blockheight" })
  blockheight?: number;

  /**
   * Blocktime of the UTXO
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blocktime" })
  blocktime?: number;

  /**
   * Index of the UTXO at this address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "index" })
  index?: number;

  /**
   * Object representing the scruptPubKey of the UTXO
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scriptPubKey" })
  scriptPubKey?: Record<string, any>;

  /**
   * Array of NTP1 tokens in this UTXO.
   */
  @SpeakeasyMetadata({ elemType: GetAddressInfoResponseUtxosTokens })
  @Expose({ name: "tokens" })
  @Type(() => GetAddressInfoResponseUtxosTokens)
  tokens?: GetAddressInfoResponseUtxosTokens[];

  /**
   * Txid of this UTXO
   */
  @SpeakeasyMetadata()
  @Expose({ name: "txid" })
  txid?: string;

  /**
   * Whether the UTXO has been used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "used" })
  used?: boolean;

  /**
   * Value of the UTXO in NEBL satoshi
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

/**
 * An object with an array of UTXOs for this address
 */
export class GetAddressInfoResponse extends SpeakeasyBase {
  /**
   * The Neblio Address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * Array of UTXOs held at this address.
   */
  @SpeakeasyMetadata({ elemType: GetAddressInfoResponseUtxos })
  @Expose({ name: "utxos" })
  @Type(() => GetAddressInfoResponseUtxos)
  utxos?: GetAddressInfoResponseUtxos[];
}
