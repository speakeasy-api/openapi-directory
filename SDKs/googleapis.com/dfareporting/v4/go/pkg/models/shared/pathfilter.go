// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PathFilterPathMatchPositionEnum - Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.
type PathFilterPathMatchPositionEnum string

const (
	PathFilterPathMatchPositionEnumPathMatchPositionUnspecified PathFilterPathMatchPositionEnum = "PATH_MATCH_POSITION_UNSPECIFIED"
	PathFilterPathMatchPositionEnumAny                          PathFilterPathMatchPositionEnum = "ANY"
	PathFilterPathMatchPositionEnumFirst                        PathFilterPathMatchPositionEnum = "FIRST"
	PathFilterPathMatchPositionEnumLast                         PathFilterPathMatchPositionEnum = "LAST"
)

func (e *PathFilterPathMatchPositionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PATH_MATCH_POSITION_UNSPECIFIED":
		fallthrough
	case "ANY":
		fallthrough
	case "FIRST":
		fallthrough
	case "LAST":
		*e = PathFilterPathMatchPositionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PathFilterPathMatchPositionEnum: %s", s)
	}
}

// PathFilter - Represents a DfaReporting path filter.
type PathFilter struct {
	// Event filters in path report.
	EventFilters []EventFilter `json:"eventFilters,omitempty"`
	// The kind of resource this is, in this case dfareporting#pathFilter.
	Kind *string `json:"kind,omitempty"`
	// Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.
	PathMatchPosition *PathFilterPathMatchPositionEnum `json:"pathMatchPosition,omitempty"`
}
