"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExportStats:
    r"""Progress information for an export."""
    
    exported_artifact_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exportedArtifactCount'), 'exclude': lambda f: f is None }})
    r"""The number of messages or files already processed for export."""  
    size_in_bytes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sizeInBytes'), 'exclude': lambda f: f is None }})
    r"""The size of export in bytes."""  
    total_artifact_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalArtifactCount'), 'exclude': lambda f: f is None }})
    r"""The number of messages or files to be exported."""  
    