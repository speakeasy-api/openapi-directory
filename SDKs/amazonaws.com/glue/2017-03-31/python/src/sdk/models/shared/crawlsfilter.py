"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldname_enum as shared_fieldname_enum
from ..shared import filteroperator_enum as shared_filteroperator_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CrawlsFilter:
    r"""A list of fields, comparators and value that you can use to filter the crawler runs for a specified crawler."""
    
    field_name: Optional[shared_fieldname_enum.FieldNameEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FieldName'), 'exclude': lambda f: f is None }})  
    field_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FieldValue'), 'exclude': lambda f: f is None }})  
    filter_operator: Optional[shared_filteroperator_enum.FilterOperatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FilterOperator'), 'exclude': lambda f: f is None }})  
    