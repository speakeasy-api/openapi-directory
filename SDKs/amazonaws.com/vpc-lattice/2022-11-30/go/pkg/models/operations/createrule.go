// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateRuleRequestBodyAction - Describes the action for a rule. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed.
type CreateRuleRequestBodyAction struct {
	FixedResponse *shared.FixedResponseAction `json:"fixedResponse,omitempty"`
	Forward       *shared.ForwardAction       `json:"forward,omitempty"`
}

// CreateRuleRequestBodyMatch - Describes a rule match.
type CreateRuleRequestBodyMatch struct {
	HTTPMatch *shared.HTTPMatch `json:"httpMatch,omitempty"`
}

type CreateRuleRequestBody struct {
	// Describes the action for a rule. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed.
	Action CreateRuleRequestBodyAction `json:"action"`
	// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren't identical, the retry fails.
	ClientToken *string `json:"clientToken,omitempty"`
	// Describes a rule match.
	Match CreateRuleRequestBodyMatch `json:"match"`
	// The name of the rule. The name must be unique within the listener. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	Name string `json:"name"`
	// The priority assigned to the rule. Each rule for a specific listener must have a unique priority. The lower the priority number the higher the priority.
	Priority int64 `json:"priority"`
	// The tags for the rule.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateRuleRequest struct {
	RequestBody       CreateRuleRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The ID or Amazon Resource Name (ARN) of the listener.
	ListenerIdentifier string `pathParam:"style=simple,explode=false,name=listenerIdentifier"`
	// The ID or Amazon Resource Name (ARN) of the service.
	ServiceIdentifier string `pathParam:"style=simple,explode=false,name=serviceIdentifier"`
}

type CreateRuleResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateRuleResponse *shared.CreateRuleResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
