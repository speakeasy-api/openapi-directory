// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryHdfsSortByEnum - Specifies a comma-separated list of HDFS directory attributes to use in sorting the HDFS directory summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.
// Valid attributes are: **_name_**, **_hostName_**, **_templateType_**, **_slaName_**, **_includes_**, **_excludes_**, and **_exceptions_**. Requires **_sort_order_**.
type QueryHdfsSortByEnum string

const (
	QueryHdfsSortByEnumName                   QueryHdfsSortByEnum = "name"
	QueryHdfsSortByEnumHostName               QueryHdfsSortByEnum = "hostName"
	QueryHdfsSortByEnumTemplateID             QueryHdfsSortByEnum = "templateId"
	QueryHdfsSortByEnumEffectiveSLADomainName QueryHdfsSortByEnum = "effectiveSlaDomainName"
	QueryHdfsSortByEnumIncludes               QueryHdfsSortByEnum = "includes"
	QueryHdfsSortByEnumExcludes               QueryHdfsSortByEnum = "excludes"
	QueryHdfsSortByEnumExceptions             QueryHdfsSortByEnum = "exceptions"
)

func (e QueryHdfsSortByEnum) ToPointer() *QueryHdfsSortByEnum {
	return &e
}

func (e *QueryHdfsSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "hostName":
		fallthrough
	case "templateId":
		fallthrough
	case "effectiveSlaDomainName":
		fallthrough
	case "includes":
		fallthrough
	case "excludes":
		fallthrough
	case "exceptions":
		*e = QueryHdfsSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryHdfsSortByEnum: %v", v)
	}
}

// QueryHdfsSortOrderEnum - Sort order, either ascending or descending.
type QueryHdfsSortOrderEnum string

const (
	QueryHdfsSortOrderEnumAsc  QueryHdfsSortOrderEnum = "asc"
	QueryHdfsSortOrderEnumDesc QueryHdfsSortOrderEnum = "desc"
)

func (e QueryHdfsSortOrderEnum) ToPointer() *QueryHdfsSortOrderEnum {
	return &e
}

func (e *QueryHdfsSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryHdfsSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryHdfsSortOrderEnum: %v", v)
	}
}

type QueryHdfsRequest struct {
	// Filter the summary information based on the ID of the effective SLA Domain inherited by a HDFS directory.
	// Use **_UNPROTECTED_** to only return information for HDFS directories that do not have an effective SLA Domain.
	// Use **_PROTECTED_** to only return information for HDFS directories that have an effective SLA Domain.
	EffectiveSLADomainID *string `queryParam:"style=form,explode=true,name=effective_sla_domain_id"`
	// Filter the summary information based on the ID of the host referenced by the HDFS directory (name node).
	HostID *string `queryParam:"style=form,explode=true,name=host_id"`
	// Retrieve HDFS directories with a host name (name node) matching the provided name. The search is performed as a case-insensitive infix search.
	HostName *string `queryParam:"style=form,explode=true,name=host_name"`
	// Filter the summary information based on the relic status of the HDFS directory. When this parameter is not set, the returned HDFS directory summary information is not filtered by relic status.
	IsRelic *bool `queryParam:"style=form,explode=true,name=is_relic"`
	// Limit the summary information to a specified maximum number of HDFS directories.
	// Optionally, use with **_offset_** to start the count at a specified point.
	// Optionally, use with **_sort_by_** to perform sort on given attributes. Include **_sort_order_** to determine the ascending or descending direction of sort.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Retrieve HDFS directories with a name matching the provided name. The search is performed as a case-insensitive infix search.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Starting position in the list of HDFS directory entries contained in the response. The summary information includes the specified numbered entry and all higher numbered entries. Use with **_limit_** to retrieve the summary information as a collection of grouped entries for paging.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter the summary information based on the primary_cluster_id of the primary Rubrik cluster.
	// Use **_local_** as the primary_cluster_id of the Rubrik cluster that is hosting the current REST API session.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Specifies a comma-separated list of HDFS directory attributes to use in sorting the HDFS directory summary information. Performs an ASCII sort of the summary information using each specified attribute, in the order specified.
	// Valid attributes are: **_name_**, **_hostName_**, **_templateType_**, **_slaName_**, **_includes_**, **_excludes_**, and **_exceptions_**. Requires **_sort_order_**.
	SortBy *QueryHdfsSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *QueryHdfsSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
	// Filter the summary information based on the ID of a HDFS directory template.
	// Use **_NONE_** to only return information for HDFS directories that were not created from a HDFS directory template.
	// Use **_ANY_** to only return information for HDFS directories that were created from a HDFS directory template.
	TemplateID *string `queryParam:"style=form,explode=true,name=template_id"`
}

type QueryHdfsResponse struct {
	ContentType string
	// Summary information for HDFS directories.
	HdfsSummaryListResponse *shared.HdfsSummaryListResponse
	StatusCode              int
	RawResponse             *http.Response
}
