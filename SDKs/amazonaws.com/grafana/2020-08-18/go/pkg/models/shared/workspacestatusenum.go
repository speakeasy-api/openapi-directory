// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkspaceStatusEnum string

const (
	WorkspaceStatusEnumActive               WorkspaceStatusEnum = "ACTIVE"
	WorkspaceStatusEnumCreating             WorkspaceStatusEnum = "CREATING"
	WorkspaceStatusEnumDeleting             WorkspaceStatusEnum = "DELETING"
	WorkspaceStatusEnumFailed               WorkspaceStatusEnum = "FAILED"
	WorkspaceStatusEnumUpdating             WorkspaceStatusEnum = "UPDATING"
	WorkspaceStatusEnumUpgrading            WorkspaceStatusEnum = "UPGRADING"
	WorkspaceStatusEnumDeletionFailed       WorkspaceStatusEnum = "DELETION_FAILED"
	WorkspaceStatusEnumCreationFailed       WorkspaceStatusEnum = "CREATION_FAILED"
	WorkspaceStatusEnumUpdateFailed         WorkspaceStatusEnum = "UPDATE_FAILED"
	WorkspaceStatusEnumUpgradeFailed        WorkspaceStatusEnum = "UPGRADE_FAILED"
	WorkspaceStatusEnumLicenseRemovalFailed WorkspaceStatusEnum = "LICENSE_REMOVAL_FAILED"
)

func (e WorkspaceStatusEnum) ToPointer() *WorkspaceStatusEnum {
	return &e
}

func (e *WorkspaceStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "CREATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "FAILED":
		fallthrough
	case "UPDATING":
		fallthrough
	case "UPGRADING":
		fallthrough
	case "DELETION_FAILED":
		fallthrough
	case "CREATION_FAILED":
		fallthrough
	case "UPDATE_FAILED":
		fallthrough
	case "UPGRADE_FAILED":
		fallthrough
	case "LICENSE_REMOVAL_FAILED":
		*e = WorkspaceStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkspaceStatusEnum: %v", v)
	}
}
