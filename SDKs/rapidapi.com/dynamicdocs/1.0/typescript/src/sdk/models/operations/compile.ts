/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * The latex-compiler parameter can take the following values:  pdflatex lualatex
 */
export enum CompileLatexCompilerEnum {
  Pdflatex = "pdflatex",
  Lualatex = "lualatex",
}

export class CompileRequest extends SpeakeasyBase {
  /**
   * Should be set to "application/json"
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * Post the dynamic data for the template to compile the document PDF.
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: Record<string, any>;

  /**
   * The doc-file-name is a string parameter which determines the name of the file. Note that the extension of the file is not required.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=doc-file-name",
  })
  docFileName?: string;

  /**
   * The doc-url-expires-in is a numerical parameter which takes integers and describes after how many seconds the provided URL is available to download the document.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=doc-url-expires-in",
  })
  docUrlExpiresIn?: number;

  /**
   * The latex-compiler parameter can take the following values:  pdflatex lualatex
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=latex-compiler",
  })
  latexCompiler?: CompileLatexCompilerEnum;

  /**
   * The latex-runs is a numerical parameter and can take values of 1, 2 and 3.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=latex-runs ",
  })
  latexRuns?: number;

  /**
   * The main-file-name is a string parameter which identifies the main file to compile.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=main-file-name",
  })
  mainFileName?: string;

  /**
   * The template-token is available in your template settings after publishing your template.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=template-token",
  })
  templateToken: string;
}

export class CompileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Document Status URL Created
   */
  @SpeakeasyMetadata()
  compile200ApplicationJSONObject?: Record<string, any>;
}
