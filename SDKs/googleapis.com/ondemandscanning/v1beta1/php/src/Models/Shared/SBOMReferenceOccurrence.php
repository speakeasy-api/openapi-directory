<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SBOMReferenceOccurrence - The occurrence representing an SBOM reference as applied to a specific resource. The occurrence follows the DSSE specification. See https://github.com/secure-systems-lab/dsse/blob/master/envelope.md for more details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SBOMReferenceOccurrence
{
    /**
     * The actual payload that contains the SBOM Reference data. The payload follows the intoto statement specification. See https://github.com/in-toto/attestation/blob/main/spec/v1.0/statement.md for more details.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SbomReferenceIntotoPayload $payload
     */
	#[\JMS\Serializer\Annotation\SerializedName('payload')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SbomReferenceIntotoPayload')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SbomReferenceIntotoPayload $payload = null;
    
    /**
     * The kind of payload that SbomReferenceIntotoPayload takes. Since it's in the intoto format, this value is expected to be 'application/vnd.in-toto+json'.
     * 
     * @var ?string $payloadType
     */
	#[\JMS\Serializer\Annotation\SerializedName('payloadType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payloadType = null;
    
    /**
     * The signatures over the payload.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EnvelopeSignature> $signatures
     */
	#[\JMS\Serializer\Annotation\SerializedName('signatures')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EnvelopeSignature>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $signatures = null;
    
	public function __construct()
	{
		$this->payload = null;
		$this->payloadType = null;
		$this->signatures = null;
	}
}
