/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Report } from "./report";
import { ResourceQuotasRemaining } from "./resourcequotasremaining";
import { Expose, Type } from "class-transformer";

/**
 * The main response class which holds the reports from the Reporting API `batchGet` call.
 */
export class GetReportsResponse extends SpeakeasyBase {
  /**
   * The amount of resource quota tokens deducted to execute the query. Includes all responses.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryCost" })
  queryCost?: number;

  /**
   * Responses corresponding to each of the request.
   */
  @SpeakeasyMetadata({ elemType: Report })
  @Expose({ name: "reports" })
  @Type(() => Report)
  reports?: Report[];

  /**
   * The resource quota tokens remaining for the property after the request is completed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceQuotasRemaining" })
  @Type(() => ResourceQuotasRemaining)
  resourceQuotasRemaining?: ResourceQuotasRemaining;
}
