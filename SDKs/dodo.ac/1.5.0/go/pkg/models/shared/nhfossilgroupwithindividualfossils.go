// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NHFossilGroupWithIndividualFossilsFossilsColorsEnum string

const (
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumAqua     NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Aqua"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumBeige    NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Beige"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumBlack    NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Black"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumBlue     NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Blue"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumBrown    NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Brown"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumColorful NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Colorful"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumGray     NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Gray"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumGreen    NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Green"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumOrange   NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Orange"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumPink     NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Pink"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumPurple   NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Purple"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumRed      NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Red"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumWhite    NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "White"
	NHFossilGroupWithIndividualFossilsFossilsColorsEnumYellow   NHFossilGroupWithIndividualFossilsFossilsColorsEnum = "Yellow"
)

func (e *NHFossilGroupWithIndividualFossilsFossilsColorsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Aqua":
		fallthrough
	case "Beige":
		fallthrough
	case "Black":
		fallthrough
	case "Blue":
		fallthrough
	case "Brown":
		fallthrough
	case "Colorful":
		fallthrough
	case "Gray":
		fallthrough
	case "Green":
		fallthrough
	case "Orange":
		fallthrough
	case "Pink":
		fallthrough
	case "Purple":
		fallthrough
	case "Red":
		fallthrough
	case "White":
		fallthrough
	case "Yellow":
		*e = NHFossilGroupWithIndividualFossilsFossilsColorsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NHFossilGroupWithIndividualFossilsFossilsColorsEnum: %s", s)
	}
}

type NHFossilGroupWithIndividualFossilsFossils struct {
	Colors       []NHFossilGroupWithIndividualFossilsFossilsColorsEnum `json:"colors,omitempty"`
	FossilGroup  *string                                               `json:"fossil_group,omitempty"`
	HhaBase      *int64                                                `json:"hha_base,omitempty"`
	ImageURL     *string                                               `json:"image_url,omitempty"`
	Interactable *bool                                                 `json:"interactable,omitempty"`
	Length       *int64                                                `json:"length,omitempty"`
	Name         *string                                               `json:"name,omitempty"`
	Sell         *int64                                                `json:"sell,omitempty"`
	URL          *string                                               `json:"url,omitempty"`
	Width        *int64                                                `json:"width,omitempty"`
}

type NHFossilGroupWithIndividualFossilsMatched struct {
	// The name of the fossil or fossil group that matched the given query.
	Name *string `json:"name,omitempty"`
	// If the query given was a fossil group, `group` would be returned. Otherwise, `individual` is returned.
	Type *string `json:"type,omitempty"`
}

// NHFossilGroupWithIndividualFossils - A JSON object describing the fossil group.
type NHFossilGroupWithIndividualFossils struct {
	// A description of the fossil group.
	Description *string `json:"description,omitempty"`
	// An array of objects, each object representing a fossil that belongs to the given group.
	Fossils []NHFossilGroupWithIndividualFossilsFossils `json:"fossils,omitempty"`
	Matched *NHFossilGroupWithIndividualFossilsMatched  `json:"matched,omitempty"`
	// The name of the fossil group.
	Name *string `json:"name,omitempty"`
	// The room where the fossil group can be found in the museum's fossil section.
	Room *int64 `json:"room,omitempty"`
	// Link to the respective Nookipedia article.
	URL *string `json:"url,omitempty"`
}
