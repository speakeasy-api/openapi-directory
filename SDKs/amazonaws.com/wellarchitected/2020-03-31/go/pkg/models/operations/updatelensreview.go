// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateLensReviewRequestBody struct {
	// The notes associated with the workload.
	LensNotes *string `json:"LensNotes,omitempty"`
	// List of pillar notes of a lens review in a workload.
	PillarNotes map[string]string `json:"PillarNotes,omitempty"`
}

type UpdateLensReviewRequest struct {
	LensAlias         string                      `pathParam:"style=simple,explode=false,name=LensAlias"`
	RequestBody       UpdateLensReviewRequestBody `request:"mediaType=application/json"`
	WorkloadID        string                      `pathParam:"style=simple,explode=false,name=WorkloadId"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateLensReviewResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateLensReviewOutput *shared.UpdateLensReviewOutput
	// ValidationException
	ValidationException interface{}
}
