"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import selfmanagedactivedirectoryconfigurationupdates as shared_selfmanagedactivedirectoryconfigurationupdates
from ..shared import windowsauditlogcreateconfiguration as shared_windowsauditlogcreateconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateFileSystemWindowsConfiguration:
    r"""Updates the configuration for an existing Amazon FSx for Windows File Server file system. Amazon FSx only overwrites existing properties with non-null values provided in the request."""
    
    audit_log_configuration: Optional[shared_windowsauditlogcreateconfiguration.WindowsAuditLogCreateConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AuditLogConfiguration'), 'exclude': lambda f: f is None }})  
    automatic_backup_retention_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutomaticBackupRetentionDays'), 'exclude': lambda f: f is None }})  
    daily_automatic_backup_start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DailyAutomaticBackupStartTime'), 'exclude': lambda f: f is None }})  
    self_managed_active_directory_configuration: Optional[shared_selfmanagedactivedirectoryconfigurationupdates.SelfManagedActiveDirectoryConfigurationUpdates] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SelfManagedActiveDirectoryConfiguration'), 'exclude': lambda f: f is None }})  
    throughput_capacity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ThroughputCapacity'), 'exclude': lambda f: f is None }})  
    weekly_maintenance_start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WeeklyMaintenanceStartTime'), 'exclude': lambda f: f is None }})  
    