"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import activitytype as shared_activitytype
from ..shared import workflowexecution as shared_workflowexecution
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActivityTask:
    r"""Unit of work sent to an activity worker."""
    
    activity_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activityId') }})  
    activity_type: shared_activitytype.ActivityType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activityType') }})  
    started_event_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startedEventId') }})  
    task_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskToken') }})  
    workflow_execution: shared_workflowexecution.WorkflowExecution = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflowExecution') }})  
    input: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('input'), 'exclude': lambda f: f is None }})  
    