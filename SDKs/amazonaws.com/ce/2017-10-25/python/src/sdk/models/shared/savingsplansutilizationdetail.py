"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import savingsplansamortizedcommitment as shared_savingsplansamortizedcommitment
from ..shared import savingsplanssavings as shared_savingsplanssavings
from ..shared import savingsplansutilization as shared_savingsplansutilization
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SavingsPlansUtilizationDetail:
    r"""A single daily or monthly Savings Plans utilization rate and details for your account. A management account in an organization have access to member accounts. You can use <code>GetDimensionValues</code> to determine the possible dimension values."""
    
    amortized_commitment: Optional[shared_savingsplansamortizedcommitment.SavingsPlansAmortizedCommitment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AmortizedCommitment'), 'exclude': lambda f: f is None }})  
    attributes: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Attributes'), 'exclude': lambda f: f is None }})  
    savings: Optional[shared_savingsplanssavings.SavingsPlansSavings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Savings'), 'exclude': lambda f: f is None }})  
    savings_plan_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SavingsPlanArn'), 'exclude': lambda f: f is None }})  
    utilization: Optional[shared_savingsplansutilization.SavingsPlansUtilization] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Utilization'), 'exclude': lambda f: f is None }})  
    