"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectorMetadata = void 0;
var utils_1 = require("../../../internal/utils");
var googleanalyticsmetadata_1 = require("./googleanalyticsmetadata");
var honeycodemetadata_1 = require("./honeycodemetadata");
var salesforcemetadata_1 = require("./salesforcemetadata");
var slackmetadata_1 = require("./slackmetadata");
var snowflakemetadata_1 = require("./snowflakemetadata");
var zendeskmetadata_1 = require("./zendeskmetadata");
var class_transformer_1 = require("class-transformer");
/**
 *  A structure to specify connector-specific metadata such as <code>oAuthScopes</code>, <code>supportedRegions</code>, <code>privateLinkServiceUrl</code>, and so on.
 */
var ConnectorMetadata = /** @class */ (function (_super) {
    __extends(ConnectorMetadata, _super);
    function ConnectorMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Amplitude" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "amplitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CustomerProfiles" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "customerProfiles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Datadog" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "datadog", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Dynatrace" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "dynatrace", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EventBridge" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "eventBridge", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "GoogleAnalytics" }),
        (0, class_transformer_1.Type)(function () { return googleanalyticsmetadata_1.GoogleAnalyticsMetadata; }),
        __metadata("design:type", googleanalyticsmetadata_1.GoogleAnalyticsMetadata)
    ], ConnectorMetadata.prototype, "googleAnalytics", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Honeycode" }),
        (0, class_transformer_1.Type)(function () { return honeycodemetadata_1.HoneycodeMetadata; }),
        __metadata("design:type", honeycodemetadata_1.HoneycodeMetadata)
    ], ConnectorMetadata.prototype, "honeycode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InforNexus" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "inforNexus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Marketo" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "marketo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Pardot" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "pardot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Redshift" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "redshift", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "S3" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "s3", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SAPOData" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "sapoData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Salesforce" }),
        (0, class_transformer_1.Type)(function () { return salesforcemetadata_1.SalesforceMetadata; }),
        __metadata("design:type", salesforcemetadata_1.SalesforceMetadata)
    ], ConnectorMetadata.prototype, "salesforce", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ServiceNow" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "serviceNow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Singular" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "singular", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Slack" }),
        (0, class_transformer_1.Type)(function () { return slackmetadata_1.SlackMetadata; }),
        __metadata("design:type", slackmetadata_1.SlackMetadata)
    ], ConnectorMetadata.prototype, "slack", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Snowflake" }),
        (0, class_transformer_1.Type)(function () { return snowflakemetadata_1.SnowflakeMetadata; }),
        __metadata("design:type", snowflakemetadata_1.SnowflakeMetadata)
    ], ConnectorMetadata.prototype, "snowflake", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Trendmicro" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "trendmicro", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Upsolver" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "upsolver", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Veeva" }),
        __metadata("design:type", Object)
    ], ConnectorMetadata.prototype, "veeva", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Zendesk" }),
        (0, class_transformer_1.Type)(function () { return zendeskmetadata_1.ZendeskMetadata; }),
        __metadata("design:type", zendeskmetadata_1.ZendeskMetadata)
    ], ConnectorMetadata.prototype, "zendesk", void 0);
    return ConnectorMetadata;
}(utils_1.SpeakeasyBase));
exports.ConnectorMetadata = ConnectorMetadata;
