/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class DebitMemoTaxItemFromInvoiceTaxItemType {
    /**
     * The amount of the debit memo taxation item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public DebitMemoTaxItemFromInvoiceTaxItemType withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Container for the finance information related to the source taxation item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("financeInformation")
    public DebitMemoTaxItemFromInvoiceTaxItemTypeFinanceInformation financeInformation;
    public DebitMemoTaxItemFromInvoiceTaxItemType withFinanceInformation(DebitMemoTaxItemFromInvoiceTaxItemTypeFinanceInformation financeInformation) {
        this.financeInformation = financeInformation;
        return this;
    }
    
    /**
     * The jurisdiction that applies the tax or VAT. This value is typically a state, province, county, or city.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jurisdiction")
    public String jurisdiction;
    public DebitMemoTaxItemFromInvoiceTaxItemType withJurisdiction(String jurisdiction) {
        this.jurisdiction = jurisdiction;
        return this;
    }
    
    /**
     * The identifier for the location based on the value of the `taxCode` field.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationCode")
    public String locationCode;
    public DebitMemoTaxItemFromInvoiceTaxItemType withLocationCode(String locationCode) {
        this.locationCode = locationCode;
        return this;
    }
    
    /**
     * The ID of the source taxation item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceTaxItemId")
    public String sourceTaxItemId;
    public DebitMemoTaxItemFromInvoiceTaxItemType withSourceTaxItemId(String sourceTaxItemId) {
        this.sourceTaxItemId = sourceTaxItemId;
        return this;
    }
    
    /**
     * The tax code identifies which tax rules and tax rates to apply to a specific debit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxCode")
    public String taxCode;
    public DebitMemoTaxItemFromInvoiceTaxItemType withTaxCode(String taxCode) {
        this.taxCode = taxCode;
        return this;
    }
    
    /**
     * The description of the tax code.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxCodeDescription")
    public String taxCodeDescription;
    public DebitMemoTaxItemFromInvoiceTaxItemType withTaxCodeDescription(String taxCodeDescription) {
        this.taxCodeDescription = taxCodeDescription;
        return this;
    }
    
    /**
     * The date that the tax is applied to the debit memo, in `yyyy-mm-dd` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("taxDate")
    public LocalDate taxDate;
    public DebitMemoTaxItemFromInvoiceTaxItemType withTaxDate(LocalDate taxDate) {
        this.taxDate = taxDate;
        return this;
    }
    
    /**
     * The amount of taxes or VAT for which the customer has an exemption.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxExemptAmount")
    public Double taxExemptAmount;
    public DebitMemoTaxItemFromInvoiceTaxItemType withTaxExemptAmount(Double taxExemptAmount) {
        this.taxExemptAmount = taxExemptAmount;
        return this;
    }
    
    /**
     * The name of taxation.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxName")
    public String taxName;
    public DebitMemoTaxItemFromInvoiceTaxItemType withTaxName(String taxName) {
        this.taxName = taxName;
        return this;
    }
    
    /**
     * The tax rate applied to the debit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxRate")
    public Double taxRate;
    public DebitMemoTaxItemFromInvoiceTaxItemType withTaxRate(Double taxRate) {
        this.taxRate = taxRate;
        return this;
    }
    
    /**
     * The description of the tax rate.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxRateDescription")
    public String taxRateDescription;
    public DebitMemoTaxItemFromInvoiceTaxItemType withTaxRateDescription(String taxRateDescription) {
        this.taxRateDescription = taxRateDescription;
        return this;
    }
    
    /**
     * The type of the tax rate applied to the debit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxRateType")
    public DebitMemoTaxItemFromInvoiceTaxItemTypeTaxRateTypeEnum taxRateType;
    public DebitMemoTaxItemFromInvoiceTaxItemType withTaxRateType(DebitMemoTaxItemFromInvoiceTaxItemTypeTaxRateTypeEnum taxRateType) {
        this.taxRateType = taxRateType;
        return this;
    }
    
}
