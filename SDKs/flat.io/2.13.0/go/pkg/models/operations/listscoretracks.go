// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListScoreTracksSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

type ListScoreTracksRequest struct {
	// An assignment id with which all the tracks returned will be related to
	//
	Assignment *string `queryParam:"style=form,explode=true,name=assignment"`
	// If true, and if available, return last automatically synchronized Flat's mp3 export as an additional track
	//
	ListAutoTrack *bool `queryParam:"style=form,explode=true,name=listAutoTrack"`
	// Unique identifier of the score document. This can be a Flat Score unique identifier (i.e. `ScoreDetails.id`) or, if the score is also a Google Drive file, the Drive file unique identifier prefixed with `drive-` (e.g. `drive-0B000000000`).
	//
	Score string `pathParam:"style=simple,explode=false,name=score"`
	// This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.
	//
	SharingKey *string `queryParam:"style=form,explode=true,name=sharingKey"`
}

type ListScoreTracksResponse struct {
	ContentType string
	// Not granted to access to this score
	FlatErrorResponse *shared.FlatErrorResponse
	// List of tracks
	ScoreTracks []shared.ScoreTrack
	StatusCode  int
	RawResponse *http.Response
}
