/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Places } from "./places";
import { PointRadius } from "./pointradius";
import { Expose, Type } from "class-transformer";

/**
 * Indicates the type of the service area business.
 */
export enum ServiceAreaBusinessBusinessTypeEnum {
  BusinessTypeUnspecified = "BUSINESS_TYPE_UNSPECIFIED",
  CustomerLocationOnly = "CUSTOMER_LOCATION_ONLY",
  CustomerAndBusinessLocation = "CUSTOMER_AND_BUSINESS_LOCATION",
}

/**
 * Service area businesses provide their service at the customer's location (for example, a locksmith or plumber).
 */
export class ServiceAreaBusiness extends SpeakeasyBase {
  /**
   * Indicates the type of the service area business.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "businessType" })
  businessType?: ServiceAreaBusinessBusinessTypeEnum;

  /**
   * Defines the union of areas represented by a set of places.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "places" })
  @Type(() => Places)
  places?: Places;

  /**
   * A radius around a particular point (latitude/longitude).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "radius" })
  @Type(() => PointRadius)
  radius?: PointRadius;
}
