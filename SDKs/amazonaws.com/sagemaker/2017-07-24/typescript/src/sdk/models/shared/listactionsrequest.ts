/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SortActionsByEnum } from "./sortactionsbyenum";
import { SortOrderEnum } from "./sortorderenum";
import { Expose, Transform } from "class-transformer";

export class ListActionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ActionType" })
  actionType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SortBy" })
  sortBy?: SortActionsByEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SortOrder" })
  sortOrder?: SortOrderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceUri" })
  sourceUri?: string;
}
