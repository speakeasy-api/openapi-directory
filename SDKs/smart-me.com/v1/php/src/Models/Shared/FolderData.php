<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FolderData - Container class for the folder API
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FolderData
{
    /**
     * The Counter values for electricity (kWh)
     * 
     * @var ?float $electricityCounterValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('ElectricityCounterValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $electricityCounterValue = null;
    
    /**
     * The Power for electricity (kW)
     * 
     * @var ?float $electricityPower
     */
	#[\JMS\Serializer\Annotation\SerializedName('ElectricityPower')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $electricityPower = null;
    
    /**
     * The Counter values for Gas (m3)
     * 
     * @var ?float $gasCounterValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('GasCounterValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $gasCounterValue = null;
    
    /**
     * The Flow Rate for Gas (m3/h)
     * 
     * @var ?float $gasFlowRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('GasFlowRate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $gasFlowRate = null;
    
    /**
     * The Counter values for Heat (kWh)
     * 
     * @var ?float $heatCounterValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('HeatCounterValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $heatCounterValue = null;
    
    /**
     * The Power for Heat (kW)
     * 
     * @var ?float $heatPower
     */
	#[\JMS\Serializer\Annotation\SerializedName('HeatPower')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $heatPower = null;
    
    /**
     * The Counter values for Water (m3)
     * 
     * @var ?float $waterCounterValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('WaterCounterValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $waterCounterValue = null;
    
    /**
     * The Flow Rate for Water (m3/h)
     * 
     * @var ?float $waterFlowRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('WaterFlowRate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $waterFlowRate = null;
    
	public function __construct()
	{
		$this->electricityCounterValue = null;
		$this->electricityPower = null;
		$this->gasCounterValue = null;
		$this->gasFlowRate = null;
		$this->heatCounterValue = null;
		$this->heatPower = null;
		$this->waterCounterValue = null;
		$this->waterFlowRate = null;
	}
}
