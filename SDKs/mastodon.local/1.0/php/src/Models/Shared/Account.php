<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Account - Represents a user of Mastodon and their associated profile.
 * 
 * https://docs.joinmastodon.org/entities/account/
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 * @see https://docs.joinmastodon.org/entities/account/
 */
class Account
{
    /**
     * The Webfinger account URI. Equal to `username` for local users, or `username@domain` for
     * 
     * @var ?string $acct
     */
	#[\JMS\Serializer\Annotation\SerializedName('acct')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $acct = null;
    
    /**
     * An image icon that is shown next to statuses and in the profile. The format is URL.
     * 
     * @var ?string $avatar
     */
	#[\JMS\Serializer\Annotation\SerializedName('avatar')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $avatar = null;
    
    /**
     * A static version of the avatar. Equal to `avatar` if its value is a static image; different if `avatar` is an animated GIF. The format is URL.
     * 
     * @var ?string $avatarStatic
     */
	#[\JMS\Serializer\Annotation\SerializedName('avatar_static')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $avatarStatic = null;
    
    /**
     * A presentational flag. Indicates that the account may perform automated actions, may not be monitored, or identifies as a robot.
     * 
     * @var ?bool $bot
     */
	#[\JMS\Serializer\Annotation\SerializedName('bot')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $bot = null;
    
    /**
     * When the account was created.
     * 
     * @var ?\DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * Whether the account has opted into discovery features such as the profile directory.
     * 
     * @var ?bool $discoverable
     */
	#[\JMS\Serializer\Annotation\SerializedName('discoverable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $discoverable = null;
    
    /**
     * The profile's display name.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('display_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Custom emoji entities to be used when rendering the profile. If none, an empty array will be returned.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Emoji> $emojis
     */
	#[\JMS\Serializer\Annotation\SerializedName('emojis')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Emoji>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $emojis = null;
    
    /**
     * Additional metadata attached to a profile as name-value pairs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Field> $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Field>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fields = null;
    
    /**
     * The reported followers of this profile.
     * 
     * @var ?int $followersCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('followers_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $followersCount = null;
    
    /**
     * The reported follows of this profile.
     * 
     * @var ?int $followingCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('following_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $followingCount = null;
    
    /**
     * An image banner that is shown above the profile and in profile cards. The format is URL.
     * 
     * @var ?string $header
     */
	#[\JMS\Serializer\Annotation\SerializedName('header')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $header = null;
    
    /**
     * A static version of the header. Equal to `header` if its value is a static image; different if `header` is an animated GIF. The format is URL.
     * 
     * @var ?string $headerStatic
     */
	#[\JMS\Serializer\Annotation\SerializedName('header_static')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $headerStatic = null;
    
    /**
     * The account id `header`.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * When the most recent status was posted.
     * 
     * @var ?\DateTime $lastStatusAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_status_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastStatusAt = null;
    
    /**
     * Whether the account manually approves follow requests.
     * 
     * @var ?bool $locked
     */
	#[\JMS\Serializer\Annotation\SerializedName('locked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $locked = null;
    
    /**
     * Represents a user of Mastodon and their associated profile.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Account $moved
     */
	#[\JMS\Serializer\Annotation\SerializedName('moved')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Account')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Account $moved = null;
    
    /**
     * When a timed mute will expire, if applicable. ISO 8601 Datetime.
     * 
     * @var ?\DateTime $muteExpiresAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('mute_expires_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $muteExpiresAt = null;
    
    /**
     * The profile's bio / description.
     * 
     * @var ?string $note
     */
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * Represents display or publishing preferences of user's own account. Returned as an additional entity when verifying and updated credentials, as an attribute of Account.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Source $source
     */
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Source')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Source $source = null;
    
    /**
     * How many statuses are attached to this account.
     * 
     * @var ?int $statusesCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('statuses_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $statusesCount = null;
    
    /**
     * An extra entity returned when an account is suspended.
     * 
     * @var ?bool $suspended
     */
	#[\JMS\Serializer\Annotation\SerializedName('suspended')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $suspended = null;
    
    /**
     * The location of the user's profile page. (HTTPS URL)
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * The username of the account, not including domain.
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->acct = null;
		$this->avatar = null;
		$this->avatarStatic = null;
		$this->bot = null;
		$this->createdAt = null;
		$this->discoverable = null;
		$this->displayName = null;
		$this->emojis = null;
		$this->fields = null;
		$this->followersCount = null;
		$this->followingCount = null;
		$this->header = null;
		$this->headerStatic = null;
		$this->id = null;
		$this->lastStatusAt = null;
		$this->locked = null;
		$this->moved = null;
		$this->muteExpiresAt = null;
		$this->note = null;
		$this->source = null;
		$this->statusesCount = null;
		$this->suspended = null;
		$this->url = null;
		$this->username = null;
	}
}
