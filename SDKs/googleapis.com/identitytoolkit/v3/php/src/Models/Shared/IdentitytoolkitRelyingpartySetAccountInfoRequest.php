<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * IdentitytoolkitRelyingpartySetAccountInfoRequest - Request to set the account information.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class IdentitytoolkitRelyingpartySetAccountInfoRequest
{
    /**
     * The captcha challenge.
     * 
     * @var ?string $captchaChallenge
     */
	#[\JMS\Serializer\Annotation\SerializedName('captchaChallenge')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $captchaChallenge = null;
    
    /**
     * Response to the captcha.
     * 
     * @var ?string $captchaResponse
     */
	#[\JMS\Serializer\Annotation\SerializedName('captchaResponse')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $captchaResponse = null;
    
    /**
     * The timestamp when the account is created.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The custom attributes to be set in the user's id token.
     * 
     * @var ?string $customAttributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('customAttributes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customAttributes = null;
    
    /**
     * GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
     * 
     * @var ?string $delegatedProjectNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('delegatedProjectNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $delegatedProjectNumber = null;
    
    /**
     * The attributes users request to delete.
     * 
     * @var ?array<string> $deleteAttribute
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleteAttribute')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $deleteAttribute = null;
    
    /**
     * The IDPs the user request to delete.
     * 
     * @var ?array<string> $deleteProvider
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleteProvider')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $deleteProvider = null;
    
    /**
     * Whether to disable the user.
     * 
     * @var ?bool $disableUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('disableUser')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disableUser = null;
    
    /**
     * The name of the user.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * The email of the user.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Mark the email as verified or not.
     * 
     * @var ?bool $emailVerified
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailVerified')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $emailVerified = null;
    
    /**
     * The GITKit token of the authenticated user.
     * 
     * @var ?string $idToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('idToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $idToken = null;
    
    /**
     * Instance id token of the app.
     * 
     * @var ?string $instanceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('instanceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceId = null;
    
    /**
     * Last login timestamp.
     * 
     * @var ?string $lastLoginAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastLoginAt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastLoginAt = null;
    
    /**
     * The local ID of the user.
     * 
     * @var ?string $localId
     */
	#[\JMS\Serializer\Annotation\SerializedName('localId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $localId = null;
    
    /**
     * The out-of-band code of the change email request.
     * 
     * @var ?string $oobCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('oobCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $oobCode = null;
    
    /**
     * The new password of the user.
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $password = null;
    
    /**
     * Privileged caller can update user with specified phone number.
     * 
     * @var ?string $phoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneNumber = null;
    
    /**
     * The photo url of the user.
     * 
     * @var ?string $photoUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('photoUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $photoUrl = null;
    
    /**
     * The associated IDPs of the user.
     * 
     * @var ?array<string> $provider
     */
	#[\JMS\Serializer\Annotation\SerializedName('provider')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $provider = null;
    
    /**
     * Whether return sts id token and refresh token instead of gitkit token.
     * 
     * @var ?bool $returnSecureToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnSecureToken')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $returnSecureToken = null;
    
    /**
     * Mark the user to upgrade to federated login.
     * 
     * @var ?bool $upgradeToFederatedLogin
     */
	#[\JMS\Serializer\Annotation\SerializedName('upgradeToFederatedLogin')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $upgradeToFederatedLogin = null;
    
    /**
     * Timestamp in seconds for valid login token.
     * 
     * @var ?string $validSince
     */
	#[\JMS\Serializer\Annotation\SerializedName('validSince')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $validSince = null;
    
	public function __construct()
	{
		$this->captchaChallenge = null;
		$this->captchaResponse = null;
		$this->createdAt = null;
		$this->customAttributes = null;
		$this->delegatedProjectNumber = null;
		$this->deleteAttribute = null;
		$this->deleteProvider = null;
		$this->disableUser = null;
		$this->displayName = null;
		$this->email = null;
		$this->emailVerified = null;
		$this->idToken = null;
		$this->instanceId = null;
		$this->lastLoginAt = null;
		$this->localId = null;
		$this->oobCode = null;
		$this->password = null;
		$this->phoneNumber = null;
		$this->photoUrl = null;
		$this->provider = null;
		$this->returnSecureToken = null;
		$this->upgradeToFederatedLogin = null;
		$this->validSince = null;
	}
}
