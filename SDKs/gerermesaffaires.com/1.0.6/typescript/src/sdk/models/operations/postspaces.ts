/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostSpacesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  gmaAuth: string;
}

export class PostSpacesRequestBodyLogo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Content64Encoded" })
  content64Encoded?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;
}

export enum PostSpacesRequestBodyTypeEnum {
  Enterprise = "enterprise",
  Company = "company",
  Association = "association",
}

/**
 * Space to add (except private)
 */
export class PostSpacesRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "LegalStatut" })
  legalStatut?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Logo" })
  @Type(() => PostSpacesRequestBodyLogo)
  logo?: PostSpacesRequestBodyLogo;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RegistrationNumber" })
  registrationNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateSpaceId" })
  templateSpaceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: PostSpacesRequestBodyTypeEnum;
}

/**
 * Id of space created
 */
export class PostSpaces201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;
}

export class PostSpacesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Id of space created
   */
  @SpeakeasyMetadata()
  postSpaces201ApplicationJSONObject?: PostSpaces201ApplicationJSON;
}
