// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListTechniquesDirectivesPathParams struct {
	// Technique name
	TechniqueName string `pathParam:"style=simple,explode=false,name=techniqueName"`
}

type ListTechniquesDirectivesRequest struct {
	PathParams ListTechniquesDirectivesPathParams
}

// ListTechniquesDirectives200ApplicationJSONActionEnum - The id of the action
type ListTechniquesDirectives200ApplicationJSONActionEnum string

const (
	ListTechniquesDirectives200ApplicationJSONActionEnumListTechniquesDirectives ListTechniquesDirectives200ApplicationJSONActionEnum = "listTechniquesDirectives"
)

func (e *ListTechniquesDirectives200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "listTechniquesDirectives":
		*e = ListTechniquesDirectives200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTechniquesDirectives200ApplicationJSONActionEnum: %s", s)
	}
}

type ListTechniquesDirectives200ApplicationJSONData struct {
	Directives []shared.Directive `json:"directives"`
}

// ListTechniquesDirectives200ApplicationJSONResultEnum - Result of the request
type ListTechniquesDirectives200ApplicationJSONResultEnum string

const (
	ListTechniquesDirectives200ApplicationJSONResultEnumSuccess ListTechniquesDirectives200ApplicationJSONResultEnum = "success"
	ListTechniquesDirectives200ApplicationJSONResultEnumError   ListTechniquesDirectives200ApplicationJSONResultEnum = "error"
)

func (e *ListTechniquesDirectives200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = ListTechniquesDirectives200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTechniquesDirectives200ApplicationJSONResultEnum: %s", s)
	}
}

// ListTechniquesDirectives200ApplicationJSON - Techniques information
type ListTechniquesDirectives200ApplicationJSON struct {
	// The id of the action
	Action ListTechniquesDirectives200ApplicationJSONActionEnum `json:"action"`
	Data   ListTechniquesDirectives200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result ListTechniquesDirectives200ApplicationJSONResultEnum `json:"result"`
}

type ListTechniquesDirectivesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Techniques information
	ListTechniquesDirectives200ApplicationJSONObject *ListTechniquesDirectives200ApplicationJSON
}
