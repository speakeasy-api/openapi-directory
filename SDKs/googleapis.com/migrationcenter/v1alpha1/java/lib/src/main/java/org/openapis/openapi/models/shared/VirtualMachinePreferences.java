/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VirtualMachinePreferences - VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.
 */
public class VirtualMachinePreferences {
    /**
     * Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commitmentPlan")
    public VirtualMachinePreferencesCommitmentPlanEnum commitmentPlan;
    public VirtualMachinePreferences withCommitmentPlan(VirtualMachinePreferencesCommitmentPlanEnum commitmentPlan) {
        this.commitmentPlan = commitmentPlan;
        return this;
    }
    
    /**
     * The user preferences relating to Compute Engine target platform.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computeEnginePreferences")
    public ComputeEnginePreferences computeEnginePreferences;
    public VirtualMachinePreferences withComputeEnginePreferences(ComputeEnginePreferences computeEnginePreferences) {
        this.computeEnginePreferences = computeEnginePreferences;
        return this;
    }
    
    /**
     * The user preferences relating to target regions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionPreferences")
    public RegionPreferences regionPreferences;
    public VirtualMachinePreferences withRegionPreferences(RegionPreferences regionPreferences) {
        this.regionPreferences = regionPreferences;
        return this;
    }
    
    /**
     * Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizingOptimizationStrategy")
    public VirtualMachinePreferencesSizingOptimizationStrategyEnum sizingOptimizationStrategy;
    public VirtualMachinePreferences withSizingOptimizationStrategy(VirtualMachinePreferencesSizingOptimizationStrategyEnum sizingOptimizationStrategy) {
        this.sizingOptimizationStrategy = sizingOptimizationStrategy;
        return this;
    }
    
}
