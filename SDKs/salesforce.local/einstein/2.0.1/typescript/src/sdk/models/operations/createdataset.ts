/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CreateDatasetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerToken: string;
}

/**
 * Type of dataset data
 */
export enum CreateDatasetRequestBodyTypeEnum {
  Image = "image",
  ImageMultiLabel = "image-multi-label",
}

export class CreateDatasetRequestBody extends SpeakeasyBase {
  /**
   * Optional comma-separated list of labels. If specified, creates the labels in the dataset. Maximum number of labels per dataset is 250.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=labels" })
  labels?: string;

  /**
   * Name of the dataset. Maximum length is 180 characters.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=name" })
  name?: string;

  /**
   * Type of dataset data
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=type" })
  type?: CreateDatasetRequestBodyTypeEnum;
}

export class CreateDatasetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Creation success
   */
  @SpeakeasyMetadata()
  dataset?: shared.Dataset;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
