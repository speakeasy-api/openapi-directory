/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class PredictResponse {
    
    public String contentType;
    public PredictResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InternalServerException
     */
    
    public Object internalServerException;
    public PredictResponse withInternalServerException(Object internalServerException) {
        this.internalServerException = internalServerException;
        return this;
    }
    
    /**
     * InvalidInputException
     */
    
    public Object invalidInputException;
    public PredictResponse withInvalidInputException(Object invalidInputException) {
        this.invalidInputException = invalidInputException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;
    public PredictResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.PredictOutput predictOutput;
    public PredictResponse withPredictOutput(org.openapis.openapi.models.shared.PredictOutput predictOutput) {
        this.predictOutput = predictOutput;
        return this;
    }
    
    /**
     * PredictorNotMountedException
     */
    
    public Object predictorNotMountedException;
    public PredictResponse withPredictorNotMountedException(Object predictorNotMountedException) {
        this.predictorNotMountedException = predictorNotMountedException;
        return this;
    }
    
    
    public Integer statusCode;
    public PredictResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public PredictResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;
    public PredictResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
}
