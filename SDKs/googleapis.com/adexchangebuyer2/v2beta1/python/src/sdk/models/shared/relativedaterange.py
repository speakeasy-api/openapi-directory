"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RelativeDateRange:
    r"""A relative date range, specified by an offset and a duration. The supported range of dates begins 30 days before today and ends today, for example, the limits for these values are: offset_days >= 0 duration_days >= 1 offset_days + duration_days <= 30"""
    
    duration_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('durationDays'), 'exclude': lambda f: f is None }})
    r"""The number of days in the requested date range, for example, for a range spanning today: 1. For a range spanning the last 7 days: 7."""  
    offset_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offsetDays'), 'exclude': lambda f: f is None }})
    r"""The end date of the filter set, specified as the number of days before today, for example, for a range where the last date is today: 0."""  
    