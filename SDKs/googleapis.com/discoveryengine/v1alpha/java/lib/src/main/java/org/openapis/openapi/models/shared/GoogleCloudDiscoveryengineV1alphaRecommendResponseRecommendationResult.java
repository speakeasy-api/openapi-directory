/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDiscoveryengineV1alphaRecommendResponseRecommendationResult - RecommendationResult represents a generic recommendation result with associated metadata.
 */
public class GoogleCloudDiscoveryengineV1alphaRecommendResponseRecommendationResult {
    /**
     * Document captures all raw metadata information of items to be recommended or searched.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("document")
    public GoogleCloudDiscoveryengineV1alphaDocument document;
    public GoogleCloudDiscoveryengineV1alphaRecommendResponseRecommendationResult withDocument(GoogleCloudDiscoveryengineV1alphaDocument document) {
        this.document = document;
        return this;
    }
    
    /**
     * Resource ID of the recommended Document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GoogleCloudDiscoveryengineV1alphaRecommendResponseRecommendationResult withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Additional Document metadata / annotations. Possible values: * `score`: Recommendation score in double value. Is set if `returnScore` is set to true in RecommendRequest.params.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, Object> metadata;
    public GoogleCloudDiscoveryengineV1alphaRecommendResponseRecommendationResult withMetadata(java.util.Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }
    
}
