// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UploadFileAsMultipartPublic1RequestBodyFile struct {
	Content []byte `multipartForm:"content"`
	File    string `multipartForm:"name=file"`
}

type UploadFileAsMultipartPublic1RequestBody struct {
	// File
	File UploadFileAsMultipartPublic1RequestBodyFile `multipartForm:"file"`
}

// UploadFileAsMultipartPublic1XSdsDateFormatEnum - Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
type UploadFileAsMultipartPublic1XSdsDateFormatEnum string

const (
	UploadFileAsMultipartPublic1XSdsDateFormatEnumUtc    UploadFileAsMultipartPublic1XSdsDateFormatEnum = "UTC"
	UploadFileAsMultipartPublic1XSdsDateFormatEnumLocal  UploadFileAsMultipartPublic1XSdsDateFormatEnum = "LOCAL"
	UploadFileAsMultipartPublic1XSdsDateFormatEnumOffset UploadFileAsMultipartPublic1XSdsDateFormatEnum = "OFFSET"
	UploadFileAsMultipartPublic1XSdsDateFormatEnumEpoch  UploadFileAsMultipartPublic1XSdsDateFormatEnum = "EPOCH"
	UploadFileAsMultipartPublic1XSdsDateFormatEnumLeet   UploadFileAsMultipartPublic1XSdsDateFormatEnum = "LEET"
)

func (e *UploadFileAsMultipartPublic1XSdsDateFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UTC":
		fallthrough
	case "LOCAL":
		fallthrough
	case "OFFSET":
		fallthrough
	case "EPOCH":
		fallthrough
	case "LEET":
		*e = UploadFileAsMultipartPublic1XSdsDateFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UploadFileAsMultipartPublic1XSdsDateFormatEnum: %s", s)
	}
}

type UploadFileAsMultipartPublic1Request struct {
	// Content-Range
	//
	// e.g. `bytes 0-999/3980`
	ContentRange *string                                  `header:"style=simple,explode=false,name=Content-Range"`
	RequestBody  *UploadFileAsMultipartPublic1RequestBody `request:"mediaType=multipart/form-data"`
	// Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
	XSdsDateFormat *UploadFileAsMultipartPublic1XSdsDateFormatEnum `header:"style=simple,explode=false,name=X-Sds-Date-Format"`
	// Access key
	AccessKey string `pathParam:"style=simple,explode=false,name=access_key"`
	// Upload channel ID
	UploadID string `pathParam:"style=simple,explode=false,name=upload_id"`
}

type UploadFileAsMultipartPublic1Response struct {
	// OK
	ChunkUploadResponse *shared.ChunkUploadResponse
	ContentType         string
	// Bad Request
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
}
