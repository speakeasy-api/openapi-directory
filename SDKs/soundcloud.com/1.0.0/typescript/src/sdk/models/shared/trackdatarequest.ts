/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

export class TrackDataRequestOnlyForUploadingForPROUsers extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "multipart_form, name=Only for uploading, for PRO users",
  })
  onlyForUploadingForPROUsers: string;

  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;
}

export class TrackDataRequestOnlyForUploading extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, name=Only for uploading" })
  onlyForUploading: string;

  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;
}

/**
 * who can embed this track "all", "me", or "none"
 */
export enum TrackDataRequestTrackEmbeddableByEnum {
  All = "all",
  Me = "me",
  None = "none",
}

/**
 * Possible values: no-rights-reserved, all-rights-reserved, cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa
 */
export enum TrackDataRequestTrackLicenseEnum {
  NoRightsReserved = "no-rights-reserved",
  AllRightsReserved = "all-rights-reserved",
  CcBy = "cc-by",
  CcByNc = "cc-by-nc",
  CcByNd = "cc-by-nd",
  CcBySa = "cc-by-sa",
  CcByNcNd = "cc-by-nc-nd",
  CcByNcSa = "cc-by-nc-sa",
}

export enum TrackDataRequestTrackSharingEnum {
  Public = "public",
  Private = "private",
}

/**
 * Track payload
 */
export class TrackDataRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  trackArtworkData?: TrackDataRequestOnlyForUploadingForPROUsers;

  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  trackAssetData?: TrackDataRequestOnlyForUploading;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[commentable]" })
  trackCommentable?: boolean;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[description]" })
  trackDescription?: string;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[downloadable]" })
  trackDownloadable?: boolean;

  /**
   * who can embed this track "all", "me", or "none"
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=track[embeddable_by]" })
  trackEmbeddableBy?: TrackDataRequestTrackEmbeddableByEnum;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[genre]" })
  trackGenre?: string;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[isrc]" })
  trackIsrc?: string;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[label_name]" })
  trackLabelName?: string;

  /**
   * Possible values: no-rights-reserved, all-rights-reserved, cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=track[license]" })
  trackLicense?: TrackDataRequestTrackLicenseEnum;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[permalink]" })
  trackPermalink?: string;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[purchase_url]" })
  trackPurchaseUrl?: string;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[release]" })
  trackRelease?: string;

  /**
   * string, formatted as yyyy-mm-dd, representing release date
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=track[release_date]" })
  trackReleaseDate?: string;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[sharing]" })
  trackSharing?: TrackDataRequestTrackSharingEnum;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[streamable]" })
  trackStreamable?: boolean;

  /**
   * The tag_list property contains a list of tags separated by spaces. Multiword tags are quoted in double quotes. We also support machine tags that follow the pattern NAMESPACE:KEY=VALUE. For example: geo:lat=43.555 camel:size=medium “machine:tag=with space” Machine tags are not revealed to the user on the track pages.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=track[tag_list]" })
  trackTagList?: string;

  @SpeakeasyMetadata({ data: "multipart_form, name=track[title]" })
  trackTitle?: string;
}
