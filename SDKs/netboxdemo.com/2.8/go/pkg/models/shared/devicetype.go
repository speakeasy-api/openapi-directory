// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

type DeviceTypeSubdeviceRoleLabelEnum string

const (
	DeviceTypeSubdeviceRoleLabelEnumParent DeviceTypeSubdeviceRoleLabelEnum = "Parent"
	DeviceTypeSubdeviceRoleLabelEnumChild  DeviceTypeSubdeviceRoleLabelEnum = "Child"
)

func (e *DeviceTypeSubdeviceRoleLabelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Parent":
		fallthrough
	case "Child":
		*e = DeviceTypeSubdeviceRoleLabelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceTypeSubdeviceRoleLabelEnum: %s", s)
	}
}

type DeviceTypeSubdeviceRoleValueEnum string

const (
	DeviceTypeSubdeviceRoleValueEnumParent DeviceTypeSubdeviceRoleValueEnum = "parent"
	DeviceTypeSubdeviceRoleValueEnumChild  DeviceTypeSubdeviceRoleValueEnum = "child"
)

func (e *DeviceTypeSubdeviceRoleValueEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "parent":
		fallthrough
	case "child":
		*e = DeviceTypeSubdeviceRoleValueEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceTypeSubdeviceRoleValueEnum: %s", s)
	}
}

type DeviceTypeSubdeviceRole struct {
	Label DeviceTypeSubdeviceRoleLabelEnum `json:"label"`
	Value DeviceTypeSubdeviceRoleValueEnum `json:"value"`
}

type DeviceType struct {
	Comments     *string                `json:"comments,omitempty"`
	Created      *types.Date            `json:"created,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	DeviceCount  *int64                 `json:"device_count,omitempty"`
	DisplayName  *string                `json:"display_name,omitempty"`
	FrontImage   *string                `json:"front_image,omitempty"`
	ID           *int64                 `json:"id,omitempty"`
	// Device consumes both front and rear rack faces
	IsFullDepth  *bool              `json:"is_full_depth,omitempty"`
	LastUpdated  *time.Time         `json:"last_updated,omitempty"`
	Manufacturer NestedManufacturer `json:"manufacturer"`
	Model        string             `json:"model"`
	// Discrete part number (optional)
	PartNumber    *string                  `json:"part_number,omitempty"`
	RearImage     *string                  `json:"rear_image,omitempty"`
	Slug          string                   `json:"slug"`
	SubdeviceRole *DeviceTypeSubdeviceRole `json:"subdevice_role,omitempty"`
	Tags          []string                 `json:"tags,omitempty"`
	UHeight       *int64                   `json:"u_height,omitempty"`
}
