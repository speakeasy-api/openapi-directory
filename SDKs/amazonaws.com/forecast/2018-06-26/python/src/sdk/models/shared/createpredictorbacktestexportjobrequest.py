"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datadestination as shared_datadestination
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreatePredictorBacktestExportJobRequest:
    
    destination: shared_datadestination.DataDestination = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Destination') }})
    r"""The destination for an export job. Provide an S3 path, an Identity and Access Management (IAM) role that allows Amazon Forecast to access the location, and an Key Management Service (KMS) key (optional)."""  
    predictor_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PredictorArn') }})  
    predictor_backtest_export_job_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PredictorBacktestExportJobName') }})  
    format: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Format'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    