/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The list of classifiers and versions.
 */
export class APIClassifierOut extends SpeakeasyBase {
  /**
   * The classifier name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classifierName" })
  classifierName?: string;

  /**
   * True if the classifier is learning
   */
  @SpeakeasyMetadata()
  @Expose({ name: "learning" })
  learning?: boolean;

  /**
   * True if the classifier has finished the initial learning and calibrated probabilities (meanwhile, during initial learning, probabilities will be equal to -1)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "probabilityCalibrated" })
  probabilityCalibrated?: boolean;

  /**
   * True if the classifier is serving requests (has reached minimal learning, is not shutting down)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serving" })
  serving?: boolean;

  /**
   * True if the classifier is shutting down
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shuttingDown" })
  shuttingDown?: boolean;
}
