"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import transitiontoiarules_enum as shared_transitiontoiarules_enum
from ..shared import transitiontoprimarystorageclassrules_enum as shared_transitiontoprimarystorageclassrules_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LifecyclePolicy:
    r"""<p>Describes a policy used by EFS lifecycle management and EFS Intelligent-Tiering that specifies when to transition files into and out of the file system's Infrequent Access (IA) storage class. For more information, see <a href=\\"https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html\\">EFS Intelligent‚ÄêTiering and EFS Lifecycle Management</a>.</p> <note> <p>When using the <code>put-lifecycle-configuration</code> CLI command or the <code>PutLifecycleConfiguration</code> API action, Amazon EFS requires that each <code>LifecyclePolicy</code> object have only a single transition. This means that in a request body, <code>LifecyclePolicies</code> must be structured as an array of <code>LifecyclePolicy</code> objects, one object for each transition, <code>TransitionToIA</code>, <code>TransitionToPrimaryStorageClass</code>. For more information, see the request examples in <a>PutLifecycleConfiguration</a>.</p> </note>"""
    
    transition_to_ia: Optional[shared_transitiontoiarules_enum.TransitionToIARulesEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TransitionToIA'), 'exclude': lambda f: f is None }})  
    transition_to_primary_storage_class: Optional[shared_transitiontoprimarystorageclassrules_enum.TransitionToPrimaryStorageClassRulesEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TransitionToPrimaryStorageClass'), 'exclude': lambda f: f is None }})  
    