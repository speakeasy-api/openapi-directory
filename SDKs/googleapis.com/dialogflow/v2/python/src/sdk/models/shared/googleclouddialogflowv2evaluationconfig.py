"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2evaluationconfigsmartcomposeconfig as shared_googleclouddialogflowv2evaluationconfigsmartcomposeconfig
from ..shared import googleclouddialogflowv2evaluationconfigsmartreplyconfig as shared_googleclouddialogflowv2evaluationconfigsmartreplyconfig
from ..shared import googleclouddialogflowv2inputdataset as shared_googleclouddialogflowv2inputdataset
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2EvaluationConfig:
    r"""The configuration for model evaluation."""
    
    datasets: Optional[list[shared_googleclouddialogflowv2inputdataset.GoogleCloudDialogflowV2InputDataset]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datasets'), 'exclude': lambda f: f is None }})
    r"""Required. Datasets used for evaluation."""  
    smart_compose_config: Optional[shared_googleclouddialogflowv2evaluationconfigsmartcomposeconfig.GoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('smartComposeConfig'), 'exclude': lambda f: f is None }})
    r"""Smart compose specific configuration for evaluation job."""  
    smart_reply_config: Optional[shared_googleclouddialogflowv2evaluationconfigsmartreplyconfig.GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('smartReplyConfig'), 'exclude': lambda f: f is None }})
    r"""Smart reply specific configuration for evaluation job."""  
    