// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListReceiptRuleSetsActionEnum
type GETListReceiptRuleSetsActionEnum string

const (
	GETListReceiptRuleSetsActionEnumListReceiptRuleSets GETListReceiptRuleSetsActionEnum = "ListReceiptRuleSets"
)

func (e GETListReceiptRuleSetsActionEnum) ToPointer() *GETListReceiptRuleSetsActionEnum {
	return &e
}

func (e *GETListReceiptRuleSetsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListReceiptRuleSets":
		*e = GETListReceiptRuleSetsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListReceiptRuleSetsActionEnum: %v", v)
	}
}

// GETListReceiptRuleSetsVersionEnum
type GETListReceiptRuleSetsVersionEnum string

const (
	GETListReceiptRuleSetsVersionEnumTwoThousandAndTen1201 GETListReceiptRuleSetsVersionEnum = "2010-12-01"
)

func (e GETListReceiptRuleSetsVersionEnum) ToPointer() *GETListReceiptRuleSetsVersionEnum {
	return &e
}

func (e *GETListReceiptRuleSetsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETListReceiptRuleSetsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListReceiptRuleSetsVersionEnum: %v", v)
	}
}

type GETListReceiptRuleSetsRequest struct {
	Action GETListReceiptRuleSetsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A token returned from a previous call to <code>ListReceiptRuleSets</code> to indicate the position in the receipt rule set list.
	NextToken         *string                           `queryParam:"style=form,explode=true,name=NextToken"`
	Version           GETListReceiptRuleSetsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListReceiptRuleSetsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
