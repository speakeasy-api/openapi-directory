<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip
{
    /**
     * The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.
     * 
     * @var ?string $addressRequirements
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_requirements')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressRequirements = null;
    
    /**
     * Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.
     * 
     * @var ?bool $beta
     */
	#[\JMS\Serializer\Annotation\SerializedName('beta')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $beta = null;
    
    /**
     * The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoipCapabilities $capabilities
     */
	#[\JMS\Serializer\Annotation\SerializedName('capabilities')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoipCapabilities')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoipCapabilities $capabilities = null;
    
    /**
     * A formatted version of the phone number.
     * 
     * @var ?string $friendlyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('friendly_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $friendlyName = null;
    
    /**
     * The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.
     * 
     * @var ?string $isoCountry
     */
	#[\JMS\Serializer\Annotation\SerializedName('iso_country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $isoCountry = null;
    
    /**
     * The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.
     * 
     * @var ?string $lata
     */
	#[\JMS\Serializer\Annotation\SerializedName('lata')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lata = null;
    
    /**
     * The latitude of this phone number's location. Available for only phone numbers from the US and Canada.
     * 
     * @var ?float $latitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('latitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $latitude = null;
    
    /**
     * The locality or city of this phone number's location.
     * 
     * @var ?string $locality
     */
	#[\JMS\Serializer\Annotation\SerializedName('locality')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locality = null;
    
    /**
     * The longitude of this phone number's location. Available for only phone numbers from the US and Canada.
     * 
     * @var ?float $longitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('longitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $longitude = null;
    
    /**
     * The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
     * 
     * @var ?string $phoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('phone_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneNumber = null;
    
    /**
     * The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postal_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.
     * 
     * @var ?string $rateCenter
     */
	#[\JMS\Serializer\Annotation\SerializedName('rate_center')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rateCenter = null;
    
    /**
     * The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.
     * 
     * @var ?string $region
     */
	#[\JMS\Serializer\Annotation\SerializedName('region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $region = null;
    
	public function __construct()
	{
		$this->addressRequirements = null;
		$this->beta = null;
		$this->capabilities = null;
		$this->friendlyName = null;
		$this->isoCountry = null;
		$this->lata = null;
		$this->latitude = null;
		$this->locality = null;
		$this->longitude = null;
		$this->phoneNumber = null;
		$this->postalCode = null;
		$this->rateCenter = null;
		$this->region = null;
	}
}
