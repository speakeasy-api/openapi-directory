// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateServiceServerList = []string{
	"https://chat.twilio.com",
}

type UpdateServiceSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

// UpdateServiceUpdateServiceRequestWebhookMethodEnum - The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
type UpdateServiceUpdateServiceRequestWebhookMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhookMethodEnumHead   UpdateServiceUpdateServiceRequestWebhookMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhookMethodEnumGet    UpdateServiceUpdateServiceRequestWebhookMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhookMethodEnumPost   UpdateServiceUpdateServiceRequestWebhookMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhookMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhookMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhookMethodEnumPut    UpdateServiceUpdateServiceRequestWebhookMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhookMethodEnumDelete UpdateServiceUpdateServiceRequestWebhookMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhookMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhookMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhookMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhookMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhookMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum - The HTTP method to use when calling the `webhooks.on_channel_add.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum - The URL of the webhook to call in response to the `on_channel_added` event`.
type UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum - The HTTP method to use when calling the `webhooks.on_channel_destroy.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum - The HTTP method to use when calling the `webhooks.on_channel_destroyed.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum - The HTTP method to use when calling the `webhooks.on_channel_update.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum - The HTTP method to use when calling the `webhooks.on_channel_updated.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum - The HTTP method to use when calling the `webhooks.on_member_add.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum - The HTTP method to use when calling the `webhooks.on_channel_updated.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum - The HTTP method to use when calling the `webhooks.on_member_remove.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum - The HTTP method to use when calling the `webhooks.on_member_removed.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum - The HTTP method to use when calling the `webhooks.on_message_remove.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum - The HTTP method to use when calling the `webhooks.on_message_removed.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum - The HTTP method to use when calling the `webhooks.on_message_send.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum - The URL of the webhook to call in response to the `on_message_sent` event`.
type UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum - The HTTP method to use when calling the `webhooks.on_message_update.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum: %v", v)
	}
}

// UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum - The HTTP method to use when calling the `webhooks.on_message_updated.url`.
type UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum string

const (
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnumHead   UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum = "HEAD"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnumGet    UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum = "GET"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnumPost   UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum = "POST"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnumPatch  UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum = "PATCH"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnumPut    UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum = "PUT"
	UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnumDelete UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum = "DELETE"
)

func (e UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum) ToPointer() *UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum {
	return &e
}

func (e *UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum: %v", v)
	}
}

type UpdateServiceUpdateServiceRequest struct {
	// DEPRECATED. The interval in seconds between consumption reports submission batches from client endpoints.
	ConsumptionReportInterval *int64 `form:"name=ConsumptionReportInterval"`
	// The channel role assigned to a channel creator when they join a new channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
	DefaultChannelCreatorRoleSid *string `form:"name=DefaultChannelCreatorRoleSid"`
	// The channel role assigned to users when they are added to a channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
	DefaultChannelRoleSid *string `form:"name=DefaultChannelRoleSid"`
	// The service role assigned to users when they are added to the service. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
	DefaultServiceRoleSid *string `form:"name=DefaultServiceRoleSid"`
	// A descriptive string that you create to describe the resource. It can be up to 64 characters long.
	FriendlyName *string `form:"name=FriendlyName"`
	// The maximum number of Members that can be added to Channels within this Service. Can be up to 1,000.
	LimitsChannelMembers *int64 `form:"name=Limits.ChannelMembers"`
	// The maximum number of Channels Users can be a Member of within this Service. Can be up to 1,000.
	LimitsUserChannels *int64 `form:"name=Limits.UserChannels"`
	// Whether to send a notification when a member is added to a channel. Can be: `true` or `false` and the default is `false`.
	NotificationsAddedToChannelEnabled *bool `form:"name=Notifications.AddedToChannel.Enabled"`
	// The template to use to create the notification text displayed when a member is added to a channel and `notifications.added_to_channel.enabled` is `true`.
	NotificationsAddedToChannelTemplate *string `form:"name=Notifications.AddedToChannel.Template"`
	// Whether to send a notification when a user is invited to a channel. Can be: `true` or `false` and the default is `false`.
	NotificationsInvitedToChannelEnabled *bool `form:"name=Notifications.InvitedToChannel.Enabled"`
	// The template to use to create the notification text displayed when a user is invited to a channel and `notifications.invited_to_channel.enabled` is `true`.
	NotificationsInvitedToChannelTemplate *string `form:"name=Notifications.InvitedToChannel.Template"`
	// Whether to send a notification when a new message is added to a channel. Can be: `true` or `false` and the default is `false`.
	NotificationsNewMessageEnabled *bool `form:"name=Notifications.NewMessage.Enabled"`
	// The template to use to create the notification text displayed when a new message is added to a channel and `notifications.new_message.enabled` is `true`.
	NotificationsNewMessageTemplate *string `form:"name=Notifications.NewMessage.Template"`
	// Whether to send a notification to a user when they are removed from a channel. Can be: `true` or `false` and the default is `false`.
	NotificationsRemovedFromChannelEnabled *bool `form:"name=Notifications.RemovedFromChannel.Enabled"`
	// The template to use to create the notification text displayed to a user when they are removed from a channel and `notifications.removed_from_channel.enabled` is `true`.
	NotificationsRemovedFromChannelTemplate *string `form:"name=Notifications.RemovedFromChannel.Template"`
	// The URL for post-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.
	PostWebhookURL *string `form:"name=PostWebhookUrl"`
	// The URL for pre-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.
	PreWebhookURL *string `form:"name=PreWebhookUrl"`
	// Whether to enable the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) for this Service instance. The default is `false`.
	ReachabilityEnabled *bool `form:"name=ReachabilityEnabled"`
	// Whether to enable the [Message Consumption Horizon](https://www.twilio.com/docs/chat/consumption-horizon) feature. The default is `true`.
	ReadStatusEnabled *bool `form:"name=ReadStatusEnabled"`
	// How long in seconds after a `started typing` event until clients should assume that user is no longer typing, even if no `ended typing` message was received.  The default is 5 seconds.
	TypingIndicatorTimeout *int64 `form:"name=TypingIndicatorTimeout"`
	// The list of WebHook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
	WebhookFilters []string `form:"name=WebhookFilters"`
	// The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
	WebhookMethod *UpdateServiceUpdateServiceRequestWebhookMethodEnum `form:"name=WebhookMethod"`
	// The HTTP method to use when calling the `webhooks.on_channel_add.url`.
	WebhooksOnChannelAddMethod *UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum `form:"name=Webhooks.OnChannelAdd.Method"`
	// The URL of the webhook to call in response to the `on_channel_add` event using the `webhooks.on_channel_add.method` HTTP method.
	WebhooksOnChannelAddURL *string `form:"name=Webhooks.OnChannelAdd.Url"`
	// The URL of the webhook to call in response to the `on_channel_added` event`.
	WebhooksOnChannelAddedMethod *UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum `form:"name=Webhooks.OnChannelAdded.Method"`
	// The URL of the webhook to call in response to the `on_channel_added` event using the `webhooks.on_channel_added.method` HTTP method.
	WebhooksOnChannelAddedURL *string `form:"name=Webhooks.OnChannelAdded.Url"`
	// The HTTP method to use when calling the `webhooks.on_channel_destroy.url`.
	WebhooksOnChannelDestroyMethod *UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum `form:"name=Webhooks.OnChannelDestroy.Method"`
	// The URL of the webhook to call in response to the `on_channel_destroy` event using the `webhooks.on_channel_destroy.method` HTTP method.
	WebhooksOnChannelDestroyURL *string `form:"name=Webhooks.OnChannelDestroy.Url"`
	// The HTTP method to use when calling the `webhooks.on_channel_destroyed.url`.
	WebhooksOnChannelDestroyedMethod *UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum `form:"name=Webhooks.OnChannelDestroyed.Method"`
	// The URL of the webhook to call in response to the `on_channel_added` event using the `webhooks.on_channel_destroyed.method` HTTP method.
	WebhooksOnChannelDestroyedURL *string `form:"name=Webhooks.OnChannelDestroyed.Url"`
	// The HTTP method to use when calling the `webhooks.on_channel_update.url`.
	WebhooksOnChannelUpdateMethod *UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum `form:"name=Webhooks.OnChannelUpdate.Method"`
	// The URL of the webhook to call in response to the `on_channel_update` event using the `webhooks.on_channel_update.method` HTTP method.
	WebhooksOnChannelUpdateURL *string `form:"name=Webhooks.OnChannelUpdate.Url"`
	// The HTTP method to use when calling the `webhooks.on_channel_updated.url`.
	WebhooksOnChannelUpdatedMethod *UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum `form:"name=Webhooks.OnChannelUpdated.Method"`
	// The URL of the webhook to call in response to the `on_channel_updated` event using the `webhooks.on_channel_updated.method` HTTP method.
	WebhooksOnChannelUpdatedURL *string `form:"name=Webhooks.OnChannelUpdated.Url"`
	// The HTTP method to use when calling the `webhooks.on_member_add.url`.
	WebhooksOnMemberAddMethod *UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum `form:"name=Webhooks.OnMemberAdd.Method"`
	// The URL of the webhook to call in response to the `on_member_add` event using the `webhooks.on_member_add.method` HTTP method.
	WebhooksOnMemberAddURL *string `form:"name=Webhooks.OnMemberAdd.Url"`
	// The HTTP method to use when calling the `webhooks.on_channel_updated.url`.
	WebhooksOnMemberAddedMethod *UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum `form:"name=Webhooks.OnMemberAdded.Method"`
	// The URL of the webhook to call in response to the `on_channel_updated` event using the `webhooks.on_channel_updated.method` HTTP method.
	WebhooksOnMemberAddedURL *string `form:"name=Webhooks.OnMemberAdded.Url"`
	// The HTTP method to use when calling the `webhooks.on_member_remove.url`.
	WebhooksOnMemberRemoveMethod *UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum `form:"name=Webhooks.OnMemberRemove.Method"`
	// The URL of the webhook to call in response to the `on_member_remove` event using the `webhooks.on_member_remove.method` HTTP method.
	WebhooksOnMemberRemoveURL *string `form:"name=Webhooks.OnMemberRemove.Url"`
	// The HTTP method to use when calling the `webhooks.on_member_removed.url`.
	WebhooksOnMemberRemovedMethod *UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum `form:"name=Webhooks.OnMemberRemoved.Method"`
	// The URL of the webhook to call in response to the `on_member_removed` event using the `webhooks.on_member_removed.method` HTTP method.
	WebhooksOnMemberRemovedURL *string `form:"name=Webhooks.OnMemberRemoved.Url"`
	// The HTTP method to use when calling the `webhooks.on_message_remove.url`.
	WebhooksOnMessageRemoveMethod *UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum `form:"name=Webhooks.OnMessageRemove.Method"`
	// The URL of the webhook to call in response to the `on_message_remove` event using the `webhooks.on_message_remove.method` HTTP method.
	WebhooksOnMessageRemoveURL *string `form:"name=Webhooks.OnMessageRemove.Url"`
	// The HTTP method to use when calling the `webhooks.on_message_removed.url`.
	WebhooksOnMessageRemovedMethod *UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum `form:"name=Webhooks.OnMessageRemoved.Method"`
	// The URL of the webhook to call in response to the `on_message_removed` event using the `webhooks.on_message_removed.method` HTTP method.
	WebhooksOnMessageRemovedURL *string `form:"name=Webhooks.OnMessageRemoved.Url"`
	// The HTTP method to use when calling the `webhooks.on_message_send.url`.
	WebhooksOnMessageSendMethod *UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum `form:"name=Webhooks.OnMessageSend.Method"`
	// The URL of the webhook to call in response to the `on_message_send` event using the `webhooks.on_message_send.method` HTTP method.
	WebhooksOnMessageSendURL *string `form:"name=Webhooks.OnMessageSend.Url"`
	// The URL of the webhook to call in response to the `on_message_sent` event`.
	WebhooksOnMessageSentMethod *UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum `form:"name=Webhooks.OnMessageSent.Method"`
	// The URL of the webhook to call in response to the `on_message_sent` event using the `webhooks.on_message_sent.method` HTTP method.
	WebhooksOnMessageSentURL *string `form:"name=Webhooks.OnMessageSent.Url"`
	// The HTTP method to use when calling the `webhooks.on_message_update.url`.
	WebhooksOnMessageUpdateMethod *UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum `form:"name=Webhooks.OnMessageUpdate.Method"`
	// The URL of the webhook to call in response to the `on_message_update` event using the `webhooks.on_message_update.method` HTTP method.
	WebhooksOnMessageUpdateURL *string `form:"name=Webhooks.OnMessageUpdate.Url"`
	// The HTTP method to use when calling the `webhooks.on_message_updated.url`.
	WebhooksOnMessageUpdatedMethod *UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum `form:"name=Webhooks.OnMessageUpdated.Method"`
	// The URL of the webhook to call in response to the `on_message_updated` event using the `webhooks.on_message_updated.method` HTTP method.
	WebhooksOnMessageUpdatedURL *string `form:"name=Webhooks.OnMessageUpdated.Url"`
}

type UpdateServiceRequest struct {
	RequestBody *UpdateServiceUpdateServiceRequest `request:"mediaType=application/x-www-form-urlencoded"`
	// The Twilio-provided string that uniquely identifies the Service resource to update.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

type UpdateServiceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ChatV1Service *shared.ChatV1Service
}
