// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CriticalityEnum string

const (
	CriticalityEnumPreferred CriticalityEnum = "PREFERRED"
	CriticalityEnumRemoved   CriticalityEnum = "REMOVED"
	CriticalityEnumRequired  CriticalityEnum = "REQUIRED"
)

func (e CriticalityEnum) ToPointer() *CriticalityEnum {
	return &e
}

func (e *CriticalityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PREFERRED":
		fallthrough
	case "REMOVED":
		fallthrough
	case "REQUIRED":
		*e = CriticalityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CriticalityEnum: %v", v)
	}
}
