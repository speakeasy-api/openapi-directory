"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sourceposition as shared_sourceposition
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VisitedExpression:
    r"""Store the position and access outcome for an expression visited in rules."""
    
    source_position: Optional[shared_sourceposition.SourcePosition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourcePosition'), 'exclude': lambda f: f is None }})
    r"""Position in the `Source` content including its line, column number, and an index of the `File` in the `Source` message. Used for debug purposes."""  
    value: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The evaluated value for the visited expression, e.g. true/false"""  
    