"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import servicemeshanalysismessagebase as shared_servicemeshanalysismessagebase
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ServiceMeshAnalysisMessage:
    r"""AnalysisMessage is a single message produced by an analyzer, and it used to communicate to the end user about the state of their Service Mesh configuration."""
    
    args: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('args'), 'exclude': lambda f: f is None }})
    r"""A UI can combine these args with a template (based on message_base.type) to produce an internationalized message."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A human readable description of what the error means. It is suitable for non-internationalize display purposes."""  
    message_base: Optional[shared_servicemeshanalysismessagebase.ServiceMeshAnalysisMessageBase] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messageBase'), 'exclude': lambda f: f is None }})
    r"""AnalysisMessageBase describes some common information that is needed for all messages."""  
    resource_paths: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourcePaths'), 'exclude': lambda f: f is None }})
    r"""A list of strings specifying the resource identifiers that were the cause of message generation. A \\"path\\" here may be: * MEMBERSHIP_ID if the cause is a specific member cluster * MEMBERSHIP_ID/(NAMESPACE\/)?RESOURCETYPE/NAME if the cause is a resource in a cluster"""  
    