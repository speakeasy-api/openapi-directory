/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class DeleteLicenseTemplateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class DeleteLicenseTemplateRequest extends SpeakeasyBase {
  /**
   * Force object deletion and all descendants.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=forceCascade",
  })
  forceCascade?: boolean;

  /**
   * Unique number (across all Products of a Vendor) that identifies the License Template.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=licenseTemplateNumber",
  })
  licenseTemplateNumber: string;
}

export class DeleteLicenseTemplateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful request
   */
  @SpeakeasyMetadata()
  netlicensing?: shared.Netlicensing;
}
