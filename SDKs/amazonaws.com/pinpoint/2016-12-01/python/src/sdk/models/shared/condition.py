"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import operator_enum as shared_operator_enum
from ..shared import simplecondition as shared_simplecondition
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Condition:
    r"""Specifies the conditions to evaluate for an activity in a journey, and how to evaluate those conditions."""
    
    conditions: Optional[list[shared_simplecondition.SimpleCondition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Conditions'), 'exclude': lambda f: f is None }})  
    operator: Optional[shared_operator_enum.OperatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Operator'), 'exclude': lambda f: f is None }})  
    