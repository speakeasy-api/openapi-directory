/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetAllBankAccountsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

export class GetAllBankAccountsRequest extends SpeakeasyBase {
  /**
   * Valid Investor Id
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=investor_id",
  })
  investorId?: string;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class GetAllBankAccounts500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class GetAllBankAccounts429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Current status of the original request
 */
export enum GetAllBankAccounts409ApplicationJSONStatusEnum {
  Processing = "PROCESSING",
  Complete = "COMPLETE",
}

/**
 * Duplicate request
 */
export class GetAllBankAccounts409ApplicationJSON extends SpeakeasyBase {
  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * Stringified original response body if status is `COMPLETE`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: Record<string, any>;

  /**
   * Current status of the original request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: GetAllBankAccounts409ApplicationJSONStatusEnum;
}

/**
 * The specified resource was not found
 */
export class GetAllBankAccounts404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class GetAllBankAccounts403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class GetAllBankAccounts401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class GetAllBankAccounts400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * If not populated, will be defaulted to inactive
 */
export enum GetAllBankAccounts200ApplicationJSONBankAccountsAccountStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

/**
 * Only one account should be the default
 */
export enum GetAllBankAccounts200ApplicationJSONBankAccountsDefaultAccountEnum {
  Yes = "yes",
  No = "no",
}

export class GetAllBankAccounts200ApplicationJSONBankAccounts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "account_name" })
  accountName: string;

  /**
   * If not populated, will be defaulted to inactive
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_status" })
  accountStatus?: GetAllBankAccounts200ApplicationJSONBankAccountsAccountStatusEnum;

  /**
   * system generated id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bank_account_id" })
  bankAccountId?: string;

  /**
   * Unique for the investor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bank_account_number" })
  bankAccountNumber: string;

  @SpeakeasyMetadata()
  @Expose({ name: "building_society_roll_number" })
  buildingSocietyRollNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * Only one account should be the default
   */
  @SpeakeasyMetadata()
  @Expose({ name: "default_account" })
  defaultAccount: GetAllBankAccounts200ApplicationJSONBankAccountsDefaultAccountEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "investor_id" })
  investorId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reference_version" })
  referenceVersion?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sort_code" })
  sortCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

/**
 * Array of bank accounts
 */
export class GetAllBankAccounts200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetAllBankAccounts200ApplicationJSONBankAccounts,
  })
  @Expose({ name: "bankAccounts" })
  @Type(() => GetAllBankAccounts200ApplicationJSONBankAccounts)
  bankAccounts?: GetAllBankAccounts200ApplicationJSONBankAccounts[];
}

export class GetAllBankAccountsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success
   */
  @SpeakeasyMetadata()
  getAllBankAccounts200ApplicationJSONObject?: GetAllBankAccounts200ApplicationJSON;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  getAllBankAccounts400ApplicationJSONObject?: GetAllBankAccounts400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  getAllBankAccounts401ApplicationJSONObject?: GetAllBankAccounts401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  getAllBankAccounts403ApplicationJSONObject?: GetAllBankAccounts403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  getAllBankAccounts404ApplicationJSONObject?: GetAllBankAccounts404ApplicationJSON;

  /**
   * Duplicate request
   */
  @SpeakeasyMetadata()
  getAllBankAccounts409ApplicationJSONObject?: GetAllBankAccounts409ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  getAllBankAccounts429ApplicationJSONObject?: GetAllBankAccounts429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  getAllBankAccounts500ApplicationJSONObject?: GetAllBankAccounts500ApplicationJSON;
}
