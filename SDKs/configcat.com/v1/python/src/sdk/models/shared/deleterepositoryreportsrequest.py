"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeleteRepositoryReportsRequest:
    
    config_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configId') }})
    r"""The Config's identifier from where the reports should be deleted."""  
    repository: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repository') }})
    r"""The source control repository which's reports should be deleted."""  
    branch: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('branch'), 'exclude': lambda f: f is None }})
    r"""If it's set, only this branch's reports belonging to the given repository will be deleted."""  
    setting_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settingId'), 'exclude': lambda f: f is None }})
    r"""If it's set, only this setting's reports belonging to the given repository will be deleted."""  
    