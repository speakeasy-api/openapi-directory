// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type CardAbilities struct {
	Effect *string `json:"effect,omitempty"`
	Name   *string `json:"name,omitempty"`
	Type   *string `json:"type,omitempty"`
}

type CardAttacks struct {
	Cost   []string `json:"cost,omitempty"`
	Damage *float64 `json:"damage,omitempty"`
	Effect *string  `json:"effect,omitempty"`
	Name   string   `json:"name"`
}

type CardItem struct {
	Effect string `json:"effect"`
	Name   string `json:"name"`
}

type CardLegal struct {
	Expanded *bool `json:"expanded,omitempty"`
	Standard *bool `json:"standard,omitempty"`
}

type CardVariants struct {
	FirstEdition bool `json:"firstEdition"`
	Holo         bool `json:"holo"`
	Normal       bool `json:"normal"`
	Reverse      bool `json:"reverse"`
	WPromo       bool `json:"wPromo"`
}

// Card - successful operation
type Card struct {
	Abilities      []CardAbilities `json:"abilities,omitempty"`
	Attacks        []CardAttacks   `json:"attacks,omitempty"`
	Category       string          `json:"category"`
	Description    *string         `json:"description,omitempty"`
	DexID          []float64       `json:"dexId,omitempty"`
	EnergyType     *string         `json:"energyType,omitempty"`
	EvolveFrom     *string         `json:"evolveFrom,omitempty"`
	Hp             *float64        `json:"hp,omitempty"`
	ID             string          `json:"id"`
	Illustrator    *string         `json:"illustrator,omitempty"`
	Image          *string         `json:"image,omitempty"`
	Item           *CardItem       `json:"item,omitempty"`
	Legal          CardLegal       `json:"legal"`
	Level          *float64        `json:"level,omitempty"`
	LocalID        string          `json:"localId"`
	Name           string          `json:"name"`
	Rarity         string          `json:"rarity"`
	RegulationMark *string         `json:"regulationMark,omitempty"`
	Resistances    [][]WeakRes     `json:"resistances,omitempty"`
	Retreat        *float64        `json:"retreat,omitempty"`
	Set            SetResume       `json:"set"`
	Stage          *string         `json:"stage,omitempty"`
	Suffix         *string         `json:"suffix,omitempty"`
	TrainerType    *string         `json:"trainerType,omitempty"`
	Types          []string        `json:"types,omitempty"`
	Variants       *CardVariants   `json:"variants,omitempty"`
	Weaknesses     [][]WeakRes     `json:"weaknesses,omitempty"`
}
