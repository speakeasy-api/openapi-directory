/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccessReview } from "./accessreview";
import { GoogleCloudSecuritycenterV1Binding } from "./googlecloudsecuritycenterv1binding";
import { Node } from "./node";
import { NodePool } from "./nodepool";
import { Pod } from "./pod";
import { Role } from "./role";
import { Expose, Type } from "class-transformer";

/**
 * Kubernetes-related attributes.
 */
export class Kubernetes extends SpeakeasyBase {
  /**
   * Provides information on any Kubernetes access reviews (i.e. privilege checks) relevant to the finding.
   */
  @SpeakeasyMetadata({ elemType: AccessReview })
  @Expose({ name: "accessReviews" })
  @Type(() => AccessReview)
  accessReviews?: AccessReview[];

  /**
   * Provides Kubernetes role binding information for findings that involve RoleBindings or ClusterRoleBindings.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudSecuritycenterV1Binding })
  @Expose({ name: "bindings" })
  @Type(() => GoogleCloudSecuritycenterV1Binding)
  bindings?: GoogleCloudSecuritycenterV1Binding[];

  /**
   * GKE Node Pools associated with the finding. This field will contain NodePool information for each Node, when it is available.
   */
  @SpeakeasyMetadata({ elemType: NodePool })
  @Expose({ name: "nodePools" })
  @Type(() => NodePool)
  nodePools?: NodePool[];

  /**
   * Provides Kubernetes Node information.
   */
  @SpeakeasyMetadata({ elemType: Node })
  @Expose({ name: "nodes" })
  @Type(() => Node)
  nodes?: Node[];

  /**
   * Kubernetes Pods associated with the finding. This field will contain Pod records for each container that is owned by a Pod.
   */
  @SpeakeasyMetadata({ elemType: Pod })
  @Expose({ name: "pods" })
  @Type(() => Pod)
  pods?: Pod[];

  /**
   * Provides Kubernetes role information for findings that involve Roles or ClusterRoles.
   */
  @SpeakeasyMetadata({ elemType: Role })
  @Expose({ name: "roles" })
  @Type(() => Role)
  roles?: Role[];
}
