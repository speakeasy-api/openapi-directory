"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AdSizeTypeEnum(str, Enum):
    r"""The type of the ad slot size."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    PIXEL = 'PIXEL'
    INTERSTITIAL = 'INTERSTITIAL'
    NATIVE = 'NATIVE'
    FLUID = 'FLUID'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AdSize:
    r"""Represents size of a single ad slot, or a creative."""
    
    height: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('height'), 'exclude': lambda f: f is None }})
    r"""The height of the ad slot in pixels. This field will be present only when size type is `PIXEL`."""  
    type: Optional[AdSizeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the ad slot size."""  
    width: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width'), 'exclude': lambda f: f is None }})
    r"""The width of the ad slot in pixels. This field will be present only when size type is `PIXEL`."""  
    