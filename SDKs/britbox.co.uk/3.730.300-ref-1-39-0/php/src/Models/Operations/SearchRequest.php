<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class SearchRequest
{
    /**
     * The type of device the content is targeting.
     * 
     * @var ?string $device
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=device')]
    public ?string $device = null;
    
    /**
     * The set of opt in feature flags which cause breaking changes to responses.
     * 
     * 
     * While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
     * may need to evolve over this time.
     * 
     * These feature flags allow clients to select which response formats they expect and avoid breaking
     * clients as these formats evolve under the current major version.
     * 
     * ### Flags
     * 
     * - `all` - Enable all flags. Useful for testing. _Don't use in production_.
     * - `idp` - Dynamic item detail pages with schedulable rows.
     * - `ldp` - Dynamic list detail pages with schedulable rows.
     * - `hb` - Hubble formatted image urls.
     * - `rpt` - Updated resume point threshold logic.
     * - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
     * - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
     * - `cd` - Custom Destination support.
     * 
     * See the `feature-flags.md` for available flag details.
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FeatureFlagsEnum> $ff
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=ff')]
    public ?array $ff = null;
    
    /**
     * When this option is set, instead of all search result items being returned
     * 
     * in a single list, they will instead be returned under two lists. One for
     * movies and another for tv (shows + programs).
     * 
     * if the `cas` feature flag is set, a third `other` list will be
     * included containing `customAsset` results
     * 
     * Default is undefined meaning items will be returned in a single list.
     * 
     * The array of `people` results will always be separate from items.
     * 
     * 
     * @var ?bool $group
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=group')]
    public ?bool $group = null;
    
    /**
     * By default people, movies and tv (shows + programs) will be included
     * 
     * in the search results.
     * 
     * If the `cas` feature flag is set, "other" items (`customAsset`s) will
     * also be included by default
     * 
     * If you don't want all of these types you can specifiy the specific
     * includes you care about.
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\SearchIncludeEnum> $include
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=include')]
    public ?array $include = null;
    
    /**
     * Language code for the preferred language to be returned in the response.
     * 
     * 
     * Parameter value is case-insensitive and should be
     *   - a valid 2 letter language code without region such as en, de
     *   - or with region such as en_us, en_au
     * 
     * If undefined then defaults to 'en', unless the server has been configured
     * with a custom default.
     * 
     * See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
     * 
     * 
     * @var ?string $lang
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=lang')]
    public ?string $lang = null;
    
    /**
     * The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
     * 
     * @var ?string $maxRating
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_rating')]
    public ?string $maxRating = null;
    
    /**
     * The maximum number of results to return.
     * 
     * @var ?int $maxResults
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_results')]
    public ?int $maxResults = null;
    
    /**
     * The list of segments to filter the response by.
     * 
     * @var ?array<string> $segments
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=segments')]
    public ?array $segments = null;
    
    /**
     * The active subscription code.
     * 
     * @var ?string $sub
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sub')]
    public ?string $sub = null;
    
    /**
     * The search term to query.
     * 
     * @var string $term
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=term')]
    public string $term;
    
	public function __construct()
	{
		$this->device = null;
		$this->ff = null;
		$this->group = null;
		$this->include = null;
		$this->lang = null;
		$this->maxRating = null;
		$this->maxResults = null;
		$this->segments = null;
		$this->sub = null;
		$this->term = "";
	}
}
