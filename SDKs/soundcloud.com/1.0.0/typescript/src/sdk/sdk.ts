/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Likes } from "./likes";
import { Me } from "./me";
import { Miscellaneous } from "./miscellaneous";
import { Oauth } from "./oauth";
import { Playlists } from "./playlists";
import { Reposts } from "./reposts";
import { Search } from "./search";
import { Tracks } from "./tracks";
import { Users } from "./users";
import axios from "axios";
import { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://api.soundcloud.com"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

export class SDK {
  /**
   * Liking Tracks & Playlists.
   */
  public likes: Likes;
  /**
   * Own User Endpoints.
   */
  public me: Me;
  /**
   * Miscellaneous Endpoints.
   */
  public miscellaneous: Miscellaneous;
  /**
   * Authentication and Authorization Endpoints.
   */
  public oauth: Oauth;
  /**
   * Playlists Endpoints.
   */
  public playlists: Playlists;
  /**
   * Reposting Tracks & Playlists.
   */
  public reposts: Reposts;
  /**
   * Search Endpoints.
   */
  public search: Search;
  /**
   * Tracks Endpoints.
   */
  public tracks: Tracks;
  /**
   * SoundCloud Users Endpoints.
   */
  public users: Users;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.likes = new Likes(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.me = new Me(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.miscellaneous = new Miscellaneous(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.oauth = new Oauth(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.playlists = new Playlists(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.reposts = new Reposts(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.search = new Search(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.tracks = new Tracks(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.users = new Users(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
