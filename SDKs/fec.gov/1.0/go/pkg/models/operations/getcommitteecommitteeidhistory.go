// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetCommitteeCommitteeIDHistoryPathParams struct {
	// A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
	//
	CommitteeID string `pathParam:"style=simple,explode=false,name=committee_id"`
}

type GetCommitteeCommitteeIDHistoryDesignationEnum string

const (
	GetCommitteeCommitteeIDHistoryDesignationEnumUnknown GetCommitteeCommitteeIDHistoryDesignationEnum = ""
	GetCommitteeCommitteeIDHistoryDesignationEnumA       GetCommitteeCommitteeIDHistoryDesignationEnum = "A"
	GetCommitteeCommitteeIDHistoryDesignationEnumJ       GetCommitteeCommitteeIDHistoryDesignationEnum = "J"
	GetCommitteeCommitteeIDHistoryDesignationEnumP       GetCommitteeCommitteeIDHistoryDesignationEnum = "P"
	GetCommitteeCommitteeIDHistoryDesignationEnumU       GetCommitteeCommitteeIDHistoryDesignationEnum = "U"
	GetCommitteeCommitteeIDHistoryDesignationEnumB       GetCommitteeCommitteeIDHistoryDesignationEnum = "B"
	GetCommitteeCommitteeIDHistoryDesignationEnumD       GetCommitteeCommitteeIDHistoryDesignationEnum = "D"
)

func (e *GetCommitteeCommitteeIDHistoryDesignationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "":
		fallthrough
	case "A":
		fallthrough
	case "J":
		fallthrough
	case "P":
		fallthrough
	case "U":
		fallthrough
	case "B":
		fallthrough
	case "D":
		*e = GetCommitteeCommitteeIDHistoryDesignationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCommitteeCommitteeIDHistoryDesignationEnum: %s", s)
	}
}

type GetCommitteeCommitteeIDHistoryQueryParams struct {
	// API key for https://api.data.gov. Get one at https://api.data.gov/signup.
	//
	APIKey string `queryParam:"style=form,explode=true,name=api_key"`
	// The one-letter designation code of the organization:
	//          - A authorized by a candidate
	//          - J joint fundraising committee
	//          - P principal campaign committee of a candidate
	//          - U unauthorized
	//          - B lobbyist/registrant PAC
	//          - D leadership PAC
	//
	Designation []GetCommitteeCommitteeIDHistoryDesignationEnum `queryParam:"style=form,explode=true,name=designation"`
	// `True` indicates that full election period of a candidate.
	// `False` indicates that two year election cycle.
	ElectionFull *bool `queryParam:"style=form,explode=true,name=election_full"`
	// For paginating through results, starting at page 1
	Page *int `queryParam:"style=form,explode=true,name=page"`
	// The number of results returned per page. Defaults to 20.
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// Provide a field to sort by. Use `-` for descending order.
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Hide null values on sorted column(s).
	SortHideNull *bool `queryParam:"style=form,explode=true,name=sort_hide_null"`
	// Toggle that filters out all rows having sort column that is non-null
	SortNullOnly *bool `queryParam:"style=form,explode=true,name=sort_null_only"`
	// Toggle that sorts null values last
	SortNullsLast *bool `queryParam:"style=form,explode=true,name=sort_nulls_last"`
}

type GetCommitteeCommitteeIDHistoryRequest struct {
	PathParams  GetCommitteeCommitteeIDHistoryPathParams
	QueryParams GetCommitteeCommitteeIDHistoryQueryParams
}

type GetCommitteeCommitteeIDHistoryResponse struct {
	CommitteeHistoryProfilePage *shared.CommitteeHistoryProfilePage
	ContentType                 string
	StatusCode                  int
	RawResponse                 *http.Response
}
