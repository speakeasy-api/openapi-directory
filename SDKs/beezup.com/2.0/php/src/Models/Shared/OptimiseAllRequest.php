<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OptimiseAllRequest - Contains common filter parameters
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OptimiseAllRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('advancedFilters')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReportAdvancedFilters')]
    public ReportAdvancedFilters $advancedFilters;
    
	#[\JMS\Serializer\Annotation\SerializedName('analyticsProductColumnFilters')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AnalyticsProductColumnFilters')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AnalyticsProductColumnFilters $analyticsProductColumnFilters = null;
    
    /**
     * The begin date period you want to get the report. It's required only in case of custom period type !
     * 
     * @var \DateTime $beginPeriodUtcDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('beginPeriodUtcDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $beginPeriodUtcDate;
    
	#[\JMS\Serializer\Annotation\SerializedName('categoryFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BeezUPCommonCatalogCategoryFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BeezUPCommonCatalogCategoryFilter $categoryFilter = null;
    
    /**
     * The channel identifier
     * 
     * @var ?string $channelId
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $channelId = null;
    
    /**
     * The end date period you want to get the report. It's required only in case of custom period type !
     * 
     * @var \DateTime $endPeriodUtcDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('endPeriodUtcDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $endPeriodUtcDate;
    
    /**
     * Indicate on which indicator or value you want to make your formula
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PerformanceIndicatorTypeEnum $orderBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('orderBy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PerformanceIndicatorTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PerformanceIndicatorTypeEnum $orderBy = null;
    
    /**
     * Indicate which direction to order results by
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OrderByDirectionEnum $orderByDirection
     */
	#[\JMS\Serializer\Annotation\SerializedName('orderByDirection')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OrderByDirectionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderByDirectionEnum $orderByDirection = null;
    
    /**
     * $performanceIndicatorFilters
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PerformanceIndicatorFilter> $performanceIndicatorFilters
     */
	#[\JMS\Serializer\Annotation\SerializedName('performanceIndicatorFilters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PerformanceIndicatorFilter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $performanceIndicatorFilters = null;
    
    /**
     * Indicates the period type we want use for the report filter
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ReportFilterPeriodTypeEnum $periodType
     */
	#[\JMS\Serializer\Annotation\SerializedName('periodType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ReportFilterPeriodTypeEnum>')]
    public ReportFilterPeriodTypeEnum $periodType;
    
    /**
     * $productColumnsToDisplay
     * 
     * @var ?array<string> $productColumnsToDisplay
     */
	#[\JMS\Serializer\Annotation\SerializedName('productColumnsToDisplay')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $productColumnsToDisplay = null;
    
    /**
     * You can filter on the product state.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProductStateFilterEnum $productState
     */
	#[\JMS\Serializer\Annotation\SerializedName('productState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProductStateFilterEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProductStateFilterEnum $productState = null;
    
    /**
     * The report type
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ReportTypeEnum $reportType
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ReportTypeEnum>')]
    public ReportTypeEnum $reportType;
    
	public function __construct()
	{
		$this->advancedFilters = new \OpenAPI\OpenAPI\Models\Shared\ReportAdvancedFilters();
		$this->analyticsProductColumnFilters = null;
		$this->beginPeriodUtcDate = new \DateTime();
		$this->categoryFilter = null;
		$this->channelId = null;
		$this->endPeriodUtcDate = new \DateTime();
		$this->orderBy = null;
		$this->orderByDirection = null;
		$this->performanceIndicatorFilters = null;
		$this->periodType = \OpenAPI\OpenAPI\Models\Shared\ReportFilterPeriodTypeEnum::CUSTOM;
		$this->productColumnsToDisplay = null;
		$this->productState = null;
		$this->reportType = \OpenAPI\OpenAPI\Models\Shared\ReportTypeEnum::BY_CHANNEL;
	}
}
