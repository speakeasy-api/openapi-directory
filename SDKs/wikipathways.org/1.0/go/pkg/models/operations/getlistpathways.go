// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetListPathwaysFormatEnum
type GetListPathwaysFormatEnum string

const (
	GetListPathwaysFormatEnumJSON GetListPathwaysFormatEnum = "json"
	GetListPathwaysFormatEnumXML  GetListPathwaysFormatEnum = "xml"
	GetListPathwaysFormatEnumHTML GetListPathwaysFormatEnum = "html"
	GetListPathwaysFormatEnumDump GetListPathwaysFormatEnum = "dump"
	GetListPathwaysFormatEnumJpg  GetListPathwaysFormatEnum = "jpg"
	GetListPathwaysFormatEnumPdf  GetListPathwaysFormatEnum = "pdf"
)

func (e GetListPathwaysFormatEnum) ToPointer() *GetListPathwaysFormatEnum {
	return &e
}

func (e *GetListPathwaysFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetListPathwaysFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetListPathwaysFormatEnum: %v", v)
	}
}

type GetListPathwaysRequest struct {
	Format *GetListPathwaysFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The organism to filter by (optional)
	Organism *string `queryParam:"style=form,explode=true,name=organism"`
}

type GetListPathwaysResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
