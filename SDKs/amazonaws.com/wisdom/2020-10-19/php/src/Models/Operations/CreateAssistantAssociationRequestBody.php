<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateAssistantAssociationRequestBody
{
    /**
     * The data that is input into Wisdom as a result of the assistant association.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateAssistantAssociationRequestBodyAssociation $association
     */
	#[\JMS\Serializer\Annotation\SerializedName('association')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateAssistantAssociationRequestBodyAssociation')]
    public CreateAssistantAssociationRequestBodyAssociation $association;
    
    /**
     * The type of association.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateAssistantAssociationRequestBodyAssociationTypeEnum $associationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('associationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateAssistantAssociationRequestBodyAssociationTypeEnum>')]
    public CreateAssistantAssociationRequestBodyAssociationTypeEnum $associationType;
    
    /**
     * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
     * 
     * @var ?string $clientToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientToken = null;
    
    /**
     * The tags used to organize, track, or control access for this resource.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->association = new \OpenAPI\OpenAPI\Models\Operations\CreateAssistantAssociationRequestBodyAssociation();
		$this->associationType = \OpenAPI\OpenAPI\Models\Operations\CreateAssistantAssociationRequestBodyAssociationTypeEnum::KNOWLEDGE_BASE;
		$this->clientToken = null;
		$this->tags = null;
	}
}
