// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDecreaseNodeGroupsInGlobalReplicationGroupActionEnum
type GETDecreaseNodeGroupsInGlobalReplicationGroupActionEnum string

const (
	GETDecreaseNodeGroupsInGlobalReplicationGroupActionEnumDecreaseNodeGroupsInGlobalReplicationGroup GETDecreaseNodeGroupsInGlobalReplicationGroupActionEnum = "DecreaseNodeGroupsInGlobalReplicationGroup"
)

func (e *GETDecreaseNodeGroupsInGlobalReplicationGroupActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DecreaseNodeGroupsInGlobalReplicationGroup":
		*e = GETDecreaseNodeGroupsInGlobalReplicationGroupActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDecreaseNodeGroupsInGlobalReplicationGroupActionEnum: %s", s)
	}
}

// GETDecreaseNodeGroupsInGlobalReplicationGroupVersionEnum
type GETDecreaseNodeGroupsInGlobalReplicationGroupVersionEnum string

const (
	GETDecreaseNodeGroupsInGlobalReplicationGroupVersionEnumTwoThousandAndFifteen0202 GETDecreaseNodeGroupsInGlobalReplicationGroupVersionEnum = "2015-02-02"
)

func (e *GETDecreaseNodeGroupsInGlobalReplicationGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-02-02":
		*e = GETDecreaseNodeGroupsInGlobalReplicationGroupVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDecreaseNodeGroupsInGlobalReplicationGroupVersionEnum: %s", s)
	}
}

type GETDecreaseNodeGroupsInGlobalReplicationGroupQueryParams struct {
	Action GETDecreaseNodeGroupsInGlobalReplicationGroupActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Indicates that the shard reconfiguration process begins immediately. At present, the only permitted value for this parameter is true.
	ApplyImmediately bool `queryParam:"style=form,explode=true,name=ApplyImmediately"`
	// If the value of NodeGroupCount is less than the current number of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain is required. GlobalNodeGroupsToRemove is a list of NodeGroupIds to remove from the cluster. ElastiCache for Redis will attempt to remove all node groups listed by GlobalNodeGroupsToRemove from the cluster.
	GlobalNodeGroupsToRemove []string `queryParam:"style=form,explode=true,name=GlobalNodeGroupsToRemove"`
	// If the value of NodeGroupCount is less than the current number of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain is required. GlobalNodeGroupsToRetain is a list of NodeGroupIds to retain from the cluster. ElastiCache for Redis will attempt to retain all node groups listed by GlobalNodeGroupsToRetain from the cluster.
	GlobalNodeGroupsToRetain []string `queryParam:"style=form,explode=true,name=GlobalNodeGroupsToRetain"`
	// The name of the Global datastore
	GlobalReplicationGroupID string `queryParam:"style=form,explode=true,name=GlobalReplicationGroupId"`
	// The number of node groups (shards) that results from the modification of the shard configuration
	NodeGroupCount int64                                                    `queryParam:"style=form,explode=true,name=NodeGroupCount"`
	Version        GETDecreaseNodeGroupsInGlobalReplicationGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDecreaseNodeGroupsInGlobalReplicationGroupHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDecreaseNodeGroupsInGlobalReplicationGroupRequest struct {
	QueryParams GETDecreaseNodeGroupsInGlobalReplicationGroupQueryParams
	Headers     GETDecreaseNodeGroupsInGlobalReplicationGroupHeaders
}

type GETDecreaseNodeGroupsInGlobalReplicationGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
