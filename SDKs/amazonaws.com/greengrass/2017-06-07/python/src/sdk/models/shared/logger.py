"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import loggercomponent_enum as shared_loggercomponent_enum
from ..shared import loggerlevel_enum as shared_loggerlevel_enum
from ..shared import loggertype_enum as shared_loggertype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Logger:
    r"""Information about a logger"""
    
    component: shared_loggercomponent_enum.LoggerComponentEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Component') }})  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id') }})  
    level: shared_loggerlevel_enum.LoggerLevelEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Level') }})  
    type: shared_loggertype_enum.LoggerTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})  
    space: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Space'), 'exclude': lambda f: f is None }})  
    