/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ScoreRevisionCreation - A new created revision
 */
public class ScoreRevisionCreation {
    /**
     * Must be set to `true` if the revision was created automatically.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autosave")
    public Boolean autosave;
    public ScoreRevisionCreation withAutosave(Boolean autosave) {
        this.autosave = autosave;
        return this;
    }
    
    /**
     * The data of the score file. It must be a MusicXML 3 file (`vnd.recordare.musicxml` or `vnd.recordare.musicxml+xml`), a MIDI file (`audio/midi`) or a Flat.json (aka Adagio.json) file.
     * Binary payloads (`vnd.recordare.musicxml` and `audio/midi`) can be encoded in Base64, in this case the `dataEncoding` property must match the encoding used for the API request.
     * 
     */
    @JsonProperty("data")
    public String data;
    public ScoreRevisionCreation withData(String data) {
        this.data = data;
        return this;
    }
    
    /**
     * The optional encoding of the score data. This property must match the encoding used for the `data` property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataEncoding")
    public ScoreRevisionCreationDataEncodingEnum dataEncoding;
    public ScoreRevisionCreation withDataEncoding(ScoreRevisionCreationDataEncodingEnum dataEncoding) {
        this.dataEncoding = dataEncoding;
        return this;
    }
    
    /**
     * A description associated to the revision
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ScoreRevisionCreation withDescription(String description) {
        this.description = description;
        return this;
    }
    
}
