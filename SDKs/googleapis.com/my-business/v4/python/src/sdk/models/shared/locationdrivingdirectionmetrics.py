"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import topdirectionsources as shared_topdirectionsources
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LocationDrivingDirectionMetrics:
    r"""A location indexed with the regions that people usually come from. This is captured by counting how many driving-direction requests to this location are from each region."""
    
    location_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationName'), 'exclude': lambda f: f is None }})
    r"""The location resource name this metric value belongs to."""  
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeZone'), 'exclude': lambda f: f is None }})
    r"""Time zone (IANA timezone IDs, for example, 'Europe/London') of the location."""  
    top_direction_sources: Optional[list[shared_topdirectionsources.TopDirectionSources]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('topDirectionSources'), 'exclude': lambda f: f is None }})
    r"""Driving-direction requests by source region. By convention, these are sorted by count with at most 10 results."""  
    