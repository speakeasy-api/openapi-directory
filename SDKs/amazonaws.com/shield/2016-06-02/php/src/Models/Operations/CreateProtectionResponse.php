<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateProtectionResponse
{
	
    public string $contentType;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateProtectionResponse $createProtectionResponse
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\CreateProtectionResponse $createProtectionResponse = null;
    
    /**
     * InternalErrorException
     * 
     * @var mixed $internalErrorException
     */
	
    public mixed $internalErrorException = null;
    
    /**
     * InvalidOperationException
     * 
     * @var mixed $invalidOperationException
     */
	
    public mixed $invalidOperationException = null;
    
    /**
     * InvalidParameterException
     * 
     * @var mixed $invalidParameterException
     */
	
    public mixed $invalidParameterException = null;
    
    /**
     * InvalidResourceException
     * 
     * @var mixed $invalidResourceException
     */
	
    public mixed $invalidResourceException = null;
    
    /**
     * LimitsExceededException
     * 
     * @var mixed $limitsExceededException
     */
	
    public mixed $limitsExceededException = null;
    
    /**
     * OptimisticLockException
     * 
     * @var mixed $optimisticLockException
     */
	
    public mixed $optimisticLockException = null;
    
    /**
     * ResourceAlreadyExistsException
     * 
     * @var mixed $resourceAlreadyExistsException
     */
	
    public mixed $resourceAlreadyExistsException = null;
    
    /**
     * ResourceNotFoundException
     * 
     * @var mixed $resourceNotFoundException
     */
	
    public mixed $resourceNotFoundException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
	public function __construct()
	{
		$this->contentType = "";
		$this->createProtectionResponse = null;
		$this->internalErrorException = null;
		$this->invalidOperationException = null;
		$this->invalidParameterException = null;
		$this->invalidResourceException = null;
		$this->limitsExceededException = null;
		$this->optimisticLockException = null;
		$this->resourceAlreadyExistsException = null;
		$this->resourceNotFoundException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
	}
}
