// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SubscribedNodeTypeEnum - Node type
type SubscribedNodeTypeEnum string

const (
	SubscribedNodeTypeEnumRoom   SubscribedNodeTypeEnum = "room"
	SubscribedNodeTypeEnumFolder SubscribedNodeTypeEnum = "folder"
	SubscribedNodeTypeEnumFile   SubscribedNodeTypeEnum = "file"
)

func (e SubscribedNodeTypeEnum) ToPointer() *SubscribedNodeTypeEnum {
	return &e
}

func (e *SubscribedNodeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "room":
		fallthrough
	case "folder":
		fallthrough
	case "file":
		*e = SubscribedNodeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubscribedNodeTypeEnum: %v", v)
	}
}

// SubscribedNode - Subscribed node information
type SubscribedNode struct {
	// Auth parent room ID
	AuthParentID *int64 `json:"authParentId,omitempty"`
	// Node ID
	ID int64 `json:"id"`
	// Node type
	Type *SubscribedNodeTypeEnum `json:"type,omitempty"`
}
