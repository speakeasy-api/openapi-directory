/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class GetSourceDefinitionSpecificationResponse {
    
    public String contentType;
    public GetSourceDefinitionSpecificationResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Input failed validation
     */
    
    public org.openapis.openapi.models.shared.InvalidInputExceptionInfo invalidInputExceptionInfo;
    public GetSourceDefinitionSpecificationResponse withInvalidInputExceptionInfo(org.openapis.openapi.models.shared.InvalidInputExceptionInfo invalidInputExceptionInfo) {
        this.invalidInputExceptionInfo = invalidInputExceptionInfo;
        return this;
    }
    
    /**
     * Object with given id was not found.
     */
    
    public org.openapis.openapi.models.shared.NotFoundKnownExceptionInfo notFoundKnownExceptionInfo;
    public GetSourceDefinitionSpecificationResponse withNotFoundKnownExceptionInfo(org.openapis.openapi.models.shared.NotFoundKnownExceptionInfo notFoundKnownExceptionInfo) {
        this.notFoundKnownExceptionInfo = notFoundKnownExceptionInfo;
        return this;
    }
    
    /**
     * Successful operation
     */
    
    public org.openapis.openapi.models.shared.SourceDefinitionSpecificationRead sourceDefinitionSpecificationRead;
    public GetSourceDefinitionSpecificationResponse withSourceDefinitionSpecificationRead(org.openapis.openapi.models.shared.SourceDefinitionSpecificationRead sourceDefinitionSpecificationRead) {
        this.sourceDefinitionSpecificationRead = sourceDefinitionSpecificationRead;
        return this;
    }
    
    
    public Integer statusCode;
    public GetSourceDefinitionSpecificationResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public GetSourceDefinitionSpecificationResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
}
