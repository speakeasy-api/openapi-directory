"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class POSTAccountTypeCreditCardCardHolderInfo:
    r"""Container for cardholder information. If provided, Zuora
          will only use this information for this card.  If not provided, Zuora
          will use the account''s existing bill-to contact information for this
          card.
    """
    
    address_line1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressLine1') }})
    r"""First address line, 255 characters or less."""  
    card_holder_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardHolderName') }})
    r"""The card holder's full name as it appears on the card, e.g., \\"John J Smith\\", 50 characters or less."""  
    city: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city') }})
    r"""City, 40 characters or less."""  
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})
    r"""Country; must be a valid country name or abbreviation."""  
    state: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})
    r"""State; must be a valid state name or 2-character abbreviation."""  
    zip_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zipCode') }})
    r"""Zip code, 20 characters or less."""  
    address_line2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressLine2'), 'exclude': lambda f: f is None }})
    r"""Second address line, 255 characters or less."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Card holder's email address, 80 characters or less."""  
    phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone'), 'exclude': lambda f: f is None }})
    r"""Phone number, 40 characters or less."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class POSTAccountTypeCreditCard:
    r"""Container for custom fields of a payment method object."""
    
    card_holder_info: POSTAccountTypeCreditCardCardHolderInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardHolderInfo') }})
    r"""Container for cardholder information. If provided, Zuora
          will only use this information for this card.  If not provided, Zuora
          will use the account''s existing bill-to contact information for this
          card.
    """  
    card_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardNumber') }})
    r"""Card number, up to 16 characters. Once created, this field can't be updated or queried, and is only available in masked format (e.g., XXXX-XXXX-XXXX-1234)."""  
    card_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardType') }})
    r"""The type of the credit card.
    
    Possible values  include `Visa`, `MasterCard`, `AmericanExpress`, `Discover`, `JCB`, and `Diners`. For more information about credit card types supported by different payment gateways, see [Supported Payment Gateways](https://knowledgecenter.zuora.com/CB_Billing/M_Payment_Gateways/Supported_Payment_Gateways).
    """  
    expiration_month: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expirationMonth') }})
    r"""Two-digit expiration month (01-12)."""  
    expiration_year: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expirationYear') }})
    r"""Four-digit expiration year."""  
    security_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('securityCode'), 'exclude': lambda f: f is None }})
    r"""The CVV or CVV2 security code of the card. To ensure PCI compliance, this value is not stored and cannot be queried."""  
    