// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// BatchWriteItemXAmzTargetEnum
type BatchWriteItemXAmzTargetEnum string

const (
	BatchWriteItemXAmzTargetEnumDynamoDb20120810BatchWriteItem BatchWriteItemXAmzTargetEnum = "DynamoDB_20120810.BatchWriteItem"
)

func (e BatchWriteItemXAmzTargetEnum) ToPointer() *BatchWriteItemXAmzTargetEnum {
	return &e
}

func (e *BatchWriteItemXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DynamoDB_20120810.BatchWriteItem":
		*e = BatchWriteItemXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchWriteItemXAmzTargetEnum: %v", v)
	}
}

type BatchWriteItemRequest struct {
	BatchWriteItemInput shared.BatchWriteItemInput   `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          BatchWriteItemXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type BatchWriteItemResponse struct {
	// Success
	BatchWriteItemOutput *shared.BatchWriteItemOutput
	ContentType          string
	// InternalServerError
	InternalServerError interface{}
	// ItemCollectionSizeLimitExceededException
	ItemCollectionSizeLimitExceededException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	StatusCode                             int
	RawResponse                            *http.Response
	// RequestLimitExceeded
	RequestLimitExceeded interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
