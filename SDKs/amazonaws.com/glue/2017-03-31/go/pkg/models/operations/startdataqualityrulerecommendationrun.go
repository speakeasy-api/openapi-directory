// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartDataQualityRuleRecommendationRunXAmzTargetEnum
type StartDataQualityRuleRecommendationRunXAmzTargetEnum string

const (
	StartDataQualityRuleRecommendationRunXAmzTargetEnumAwsGlueStartDataQualityRuleRecommendationRun StartDataQualityRuleRecommendationRunXAmzTargetEnum = "AWSGlue.StartDataQualityRuleRecommendationRun"
)

func (e StartDataQualityRuleRecommendationRunXAmzTargetEnum) ToPointer() *StartDataQualityRuleRecommendationRunXAmzTargetEnum {
	return &e
}

func (e *StartDataQualityRuleRecommendationRunXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.StartDataQualityRuleRecommendationRun":
		*e = StartDataQualityRuleRecommendationRunXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartDataQualityRuleRecommendationRunXAmzTargetEnum: %v", v)
	}
}

type StartDataQualityRuleRecommendationRunRequest struct {
	StartDataQualityRuleRecommendationRunRequest shared.StartDataQualityRuleRecommendationRunRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                                *string                                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                            *string                                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                               *string                                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                     *string                                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                            *string                                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                *string                                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                            *string                                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                   StartDataQualityRuleRecommendationRunXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartDataQualityRuleRecommendationRunResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// Success
	StartDataQualityRuleRecommendationRunResponse *shared.StartDataQualityRuleRecommendationRunResponse
	StatusCode                                    int
	RawResponse                                   *http.Response
}
