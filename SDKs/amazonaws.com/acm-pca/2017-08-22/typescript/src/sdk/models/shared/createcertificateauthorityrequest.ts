/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CertificateAuthorityConfiguration } from "./certificateauthorityconfiguration";
import { CertificateAuthorityTypeEnum } from "./certificateauthoritytypeenum";
import { CertificateAuthorityUsageModeEnum } from "./certificateauthorityusagemodeenum";
import { KeyStorageSecurityStandardEnum } from "./keystoragesecuritystandardenum";
import { RevocationConfiguration } from "./revocationconfiguration";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateCertificateAuthorityRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CertificateAuthorityConfiguration" })
  @Type(() => CertificateAuthorityConfiguration)
  certificateAuthorityConfiguration: CertificateAuthorityConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificateAuthorityType" })
  certificateAuthorityType: CertificateAuthorityTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "IdempotencyToken" })
  idempotencyToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KeyStorageSecurityStandard" })
  keyStorageSecurityStandard?: KeyStorageSecurityStandardEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RevocationConfiguration" })
  @Type(() => RevocationConfiguration)
  revocationConfiguration?: RevocationConfiguration;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "UsageMode" })
  usageMode?: CertificateAuthorityUsageModeEnum;
}
