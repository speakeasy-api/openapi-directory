/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ApiCoreDtoAccountingConversionOptions {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hideComCost")
    public Boolean hideComCost;

    public ApiCoreDtoAccountingConversionOptions withHideComCost(Boolean hideComCost) {
        this.hideComCost = hideComCost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hideCost")
    public Boolean hideCost;

    public ApiCoreDtoAccountingConversionOptions withHideCost(Boolean hideCost) {
        this.hideCost = hideCost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hideCount")
    public Boolean hideCount;

    public ApiCoreDtoAccountingConversionOptions withHideCount(Boolean hideCount) {
        this.hideCount = hideCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hideParams")
    public Boolean hideParams;

    public ApiCoreDtoAccountingConversionOptions withHideParams(Boolean hideParams) {
        this.hideParams = hideParams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hideValue")
    public Boolean hideValue;

    public ApiCoreDtoAccountingConversionOptions withHideValue(Boolean hideValue) {
        this.hideValue = hideValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentCommission")
    public Integer percentCommission;

    public ApiCoreDtoAccountingConversionOptions withPercentCommission(Integer percentCommission) {
        this.percentCommission = percentCommission;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentValue")
    public Integer percentValue;

    public ApiCoreDtoAccountingConversionOptions withPercentValue(Integer percentValue) {
        this.percentValue = percentValue;
        return this;
    }
    
    public ApiCoreDtoAccountingConversionOptions(){}
}
