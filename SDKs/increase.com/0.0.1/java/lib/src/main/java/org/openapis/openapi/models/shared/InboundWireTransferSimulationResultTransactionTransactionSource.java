/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InboundWireTransferSimulationResultTransactionTransactionSource - This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
 */
public class InboundWireTransferSimulationResultTransactionTransactionSource {
    /**
     * A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.
     */
    @JsonProperty("account_transfer_intention")
    public InboundWireTransferSimulationResultTransactionTransactionSourceAccountTransferIntention accountTransferIntention;
    public InboundWireTransferSimulationResultTransactionTransactionSource withAccountTransferIntention(InboundWireTransferSimulationResultTransactionTransactionSourceAccountTransferIntention accountTransferIntention) {
        this.accountTransferIntention = accountTransferIntention;
        return this;
    }
    
    /**
     * A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.
     */
    @JsonProperty("ach_check_conversion")
    public InboundWireTransferSimulationResultTransactionTransactionSourceACHCheckConversion achCheckConversion;
    public InboundWireTransferSimulationResultTransactionTransactionSource withAchCheckConversion(InboundWireTransferSimulationResultTransactionTransactionSourceACHCheckConversion achCheckConversion) {
        this.achCheckConversion = achCheckConversion;
        return this;
    }
    
    /**
     * A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.
     */
    @JsonProperty("ach_check_conversion_return")
    public InboundWireTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn achCheckConversionReturn;
    public InboundWireTransferSimulationResultTransactionTransactionSource withAchCheckConversionReturn(InboundWireTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn achCheckConversionReturn) {
        this.achCheckConversionReturn = achCheckConversionReturn;
        return this;
    }
    
    /**
     * A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.
     */
    @JsonProperty("ach_transfer_intention")
    public InboundWireTransferSimulationResultTransactionTransactionSourceACHTransferIntention achTransferIntention;
    public InboundWireTransferSimulationResultTransactionTransactionSource withAchTransferIntention(InboundWireTransferSimulationResultTransactionTransactionSourceACHTransferIntention achTransferIntention) {
        this.achTransferIntention = achTransferIntention;
        return this;
    }
    
    /**
     * A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.
     */
    @JsonProperty("ach_transfer_rejection")
    public InboundWireTransferSimulationResultTransactionTransactionSourceACHTransferRejection achTransferRejection;
    public InboundWireTransferSimulationResultTransactionTransactionSource withAchTransferRejection(InboundWireTransferSimulationResultTransactionTransactionSourceACHTransferRejection achTransferRejection) {
        this.achTransferRejection = achTransferRejection;
        return this;
    }
    
    /**
     * A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.
     */
    @JsonProperty("ach_transfer_return")
    public InboundWireTransferSimulationResultTransactionTransactionSourceACHTransferReturn achTransferReturn;
    public InboundWireTransferSimulationResultTransactionTransactionSource withAchTransferReturn(InboundWireTransferSimulationResultTransactionTransactionSourceACHTransferReturn achTransferReturn) {
        this.achTransferReturn = achTransferReturn;
        return this;
    }
    
    /**
     * A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.
     */
    @JsonProperty("card_dispute_acceptance")
    public InboundWireTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance cardDisputeAcceptance;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCardDisputeAcceptance(InboundWireTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance cardDisputeAcceptance) {
        this.cardDisputeAcceptance = cardDisputeAcceptance;
        return this;
    }
    
    /**
     * A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.
     */
    @JsonProperty("card_refund")
    public InboundWireTransferSimulationResultTransactionTransactionSourceCardRefund cardRefund;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCardRefund(InboundWireTransferSimulationResultTransactionTransactionSourceCardRefund cardRefund) {
        this.cardRefund = cardRefund;
        return this;
    }
    
    /**
     * A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.
     */
    @JsonProperty("card_route_refund")
    public InboundWireTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund cardRouteRefund;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCardRouteRefund(InboundWireTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund cardRouteRefund) {
        this.cardRouteRefund = cardRouteRefund;
        return this;
    }
    
    /**
     * A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.
     */
    @JsonProperty("card_route_settlement")
    public InboundWireTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement cardRouteSettlement;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCardRouteSettlement(InboundWireTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement cardRouteSettlement) {
        this.cardRouteSettlement = cardRouteSettlement;
        return this;
    }
    
    /**
     * A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.
     */
    @JsonProperty("card_settlement")
    public InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlement cardSettlement;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCardSettlement(InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlement cardSettlement) {
        this.cardSettlement = cardSettlement;
        return this;
    }
    
    /**
     * The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
     */
    @JsonProperty("category")
    public InboundWireTransferSimulationResultTransactionTransactionSourceCategoryEnum category;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCategory(InboundWireTransferSimulationResultTransactionTransactionSourceCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.
     */
    @JsonProperty("check_deposit_acceptance")
    public InboundWireTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance checkDepositAcceptance;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCheckDepositAcceptance(InboundWireTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance checkDepositAcceptance) {
        this.checkDepositAcceptance = checkDepositAcceptance;
        return this;
    }
    
    /**
     * A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.
     */
    @JsonProperty("check_deposit_return")
    public InboundWireTransferSimulationResultTransactionTransactionSourceCheckDepositReturn checkDepositReturn;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCheckDepositReturn(InboundWireTransferSimulationResultTransactionTransactionSourceCheckDepositReturn checkDepositReturn) {
        this.checkDepositReturn = checkDepositReturn;
        return this;
    }
    
    /**
     * A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.
     */
    @JsonProperty("check_transfer_intention")
    public InboundWireTransferSimulationResultTransactionTransactionSourceCheckTransferIntention checkTransferIntention;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCheckTransferIntention(InboundWireTransferSimulationResultTransactionTransactionSourceCheckTransferIntention checkTransferIntention) {
        this.checkTransferIntention = checkTransferIntention;
        return this;
    }
    
    /**
     * A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.
     */
    @JsonProperty("check_transfer_rejection")
    public InboundWireTransferSimulationResultTransactionTransactionSourceCheckTransferRejection checkTransferRejection;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCheckTransferRejection(InboundWireTransferSimulationResultTransactionTransactionSourceCheckTransferRejection checkTransferRejection) {
        this.checkTransferRejection = checkTransferRejection;
        return this;
    }
    
    /**
     * A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.
     */
    @JsonProperty("check_transfer_return")
    public InboundWireTransferSimulationResultTransactionTransactionSourceCheckTransferReturn checkTransferReturn;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCheckTransferReturn(InboundWireTransferSimulationResultTransactionTransactionSourceCheckTransferReturn checkTransferReturn) {
        this.checkTransferReturn = checkTransferReturn;
        return this;
    }
    
    /**
     * A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.
     */
    @JsonProperty("check_transfer_stop_payment_request")
    public InboundWireTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest checkTransferStopPaymentRequest;
    public InboundWireTransferSimulationResultTransactionTransactionSource withCheckTransferStopPaymentRequest(InboundWireTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest checkTransferStopPaymentRequest) {
        this.checkTransferStopPaymentRequest = checkTransferStopPaymentRequest;
        return this;
    }
    
    /**
     * A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.
     */
    @JsonProperty("dispute_resolution")
    public InboundWireTransferSimulationResultTransactionTransactionSourceDisputeResolution disputeResolution;
    public InboundWireTransferSimulationResultTransactionTransactionSource withDisputeResolution(InboundWireTransferSimulationResultTransactionTransactionSourceDisputeResolution disputeResolution) {
        this.disputeResolution = disputeResolution;
        return this;
    }
    
    /**
     * A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.
     */
    @JsonProperty("empyreal_cash_deposit")
    public InboundWireTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit empyrealCashDeposit;
    public InboundWireTransferSimulationResultTransactionTransactionSource withEmpyrealCashDeposit(InboundWireTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit empyrealCashDeposit) {
        this.empyrealCashDeposit = empyrealCashDeposit;
        return this;
    }
    
    /**
     * A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.
     */
    @JsonProperty("inbound_ach_transfer")
    public InboundWireTransferSimulationResultTransactionTransactionSourceInboundACHTransfer inboundAchTransfer;
    public InboundWireTransferSimulationResultTransactionTransactionSource withInboundAchTransfer(InboundWireTransferSimulationResultTransactionTransactionSourceInboundACHTransfer inboundAchTransfer) {
        this.inboundAchTransfer = inboundAchTransfer;
        return this;
    }
    
    /**
     * A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.
     */
    @JsonProperty("inbound_check")
    public InboundWireTransferSimulationResultTransactionTransactionSourceInboundCheck inboundCheck;
    public InboundWireTransferSimulationResultTransactionTransactionSource withInboundCheck(InboundWireTransferSimulationResultTransactionTransactionSourceInboundCheck inboundCheck) {
        this.inboundCheck = inboundCheck;
        return this;
    }
    
    /**
     * A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.
     */
    @JsonProperty("inbound_international_ach_transfer")
    public InboundWireTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer inboundInternationalAchTransfer;
    public InboundWireTransferSimulationResultTransactionTransactionSource withInboundInternationalAchTransfer(InboundWireTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer inboundInternationalAchTransfer) {
        this.inboundInternationalAchTransfer = inboundInternationalAchTransfer;
        return this;
    }
    
    /**
     * A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.
     */
    @JsonProperty("inbound_real_time_payments_transfer_confirmation")
    public InboundWireTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation inboundRealTimePaymentsTransferConfirmation;
    public InboundWireTransferSimulationResultTransactionTransactionSource withInboundRealTimePaymentsTransferConfirmation(InboundWireTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation inboundRealTimePaymentsTransferConfirmation) {
        this.inboundRealTimePaymentsTransferConfirmation = inboundRealTimePaymentsTransferConfirmation;
        return this;
    }
    
    /**
     * A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.
     */
    @JsonProperty("inbound_wire_drawdown_payment")
    public InboundWireTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment inboundWireDrawdownPayment;
    public InboundWireTransferSimulationResultTransactionTransactionSource withInboundWireDrawdownPayment(InboundWireTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment inboundWireDrawdownPayment) {
        this.inboundWireDrawdownPayment = inboundWireDrawdownPayment;
        return this;
    }
    
    /**
     * A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.
     */
    @JsonProperty("inbound_wire_drawdown_payment_reversal")
    public InboundWireTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal inboundWireDrawdownPaymentReversal;
    public InboundWireTransferSimulationResultTransactionTransactionSource withInboundWireDrawdownPaymentReversal(InboundWireTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal inboundWireDrawdownPaymentReversal) {
        this.inboundWireDrawdownPaymentReversal = inboundWireDrawdownPaymentReversal;
        return this;
    }
    
    /**
     * A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.
     */
    @JsonProperty("inbound_wire_reversal")
    public InboundWireTransferSimulationResultTransactionTransactionSourceInboundWireReversal inboundWireReversal;
    public InboundWireTransferSimulationResultTransactionTransactionSource withInboundWireReversal(InboundWireTransferSimulationResultTransactionTransactionSourceInboundWireReversal inboundWireReversal) {
        this.inboundWireReversal = inboundWireReversal;
        return this;
    }
    
    /**
     * A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.
     */
    @JsonProperty("inbound_wire_transfer")
    public InboundWireTransferSimulationResultTransactionTransactionSourceInboundWireTransfer inboundWireTransfer;
    public InboundWireTransferSimulationResultTransactionTransactionSource withInboundWireTransfer(InboundWireTransferSimulationResultTransactionTransactionSourceInboundWireTransfer inboundWireTransfer) {
        this.inboundWireTransfer = inboundWireTransfer;
        return this;
    }
    
    /**
     * A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.
     */
    @JsonProperty("interest_payment")
    public InboundWireTransferSimulationResultTransactionTransactionSourceInterestPayment interestPayment;
    public InboundWireTransferSimulationResultTransactionTransactionSource withInterestPayment(InboundWireTransferSimulationResultTransactionTransactionSourceInterestPayment interestPayment) {
        this.interestPayment = interestPayment;
        return this;
    }
    
    /**
     * A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.
     */
    @JsonProperty("internal_source")
    public InboundWireTransferSimulationResultTransactionTransactionSourceInternalSource internalSource;
    public InboundWireTransferSimulationResultTransactionTransactionSource withInternalSource(InboundWireTransferSimulationResultTransactionTransactionSourceInternalSource internalSource) {
        this.internalSource = internalSource;
        return this;
    }
    
    /**
     * A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.
     */
    @JsonProperty("sample_funds")
    public InboundWireTransferSimulationResultTransactionTransactionSourceSampleFunds sampleFunds;
    public InboundWireTransferSimulationResultTransactionTransactionSource withSampleFunds(InboundWireTransferSimulationResultTransactionTransactionSourceSampleFunds sampleFunds) {
        this.sampleFunds = sampleFunds;
        return this;
    }
    
    /**
     * A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.
     */
    @JsonProperty("wire_drawdown_payment_intention")
    public InboundWireTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention wireDrawdownPaymentIntention;
    public InboundWireTransferSimulationResultTransactionTransactionSource withWireDrawdownPaymentIntention(InboundWireTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention wireDrawdownPaymentIntention) {
        this.wireDrawdownPaymentIntention = wireDrawdownPaymentIntention;
        return this;
    }
    
    /**
     * A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.
     */
    @JsonProperty("wire_drawdown_payment_rejection")
    public InboundWireTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection wireDrawdownPaymentRejection;
    public InboundWireTransferSimulationResultTransactionTransactionSource withWireDrawdownPaymentRejection(InboundWireTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection wireDrawdownPaymentRejection) {
        this.wireDrawdownPaymentRejection = wireDrawdownPaymentRejection;
        return this;
    }
    
    /**
     * A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.
     */
    @JsonProperty("wire_transfer_intention")
    public InboundWireTransferSimulationResultTransactionTransactionSourceWireTransferIntention wireTransferIntention;
    public InboundWireTransferSimulationResultTransactionTransactionSource withWireTransferIntention(InboundWireTransferSimulationResultTransactionTransactionSourceWireTransferIntention wireTransferIntention) {
        this.wireTransferIntention = wireTransferIntention;
        return this;
    }
    
    /**
     * A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.
     */
    @JsonProperty("wire_transfer_rejection")
    public InboundWireTransferSimulationResultTransactionTransactionSourceWireTransferRejection wireTransferRejection;
    public InboundWireTransferSimulationResultTransactionTransactionSource withWireTransferRejection(InboundWireTransferSimulationResultTransactionTransactionSourceWireTransferRejection wireTransferRejection) {
        this.wireTransferRejection = wireTransferRejection;
        return this;
    }
    
}
