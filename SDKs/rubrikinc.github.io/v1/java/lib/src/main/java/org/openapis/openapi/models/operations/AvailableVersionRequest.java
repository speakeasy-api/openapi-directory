/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class AvailableVersionRequest {
    /**
     * If specified, filter results for downloading versions to the provided job instance ID.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=download_job_instance_id")
    public String downloadJobInstanceId;

    public AvailableVersionRequest withDownloadJobInstanceId(String downloadJobInstanceId) {
        this.downloadJobInstanceId = downloadJobInstanceId;
        return this;
    }
    
    /**
     * Include a download URL for the single version passed in the 'filter_version' parameter. A link response will not be provided if the chosen version is locally available, or if 'filter_version' is not specified.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fetch_links")
    public Boolean fetchLinks;

    public AvailableVersionRequest withFetchLinks(Boolean fetchLinks) {
        this.fetchLinks = fetchLinks;
        return this;
    }
    
    /**
     * When this parameter is set, the query only returns versions of the Rubrik CDM that can be upgraded to from the version specified in the 'source_version' parameter. If 'source_version' is not specified, we use the cluster version as the source_version.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter_upgradable")
    public Boolean filterUpgradable;

    public AvailableVersionRequest withFilterUpgradable(Boolean filterUpgradable) {
        this.filterUpgradable = filterUpgradable;
        return this;
    }
    
    /**
     * A string that filters the results based on the prefix. For example, the string "5.1" filters all releases in the 5.1 family. If more than one result is desired then this parameter can be used in conjunction with the `show_all` parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter_version")
    public String filterVersion;

    public AvailableVersionRequest withFilterVersion(String filterVersion) {
        this.filterVersion = filterVersion;
        return this;
    }
    
    /**
     * The ID of the Rubrik cluster. To query the local cluster, use *me*.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    public String id;

    public AvailableVersionRequest withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * If specified, ignore versions currently being downloaded.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ignore_downloading")
    public Boolean ignoreDownloading;

    public AvailableVersionRequest withIgnoreDownloading(Boolean ignoreDownloading) {
        this.ignoreDownloading = ignoreDownloading;
        return this;
    }
    
    /**
     * If specified, ignore locally available versions.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ignore_local")
    public Boolean ignoreLocal;

    public AvailableVersionRequest withIgnoreLocal(Boolean ignoreLocal) {
        this.ignoreLocal = ignoreLocal;
        return this;
    }
    
    /**
     * If specified, ignore versions available in the Rubrik remote central repository.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ignore_remote")
    public Boolean ignoreRemote;

    public AvailableVersionRequest withIgnoreRemote(Boolean ignoreRemote) {
        this.ignoreRemote = ignoreRemote;
        return this;
    }
    
    /**
     * When this parameter is set, the query shows all patch releases including releases with a newer version released in the same family. When set to false, the query returns only the latest version from each release family.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=show_all")
    public Boolean showAll;

    public AvailableVersionRequest withShowAll(Boolean showAll) {
        this.showAll = showAll;
        return this;
    }
    
    /**
     * The source version of Rubrik CDM used for the upgradeability check if 'filter_upgradable' if specified. If 'filter_upgradable' is not specified, this parameter is ignored.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=source_version")
    public String sourceVersion;

    public AvailableVersionRequest withSourceVersion(String sourceVersion) {
        this.sourceVersion = sourceVersion;
        return this;
    }
    
    public AvailableVersionRequest(@JsonProperty("id") String id) {
        this.id = id;
  }
}
