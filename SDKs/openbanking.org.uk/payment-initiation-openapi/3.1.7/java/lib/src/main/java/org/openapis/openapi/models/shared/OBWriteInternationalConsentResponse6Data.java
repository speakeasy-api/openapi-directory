/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class OBWriteInternationalConsentResponse6Data {
    /**
     * The authorisation type request from the TPP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Authorisation")
    public OBWriteInternationalConsentResponse6DataAuthorisation authorisation;

    public OBWriteInternationalConsentResponse6Data withAuthorisation(OBWriteInternationalConsentResponse6DataAuthorisation authorisation) {
        this.authorisation = authorisation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Charges")
    public OBWriteInternationalConsentResponse6DataCharges[] charges;

    public OBWriteInternationalConsentResponse6Data withCharges(OBWriteInternationalConsentResponse6DataCharges[] charges) {
        this.charges = charges;
        return this;
    }
    
    /**
     * OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource.
     */
    @JsonProperty("ConsentId")
    public String consentId;

    public OBWriteInternationalConsentResponse6Data withConsentId(String consentId) {
        this.consentId = consentId;
        return this;
    }
    
    /**
     * Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
     * All date-time fields in responses must include the timezone. An example is below:
     * 2017-04-05T10:43:07+00:00
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationDateTime")
    public OffsetDateTime creationDateTime;

    public OBWriteInternationalConsentResponse6Data withCreationDateTime(OffsetDateTime creationDateTime) {
        this.creationDateTime = creationDateTime;
        return this;
    }
    
    /**
     * Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
     * All date-time fields in responses must include the timezone. An example is below:
     * 2017-04-05T10:43:07+00:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CutOffDateTime")
    public OffsetDateTime cutOffDateTime;

    public OBWriteInternationalConsentResponse6Data withCutOffDateTime(OffsetDateTime cutOffDateTime) {
        this.cutOffDateTime = cutOffDateTime;
        return this;
    }
    
    /**
     * ^ Only incuded in the response if `Data. ReadRefundAccount` is set to `Yes` in the consent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Debtor")
    public OBCashAccountDebtor4 debtor;

    public OBWriteInternationalConsentResponse6Data withDebtor(OBCashAccountDebtor4 debtor) {
        this.debtor = debtor;
        return this;
    }
    
    /**
     * Further detailed information on the exchange rate that has been used in the payment transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExchangeRateInformation")
    public OBWriteInternationalConsentResponse6DataExchangeRateInformation exchangeRateInformation;

    public OBWriteInternationalConsentResponse6Data withExchangeRateInformation(OBWriteInternationalConsentResponse6DataExchangeRateInformation exchangeRateInformation) {
        this.exchangeRateInformation = exchangeRateInformation;
        return this;
    }
    
    /**
     * Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
     * All date-time fields in responses must include the timezone. An example is below:
     * 2017-04-05T10:43:07+00:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ExpectedExecutionDateTime")
    public OffsetDateTime expectedExecutionDateTime;

    public OBWriteInternationalConsentResponse6Data withExpectedExecutionDateTime(OffsetDateTime expectedExecutionDateTime) {
        this.expectedExecutionDateTime = expectedExecutionDateTime;
        return this;
    }
    
    /**
     * Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
     * All date-time fields in responses must include the timezone. An example is below:
     * 2017-04-05T10:43:07+00:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ExpectedSettlementDateTime")
    public OffsetDateTime expectedSettlementDateTime;

    public OBWriteInternationalConsentResponse6Data withExpectedSettlementDateTime(OffsetDateTime expectedSettlementDateTime) {
        this.expectedSettlementDateTime = expectedSettlementDateTime;
        return this;
    }
    
    /**
     * The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment.
     */
    @JsonProperty("Initiation")
    public OBWriteInternationalConsentResponse6DataInitiation initiation;

    public OBWriteInternationalConsentResponse6Data withInitiation(OBWriteInternationalConsentResponse6DataInitiation initiation) {
        this.initiation = initiation;
        return this;
    }
    
    /**
     * Specifies to share the refund account details with PISP
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReadRefundAccount")
    public OBWriteInternationalConsentResponse6DataReadRefundAccountEnum readRefundAccount;

    public OBWriteInternationalConsentResponse6Data withReadRefundAccount(OBWriteInternationalConsentResponse6DataReadRefundAccountEnum readRefundAccount) {
        this.readRefundAccount = readRefundAccount;
        return this;
    }
    
    /**
     * Supporting Data provided by TPP, when requesting SCA Exemption.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SCASupportData")
    public OBSCASupportData1 scaSupportData;

    public OBWriteInternationalConsentResponse6Data withSCASupportData(OBSCASupportData1 scaSupportData) {
        this.scaSupportData = scaSupportData;
        return this;
    }
    
    /**
     * Specifies the status of consent resource in code form.
     */
    @JsonProperty("Status")
    public OBWriteInternationalConsentResponse6DataStatusEnum status;

    public OBWriteInternationalConsentResponse6Data withStatus(OBWriteInternationalConsentResponse6DataStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
     * All date-time fields in responses must include the timezone. An example is below:
     * 2017-04-05T10:43:07+00:00
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StatusUpdateDateTime")
    public OffsetDateTime statusUpdateDateTime;

    public OBWriteInternationalConsentResponse6Data withStatusUpdateDateTime(OffsetDateTime statusUpdateDateTime) {
        this.statusUpdateDateTime = statusUpdateDateTime;
        return this;
    }
    
    public OBWriteInternationalConsentResponse6Data(@JsonProperty("ConsentId") String consentId, @JsonProperty("CreationDateTime") OffsetDateTime creationDateTime, @JsonProperty("Initiation") OBWriteInternationalConsentResponse6DataInitiation initiation, @JsonProperty("Status") OBWriteInternationalConsentResponse6DataStatusEnum status, @JsonProperty("StatusUpdateDateTime") OffsetDateTime statusUpdateDateTime) {
        this.consentId = consentId;
        this.creationDateTime = creationDateTime;
        this.initiation = initiation;
        this.status = status;
        this.statusUpdateDateTime = statusUpdateDateTime;
  }
}
