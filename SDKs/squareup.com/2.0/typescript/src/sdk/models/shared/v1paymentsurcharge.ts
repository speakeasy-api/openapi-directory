/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { V1Money } from "./v1money";
import { V1PaymentTax } from "./v1paymenttax";
import { Expose, Type } from "class-transformer";

/**
 * V1PaymentSurcharge
 */
export class V1PaymentSurcharge extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount_money" })
  @Type(() => V1Money)
  amountMoney?: V1Money;

  @SpeakeasyMetadata()
  @Expose({ name: "applied_money" })
  @Type(() => V1Money)
  appliedMoney?: V1Money;

  /**
   * The name of the surcharge.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The amount of the surcharge as a percentage. The percentage is provided as a string representing the decimal equivalent of the percentage. For example, "0.7" corresponds to a 7% surcharge. Exactly one of rate or amount_money should be set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rate" })
  rate?: string;

  /**
   * A Square-issued unique identifier associated with the surcharge.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "surcharge_id" })
  surchargeId?: string;

  /**
   * Indicates whether the surcharge is taxable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxable" })
  taxable?: boolean;

  /**
   * The list of taxes that should be applied to the surcharge.
   */
  @SpeakeasyMetadata({ elemType: V1PaymentTax })
  @Expose({ name: "taxes" })
  @Type(() => V1PaymentTax)
  taxes?: V1PaymentTax[];

  /**
   * Indicates the source of the surcharge. For example, if it was applied as an automatic gratuity for a large group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
