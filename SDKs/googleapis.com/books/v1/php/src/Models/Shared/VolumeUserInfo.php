<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VolumeUserInfo - User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VolumeUserInfo
{
    /**
     * Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc.
     * 
     * @var ?string $acquiredTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('acquiredTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $acquiredTime = null;
    
    /**
     * How this volume was acquired.
     * 
     * @var ?int $acquisitionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('acquisitionType')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $acquisitionType = null;
    
    /**
     * Copy/Paste accounting information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VolumeUserInfoCopy $copy
     */
	#[\JMS\Serializer\Annotation\SerializedName('copy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VolumeUserInfoCopy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VolumeUserInfoCopy $copy = null;
    
    /**
     * Whether this volume is purchased, sample, pd download etc.
     * 
     * @var ?int $entitlementType
     */
	#[\JMS\Serializer\Annotation\SerializedName('entitlementType')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $entitlementType = null;
    
    /**
     * Information on the ability to share with the family.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VolumeUserInfoFamilySharing $familySharing
     */
	#[\JMS\Serializer\Annotation\SerializedName('familySharing')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VolumeUserInfoFamilySharing')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VolumeUserInfoFamilySharing $familySharing = null;
    
    /**
     * Whether or not the user shared this volume with the family.
     * 
     * @var ?bool $isFamilySharedFromUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('isFamilySharedFromUser')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isFamilySharedFromUser = null;
    
    /**
     * Whether or not the user received this volume through family sharing.
     * 
     * @var ?bool $isFamilySharedToUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('isFamilySharedToUser')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isFamilySharedToUser = null;
    
    /**
     * Deprecated: Replaced by familySharing.
     * 
     * @var ?bool $isFamilySharingAllowed
     */
	#[\JMS\Serializer\Annotation\SerializedName('isFamilySharingAllowed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isFamilySharingAllowed = null;
    
    /**
     * Deprecated: Replaced by familySharing.
     * 
     * @var ?bool $isFamilySharingDisabledByFop
     */
	#[\JMS\Serializer\Annotation\SerializedName('isFamilySharingDisabledByFop')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isFamilySharingDisabledByFop = null;
    
    /**
     * Whether or not this volume is currently in "my books."
     * 
     * @var ?bool $isInMyBooks
     */
	#[\JMS\Serializer\Annotation\SerializedName('isInMyBooks')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isInMyBooks = null;
    
    /**
     * Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)
     * 
     * @var ?bool $isPreordered
     */
	#[\JMS\Serializer\Annotation\SerializedName('isPreordered')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPreordered = null;
    
    /**
     * Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)
     * 
     * @var ?bool $isPurchased
     */
	#[\JMS\Serializer\Annotation\SerializedName('isPurchased')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPurchased = null;
    
    /**
     * Whether or not this volume was user uploaded.
     * 
     * @var ?bool $isUploaded
     */
	#[\JMS\Serializer\Annotation\SerializedName('isUploaded')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isUploaded = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('readingPosition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReadingPosition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReadingPosition $readingPosition = null;
    
    /**
     * Period during this book is/was a valid rental.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VolumeUserInfoRentalPeriod $rentalPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('rentalPeriod')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VolumeUserInfoRentalPeriod')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VolumeUserInfoRentalPeriod $rentalPeriod = null;
    
    /**
     * Whether this book is an active or an expired rental.
     * 
     * @var ?string $rentalState
     */
	#[\JMS\Serializer\Annotation\SerializedName('rentalState')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rentalState = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('review')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Review')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Review $review = null;
    
    /**
     * Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).
     * 
     * @var ?string $updated
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updated = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('userUploadedVolumeInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VolumeUserInfoUserUploadedVolumeInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VolumeUserInfoUserUploadedVolumeInfo $userUploadedVolumeInfo = null;
    
	public function __construct()
	{
		$this->acquiredTime = null;
		$this->acquisitionType = null;
		$this->copy = null;
		$this->entitlementType = null;
		$this->familySharing = null;
		$this->isFamilySharedFromUser = null;
		$this->isFamilySharedToUser = null;
		$this->isFamilySharingAllowed = null;
		$this->isFamilySharingDisabledByFop = null;
		$this->isInMyBooks = null;
		$this->isPreordered = null;
		$this->isPurchased = null;
		$this->isUploaded = null;
		$this->readingPosition = null;
		$this->rentalPeriod = null;
		$this->rentalState = null;
		$this->review = null;
		$this->updated = null;
		$this->userUploadedVolumeInfo = null;
	}
}
