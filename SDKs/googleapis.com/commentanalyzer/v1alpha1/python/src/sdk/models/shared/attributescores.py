"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import score as shared_score
from ..shared import spanscore as shared_spanscore
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AttributeScores:
    r"""This holds score values for a single attribute. It contains both per-span scores as well as an overall summary score.."""
    
    span_scores: Optional[list[shared_spanscore.SpanScore]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spanScores'), 'exclude': lambda f: f is None }})
    r"""Per-span scores."""  
    summary_score: Optional[shared_score.Score] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('summaryScore'), 'exclude': lambda f: f is None }})
    r"""Analysis scores are described by a value and a ScoreType."""  
    