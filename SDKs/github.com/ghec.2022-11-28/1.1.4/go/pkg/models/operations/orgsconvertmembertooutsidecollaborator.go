// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type OrgsConvertMemberToOutsideCollaboratorRequestBody struct {
	// When set to `true`, the request will be performed asynchronously. Returns a 202 status code when the job is successfully queued.
	Async *bool `json:"async,omitempty"`
}

type OrgsConvertMemberToOutsideCollaboratorRequest struct {
	RequestBody *OrgsConvertMemberToOutsideCollaboratorRequestBody `request:"mediaType=application/json"`
	// The organization name. The name is not case sensitive.
	Org string `pathParam:"style=simple,explode=false,name=org"`
	// The handle for the GitHub user account.
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

type OrgsConvertMemberToOutsideCollaboratorResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// User is getting converted asynchronously
	OrgsConvertMemberToOutsideCollaborator202ApplicationJSONObject map[string]interface{}
}
