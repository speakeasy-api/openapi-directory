"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import riskdecisiontype_enum as shared_riskdecisiontype_enum
from ..shared import riskleveltype_enum as shared_riskleveltype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventRiskType:
    r"""The event risk type."""
    
    compromised_credentials_detected: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompromisedCredentialsDetected'), 'exclude': lambda f: f is None }})  
    risk_decision: Optional[shared_riskdecisiontype_enum.RiskDecisionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RiskDecision'), 'exclude': lambda f: f is None }})  
    risk_level: Optional[shared_riskleveltype_enum.RiskLevelTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RiskLevel'), 'exclude': lambda f: f is None }})  
    