<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Environment - Definition of a software environment that is used to start a notebook instance.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Environment
{
    /**
     * Definition of a container image for starting a notebook instance with the environment installed in a container.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ContainerImage $containerImage
     */
	#[\JMS\Serializer\Annotation\SerializedName('containerImage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ContainerImage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ContainerImage $containerImage = null;
    
    /**
     * Output only. The time at which this environment was created.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * A brief description of this environment.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Display name of this environment for the UI.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Output only. Name of this environment. Format: `projects/{project_id}/locations/{location}/environments/{environment_id}`
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path. Example: `"gs://path-to-file/file-name"`
     * 
     * @var ?string $postStartupScript
     */
	#[\JMS\Serializer\Annotation\SerializedName('postStartupScript')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postStartupScript = null;
    
    /**
     * Definition of a custom Compute Engine virtual machine image for starting a notebook instance with the environment installed directly on the VM.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VmImage $vmImage
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmImage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VmImage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VmImage $vmImage = null;
    
	public function __construct()
	{
		$this->containerImage = null;
		$this->createTime = null;
		$this->description = null;
		$this->displayName = null;
		$this->name = null;
		$this->postStartupScript = null;
		$this->vmImage = null;
	}
}
