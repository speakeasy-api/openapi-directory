/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { PhaseArtifact } from "./phaseartifact";
import { Expose, Transform } from "class-transformer";

/**
 * The artifacts produced by a target render operation.
 */
export class TargetArtifact extends SpeakeasyBase {
  /**
   * Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "artifactUri" })
  artifactUri?: string;

  /**
   * Output only. File path of the rendered manifest relative to the URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manifestPath" })
  manifestPath?: string;

  /**
   * Output only. Map from the phase ID to the phase artifacts for the `Target`.
   */
  @SpeakeasyMetadata({ elemType: PhaseArtifact })
  @Expose({ name: "phaseArtifacts" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, PhaseArtifact> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], PhaseArtifact);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  phaseArtifacts?: Record<string, PhaseArtifact>;

  /**
   * Output only. File path of the resolved Skaffold configuration relative to the URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skaffoldConfigPath" })
  skaffoldConfigPath?: string;
}
