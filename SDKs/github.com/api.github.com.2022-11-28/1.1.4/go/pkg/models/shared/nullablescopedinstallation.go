// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NullableScopedInstallationRepositorySelectionEnum - Describe whether all repositories have been selected or there's a selection involved
type NullableScopedInstallationRepositorySelectionEnum string

const (
	NullableScopedInstallationRepositorySelectionEnumAll      NullableScopedInstallationRepositorySelectionEnum = "all"
	NullableScopedInstallationRepositorySelectionEnumSelected NullableScopedInstallationRepositorySelectionEnum = "selected"
)

func (e *NullableScopedInstallationRepositorySelectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "selected":
		*e = NullableScopedInstallationRepositorySelectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NullableScopedInstallationRepositorySelectionEnum: %s", s)
	}
}

type NullableScopedInstallation struct {
	// A GitHub user.
	Account                SimpleUser `json:"account"`
	HasMultipleSingleFiles *bool      `json:"has_multiple_single_files,omitempty"`
	// The permissions granted to the user-to-server access token.
	Permissions     AppPermissions `json:"permissions"`
	RepositoriesURL string         `json:"repositories_url"`
	// Describe whether all repositories have been selected or there's a selection involved
	RepositorySelection NullableScopedInstallationRepositorySelectionEnum `json:"repository_selection"`
	SingleFileName      string                                            `json:"single_file_name"`
	SingleFilePaths     []string                                          `json:"single_file_paths,omitempty"`
}
