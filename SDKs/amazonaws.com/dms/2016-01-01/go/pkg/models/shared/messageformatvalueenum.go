// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MessageFormatValueEnum string

const (
	MessageFormatValueEnumJSON            MessageFormatValueEnum = "json"
	MessageFormatValueEnumJSONUnformatted MessageFormatValueEnum = "json-unformatted"
)

func (e MessageFormatValueEnum) ToPointer() *MessageFormatValueEnum {
	return &e
}

func (e *MessageFormatValueEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "json-unformatted":
		*e = MessageFormatValueEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageFormatValueEnum: %v", v)
	}
}
