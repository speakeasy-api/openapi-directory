"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MessageNewJobStateEnum(str, Enum):
    r"""The new job state."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    QUEUED = 'QUEUED'
    SCHEDULED = 'SCHEDULED'
    RUNNING = 'RUNNING'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    DELETION_IN_PROGRESS = 'DELETION_IN_PROGRESS'

class MessageNewTaskStateEnum(str, Enum):
    r"""The new task state."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    PENDING = 'PENDING'
    ASSIGNED = 'ASSIGNED'
    RUNNING = 'RUNNING'
    FAILED = 'FAILED'
    SUCCEEDED = 'SUCCEEDED'

class MessageTypeEnum(str, Enum):
    r"""The message type."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    JOB_STATE_CHANGED = 'JOB_STATE_CHANGED'
    TASK_STATE_CHANGED = 'TASK_STATE_CHANGED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Message:
    r"""Message details. Describe the attribute that a message should have. Without specified message attributes, no message will be sent by default."""
    
    new_job_state: Optional[MessageNewJobStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newJobState'), 'exclude': lambda f: f is None }})
    r"""The new job state."""  
    new_task_state: Optional[MessageNewTaskStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newTaskState'), 'exclude': lambda f: f is None }})
    r"""The new task state."""  
    type: Optional[MessageTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The message type."""  
    