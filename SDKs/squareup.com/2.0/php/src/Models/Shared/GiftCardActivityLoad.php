<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GiftCardActivityLoad - Present only when `GiftCardActivityType` is LOAD.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GiftCardActivityLoad
{
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $amountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $amountMoney = null;
    
    /**
     * If you are not using the Orders API, this field is required because it is used to identify a buyer 
     * 
     * to perform compliance checks.
     * 
     * @var ?array<string> $buyerPaymentInstrumentIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('buyer_payment_instrument_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $buyerPaymentInstrumentIds = null;
    
    /**
     * The `line_item_uid` of the gift cardâ€™s line item in the order associated with the activity.
     * 
     * It is populated along with `order_id` and is required if using the Square Orders API.
     * 
     * @var ?string $lineItemUid
     */
	#[\JMS\Serializer\Annotation\SerializedName('line_item_uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lineItemUid = null;
    
    /**
     * The `order_id` of the order associated with the activity.
     * 
     * It is populated along with `line_item_uid` and is required if using the Square Orders API.
     * 
     * @var ?string $orderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('order_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $orderId = null;
    
    /**
     * A client-specified ID to associate an entity, in another system, with this gift card
     * 
     * activity. This can be used to track the order or payment related information when the Square Orders
     * API is not being used.
     * 
     * @var ?string $referenceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $referenceId = null;
    
	public function __construct()
	{
		$this->amountMoney = null;
		$this->buyerPaymentInstrumentIds = null;
		$this->lineItemUid = null;
		$this->orderId = null;
		$this->referenceId = null;
	}
}
