"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GlobalJwtVerifier:
    r"""A JWT verifier used by multiple service descriptor"""
    
    algo_settings: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('algoSettings') }})  
    desc: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('desc') }})
    r"""Verifier description"""  
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})
    r"""Is it enabled"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Verifier id"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Verifier name"""  
    source: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source') }})  
    strategy: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('strategy') }})  
    strict: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('strict') }})
    r"""Does it fail if JWT not found"""  
    