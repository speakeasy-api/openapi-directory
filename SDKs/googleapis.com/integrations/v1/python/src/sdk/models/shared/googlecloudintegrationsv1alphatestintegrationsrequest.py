"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enterprisecrmfrontendseventbusprotoeventparameters as shared_enterprisecrmfrontendseventbusprotoeventparameters
from ..shared import googlecloudintegrationsv1alphaintegrationversion as shared_googlecloudintegrationsv1alphaintegrationversion
from ..shared import googlecloudintegrationsv1alphavaluetype as shared_googlecloudintegrationsv1alphavaluetype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput:
    r"""The request for testing an integration."""
    
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientId'), 'exclude': lambda f: f is None }})
    r"""Required. This is used to identify the client on whose behalf the event will be executed."""  
    deadline_seconds_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deadlineSecondsTime'), 'exclude': lambda f: f is None }})
    r"""Optional. custom deadline of the rpc"""  
    input_parameters: Optional[dict[str, shared_googlecloudintegrationsv1alphavaluetype.GoogleCloudIntegrationsV1alphaValueType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputParameters'), 'exclude': lambda f: f is None }})
    r"""Optional. Input parameters used during integration execution."""  
    integration_version: Optional[shared_googlecloudintegrationsv1alphaintegrationversion.GoogleCloudIntegrationsV1alphaIntegrationVersionInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integrationVersion'), 'exclude': lambda f: f is None }})
    r"""The integration version definition."""  
    parameters: Optional[shared_enterprisecrmfrontendseventbusprotoeventparameters.EnterpriseCrmFrontendsEventbusProtoEventParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})
    r"""LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see"""  
    test_mode: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testMode'), 'exclude': lambda f: f is None }})
    r"""Optional. Can be specified in the event request, otherwise false (default). If true, enables tasks with condition \\"test_mode = true\\". If false, disables tasks with condition \\"test_mode = true\\" if global test mode (set by platform) is also false {@link EventBusConfig}."""  
    trigger_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerId'), 'exclude': lambda f: f is None }})
    r"""Required. The trigger id of the integration trigger config. If both trigger_id and client_id is present, the integration is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks."""  
    