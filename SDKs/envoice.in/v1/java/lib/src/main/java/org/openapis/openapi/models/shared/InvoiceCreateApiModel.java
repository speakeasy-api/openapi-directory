/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class InvoiceCreateApiModel {
    /**
     * List of invoice attachments
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Attachments")
    @SpeakeasyMetadata("form:name=Attachments,json")
    public InvoiceCreateAttachmentApiModel[] attachments;
    public InvoiceCreateApiModel withAttachments(InvoiceCreateAttachmentApiModel[] attachments) {
        this.attachments = attachments;
        return this;
    }
    
    /**
     * The client to whom this invoice is assigned
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClientId")
    @SpeakeasyMetadata("form:name=ClientId")
    public Integer clientId;
    public InvoiceCreateApiModel withClientId(Integer clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Indicate from which invoice this invoice has been cloned from
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClonedFromId")
    @SpeakeasyMetadata("form:name=ClonedFromId")
    public Integer clonedFromId;
    public InvoiceCreateApiModel withClonedFromId(Integer clonedFromId) {
        this.clonedFromId = clonedFromId;
        return this;
    }
    
    /**
     * Id of the currency for the invoice amounts
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrencyId")
    @SpeakeasyMetadata("form:name=CurrencyId")
    public Integer currencyId;
    public InvoiceCreateApiModel withCurrencyId(Integer currencyId) {
        this.currencyId = currencyId;
        return this;
    }
    
    /**
     * Indicates when the invoice will be proclamed as due
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("Duedate")
    @SpeakeasyMetadata("form:name=Duedate")
    public OffsetDateTime duedate;
    public InvoiceCreateApiModel withDuedate(OffsetDateTime duedate) {
        this.duedate = duedate;
        return this;
    }
    
    /**
     * Hold the id of the invoice category
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceCategoryId")
    @SpeakeasyMetadata("form:name=InvoiceCategoryId")
    public Integer invoiceCategoryId;
    public InvoiceCreateApiModel withInvoiceCategoryId(Integer invoiceCategoryId) {
        this.invoiceCategoryId = invoiceCategoryId;
        return this;
    }
    
    /**
     * Indicates when the invoice was issued
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("IssuedOn")
    @SpeakeasyMetadata("form:name=IssuedOn")
    public OffsetDateTime issuedOn;
    public InvoiceCreateApiModel withIssuedOn(OffsetDateTime issuedOn) {
        this.issuedOn = issuedOn;
        return this;
    }
    
    /**
     * List of invoice items
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Items")
    @SpeakeasyMetadata("form:name=Items,json")
    public InvoiceCreateItemApiModel[] items;
    public InvoiceCreateApiModel withItems(InvoiceCreateItemApiModel[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Internal note regarding the invoice
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Notes")
    @SpeakeasyMetadata("form:name=Notes")
    public String notes;
    public InvoiceCreateApiModel withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Unique invoice number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Number")
    @SpeakeasyMetadata("form:name=Number")
    public String number;
    public InvoiceCreateApiModel withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * List of enabled payment gateways for this invoice
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentGateways")
    @SpeakeasyMetadata("form:name=PaymentGateways,json")
    public InvoiceGatewayApiModel[] paymentGateways;
    public InvoiceCreateApiModel withPaymentGateways(InvoiceGatewayApiModel[] paymentGateways) {
        this.paymentGateways = paymentGateways;
        return this;
    }
    
    /**
     * Unique number generated by the buyer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PoNumber")
    @SpeakeasyMetadata("form:name=PoNumber")
    public String poNumber;
    public InvoiceCreateApiModel withPoNumber(String poNumber) {
        this.poNumber = poNumber;
        return this;
    }
    
    /**
     * Definition of invoice recurring profile
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecurringProfile")
    @SpeakeasyMetadata("form:name=RecurringProfile,json")
    public InvoiceRecurringApiModel recurringProfile;
    public InvoiceCreateApiModel withRecurringProfile(InvoiceRecurringApiModel recurringProfile) {
        this.recurringProfile = recurringProfile;
        return this;
    }
    
    /**
     * Hold the id of the recurring profile
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecurringProfileId")
    @SpeakeasyMetadata("form:name=RecurringProfileId")
    public Integer recurringProfileId;
    public InvoiceCreateApiModel withRecurringProfileId(Integer recurringProfileId) {
        this.recurringProfileId = recurringProfileId;
        return this;
    }
    
    /**
     * Should send email reminders to client?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShouldSendReminders")
    @SpeakeasyMetadata("form:name=ShouldSendReminders")
    public Boolean shouldSendReminders;
    public InvoiceCreateApiModel withShouldSendReminders(Boolean shouldSendReminders) {
        this.shouldSendReminders = shouldSendReminders;
        return this;
    }
    
    /**
     * Indicate the status of the invoice (paid/unpaid/overdue)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    @SpeakeasyMetadata("form:name=Status")
    public InvoiceCreateApiModelStatusEnum status;
    public InvoiceCreateApiModel withStatus(InvoiceCreateApiModelStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Terms of agreement
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Terms")
    @SpeakeasyMetadata("form:name=Terms")
    public String terms;
    public InvoiceCreateApiModel withTerms(String terms) {
        this.terms = terms;
        return this;
    }
    
}
