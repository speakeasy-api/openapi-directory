/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ScorecardChartSpec - A scorecard chart. Scorecard charts are used to highlight key performance indicators, known as KPIs, on the spreadsheet. A scorecard chart can represent things like total sales, average cost, or a top selling item. You can specify a single data value, or aggregate over a range of data. Percentage or absolute difference from a baseline value can be highlighted, like changes over time.
 */
public class ScorecardChartSpec {
    /**
     * The aggregation type for key and baseline chart data in scorecard chart. This field is not supported for data source charts. Use the ChartData.aggregateType field of the key_value_data or baseline_value_data instead for data source charts. This field is optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aggregateType")
    public ScorecardChartSpecAggregateTypeEnum aggregateType;
    public ScorecardChartSpec withAggregateType(ScorecardChartSpecAggregateTypeEnum aggregateType) {
        this.aggregateType = aggregateType;
        return this;
    }
    
    /**
     * The data included in a domain or series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baselineValueData")
    public ChartData baselineValueData;
    public ScorecardChartSpec withBaselineValueData(ChartData baselineValueData) {
        this.baselineValueData = baselineValueData;
        return this;
    }
    
    /**
     * Formatting options for baseline value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baselineValueFormat")
    public BaselineValueFormat baselineValueFormat;
    public ScorecardChartSpec withBaselineValueFormat(BaselineValueFormat baselineValueFormat) {
        this.baselineValueFormat = baselineValueFormat;
        return this;
    }
    
    /**
     * Custom number formatting options for chart attributes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFormatOptions")
    public ChartCustomNumberFormatOptions customFormatOptions;
    public ScorecardChartSpec withCustomFormatOptions(ChartCustomNumberFormatOptions customFormatOptions) {
        this.customFormatOptions = customFormatOptions;
        return this;
    }
    
    /**
     * The data included in a domain or series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyValueData")
    public ChartData keyValueData;
    public ScorecardChartSpec withKeyValueData(ChartData keyValueData) {
        this.keyValueData = keyValueData;
        return this;
    }
    
    /**
     * Formatting options for key value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyValueFormat")
    public KeyValueFormat keyValueFormat;
    public ScorecardChartSpec withKeyValueFormat(KeyValueFormat keyValueFormat) {
        this.keyValueFormat = keyValueFormat;
        return this;
    }
    
    /**
     * The number format source used in the scorecard chart. This field is optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numberFormatSource")
    public ScorecardChartSpecNumberFormatSourceEnum numberFormatSource;
    public ScorecardChartSpec withNumberFormatSource(ScorecardChartSpecNumberFormatSourceEnum numberFormatSource) {
        this.numberFormatSource = numberFormatSource;
        return this;
    }
    
    /**
     * Value to scale scorecard key and baseline value. For example, a factor of 10 can be used to divide all values in the chart by 10. This field is optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scaleFactor")
    public Double scaleFactor;
    public ScorecardChartSpec withScaleFactor(Double scaleFactor) {
        this.scaleFactor = scaleFactor;
        return this;
    }
    
}
