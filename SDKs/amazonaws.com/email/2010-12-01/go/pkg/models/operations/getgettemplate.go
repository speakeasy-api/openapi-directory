// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETTemplateActionEnum
type GETGETTemplateActionEnum string

const (
	GETGETTemplateActionEnumGetTemplate GETGETTemplateActionEnum = "GetTemplate"
)

func (e GETGETTemplateActionEnum) ToPointer() *GETGETTemplateActionEnum {
	return &e
}

func (e *GETGETTemplateActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetTemplate":
		*e = GETGETTemplateActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETTemplateActionEnum: %v", v)
	}
}

// GETGETTemplateVersionEnum
type GETGETTemplateVersionEnum string

const (
	GETGETTemplateVersionEnumTwoThousandAndTen1201 GETGETTemplateVersionEnum = "2010-12-01"
)

func (e GETGETTemplateVersionEnum) ToPointer() *GETGETTemplateVersionEnum {
	return &e
}

func (e *GETGETTemplateVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETGETTemplateVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETTemplateVersionEnum: %v", v)
	}
}

type GETGETTemplateRequest struct {
	Action GETGETTemplateActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the template you want to retrieve.
	TemplateName      string                    `queryParam:"style=form,explode=true,name=TemplateName"`
	Version           GETGETTemplateVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETTemplateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
