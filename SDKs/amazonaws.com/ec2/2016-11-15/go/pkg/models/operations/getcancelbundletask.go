// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCancelBundleTaskActionEnum
type GETCancelBundleTaskActionEnum string

const (
	GETCancelBundleTaskActionEnumCancelBundleTask GETCancelBundleTaskActionEnum = "CancelBundleTask"
)

func (e *GETCancelBundleTaskActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CancelBundleTask":
		*e = GETCancelBundleTaskActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCancelBundleTaskActionEnum: %s", s)
	}
}

// GETCancelBundleTaskVersionEnum
type GETCancelBundleTaskVersionEnum string

const (
	GETCancelBundleTaskVersionEnumTwoThousandAndSixteen1115 GETCancelBundleTaskVersionEnum = "2016-11-15"
)

func (e *GETCancelBundleTaskVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETCancelBundleTaskVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCancelBundleTaskVersionEnum: %s", s)
	}
}

type GETCancelBundleTaskQueryParams struct {
	Action GETCancelBundleTaskActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ID of the bundle task.
	BundleID string `queryParam:"style=form,explode=true,name=BundleId"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun  *bool                          `queryParam:"style=form,explode=true,name=DryRun"`
	Version GETCancelBundleTaskVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETCancelBundleTaskHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCancelBundleTaskRequest struct {
	QueryParams GETCancelBundleTaskQueryParams
	Headers     GETCancelBundleTaskHeaders
}

type GETCancelBundleTaskResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
