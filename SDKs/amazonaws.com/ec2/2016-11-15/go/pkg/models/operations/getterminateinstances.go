// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETTerminateInstancesActionEnum
type GETTerminateInstancesActionEnum string

const (
	GETTerminateInstancesActionEnumTerminateInstances GETTerminateInstancesActionEnum = "TerminateInstances"
)

func (e *GETTerminateInstancesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TerminateInstances":
		*e = GETTerminateInstancesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETTerminateInstancesActionEnum: %s", s)
	}
}

// GETTerminateInstancesVersionEnum
type GETTerminateInstancesVersionEnum string

const (
	GETTerminateInstancesVersionEnumTwoThousandAndSixteen1115 GETTerminateInstancesVersionEnum = "2016-11-15"
)

func (e *GETTerminateInstancesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETTerminateInstancesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETTerminateInstancesVersionEnum: %s", s)
	}
}

type GETTerminateInstancesRequest struct {
	Action GETTerminateInstancesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// <p>The IDs of the instances.</p> <p>Constraints: Up to 1000 instance IDs. We recommend breaking up this request into smaller batches.</p>
	InstanceID        []string                         `queryParam:"style=form,explode=true,name=InstanceId"`
	Version           GETTerminateInstancesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETTerminateInstancesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
