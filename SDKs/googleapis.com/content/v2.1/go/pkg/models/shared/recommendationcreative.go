// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RecommendationCreativeTypeEnum - Type of the creative.
type RecommendationCreativeTypeEnum string

const (
	RecommendationCreativeTypeEnumCreativeTypeUnspecified RecommendationCreativeTypeEnum = "CREATIVE_TYPE_UNSPECIFIED"
	RecommendationCreativeTypeEnumVideo                   RecommendationCreativeTypeEnum = "VIDEO"
	RecommendationCreativeTypeEnumPhoto                   RecommendationCreativeTypeEnum = "PHOTO"
)

func (e RecommendationCreativeTypeEnum) ToPointer() *RecommendationCreativeTypeEnum {
	return &e
}

func (e *RecommendationCreativeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATIVE_TYPE_UNSPECIFIED":
		fallthrough
	case "VIDEO":
		fallthrough
	case "PHOTO":
		*e = RecommendationCreativeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecommendationCreativeTypeEnum: %v", v)
	}
}

// RecommendationCreative - Creative is a multimedia attachment to recommendation that can be used on the frontend.
type RecommendationCreative struct {
	// Type of the creative.
	Type *RecommendationCreativeTypeEnum `json:"type,omitempty"`
	// URL of the creative.
	URI *string `json:"uri,omitempty"`
}
