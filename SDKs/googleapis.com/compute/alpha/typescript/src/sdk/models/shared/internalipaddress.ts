/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of the internal IP address.
 */
export enum InternalIpAddressTypeEnum {
  PeerReserved = "PEER_RESERVED",
  PeerUsed = "PEER_USED",
  RemoteReserved = "REMOTE_RESERVED",
  RemoteUsed = "REMOTE_USED",
  Reserved = "RESERVED",
  Subnetwork = "SUBNETWORK",
  TypeUnspecified = "TYPE_UNSPECIFIED",
}

export class InternalIpAddress extends SpeakeasyBase {
  /**
   * IP CIDR address or range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cidr" })
  cidr?: string;

  /**
   * The owner of the internal IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: string;

  /**
   * The purpose of the internal IP address if applicable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purpose" })
  purpose?: string;

  /**
   * The region of the internal IP address if applicable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * The type of the internal IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: InternalIpAddressTypeEnum;
}
