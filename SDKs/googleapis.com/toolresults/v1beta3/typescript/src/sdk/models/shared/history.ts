/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
 */
export enum HistoryTestPlatformEnum {
  UnknownPlatform = "unknownPlatform",
  Android = "android",
  Ios = "ios",
}

/**
 * A History represents a sorted list of Executions ordered by the start_timestamp_millis field (descending). It can be used to group all the Executions of a continuous build. Note that the ordering only operates on one-dimension. If a repository has multiple branches, it means that multiple histories will need to be used in order to order Executions per branch.
 */
export class History extends SpeakeasyBase {
  /**
   * A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "historyId" })
  historyId?: string;

  /**
   * A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "testPlatform" })
  testPlatform?: HistoryTestPlatformEnum;
}
