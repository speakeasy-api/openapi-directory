"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import managesnippet as shared_managesnippet
from ..shared import messagemodel as shared_messagemodel
from typing import Optional


@dataclasses.dataclass
class CreateSnippetUsingPOSTRequest:
    
    api_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'apiKey', 'style': 'simple', 'explode': False }})
    r"""apiKey"""  
    manage_snippet: shared_managesnippet.ManageSnippet = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""snippet"""  
    

@dataclasses.dataclass
class CreateSnippetUsingPOSTResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    manage_snippet: Optional[shared_managesnippet.ManageSnippet] = dataclasses.field(default=None)
    r"""OK"""  
    message_model: Optional[shared_messagemodel.MessageModel] = dataclasses.field(default=None)
    r"""json error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    