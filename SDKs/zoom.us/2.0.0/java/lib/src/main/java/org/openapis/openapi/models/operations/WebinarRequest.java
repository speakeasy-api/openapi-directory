/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class WebinarRequest {
    /**
     * Unique Identifier that identifies an occurrence of a recurring webinar. [Recurring webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar) can have a maximum of 50 occurrences. When you create a recurring Webinar using [Create a Webinar API](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinarcreate), you can retrieve the Occurrence ID from the response of the API call.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=occurrence_id")
    public String occurrenceId;
    public WebinarRequest withOccurrenceId(String occurrenceId) {
        this.occurrenceId = occurrenceId;
        return this;
    }
    
    /**
     * Set the value of this field to `true` if you would like to view Webinar details of all previous occurrences of a recurring Webinar.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=show_previous_occurrences")
    public Boolean showPreviousOccurrences;
    public WebinarRequest withShowPreviousOccurrences(Boolean showPreviousOccurrences) {
        this.showPreviousOccurrences = showPreviousOccurrences;
        return this;
    }
    
    /**
     * The webinar ID in "**long**" format(represented as int64 data type in JSON). 
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=webinarId")
    public Long webinarId;
    public WebinarRequest withWebinarId(Long webinarId) {
        this.webinarId = webinarId;
        return this;
    }
    
}
