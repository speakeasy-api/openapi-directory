/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateTextStyleRequest - Update the styling of text in a Shape or Table.
 */
public class UpdateTextStyleRequest {
    /**
     * A location of a single table cell within a table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cellLocation")
    public TableCellLocation cellLocation;

    public UpdateTextStyleRequest withCellLocation(TableCellLocation cellLocation) {
        this.cellLocation = cellLocation;
        return this;
    }
    
    /**
     * The fields that should be updated. At least one field must be specified. The root `style` is implied and should not be specified. A single `"*"` can be used as short-hand for listing every field. For example, to update the text style to bold, set `fields` to `"bold"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    public String fields;

    public UpdateTextStyleRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * The object ID of the shape or table with the text to be styled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectId")
    public String objectId;

    public UpdateTextStyleRequest withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * Represents the styling that can be applied to a TextRun. If this text is contained in a shape with a parent placeholder, then these text styles may be inherited from the parent. Which text styles are inherited depend on the nesting level of lists: * A text run in a paragraph that is not in a list will inherit its text style from the the newline character in the paragraph at the 0 nesting level of the list inside the parent placeholder. * A text run in a paragraph that is in a list will inherit its text style from the newline character in the paragraph at its corresponding nesting level of the list inside the parent placeholder. Inherited text styles are represented as unset fields in this message. If text is contained in a shape without a parent placeholder, unsetting these fields will revert the style to a value matching the defaults in the Slides editor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("style")
    public TextStyle style;

    public UpdateTextStyleRequest withStyle(TextStyle style) {
        this.style = style;
        return this;
    }
    
    /**
     * Specifies a contiguous range of an indexed collection, such as characters in text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textRange")
    public Range textRange;

    public UpdateTextStyleRequest withTextRange(Range textRange) {
        this.textRange = textRange;
        return this;
    }
    
    public UpdateTextStyleRequest(){}
}
