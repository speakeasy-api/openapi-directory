// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteInventoryXAmzTargetEnum
type DeleteInventoryXAmzTargetEnum string

const (
	DeleteInventoryXAmzTargetEnumAmazonSsmDeleteInventory DeleteInventoryXAmzTargetEnum = "AmazonSSM.DeleteInventory"
)

func (e DeleteInventoryXAmzTargetEnum) ToPointer() *DeleteInventoryXAmzTargetEnum {
	return &e
}

func (e *DeleteInventoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.DeleteInventory":
		*e = DeleteInventoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteInventoryXAmzTargetEnum: %v", v)
	}
}

type DeleteInventoryRequest struct {
	DeleteInventoryRequest shared.DeleteInventoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             DeleteInventoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteInventoryResponse struct {
	ContentType string
	// Success
	DeleteInventoryResult *shared.DeleteInventoryResult
	// InternalServerError
	InternalServerError interface{}
	// InvalidDeleteInventoryParametersException
	InvalidDeleteInventoryParametersException interface{}
	// InvalidInventoryRequestException
	InvalidInventoryRequestException interface{}
	// InvalidOptionException
	InvalidOptionException interface{}
	// InvalidTypeNameException
	InvalidTypeNameException interface{}
	StatusCode               int
	RawResponse              *http.Response
}
