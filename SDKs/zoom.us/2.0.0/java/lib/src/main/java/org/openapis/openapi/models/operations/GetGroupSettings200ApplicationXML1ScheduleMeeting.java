/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;



public class GetGroupSettings200ApplicationXML1ScheduleMeeting {
    /**
     * Determine how participants can join the audio portion of the meeting.
     */
    
    public String audioType;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withAudioType(String audioType) {
        this.audioType = audioType;
        return this;
    }
    
    /**
     * If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.
     *  
     */
    
    public Boolean embedPasswordInJoinLink;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withEmbedPasswordInJoinLink(Boolean embedPasswordInJoinLink) {
        this.embedPasswordInJoinLink = embedPasswordInJoinLink;
        return this;
    }
    
    /**
     * If join before host option is enabled for a personal meeting, then enforce password requirement.
     * 
     * 
     * **This field will be deprecated in near future.** If you would like to enable this setting, we highly encourage you to use the `require_password_for_pmi_meetings` field.
     * 
     * 
     */
    
    public Boolean forcePmiJbhPassword;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withForcePmiJbhPassword(Boolean forcePmiJbhPassword) {
        this.forcePmiJbhPassword = forcePmiJbhPassword;
        return this;
    }
    
    /**
     * Start meetings with host video on.
     */
    
    public Boolean hostVideo;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withHostVideo(Boolean hostVideo) {
        this.hostVideo = hostVideo;
        return this;
    }
    
    /**
     * Allow participants to join the meeting before the host arrives
     */
    
    public Boolean joinBeforeHost;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withJoinBeforeHost(Boolean joinBeforeHost) {
        this.joinBeforeHost = joinBeforeHost;
        return this;
    }
    
    /**
     * Automatically mute all participants when they join the meeting.
     */
    
    public Boolean muteUponEntry;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withMuteUponEntry(Boolean muteUponEntry) {
        this.muteUponEntry = muteUponEntry;
        return this;
    }
    
    /**
     * Start meetings with participant video on.
     */
    
    public Boolean participantVideo;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withParticipantVideo(Boolean participantVideo) {
        this.participantVideo = participantVideo;
        return this;
    }
    
    /**
     * Personal Meeting Setting.&lt;br&gt;&lt;br&gt;
     * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. &lt;br&gt;&lt;br&gt;
     * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
     * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
     * 
     * 
     * 
     */
    
    public Boolean personalMeeting;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withPersonalMeeting(Boolean personalMeeting) {
        this.personalMeeting = personalMeeting;
        return this;
    }
    
    /**
     * Generate and send new passwords for newly scheduled or edited meetings.
     */
    
    public Boolean pstnPasswordProtected;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withPstnPasswordProtected(Boolean pstnPasswordProtected) {
        this.pstnPasswordProtected = pstnPasswordProtected;
        return this;
    }
    
    /**
     * If enabled, a random password will be generated on the user's end who starts the instant meeting. Other participants will have to enter the password to join the meeting. If you use PMI for your instant meetings, this option will be disabled.
     */
    
    public Boolean requirePasswordForInstantMeetings;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withRequirePasswordForInstantMeetings(Boolean requirePasswordForInstantMeetings) {
        this.requirePasswordForInstantMeetings = requirePasswordForInstantMeetings;
        return this;
    }
    
    /**
     * Indicates whether a password is required for [PMI](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI-) meetings or not. The value can be one of the following:&lt;br&gt;
     * `none`: Do not require password for PMI meetings.&lt;br&gt; 
     * `all`: Require participants to enter password for all PMI enabled meetings.&lt;br&gt; `jbh_only`: Require password only for meetings where the **"join before host"** setting is enabled.
     */
    
    public GetGroupSettings200ApplicationXML1ScheduleMeetingRequirePasswordForPmiMeetingsEnum requirePasswordForPmiMeetings;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withRequirePasswordForPmiMeetings(GetGroupSettings200ApplicationXML1ScheduleMeetingRequirePasswordForPmiMeetingsEnum requirePasswordForPmiMeetings) {
        this.requirePasswordForPmiMeetings = requirePasswordForPmiMeetings;
        return this;
    }
    
    /**
     * Require a password for meetings which have already been scheduled
     * 
     */
    
    public Boolean requirePasswordForScheduledMeetings;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withRequirePasswordForScheduledMeetings(Boolean requirePasswordForScheduledMeetings) {
        this.requirePasswordForScheduledMeetings = requirePasswordForScheduledMeetings;
        return this;
    }
    
    /**
     * This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.
     */
    
    public Boolean requirePasswordForSchedulingNewMeetings;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withRequirePasswordForSchedulingNewMeetings(Boolean requirePasswordForSchedulingNewMeetings) {
        this.requirePasswordForSchedulingNewMeetings = requirePasswordForSchedulingNewMeetings;
        return this;
    }
    
    /**
     * Receive desktop notification for upcoming meetings.
     */
    
    public Boolean upcomingMeetingReminder;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withUpcomingMeetingReminder(Boolean upcomingMeetingReminder) {
        this.upcomingMeetingReminder = upcomingMeetingReminder;
        return this;
    }
    
    /**
     * Indicates whether PMI is enabled for all instant meetings or not.
     */
    
    public Boolean usePmiForInstantMeetings;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withUsePmiForInstantMeetings(Boolean usePmiForInstantMeetings) {
        this.usePmiForInstantMeetings = usePmiForInstantMeetings;
        return this;
    }
    
    /**
     * Indicates whether PMI is enabled for all scheduled meetings or not.
     */
    
    public Boolean usePmiForScheduleMeetings;
    public GetGroupSettings200ApplicationXML1ScheduleMeeting withUsePmiForScheduleMeetings(Boolean usePmiForScheduleMeetings) {
        this.usePmiForScheduleMeetings = usePmiForScheduleMeetings;
        return this;
    }
    
}
