<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Request - The request that contains the vehicle routing problem to be solved.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Request
{
    /**
     * Use `objectives` instead.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Algorithm $algorithm
     */
	#[\JMS\Serializer\Annotation\SerializedName('algorithm')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Algorithm')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Algorithm $algorithm = null;
    
    /**
     * Specifies general configurations that are taken into account when solving the vehicle routing problem.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Configuration $configuration
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Configuration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Configuration $configuration = null;
    
    /**
     * Specifies your own tranport time and distance matrices.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CostMatrix> $costMatrices
     */
	#[\JMS\Serializer\Annotation\SerializedName('cost_matrices')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CostMatrix>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $costMatrices = null;
    
    /**
     * Specifies an objective function. The vehicle routing problem is solved in such a way that this objective function is minimized.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Objective> $objectives
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectives')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Objective>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $objectives = null;
    
    /**
     * Defines additional relationships between orders.
     * 
     * @var ?array<mixed> $relations
     */
	#[\JMS\Serializer\Annotation\SerializedName('relations')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $relations = null;
    
    /**
     * Specifies the orders of the type "service". These are, for example, pick-ups, deliveries or other stops that are to be approached by the specified vehicles. Each of these orders contains only one location.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Service> $services
     */
	#[\JMS\Serializer\Annotation\SerializedName('services')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Service>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $services = null;
    
    /**
     * Specifies the available shipments. Each shipment contains a pickup and a delivery stop, which must be processed one after the other.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Shipment> $shipments
     */
	#[\JMS\Serializer\Annotation\SerializedName('shipments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Shipment>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $shipments = null;
    
    /**
     * Specifies the available vehicle types. These types can be assigned to vehicles.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\VehicleType> $vehicleTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('vehicle_types')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VehicleType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $vehicleTypes = null;
    
    /**
     * Specifies the available vehicles.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Vehicle> $vehicles
     */
	#[\JMS\Serializer\Annotation\SerializedName('vehicles')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Vehicle>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $vehicles = null;
    
	public function __construct()
	{
		$this->algorithm = null;
		$this->configuration = null;
		$this->costMatrices = null;
		$this->objectives = null;
		$this->relations = null;
		$this->services = null;
		$this->shipments = null;
		$this->vehicleTypes = null;
		$this->vehicles = null;
	}
}
