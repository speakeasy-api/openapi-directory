"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import assignedtargetingoption as shared_assignedtargetingoption
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreateAssignedTargetingOptionsRequestTargetingTypeEnum(str, Enum):
    r"""Required. Identifies the type of this assigned targeting option."""
    TARGETING_TYPE_UNSPECIFIED = 'TARGETING_TYPE_UNSPECIFIED'
    TARGETING_TYPE_CHANNEL = 'TARGETING_TYPE_CHANNEL'
    TARGETING_TYPE_APP_CATEGORY = 'TARGETING_TYPE_APP_CATEGORY'
    TARGETING_TYPE_APP = 'TARGETING_TYPE_APP'
    TARGETING_TYPE_URL = 'TARGETING_TYPE_URL'
    TARGETING_TYPE_DAY_AND_TIME = 'TARGETING_TYPE_DAY_AND_TIME'
    TARGETING_TYPE_AGE_RANGE = 'TARGETING_TYPE_AGE_RANGE'
    TARGETING_TYPE_REGIONAL_LOCATION_LIST = 'TARGETING_TYPE_REGIONAL_LOCATION_LIST'
    TARGETING_TYPE_PROXIMITY_LOCATION_LIST = 'TARGETING_TYPE_PROXIMITY_LOCATION_LIST'
    TARGETING_TYPE_GENDER = 'TARGETING_TYPE_GENDER'
    TARGETING_TYPE_VIDEO_PLAYER_SIZE = 'TARGETING_TYPE_VIDEO_PLAYER_SIZE'
    TARGETING_TYPE_USER_REWARDED_CONTENT = 'TARGETING_TYPE_USER_REWARDED_CONTENT'
    TARGETING_TYPE_PARENTAL_STATUS = 'TARGETING_TYPE_PARENTAL_STATUS'
    TARGETING_TYPE_CONTENT_INSTREAM_POSITION = 'TARGETING_TYPE_CONTENT_INSTREAM_POSITION'
    TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION = 'TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION'
    TARGETING_TYPE_DEVICE_TYPE = 'TARGETING_TYPE_DEVICE_TYPE'
    TARGETING_TYPE_AUDIENCE_GROUP = 'TARGETING_TYPE_AUDIENCE_GROUP'
    TARGETING_TYPE_BROWSER = 'TARGETING_TYPE_BROWSER'
    TARGETING_TYPE_HOUSEHOLD_INCOME = 'TARGETING_TYPE_HOUSEHOLD_INCOME'
    TARGETING_TYPE_ON_SCREEN_POSITION = 'TARGETING_TYPE_ON_SCREEN_POSITION'
    TARGETING_TYPE_THIRD_PARTY_VERIFIER = 'TARGETING_TYPE_THIRD_PARTY_VERIFIER'
    TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION = 'TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION'
    TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION = 'TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION'
    TARGETING_TYPE_ENVIRONMENT = 'TARGETING_TYPE_ENVIRONMENT'
    TARGETING_TYPE_CARRIER_AND_ISP = 'TARGETING_TYPE_CARRIER_AND_ISP'
    TARGETING_TYPE_OPERATING_SYSTEM = 'TARGETING_TYPE_OPERATING_SYSTEM'
    TARGETING_TYPE_DEVICE_MAKE_MODEL = 'TARGETING_TYPE_DEVICE_MAKE_MODEL'
    TARGETING_TYPE_KEYWORD = 'TARGETING_TYPE_KEYWORD'
    TARGETING_TYPE_NEGATIVE_KEYWORD_LIST = 'TARGETING_TYPE_NEGATIVE_KEYWORD_LIST'
    TARGETING_TYPE_VIEWABILITY = 'TARGETING_TYPE_VIEWABILITY'
    TARGETING_TYPE_CATEGORY = 'TARGETING_TYPE_CATEGORY'
    TARGETING_TYPE_INVENTORY_SOURCE = 'TARGETING_TYPE_INVENTORY_SOURCE'
    TARGETING_TYPE_LANGUAGE = 'TARGETING_TYPE_LANGUAGE'
    TARGETING_TYPE_AUTHORIZED_SELLER_STATUS = 'TARGETING_TYPE_AUTHORIZED_SELLER_STATUS'
    TARGETING_TYPE_GEO_REGION = 'TARGETING_TYPE_GEO_REGION'
    TARGETING_TYPE_INVENTORY_SOURCE_GROUP = 'TARGETING_TYPE_INVENTORY_SOURCE_GROUP'
    TARGETING_TYPE_EXCHANGE = 'TARGETING_TYPE_EXCHANGE'
    TARGETING_TYPE_SUB_EXCHANGE = 'TARGETING_TYPE_SUB_EXCHANGE'
    TARGETING_TYPE_POI = 'TARGETING_TYPE_POI'
    TARGETING_TYPE_BUSINESS_CHAIN = 'TARGETING_TYPE_BUSINESS_CHAIN'
    TARGETING_TYPE_CONTENT_DURATION = 'TARGETING_TYPE_CONTENT_DURATION'
    TARGETING_TYPE_CONTENT_STREAM_TYPE = 'TARGETING_TYPE_CONTENT_STREAM_TYPE'
    TARGETING_TYPE_NATIVE_CONTENT_POSITION = 'TARGETING_TYPE_NATIVE_CONTENT_POSITION'
    TARGETING_TYPE_OMID = 'TARGETING_TYPE_OMID'
    TARGETING_TYPE_AUDIO_CONTENT_TYPE = 'TARGETING_TYPE_AUDIO_CONTENT_TYPE'
    TARGETING_TYPE_CONTENT_GENRE = 'TARGETING_TYPE_CONTENT_GENRE'
    TARGETING_TYPE_YOUTUBE_VIDEO = 'TARGETING_TYPE_YOUTUBE_VIDEO'
    TARGETING_TYPE_YOUTUBE_CHANNEL = 'TARGETING_TYPE_YOUTUBE_CHANNEL'
    TARGETING_TYPE_SESSION_POSITION = 'TARGETING_TYPE_SESSION_POSITION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAssignedTargetingOptionsRequestInput:
    r"""A request listing which assigned targeting options of a given targeting type should be created and added."""
    
    assigned_targeting_options: Optional[list[shared_assignedtargetingoption.AssignedTargetingOptionInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assignedTargetingOptions'), 'exclude': lambda f: f is None }})
    r"""Required. The assigned targeting options to create and add."""  
    targeting_type: Optional[CreateAssignedTargetingOptionsRequestTargetingTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetingType'), 'exclude': lambda f: f is None }})
    r"""Required. Identifies the type of this assigned targeting option."""  
    