// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MessagesWebhooksEndpointTypeEnum string

const (
	MessagesWebhooksEndpointTypeEnumInboundURL MessagesWebhooksEndpointTypeEnum = "inbound_url"
	MessagesWebhooksEndpointTypeEnumStatusURL  MessagesWebhooksEndpointTypeEnum = "status_url"
)

func (e *MessagesWebhooksEndpointTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "inbound_url":
		fallthrough
	case "status_url":
		*e = MessagesWebhooksEndpointTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MessagesWebhooksEndpointTypeEnum: %s", s)
	}
}

// MessagesWebhooksHTTPMethodEnum - The HTTP method used to send data to the `inbound_url` or `status_url`. Default is POST.
type MessagesWebhooksHTTPMethodEnum string

const (
	MessagesWebhooksHTTPMethodEnumGet  MessagesWebhooksHTTPMethodEnum = "GET"
	MessagesWebhooksHTTPMethodEnumPost MessagesWebhooksHTTPMethodEnum = "POST"
)

func (e *MessagesWebhooksHTTPMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GET":
		fallthrough
	case "POST":
		*e = MessagesWebhooksHTTPMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MessagesWebhooksHTTPMethodEnum: %s", s)
	}
}

type MessagesWebhooks struct {
	// `inbound_url`: The URL where inbound messages are delivered. `status_url`: The URL where message status is delivered.
	Endpoint     string                           `json:"endpoint"`
	EndpointType MessagesWebhooksEndpointTypeEnum `json:"endpoint_type"`
	// The HTTP method used to send data to the `inbound_url` or `status_url`. Default is POST.
	HTTPMethod MessagesWebhooksHTTPMethodEnum `json:"http_method"`
}

// Messages - The Nexmo product that you access with this application.
type Messages struct {
	Webhooks []MessagesWebhooks `json:"webhooks,omitempty"`
}
