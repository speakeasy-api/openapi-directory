<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PermissionInput - A permission for a file.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PermissionInput
{
    /**
     * Additional roles for this user. Only commenter is currently allowed, though more may be supported in the future.
     * 
     * @var ?array<string> $additionalRoles
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalRoles')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalRoles = null;
    
    /**
     * Deprecated.
     * 
     * @var ?string $authKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('authKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authKey = null;
    
    /**
     * Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.
     * 
     * @var ?bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleted = null;
    
    /**
     * The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain.
     * 
     * @var ?string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $domain = null;
    
    /**
     * The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group.
     * 
     * @var ?string $emailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $emailAddress = null;
    
    /**
     * The ETag of the permission.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions:  
     * 
     * - They cannot be set on shared drive items 
     * - They can only be set on user and group permissions 
     * - The date must be in the future 
     * - The date cannot be more than a year in the future
     * 
     * @var ?\DateTime $expirationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('expirationDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expirationDate = null;
    
    /**
     * The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * This is always drive#permission.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The name for this permission.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Whether the account associated with this permission is a pending owner. Only populated for user type permissions for files that are not in a shared drive.
     * 
     * @var ?bool $pendingOwner
     */
	#[\JMS\Serializer\Annotation\SerializedName('pendingOwner')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $pendingOwner = null;
    
    /**
     * A link to the profile photo, if available.
     * 
     * @var ?string $photoLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('photoLink')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $photoLink = null;
    
    /**
     * The primary role for this user. While new values may be supported in the future, the following are currently allowed:  
     * 
     * - owner 
     * - organizer 
     * - fileOrganizer 
     * - writer 
     * - reader
     * 
     * @var ?string $role
     */
	#[\JMS\Serializer\Annotation\SerializedName('role')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $role = null;
    
    /**
     * A link back to this permission.
     * 
     * @var ?string $selfLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfLink')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selfLink = null;
    
    /**
     * The account type. Allowed values are:  
     * 
     * - user 
     * - group 
     * - domain 
     * - anyone
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
    /**
     * Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value.
     * 
     * @var ?string $view
     */
	#[\JMS\Serializer\Annotation\SerializedName('view')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $view = null;
    
    /**
     * Whether the link is required for this permission.
     * 
     * @var ?bool $withLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('withLink')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $withLink = null;
    
	public function __construct()
	{
		$this->additionalRoles = null;
		$this->authKey = null;
		$this->deleted = null;
		$this->domain = null;
		$this->emailAddress = null;
		$this->etag = null;
		$this->expirationDate = null;
		$this->id = null;
		$this->kind = null;
		$this->name = null;
		$this->pendingOwner = null;
		$this->photoLink = null;
		$this->role = null;
		$this->selfLink = null;
		$this->type = null;
		$this->value = null;
		$this->view = null;
		$this->withLink = null;
	}
}
