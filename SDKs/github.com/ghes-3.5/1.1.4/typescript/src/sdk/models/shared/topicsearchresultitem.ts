/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SearchResultTextMatches } from "./searchresulttextmatches";
import { Expose, Transform, Type } from "class-transformer";

export class TopicSearchResultItemAliasesTopicRelation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relation_type" })
  relationType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_id" })
  topicId?: number;
}

export class TopicSearchResultItemAliases extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "topic_relation" })
  @Type(() => TopicSearchResultItemAliasesTopicRelation)
  topicRelation?: TopicSearchResultItemAliasesTopicRelation;
}

export class TopicSearchResultItemRelatedTopicRelation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relation_type" })
  relationType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_id" })
  topicId?: number;
}

export class TopicSearchResultItemRelated extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "topic_relation" })
  @Type(() => TopicSearchResultItemRelatedTopicRelation)
  topicRelation?: TopicSearchResultItemRelatedTopicRelation;
}

/**
 * Topic Search Result Item
 */
export class TopicSearchResultItem extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: TopicSearchResultItemAliases })
  @Expose({ name: "aliases" })
  @Type(() => TopicSearchResultItemAliases)
  aliases?: TopicSearchResultItemAliases[];

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy: string;

  @SpeakeasyMetadata()
  @Expose({ name: "curated" })
  curated: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "featured" })
  featured: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "logo_url" })
  logoUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: TopicSearchResultItemRelated })
  @Expose({ name: "related" })
  @Type(() => TopicSearchResultItemRelated)
  related?: TopicSearchResultItemRelated[];

  @SpeakeasyMetadata()
  @Expose({ name: "released" })
  released: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repository_count" })
  repositoryCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score: number;

  @SpeakeasyMetadata()
  @Expose({ name: "short_description" })
  shortDescription: string;

  @SpeakeasyMetadata({ elemType: SearchResultTextMatches })
  @Expose({ name: "text_matches" })
  @Type(() => SearchResultTextMatches)
  textMatches?: SearchResultTextMatches[];

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
