<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Channel - A user who joins a conversation as a member can have one channel per membership type. Channels can be `app`, `phone`, `sip`, `websocket`, or `vbc`
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Channel
{
	#[\JMS\Serializer\Annotation\SerializedName('from')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $from = null;
    
    /**
     * The id of the leg. rtc_id and call_id are leg id
     * 
     * @var ?string $legId
     */
	#[\JMS\Serializer\Annotation\SerializedName('leg_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $legId = null;
    
    /**
     * Leg ids associated with this Channel. The first item in the array represents the main active Leg. The second item, if exists, represents a screen-share Leg.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ChannelLegIds> $legIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('leg_ids')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ChannelLegIds>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $legIds = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('to')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $to = null;
    
    /**
     * Channel type
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChannelTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ChannelTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChannelTypeEnum $type = null;
    
	public function __construct()
	{
		$this->from = null;
		$this->legId = null;
		$this->legIds = null;
		$this->to = null;
		$this->type = null;
	}
}
