<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PerformanceSample - Performance data sample.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PerformanceSample
{
    /**
     * CPU usage sample.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CpuUsageSample $cpu
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpu')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CpuUsageSample')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CpuUsageSample $cpu = null;
    
    /**
     * Disk usage sample. Values are across all disks.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DiskUsageSample $disk
     */
	#[\JMS\Serializer\Annotation\SerializedName('disk')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DiskUsageSample')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DiskUsageSample $disk = null;
    
    /**
     * Memory usage sample.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MemoryUsageSample $memory
     */
	#[\JMS\Serializer\Annotation\SerializedName('memory')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MemoryUsageSample')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MemoryUsageSample $memory = null;
    
    /**
     * Network usage sample. Values are across all network interfaces.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkUsageSample $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NetworkUsageSample')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkUsageSample $network = null;
    
    /**
     * Time the sample was collected.
     * 
     * @var ?string $sampleTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('sampleTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sampleTime = null;
    
	public function __construct()
	{
		$this->cpu = null;
		$this->disk = null;
		$this->memory = null;
		$this->network = null;
		$this->sampleTime = null;
	}
}
