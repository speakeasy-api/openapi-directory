"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpellCheckResponseTokens:
    
    offset: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offset'), 'exclude': lambda f: f is None }})
    r"""The zero-based offset from the beginning of the text query string to the word that is misspelled"""  
    suggestion: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestion'), 'exclude': lambda f: f is None }})
    r"""A word that corrects the spelling error"""  
    token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token'), 'exclude': lambda f: f is None }})
    r"""The misspelled word"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpellCheckResponse:
    r"""OK"""
    
    corrected_text_html: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('corrected_text_html') }})
    r"""The corrected text for the entire search term (multiple words/tokens), where misspelled tokens are replaced with the correct texts and html tags <b><i>"""  
    tokens: list[SpellCheckResponseTokens] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokens') }})
    r"""The word in the text query string that is not spelled correctly"""  
    