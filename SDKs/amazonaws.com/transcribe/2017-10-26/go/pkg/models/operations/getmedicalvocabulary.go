// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetMedicalVocabularyXAmzTargetEnum
type GetMedicalVocabularyXAmzTargetEnum string

const (
	GetMedicalVocabularyXAmzTargetEnumTranscribeGetMedicalVocabulary GetMedicalVocabularyXAmzTargetEnum = "Transcribe.GetMedicalVocabulary"
)

func (e GetMedicalVocabularyXAmzTargetEnum) ToPointer() *GetMedicalVocabularyXAmzTargetEnum {
	return &e
}

func (e *GetMedicalVocabularyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Transcribe.GetMedicalVocabulary":
		*e = GetMedicalVocabularyXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMedicalVocabularyXAmzTargetEnum: %v", v)
	}
}

type GetMedicalVocabularyRequest struct {
	GetMedicalVocabularyRequest shared.GetMedicalVocabularyRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  GetMedicalVocabularyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetMedicalVocabularyResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	GetMedicalVocabularyResponse *shared.GetMedicalVocabularyResponse
	// InternalFailureException
	InternalFailureException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
}
