// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SavingsPlanStateEnum string

const (
	SavingsPlanStateEnumPaymentPending SavingsPlanStateEnum = "payment-pending"
	SavingsPlanStateEnumPaymentFailed  SavingsPlanStateEnum = "payment-failed"
	SavingsPlanStateEnumActive         SavingsPlanStateEnum = "active"
	SavingsPlanStateEnumRetired        SavingsPlanStateEnum = "retired"
	SavingsPlanStateEnumQueued         SavingsPlanStateEnum = "queued"
	SavingsPlanStateEnumQueuedDeleted  SavingsPlanStateEnum = "queued-deleted"
)

func (e *SavingsPlanStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "payment-pending":
		fallthrough
	case "payment-failed":
		fallthrough
	case "active":
		fallthrough
	case "retired":
		fallthrough
	case "queued":
		fallthrough
	case "queued-deleted":
		*e = SavingsPlanStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SavingsPlanStateEnum: %s", s)
	}
}
