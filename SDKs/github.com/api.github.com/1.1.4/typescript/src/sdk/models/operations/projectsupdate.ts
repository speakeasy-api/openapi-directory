/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The baseline permission that all organization members have on this project
 */
export enum ProjectsUpdateRequestBodyOrganizationPermissionEnum {
  Read = "read",
  Write = "write",
  Admin = "admin",
  None = "none",
}

export class ProjectsUpdateRequestBody extends SpeakeasyBase {
  /**
   * Body of the project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: string;

  /**
   * Name of the project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The baseline permission that all organization members have on this project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization_permission" })
  organizationPermission?: ProjectsUpdateRequestBodyOrganizationPermissionEnum;

  /**
   * Whether or not this project can be seen by everyone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "private" })
  private?: boolean;

  /**
   * State of the project; either 'open' or 'closed'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;
}

export class ProjectsUpdateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: ProjectsUpdateRequestBody;

  /**
   * The unique identifier of the project.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project_id",
  })
  projectId: number;
}

/**
 * Forbidden
 */
export class ProjectsUpdate403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "documentation_url" })
  documentationUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  errors?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class ProjectsUpdateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  project?: shared.Project;

  /**
   * Forbidden
   */
  @SpeakeasyMetadata()
  projectsUpdate403ApplicationJSONObject?: ProjectsUpdate403ApplicationJSON;

  /**
   * Validation failed, or the endpoint has been spammed.
   */
  @SpeakeasyMetadata()
  validationErrorSimple?: shared.ValidationErrorSimple;
}
