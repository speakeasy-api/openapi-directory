// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventEnumLevelEnum string

const (
	EventEnumLevelEnumUnknown EventEnumLevelEnum = "UNKNOWN"
	EventEnumLevelEnumDebug   EventEnumLevelEnum = "DEBUG"
	EventEnumLevelEnumInfo    EventEnumLevelEnum = "INFO"
	EventEnumLevelEnumWarning EventEnumLevelEnum = "WARNING"
	EventEnumLevelEnumError   EventEnumLevelEnum = "ERROR"
)

func (e EventEnumLevelEnum) ToPointer() *EventEnumLevelEnum {
	return &e
}

func (e *EventEnumLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "DEBUG":
		fallthrough
	case "INFO":
		fallthrough
	case "WARNING":
		fallthrough
	case "ERROR":
		*e = EventEnumLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventEnumLevelEnum: %v", v)
	}
}
