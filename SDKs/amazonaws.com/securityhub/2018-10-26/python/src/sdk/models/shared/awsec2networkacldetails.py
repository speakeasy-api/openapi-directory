"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsec2networkaclassociation as shared_awsec2networkaclassociation
from ..shared import awsec2networkaclentry as shared_awsec2networkaclentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsEc2NetworkACLDetails:
    r"""Contains details about an Amazon EC2 network access control list (ACL)."""
    
    associations: Optional[list[shared_awsec2networkaclassociation.AwsEc2NetworkACLAssociation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Associations'), 'exclude': lambda f: f is None }})  
    entries: Optional[list[shared_awsec2networkaclentry.AwsEc2NetworkACLEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Entries'), 'exclude': lambda f: f is None }})  
    is_default: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsDefault'), 'exclude': lambda f: f is None }})  
    network_acl_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NetworkAclId'), 'exclude': lambda f: f is None }})  
    owner_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OwnerId'), 'exclude': lambda f: f is None }})  
    vpc_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcId'), 'exclude': lambda f: f is None }})  
    