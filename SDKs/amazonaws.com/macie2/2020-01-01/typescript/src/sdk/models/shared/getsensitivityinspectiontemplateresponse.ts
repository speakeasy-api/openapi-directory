/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SensitivityInspectionTemplateExcludes } from "./sensitivityinspectiontemplateexcludes";
import { SensitivityInspectionTemplateIncludes } from "./sensitivityinspectiontemplateincludes";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class GetSensitivityInspectionTemplateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "excludes" })
  @Type(() => SensitivityInspectionTemplateExcludes)
  excludes?: SensitivityInspectionTemplateExcludes;

  @SpeakeasyMetadata()
  @Expose({ name: "includes" })
  @Type(() => SensitivityInspectionTemplateIncludes)
  includes?: SensitivityInspectionTemplateIncludes;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sensitivityInspectionTemplateId" })
  sensitivityInspectionTemplateId?: string;
}
