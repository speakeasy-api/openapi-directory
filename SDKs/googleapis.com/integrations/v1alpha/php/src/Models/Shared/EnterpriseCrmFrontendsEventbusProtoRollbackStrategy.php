<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EnterpriseCrmFrontendsEventbusProtoRollbackStrategy - Next available id: 4
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EnterpriseCrmFrontendsEventbusProtoRollbackStrategy
{
    /**
     * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoEventParameters $parameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameters')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoEventParameters')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmFrontendsEventbusProtoEventParameters $parameters = null;
    
    /**
     * Required. This is the name of the task that needs to be executed upon rollback of this task.
     * 
     * @var ?string $rollbackTaskImplementationClassName
     */
	#[\JMS\Serializer\Annotation\SerializedName('rollbackTaskImplementationClassName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rollbackTaskImplementationClassName = null;
    
    /**
     * Required. These are the tasks numbers of the tasks whose `rollback_strategy.rollback_task_implementation_class_name` needs to be executed upon failure of this task.
     * 
     * @var ?array<string> $taskNumbersToRollback
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskNumbersToRollback')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taskNumbersToRollback = null;
    
	public function __construct()
	{
		$this->parameters = null;
		$this->rollbackTaskImplementationClassName = null;
		$this->taskNumbersToRollback = null;
	}
}
