/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetTranscriptByIdRequest extends SpeakeasyBase {
  /**
   * MIME type specifying the transcription output format
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept?: shared.AcceptTranscriptEnum;

  /**
   * Rev.ai API Job Id
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

/**
 * Problem details object returned on errors
 */
export class GetTranscriptById409ApplicationProblemPlusJson extends SpeakeasyBase {
  /**
   * Allowed values for this request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowed_values" })
  allowedValues?: string[];

  /**
   * Value passed in given request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current_value" })
  currentValue?: string;

  /**
   * Human-readable explanation specific to this occurrence of the problem
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * HTTP status code of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: number;

  /**
   * Short, human-readable summary of the problem type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * URI that identifies the problem
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Problem details object returned on errors
 */
export class GetTranscriptById406ApplicationProblemPlusJson extends SpeakeasyBase {
  /**
   * Allowed values for this request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowed_values" })
  allowedValues?: string[];

  /**
   * Value passed in given request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current_value" })
  currentValue?: string;

  /**
   * Human-readable explanation specific to this occurrence of the problem
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * HTTP status code of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: number;

  /**
   * Short, human-readable summary of the problem type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * URI that identifies the problem
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Problem details object returned on errors
 */
export class GetTranscriptById404ApplicationProblemPlusJson extends SpeakeasyBase {
  /**
   * HTTP status code of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: number;

  /**
   * Short, human-readable summary of the problem type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * URI that identifies the problem
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Request Unauthorized
 *
 * @remarks
 * ***
 * Caused by an old or invalid [access token](#section/Authentication/Access-Token), try regenerating your token on your [access token page](https://rev.ai/access_token).
 *
 */
export class GetTranscriptById401ApplicationProblemPlusJson extends SpeakeasyBase {
  /**
   * HTTP status code of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: number;

  /**
   * Short, human-readable summary of the problem type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

export class GetTranscriptByIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Request Unauthorized
   *
   * @remarks
   * ***
   * Caused by an old or invalid [access token](#section/Authentication/Access-Token), try regenerating your token on your [access token page](https://rev.ai/access_token).
   *
   */
  @SpeakeasyMetadata()
  getTranscriptById401ApplicationProblemPlusJsonObject?: GetTranscriptById401ApplicationProblemPlusJson;

  /**
   * Job Not Found
   */
  @SpeakeasyMetadata()
  getTranscriptById404ApplicationProblemPlusJsonObject?: GetTranscriptById404ApplicationProblemPlusJson;

  /**
   * Invalid Transcript Format
   */
  @SpeakeasyMetadata()
  getTranscriptById406ApplicationProblemPlusJsonObject?: GetTranscriptById406ApplicationProblemPlusJson;

  /**
   * Invalid Job State
   *
   * @remarks
   * ***
   * In case of failure, more details can be found at [`GET /jobs/{id}`](#operation/GetJobById)
   *
   */
  @SpeakeasyMetadata()
  getTranscriptById409ApplicationProblemPlusJsonObject?: GetTranscriptById409ApplicationProblemPlusJson;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Rev.ai API Transcript
   *
   * @remarks
   * ***
   * Note: Transcript output format is required in the Accept header. Output can either be in Rev's JSON format or plaintext.
   *
   */
  @SpeakeasyMetadata()
  transcript?: shared.Transcript;

  /**
   * Rev.ai API Transcript
   *
   * @remarks
   * ***
   * Note: Transcript output format is required in the Accept header. Output can either be in Rev's JSON format or plaintext.
   *
   */
  @SpeakeasyMetadata()
  transcriptText?: string;
}
