"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import codegennodearg as shared_codegennodearg
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CodeGenNode:
    r"""Represents a node in a directed acyclic graph (DAG)"""
    
    args: list[shared_codegennodearg.CodeGenNodeArg] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Args') }})  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id') }})  
    node_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NodeType') }})  
    line_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LineNumber'), 'exclude': lambda f: f is None }})  
    