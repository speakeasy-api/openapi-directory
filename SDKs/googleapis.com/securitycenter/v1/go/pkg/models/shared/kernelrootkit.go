// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// KernelRootkit - Kernel mode rootkit signatures.
type KernelRootkit struct {
	// Rootkit name, when available.
	Name *string `json:"name,omitempty"`
	// True if unexpected modifications of kernel code memory are present.
	UnexpectedCodeModification *bool `json:"unexpectedCodeModification,omitempty"`
	// True if `ftrace` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.
	UnexpectedFtraceHandler *bool `json:"unexpectedFtraceHandler,omitempty"`
	// True if interrupt handlers that are are not in the expected kernel or module code regions are present.
	UnexpectedInterruptHandler *bool `json:"unexpectedInterruptHandler,omitempty"`
	// True if kernel code pages that are not in the expected kernel or module code regions are present.
	UnexpectedKernelCodePages *bool `json:"unexpectedKernelCodePages,omitempty"`
	// True if `kprobe` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.
	UnexpectedKprobeHandler *bool `json:"unexpectedKprobeHandler,omitempty"`
	// True if unexpected processes in the scheduler run queue are present. Such processes are in the run queue, but not in the process task list.
	UnexpectedProcessesInRunqueue *bool `json:"unexpectedProcessesInRunqueue,omitempty"`
	// True if unexpected modifications of kernel read-only data memory are present.
	UnexpectedReadOnlyDataModification *bool `json:"unexpectedReadOnlyDataModification,omitempty"`
	// True if system call handlers that are are not in the expected kernel or module code regions are present.
	UnexpectedSystemCallHandler *bool `json:"unexpectedSystemCallHandler,omitempty"`
}
