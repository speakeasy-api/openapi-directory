// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CompressionFormatEnum string

const (
	CompressionFormatEnumUncompressed CompressionFormatEnum = "UNCOMPRESSED"
	CompressionFormatEnumGzip         CompressionFormatEnum = "GZIP"
	CompressionFormatEnumZip          CompressionFormatEnum = "ZIP"
	CompressionFormatEnumSnappy       CompressionFormatEnum = "Snappy"
	CompressionFormatEnumHadoopSnappy CompressionFormatEnum = "HADOOP_SNAPPY"
)

func (e CompressionFormatEnum) ToPointer() *CompressionFormatEnum {
	return &e
}

func (e *CompressionFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNCOMPRESSED":
		fallthrough
	case "GZIP":
		fallthrough
	case "ZIP":
		fallthrough
	case "Snappy":
		fallthrough
	case "HADOOP_SNAPPY":
		*e = CompressionFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CompressionFormatEnum: %v", v)
	}
}
