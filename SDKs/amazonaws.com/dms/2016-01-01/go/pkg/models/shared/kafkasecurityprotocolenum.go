// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type KafkaSecurityProtocolEnum string

const (
	KafkaSecurityProtocolEnumPlaintext         KafkaSecurityProtocolEnum = "plaintext"
	KafkaSecurityProtocolEnumSslAuthentication KafkaSecurityProtocolEnum = "ssl-authentication"
	KafkaSecurityProtocolEnumSslEncryption     KafkaSecurityProtocolEnum = "ssl-encryption"
	KafkaSecurityProtocolEnumSaslSsl           KafkaSecurityProtocolEnum = "sasl-ssl"
)

func (e KafkaSecurityProtocolEnum) ToPointer() *KafkaSecurityProtocolEnum {
	return &e
}

func (e *KafkaSecurityProtocolEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "plaintext":
		fallthrough
	case "ssl-authentication":
		fallthrough
	case "ssl-encryption":
		fallthrough
	case "sasl-ssl":
		*e = KafkaSecurityProtocolEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for KafkaSecurityProtocolEnum: %v", v)
	}
}
