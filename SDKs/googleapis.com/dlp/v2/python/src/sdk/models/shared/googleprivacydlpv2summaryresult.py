"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GooglePrivacyDlpV2SummaryResultCodeEnum(str, Enum):
    r"""Outcome of the transformation."""
    TRANSFORMATION_RESULT_CODE_UNSPECIFIED = 'TRANSFORMATION_RESULT_CODE_UNSPECIFIED'
    SUCCESS = 'SUCCESS'
    ERROR = 'ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2SummaryResult:
    r"""A collection that informs the user the number of times a particular `TransformationResultCode` and error details occurred."""
    
    code: Optional[GooglePrivacyDlpV2SummaryResultCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""Outcome of the transformation."""  
    count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""Number of transformations counted by this result."""  
    details: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('details'), 'exclude': lambda f: f is None }})
    r"""A place for warnings or errors to show up if a transformation didn't work as expected."""  
    