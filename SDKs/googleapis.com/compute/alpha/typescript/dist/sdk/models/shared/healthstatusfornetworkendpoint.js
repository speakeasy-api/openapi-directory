"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HealthStatusForNetworkEndpoint = exports.HealthStatusForNetworkEndpointIpv6HealthStateEnum = exports.HealthStatusForNetworkEndpointHealthStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
var backendservicereference_1 = require("./backendservicereference");
var forwardingrulereference_1 = require("./forwardingrulereference");
var healthcheckreference_1 = require("./healthcheckreference");
var healthcheckservicereference_1 = require("./healthcheckservicereference");
var class_transformer_1 = require("class-transformer");
/**
 * Health state of the network endpoint determined based on the health checks configured.
 */
var HealthStatusForNetworkEndpointHealthStateEnum;
(function (HealthStatusForNetworkEndpointHealthStateEnum) {
    HealthStatusForNetworkEndpointHealthStateEnum["Draining"] = "DRAINING";
    HealthStatusForNetworkEndpointHealthStateEnum["Healthy"] = "HEALTHY";
    HealthStatusForNetworkEndpointHealthStateEnum["Unhealthy"] = "UNHEALTHY";
    HealthStatusForNetworkEndpointHealthStateEnum["Unknown"] = "UNKNOWN";
})(HealthStatusForNetworkEndpointHealthStateEnum = exports.HealthStatusForNetworkEndpointHealthStateEnum || (exports.HealthStatusForNetworkEndpointHealthStateEnum = {}));
/**
 * Health state of the ipv6 network endpoint determined based on the health checks configured.
 */
var HealthStatusForNetworkEndpointIpv6HealthStateEnum;
(function (HealthStatusForNetworkEndpointIpv6HealthStateEnum) {
    HealthStatusForNetworkEndpointIpv6HealthStateEnum["Draining"] = "DRAINING";
    HealthStatusForNetworkEndpointIpv6HealthStateEnum["Healthy"] = "HEALTHY";
    HealthStatusForNetworkEndpointIpv6HealthStateEnum["Unhealthy"] = "UNHEALTHY";
    HealthStatusForNetworkEndpointIpv6HealthStateEnum["Unknown"] = "UNKNOWN";
})(HealthStatusForNetworkEndpointIpv6HealthStateEnum = exports.HealthStatusForNetworkEndpointIpv6HealthStateEnum || (exports.HealthStatusForNetworkEndpointIpv6HealthStateEnum = {}));
var HealthStatusForNetworkEndpoint = /** @class */ (function (_super) {
    __extends(HealthStatusForNetworkEndpoint, _super);
    function HealthStatusForNetworkEndpoint() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "backendService" }),
        (0, class_transformer_1.Type)(function () { return backendservicereference_1.BackendServiceReference; }),
        __metadata("design:type", backendservicereference_1.BackendServiceReference)
    ], HealthStatusForNetworkEndpoint.prototype, "backendService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "forwardingRule" }),
        (0, class_transformer_1.Type)(function () { return forwardingrulereference_1.ForwardingRuleReference; }),
        __metadata("design:type", forwardingrulereference_1.ForwardingRuleReference)
    ], HealthStatusForNetworkEndpoint.prototype, "forwardingRule", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "healthCheck" }),
        (0, class_transformer_1.Type)(function () { return healthcheckreference_1.HealthCheckReference; }),
        __metadata("design:type", healthcheckreference_1.HealthCheckReference)
    ], HealthStatusForNetworkEndpoint.prototype, "healthCheck", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "healthCheckService" }),
        (0, class_transformer_1.Type)(function () { return healthcheckservicereference_1.HealthCheckServiceReference; }),
        __metadata("design:type", healthcheckservicereference_1.HealthCheckServiceReference)
    ], HealthStatusForNetworkEndpoint.prototype, "healthCheckService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "healthState" }),
        __metadata("design:type", String)
    ], HealthStatusForNetworkEndpoint.prototype, "healthState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipv6HealthState" }),
        __metadata("design:type", String)
    ], HealthStatusForNetworkEndpoint.prototype, "ipv6HealthState", void 0);
    return HealthStatusForNetworkEndpoint;
}(utils_1.SpeakeasyBase));
exports.HealthStatusForNetworkEndpoint = HealthStatusForNetworkEndpoint;
