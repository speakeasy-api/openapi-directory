// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryTableRowsRequestBodyFilterFormula -  An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.
type QueryTableRowsRequestBodyFilterFormula struct {
	ContextRowID *string `json:"contextRowId,omitempty"`
	Formula      *string `json:"formula,omitempty"`
}

type QueryTableRowsRequestBody struct {
	//  An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.
	FilterFormula QueryTableRowsRequestBodyFilterFormula `json:"filterFormula"`
	// The maximum number of rows to return in each page of the results.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// <p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>
	NextToken *string `json:"nextToken,omitempty"`
}

type QueryTableRowsRequest struct {
	RequestBody       QueryTableRowsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// <p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>
	TableID string `pathParam:"style=simple,explode=false,name=tableId"`
	// <p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>
	WorkbookID string `pathParam:"style=simple,explode=false,name=workbookId"`
}

type QueryTableRowsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	QueryTableRowsResult *shared.QueryTableRowsResult
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// RequestTimeoutException
	RequestTimeoutException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
