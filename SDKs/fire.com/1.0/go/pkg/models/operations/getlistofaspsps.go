// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetListOfAspspsQueryParams struct {
	// The three letter code for the currency - either `EUR` or `GBP`. Use this to filter the list for banks that can be used to pay in a certain currency.
	Currency *string `queryParam:"style=form,explode=true,name=currency"`
}

type GetListOfAspspsRequest struct {
	QueryParams GetListOfAspspsQueryParams
}

type GetListOfAspspsAspspsAspspCountry struct {
	// The 2-letter code for the country - e.g. `IE`, `GP`...
	Code *string `json:"code,omitempty"`
	// The name of the country
	Description *string `json:"description,omitempty"`
}

type GetListOfAspspsAspspsAspsp struct {
	// The name of the ASPSP / bank.
	Alias *string `json:"alias,omitempty"`
	// The UUID associated with the ASPSP / bank.
	AspspUUID *string                                                                                                  `json:"aspspUuid,omitempty"`
	Country   *GetListOfAspspsAspspsAspspCountry                                                                       `json:"country,omitempty"`
	Currency  *shared.OneaccountsGetResponses200ContentApplication1jsonSchemaPropertiesAccountsItemsPropertiesCurrency `json:"currency,omitempty"`
	// The date the ASPSP / bank was created.
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	// The date the ASPSP / bank was last updated.
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	// A link to the ASPSP / bank's logo in SVG format.
	LogoURL *string `json:"logoUrl,omitempty"`
}

// GetListOfAspspsAspsps - A list of ASPSPs the customers can use to pay a payment.
type GetListOfAspspsAspsps struct {
	Aspsps []GetListOfAspspsAspspsAspsp `json:"aspsps,omitempty"`
	// The total number of ASPSPs in the list.
	Total *int64 `json:"total,omitempty"`
}

type GetListOfAspspsResponse struct {
	// A list of ASPSPs the customers can use to pay a payment.
	//
	Aspsps      *GetListOfAspspsAspsps
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
