/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PagespeedonlinePagespeedapiRunpagespeedRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * The captcha token passed when filling out a captcha.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=captchaToken")
    public String captchaToken;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withCaptchaToken(String captchaToken) {
        this.captchaToken = captchaToken;
        return this;
    }
    
    /**
     * A Lighthouse category to run; if none are given, only Performance category will be run
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=category")
    public PagespeedonlinePagespeedapiRunpagespeedCategoryEnum[] category;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withCategory(PagespeedonlinePagespeedapiRunpagespeedCategoryEnum[] category) {
        this.category = category;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * The locale used to localize formatted results
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=locale")
    public String locale;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withLocale(String locale) {
        this.locale = locale;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * The analysis strategy (desktop or mobile) to use, and desktop is the default
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=strategy")
    public PagespeedonlinePagespeedapiRunpagespeedStrategyEnum strategy;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withStrategy(PagespeedonlinePagespeedapiRunpagespeedStrategyEnum strategy) {
        this.strategy = strategy;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
    /**
     * Required. The URL to fetch and analyze
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=url")
    public String url;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Campaign name for analytics.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=utm_campaign")
    public String utmCampaign;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withUtmCampaign(String utmCampaign) {
        this.utmCampaign = utmCampaign;
        return this;
    }
    
    /**
     * Campaign source for analytics.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=utm_source")
    public String utmSource;
    public PagespeedonlinePagespeedapiRunpagespeedRequest withUtmSource(String utmSource) {
        this.utmSource = utmSource;
        return this;
    }
    
}
