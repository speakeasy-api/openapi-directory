/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FeaturizationConfig - &lt;note&gt; &lt;p&gt;This object belongs to the &lt;a&gt;CreatePredictor&lt;/a&gt; operation. If you created your predictor with &lt;a&gt;CreateAutoPredictor&lt;/a&gt;, see &lt;a&gt;AttributeConfig&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;In a &lt;a&gt;CreatePredictor&lt;/a&gt; operation, the specified algorithm trains a model using the specified dataset group. You can optionally tell the operation to modify data fields prior to training a model. These modifications are referred to as &lt;i&gt;featurization&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;You define featurization using the &lt;code&gt;FeaturizationConfig&lt;/code&gt; object. You specify an array of transformations, one for each field that you want to featurize. You then include the &lt;code&gt;FeaturizationConfig&lt;/code&gt; object in your &lt;code&gt;CreatePredictor&lt;/code&gt; request. Amazon Forecast applies the featurization to the &lt;code&gt;TARGET_TIME_SERIES&lt;/code&gt; and &lt;code&gt;RELATED_TIME_SERIES&lt;/code&gt; datasets before model training.&lt;/p&gt; &lt;p&gt;You can create multiple featurization configurations. For example, you might call the &lt;code&gt;CreatePredictor&lt;/code&gt; operation twice by specifying different featurization configurations.&lt;/p&gt;
 */
public class FeaturizationConfig {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Featurizations")
    public Featurization[] featurizations;
    public FeaturizationConfig withFeaturizations(Featurization[] featurizations) {
        this.featurizations = featurizations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ForecastDimensions")
    public String[] forecastDimensions;
    public FeaturizationConfig withForecastDimensions(String[] forecastDimensions) {
        this.forecastDimensions = forecastDimensions;
        return this;
    }
    
    @JsonProperty("ForecastFrequency")
    public String forecastFrequency;
    public FeaturizationConfig withForecastFrequency(String forecastFrequency) {
        this.forecastFrequency = forecastFrequency;
        return this;
    }
    
}
