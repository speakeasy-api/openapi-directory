/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PurchaseDto - Information of Purchase to create.
 */
public class PurchaseDto {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("acCode")
    public String acCode;

    public PurchaseDto withAcCode(String acCode) {
        this.acCode = acCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("acEntries")
    public AcEntryDto[] acEntries;

    public PurchaseDto withAcEntries(AcEntryDto[] acEntries) {
        this.acEntries = acEntries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bookTranTypeId")
    public Long bookTranTypeId;

    public PurchaseDto withBookTranTypeId(Long bookTranTypeId) {
        this.bookTranTypeId = bookTranTypeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public AcudfValueDto[] customFields;

    public PurchaseDto withCustomFields(AcudfValueDto[] customFields) {
        this.customFields = customFields;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("detailCollection")
    public String[] detailCollection;

    public PurchaseDto withDetailCollection(String[] detailCollection) {
        this.detailCollection = detailCollection;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("entryDate")
    public OffsetDateTime entryDate;

    public PurchaseDto withEntryDate(OffsetDateTime entryDate) {
        this.entryDate = entryDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public PurchaseDto withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDiscrepancyAccepted")
    public Boolean isDiscrepancyAccepted;

    public PurchaseDto withIsDiscrepancyAccepted(Boolean isDiscrepancyAccepted) {
        this.isDiscrepancyAccepted = isDiscrepancyAccepted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("netGoods")
    public Double netGoods;

    public PurchaseDto withNetGoods(Double netGoods) {
        this.netGoods = netGoods;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("netServices")
    public Double netServices;

    public PurchaseDto withNetServices(Double netServices) {
        this.netServices = netServices;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("note")
    public String note;

    public PurchaseDto withNote(String note) {
        this.note = note;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postponedAccounting")
    public Boolean postponedAccounting;

    public PurchaseDto withPostponedAccounting(Boolean postponedAccounting) {
        this.postponedAccounting = postponedAccounting;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("procDate")
    public OffsetDateTime procDate;

    public PurchaseDto withProcDate(OffsetDateTime procDate) {
        this.procDate = procDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public PurchaseDto withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supplierId")
    public Long supplierId;

    public PurchaseDto withSupplierId(Long supplierId) {
        this.supplierId = supplierId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public String timestamp;

    public PurchaseDto withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Double total;

    public PurchaseDto withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalNet")
    public Double totalNet;

    public PurchaseDto withTotalNet(Double totalNet) {
        this.totalNet = totalNet;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalVAT")
    public Double totalVAT;

    public PurchaseDto withTotalVAT(Double totalVAT) {
        this.totalVAT = totalVAT;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unallocated")
    public Double unallocated;

    public PurchaseDto withUnallocated(Double unallocated) {
        this.unallocated = unallocated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unpaid")
    public Double unpaid;

    public PurchaseDto withUnpaid(Double unpaid) {
        this.unpaid = unpaid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vatEntries")
    public VatEntryDto[] vatEntries;

    public PurchaseDto withVatEntries(VatEntryDto[] vatEntries) {
        this.vatEntries = vatEntries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vatTypeId")
    public Long vatTypeId;

    public PurchaseDto withVatTypeId(Long vatTypeId) {
        this.vatTypeId = vatTypeId;
        return this;
    }
    
    public PurchaseDto(){}
}
