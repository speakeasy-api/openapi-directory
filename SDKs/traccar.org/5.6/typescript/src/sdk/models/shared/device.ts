/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * OK
 */
export class Device extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contact" })
  contact?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "geofenceIds" })
  geofenceIds?: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "groupId" })
  groupId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "positionId" })
  positionId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uniqueId" })
  uniqueId?: string;
}
