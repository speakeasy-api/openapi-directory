/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Tag - repository tag
 */
public class Tag {
    /**
     * ID of the user that pushed the tag
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creator")
    public Long creator;
    public Tag withCreator(Long creator) {
        this.creator = creator;
        return this;
    }
    
    /**
     * compressed size (sum of all layers) of the tagged image
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("full_size")
    public Long fullSize;
    public Tag withFullSize(Long fullSize) {
        this.fullSize = fullSize;
        return this;
    }
    
    /**
     * tag ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public Tag withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("images")
    public Image images;
    public Tag withImages(Image images) {
        this.images = images;
        return this;
    }
    
    /**
     * datetime of last update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_updated")
    public String lastUpdated;
    public Tag withLastUpdated(String lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }
    
    /**
     * ID of the last user that updated the tag
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_updater")
    public Long lastUpdater;
    public Tag withLastUpdater(Long lastUpdater) {
        this.lastUpdater = lastUpdater;
        return this;
    }
    
    /**
     * Hub username of the user that updated the tag
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_updater_username")
    public String lastUpdaterUsername;
    public Tag withLastUpdaterUsername(String lastUpdaterUsername) {
        this.lastUpdaterUsername = lastUpdaterUsername;
        return this;
    }
    
    /**
     * name of the tag
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Tag withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * repository ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repository")
    public Long repository;
    public Tag withRepository(Long repository) {
        this.repository = repository;
        return this;
    }
    
    /**
     * whether a tag has been pushed to or pulled in the past month
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public TagStatusEnum status;
    public Tag withStatus(TagStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * datetime of last pull
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag_last_pulled")
    public String tagLastPulled;
    public Tag withTagLastPulled(String tagLastPulled) {
        this.tagLastPulled = tagLastPulled;
        return this;
    }
    
    /**
     * datetime of last push
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag_last_pushed")
    public String tagLastPushed;
    public Tag withTagLastPushed(String tagLastPushed) {
        this.tagLastPushed = tagLastPushed;
        return this;
    }
    
    /**
     * repository API version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("v2")
    public String v2;
    public Tag withV2(String v2) {
        this.v2 = v2;
        return this;
    }
    
}
