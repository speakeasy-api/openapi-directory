// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AbortInfoCauseEnum - Causes that the analysis is aborted.
type AbortInfoCauseEnum string

const (
	AbortInfoCauseEnumCauseUnspecified                AbortInfoCauseEnum = "CAUSE_UNSPECIFIED"
	AbortInfoCauseEnumUnknownNetwork                  AbortInfoCauseEnum = "UNKNOWN_NETWORK"
	AbortInfoCauseEnumUnknownIP                       AbortInfoCauseEnum = "UNKNOWN_IP"
	AbortInfoCauseEnumUnknownProject                  AbortInfoCauseEnum = "UNKNOWN_PROJECT"
	AbortInfoCauseEnumPermissionDenied                AbortInfoCauseEnum = "PERMISSION_DENIED"
	AbortInfoCauseEnumNoSourceLocation                AbortInfoCauseEnum = "NO_SOURCE_LOCATION"
	AbortInfoCauseEnumInvalidArgument                 AbortInfoCauseEnum = "INVALID_ARGUMENT"
	AbortInfoCauseEnumNoExternalIP                    AbortInfoCauseEnum = "NO_EXTERNAL_IP"
	AbortInfoCauseEnumUnintendedDestination           AbortInfoCauseEnum = "UNINTENDED_DESTINATION"
	AbortInfoCauseEnumTraceTooLong                    AbortInfoCauseEnum = "TRACE_TOO_LONG"
	AbortInfoCauseEnumInternalError                   AbortInfoCauseEnum = "INTERNAL_ERROR"
	AbortInfoCauseEnumSourceEndpointNotFound          AbortInfoCauseEnum = "SOURCE_ENDPOINT_NOT_FOUND"
	AbortInfoCauseEnumMismatchedSourceNetwork         AbortInfoCauseEnum = "MISMATCHED_SOURCE_NETWORK"
	AbortInfoCauseEnumDestinationEndpointNotFound     AbortInfoCauseEnum = "DESTINATION_ENDPOINT_NOT_FOUND"
	AbortInfoCauseEnumMismatchedDestinationNetwork    AbortInfoCauseEnum = "MISMATCHED_DESTINATION_NETWORK"
	AbortInfoCauseEnumUnsupported                     AbortInfoCauseEnum = "UNSUPPORTED"
	AbortInfoCauseEnumMismatchedIPVersion             AbortInfoCauseEnum = "MISMATCHED_IP_VERSION"
	AbortInfoCauseEnumGkeKonnectivityProxyUnsupported AbortInfoCauseEnum = "GKE_KONNECTIVITY_PROXY_UNSUPPORTED"
)

func (e *AbortInfoCauseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAUSE_UNSPECIFIED":
		fallthrough
	case "UNKNOWN_NETWORK":
		fallthrough
	case "UNKNOWN_IP":
		fallthrough
	case "UNKNOWN_PROJECT":
		fallthrough
	case "PERMISSION_DENIED":
		fallthrough
	case "NO_SOURCE_LOCATION":
		fallthrough
	case "INVALID_ARGUMENT":
		fallthrough
	case "NO_EXTERNAL_IP":
		fallthrough
	case "UNINTENDED_DESTINATION":
		fallthrough
	case "TRACE_TOO_LONG":
		fallthrough
	case "INTERNAL_ERROR":
		fallthrough
	case "SOURCE_ENDPOINT_NOT_FOUND":
		fallthrough
	case "MISMATCHED_SOURCE_NETWORK":
		fallthrough
	case "DESTINATION_ENDPOINT_NOT_FOUND":
		fallthrough
	case "MISMATCHED_DESTINATION_NETWORK":
		fallthrough
	case "UNSUPPORTED":
		fallthrough
	case "MISMATCHED_IP_VERSION":
		fallthrough
	case "GKE_KONNECTIVITY_PROXY_UNSUPPORTED":
		*e = AbortInfoCauseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AbortInfoCauseEnum: %s", s)
	}
}

// AbortInfo - Details of the final state "abort" and associated resource.
type AbortInfo struct {
	// Causes that the analysis is aborted.
	Cause *AbortInfoCauseEnum `json:"cause,omitempty"`
	// List of project IDs that the user has specified in the request but does not have permission to access network configs. Analysis is aborted in this case with the PERMISSION_DENIED cause.
	ProjectsMissingPermission []string `json:"projectsMissingPermission,omitempty"`
	// URI of the resource that caused the abort.
	ResourceURI *string `json:"resourceUri,omitempty"`
}
