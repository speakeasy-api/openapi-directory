"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import hpoobjective as shared_hpoobjective
from ..shared import hporesourceconfig as shared_hporesourceconfig
from ..shared import hyperparameterranges as shared_hyperparameterranges
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HPOConfig:
    r"""Describes the properties for hyperparameter optimization (HPO)."""
    
    algorithm_hyper_parameter_ranges: Optional[shared_hyperparameterranges.HyperParameterRanges] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('algorithmHyperParameterRanges'), 'exclude': lambda f: f is None }})  
    hpo_objective: Optional[shared_hpoobjective.HPOObjective] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hpoObjective'), 'exclude': lambda f: f is None }})  
    hpo_resource_config: Optional[shared_hporesourceconfig.HPOResourceConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hpoResourceConfig'), 'exclude': lambda f: f is None }})  
    