// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// OrganizationActionsVariableVisibilityEnum - Visibility of a variable
type OrganizationActionsVariableVisibilityEnum string

const (
	OrganizationActionsVariableVisibilityEnumAll      OrganizationActionsVariableVisibilityEnum = "all"
	OrganizationActionsVariableVisibilityEnumPrivate  OrganizationActionsVariableVisibilityEnum = "private"
	OrganizationActionsVariableVisibilityEnumSelected OrganizationActionsVariableVisibilityEnum = "selected"
)

func (e *OrganizationActionsVariableVisibilityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "private":
		fallthrough
	case "selected":
		*e = OrganizationActionsVariableVisibilityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationActionsVariableVisibilityEnum: %s", s)
	}
}

// OrganizationActionsVariable - Organization variable for GitHub Actions.
type OrganizationActionsVariable struct {
	// The date and time at which the variable was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
	CreatedAt time.Time `json:"created_at"`
	// The name of the variable.
	Name                    string  `json:"name"`
	SelectedRepositoriesURL *string `json:"selected_repositories_url,omitempty"`
	// The date and time at which the variable was last updated, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
	UpdatedAt time.Time `json:"updated_at"`
	// The value of the variable.
	Value string `json:"value"`
	// Visibility of a variable
	Visibility OrganizationActionsVariableVisibilityEnum `json:"visibility"`
}
