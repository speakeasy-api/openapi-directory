<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class BankAccount
{
    /**
     * The name of the account
     * 
     * @var ?string $accountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountName = null;
    
    /**
     * The account number
     * 
     * @var ?string $accountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountNumber = null;
    
    /**
     * Fixed amounts (for example, if an employee wants to have $100 of their salary transferred to one account, and the remaining amount to another)
     * 
     * @var ?float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('Amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amount = null;
    
    /**
     * The BSB number of the account
     * 
     * @var ?string $bsb
     */
	#[\JMS\Serializer\Annotation\SerializedName('BSB')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bsb = null;
    
    /**
     * If this account is the Remaining bank account
     * 
     * @var ?bool $remainder
     */
	#[\JMS\Serializer\Annotation\SerializedName('Remainder')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $remainder = null;
    
    /**
     * The text that will appear on your employee's bank statement when they receive payment
     * 
     * @var ?string $statementText
     */
	#[\JMS\Serializer\Annotation\SerializedName('StatementText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statementText = null;
    
	public function __construct()
	{
		$this->accountName = null;
		$this->accountNumber = null;
		$this->amount = null;
		$this->bsb = null;
		$this->remainder = null;
		$this->statementText = null;
	}
}
