"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MemberElectionCreateRequestMemberTypeEnum(str, Enum):
    r"""Type of member electing or waiving coverage"""
    DEPENDENT = 'dependent'
    EMPLOYEE = 'employee'

class MemberElectionCreateRequestStatusEnum(str, Enum):
    r"""Status of the member election on the coverage plan"""
    ENROLLING = 'enrolling'
    WAIVING = 'waiving'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MemberElectionCreateRequest:
    
    member_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('member_id') }})
    r"""Unique identifier of the member in Noyo"""  
    member_type: MemberElectionCreateRequestMemberTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('member_type') }})
    r"""Type of member electing or waiving coverage"""  
    status: MemberElectionCreateRequestStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Status of the member election on the coverage plan"""  
    volume: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volume'), 'exclude': lambda f: f is None }})
    r"""Volume amount requested for the enrolling member"""  
    