// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ExportConfigurationsListSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type ExportConfigurationsListRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum string

const (
	ExportConfigurationsListDefaultApplicationJSONErrorCodeEnumBadRequest          ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	ExportConfigurationsListDefaultApplicationJSONErrorCodeEnumConflict            ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum = "Conflict"
	ExportConfigurationsListDefaultApplicationJSONErrorCodeEnumNotAcceptable       ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	ExportConfigurationsListDefaultApplicationJSONErrorCodeEnumNotFound            ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum = "NotFound"
	ExportConfigurationsListDefaultApplicationJSONErrorCodeEnumInternalServerError ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	ExportConfigurationsListDefaultApplicationJSONErrorCodeEnumUnauthorized        ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	ExportConfigurationsListDefaultApplicationJSONErrorCodeEnumTooManyRequests     ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum) ToPointer() *ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type ExportConfigurationsListDefaultApplicationJSONError struct {
	Code    ExportConfigurationsListDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                      `json:"message"`
}

// ExportConfigurationsListDefaultApplicationJSON - Error code with reason
type ExportConfigurationsListDefaultApplicationJSON struct {
	Error ExportConfigurationsListDefaultApplicationJSONError `json:"error"`
}

type ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum string

const (
	ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnumCrashes     ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum = "crashes"
	ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnumErrors      ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum = "errors"
	ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnumAttachments ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum = "attachments"
	ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnumNoLogs      ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum = "no_logs"
)

func (e ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum) ToPointer() *ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum {
	return &e
}

func (e *ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "crashes":
		fallthrough
	case "errors":
		fallthrough
	case "attachments":
		fallthrough
	case "no_logs":
		*e = ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum: %v", v)
	}
}

// ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum - Type of export configuration
type ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum string

const (
	ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnumBlobStorageConnectionString           ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum = "blob_storage_connection_string"
	ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnumApplicationInsightsInstrumentationKey ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum = "application_insights_instrumentation_key"
	ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnumBlobStorageLinkedSubscription         ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum = "blob_storage_linked_subscription"
	ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnumApplicationInsightsLinkedSubscription ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum = "application_insights_linked_subscription"
)

func (e ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum) ToPointer() *ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum {
	return &e
}

func (e *ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "blob_storage_connection_string":
		fallthrough
	case "application_insights_instrumentation_key":
		fallthrough
	case "blob_storage_linked_subscription":
		fallthrough
	case "application_insights_linked_subscription":
		*e = ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum: %v", v)
	}
}

// ExportConfigurationsList200ApplicationJSONValuesExportConfiguration - Export configuration
type ExportConfigurationsList200ApplicationJSONValuesExportConfiguration struct {
	// Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation.
	Backfill       *bool                                                                                   `json:"backfill,omitempty"`
	ExportEntities []ExportConfigurationsList200ApplicationJSONValuesExportConfigurationExportEntitiesEnum `json:"export_entities,omitempty"`
	// The resource group name on azure
	ResourceGroup *string `json:"resource_group,omitempty"`
	// The resource name on azure
	ResourceName *string `json:"resource_name,omitempty"`
	// Type of export configuration
	Type ExportConfigurationsList200ApplicationJSONValuesExportConfigurationTypeEnum `json:"type"`
}

type ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum string

const (
	ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnumCrashes     ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum = "crashes"
	ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnumErrors      ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum = "errors"
	ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnumAttachments ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum = "attachments"
	ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnumNoLogs      ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum = "no_logs"
)

func (e ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum) ToPointer() *ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum {
	return &e
}

func (e *ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "crashes":
		fallthrough
	case "errors":
		fallthrough
	case "attachments":
		fallthrough
	case "no_logs":
		*e = ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum: %v", v)
	}
}

// ExportConfigurationsList200ApplicationJSONValuesExportTypeEnum - Target resource type of export configuration
type ExportConfigurationsList200ApplicationJSONValuesExportTypeEnum string

const (
	ExportConfigurationsList200ApplicationJSONValuesExportTypeEnumBlobStorage ExportConfigurationsList200ApplicationJSONValuesExportTypeEnum = "BlobStorage"
	ExportConfigurationsList200ApplicationJSONValuesExportTypeEnumAppInsights ExportConfigurationsList200ApplicationJSONValuesExportTypeEnum = "AppInsights"
)

func (e ExportConfigurationsList200ApplicationJSONValuesExportTypeEnum) ToPointer() *ExportConfigurationsList200ApplicationJSONValuesExportTypeEnum {
	return &e
}

func (e *ExportConfigurationsList200ApplicationJSONValuesExportTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BlobStorage":
		fallthrough
	case "AppInsights":
		*e = ExportConfigurationsList200ApplicationJSONValuesExportTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsList200ApplicationJSONValuesExportTypeEnum: %v", v)
	}
}

// ExportConfigurationsList200ApplicationJSONValuesStateEnum - State of the export job
type ExportConfigurationsList200ApplicationJSONValuesStateEnum string

const (
	ExportConfigurationsList200ApplicationJSONValuesStateEnumEnabled  ExportConfigurationsList200ApplicationJSONValuesStateEnum = "Enabled"
	ExportConfigurationsList200ApplicationJSONValuesStateEnumDisabled ExportConfigurationsList200ApplicationJSONValuesStateEnum = "Disabled"
	ExportConfigurationsList200ApplicationJSONValuesStateEnumPending  ExportConfigurationsList200ApplicationJSONValuesStateEnum = "Pending"
	ExportConfigurationsList200ApplicationJSONValuesStateEnumDeleted  ExportConfigurationsList200ApplicationJSONValuesStateEnum = "Deleted"
	ExportConfigurationsList200ApplicationJSONValuesStateEnumInvalid  ExportConfigurationsList200ApplicationJSONValuesStateEnum = "Invalid"
)

func (e ExportConfigurationsList200ApplicationJSONValuesStateEnum) ToPointer() *ExportConfigurationsList200ApplicationJSONValuesStateEnum {
	return &e
}

func (e *ExportConfigurationsList200ApplicationJSONValuesStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Enabled":
		fallthrough
	case "Disabled":
		fallthrough
	case "Pending":
		fallthrough
	case "Deleted":
		fallthrough
	case "Invalid":
		*e = ExportConfigurationsList200ApplicationJSONValuesStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsList200ApplicationJSONValuesStateEnum: %v", v)
	}
}

// ExportConfigurationsList200ApplicationJSONValues - Export configuration result
type ExportConfigurationsList200ApplicationJSONValues struct {
	// Creation time in ISO 8601 format
	CreationTime string `json:"creation_time"`
	// Export configuration
	ExportConfiguration *ExportConfigurationsList200ApplicationJSONValuesExportConfiguration `json:"export_configuration,omitempty"`
	ExportEntities      []ExportConfigurationsList200ApplicationJSONValuesExportEntitiesEnum `json:"export_entities,omitempty"`
	// Target resource type of export configuration
	ExportType ExportConfigurationsList200ApplicationJSONValuesExportTypeEnum `json:"export_type"`
	// Export configuration id
	ID string `json:"id"`
	// Latest time in ISO 8601 format when export completed successfully
	LastRunTime *string `json:"last_run_time,omitempty"`
	// resource group for the storage account/App Insights resource
	ResourceGroup *string `json:"resource_group,omitempty"`
	// Storage accout or Appinsights resource name
	ResourceName *string `json:"resource_name,omitempty"`
	// State of the export job
	State ExportConfigurationsList200ApplicationJSONValuesStateEnum `json:"state"`
	// Additional information about export configuration state
	StateInfo *string `json:"state_info,omitempty"`
}

// ExportConfigurationsList200ApplicationJSON - List of export configurations
type ExportConfigurationsList200ApplicationJSON struct {
	NextLink *string `json:"nextLink,omitempty"`
	// the total count of exports
	Total  *int64                                             `json:"total,omitempty"`
	Values []ExportConfigurationsList200ApplicationJSONValues `json:"values"`
}

type ExportConfigurationsListResponse struct {
	ContentType string
	// List export configurations.
	ExportConfigurationsList200ApplicationJSONObject *ExportConfigurationsList200ApplicationJSON
	// Error code with reason
	ExportConfigurationsListDefaultApplicationJSONObject *ExportConfigurationsListDefaultApplicationJSON
	StatusCode                                           int
	RawResponse                                          *http.Response
}
