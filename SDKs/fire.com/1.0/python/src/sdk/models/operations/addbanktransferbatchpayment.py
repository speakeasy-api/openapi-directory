"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class AddBankTransferBatchPaymentRequestBodyBatchItemBankTransferMode1PayeeTypeEnum(str, Enum):
    r"""Use PAYEE_ID if you are paying existing approved payees (Mode 1)."""
    PAYEE_ID = 'PAYEE_ID'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddBankTransferBatchPaymentRequestBodyBatchItemBankTransferMode1:
    
    amount: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""The value of the transaction"""  
    ican_from: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('icanFrom'), 'exclude': lambda f: f is None }})
    r"""The Fire account ID for the fire.com account the funds are taken from."""  
    my_ref: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('myRef'), 'exclude': lambda f: f is None }})
    r"""The reference on the transaction for your records - not shown to the beneficiary."""  
    payee_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payeeId'), 'exclude': lambda f: f is None }})
    r"""The ID of the existing or automatically created payee"""  
    payee_type: Optional[AddBankTransferBatchPaymentRequestBodyBatchItemBankTransferMode1PayeeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payeeType'), 'exclude': lambda f: f is None }})
    r"""Use PAYEE_ID if you are paying existing approved payees (Mode 1)."""  
    your_ref: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('yourRef'), 'exclude': lambda f: f is None }})
    r"""The reference on the transaction - displayed on the beneficiary bank statement."""  
    
class AddBankTransferBatchPaymentRequestBodyBatchItemBankTransferMode2PayeeTypeEnum(str, Enum):
    r"""Use ACCOUNT_DETAILS if you are providing account numbers/sort codes/IBANs (Mode 2). Specify the account details in the destIban, destAccountHolderName, destNsc or destAccountNumber fields as appropriate."""
    ACCOUNT_DETAILS = 'ACCOUNT_DETAILS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddBankTransferBatchPaymentRequestBodyBatchItemBankTransferMode2:
    
    amount: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""The value of the transaction"""  
    dest_account_holder_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destAccountHolderName'), 'exclude': lambda f: f is None }})
    r"""The destination account holder name"""  
    dest_account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destAccountNumber'), 'exclude': lambda f: f is None }})
    r"""The destination Account Number if a GBP bank transfer"""  
    dest_iban: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destIban'), 'exclude': lambda f: f is None }})
    r"""The destination IBAN if a Euro Bank transfer"""  
    dest_nsc: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destNsc'), 'exclude': lambda f: f is None }})
    r"""The destination Nsc if a GBP bank transfer"""  
    ican_from: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('icanFrom'), 'exclude': lambda f: f is None }})
    r"""The Fire account ID for the fire.com account the funds are taken from."""  
    my_ref: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('myRef'), 'exclude': lambda f: f is None }})
    r"""The reference on the transaction for your records - not shown to the beneficiary."""  
    payee_type: Optional[AddBankTransferBatchPaymentRequestBodyBatchItemBankTransferMode2PayeeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payeeType'), 'exclude': lambda f: f is None }})
    r"""Use ACCOUNT_DETAILS if you are providing account numbers/sort codes/IBANs (Mode 2). Specify the account details in the destIban, destAccountHolderName, destNsc or destAccountNumber fields as appropriate."""  
    your_ref: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('yourRef'), 'exclude': lambda f: f is None }})
    r"""The reference on the transaction - displayed on the beneficiary bank statement."""  
    

@dataclasses.dataclass
class AddBankTransferBatchPaymentRequest:
    
    batch_uuid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'batchUuid', 'style': 'simple', 'explode': False }})  
    request_body: Any = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Details of **Mode 1** & **Mode 2**."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddBankTransferBatchPaymentNewBatchItemResponse:
    r"""Batch payment added successfully. **Note*** Please use batchUuid when submitting a batch, not batchItemUuid."""
    
    batch_item_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchItemUuid'), 'exclude': lambda f: f is None }})
    r"""A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch."""  
    

@dataclasses.dataclass
class AddBankTransferBatchPaymentResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    new_batch_item_response: Optional[AddBankTransferBatchPaymentNewBatchItemResponse] = dataclasses.field(default=None)
    r"""Batch payment added successfully. **Note*** Please use batchUuid when submitting a batch, not batchItemUuid."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    