// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// MaintenanceIssueModelIssuePriorityEnum - The priority of the job (Defaults to 'Low' if incorrect value or empty)
type MaintenanceIssueModelIssuePriorityEnum string

const (
	MaintenanceIssueModelIssuePriorityEnumLow    MaintenanceIssueModelIssuePriorityEnum = "Low"
	MaintenanceIssueModelIssuePriorityEnumMedium MaintenanceIssueModelIssuePriorityEnum = "Medium"
	MaintenanceIssueModelIssuePriorityEnumHigh   MaintenanceIssueModelIssuePriorityEnum = "High"
)

func (e *MaintenanceIssueModelIssuePriorityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Low":
		fallthrough
	case "Medium":
		fallthrough
	case "High":
		*e = MaintenanceIssueModelIssuePriorityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MaintenanceIssueModelIssuePriorityEnum: %s", s)
	}
}

// MaintenanceIssueModel - Submission Model - Handles all fields required to submit an online maintenance job
type MaintenanceIssueModel struct {
	// Documents linked to a submitted maintenance job
	Documents []MaintenanceDocumentModel `json:"Documents,omitempty" form:"name=Documents,json"`
	// ID used externally to manage jobs before sending to the system. This has a 10 character limit.
	ExternalID *string `json:"ExternalID,omitempty" form:"name=ExternalID"`
	// The fault title if applicable
	IssueFault *string `json:"IssueFault,omitempty" form:"name=IssueFault"`
	// Fault notes
	IssueNotes *string `json:"IssueNotes,omitempty" form:"name=IssueNotes"`
	// The priority of the job (Defaults to 'Low' if incorrect value or empty)
	IssuePriority *MaintenanceIssueModelIssuePriorityEnum `json:"IssuePriority,omitempty" form:"name=IssuePriority"`
	// The title of the issue
	IssueTitle *string `json:"IssueTitle,omitempty" form:"name=IssueTitle"`
	// The first line of the property address
	PropertyAddress1 *string `json:"PropertyAddress1,omitempty" form:"name=PropertyAddress1"`
	// The second line of the property address
	PropertyAddress2 *string `json:"PropertyAddress2,omitempty" form:"name=PropertyAddress2"`
	// The third line of the property address
	PropertyAddress3 *string `json:"PropertyAddress3,omitempty" form:"name=PropertyAddress3"`
	// The forth line of the property address
	PropertyAddress4 *string `json:"PropertyAddress4,omitempty" form:"name=PropertyAddress4"`
	// The country the property is located
	PropertyCountry *string `json:"PropertyCountry,omitempty" form:"name=PropertyCountry"`
	// The property postcode
	PropertyPostcode *string `json:"PropertyPostcode,omitempty" form:"name=PropertyPostcode"`
	// The date the job was reported
	ReportedAt *time.Time `json:"ReportedAt,omitempty" form:"name=ReportedAt"`
	// The email address of the Tenant
	TenantEMailAddress *string `json:"TenantEMailAddress,omitempty" form:"name=TenantEMailAddress"`
	// The forename of the Tenant
	TenantForename *string `json:"TenantForename,omitempty" form:"name=TenantForename"`
	// The primary phone number of the Tenant
	TenantPhonePrimary *string `json:"TenantPhonePrimary,omitempty" form:"name=TenantPhonePrimary"`
	// The secondary phone number of the Tenant
	TenantPhoneSecondary *string `json:"TenantPhoneSecondary,omitempty" form:"name=TenantPhoneSecondary"`
	// Is the Tenant’s presence requested during the maintenance visit? (Defaults to “false” if incorrect value or empty)
	TenantPresenceRequested *bool `json:"TenantPresenceRequested,omitempty" form:"name=TenantPresenceRequested"`
	// The surname of the Tenant
	TenantSurname *string `json:"TenantSurname,omitempty" form:"name=TenantSurname"`
	// The title of the Tenant
	TenantTitle *string `json:"TenantTitle,omitempty" form:"name=TenantTitle"`
}
