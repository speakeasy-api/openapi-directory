<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AudioRendersFilesList - Files associated with the render
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AudioRendersFilesList
{
    /**
     * The bit depth of the audio files in bits/sample
     * 
     * @var float $bitsSample
     */
	#[\JMS\Serializer\Annotation\SerializedName('bits_sample')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $bitsSample;
    
    /**
     * The content-type of the file
     * 
     * @var string $contentType
     */
	#[\JMS\Serializer\Annotation\SerializedName('content_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $contentType;
    
    /**
     * The internet-accessible URL from which the file can be downloaded. Any redirects encountered when using this URL must be followed
     * 
     * @var string $downloadUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('download_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $downloadUrl;
    
    /**
     * The user-specified file name suggestion from the render request; this file name becomes the filename property of the Content-Disposition header when the user downloads the rendered audio file
     * 
     * @var string $filename
     */
	#[\JMS\Serializer\Annotation\SerializedName('filename')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $filename;
    
    /**
     * The Sample rate of the audio files in Hertz (Hz)
     * 
     * @var float $frequencyHz
     */
	#[\JMS\Serializer\Annotation\SerializedName('frequency_hz')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $frequencyHz;
    
    /**
     * The data rate of the audio files in kilobits/second
     * 
     * @var float $kbitsSecond
     */
	#[\JMS\Serializer\Annotation\SerializedName('kbits_second')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $kbitsSecond;
    
    /**
     * Size of the file in bytes
     * 
     * @var float $sizeBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('size_bytes')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $sizeBytes;
    
    /**
     * An array of track names included in the file
     * 
     * @var array<string> $tracks
     */
	#[\JMS\Serializer\Annotation\SerializedName('tracks')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $tracks;
    
	public function __construct()
	{
		$this->bitsSample = 0;
		$this->contentType = "";
		$this->downloadUrl = "";
		$this->filename = "";
		$this->frequencyHz = 0;
		$this->kbitsSecond = 0;
		$this->sizeBytes = 0;
		$this->tracks = [];
	}
}
