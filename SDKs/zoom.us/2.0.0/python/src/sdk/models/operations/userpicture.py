"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class UserPictureRequestBodyPicFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    pic_file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'pic_file' }})  
    

@dataclasses.dataclass
class UserPictureRequestBody:
    
    pic_file: UserPictureRequestBodyPicFile = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""The file's path."""  
    

@dataclasses.dataclass
class UserPictureRequest:
    
    request_body: UserPictureRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})  
    user_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})
    r"""The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."""  
    

@dataclasses.dataclass
class UserPictureResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    