// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchSecurity struct {
	Option1 *ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchSecurityOption1 `security:"option"`
	Option2 *ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchSecurityOption2 `security:"option"`
}

type ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnum string

const (
	ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnumQuotaSafetyCheckUnspecified    ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnum = "QUOTA_SAFETY_CHECK_UNSPECIFIED"
	ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnumLimitDecreaseBelowUsage        ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnum = "LIMIT_DECREASE_BELOW_USAGE"
	ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnumLimitDecreasePercentageTooHigh ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnum = "LIMIT_DECREASE_PERCENTAGE_TOO_HIGH"
)

func (e *ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "QUOTA_SAFETY_CHECK_UNSPECIFIED":
		fallthrough
	case "LIMIT_DECREASE_BELOW_USAGE":
		fallthrough
	case "LIMIT_DECREASE_PERCENTAGE_TOO_HIGH":
		*e = ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnum: %s", s)
	}
}

type ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchRequest struct {
	// V1 error format.
	DollarXgafv   *shared.XgafvEnum     `queryParam:"style=form,explode=true,name=$.xgafv"`
	QuotaOverride *shared.QuotaOverride `request:"mediaType=application/json"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Whether to force the update of the quota override. Setting the force parameter to 'true' ignores all quota safety checks that would fail the request. QuotaSafetyCheck lists all such validations.
	Force *bool `queryParam:"style=form,explode=true,name=force"`
	// The list of quota safety checks to ignore before the override mutation. Unlike 'force' field that ignores all the quota safety checks, the 'force_only' field ignores only the specified checks; other checks are still enforced. The 'force' and 'force_only' fields cannot both be set.
	ForceOnly []ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchForceOnlyEnum `queryParam:"style=form,explode=true,name=forceOnly"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The resource name of the override to update. An example name would be: `projects/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/consumerOverrides/4a3f2c1d`
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Update only the specified fields of the override. If unset, all fields will be updated.
	UpdateMask *string `queryParam:"style=form,explode=true,name=updateMask"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type ServiceusageServicesConsumerQuotaMetricsLimitsConsumerOverridesPatchResponse struct {
	ContentType string
	// Successful response
	Operation   *shared.Operation
	StatusCode  int
	RawResponse *http.Response
}
