/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostSpacesSpaceIdLegalEntitiesIdProvidersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  gmaAuth: string;
}

export enum PostSpacesSpaceIdLegalEntitiesIdProvidersRequestBodyLevelEnum {
  Confidential = "confidential",
  Regular = "regular",
  Public = "public",
}

/**
 * Provider to add (except name, class and archivaldate)
 */
export class PostSpacesSpaceIdLegalEntitiesIdProvidersRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "About" })
  about?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Designation" })
  designation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "End" })
  end?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Home" })
  home?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Keywords" })
  keywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Level" })
  level?: PostSpacesSpaceIdLegalEntitiesIdProvidersRequestBodyLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ProviderNumber" })
  providerNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Start" })
  start?: string;
}

export class PostSpacesSpaceIdLegalEntitiesIdProvidersRequest extends SpeakeasyBase {
  /**
   * Provider to add (except name, class and archivaldate)
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PostSpacesSpaceIdLegalEntitiesIdProvidersRequestBody;

  /**
   * Id of the provider or memberId
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

/**
 * Id of folder created
 */
export class PostSpacesSpaceIdLegalEntitiesIdProviders201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;
}

export class PostSpacesSpaceIdLegalEntitiesIdProvidersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Id of folder created
   */
  @SpeakeasyMetadata()
  postSpacesSpaceIdLegalEntitiesIdProviders201ApplicationJSONObject?: PostSpacesSpaceIdLegalEntitiesIdProviders201ApplicationJSON;
}
