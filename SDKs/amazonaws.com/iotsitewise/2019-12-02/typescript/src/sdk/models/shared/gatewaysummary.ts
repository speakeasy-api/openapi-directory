/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GatewayCapabilitySummary } from "./gatewaycapabilitysummary";
import { GatewayPlatform } from "./gatewayplatform";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains a summary of a gateway.
 */
export class GatewaySummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate: Date;

  @SpeakeasyMetadata({ elemType: GatewayCapabilitySummary })
  @Expose({ name: "gatewayCapabilitySummaries" })
  @Type(() => GatewayCapabilitySummary)
  gatewayCapabilitySummaries?: GatewayCapabilitySummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "gatewayId" })
  gatewayId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gatewayName" })
  gatewayName: string;

  /**
   * Contains a gateway's platform information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gatewayPlatform" })
  @Type(() => GatewayPlatform)
  gatewayPlatform?: GatewayPlatform;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateDate: Date;
}
