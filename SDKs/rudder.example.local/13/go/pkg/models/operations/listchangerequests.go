// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListChangeRequests200ApplicationJSONActionEnum - The id of the action
type ListChangeRequests200ApplicationJSONActionEnum string

const (
	ListChangeRequests200ApplicationJSONActionEnumListChangeRequests ListChangeRequests200ApplicationJSONActionEnum = "listChangeRequests"
)

func (e *ListChangeRequests200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "listChangeRequests":
		*e = ListChangeRequests200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListChangeRequests200ApplicationJSONActionEnum: %s", s)
	}
}

type ListChangeRequests200ApplicationJSONData struct {
	Rules []shared.ChangeRequest `json:"rules"`
}

// ListChangeRequests200ApplicationJSONResultEnum - Result of the request
type ListChangeRequests200ApplicationJSONResultEnum string

const (
	ListChangeRequests200ApplicationJSONResultEnumSuccess ListChangeRequests200ApplicationJSONResultEnum = "success"
	ListChangeRequests200ApplicationJSONResultEnumError   ListChangeRequests200ApplicationJSONResultEnum = "error"
)

func (e *ListChangeRequests200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = ListChangeRequests200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListChangeRequests200ApplicationJSONResultEnum: %s", s)
	}
}

// ListChangeRequests200ApplicationJSON - Change requests information
type ListChangeRequests200ApplicationJSON struct {
	// The id of the action
	Action ListChangeRequests200ApplicationJSONActionEnum `json:"action"`
	Data   ListChangeRequests200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result ListChangeRequests200ApplicationJSONResultEnum `json:"result"`
}

type ListChangeRequestsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Change requests information
	ListChangeRequests200ApplicationJSONObject *ListChangeRequests200ApplicationJSON
}
