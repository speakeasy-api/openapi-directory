// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BigquerydatatransferProjectsTransferConfigsRunsListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BigquerydatatransferProjectsTransferConfigsRunsListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BigquerydatatransferProjectsTransferConfigsRunsListSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BigquerydatatransferProjectsTransferConfigsRunsListSecurity struct {
	Option1 *BigquerydatatransferProjectsTransferConfigsRunsListSecurityOption1 `security:"option"`
	Option2 *BigquerydatatransferProjectsTransferConfigsRunsListSecurityOption2 `security:"option"`
	Option3 *BigquerydatatransferProjectsTransferConfigsRunsListSecurityOption3 `security:"option"`
}

// BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnum - Indicates how run attempts are to be pulled.
type BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnum string

const (
	BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnumRunAttemptUnspecified BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnum = "RUN_ATTEMPT_UNSPECIFIED"
	BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnumLatest                BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnum = "LATEST"
)

func (e BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnum) ToPointer() *BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnum {
	return &e
}

func (e *BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RUN_ATTEMPT_UNSPECIFIED":
		fallthrough
	case "LATEST":
		*e = BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnum: %v", v)
	}
}

type BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum string

const (
	BigquerydatatransferProjectsTransferConfigsRunsListStatesEnumTransferStateUnspecified BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum = "TRANSFER_STATE_UNSPECIFIED"
	BigquerydatatransferProjectsTransferConfigsRunsListStatesEnumPending                  BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum = "PENDING"
	BigquerydatatransferProjectsTransferConfigsRunsListStatesEnumRunning                  BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum = "RUNNING"
	BigquerydatatransferProjectsTransferConfigsRunsListStatesEnumSucceeded                BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum = "SUCCEEDED"
	BigquerydatatransferProjectsTransferConfigsRunsListStatesEnumFailed                   BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum = "FAILED"
	BigquerydatatransferProjectsTransferConfigsRunsListStatesEnumCancelled                BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum = "CANCELLED"
)

func (e BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum) ToPointer() *BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum {
	return &e
}

func (e *BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TRANSFER_STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLED":
		*e = BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum: %v", v)
	}
}

type BigquerydatatransferProjectsTransferConfigsRunsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Page size. The default page size is the maximum value of 1000 results.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Pagination token, which can be used to request a specific page of `ListTransferRunsRequest` list results. For multiple-page results, `ListTransferRunsResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Required. Name of transfer configuration for which transfer runs should be retrieved. Format of transfer configuration resource name is: `projects/{project_id}/transferConfigs/{config_id}` or `projects/{project_id}/locations/{location_id}/transferConfigs/{config_id}`.
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Indicates how run attempts are to be pulled.
	RunAttempt *BigquerydatatransferProjectsTransferConfigsRunsListRunAttemptEnum `queryParam:"style=form,explode=true,name=runAttempt"`
	// When specified, only transfer runs with requested states are returned.
	States []BigquerydatatransferProjectsTransferConfigsRunsListStatesEnum `queryParam:"style=form,explode=true,name=states"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type BigquerydatatransferProjectsTransferConfigsRunsListResponse struct {
	ContentType string
	// Successful response
	ListTransferRunsResponse *shared.ListTransferRunsResponse
	StatusCode               int
	RawResponse              *http.Response
}
