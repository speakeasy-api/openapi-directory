// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EphemerisStatusEnum string

const (
	EphemerisStatusEnumValidating EphemerisStatusEnum = "VALIDATING"
	EphemerisStatusEnumInvalid    EphemerisStatusEnum = "INVALID"
	EphemerisStatusEnumError      EphemerisStatusEnum = "ERROR"
	EphemerisStatusEnumEnabled    EphemerisStatusEnum = "ENABLED"
	EphemerisStatusEnumDisabled   EphemerisStatusEnum = "DISABLED"
	EphemerisStatusEnumExpired    EphemerisStatusEnum = "EXPIRED"
)

func (e *EphemerisStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VALIDATING":
		fallthrough
	case "INVALID":
		fallthrough
	case "ERROR":
		fallthrough
	case "ENABLED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "EXPIRED":
		*e = EphemerisStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EphemerisStatusEnum: %s", s)
	}
}
