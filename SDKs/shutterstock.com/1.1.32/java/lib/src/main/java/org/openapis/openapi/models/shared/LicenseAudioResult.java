/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LicenseAudioResult - The response to a licensing request for an audio track
 */
public class LicenseAudioResult {
    /**
     * Number of credits that this licensing event used
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allotment_charge")
    public Double allotmentCharge;
    public LicenseAudioResult withAllotmentCharge(Double allotmentCharge) {
        this.allotmentCharge = allotmentCharge;
        return this;
    }
    
    /**
     * ID of the track that was licensed
     */
    @JsonProperty("audio_id")
    public String audioId;
    public LicenseAudioResult withAudioId(String audioId) {
        this.audioId = audioId;
        return this;
    }
    
    /**
     * Audio License URL object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("download")
    public AudioUrl download;
    public LicenseAudioResult withDownload(AudioUrl download) {
        this.download = download;
        return this;
    }
    
    /**
     * Error information if applicable
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public String error;
    public LicenseAudioResult withError(String error) {
        this.error = error;
        return this;
    }
    
    /**
     * ID of the license event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("license_id")
    public String licenseId;
    public LicenseAudioResult withLicenseId(String licenseId) {
        this.licenseId = licenseId;
        return this;
    }
    
}
