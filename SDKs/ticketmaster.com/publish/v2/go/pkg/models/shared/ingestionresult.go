// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// IngestionResultStatusEnum - Status of the result
type IngestionResultStatusEnum string

const (
	IngestionResultStatusEnumError          IngestionResultStatusEnum = "Error"
	IngestionResultStatusEnumSuccessWarning IngestionResultStatusEnum = "SuccessWarning"
	IngestionResultStatusEnumSuccess        IngestionResultStatusEnum = "Success"
)

func (e *IngestionResultStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Error":
		fallthrough
	case "SuccessWarning":
		fallthrough
	case "Success":
		*e = IngestionResultStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for IngestionResultStatusEnum: %s", s)
	}
}

// IngestionResult - This class defines the IngestionResult on the Publish API
type IngestionResult struct {
	// Id of the entity ingested in the discovery api
	ID *string
	// List properties that are ignored in the validation
	IgnoredProperties map[string]map[string]interface{}
	// List of invalid properties
	InvalidProperties map[string]map[string]interface{}
	// List of invalid values
	InvalidValues map[string]map[string]interface{}
	// List of properties that should be present in your entity to ease its dicovery
	MissingProperties map[string]map[string]interface{}
	// Status of the result
	Status IngestionResultStatusEnum
	// List of unknown properties that will be dropped
	UnknownProperties map[string]map[string]interface{}
}
