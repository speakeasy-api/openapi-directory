// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MediaFormatEnum string

const (
	MediaFormatEnumMp3  MediaFormatEnum = "mp3"
	MediaFormatEnumMp4  MediaFormatEnum = "mp4"
	MediaFormatEnumWav  MediaFormatEnum = "wav"
	MediaFormatEnumFlac MediaFormatEnum = "flac"
	MediaFormatEnumOgg  MediaFormatEnum = "ogg"
	MediaFormatEnumAmr  MediaFormatEnum = "amr"
	MediaFormatEnumWebm MediaFormatEnum = "webm"
)

func (e MediaFormatEnum) ToPointer() *MediaFormatEnum {
	return &e
}

func (e *MediaFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mp3":
		fallthrough
	case "mp4":
		fallthrough
	case "wav":
		fallthrough
	case "flac":
		fallthrough
	case "ogg":
		fallthrough
	case "amr":
		fallthrough
	case "webm":
		*e = MediaFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MediaFormatEnum: %v", v)
	}
}
