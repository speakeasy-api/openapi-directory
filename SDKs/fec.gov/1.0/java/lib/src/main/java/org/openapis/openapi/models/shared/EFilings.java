/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class EFilings {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amended_by")
    public Integer amendedBy;

    public EFilings withAmendedBy(Integer amendedBy) {
        this.amendedBy = amendedBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amendment_chain")
    public Integer[] amendmentChain;

    public EFilings withAmendmentChain(Integer[] amendmentChain) {
        this.amendmentChain = amendmentChain;
        return this;
    }
    
    /**
     * Number of times the report has been amended.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amendment_number")
    public Integer amendmentNumber;

    public EFilings withAmendmentNumber(Integer amendmentNumber) {
        this.amendmentNumber = amendmentNumber;
        return this;
    }
    
    /**
     * For amendments, this file_number is the file_number of the previous report that is being amended. Refer to the amended_by for the most recent version of the report.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amends_file")
    public Integer amendsFile;

    public EFilings withAmendsFile(Integer amendsFile) {
        this.amendsFile = amendsFile;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beginning_image_number")
    public String beginningImageNumber;

    public EFilings withBeginningImageNumber(String beginningImageNumber) {
        this.beginningImageNumber = beginningImageNumber;
        return this;
    }
    
    /**
     * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committee_id")
    public String committeeId;

    public EFilings withCommitteeId(String committeeId) {
        this.committeeId = committeeId;
        return this;
    }
    
    /**
     * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committee_name")
    public String committeeName;

    public EFilings withCommitteeName(String committeeName) {
        this.committeeName = committeeName;
        return this;
    }
    
    /**
     * Ending date of the reporting period
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("coverage_end_date")
    public LocalDate coverageEndDate;

    public EFilings withCoverageEndDate(LocalDate coverageEndDate) {
        this.coverageEndDate = coverageEndDate;
        return this;
    }
    
    /**
     * Beginning date of the reporting period
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("coverage_start_date")
    public LocalDate coverageStartDate;

    public EFilings withCoverageStartDate(LocalDate coverageStartDate) {
        this.coverageStartDate = coverageStartDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("csv_url")
    public String csvUrl;

    public EFilings withCsvUrl(String csvUrl) {
        this.csvUrl = csvUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("document_description")
    public String documentDescription;

    public EFilings withDocumentDescription(String documentDescription) {
        this.documentDescription = documentDescription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ending_image_number")
    public String endingImageNumber;

    public EFilings withEndingImageNumber(String endingImageNumber) {
        this.endingImageNumber = endingImageNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fec_file_id")
    public String fecFileId;

    public EFilings withFecFileId(String fecFileId) {
        this.fecFileId = fecFileId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fec_url")
    public String fecUrl;

    public EFilings withFecUrl(String fecUrl) {
        this.fecUrl = fecUrl;
        return this;
    }
    
    /**
     * Filing ID number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file_number")
    public Integer fileNumber;

    public EFilings withFileNumber(Integer fileNumber) {
        this.fileNumber = fileNumber;
        return this;
    }
    
    /**
     * Timestamp of electronic or paper record that FEC received
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("filed_date")
    public LocalDate filedDate;

    public EFilings withFiledDate(LocalDate filedDate) {
        this.filedDate = filedDate;
        return this;
    }
    
    /**
     * The form where the underlying data comes from, for example, Form 1 would appear as F1:
     *     - F1   Statement of Organization
     *     - F1M  Notification of Multicandidate Status
     *     - F2   Statement of Candidacy
     *     - F3   Report of Receipts and Disbursements for an Authorized Committee
     *     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President
     *     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs
     *     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee
     *     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention
     *     - F5   Report of Independent Expenditures Made and Contributions Received
     *     - F6   48 Hour Notice of Contributions/Loans Received
     *     - F7   Report of Communication Costs by Corporations and Membership Organizations
     *     - F8   Debt Settlement Plan
     *     - F9   24 Hour Notice of Disbursements for Electioneering Communications
     *     - F13  Report of Donations Accepted for Inaugural Committee
     *     - F99  Miscellaneous Text
     *     - FRQ  Request for Additional Information
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("form_type")
    public String formType;

    public EFilings withFormType(String formType) {
        this.formType = formType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_url")
    public String htmlUrl;

    public EFilings withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_amended")
    public Boolean isAmended;

    public EFilings withIsAmended(Boolean isAmended) {
        this.isAmended = isAmended;
        return this;
    }
    
    /**
     * Date the information was loaded into the FEC systems. This can be affected by reseting systems and other factors, refer to receipt_date for the day that the FEC received the paper or electronic document. Keep in mind that paper filings take more time to process and there can be a lag between load_date and receipt_date. This field can be helpful to identify paper records that have been processed recently.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("load_timestamp")
    public OffsetDateTime loadTimestamp;

    public EFilings withLoadTimestamp(OffsetDateTime loadTimestamp) {
        this.loadTimestamp = loadTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("most_recent")
    public Boolean mostRecent;

    public EFilings withMostRecent(Boolean mostRecent) {
        this.mostRecent = mostRecent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("most_recent_filing")
    public Integer mostRecentFiling;

    public EFilings withMostRecentFiling(Integer mostRecentFiling) {
        this.mostRecentFiling = mostRecentFiling;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pdf_url")
    public String pdfUrl;

    public EFilings withPdfUrl(String pdfUrl) {
        this.pdfUrl = pdfUrl;
        return this;
    }
    
    /**
     * Date the FEC received the electronic or paper record
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("receipt_date")
    public OffsetDateTime receiptDate;

    public EFilings withReceiptDate(OffsetDateTime receiptDate) {
        this.receiptDate = receiptDate;
        return this;
    }
    
    public EFilings(){}
}
