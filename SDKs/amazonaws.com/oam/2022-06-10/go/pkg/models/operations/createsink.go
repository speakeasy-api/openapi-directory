// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateSinkHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateSinkRequestBody struct {
	// A name for the sink.
	Name string `json:"Name"`
	// <p>Assigns one or more tags (key-value pairs) to the link. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>For more information about using tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling access to Amazon Web Services resources using tags</a>.</p>
	Tags map[string]string `json:"Tags,omitempty"`
}

type CreateSinkRequest struct {
	Headers CreateSinkHeaders
	Request CreateSinkRequestBody `request:"mediaType=application/json"`
}

type CreateSinkResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateSinkOutput *shared.CreateSinkOutput
	// InternalServiceFault
	InternalServiceFault interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// MissingRequiredParameterException
	MissingRequiredParameterException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
}
