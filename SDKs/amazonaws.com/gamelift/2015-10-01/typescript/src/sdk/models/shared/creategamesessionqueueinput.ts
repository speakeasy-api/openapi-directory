/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FilterConfiguration } from "./filterconfiguration";
import { GameSessionQueueDestination } from "./gamesessionqueuedestination";
import { PlayerLatencyPolicy } from "./playerlatencypolicy";
import { PriorityConfiguration } from "./priorityconfiguration";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateGameSessionQueueInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CustomEventData" })
  customEventData?: string;

  @SpeakeasyMetadata({ elemType: GameSessionQueueDestination })
  @Expose({ name: "Destinations" })
  @Type(() => GameSessionQueueDestination)
  destinations?: GameSessionQueueDestination[];

  @SpeakeasyMetadata()
  @Expose({ name: "FilterConfiguration" })
  @Type(() => FilterConfiguration)
  filterConfiguration?: FilterConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotificationTarget" })
  notificationTarget?: string;

  @SpeakeasyMetadata({ elemType: PlayerLatencyPolicy })
  @Expose({ name: "PlayerLatencyPolicies" })
  @Type(() => PlayerLatencyPolicy)
  playerLatencyPolicies?: PlayerLatencyPolicy[];

  @SpeakeasyMetadata()
  @Expose({ name: "PriorityConfiguration" })
  @Type(() => PriorityConfiguration)
  priorityConfiguration?: PriorityConfiguration;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "TimeoutInSeconds" })
  timeoutInSeconds?: number;
}
