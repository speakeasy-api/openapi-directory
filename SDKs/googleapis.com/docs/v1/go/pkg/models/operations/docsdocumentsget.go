// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DocsDocumentsGetSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DocsDocumentsGetSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DocsDocumentsGetSecurityOption3 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DocsDocumentsGetSecurityOption4 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DocsDocumentsGetSecurityOption5 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DocsDocumentsGetSecurity struct {
	Option1 *DocsDocumentsGetSecurityOption1 `security:"option"`
	Option2 *DocsDocumentsGetSecurityOption2 `security:"option"`
	Option3 *DocsDocumentsGetSecurityOption3 `security:"option"`
	Option4 *DocsDocumentsGetSecurityOption4 `security:"option"`
	Option5 *DocsDocumentsGetSecurityOption5 `security:"option"`
}

type DocsDocumentsGetPathParams struct {
	// The ID of the document to retrieve.
	DocumentID string `pathParam:"style=simple,explode=false,name=documentId"`
}

// DocsDocumentsGetSuggestionsViewModeEnum - The suggestions view mode to apply to the document. This allows viewing the document with all suggestions inline, accepted or rejected. If one is not specified, DEFAULT_FOR_CURRENT_ACCESS is used.
type DocsDocumentsGetSuggestionsViewModeEnum string

const (
	DocsDocumentsGetSuggestionsViewModeEnumDefaultForCurrentAccess    DocsDocumentsGetSuggestionsViewModeEnum = "DEFAULT_FOR_CURRENT_ACCESS"
	DocsDocumentsGetSuggestionsViewModeEnumSuggestionsInline          DocsDocumentsGetSuggestionsViewModeEnum = "SUGGESTIONS_INLINE"
	DocsDocumentsGetSuggestionsViewModeEnumPreviewSuggestionsAccepted DocsDocumentsGetSuggestionsViewModeEnum = "PREVIEW_SUGGESTIONS_ACCEPTED"
	DocsDocumentsGetSuggestionsViewModeEnumPreviewWithoutSuggestions  DocsDocumentsGetSuggestionsViewModeEnum = "PREVIEW_WITHOUT_SUGGESTIONS"
)

func (e *DocsDocumentsGetSuggestionsViewModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEFAULT_FOR_CURRENT_ACCESS":
		fallthrough
	case "SUGGESTIONS_INLINE":
		fallthrough
	case "PREVIEW_SUGGESTIONS_ACCEPTED":
		fallthrough
	case "PREVIEW_WITHOUT_SUGGESTIONS":
		*e = DocsDocumentsGetSuggestionsViewModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DocsDocumentsGetSuggestionsViewModeEnum: %s", s)
	}
}

type DocsDocumentsGetQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The suggestions view mode to apply to the document. This allows viewing the document with all suggestions inline, accepted or rejected. If one is not specified, DEFAULT_FOR_CURRENT_ACCESS is used.
	SuggestionsViewMode *DocsDocumentsGetSuggestionsViewModeEnum `queryParam:"style=form,explode=true,name=suggestionsViewMode"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DocsDocumentsGetRequest struct {
	PathParams  DocsDocumentsGetPathParams
	QueryParams DocsDocumentsGetQueryParams
	Security    DocsDocumentsGetSecurity
}

type DocsDocumentsGetResponse struct {
	ContentType string
	// Successful response
	Document    *shared.Document
	StatusCode  int
	RawResponse *http.Response
}
