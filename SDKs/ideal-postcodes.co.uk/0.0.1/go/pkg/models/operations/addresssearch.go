// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type AddressSearchSecurity struct {
	APIKey    shared.SchemeAPIKey    `security:"scheme,type=apiKey,subtype=query"`
	UserToken shared.SchemeUserToken `security:"scheme,type=apiKey,subtype=query"`
}

type AddressSearchQueryParams struct {
	// Comma separated whitelist of address elements to return. E.g. `filter=line_1,line_2,line_3` returns only `line_1`, `line_2 and `line_3` address elements in your response
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// Only required if you are using a sublicensed key. This parameter will associate the request with your licensee
	Licensee *string `queryParam:"style=form,explode=true,name=licensee"`
	// Specifies the upper limit on the number of address results to be returned. Max is 100 addresses. Query can be shortened to `l=`
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Specifies the page of results to be returned. Query can be shortened to `p=`
	Page *int `queryParam:"style=form,explode=true,name=page"`
	// Comma separated list of outward codes with which to restrict result set. E.g. `postcode_outward=sw1a`, `postcode_outward=tr8,le18`
	PostcodeOutward *string `queryParam:"style=form,explode=true,name=postcode_outward"`
	// Specifies the address you wish to query. Query can be shortened to `q=`
	Query string `queryParam:"style=form,explode=true,name=query"`
}

type AddressSearchRequest struct {
	QueryParams AddressSearchQueryParams
	Security    AddressSearchSecurity
}

type AddressSearchResponse struct {
	// Success
	AddressSearchResponseSchema *shared.AddressSearchResponseSchema
	ContentType                 string
	// Bad request
	ErrorResponseSchema *shared.ErrorResponseSchema
	StatusCode          int
	RawResponse         *http.Response
}
