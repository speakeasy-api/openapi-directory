/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The destination port range assigned to the Traffic Mirror rule.
 */
export class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesDestinationPortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * The action assigned to the Traffic Mirror rule.
 */
export enum DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum {
  Accept = "accept",
  Reject = "reject",
}

/**
 * The source port range assigned to the Traffic Mirror rule.
 */
export class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesSourcePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * The traffic direction assigned to the Traffic Mirror rule.
 */
export enum DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum {
  Ingress = "ingress",
  Egress = "egress",
}

/**
 * Describes the Traffic Mirror rule.
 */
export class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRules extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  destinationCidrBlock?: string;

  @SpeakeasyMetadata()
  destinationPortRange?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesDestinationPortRange;

  @SpeakeasyMetadata()
  protocol?: number;

  @SpeakeasyMetadata()
  ruleAction?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum;

  @SpeakeasyMetadata()
  ruleNumber?: number;

  @SpeakeasyMetadata()
  sourceCidrBlock?: string;

  @SpeakeasyMetadata()
  sourcePortRange?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesSourcePortRange;

  @SpeakeasyMetadata()
  trafficDirection?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum;

  @SpeakeasyMetadata()
  trafficMirrorFilterId?: string;

  @SpeakeasyMetadata()
  trafficMirrorFilterRuleId?: string;
}

/**
 * The destination port range assigned to the Traffic Mirror rule.
 */
export class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesDestinationPortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * The action assigned to the Traffic Mirror rule.
 */
export enum DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum {
  Accept = "accept",
  Reject = "reject",
}

/**
 * The source port range assigned to the Traffic Mirror rule.
 */
export class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesSourcePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * The traffic direction assigned to the Traffic Mirror rule.
 */
export enum DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum {
  Ingress = "ingress",
  Egress = "egress",
}

/**
 * Describes the Traffic Mirror rule.
 */
export class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRules extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  destinationCidrBlock?: string;

  @SpeakeasyMetadata()
  destinationPortRange?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesDestinationPortRange;

  @SpeakeasyMetadata()
  protocol?: number;

  @SpeakeasyMetadata()
  ruleAction?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum;

  @SpeakeasyMetadata()
  ruleNumber?: number;

  @SpeakeasyMetadata()
  sourceCidrBlock?: string;

  @SpeakeasyMetadata()
  sourcePortRange?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesSourcePortRange;

  @SpeakeasyMetadata()
  trafficDirection?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum;

  @SpeakeasyMetadata()
  trafficMirrorFilterId?: string;

  @SpeakeasyMetadata()
  trafficMirrorFilterRuleId?: string;
}

export enum DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnum {
  AmazonDns = "amazon-dns",
}

/**
 * Describes a tag.
 */
export class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes the Traffic Mirror filter.
 */
export class DescribeTrafficMirrorFiltersResultTrafficMirrorFilters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRules,
  })
  egressFilterRules?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRules[];

  @SpeakeasyMetadata({
    elemType:
      DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRules,
  })
  ingressFilterRules?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRules[];

  @SpeakeasyMetadata()
  networkServices?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnum[];

  @SpeakeasyMetadata({
    elemType: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersTags,
  })
  tags?: DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersTags[];

  @SpeakeasyMetadata()
  trafficMirrorFilterId?: string;
}

/**
 * Success
 */
export class DescribeTrafficMirrorFiltersResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType: DescribeTrafficMirrorFiltersResultTrafficMirrorFilters,
  })
  trafficMirrorFilters?: DescribeTrafficMirrorFiltersResultTrafficMirrorFilters[];
}
