"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import checksum as shared_checksum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAppPkg:
    r"""Resource to be created"""
    
    app_pkg_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appPkgName') }})
    r"""Name of the application package to be onboarded."""  
    app_pkg_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appPkgPath') }})  
    app_pkg_version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appPkgVersion') }})
    r"""Version of the application package to be onboarded.
    The appPkgName with appPkgVersion can be used to uniquely identify the application package.
    """  
    checksum: shared_checksum.Checksum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checksum') }})  
    app_provider: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appProvider'), 'exclude': lambda f: f is None }})
    r"""The provider's name of the application package to be onboarded."""  
    user_defined_data: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userDefinedData'), 'exclude': lambda f: f is None }})
    r"""'This data type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key-value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259'"""  
    