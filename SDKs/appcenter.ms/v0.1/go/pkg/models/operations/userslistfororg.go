// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UsersListForOrgSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type UsersListForOrgRequest struct {
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
}

type UsersListForOrgDefaultApplicationJSONErrorCodeEnum string

const (
	UsersListForOrgDefaultApplicationJSONErrorCodeEnumBadRequest          UsersListForOrgDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	UsersListForOrgDefaultApplicationJSONErrorCodeEnumConflict            UsersListForOrgDefaultApplicationJSONErrorCodeEnum = "Conflict"
	UsersListForOrgDefaultApplicationJSONErrorCodeEnumNotAcceptable       UsersListForOrgDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	UsersListForOrgDefaultApplicationJSONErrorCodeEnumNotFound            UsersListForOrgDefaultApplicationJSONErrorCodeEnum = "NotFound"
	UsersListForOrgDefaultApplicationJSONErrorCodeEnumInternalServerError UsersListForOrgDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	UsersListForOrgDefaultApplicationJSONErrorCodeEnumUnauthorized        UsersListForOrgDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	UsersListForOrgDefaultApplicationJSONErrorCodeEnumTooManyRequests     UsersListForOrgDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e UsersListForOrgDefaultApplicationJSONErrorCodeEnum) ToPointer() *UsersListForOrgDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *UsersListForOrgDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = UsersListForOrgDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UsersListForOrgDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type UsersListForOrgDefaultApplicationJSONError struct {
	Code    UsersListForOrgDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                             `json:"message"`
}

// UsersListForOrgDefaultApplicationJSON - Error
type UsersListForOrgDefaultApplicationJSON struct {
	Error UsersListForOrgDefaultApplicationJSONError `json:"error"`
}

type UsersListForOrg200ApplicationJSON struct {
	// The full name of the user. Might for example be first and last name
	DisplayName string `json:"display_name"`
	// The email address of the user
	Email string `json:"email"`
	// The date when the user joined the organization
	JoinedAt string `json:"joined_at"`
	// The unique name that is used to identify the user.
	Name string `json:"name"`
	// The role the user has within the organization
	Role string `json:"role"`
}

type UsersListForOrgResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	UsersListForOrg200ApplicationJSONObjects []UsersListForOrg200ApplicationJSON
	// Error
	UsersListForOrgDefaultApplicationJSONObject *UsersListForOrgDefaultApplicationJSON
}
