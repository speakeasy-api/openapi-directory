"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class ConferenceRecordStartResponseMessageEnum(str, Enum):
    r"""Response message"""
    CONFERENCE_RECORD_START_EXECUTED = 'Conference RecordStart Executed'
    CONFERENCE_NAME_PARAMETER_MUST_BE_PRESENT = 'ConferenceName Parameter must be present'
    FILE_FORMAT_PARAMETER_MUST_BE = 'FileFormat Parameter must be'
    CONFERENCE_RECORD_START_FAILED = 'Conference RecordStart Failed'
    CONFERENCE_RECORD_START_FAILED_CONFERENCE_NOT_FOUND = 'Conference RecordStart Failed -- Conference not found'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConferenceRecordStartResponse:
    r"""Response"""
    
    message: ConferenceRecordStartResponseMessageEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message') }})
    r"""Response message"""  
    record_file: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecordFile') }})
    r"""Directory path/URI where the recording file will be saved"""  
    success: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Success') }})
    r"""Whether the request was successful or not"""  
    