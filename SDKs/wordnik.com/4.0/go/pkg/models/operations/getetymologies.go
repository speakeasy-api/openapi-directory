// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetEtymologiesUseCanonicalEnum - If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
type GetEtymologiesUseCanonicalEnum string

const (
	GetEtymologiesUseCanonicalEnumFalse GetEtymologiesUseCanonicalEnum = "false"
	GetEtymologiesUseCanonicalEnumTrue  GetEtymologiesUseCanonicalEnum = "true"
)

func (e *GetEtymologiesUseCanonicalEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "false":
		fallthrough
	case "true":
		*e = GetEtymologiesUseCanonicalEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetEtymologiesUseCanonicalEnum: %s", s)
	}
}

type GetEtymologiesRequest struct {
	// If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
	UseCanonical *GetEtymologiesUseCanonicalEnum `queryParam:"style=form,explode=true,name=useCanonical"`
	// Word to return
	Word string `pathParam:"style=simple,explode=false,name=word"`
}

type GetEtymologiesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
