// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteQueuedReservedInstancesActionEnum
type GETDeleteQueuedReservedInstancesActionEnum string

const (
	GETDeleteQueuedReservedInstancesActionEnumDeleteQueuedReservedInstances GETDeleteQueuedReservedInstancesActionEnum = "DeleteQueuedReservedInstances"
)

func (e GETDeleteQueuedReservedInstancesActionEnum) ToPointer() *GETDeleteQueuedReservedInstancesActionEnum {
	return &e
}

func (e *GETDeleteQueuedReservedInstancesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteQueuedReservedInstances":
		*e = GETDeleteQueuedReservedInstancesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteQueuedReservedInstancesActionEnum: %v", v)
	}
}

// GETDeleteQueuedReservedInstancesVersionEnum
type GETDeleteQueuedReservedInstancesVersionEnum string

const (
	GETDeleteQueuedReservedInstancesVersionEnumTwoThousandAndSixteen1115 GETDeleteQueuedReservedInstancesVersionEnum = "2016-11-15"
)

func (e GETDeleteQueuedReservedInstancesVersionEnum) ToPointer() *GETDeleteQueuedReservedInstancesVersionEnum {
	return &e
}

func (e *GETDeleteQueuedReservedInstancesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteQueuedReservedInstancesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteQueuedReservedInstancesVersionEnum: %v", v)
	}
}

type GETDeleteQueuedReservedInstancesRequest struct {
	Action GETDeleteQueuedReservedInstancesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The IDs of the Reserved Instances.
	ReservedInstancesID []string                                    `queryParam:"style=form,explode=true,name=ReservedInstancesId"`
	Version             GETDeleteQueuedReservedInstancesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm       *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteQueuedReservedInstancesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
