// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDialogflowV2beta1ParticipantRoleEnum - Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable.
type GoogleCloudDialogflowV2beta1ParticipantRoleEnum string

const (
	GoogleCloudDialogflowV2beta1ParticipantRoleEnumRoleUnspecified GoogleCloudDialogflowV2beta1ParticipantRoleEnum = "ROLE_UNSPECIFIED"
	GoogleCloudDialogflowV2beta1ParticipantRoleEnumHumanAgent      GoogleCloudDialogflowV2beta1ParticipantRoleEnum = "HUMAN_AGENT"
	GoogleCloudDialogflowV2beta1ParticipantRoleEnumAutomatedAgent  GoogleCloudDialogflowV2beta1ParticipantRoleEnum = "AUTOMATED_AGENT"
	GoogleCloudDialogflowV2beta1ParticipantRoleEnumEndUser         GoogleCloudDialogflowV2beta1ParticipantRoleEnum = "END_USER"
)

func (e *GoogleCloudDialogflowV2beta1ParticipantRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ROLE_UNSPECIFIED":
		fallthrough
	case "HUMAN_AGENT":
		fallthrough
	case "AUTOMATED_AGENT":
		fallthrough
	case "END_USER":
		*e = GoogleCloudDialogflowV2beta1ParticipantRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowV2beta1ParticipantRoleEnum: %s", s)
	}
}

// GoogleCloudDialogflowV2beta1Participant - Represents a conversation participant (human agent, virtual agent, end-user).
type GoogleCloudDialogflowV2beta1Participant struct {
	// Optional. Key-value filters on the metadata of documents returned by article suggestion. If specified, article suggestion only returns suggested documents that match all filters in their Document.metadata. Multiple values for a metadata key should be concatenated by comma. For example, filters to match all documents that have 'US' or 'CA' in their market metadata values and 'agent' in their user metadata values will be ``` documents_metadata_filters { key: "market" value: "US,CA" } documents_metadata_filters { key: "user" value: "agent" } ```
	DocumentsMetadataFilters map[string]string `json:"documentsMetadataFilters,omitempty"`
	// Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.
	Name *string `json:"name,omitempty"`
	// Optional. Obfuscated user id that should be associated with the created participant. You can specify a user id as follows: 1. If you set this field in CreateParticipantRequest or UpdateParticipantRequest, Dialogflow adds the obfuscated user id with the participant. 2. If you set this field in AnalyzeContent or StreamingAnalyzeContent, Dialogflow will update Participant.obfuscated_external_user_id. Dialogflow uses this user id for following purposes: 1) Billing and measurement. If user with the same obfuscated_external_user_id is created in a later conversation, dialogflow will know it's the same user. 2) Agent assist suggestion personalization. For example, Dialogflow can use it to provide personalized smart reply suggestions for this user. Note: * Please never pass raw user ids to Dialogflow. Always obfuscate your user id first. * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a hash function like SHA-512. * The length of the user id must be <= 256 characters.
	ObfuscatedExternalUserID *string `json:"obfuscatedExternalUserId,omitempty"`
	// Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable.
	Role *GoogleCloudDialogflowV2beta1ParticipantRoleEnum `json:"role,omitempty"`
}
