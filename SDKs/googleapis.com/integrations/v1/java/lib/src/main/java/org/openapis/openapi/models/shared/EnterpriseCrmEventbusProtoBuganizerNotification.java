/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EnterpriseCrmEventbusProtoBuganizerNotification {
    /**
     * Whom to assign the new bug. Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assigneeEmailAddress")
    public String assigneeEmailAddress;

    public EnterpriseCrmEventbusProtoBuganizerNotification withAssigneeEmailAddress(String assigneeEmailAddress) {
        this.assigneeEmailAddress = assigneeEmailAddress;
        return this;
    }
    
    /**
     * ID of the buganizer component within which to create a new issue. Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("componentId")
    public String componentId;

    public EnterpriseCrmEventbusProtoBuganizerNotification withComponentId(String componentId) {
        this.componentId = componentId;
        return this;
    }
    
    /**
     * ID of the buganizer template to use. Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("templateId")
    public String templateId;

    public EnterpriseCrmEventbusProtoBuganizerNotification withTemplateId(String templateId) {
        this.templateId = templateId;
        return this;
    }
    
    /**
     * Title of the issue to be created. Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public EnterpriseCrmEventbusProtoBuganizerNotification withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public EnterpriseCrmEventbusProtoBuganizerNotification(){}
}
