"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetABlockedListSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetABlockedListRequest:
    
    blocked_list_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'blockedListId', 'style': 'simple', 'explode': False }})
    r"""Unique Identifier of the blocked list."""  
    
class GetABlockedList200ApplicationXMLBlockTypeEnum(str, Enum):
    r"""Block type.<br>
    `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
    `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
    """
    INBOUND = 'inbound'
    OUTBOUND = 'outbound'

class GetABlockedList200ApplicationXMLMatchTypeEnum(str, Enum):
    r"""Indicates the match type for the blocked list. The values can be one of the following:<br>
    `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
    `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
    """
    PHONE_NUMBER = 'phoneNumber'
    PREFIX = 'prefix'

class GetABlockedList200ApplicationXMLStatusEnum(str, Enum):
    r"""Indicates whether the blocking is active or inactive. <br>
    `active`: The blocked list is active.<br>
    `inactive`: The blocked list is inactive.
    """
    ACTIVE = 'active'
    INACTIVE = 'inactive'


@dataclasses.dataclass
class GetABlockedList200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Blocked list retrieved successfully.
    """
    
    block_type: Optional[GetABlockedList200ApplicationXMLBlockTypeEnum] = dataclasses.field(default=None)
    r"""Block type.<br>
    `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
    `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
    """  
    comment: Optional[str] = dataclasses.field(default=None)
    r"""Provide a comment to help you identify the blocked number or prefix."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the blocked list."""  
    match_type: Optional[GetABlockedList200ApplicationXMLMatchTypeEnum] = dataclasses.field(default=None)
    r"""Indicates the match type for the blocked list. The values can be one of the following:<br>
    `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
    `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
    """  
    phone_number: Optional[str] = dataclasses.field(default=None)
    r"""The phone number or the prefix number that is blocked based on the `match_type`."""  
    status: Optional[GetABlockedList200ApplicationXMLStatusEnum] = dataclasses.field(default=None)
    r"""Indicates whether the blocking is active or inactive. <br>
    `active`: The blocked list is active.<br>
    `inactive`: The blocked list is inactive.
    """  
    
class GetABlockedList200ApplicationJSONBlockTypeEnum(str, Enum):
    r"""Block type.<br>
    `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
    `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
    """
    INBOUND = 'inbound'
    OUTBOUND = 'outbound'

class GetABlockedList200ApplicationJSONMatchTypeEnum(str, Enum):
    r"""Indicates the match type for the blocked list. The values can be one of the following:<br>
    `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
    `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
    """
    PHONE_NUMBER = 'phoneNumber'
    PREFIX = 'prefix'

class GetABlockedList200ApplicationJSONStatusEnum(str, Enum):
    r"""Indicates whether the blocking is active or inactive. <br>
    `active`: The blocked list is active.<br>
    `inactive`: The blocked list is inactive.
    """
    ACTIVE = 'active'
    INACTIVE = 'inactive'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetABlockedList200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Blocked list retrieved successfully.
    """
    
    block_type: Optional[GetABlockedList200ApplicationJSONBlockTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('block_type'), 'exclude': lambda f: f is None }})
    r"""Block type.<br>
    `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
    `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
    """  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment'), 'exclude': lambda f: f is None }})
    r"""Provide a comment to help you identify the blocked number or prefix."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the blocked list."""  
    match_type: Optional[GetABlockedList200ApplicationJSONMatchTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('match_type'), 'exclude': lambda f: f is None }})
    r"""Indicates the match type for the blocked list. The values can be one of the following:<br>
    `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
    `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
    """  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone_number'), 'exclude': lambda f: f is None }})
    r"""The phone number or the prefix number that is blocked based on the `match_type`."""  
    status: Optional[GetABlockedList200ApplicationJSONStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the blocking is active or inactive. <br>
    `active`: The blocked list is active.<br>
    `inactive`: The blocked list is inactive.
    """  
    

@dataclasses.dataclass
class GetABlockedListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    get_a_blocked_list_200_application_json_object: Optional[GetABlockedList200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK**<br>
    Blocked list retrieved successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    