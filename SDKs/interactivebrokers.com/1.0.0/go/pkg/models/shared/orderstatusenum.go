// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OrderStatusEnum - Status of the order
// InvalidOrderStatus = '-1'
// New = '0'
// PartiallyFilled = '1'
// Filled = '2'
// DoneForTheDay = '3'
// Canceled = '4'
// Replaced = '5'
// PendingCancelReplace = '6'
// Stopped = '7'
// Rejected = '8'
// Suspended = '9'
// PendingNew = 'A'
// Calculated = 'B'
// Expired = 'C'
// AcceptedForBidding = 'D'
// PendingReplace = 'E'
type OrderStatusEnum string

const (
	OrderStatusEnumMinus1 OrderStatusEnum = "-1"
	OrderStatusEnumZero   OrderStatusEnum = "0"
	OrderStatusEnumOne    OrderStatusEnum = "1"
	OrderStatusEnumTwo    OrderStatusEnum = "2"
	OrderStatusEnumThree  OrderStatusEnum = "3"
	OrderStatusEnumFour   OrderStatusEnum = "4"
	OrderStatusEnumFive   OrderStatusEnum = "5"
	OrderStatusEnumSix    OrderStatusEnum = "6"
	OrderStatusEnumSeven  OrderStatusEnum = "7"
	OrderStatusEnumEight  OrderStatusEnum = "8"
	OrderStatusEnumNine   OrderStatusEnum = "9"
	OrderStatusEnumA      OrderStatusEnum = "A"
	OrderStatusEnumB      OrderStatusEnum = "B"
	OrderStatusEnumC      OrderStatusEnum = "C"
	OrderStatusEnumD      OrderStatusEnum = "D"
	OrderStatusEnumE      OrderStatusEnum = "E"
)

func (e *OrderStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "-1":
		fallthrough
	case "0":
		fallthrough
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		fallthrough
	case "4":
		fallthrough
	case "5":
		fallthrough
	case "6":
		fallthrough
	case "7":
		fallthrough
	case "8":
		fallthrough
	case "9":
		fallthrough
	case "A":
		fallthrough
	case "B":
		fallthrough
	case "C":
		fallthrough
	case "D":
		fallthrough
	case "E":
		*e = OrderStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderStatusEnum: %s", s)
	}
}
