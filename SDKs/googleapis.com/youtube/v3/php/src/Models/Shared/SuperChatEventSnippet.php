<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SuperChatEventSnippet
{
    /**
     * The purchase amount, in micros of the purchase currency. e.g., 1 is represented as 1000000.
     * 
     * @var ?string $amountMicros
     */
	#[\JMS\Serializer\Annotation\SerializedName('amountMicros')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $amountMicros = null;
    
    /**
     * Channel id where the event occurred.
     * 
     * @var ?string $channelId
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $channelId = null;
    
    /**
     * The text contents of the comment left by the user.
     * 
     * @var ?string $commentText
     */
	#[\JMS\Serializer\Annotation\SerializedName('commentText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commentText = null;
    
    /**
     * The date and time when the event occurred.
     * 
     * @var ?\DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * The currency in which the purchase was made. ISO 4217.
     * 
     * @var ?string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currency = null;
    
    /**
     * A rendered string that displays the purchase amount and currency (e.g., "$1.00"). The string is rendered for the given language.
     * 
     * @var ?string $displayString
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayString')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayString = null;
    
    /**
     * True if this event is a Super Sticker event.
     * 
     * @var ?bool $isSuperStickerEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('isSuperStickerEvent')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSuperStickerEvent = null;
    
    /**
     * The tier for the paid message, which is based on the amount of money spent to purchase the message.
     * 
     * @var ?int $messageType
     */
	#[\JMS\Serializer\Annotation\SerializedName('messageType')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $messageType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('superStickerMetadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SuperStickerMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SuperStickerMetadata $superStickerMetadata = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('supporterDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ChannelProfileDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChannelProfileDetails $supporterDetails = null;
    
	public function __construct()
	{
		$this->amountMicros = null;
		$this->channelId = null;
		$this->commentText = null;
		$this->createdAt = null;
		$this->currency = null;
		$this->displayString = null;
		$this->isSuperStickerEvent = null;
		$this->messageType = null;
		$this->superStickerMetadata = null;
		$this->supporterDetails = null;
	}
}
