// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PowerManagementEventEventTypeEnum - Event type.
type PowerManagementEventEventTypeEnum string

const (
	PowerManagementEventEventTypeEnumPowerManagementEventTypeUnspecified PowerManagementEventEventTypeEnum = "POWER_MANAGEMENT_EVENT_TYPE_UNSPECIFIED"
	PowerManagementEventEventTypeEnumBatteryLevelCollected               PowerManagementEventEventTypeEnum = "BATTERY_LEVEL_COLLECTED"
	PowerManagementEventEventTypeEnumPowerConnected                      PowerManagementEventEventTypeEnum = "POWER_CONNECTED"
	PowerManagementEventEventTypeEnumPowerDisconnected                   PowerManagementEventEventTypeEnum = "POWER_DISCONNECTED"
	PowerManagementEventEventTypeEnumBatteryLow                          PowerManagementEventEventTypeEnum = "BATTERY_LOW"
	PowerManagementEventEventTypeEnumBatteryOkay                         PowerManagementEventEventTypeEnum = "BATTERY_OKAY"
	PowerManagementEventEventTypeEnumBootCompleted                       PowerManagementEventEventTypeEnum = "BOOT_COMPLETED"
	PowerManagementEventEventTypeEnumShutdown                            PowerManagementEventEventTypeEnum = "SHUTDOWN"
)

func (e PowerManagementEventEventTypeEnum) ToPointer() *PowerManagementEventEventTypeEnum {
	return &e
}

func (e *PowerManagementEventEventTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "POWER_MANAGEMENT_EVENT_TYPE_UNSPECIFIED":
		fallthrough
	case "BATTERY_LEVEL_COLLECTED":
		fallthrough
	case "POWER_CONNECTED":
		fallthrough
	case "POWER_DISCONNECTED":
		fallthrough
	case "BATTERY_LOW":
		fallthrough
	case "BATTERY_OKAY":
		fallthrough
	case "BOOT_COMPLETED":
		fallthrough
	case "SHUTDOWN":
		*e = PowerManagementEventEventTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PowerManagementEventEventTypeEnum: %v", v)
	}
}

// PowerManagementEvent - A power management event.
type PowerManagementEvent struct {
	// For BATTERY_LEVEL_COLLECTED events, the battery level as a percentage.
	BatteryLevel *float32 `json:"batteryLevel,omitempty"`
	// The creation time of the event.
	CreateTime *string `json:"createTime,omitempty"`
	// Event type.
	EventType *PowerManagementEventEventTypeEnum `json:"eventType,omitempty"`
}
