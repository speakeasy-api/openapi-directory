"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import errormetric as shared_errormetric
from ..shared import weightedquantileloss as shared_weightedquantileloss
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Metrics:
    r"""Provides metrics that are used to evaluate the performance of a predictor. This object is part of the <a>WindowSummary</a> object."""
    
    average_weighted_quantile_loss: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AverageWeightedQuantileLoss'), 'exclude': lambda f: f is None }})  
    error_metrics: Optional[list[shared_errormetric.ErrorMetric]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ErrorMetrics'), 'exclude': lambda f: f is None }})  
    rmse: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RMSE'), 'exclude': lambda f: f is None }})  
    weighted_quantile_losses: Optional[list[shared_weightedquantileloss.WeightedQuantileLoss]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WeightedQuantileLosses'), 'exclude': lambda f: f is None }})  
    