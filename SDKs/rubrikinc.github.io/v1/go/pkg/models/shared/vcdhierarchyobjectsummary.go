// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// VcdHierarchyObjectSummarySLAAssignmentEnum - The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
type VcdHierarchyObjectSummarySLAAssignmentEnum string

const (
	VcdHierarchyObjectSummarySLAAssignmentEnumDerived    VcdHierarchyObjectSummarySLAAssignmentEnum = "Derived"
	VcdHierarchyObjectSummarySLAAssignmentEnumDirect     VcdHierarchyObjectSummarySLAAssignmentEnum = "Direct"
	VcdHierarchyObjectSummarySLAAssignmentEnumUnassigned VcdHierarchyObjectSummarySLAAssignmentEnum = "Unassigned"
)

func (e VcdHierarchyObjectSummarySLAAssignmentEnum) ToPointer() *VcdHierarchyObjectSummarySLAAssignmentEnum {
	return &e
}

func (e *VcdHierarchyObjectSummarySLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = VcdHierarchyObjectSummarySLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VcdHierarchyObjectSummarySLAAssignmentEnum: %v", v)
	}
}

// VcdHierarchyObjectSummary - Details of the hierarchy object.
type VcdHierarchyObjectSummary struct {
	// The ID of the SLA Domain configured directly on the Rubrik object.
	ConfiguredSLADomainID string `json:"configuredSlaDomainId"`
	// The name of the SLA Domain configured directly on the Rubrik object.
	ConfiguredSLADomainName string `json:"configuredSlaDomainName"`
	// Specifies whether the SLA Domain is used for protection or retention.
	ConfiguredSLADomainType *ConfiguredSLATypeEnum            `json:"configuredSlaDomainType,omitempty"`
	ConnectionStatus        *VcdConnectionStatus              `json:"connectionStatus,omitempty"`
	DescendantCount         VcdHierarchyObjectDescendantCount `json:"descendantCount"`
	// The ID of the SLA Domain that controls the protection of the Rubrik object.
	EffectiveSLADomainID string `json:"effectiveSlaDomainId"`
	// The name of the SLA Domain that controls the protection of the Rubrik object.
	EffectiveSLADomainName string `json:"effectiveSlaDomainName"`
	// Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.
	EffectiveSLADomainPolarisManagedID *string `json:"effectiveSlaDomainPolarisManagedId,omitempty"`
	// The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
	EffectiveSLASourceObjectID *string `json:"effectiveSlaSourceObjectId,omitempty"`
	// The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
	EffectiveSLASourceObjectName *string `json:"effectiveSlaSourceObjectName,omitempty"`
	// attributes pertaining to each vCD hierarchy object.
	ExtendedAttributes *VcdHierarchyObjectAttributes `json:"extendedAttributes,omitempty"`
	// The ID of the Rubrik object.
	ID        string                           `json:"id"`
	InfraPath []ManagedHierarchyObjectAncestor `json:"infraPath,omitempty"`
	// IPv4 address for a vCD cluster or vCenter Server that is managed through a VIM Server.
	IPAddress *string `json:"ipAddress,omitempty"`
	// Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
	IsConfiguredSLADomainRetentionLocked *bool `json:"isConfiguredSlaDomainRetentionLocked,omitempty"`
	// Indicates whether the managed hierarchy object is deleted.
	IsDeleted bool `json:"isDeleted"`
	// Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.
	IsEffectiveSLADomainRetentionLocked *bool `json:"isEffectiveSlaDomainRetentionLocked,omitempty"`
	// Whether this managed object is a relic (an archived snappable with unexpired snapshots).
	IsRelic bool `json:"isRelic"`
	// The name of the Rubrik object.
	Name string `json:"name"`
	// Types of object that can be present in the vCD hierarchy.
	ObjectType       VcdObjectTypeEnum            `json:"objectType"`
	PendingSLADomain *ManagedObjectPendingSLAInfo `json:"pendingSlaDomain,omitempty"`
	// The ID of the cluster that manages the Rubrik object.
	PrimaryClusterID string `json:"primaryClusterId"`
	// The ID of the SLA Domain whose retention policy is in use.
	RetentionSLADomainID *string `json:"retentionSlaDomainId,omitempty"`
	// The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
	SLAAssignment VcdHierarchyObjectSummarySLAAssignmentEnum `json:"slaAssignment"`
	// The UTC time when the SLA Domain was last updated.
	SLALastUpdateTime *time.Time                       `json:"slaLastUpdateTime,omitempty"`
	SLAPath           []ManagedHierarchyObjectAncestor `json:"slaPath,omitempty"`
	// ID assigned to a vCenter Server instance that is managed through a VIM Server.
	VcenterID *string `json:"vcenterId,omitempty"`
}
