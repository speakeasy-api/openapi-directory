/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RemoteFunctionOptions - Options for a remote user-defined function.
 */
public class RemoteFunctionOptions {
    /**
     * Fully qualified name of the user-provided connection object which holds the authentication information to send requests to the remote service. Format: ```"projects/{projectId}/locations/{locationId}/connections/{connectionId}"```
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connection")
    public String connection;

    public RemoteFunctionOptions withConnection(String connection) {
        this.connection = connection;
        return this;
    }
    
    /**
     * Endpoint of the user-provided remote service, e.g. ```https://us-east1-my_gcf_project.cloudfunctions.net/remote_add```
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpoint")
    public String endpoint;

    public RemoteFunctionOptions withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }
    
    /**
     * Max number of rows in each batch sent to the remote service. If absent or if 0, BigQuery dynamically decides the number of rows in a batch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxBatchingRows")
    public String maxBatchingRows;

    public RemoteFunctionOptions withMaxBatchingRows(String maxBatchingRows) {
        this.maxBatchingRows = maxBatchingRows;
        return this;
    }
    
    /**
     * User-defined context as a set of key/value pairs, which will be sent as function invocation context together with batched arguments in the requests to the remote service. The total number of bytes of keys and values must be less than 8KB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userDefinedContext")
    public java.util.Map<String, String> userDefinedContext;

    public RemoteFunctionOptions withUserDefinedContext(java.util.Map<String, String> userDefinedContext) {
        this.userDefinedContext = userDefinedContext;
        return this;
    }
    
    public RemoteFunctionOptions(){}
}
