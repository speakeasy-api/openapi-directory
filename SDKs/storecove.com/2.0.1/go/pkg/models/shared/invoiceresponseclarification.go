// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InvoiceResponseClarificationClarificationCodeEnum - The code for the clarification. For details see https://docs.peppol.eu/poacc/upgrade-3/codelist/OPStatusReason/ and https://docs.peppol.eu/poacc/upgrade-3/codelist/OPStatusAction/
type InvoiceResponseClarificationClarificationCodeEnum string

const (
	InvoiceResponseClarificationClarificationCodeEnumRef InvoiceResponseClarificationClarificationCodeEnum = "REF"
	InvoiceResponseClarificationClarificationCodeEnumLeg InvoiceResponseClarificationClarificationCodeEnum = "LEG"
	InvoiceResponseClarificationClarificationCodeEnumRec InvoiceResponseClarificationClarificationCodeEnum = "REC"
	InvoiceResponseClarificationClarificationCodeEnumQua InvoiceResponseClarificationClarificationCodeEnum = "QUA"
	InvoiceResponseClarificationClarificationCodeEnumDel InvoiceResponseClarificationClarificationCodeEnum = "DEL"
	InvoiceResponseClarificationClarificationCodeEnumPri InvoiceResponseClarificationClarificationCodeEnum = "PRI"
	InvoiceResponseClarificationClarificationCodeEnumQty InvoiceResponseClarificationClarificationCodeEnum = "QTY"
	InvoiceResponseClarificationClarificationCodeEnumItm InvoiceResponseClarificationClarificationCodeEnum = "ITM"
	InvoiceResponseClarificationClarificationCodeEnumPay InvoiceResponseClarificationClarificationCodeEnum = "PAY"
	InvoiceResponseClarificationClarificationCodeEnumUnr InvoiceResponseClarificationClarificationCodeEnum = "UNR"
	InvoiceResponseClarificationClarificationCodeEnumFin InvoiceResponseClarificationClarificationCodeEnum = "FIN"
	InvoiceResponseClarificationClarificationCodeEnumOth InvoiceResponseClarificationClarificationCodeEnum = "OTH"
	InvoiceResponseClarificationClarificationCodeEnumPin InvoiceResponseClarificationClarificationCodeEnum = "PIN"
	InvoiceResponseClarificationClarificationCodeEnumNin InvoiceResponseClarificationClarificationCodeEnum = "NIN"
	InvoiceResponseClarificationClarificationCodeEnumCnf InvoiceResponseClarificationClarificationCodeEnum = "CNF"
	InvoiceResponseClarificationClarificationCodeEnumCnp InvoiceResponseClarificationClarificationCodeEnum = "CNP"
	InvoiceResponseClarificationClarificationCodeEnumCna InvoiceResponseClarificationClarificationCodeEnum = "CNA"
)

func (e *InvoiceResponseClarificationClarificationCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REF":
		fallthrough
	case "LEG":
		fallthrough
	case "REC":
		fallthrough
	case "QUA":
		fallthrough
	case "DEL":
		fallthrough
	case "PRI":
		fallthrough
	case "QTY":
		fallthrough
	case "ITM":
		fallthrough
	case "PAY":
		fallthrough
	case "UNR":
		fallthrough
	case "FIN":
		fallthrough
	case "OTH":
		fallthrough
	case "PIN":
		fallthrough
	case "NIN":
		fallthrough
	case "CNF":
		fallthrough
	case "CNP":
		fallthrough
	case "CNA":
		*e = InvoiceResponseClarificationClarificationCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceResponseClarificationClarificationCodeEnum: %s", s)
	}
}

// InvoiceResponseClarificationClarificationCodeTypeEnum - The type of the clarification.
type InvoiceResponseClarificationClarificationCodeTypeEnum string

const (
	InvoiceResponseClarificationClarificationCodeTypeEnumOpStatusReason InvoiceResponseClarificationClarificationCodeTypeEnum = "OPStatusReason"
	InvoiceResponseClarificationClarificationCodeTypeEnumOpStatusAction InvoiceResponseClarificationClarificationCodeTypeEnum = "OPStatusAction"
)

func (e *InvoiceResponseClarificationClarificationCodeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OPStatusReason":
		fallthrough
	case "OPStatusAction":
		*e = InvoiceResponseClarificationClarificationCodeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceResponseClarificationClarificationCodeTypeEnum: %s", s)
	}
}

// InvoiceResponseClarification - A clarification for why a received invoice was rejected (RE) or under query (UQ) and what action to take.
type InvoiceResponseClarification struct {
	// A textual description of the clarification
	Clarification *string `json:"clarification,omitempty"`
	// The code for the clarification. For details see https://docs.peppol.eu/poacc/upgrade-3/codelist/OPStatusReason/ and https://docs.peppol.eu/poacc/upgrade-3/codelist/OPStatusAction/
	ClarificationCode InvoiceResponseClarificationClarificationCodeEnum `json:"clarificationCode"`
	// The type of the clarification.
	ClarificationCodeType InvoiceResponseClarificationClarificationCodeTypeEnum `json:"clarificationCodeType"`
}
