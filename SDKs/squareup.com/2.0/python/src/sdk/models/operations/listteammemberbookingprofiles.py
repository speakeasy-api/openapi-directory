"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listteammemberbookingprofilesresponse as shared_listteammemberbookingprofilesresponse
from typing import Optional


@dataclasses.dataclass
class ListTeamMemberBookingProfilesSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListTeamMemberBookingProfilesRequest:
    
    bookable_only: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'bookable_only', 'style': 'form', 'explode': True }})
    r"""Indicates whether to include only bookable team members in the returned result (`true`) or not (`false`)."""  
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""The cursor for paginating through the results."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""The maximum number of results to return."""  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'location_id', 'style': 'form', 'explode': True }})
    r"""Indicates whether to include only team members enabled at the given location in the returned result."""  
    

@dataclasses.dataclass
class ListTeamMemberBookingProfilesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_team_member_booking_profiles_response: Optional[shared_listteammemberbookingprofilesresponse.ListTeamMemberBookingProfilesResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    