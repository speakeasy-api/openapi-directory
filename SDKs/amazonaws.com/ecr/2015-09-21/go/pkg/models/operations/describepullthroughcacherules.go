// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribePullThroughCacheRulesXAmzTargetEnum
type DescribePullThroughCacheRulesXAmzTargetEnum string

const (
	DescribePullThroughCacheRulesXAmzTargetEnumAmazonEc2ContainerRegistryV20150921DescribePullThroughCacheRules DescribePullThroughCacheRulesXAmzTargetEnum = "AmazonEC2ContainerRegistry_V20150921.DescribePullThroughCacheRules"
)

func (e *DescribePullThroughCacheRulesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerRegistry_V20150921.DescribePullThroughCacheRules":
		*e = DescribePullThroughCacheRulesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribePullThroughCacheRulesXAmzTargetEnum: %s", s)
	}
}

type DescribePullThroughCacheRulesRequest struct {
	DescribePullThroughCacheRulesRequest shared.DescribePullThroughCacheRulesRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           DescribePullThroughCacheRulesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type DescribePullThroughCacheRulesResponse struct {
	ContentType string
	// Success
	DescribePullThroughCacheRulesResponse *shared.DescribePullThroughCacheRulesResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// PullThroughCacheRuleNotFoundException
	PullThroughCacheRuleNotFoundException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
	// ValidationException
	ValidationException interface{}
}
