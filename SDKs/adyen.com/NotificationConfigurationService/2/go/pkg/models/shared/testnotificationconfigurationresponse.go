// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TestNotificationConfigurationResponseEventTypesEnum string

const (
	TestNotificationConfigurationResponseEventTypesEnumAccountClosed                  TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_CLOSED"
	TestNotificationConfigurationResponseEventTypesEnumAccountCreated                 TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_CREATED"
	TestNotificationConfigurationResponseEventTypesEnumAccountFundsBelowThreshold     TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_FUNDS_BELOW_THRESHOLD"
	TestNotificationConfigurationResponseEventTypesEnumAccountHolderCreated           TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_HOLDER_CREATED"
	TestNotificationConfigurationResponseEventTypesEnumAccountHolderLimitReached      TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_HOLDER_LIMIT_REACHED"
	TestNotificationConfigurationResponseEventTypesEnumAccountHolderMigrated          TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_HOLDER_MIGRATED"
	TestNotificationConfigurationResponseEventTypesEnumAccountHolderPayout            TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_HOLDER_PAYOUT"
	TestNotificationConfigurationResponseEventTypesEnumAccountHolderStatusChange      TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_HOLDER_STATUS_CHANGE"
	TestNotificationConfigurationResponseEventTypesEnumAccountHolderStoreStatusChange TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
	TestNotificationConfigurationResponseEventTypesEnumAccountHolderUpcomingDeadline  TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
	TestNotificationConfigurationResponseEventTypesEnumAccountHolderUpdated           TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_HOLDER_UPDATED"
	TestNotificationConfigurationResponseEventTypesEnumAccountHolderVerification      TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_HOLDER_VERIFICATION"
	TestNotificationConfigurationResponseEventTypesEnumAccountUpdated                 TestNotificationConfigurationResponseEventTypesEnum = "ACCOUNT_UPDATED"
	TestNotificationConfigurationResponseEventTypesEnumBeneficiarySetup               TestNotificationConfigurationResponseEventTypesEnum = "BENEFICIARY_SETUP"
	TestNotificationConfigurationResponseEventTypesEnumCompensateNegativeBalance      TestNotificationConfigurationResponseEventTypesEnum = "COMPENSATE_NEGATIVE_BALANCE"
	TestNotificationConfigurationResponseEventTypesEnumDirectDebitInitiated           TestNotificationConfigurationResponseEventTypesEnum = "DIRECT_DEBIT_INITIATED"
	TestNotificationConfigurationResponseEventTypesEnumFundsMigrated                  TestNotificationConfigurationResponseEventTypesEnum = "FUNDS_MIGRATED"
	TestNotificationConfigurationResponseEventTypesEnumPaymentFailure                 TestNotificationConfigurationResponseEventTypesEnum = "PAYMENT_FAILURE"
	TestNotificationConfigurationResponseEventTypesEnumPendingCredit                  TestNotificationConfigurationResponseEventTypesEnum = "PENDING_CREDIT"
	TestNotificationConfigurationResponseEventTypesEnumRefundFundsTransfer            TestNotificationConfigurationResponseEventTypesEnum = "REFUND_FUNDS_TRANSFER"
	TestNotificationConfigurationResponseEventTypesEnumReportAvailable                TestNotificationConfigurationResponseEventTypesEnum = "REPORT_AVAILABLE"
	TestNotificationConfigurationResponseEventTypesEnumScheduledRefunds               TestNotificationConfigurationResponseEventTypesEnum = "SCHEDULED_REFUNDS"
	TestNotificationConfigurationResponseEventTypesEnumScoreSignalTriggered           TestNotificationConfigurationResponseEventTypesEnum = "SCORE_SIGNAL_TRIGGERED"
	TestNotificationConfigurationResponseEventTypesEnumTransferFunds                  TestNotificationConfigurationResponseEventTypesEnum = "TRANSFER_FUNDS"
	TestNotificationConfigurationResponseEventTypesEnumTransferNotPaidoutTransfers    TestNotificationConfigurationResponseEventTypesEnum = "TRANSFER_NOT_PAIDOUT_TRANSFERS"
)

func (e TestNotificationConfigurationResponseEventTypesEnum) ToPointer() *TestNotificationConfigurationResponseEventTypesEnum {
	return &e
}

func (e *TestNotificationConfigurationResponseEventTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT_CLOSED":
		fallthrough
	case "ACCOUNT_CREATED":
		fallthrough
	case "ACCOUNT_FUNDS_BELOW_THRESHOLD":
		fallthrough
	case "ACCOUNT_HOLDER_CREATED":
		fallthrough
	case "ACCOUNT_HOLDER_LIMIT_REACHED":
		fallthrough
	case "ACCOUNT_HOLDER_MIGRATED":
		fallthrough
	case "ACCOUNT_HOLDER_PAYOUT":
		fallthrough
	case "ACCOUNT_HOLDER_STATUS_CHANGE":
		fallthrough
	case "ACCOUNT_HOLDER_STORE_STATUS_CHANGE":
		fallthrough
	case "ACCOUNT_HOLDER_UPCOMING_DEADLINE":
		fallthrough
	case "ACCOUNT_HOLDER_UPDATED":
		fallthrough
	case "ACCOUNT_HOLDER_VERIFICATION":
		fallthrough
	case "ACCOUNT_UPDATED":
		fallthrough
	case "BENEFICIARY_SETUP":
		fallthrough
	case "COMPENSATE_NEGATIVE_BALANCE":
		fallthrough
	case "DIRECT_DEBIT_INITIATED":
		fallthrough
	case "FUNDS_MIGRATED":
		fallthrough
	case "PAYMENT_FAILURE":
		fallthrough
	case "PENDING_CREDIT":
		fallthrough
	case "REFUND_FUNDS_TRANSFER":
		fallthrough
	case "REPORT_AVAILABLE":
		fallthrough
	case "SCHEDULED_REFUNDS":
		fallthrough
	case "SCORE_SIGNAL_TRIGGERED":
		fallthrough
	case "TRANSFER_FUNDS":
		fallthrough
	case "TRANSFER_NOT_PAIDOUT_TRANSFERS":
		*e = TestNotificationConfigurationResponseEventTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TestNotificationConfigurationResponseEventTypesEnum: %v", v)
	}
}

// TestNotificationConfigurationResponse - OK - the request has succeeded.
type TestNotificationConfigurationResponse struct {
	// Any error messages encountered.
	ErrorMessages []string `json:"errorMessages,omitempty"`
	// The event types that were tested.
	// >Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
	EventTypes []TestNotificationConfigurationResponseEventTypesEnum `json:"eventTypes,omitempty"`
	// The notification message and related response messages.
	ExchangeMessages []ExchangeMessageWrapper `json:"exchangeMessages,omitempty"`
	// The ID of the notification subscription configuration.
	NotificationID int64 `json:"notificationId"`
	// A list of messages describing the testing steps.
	OkMessages []string `json:"okMessages,omitempty"`
	// The reference of a request. Can be used to uniquely identify the request.
	PspReference *string `json:"pspReference,omitempty"`
	// The result code.
	ResultCode *string `json:"resultCode,omitempty"`
	// Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:
	// * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.
	// * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
	SubmittedAsync *bool `json:"submittedAsync,omitempty"`
}
