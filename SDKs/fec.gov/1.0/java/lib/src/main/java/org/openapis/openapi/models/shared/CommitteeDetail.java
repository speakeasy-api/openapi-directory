/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class CommitteeDetail {
    /**
     * Affiliated committee or connected organization
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("affiliated_committee_name")
    public String affiliatedCommitteeName;

    public CommitteeDetail withAffiliatedCommitteeName(String affiliatedCommitteeName) {
        this.affiliatedCommitteeName = affiliatedCommitteeName;
        return this;
    }
    
    /**
     * A unique identifier assigned to each candidate registered with the FEC.
     * If a person runs for several offices, that person will have separate candidate IDs for each office.
     * First character indicates office - [P]residential, [H]ouse, [S]enate].
     * Second character is the last digit of the two-year period the ID was created.
     * Third and fourth is the candidate state. Presidential IDs don't have state.
     * Fifth and sixth is the district when the candidate first ran. This does not change if the
     * candidate/member's district changes during re-districting. Presidential IDs don't have districts.
     * The rest is sequence.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("candidate_ids")
    public String[] candidateIds;

    public CommitteeDetail withCandidateIds(String[] candidateIds) {
        this.candidateIds = candidateIds;
        return this;
    }
    
    /**
     * City of committee as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;

    public CommitteeDetail withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
     * 
     */
    @JsonProperty("committee_id")
    public String committeeId;

    public CommitteeDetail withCommitteeId(String committeeId) {
        this.committeeId = committeeId;
        return this;
    }
    
    /**
     * The one-letter type code of the organization:
     *         - C communication cost
     *         - D delegate
     *         - E electioneering communication
     *         - H House
     *         - I independent expenditure filer (not a committee)
     *         - N PAC - nonqualified
     *         - O independent expenditure-only (super PACs)
     *         - P presidential
     *         - Q PAC - qualified
     *         - S Senate
     *         - U single candidate independent expenditure
     *         - V PAC with non-contribution account, nonqualified
     *         - W PAC with non-contribution account, qualified
     *         - X party, nonqualified
     *         - Y party, qualified
     *         - Z national party non-federal account
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committee_type")
    public String committeeType;

    public CommitteeDetail withCommitteeType(String committeeType) {
        this.committeeType = committeeType;
        return this;
    }
    
    /**
     * The one-letter type code of the organization:
     *         - C communication cost
     *         - D delegate
     *         - E electioneering communication
     *         - H House
     *         - I independent expenditure filer (not a committee)
     *         - N PAC - nonqualified
     *         - O independent expenditure-only (super PACs)
     *         - P presidential
     *         - Q PAC - qualified
     *         - S Senate
     *         - U single candidate independent expenditure
     *         - V PAC with non-contribution account, nonqualified
     *         - W PAC with non-contribution account, qualified
     *         - X party, nonqualified
     *         - Y party, qualified
     *         - Z national party non-federal account
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committee_type_full")
    public String committeeTypeFull;

    public CommitteeDetail withCommitteeTypeFull(String committeeTypeFull) {
        this.committeeTypeFull = committeeTypeFull;
        return this;
    }
    
    /**
     * City of committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_city")
    public String custodianCity;

    public CommitteeDetail withCustodianCity(String custodianCity) {
        this.custodianCity = custodianCity;
        return this;
    }
    
    /**
     * Name 1 of committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_name_1")
    public String custodianName1;

    public CommitteeDetail withCustodianName1(String custodianName1) {
        this.custodianName1 = custodianName1;
        return this;
    }
    
    /**
     * Name 2 of committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_name_2")
    public String custodianName2;

    public CommitteeDetail withCustodianName2(String custodianName2) {
        this.custodianName2 = custodianName2;
        return this;
    }
    
    /**
     * Full name of committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_name_full")
    public String custodianNameFull;

    public CommitteeDetail withCustodianNameFull(String custodianNameFull) {
        this.custodianNameFull = custodianNameFull;
        return this;
    }
    
    /**
     * Middle name of committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_name_middle")
    public String custodianNameMiddle;

    public CommitteeDetail withCustodianNameMiddle(String custodianNameMiddle) {
        this.custodianNameMiddle = custodianNameMiddle;
        return this;
    }
    
    /**
     * Name prefix of committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_name_prefix")
    public String custodianNamePrefix;

    public CommitteeDetail withCustodianNamePrefix(String custodianNamePrefix) {
        this.custodianNamePrefix = custodianNamePrefix;
        return this;
    }
    
    /**
     * Suffix name of the committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_name_suffix")
    public String custodianNameSuffix;

    public CommitteeDetail withCustodianNameSuffix(String custodianNameSuffix) {
        this.custodianNameSuffix = custodianNameSuffix;
        return this;
    }
    
    /**
     * Name title of the committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_name_title")
    public String custodianNameTitle;

    public CommitteeDetail withCustodianNameTitle(String custodianNameTitle) {
        this.custodianNameTitle = custodianNameTitle;
        return this;
    }
    
    /**
     * Phone number of committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_phone")
    public String custodianPhone;

    public CommitteeDetail withCustodianPhone(String custodianPhone) {
        this.custodianPhone = custodianPhone;
        return this;
    }
    
    /**
     * State of committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_state")
    public String custodianState;

    public CommitteeDetail withCustodianState(String custodianState) {
        this.custodianState = custodianState;
        return this;
    }
    
    /**
     * Street address of the committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_street_1")
    public String custodianStreet1;

    public CommitteeDetail withCustodianStreet1(String custodianStreet1) {
        this.custodianStreet1 = custodianStreet1;
        return this;
    }
    
    /**
     * Second line of the street address of the committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_street_2")
    public String custodianStreet2;

    public CommitteeDetail withCustodianStreet2(String custodianStreet2) {
        this.custodianStreet2 = custodianStreet2;
        return this;
    }
    
    /**
     * Zip code of the committee custodian as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custodian_zip")
    public String custodianZip;

    public CommitteeDetail withCustodianZip(String custodianZip) {
        this.custodianZip = custodianZip;
        return this;
    }
    
    /**
     * A two year election cycle that the committee was active- (after original registration
     * date but before expiration date in Form 1s) The cycle begins with
     * an odd year and is named for its ending, even year.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cycles")
    public Integer[] cycles;

    public CommitteeDetail withCycles(Integer[] cycles) {
        this.cycles = cycles;
        return this;
    }
    
    /**
     * The one-letter designation code of the organization:
     *          - A authorized by a candidate
     *          - J joint fundraising committee
     *          - P principal campaign committee of a candidate
     *          - U unauthorized
     *          - B lobbyist/registrant PAC
     *          - D leadership PAC
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("designation")
    public String designation;

    public CommitteeDetail withDesignation(String designation) {
        this.designation = designation;
        return this;
    }
    
    /**
     * The one-letter designation code of the organization:
     *          - A authorized by a candidate
     *          - J joint fundraising committee
     *          - P principal campaign committee of a candidate
     *          - U unauthorized
     *          - B lobbyist/registrant PAC
     *          - D leadership PAC
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("designation_full")
    public String designationFull;

    public CommitteeDetail withDesignationFull(String designationFull) {
        this.designationFull = designationFull;
        return this;
    }
    
    /**
     * Email as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public CommitteeDetail withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Fax as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fax")
    public String fax;

    public CommitteeDetail withFax(String fax) {
        this.fax = fax;
        return this;
    }
    
    /**
     * The one-letter 
     *     code of the filing frequency:
     *          - A Administratively terminated
     *          - D Debt
     *          - M Monthly filer
     *          - Q Quarterly filer
     *          - T Terminated
     *          - W Waived
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filing_frequency")
    public String filingFrequency;

    public CommitteeDetail withFilingFrequency(String filingFrequency) {
        this.filingFrequency = filingFrequency;
        return this;
    }
    
    /**
     * The day the FEC received the committee's first Form 1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("first_f1_date")
    public LocalDate firstF1Date;

    public CommitteeDetail withFirstF1Date(LocalDate firstF1Date) {
        this.firstF1Date = firstF1Date;
        return this;
    }
    
    /**
     * The day the FEC received the committee's first filing. This is usually a Form 1 committee registration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("first_file_date")
    public LocalDate firstFileDate;

    public CommitteeDetail withFirstFileDate(LocalDate firstFileDate) {
        this.firstFileDate = firstFileDate;
        return this;
    }
    
    /**
     * The form where the underlying data comes from, for example, Form 1 would appear as F1:
     *     - F1   Statement of Organization
     *     - F1M  Notification of Multicandidate Status
     *     - F2   Statement of Candidacy
     *     - F3   Report of Receipts and Disbursements for an Authorized Committee
     *     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President
     *     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs
     *     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee
     *     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention
     *     - F5   Report of Independent Expenditures Made and Contributions Received
     *     - F6   48 Hour Notice of Contributions/Loans Received
     *     - F7   Report of Communication Costs by Corporations and Membership Organizations
     *     - F8   Debt Settlement Plan
     *     - F9   24 Hour Notice of Disbursements for Electioneering Communications
     *     - F13  Report of Donations Accepted for Inaugural Committee
     *     - F99  Miscellaneous Text
     *     - FRQ  Request for Additional Information
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("form_type")
    public String formType;

    public CommitteeDetail withFormType(String formType) {
        this.formType = formType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jfc_committee")
    public CommitteeDetailJfcCommittee[] jfcCommittee;

    public CommitteeDetail withJfcCommittee(CommitteeDetailJfcCommittee[] jfcCommittee) {
        this.jfcCommittee = jfcCommittee;
        return this;
    }
    
    /**
     * The day the FEC received the committee's most recent Form 1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("last_f1_date")
    public LocalDate lastF1Date;

    public CommitteeDetail withLastF1Date(LocalDate lastF1Date) {
        this.lastF1Date = lastF1Date;
        return this;
    }
    
    /**
     * The day the FEC received the committee's most recent filing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("last_file_date")
    public LocalDate lastFileDate;

    public CommitteeDetail withLastFileDate(LocalDate lastFileDate) {
        this.lastFileDate = lastFileDate;
        return this;
    }
    
    /**
     * Indicates if the committee is a leadership PAC
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("leadership_pac")
    public String leadershipPac;

    public CommitteeDetail withLeadershipPac(String leadershipPac) {
        this.leadershipPac = leadershipPac;
        return this;
    }
    
    /**
     * Indicates if the committee is a lobbyist registrant PAC
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lobbyist_registrant_pac")
    public String lobbyistRegistrantPac;

    public CommitteeDetail withLobbyistRegistrantPac(String lobbyistRegistrantPac) {
        this.lobbyistRegistrantPac = lobbyistRegistrantPac;
        return this;
    }
    
    /**
     * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CommitteeDetail withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The one-letter code for the kind for organization:
     *         - C corporation
     *         - L labor organization
     *         - M membership organization
     *         - T trade association
     *         - V cooperative
     *         - W corporation without capital stock
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization_type")
    public String organizationType;

    public CommitteeDetail withOrganizationType(String organizationType) {
        this.organizationType = organizationType;
        return this;
    }
    
    /**
     * The one-letter code for the kind for organization:
     *         - C corporation
     *         - L labor organization
     *         - M membership organization
     *         - T trade association
     *         - V cooperative
     *         - W corporation without capital stock
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization_type_full")
    public String organizationTypeFull;

    public CommitteeDetail withOrganizationTypeFull(String organizationTypeFull) {
        this.organizationTypeFull = organizationTypeFull;
        return this;
    }
    
    /**
     * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("party")
    public String party;

    public CommitteeDetail withParty(String party) {
        this.party = party;
        return this;
    }
    
    /**
     * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("party_full")
    public String partyFull;

    public CommitteeDetail withPartyFull(String partyFull) {
        this.partyFull = partyFull;
        return this;
    }
    
    /**
     * Code for the type of party the committee is, only if applicable
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("party_type")
    public String partyType;

    public CommitteeDetail withPartyType(String partyType) {
        this.partyType = partyType;
        return this;
    }
    
    /**
     * Description of the type of party the committee is, only if applicable
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("party_type_full")
    public String partyTypeFull;

    public CommitteeDetail withPartyTypeFull(String partyTypeFull) {
        this.partyTypeFull = partyTypeFull;
        return this;
    }
    
    /**
     * A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. This is a filter for Leadership PAC sponsor.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sponsor_candidate_ids")
    public String[] sponsorCandidateIds;

    public CommitteeDetail withSponsorCandidateIds(String[] sponsorCandidateIds) {
        this.sponsorCandidateIds = sponsorCandidateIds;
        return this;
    }
    
    /**
     * State of the committee's address as filed on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public CommitteeDetail withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * State of committee as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state_full")
    public String stateFull;

    public CommitteeDetail withStateFull(String stateFull) {
        this.stateFull = stateFull;
        return this;
    }
    
    /**
     * Street address of committee as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("street_1")
    public String street1;

    public CommitteeDetail withStreet1(String street1) {
        this.street1 = street1;
        return this;
    }
    
    /**
     * Second line of street address of committee as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("street_2")
    public String street2;

    public CommitteeDetail withStreet2(String street2) {
        this.street2 = street2;
        return this;
    }
    
    /**
     * City of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_city")
    public String treasurerCity;

    public CommitteeDetail withTreasurerCity(String treasurerCity) {
        this.treasurerCity = treasurerCity;
        return this;
    }
    
    /**
     * Name of the Committee's treasurer. If multiple treasurers for the committee, the most recent treasurer will be shown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_name")
    public String treasurerName;

    public CommitteeDetail withTreasurerName(String treasurerName) {
        this.treasurerName = treasurerName;
        return this;
    }
    
    /**
     * Name 1 of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_name_1")
    public String treasurerName1;

    public CommitteeDetail withTreasurerName1(String treasurerName1) {
        this.treasurerName1 = treasurerName1;
        return this;
    }
    
    /**
     * Name 2 of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_name_2")
    public String treasurerName2;

    public CommitteeDetail withTreasurerName2(String treasurerName2) {
        this.treasurerName2 = treasurerName2;
        return this;
    }
    
    /**
     * Middle name of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_name_middle")
    public String treasurerNameMiddle;

    public CommitteeDetail withTreasurerNameMiddle(String treasurerNameMiddle) {
        this.treasurerNameMiddle = treasurerNameMiddle;
        return this;
    }
    
    /**
     * Name Prefix of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_name_prefix")
    public String treasurerNamePrefix;

    public CommitteeDetail withTreasurerNamePrefix(String treasurerNamePrefix) {
        this.treasurerNamePrefix = treasurerNamePrefix;
        return this;
    }
    
    /**
     * Name suffix of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_name_suffix")
    public String treasurerNameSuffix;

    public CommitteeDetail withTreasurerNameSuffix(String treasurerNameSuffix) {
        this.treasurerNameSuffix = treasurerNameSuffix;
        return this;
    }
    
    /**
     * Name title of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_name_title")
    public String treasurerNameTitle;

    public CommitteeDetail withTreasurerNameTitle(String treasurerNameTitle) {
        this.treasurerNameTitle = treasurerNameTitle;
        return this;
    }
    
    /**
     * Phone of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_phone")
    public String treasurerPhone;

    public CommitteeDetail withTreasurerPhone(String treasurerPhone) {
        this.treasurerPhone = treasurerPhone;
        return this;
    }
    
    /**
     * State of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_state")
    public String treasurerState;

    public CommitteeDetail withTreasurerState(String treasurerState) {
        this.treasurerState = treasurerState;
        return this;
    }
    
    /**
     * Street of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_street_1")
    public String treasurerStreet1;

    public CommitteeDetail withTreasurerStreet1(String treasurerStreet1) {
        this.treasurerStreet1 = treasurerStreet1;
        return this;
    }
    
    /**
     * Second line of the street of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_street_2")
    public String treasurerStreet2;

    public CommitteeDetail withTreasurerStreet2(String treasurerStreet2) {
        this.treasurerStreet2 = treasurerStreet2;
        return this;
    }
    
    /**
     * Zip code of committee treasurer as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treasurer_zip")
    public String treasurerZip;

    public CommitteeDetail withTreasurerZip(String treasurerZip) {
        this.treasurerZip = treasurerZip;
        return this;
    }
    
    /**
     * Website url as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("website")
    public String website;

    public CommitteeDetail withWebsite(String website) {
        this.website = website;
        return this;
    }
    
    /**
     * Zip code of committee as reported on the Form 1
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zip")
    public String zip;

    public CommitteeDetail withZip(String zip) {
        this.zip = zip;
        return this;
    }
    
    public CommitteeDetail(@JsonProperty("committee_id") String committeeId) {
        this.committeeId = committeeId;
  }
}
