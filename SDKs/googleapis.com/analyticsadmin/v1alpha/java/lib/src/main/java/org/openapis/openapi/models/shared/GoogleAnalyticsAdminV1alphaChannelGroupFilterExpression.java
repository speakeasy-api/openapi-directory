/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleAnalyticsAdminV1alphaChannelGroupFilterExpression - A logical expression of Channel Group dimension filters.
 */
public class GoogleAnalyticsAdminV1alphaChannelGroupFilterExpression {
    /**
     * A list of Channel Group filter expressions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("andGroup")
    public GoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList andGroup;

    public GoogleAnalyticsAdminV1alphaChannelGroupFilterExpression withAndGroup(GoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList andGroup) {
        this.andGroup = andGroup;
        return this;
    }
    
    /**
     * A specific filter for a single dimension.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filter")
    public GoogleAnalyticsAdminV1alphaChannelGroupFilter filter;

    public GoogleAnalyticsAdminV1alphaChannelGroupFilterExpression withFilter(GoogleAnalyticsAdminV1alphaChannelGroupFilter filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * A logical expression of Channel Group dimension filters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notExpression")
    public GoogleAnalyticsAdminV1alphaChannelGroupFilterExpression notExpression;

    public GoogleAnalyticsAdminV1alphaChannelGroupFilterExpression withNotExpression(GoogleAnalyticsAdminV1alphaChannelGroupFilterExpression notExpression) {
        this.notExpression = notExpression;
        return this;
    }
    
    /**
     * A list of Channel Group filter expressions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orGroup")
    public GoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList orGroup;

    public GoogleAnalyticsAdminV1alphaChannelGroupFilterExpression withOrGroup(GoogleAnalyticsAdminV1alphaChannelGroupFilterExpressionList orGroup) {
        this.orGroup = orGroup;
        return this;
    }
    
    public GoogleAnalyticsAdminV1alphaChannelGroupFilterExpression(){}
}
