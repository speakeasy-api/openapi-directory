/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ObjectDefinition - The definition for an object within a data source.
 */
public class ObjectDefinition {
    /**
     * The name for the object, which then defines its type. Item indexing requests should set the objectType field equal to this value. For example, if *name* is *Document*, then indexing requests for items of type Document should set objectType equal to *Document*. Each object definition must be uniquely named within a schema. The name must start with a letter and can only contain letters (A-Z, a-z) or numbers (0-9). The maximum length is 256 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ObjectDefinition withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The options for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public ObjectOptions options;

    public ObjectDefinition withOptions(ObjectOptions options) {
        this.options = options;
        return this;
    }
    
    /**
     * The property definitions for the object. The maximum number of elements is 1000.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("propertyDefinitions")
    public PropertyDefinition[] propertyDefinitions;

    public ObjectDefinition withPropertyDefinitions(PropertyDefinition[] propertyDefinitions) {
        this.propertyDefinitions = propertyDefinitions;
        return this;
    }
    
    public ObjectDefinition(){}
}
