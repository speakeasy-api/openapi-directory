/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * ViewerCertificate - &lt;p&gt;A complex type that specifies the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Whether you want viewers to use HTTP or HTTPS to request your objects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you want viewers to use HTTPS, whether you're using an alternate domain name such as &lt;code&gt;example.com&lt;/code&gt; or the CloudFront domain name for your distribution, such as &lt;code&gt;d111111abcdef8.cloudfront.net&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;If you're using an alternate domain name, whether AWS Certificate Manager (ACM) provided the certificate, or you purchased a certificate from a third-party certificate authority and imported it into ACM or uploaded it to the IAM certificate store.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You must specify only one of the following values: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ViewerCertificate$ACMCertificateArn&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ViewerCertificate$IAMCertificateId&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;ViewerCertificate$CloudFrontDefaultCertificate&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Don't specify &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;CloudFrontDefaultCertificate&lt;/code&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;If you want viewers to use HTTP instead of HTTPS to request your objects&lt;/b&gt;: Specify the following value:&lt;/p&gt; &lt;p&gt; &lt;code&gt;&amp;lt;CloudFrontDefaultCertificate&amp;gt;true&amp;lt;CloudFrontDefaultCertificate&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;p&gt;In addition, specify &lt;code&gt;allow-all&lt;/code&gt; for &lt;code&gt;ViewerProtocolPolicy&lt;/code&gt; for all of your cache behaviors.&lt;/p&gt; &lt;p&gt; &lt;b&gt;If you want viewers to use HTTPS to request your objects&lt;/b&gt;: Choose the type of certificate that you want to use based on whether you're using an alternate domain name for your objects or the CloudFront domain name:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;If you're using an alternate domain name, such as example.com&lt;/b&gt;: Specify one of the following values, depending on whether ACM provided your certificate or you purchased your certificate from third-party certificate authority:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;&amp;lt;ACMCertificateArn&amp;gt;&lt;i&gt;ARN for ACM SSL/TLS certificate&lt;/i&gt;&amp;lt;ACMCertificateArn&amp;gt;&lt;/code&gt; where &lt;code&gt; &lt;i&gt;ARN for ACM SSL/TLS certificate&lt;/i&gt; &lt;/code&gt; is the ARN for the ACM SSL/TLS certificate that you want to use for this distribution.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;&amp;lt;IAMCertificateId&amp;gt;&lt;i&gt;IAM certificate ID&lt;/i&gt;&amp;lt;IAMCertificateId&amp;gt;&lt;/code&gt; where &lt;code&gt; &lt;i&gt;IAM certificate ID&lt;/i&gt; &lt;/code&gt; is the ID that IAM returned when you added the certificate to the IAM certificate store.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you specify &lt;code&gt;ACMCertificateArn&lt;/code&gt; or &lt;code&gt;IAMCertificateId&lt;/code&gt;, you must also specify a value for &lt;code&gt;SSLSupportMethod&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you choose to use an ACM certificate or a certificate in the IAM certificate store, we recommend that you use only an alternate domain name in your object URLs (&lt;code&gt;https://example.com/logo.jpg&lt;/code&gt;). If you use the domain name that is associated with your CloudFront distribution (such as &lt;code&gt;https://d111111abcdef8.cloudfront.net/logo.jpg&lt;/code&gt;) and the viewer supports &lt;code&gt;SNI&lt;/code&gt;, then CloudFront behaves normally. However, if the browser does not support SNI, the user's experience depends on the value that you choose for &lt;code&gt;SSLSupportMethod&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;vip&lt;/code&gt;: The viewer displays a warning because there is a mismatch between the CloudFront domain name and the domain name in your SSL/TLS certificate.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;sni-only&lt;/code&gt;: CloudFront drops the connection with the browser without returning the object.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;If you're using the CloudFront domain name for your distribution, such as &lt;code&gt;d111111abcdef8.cloudfront.net&lt;/code&gt; &lt;/b&gt;: Specify the following value:&lt;/p&gt; &lt;p&gt; &lt;code&gt;&amp;lt;CloudFrontDefaultCertificate&amp;gt;true&amp;lt;CloudFrontDefaultCertificate&amp;gt; &lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you want viewers to use HTTPS, you must also specify one of the following values in your cache behaviors:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt; &amp;lt;ViewerProtocolPolicy&amp;gt;https-only&amp;lt;ViewerProtocolPolicy&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;&amp;lt;ViewerProtocolPolicy&amp;gt;redirect-to-https&amp;lt;ViewerProtocolPolicy&amp;gt;&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can also optionally require that CloudFront use HTTPS to communicate with your origin by specifying one of the following values for the applicable origins:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;&amp;lt;OriginProtocolPolicy&amp;gt;https-only&amp;lt;OriginProtocolPolicy&amp;gt; &lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;&amp;lt;OriginProtocolPolicy&amp;gt;match-viewer&amp;lt;OriginProtocolPolicy&amp;gt; &lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html#CNAMEsAndHTTPS"&gt;Using Alternate Domain Names and HTTPS&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */
public class ViewerCertificate {
    
    public String acmCertificateArn;
    public ViewerCertificate withACMCertificateArn(String acmCertificateArn) {
        this.acmCertificateArn = acmCertificateArn;
        return this;
    }
    
    
    public String certificate;
    public ViewerCertificate withCertificate(String certificate) {
        this.certificate = certificate;
        return this;
    }
    
    
    public ViewerCertificateCertificateSourceEnum certificateSource;
    public ViewerCertificate withCertificateSource(ViewerCertificateCertificateSourceEnum certificateSource) {
        this.certificateSource = certificateSource;
        return this;
    }
    
    
    public Boolean cloudFrontDefaultCertificate;
    public ViewerCertificate withCloudFrontDefaultCertificate(Boolean cloudFrontDefaultCertificate) {
        this.cloudFrontDefaultCertificate = cloudFrontDefaultCertificate;
        return this;
    }
    
    
    public String iamCertificateId;
    public ViewerCertificate withIAMCertificateId(String iamCertificateId) {
        this.iamCertificateId = iamCertificateId;
        return this;
    }
    
    
    public MinimumProtocolVersionEnum minimumProtocolVersion;
    public ViewerCertificate withMinimumProtocolVersion(MinimumProtocolVersionEnum minimumProtocolVersion) {
        this.minimumProtocolVersion = minimumProtocolVersion;
        return this;
    }
    
    
    public SSLSupportMethodEnum sslSupportMethod;
    public ViewerCertificate withSSLSupportMethod(SSLSupportMethodEnum sslSupportMethod) {
        this.sslSupportMethod = sslSupportMethod;
        return this;
    }
    
}
