/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FieldMetadata, FieldMetadataInput } from "./fieldmetadata";
import { Expose, Type } from "class-transformer";

/**
 * The type of the nickname.
 */
export enum NicknameTypeEnum {
  Default = "DEFAULT",
  MaidenName = "MAIDEN_NAME",
  Initials = "INITIALS",
  Gplus = "GPLUS",
  OtherName = "OTHER_NAME",
  AlternateName = "ALTERNATE_NAME",
  ShortName = "SHORT_NAME",
}

/**
 * A person's nickname.
 */
export class Nickname extends SpeakeasyBase {
  /**
   * Metadata about a field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => FieldMetadata)
  metadata?: FieldMetadata;

  /**
   * The type of the nickname.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: NicknameTypeEnum;

  /**
   * The nickname.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * A person's nickname.
 */
export class NicknameInput extends SpeakeasyBase {
  /**
   * Metadata about a field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => FieldMetadataInput)
  metadata?: FieldMetadataInput;

  /**
   * The type of the nickname.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: NicknameTypeEnum;

  /**
   * The nickname.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
