"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatapipelinesv1dataflowjobdetails as shared_googleclouddatapipelinesv1dataflowjobdetails
from ..shared import googlerpcstatus as shared_googlerpcstatus
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatapipelinesV1JobStateEnum(str, Enum):
    r"""The current state of the job."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    STATE_PENDING = 'STATE_PENDING'
    STATE_RUNNING = 'STATE_RUNNING'
    STATE_DONE = 'STATE_DONE'
    STATE_FAILED = 'STATE_FAILED'
    STATE_CANCELLED = 'STATE_CANCELLED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatapipelinesV1Job:
    r"""Definition of the job information maintained by the pipeline. Fields in this entity are retrieved from the executor API (e.g. Dataflow API)."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time of job creation."""  
    dataflow_job_details: Optional[shared_googleclouddatapipelinesv1dataflowjobdetails.GoogleCloudDatapipelinesV1DataflowJobDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataflowJobDetails'), 'exclude': lambda f: f is None }})
    r"""Pipeline job details specific to the Dataflow API. This is encapsulated here to allow for more executors to store their specific details separately."""  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time of job termination. This is absent if the job is still running."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Output only. The internal ID for the job."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. The fully qualified resource name for the job."""  
    state: Optional[GoogleCloudDatapipelinesV1JobStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The current state of the job."""  
    status: Optional[shared_googlerpcstatus.GoogleRPCStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."""  
    