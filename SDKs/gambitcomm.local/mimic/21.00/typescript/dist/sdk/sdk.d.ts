import { AxiosInstance } from "axios";
import { Security } from "./models/shared";
import { Access } from "./access";
import { Agent } from "./agent";
import { Coap } from "./coap";
import { Dhcp } from "./dhcp";
import { Daemon } from "./daemon";
import { Ipmi } from "./ipmi";
import { Mqtt } from "./mqtt";
import { Netflow } from "./netflow";
import { Proxy } from "./proxy";
import { Sflow } from "./sflow";
import { Snmptcp } from "./snmptcp";
import { SnmPv3 } from "./snmpv3";
import { Ssh } from "./ssh";
import { Syslog } from "./syslog";
import { Telnet } from "./telnet";
import { Tftp } from "./tftp";
import { Tod } from "./tod";
import { Valuespace } from "./valuespace";
import { Web } from "./web";
export declare const ServerList: readonly ["http://gambitcomm.local", "http://127.0.0.1"];
export type SDKProps = {
    defaultClient?: AxiosInstance;
    security?: Security;
    serverUrl?: string;
};
export declare class SDK {
    access: Access;
    agent: Agent;
    coap: Coap;
    dhcp: Dhcp;
    daemon: Daemon;
    ipmi: Ipmi;
    mqtt: Mqtt;
    netflow: Netflow;
    proxy: Proxy;
    sflow: Sflow;
    snmptcp: Snmptcp;
    snmPv3: SnmPv3;
    ssh: Ssh;
    syslog: Syslog;
    telnet: Telnet;
    tftp: Tftp;
    tod: Tod;
    valuespace: Valuespace;
    web: Web;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(props: SDKProps);
}
