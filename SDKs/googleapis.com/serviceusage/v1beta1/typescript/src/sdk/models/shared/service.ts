/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ServiceConfig } from "./serviceconfig";
import { Expose, Type } from "class-transformer";

/**
 * Whether or not the service has been enabled for use by the consumer.
 */
export enum ServiceStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Disabled = "DISABLED",
  Enabled = "ENABLED",
}

/**
 * A service that is available for use by the consumer.
 */
export class Service extends SpeakeasyBase {
  /**
   * The configuration of the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  @Type(() => ServiceConfig)
  config?: ServiceConfig;

  /**
   * The resource name of the consumer and service. A valid name would be: - `projects/123/services/serviceusage.googleapis.com`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The resource name of the consumer. A valid name would be: - `projects/123`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent" })
  parent?: string;

  /**
   * Whether or not the service has been enabled for use by the consumer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ServiceStateEnum;
}
