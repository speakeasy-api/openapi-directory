"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FindReplaceResponse:
    r"""The result of the find/replace."""
    
    formulas_changed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formulasChanged'), 'exclude': lambda f: f is None }})
    r"""The number of formula cells changed."""  
    occurrences_changed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('occurrencesChanged'), 'exclude': lambda f: f is None }})
    r"""The number of occurrences (possibly multiple within a cell) changed. For example, if replacing `\\"e\\"` with `\\"o\\"` in `\\"Google Sheets\\"`, this would be `\\"3\\"` because `\\"Google Sheets\\"` -> `\\"Googlo Shoots\\"`."""  
    rows_changed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowsChanged'), 'exclude': lambda f: f is None }})
    r"""The number of rows changed."""  
    sheets_changed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sheetsChanged'), 'exclude': lambda f: f is None }})
    r"""The number of sheets changed."""  
    values_changed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('valuesChanged'), 'exclude': lambda f: f is None }})
    r"""The number of non-formula cells changed."""  
    