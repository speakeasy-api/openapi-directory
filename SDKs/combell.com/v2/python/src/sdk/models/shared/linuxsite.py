"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import hostheader as shared_hostheader
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LinuxSite:
    
    host_headers: Optional[list[shared_hostheader.HostHeader]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('host_headers'), 'exclude': lambda f: f is None }})
    r"""Host headers for the website."""  
    http2_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http2_enabled'), 'exclude': lambda f: f is None }})
    r"""Indicates whether http/2 protocol is enabled for the website."""  
    https_redirect_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('https_redirect_enabled'), 'exclude': lambda f: f is None }})
    r"""Indicates whether automatic https redirection is enabled for the website."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the website."""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""The path of the website."""  
    ssl_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssl_enabled'), 'exclude': lambda f: f is None }})
    r"""Indicates whether ssl is enabled for the website."""  
    