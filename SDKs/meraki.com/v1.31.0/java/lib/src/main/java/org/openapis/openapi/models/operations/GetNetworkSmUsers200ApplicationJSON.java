/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetNetworkSmUsers200ApplicationJSON {
    /**
     * Active Directory Groups the user belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adGroups")
    public String[] adGroups;
    public GetNetworkSmUsers200ApplicationJSON withAdGroups(String[] adGroups) {
        this.adGroups = adGroups;
        return this;
    }
    
    /**
     * Apple School Manager Groups the user belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("asmGroups")
    public String[] asmGroups;
    public GetNetworkSmUsers200ApplicationJSON withAsmGroups(String[] asmGroups) {
        this.asmGroups = asmGroups;
        return this;
    }
    
    /**
     * Azure Active Directory Groups the user belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("azureAdGroups")
    public String[] azureAdGroups;
    public GetNetworkSmUsers200ApplicationJSON withAzureAdGroups(String[] azureAdGroups) {
        this.azureAdGroups = azureAdGroups;
        return this;
    }
    
    /**
     * The user display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public GetNetworkSmUsers200ApplicationJSON withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * User email.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public GetNetworkSmUsers200ApplicationJSON withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * User full name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullName")
    public String fullName;
    public GetNetworkSmUsers200ApplicationJSON withFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }
    
    /**
     * A boolean indicating if the user has an associated identity certificate..
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasIdentityCertificate")
    public Boolean hasIdentityCertificate;
    public GetNetworkSmUsers200ApplicationJSON withHasIdentityCertificate(Boolean hasIdentityCertificate) {
        this.hasIdentityCertificate = hasIdentityCertificate;
        return this;
    }
    
    /**
     * A boolean denoting if the user has a password associated with the record.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasPassword")
    public Boolean hasPassword;
    public GetNetworkSmUsers200ApplicationJSON withHasPassword(Boolean hasPassword) {
        this.hasPassword = hasPassword;
        return this;
    }
    
    /**
     * The Meraki managed Id of the user record.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GetNetworkSmUsers200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether the user was created using an external integration, or via the Meraki Dashboard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isExternal")
    public Boolean isExternal;
    public GetNetworkSmUsers200ApplicationJSON withIsExternal(Boolean isExternal) {
        this.isExternal = isExternal;
        return this;
    }
    
    /**
     * SAML Groups the user belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("samlGroups")
    public String[] samlGroups;
    public GetNetworkSmUsers200ApplicationJSON withSamlGroups(String[] samlGroups) {
        this.samlGroups = samlGroups;
        return this;
    }
    
    /**
     * The set of tags the user is scoped to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String tags;
    public GetNetworkSmUsers200ApplicationJSON withTags(String tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The url where the users thumbnail is hosted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userThumbnail")
    public String userThumbnail;
    public GetNetworkSmUsers200ApplicationJSON withUserThumbnail(String userThumbnail) {
        this.userThumbnail = userThumbnail;
        return this;
    }
    
    /**
     * The users username.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;
    public GetNetworkSmUsers200ApplicationJSON withUsername(String username) {
        this.username = username;
        return this;
    }
    
}
