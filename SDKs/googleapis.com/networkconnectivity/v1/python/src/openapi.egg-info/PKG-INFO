Metadata-Version: 2.1
Name: openapi
Version: 0.0.1
Summary: Python Client SDK Generated by Speakeasy
Author: Speakeasy
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# openapi

<!-- Start SDK Installation -->
## SDK Installation

```bash
pip install git+https://github.com/speakeasy-api/openapi-directory.git#subdirectory=SDKs/googleapis.com/networkconnectivity/v1/python
```
<!-- End SDK Installation -->

## SDK Example Usage
<!-- Start SDK Example Usage -->
```python
import sdk
from sdk.models import operations, shared

s = sdk.SDK()


req = operations.NetworkconnectivityProjectsLocationsGlobalHubsCreateRequest(
    dollar_xgafv="2",
    hub_input=shared.HubInput(
        description="provident",
        labels={
            "quibusdam": "unde",
            "nulla": "corrupti",
            "illum": "vel",
        },
        name="error",
        routing_vpcs=[
            shared.RoutingVPCInput(
                uri="http://innocent-effect.org",
            ),
            shared.RoutingVPCInput(
                uri="http://whirlwind-diver.info",
            ),
            shared.RoutingVPCInput(
                uri="http://spotted-skyline.name",
            ),
        ],
    ),
    access_token="iusto",
    alt="media",
    callback="nisi",
    fields_="recusandae",
    hub_id="temporibus",
    key="ab",
    oauth_token="quis",
    parent="veritatis",
    pretty_print=False,
    quota_user="deserunt",
    request_id="perferendis",
    upload_type="ipsam",
    upload_protocol="repellendus",
)
    
res = s.projects.networkconnectivity_projects_locations_global_hubs_create(req, operations.NetworkconnectivityProjectsLocationsGlobalHubsCreateSecurity(
    oauth2="Bearer YOUR_ACCESS_TOKEN_HERE",
    oauth2c="Bearer YOUR_ACCESS_TOKEN_HERE",
))

if res.google_longrunning_operation is not None:
    # handle response
```
<!-- End SDK Example Usage -->

<!-- Start SDK Available Operations -->
## Available Resources and Operations


### projects

* `networkconnectivity_projects_locations_global_hubs_create` - Creates a new Network Connectivity Center hub in the specified project.
* `networkconnectivity_projects_locations_global_hubs_list` - Lists the Network Connectivity Center hubs associated with a given project.
* `networkconnectivity_projects_locations_internal_ranges_create` - Creates a new internal range in a given project and location.
* `networkconnectivity_projects_locations_internal_ranges_list` - Lists internal ranges in a given project and location.
* `networkconnectivity_projects_locations_list` - Lists information about the supported locations for this service.
* `networkconnectivity_projects_locations_operations_cancel` - Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
* `networkconnectivity_projects_locations_operations_list` - Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
* `networkconnectivity_projects_locations_spokes_create` - Creates a Network Connectivity Center spoke.
* `networkconnectivity_projects_locations_spokes_delete` - Deletes a Network Connectivity Center spoke.
* `networkconnectivity_projects_locations_spokes_get` - Gets details about a Network Connectivity Center spoke.
* `networkconnectivity_projects_locations_spokes_get_iam_policy` - Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
* `networkconnectivity_projects_locations_spokes_list` - Lists the Network Connectivity Center spokes in a specified project and location.
* `networkconnectivity_projects_locations_spokes_patch` - Updates the parameters of a Network Connectivity Center spoke.
* `networkconnectivity_projects_locations_spokes_set_iam_policy` - Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
* `networkconnectivity_projects_locations_spokes_test_iam_permissions` - Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
<!-- End SDK Available Operations -->

### Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

### Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release !

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)
