/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Rule - &lt;note&gt; &lt;p&gt;This is &lt;b&gt;AWS WAF Classic&lt;/b&gt; documentation. For more information, see &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html"&gt;AWS WAF Classic&lt;/a&gt; in the developer guide.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For the latest version of AWS WAF&lt;/b&gt;, use the AWS WAFV2 API and see the &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html"&gt;AWS WAF Developer Guide&lt;/a&gt;. With the latest version, AWS WAF has a single set of endpoints for regional and global use. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;A combination of &lt;a&gt;ByteMatchSet&lt;/a&gt;, &lt;a&gt;IPSet&lt;/a&gt;, and/or &lt;a&gt;SqlInjectionMatchSet&lt;/a&gt; objects that identify the web requests that you want to allow, block, or count. For example, you might create a &lt;code&gt;Rule&lt;/code&gt; that includes the following predicates:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;An &lt;code&gt;IPSet&lt;/code&gt; that causes AWS WAF to search for web requests that originate from the IP address &lt;code&gt;192.0.2.44&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A &lt;code&gt;ByteMatchSet&lt;/code&gt; that causes AWS WAF to search for web requests for which the value of the &lt;code&gt;User-Agent&lt;/code&gt; header is &lt;code&gt;BadBot&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To match the settings in this &lt;code&gt;Rule&lt;/code&gt;, a request must originate from &lt;code&gt;192.0.2.44&lt;/code&gt; AND include a &lt;code&gt;User-Agent&lt;/code&gt; header for which the value is &lt;code&gt;BadBot&lt;/code&gt;.&lt;/p&gt;
 */
public class Rule {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetricName")
    public String metricName;

    public Rule withMetricName(String metricName) {
        this.metricName = metricName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public Rule withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("Predicates")
    public Predicate[] predicates;

    public Rule withPredicates(Predicate[] predicates) {
        this.predicates = predicates;
        return this;
    }
    
    @JsonProperty("RuleId")
    public String ruleId;

    public Rule withRuleId(String ruleId) {
        this.ruleId = ruleId;
        return this;
    }
    
    public Rule(@JsonProperty("Predicates") Predicate[] predicates, @JsonProperty("RuleId") String ruleId) {
        this.predicates = predicates;
        this.ruleId = ruleId;
  }
}
