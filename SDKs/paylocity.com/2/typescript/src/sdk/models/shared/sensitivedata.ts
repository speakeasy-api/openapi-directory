/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The disabilty classifications model
 */
export class SensitiveDataDisabilityDisabilityClassifications extends SpeakeasyBase {
  /**
   * Indicates the type of disability. This field is only allowed if hasDisability is set to 1=Yes. Values include:<br  /><br  />Auditory<br  />Cognitive, learning, and neurological<br  />Physical<br  />Speech<br  />Vision<br  />Prefer not to say<br  /><br  />Valid values can be obtained from Company Codes endpoint, codeResource = disabilityClassification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classification" })
  classification?: string;
}

/**
 * Add or update disability data.
 */
export class SensitiveDataDisability extends SpeakeasyBase {
  /**
   * Description of employee's disability or accommodation.<br  />Max length: 50
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disability" })
  disability?: string;

  /**
   * Add or update employee's disability classifications
   */
  @SpeakeasyMetadata({
    elemType: SensitiveDataDisabilityDisabilityClassifications,
  })
  @Expose({ name: "disabilityClassifications" })
  @Type(() => SensitiveDataDisabilityDisabilityClassifications)
  disabilityClassifications?: SensitiveDataDisabilityDisabilityClassifications[];

  /**
   * Indicates if the employee has a disability. Values include:<br  /><br  />0 = No<br  />1 = Yes<br  />2 = Prefer not to say
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasDisability" })
  hasDisability?: string;
}

/**
 * The ethnic racial identity model
 */
export class SensitiveDataEthnicityEthnicRacialIdentities extends SpeakeasyBase {
  /**
   * Employee's preferred or chosen ethnicity or race.<br  />Max length: 40.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;
}

/**
 * Add or update ethnicity data.
 */
export class SensitiveDataEthnicity extends SpeakeasyBase {
  /**
   * Add or update Ethnic Racial Identity
   */
  @SpeakeasyMetadata({ elemType: SensitiveDataEthnicityEthnicRacialIdentities })
  @Expose({ name: "ethnicRacialIdentities" })
  @Type(() => SensitiveDataEthnicityEthnicRacialIdentities)
  ethnicRacialIdentities?: SensitiveDataEthnicityEthnicRacialIdentities[];

  /**
   * Employee's legal ethnicity or race.<br  />A = Asian<br  />B = Black<br  />H = Hispanic<br  />I = American Indian<br  />N = Native Hawaiian or Pacific Islander<br  />T = Two or More Races<br  />W = White<br  /><br  />Valid values can be obtained from Company Codes endpoint, codeResource = ethnicity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ethnicity" })
  ethnicity?: string;
}

/**
 * Add or update gender data.
 */
export class SensitiveDataGender extends SpeakeasyBase {
  /**
   * Specifies whether employee's preferred pronouns will be displayed to co-workers in Community, Directory, etc. Values include:<br  /><br  />0 = No<br  />1 = Yes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayPronouns" })
  displayPronouns?: boolean;

  /**
   * Employee's preferred or chosen gender identification.<br  />Max length: 40
   */
  @SpeakeasyMetadata()
  @Expose({ name: "genderIdentityDescription" })
  genderIdentityDescription?: string;

  /**
   * Employee's self-identification of legal gender. Numerical values include:<br  /><br  />0 = No<br  />1 = Yes<br  />2 = Prefer not to say
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifyAsLegalGender" })
  identifyAsLegalGender?: string;

  /**
   * Employee's legal gender. Values include:<br  /><br  />M = Male<br  />F = Female<br  /><br  />Valid values can be obtained from Company Codes endpoint, codeResource = legalGender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legalGender" })
  legalGender?: string;

  /**
   * Employee's preferred or chosen pronouns. Values include:<br  /><br  />He / Him / His<br  />She / Her / Hers<br  />They / Them / Theirs<br  />Prefer not to say<br  /><br  />Valid values can be obtained from Company Codes endpoint, codeResource = preferredPronouns
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pronouns" })
  pronouns?: string;

  /**
   * Employee's self-identification of sexual orientation. Values may include values below. Additionally, any custom value may be provided.<br  /><br  />Asexual<br  />Gay / Lesbian<br  />Heterosexual / Straight<br  />Pansexual<br  />Queer<br  />Bisexual<br  />Prefer not to say
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sexualOrientation" })
  sexualOrientation?: string;
}

/**
 * Add or update veteran data.
 */
export class SensitiveDataVeteran extends SpeakeasyBase {
  /**
   * Indicates if the employee is a veteran.  Values include:<br  /><br  />0 = No<br  />1 = Yes<br  />2 = Prefer not to say
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isVeteran" })
  isVeteran?: string;

  /**
   * Employee's Veteran Notes<br  />Max length: 50
   */
  @SpeakeasyMetadata()
  @Expose({ name: "veteran" })
  veteran?: string;
}

/**
 * The sensitive data model
 */
export class SensitiveData extends SpeakeasyBase {
  /**
   * Add or update disability data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disability" })
  @Type(() => SensitiveDataDisability)
  disability?: SensitiveDataDisability;

  /**
   * Add or update ethnicity data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ethnicity" })
  @Type(() => SensitiveDataEthnicity)
  ethnicity?: SensitiveDataEthnicity;

  /**
   * Add or update gender data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  @Type(() => SensitiveDataGender)
  gender?: SensitiveDataGender;

  /**
   * Add or update veteran data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "veteran" })
  @Type(() => SensitiveDataVeteran)
  veteran?: SensitiveDataVeteran;
}
