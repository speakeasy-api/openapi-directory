<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetNetworkWirelessSettings200ApplicationJSON - Successful operation
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetNetworkWirelessSettings200ApplicationJSON
{
    /**
     * Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)
     * 
     * @var ?bool $ipv6BridgeEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipv6BridgeEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ipv6BridgeEnabled = null;
    
    /**
     * Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
     * 
     * @var ?bool $ledLightsOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('ledLightsOn')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ledLightsOn = null;
    
    /**
     * Toggle for enabling or disabling location analytics for your network
     * 
     * @var ?bool $locationAnalyticsEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('locationAnalyticsEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $locationAnalyticsEnabled = null;
    
    /**
     * Toggle for enabling or disabling meshing in a network
     * 
     * @var ?bool $meshingEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('meshingEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $meshingEnabled = null;
    
    /**
     * Named VLAN settings for wireless networks.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSettings200ApplicationJSONNamedVlans $namedVlans
     */
	#[\JMS\Serializer\Annotation\SerializedName('namedVlans')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSettings200ApplicationJSONNamedVlans')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSettings200ApplicationJSONNamedVlans $namedVlans = null;
    
    /**
     * The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSettings200ApplicationJSONUpgradeStrategyEnum $upgradeStrategy
     */
	#[\JMS\Serializer\Annotation\SerializedName('upgradeStrategy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSettings200ApplicationJSONUpgradeStrategyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSettings200ApplicationJSONUpgradeStrategyEnum $upgradeStrategy = null;
    
	public function __construct()
	{
		$this->ipv6BridgeEnabled = null;
		$this->ledLightsOn = null;
		$this->locationAnalyticsEnabled = null;
		$this->meshingEnabled = null;
		$this->namedVlans = null;
		$this->upgradeStrategy = null;
	}
}
