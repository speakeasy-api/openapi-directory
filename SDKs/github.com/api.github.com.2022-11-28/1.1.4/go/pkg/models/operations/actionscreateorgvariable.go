// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// ActionsCreateOrgVariableRequestBodyVisibilityEnum - The type of repositories in the organization that can access the variable. `selected` means only the repositories specified by `selected_repository_ids` can access the variable.
type ActionsCreateOrgVariableRequestBodyVisibilityEnum string

const (
	ActionsCreateOrgVariableRequestBodyVisibilityEnumAll      ActionsCreateOrgVariableRequestBodyVisibilityEnum = "all"
	ActionsCreateOrgVariableRequestBodyVisibilityEnumPrivate  ActionsCreateOrgVariableRequestBodyVisibilityEnum = "private"
	ActionsCreateOrgVariableRequestBodyVisibilityEnumSelected ActionsCreateOrgVariableRequestBodyVisibilityEnum = "selected"
)

func (e ActionsCreateOrgVariableRequestBodyVisibilityEnum) ToPointer() *ActionsCreateOrgVariableRequestBodyVisibilityEnum {
	return &e
}

func (e *ActionsCreateOrgVariableRequestBodyVisibilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "all":
		fallthrough
	case "private":
		fallthrough
	case "selected":
		*e = ActionsCreateOrgVariableRequestBodyVisibilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionsCreateOrgVariableRequestBodyVisibilityEnum: %v", v)
	}
}

type ActionsCreateOrgVariableRequestBody struct {
	// The name of the variable.
	Name string `json:"name"`
	// An array of repository ids that can access the organization variable. You can only provide a list of repository ids when the `visibility` is set to `selected`.
	SelectedRepositoryIds []int64 `json:"selected_repository_ids,omitempty"`
	// The value of the variable.
	Value string `json:"value"`
	// The type of repositories in the organization that can access the variable. `selected` means only the repositories specified by `selected_repository_ids` can access the variable.
	Visibility ActionsCreateOrgVariableRequestBodyVisibilityEnum `json:"visibility"`
}

type ActionsCreateOrgVariableRequest struct {
	RequestBody ActionsCreateOrgVariableRequestBody `request:"mediaType=application/json"`
	// The organization name. The name is not case sensitive.
	Org string `pathParam:"style=simple,explode=false,name=org"`
}

type ActionsCreateOrgVariableResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response when creating a variable
	EmptyObject map[string]interface{}
}
