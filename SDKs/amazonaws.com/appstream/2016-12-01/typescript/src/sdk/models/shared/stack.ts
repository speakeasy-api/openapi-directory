/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccessEndpoint } from "./accessendpoint";
import { ApplicationSettingsResponse } from "./applicationsettingsresponse";
import { StackError } from "./stackerror";
import { StorageConnector } from "./storageconnector";
import { StreamingExperienceSettings } from "./streamingexperiencesettings";
import { UserSetting } from "./usersetting";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes a stack.
 */
export class Stack extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AccessEndpoint })
  @Expose({ name: "AccessEndpoints" })
  @Type(() => AccessEndpoint)
  accessEndpoints?: AccessEndpoint[];

  @SpeakeasyMetadata()
  @Expose({ name: "ApplicationSettings" })
  @Type(() => ApplicationSettingsResponse)
  applicationSettings?: ApplicationSettingsResponse;

  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EmbedHostDomains" })
  embedHostDomains?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "FeedbackURL" })
  feedbackURL?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RedirectURL" })
  redirectURL?: string;

  @SpeakeasyMetadata({ elemType: StackError })
  @Expose({ name: "StackErrors" })
  @Type(() => StackError)
  stackErrors?: StackError[];

  @SpeakeasyMetadata({ elemType: StorageConnector })
  @Expose({ name: "StorageConnectors" })
  @Type(() => StorageConnector)
  storageConnectors?: StorageConnector[];

  @SpeakeasyMetadata()
  @Expose({ name: "StreamingExperienceSettings" })
  @Type(() => StreamingExperienceSettings)
  streamingExperienceSettings?: StreamingExperienceSettings;

  @SpeakeasyMetadata({ elemType: UserSetting })
  @Expose({ name: "UserSettings" })
  @Type(() => UserSetting)
  userSettings?: UserSetting[];
}
