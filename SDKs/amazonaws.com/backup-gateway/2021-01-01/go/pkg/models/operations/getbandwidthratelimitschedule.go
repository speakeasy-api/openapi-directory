// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetBandwidthRateLimitScheduleXAmzTargetEnum
type GetBandwidthRateLimitScheduleXAmzTargetEnum string

const (
	GetBandwidthRateLimitScheduleXAmzTargetEnumBackupOnPremisesV20210101GetBandwidthRateLimitSchedule GetBandwidthRateLimitScheduleXAmzTargetEnum = "BackupOnPremises_v20210101.GetBandwidthRateLimitSchedule"
)

func (e GetBandwidthRateLimitScheduleXAmzTargetEnum) ToPointer() *GetBandwidthRateLimitScheduleXAmzTargetEnum {
	return &e
}

func (e *GetBandwidthRateLimitScheduleXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BackupOnPremises_v20210101.GetBandwidthRateLimitSchedule":
		*e = GetBandwidthRateLimitScheduleXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBandwidthRateLimitScheduleXAmzTargetEnum: %v", v)
	}
}

type GetBandwidthRateLimitScheduleRequest struct {
	GetBandwidthRateLimitScheduleInput shared.GetBandwidthRateLimitScheduleInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                      *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                  *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                     *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                           *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                  *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                      *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                  *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                         GetBandwidthRateLimitScheduleXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetBandwidthRateLimitScheduleResponse struct {
	ContentType string
	// Success
	GetBandwidthRateLimitScheduleOutput *shared.GetBandwidthRateLimitScheduleOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
