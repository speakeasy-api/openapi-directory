/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ArticleGetReservedAmountRequest extends SpeakeasyBase {
  /**
   * The id or the sku of the article to query
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=id" })
  id: string;

  /**
   * Either the value id or the value sku to specify the meaning of the id parameter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=lookupBy",
  })
  lookupBy?: string;

  /**
   * Optional the stock id if the multi stock feature is enabled
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=stockId",
  })
  stockId?: number;
}

export class ArticleGetReservedAmountResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  rechnungsdruckWebAppControllersAPIAPIResultBillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData?: shared.RechnungsdruckWebAppControllersAPIAPIResultBillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
