/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * &lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt; This is a &lt;a href="https://developer.ebay.com/api-docs/static/versioning.html#limited" target="_blank"&gt; &lt;img src="/cms/img/docs/partners-api.svg" class="legend-icon partners-icon" title="Limited Release"  alt="Limited Release" /&gt;(Limited Release)&lt;/a&gt; API available only to select developers approved by business units.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;The &lt;b&gt;Logistics API&lt;/b&gt; resources offer the following capabilities: &lt;ul&gt;&lt;li&gt;&lt;b&gt;shipping_quote&lt;/b&gt; &amp;ndash; Consolidates into a list a set of live shipping rates, or quotes, from which you can select a rate to ship a package.&lt;/li&gt; &lt;li&gt;&lt;b&gt;shipment&lt;/b&gt; &amp;ndash; Creates a "shipment" for the selected shipping rate.&lt;/li&gt;&lt;/ul&gt; Call &lt;b&gt;createShippingQuote&lt;/b&gt; to get a list of live shipping rates. The rates returned are all valid for a specific time window and all quoted prices are at eBay-negotiated rates. &lt;br&gt;&lt;br&gt;Select one of the live rates and using its associated &lt;b&gt;rateId&lt;/b&gt;, create a "shipment" for the package by calling &lt;b&gt;createFromShippingQuote&lt;/b&gt;. Creating a shipment completes an agreement, and the cost of the base service and any added shipping options are summed into the returned &lt;b&gt;totalShippingCost&lt;/b&gt; value. This action also generates a shipping label that you can use to ship the package.  The total cost of the shipment is incurred when the package is shipped using the supplied shipping label.  &lt;p class="tablenote"&gt;&lt;b&gt;Important!&lt;/b&gt; Sellers must set up a payment method via their eBay account before they can use the methods in this API to create a shipment and the associated shipping label.&lt;/p&gt;
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        /**
         * Production
         */
        "https://api.ebay.com{basePath}",
	};
  	
    public Shipment shipment;
    public ShippingQuote shippingQuote;	

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}

		if (this._serverUrl.endsWith("/")) {
            this._serverUrl = this._serverUrl.substring(0, this._serverUrl.length() - 1);
        }

		
		
		this.shipment = new Shipment(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.shippingQuote = new ShippingQuote(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
	}
}