"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import schedulingnodeaffinity as shared_schedulingnodeaffinity
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ComputeSchedulingOnHostMaintenanceEnum(str, Enum):
    r"""How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance."""
    ON_HOST_MAINTENANCE_UNSPECIFIED = 'ON_HOST_MAINTENANCE_UNSPECIFIED'
    TERMINATE = 'TERMINATE'
    MIGRATE = 'MIGRATE'

class ComputeSchedulingRestartTypeEnum(str, Enum):
    r"""Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user). This configuration is identical to `automaticRestart` field in Compute Engine create instance under scheduling. It was changed to an enum (instead of a boolean) to match the default value in Compute Engine which is automatic restart."""
    RESTART_TYPE_UNSPECIFIED = 'RESTART_TYPE_UNSPECIFIED'
    AUTOMATIC_RESTART = 'AUTOMATIC_RESTART'
    NO_AUTOMATIC_RESTART = 'NO_AUTOMATIC_RESTART'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ComputeScheduling:
    r"""Scheduling information for VM on maintenance/restart behaviour and node allocation in sole tenant nodes."""
    
    automatic_restart: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('automaticRestart'), 'exclude': lambda f: f is None }})  
    min_node_cpus: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minNodeCpus'), 'exclude': lambda f: f is None }})
    r"""The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node. Ignored if no node_affinites are configured."""  
    node_affinities: Optional[list[shared_schedulingnodeaffinity.SchedulingNodeAffinity]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeAffinities'), 'exclude': lambda f: f is None }})
    r"""A set of node affinity and anti-affinity configurations for sole tenant nodes."""  
    on_host_maintenance: Optional[ComputeSchedulingOnHostMaintenanceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('onHostMaintenance'), 'exclude': lambda f: f is None }})
    r"""How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance."""  
    restart_type: Optional[ComputeSchedulingRestartTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restartType'), 'exclude': lambda f: f is None }})
    r"""Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user). This configuration is identical to `automaticRestart` field in Compute Engine create instance under scheduling. It was changed to an enum (instead of a boolean) to match the default value in Compute Engine which is automatic restart."""  
    