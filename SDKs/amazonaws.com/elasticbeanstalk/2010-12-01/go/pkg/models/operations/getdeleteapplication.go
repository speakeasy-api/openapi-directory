// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteApplicationActionEnum
type GETDeleteApplicationActionEnum string

const (
	GETDeleteApplicationActionEnumDeleteApplication GETDeleteApplicationActionEnum = "DeleteApplication"
)

func (e *GETDeleteApplicationActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteApplication":
		*e = GETDeleteApplicationActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteApplicationActionEnum: %s", s)
	}
}

// GETDeleteApplicationVersionEnum
type GETDeleteApplicationVersionEnum string

const (
	GETDeleteApplicationVersionEnumTwoThousandAndTen1201 GETDeleteApplicationVersionEnum = "2010-12-01"
)

func (e *GETDeleteApplicationVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETDeleteApplicationVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteApplicationVersionEnum: %s", s)
	}
}

type GETDeleteApplicationQueryParams struct {
	Action GETDeleteApplicationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the application to delete.
	ApplicationName string `queryParam:"style=form,explode=true,name=ApplicationName"`
	// When set to true, running environments will be terminated before deleting the application.
	TerminateEnvByForce *bool                           `queryParam:"style=form,explode=true,name=TerminateEnvByForce"`
	Version             GETDeleteApplicationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteApplicationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteApplicationRequest struct {
	QueryParams GETDeleteApplicationQueryParams
	Headers     GETDeleteApplicationHeaders
}

type GETDeleteApplicationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
