/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETAcceptReservedNodeExchangeQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETAcceptReservedNodeExchangeActionEnum action;
    public GETAcceptReservedNodeExchangeQueryParams withAction(GETAcceptReservedNodeExchangeActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * A string representing the node identifier of the DC1 Reserved Node to be exchanged.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ReservedNodeId")
    public String reservedNodeId;
    public GETAcceptReservedNodeExchangeQueryParams withReservedNodeId(String reservedNodeId) {
        this.reservedNodeId = reservedNodeId;
        return this;
    }
    
    /**
     * The unique identifier of the DC2 Reserved Node offering to be used for the exchange. You can obtain the value for the parameter by calling &lt;a&gt;GetReservedNodeExchangeOfferings&lt;/a&gt; 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TargetReservedNodeOfferingId")
    public String targetReservedNodeOfferingId;
    public GETAcceptReservedNodeExchangeQueryParams withTargetReservedNodeOfferingId(String targetReservedNodeOfferingId) {
        this.targetReservedNodeOfferingId = targetReservedNodeOfferingId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETAcceptReservedNodeExchangeVersionEnum version;
    public GETAcceptReservedNodeExchangeQueryParams withVersion(GETAcceptReservedNodeExchangeVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
