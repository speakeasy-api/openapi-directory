// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IncomingPhoneNumberLocalEnumAddressRequirementEnum string

const (
	IncomingPhoneNumberLocalEnumAddressRequirementEnumNone    IncomingPhoneNumberLocalEnumAddressRequirementEnum = "none"
	IncomingPhoneNumberLocalEnumAddressRequirementEnumAny     IncomingPhoneNumberLocalEnumAddressRequirementEnum = "any"
	IncomingPhoneNumberLocalEnumAddressRequirementEnumLocal   IncomingPhoneNumberLocalEnumAddressRequirementEnum = "local"
	IncomingPhoneNumberLocalEnumAddressRequirementEnumForeign IncomingPhoneNumberLocalEnumAddressRequirementEnum = "foreign"
)

func (e IncomingPhoneNumberLocalEnumAddressRequirementEnum) ToPointer() *IncomingPhoneNumberLocalEnumAddressRequirementEnum {
	return &e
}

func (e *IncomingPhoneNumberLocalEnumAddressRequirementEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "any":
		fallthrough
	case "local":
		fallthrough
	case "foreign":
		*e = IncomingPhoneNumberLocalEnumAddressRequirementEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IncomingPhoneNumberLocalEnumAddressRequirementEnum: %v", v)
	}
}
