"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2infotype as shared_googleprivacydlpv2infotype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2InfoTypeLimit:
    r"""Max findings configuration per infoType, per content item or long running DlpJob."""
    
    info_type: Optional[shared_googleprivacydlpv2infotype.GooglePrivacyDlpV2InfoType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('infoType'), 'exclude': lambda f: f is None }})
    r"""Type of information detected by the API."""  
    max_findings: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxFindings'), 'exclude': lambda f: f is None }})
    r"""Max findings limit for the given infoType."""  
    