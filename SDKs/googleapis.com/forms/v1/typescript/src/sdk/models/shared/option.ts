/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Image, ImageInput } from "./image";
import { Expose, Type } from "class-transformer";

/**
 * Section navigation type.
 */
export enum OptionGoToActionEnum {
  GoToActionUnspecified = "GO_TO_ACTION_UNSPECIFIED",
  NextSection = "NEXT_SECTION",
  RestartForm = "RESTART_FORM",
  SubmitForm = "SUBMIT_FORM",
}

/**
 * An option for a Choice question.
 */
export class Option extends SpeakeasyBase {
  /**
   * Section navigation type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "goToAction" })
  goToAction?: OptionGoToActionEnum;

  /**
   * Item ID of section header to go to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "goToSectionId" })
  goToSectionId?: string;

  /**
   * Data representing an image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => Image)
  image?: Image;

  /**
   * Whether the option is "other". Currently only applies to `RADIO` and `CHECKBOX` choice types, but is not allowed in a QuestionGroupItem.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isOther" })
  isOther?: boolean;

  /**
   * Required. The choice as presented to the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * An option for a Choice question.
 */
export class OptionInput extends SpeakeasyBase {
  /**
   * Section navigation type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "goToAction" })
  goToAction?: OptionGoToActionEnum;

  /**
   * Item ID of section header to go to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "goToSectionId" })
  goToSectionId?: string;

  /**
   * Data representing an image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => ImageInput)
  image?: ImageInput;

  /**
   * Whether the option is "other". Currently only applies to `RADIO` and `CHECKBOX` choice types, but is not allowed in a QuestionGroupItem.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isOther" })
  isOther?: boolean;

  /**
   * Required. The choice as presented to the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
