/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Allowed values that can be passed to the exclude param.
 */
export enum MigrationsGetStatusForOrgExcludeEnum {
  Repositories = "repositories",
}

export class MigrationsGetStatusForOrgRequest extends SpeakeasyBase {
  /**
   * Exclude attributes from the API response to improve performance
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=exclude",
  })
  exclude?: MigrationsGetStatusForOrgExcludeEnum[];

  /**
   * The unique identifier of the migration.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=migration_id",
  })
  migrationId: number;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;
}

export class MigrationsGetStatusForOrgResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Resource not found
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * *   `pending`, which means the migration hasn't started yet.
   *
   * @remarks
   * *   `exporting`, which means the migration is in progress.
   * *   `exported`, which means the migration finished successfully.
   * *   `failed`, which means the migration failed.
   */
  @SpeakeasyMetadata()
  migration?: shared.Migration;
}
