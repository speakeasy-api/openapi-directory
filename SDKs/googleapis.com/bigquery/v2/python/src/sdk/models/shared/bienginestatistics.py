"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bienginereason as shared_bienginereason
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BiEngineStatistics:
    
    acceleration_mode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accelerationMode'), 'exclude': lambda f: f is None }})
    r"""[Output-only] Specifies which mode of BI Engine acceleration was performed (if any)."""  
    bi_engine_mode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('biEngineMode'), 'exclude': lambda f: f is None }})
    r"""[Output-only] Specifies which mode of BI Engine acceleration was performed (if any)."""  
    bi_engine_reasons: Optional[list[shared_bienginereason.BiEngineReason]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('biEngineReasons'), 'exclude': lambda f: f is None }})
    r"""In case of DISABLED or PARTIAL bi_engine_mode, these contain the explanatory reasons as to why BI Engine could not accelerate. In case the full query was accelerated, this field is not populated."""  
    