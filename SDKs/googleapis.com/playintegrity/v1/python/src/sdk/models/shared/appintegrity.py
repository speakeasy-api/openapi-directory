"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AppIntegrityAppRecognitionVerdictEnum(str, Enum):
    r"""Required. Details about the app recognition verdict"""
    UNKNOWN = 'UNKNOWN'
    PLAY_RECOGNIZED = 'PLAY_RECOGNIZED'
    UNRECOGNIZED_VERSION = 'UNRECOGNIZED_VERSION'
    UNEVALUATED = 'UNEVALUATED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppIntegrity:
    r"""Contains the application integrity information."""
    
    app_recognition_verdict: Optional[AppIntegrityAppRecognitionVerdictEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appRecognitionVerdict'), 'exclude': lambda f: f is None }})
    r"""Required. Details about the app recognition verdict"""  
    certificate_sha256_digest: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificateSha256Digest'), 'exclude': lambda f: f is None }})
    r"""The SHA256 hash of the requesting app's signing certificates (base64 web-safe encoded). Set iff app_recognition_verdict != UNEVALUATED."""  
    package_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packageName'), 'exclude': lambda f: f is None }})
    r"""Package name of the application under attestation. Set iff app_recognition_verdict != UNEVALUATED."""  
    version_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionCode'), 'exclude': lambda f: f is None }})
    r"""Version code of the application. Set iff app_recognition_verdict != UNEVALUATED."""  
    