// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type GetNetworkFirmwareUpgradesStagedEventsPathParams struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

type GetNetworkFirmwareUpgradesStagedEventsRequest struct {
	PathParams GetNetworkFirmwareUpgradesStagedEventsPathParams
}

// GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgradeToVersion - Details of the version the device will upgrade to
type GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgradeToVersion struct {
	// Id of the Version being upgraded to
	ID *string `json:"id,omitempty"`
	// Firmware version short name
	ShortName *string `json:"shortName,omitempty"`
}

// GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgrade - Details of the next firmware upgrade
type GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgrade struct {
	// Details of the version the device will upgrade to
	ToVersion *GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgradeToVersion `json:"toVersion,omitempty"`
}

// GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitch - The Switch network to be updated
type GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitch struct {
	// Details of the next firmware upgrade
	NextUpgrade *GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgrade `json:"nextUpgrade,omitempty"`
}

// GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProducts - The network devices to be updated
type GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProducts struct {
	// The Switch network to be updated
	Switch *GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitch `json:"switch,omitempty"`
}

// GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum - Reason for the rollback
type GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum string

const (
	GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnumBrokeOldFeatures         GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum = "broke old features"
	GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnumOther                    GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum = "other"
	GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnumPerformance              GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum = "performance"
	GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnumStability                GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum = "stability"
	GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnumTesting                  GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum = "testing"
	GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnumUnifyingNetworksVersions GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum = "unifying networks versions"
)

func (e *GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "broke old features":
		fallthrough
	case "other":
		fallthrough
	case "performance":
		fallthrough
	case "stability":
		fallthrough
	case "testing":
		fallthrough
	case "unifying networks versions":
		*e = GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum: %s", s)
	}
}

type GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasons struct {
	// Reason for the rollback
	Category *GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum `json:"category,omitempty"`
	// Additional comment about the rollback
	Comment *string `json:"comment,omitempty"`
}

// GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesGroup - The staged upgrade group
type GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesGroup struct {
	// Description of the Staged Upgrade Group
	Description *string `json:"description,omitempty"`
	// Id of the Staged Upgrade Group
	ID *string `json:"id,omitempty"`
	// Name of the Staged Upgrade Group
	Name *string `json:"name,omitempty"`
}

// GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesMilestones - The Staged Upgrade Milestones for the stage
type GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesMilestones struct {
	// Time that the group was canceled
	CanceledAt *time.Time `json:"canceledAt,omitempty"`
	// Finish time for the group
	CompletedAt *time.Time `json:"completedAt,omitempty"`
	// Scheduled start time for the group
	ScheduledFor *time.Time `json:"scheduledFor,omitempty"`
	// Start time for the group
	StartedAt *time.Time `json:"startedAt,omitempty"`
}

type GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStages struct {
	// The staged upgrade group
	Group *GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesGroup `json:"group,omitempty"`
	// The Staged Upgrade Milestones for the stage
	Milestones *GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesMilestones `json:"milestones,omitempty"`
	// Current upgrade status of the group
	Status *string `json:"status,omitempty"`
}

// GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSON - Successful operation
type GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSON struct {
	// The network devices to be updated
	Products *GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProducts `json:"products,omitempty"`
	// Reasons for the rollback
	Reasons []GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasons `json:"reasons,omitempty"`
	// The ordered stages in the network
	Stages []GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStages `json:"stages,omitempty"`
}

type GetNetworkFirmwareUpgradesStagedEventsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONObject *GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSON
}
