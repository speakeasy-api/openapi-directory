"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import taginstance as shared_taginstance
from enum import Enum
from typing import Optional

class GetUserTagsTagIDShowsEmbedEnum(str, Enum):
    r"""Embed full show info"""
    SHOW = 'show'


@dataclasses.dataclass
class GetUserTagsTagIDShowsRequest:
    
    tag_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'tag_id', 'style': 'simple', 'explode': False }})  
    embed: Optional[GetUserTagsTagIDShowsEmbedEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'embed', 'style': 'form', 'explode': True }})
    r"""Embed full show info"""  
    

@dataclasses.dataclass
class GetUserTagsTagIDShowsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tag_instances: Optional[list[shared_taginstance.TagInstance]] = dataclasses.field(default=None)
    r"""A list of tagged shows"""  
    