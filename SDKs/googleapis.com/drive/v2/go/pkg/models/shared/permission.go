// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// PermissionInput - A permission for a file.
type PermissionInput struct {
	// Additional roles for this user. Only commenter is currently allowed, though more may be supported in the future.
	AdditionalRoles []string `json:"additionalRoles,omitempty"`
	// Deprecated.
	AuthKey *string `json:"authKey,omitempty"`
	// Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.
	Deleted *bool `json:"deleted,omitempty"`
	// The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain.
	Domain *string `json:"domain,omitempty"`
	// The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group.
	EmailAddress *string `json:"emailAddress,omitempty"`
	// The ETag of the permission.
	Etag *string `json:"etag,omitempty"`
	// The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions:
	// - They cannot be set on shared drive items
	// - They can only be set on user and group permissions
	// - The date must be in the future
	// - The date cannot be more than a year in the future
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	// The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.
	ID *string `json:"id,omitempty"`
	// This is always drive#permission.
	Kind *string `json:"kind,omitempty"`
	// The name for this permission.
	Name *string `json:"name,omitempty"`
	// Whether the account associated with this permission is a pending owner. Only populated for user type permissions for files that are not in a shared drive.
	PendingOwner *bool `json:"pendingOwner,omitempty"`
	// A link to the profile photo, if available.
	PhotoLink *string `json:"photoLink,omitempty"`
	// The primary role for this user. While new values may be supported in the future, the following are currently allowed:
	// - owner
	// - organizer
	// - fileOrganizer
	// - writer
	// - reader
	Role *string `json:"role,omitempty"`
	// A link back to this permission.
	SelfLink *string `json:"selfLink,omitempty"`
	// The account type. Allowed values are:
	// - user
	// - group
	// - domain
	// - anyone
	Type *string `json:"type,omitempty"`
	// The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.
	Value *string `json:"value,omitempty"`
	// Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value.
	View *string `json:"view,omitempty"`
	// Whether the link is required for this permission.
	WithLink *bool `json:"withLink,omitempty"`
}

type PermissionPermissionDetails struct {
	// Additional roles for this user. Only commenter is currently possible, though more may be supported in the future.
	AdditionalRoles []string `json:"additionalRoles,omitempty"`
	// Whether this permission is inherited. This field is always populated. This is an output-only field.
	Inherited *bool `json:"inherited,omitempty"`
	// The ID of the item from which this permission is inherited. This is an output-only field.
	InheritedFrom *string `json:"inheritedFrom,omitempty"`
	// The permission type for this user. While new values may be added in future, the following are currently possible:
	// - file
	// - member
	PermissionType *string `json:"permissionType,omitempty"`
	// The primary role for this user. While new values may be added in the future, the following are currently possible:
	// - organizer
	// - fileOrganizer
	// - writer
	// - reader
	Role *string `json:"role,omitempty"`
}

type PermissionTeamDrivePermissionDetails struct {
	// Deprecated - use permissionDetails/additionalRoles instead.
	AdditionalRoles []string `json:"additionalRoles,omitempty"`
	// Deprecated - use permissionDetails/inherited instead.
	Inherited *bool `json:"inherited,omitempty"`
	// Deprecated - use permissionDetails/inheritedFrom instead.
	InheritedFrom *string `json:"inheritedFrom,omitempty"`
	// Deprecated - use permissionDetails/role instead.
	Role *string `json:"role,omitempty"`
	// Deprecated - use permissionDetails/permissionType instead.
	TeamDrivePermissionType *string `json:"teamDrivePermissionType,omitempty"`
}

// Permission - A permission for a file.
type Permission struct {
	// Additional roles for this user. Only commenter is currently allowed, though more may be supported in the future.
	AdditionalRoles []string `json:"additionalRoles,omitempty"`
	// Deprecated.
	AuthKey *string `json:"authKey,omitempty"`
	// Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.
	Deleted *bool `json:"deleted,omitempty"`
	// The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain.
	Domain *string `json:"domain,omitempty"`
	// The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group.
	EmailAddress *string `json:"emailAddress,omitempty"`
	// The ETag of the permission.
	Etag *string `json:"etag,omitempty"`
	// The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions:
	// - They cannot be set on shared drive items
	// - They can only be set on user and group permissions
	// - The date must be in the future
	// - The date cannot be more than a year in the future
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	// The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.
	ID *string `json:"id,omitempty"`
	// This is always drive#permission.
	Kind *string `json:"kind,omitempty"`
	// The name for this permission.
	Name *string `json:"name,omitempty"`
	// Whether the account associated with this permission is a pending owner. Only populated for user type permissions for files that are not in a shared drive.
	PendingOwner *bool `json:"pendingOwner,omitempty"`
	// Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.
	PermissionDetails []PermissionPermissionDetails `json:"permissionDetails,omitempty"`
	// A link to the profile photo, if available.
	PhotoLink *string `json:"photoLink,omitempty"`
	// The primary role for this user. While new values may be supported in the future, the following are currently allowed:
	// - owner
	// - organizer
	// - fileOrganizer
	// - writer
	// - reader
	Role *string `json:"role,omitempty"`
	// A link back to this permission.
	SelfLink *string `json:"selfLink,omitempty"`
	// Deprecated - use permissionDetails instead.
	TeamDrivePermissionDetails []PermissionTeamDrivePermissionDetails `json:"teamDrivePermissionDetails,omitempty"`
	// The account type. Allowed values are:
	// - user
	// - group
	// - domain
	// - anyone
	Type *string `json:"type,omitempty"`
	// The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.
	Value *string `json:"value,omitempty"`
	// Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value.
	View *string `json:"view,omitempty"`
	// Whether the link is required for this permission.
	WithLink *bool `json:"withLink,omitempty"`
}
