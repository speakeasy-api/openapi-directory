<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Booking - Details of an existing booking.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Booking
{
    /**
     * List of rooms booked
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\BookedRoom> $bookedRooms
     */
	#[\JMS\Serializer\Annotation\SerializedName('bookedRooms')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BookedRoom>')]
    public array $bookedRooms;
    
    /**
     * Unique identifier for this booking within the Impala platform.
     * 
     * @var string $bookingId
     */
	#[\JMS\Serializer\Annotation\SerializedName('bookingId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bookingId;
    
    /**
     * Returned in case the booking (or parts of it) has been cancelled. Contains information on the cancellation.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BookingCancellation $cancellation
     */
	#[\JMS\Serializer\Annotation\SerializedName('cancellation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BookingCancellation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BookingCancellation $cancellation = null;
    
    /**
     * Guest details for this booking.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\BookingPerson $contact
     */
	#[\JMS\Serializer\Annotation\SerializedName('contact')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BookingPerson')]
    public BookingPerson $contact;
    
    /**
     * Date and time (in UTC and ISO 8601 format) when the booking was created.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * The departure date of the booking.
     * 
     * @var \DateTime $end
     */
	#[\JMS\Serializer\Annotation\SerializedName('end')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $end;
    
    /**
     * Essential information on a hotel returned as part of other resources, linking to the full resource within its `href` field.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\HotelStub $hotel
     */
	#[\JMS\Serializer\Annotation\SerializedName('hotel')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HotelStub')]
    public HotelStub $hotel;
    
    /**
     * The hotel's confirmation identifier for this booking.
     * 
     * @var ?string $hotelConfirmationCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('hotelConfirmationCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hotelConfirmationCode = null;
    
    /**
     * The notes that were transmitted to the hotel as part of this booking.
     * 
     * 
     * These fields allow for **Markdown formatting** that's displayed to hotels in its rendered format in most circumstances but might fall back to text-only in scenarios where that's not possible.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\BookingNotes $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BookingNotes')]
    public BookingNotes $notes;
    
    /**
     * If status is PAYMENT_REQUIRED, then this should be used as the Authorisation header for the POST to the /payments endpoint.
     * 
     * @var ?string $paymentBearerToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentBearerToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentBearerToken = null;
    
    /**
     * If status is PAYMENT_REQUIRED, then this should be used as the client secret when rendering Impala Payment Elements in the UI.
     * 
     * @var ?string $paymentClientSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentClientSecret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentClientSecret = null;
    
    /**
     * The arrival date of the booking.
     * 
     * @var \DateTime $start
     */
	#[\JMS\Serializer\Annotation\SerializedName('start')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $start;
    
    /**
     * Status of this booking within the Impala platform. When you make a booking, it'll first appear as `PENDING` until we receive the hotel's confirmation details. At this point your booking will move to `ACCEPTED`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\BookingStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BookingStatusEnum>')]
    public BookingStatusEnum $status;
    
    /**
     * Date and time (in UTC and ISO 8601 format) when the booking was last updated.
     * 
     * @var \DateTime $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
	public function __construct()
	{
		$this->bookedRooms = [];
		$this->bookingId = "";
		$this->cancellation = null;
		$this->contact = new \OpenAPI\OpenAPI\Models\Shared\BookingPerson();
		$this->createdAt = new \DateTime();
		$this->end = new \DateTime();
		$this->hotel = new \OpenAPI\OpenAPI\Models\Shared\HotelStub();
		$this->hotelConfirmationCode = null;
		$this->notes = new \OpenAPI\OpenAPI\Models\Shared\BookingNotes();
		$this->paymentBearerToken = null;
		$this->paymentClientSecret = null;
		$this->start = new \DateTime();
		$this->status = \OpenAPI\OpenAPI\Models\Shared\BookingStatusEnum::CANCELLED;
		$this->updatedAt = new \DateTime();
	}
}
