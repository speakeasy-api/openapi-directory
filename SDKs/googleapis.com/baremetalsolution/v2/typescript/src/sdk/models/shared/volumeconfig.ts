/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LunRange } from "./lunrange";
import { NfsExport } from "./nfsexport";
import { Expose, Type } from "class-transformer";

/**
 * Performance tier of the Volume. Default is SHARED.
 */
export enum VolumeConfigPerformanceTierEnum {
  VolumePerformanceTierUnspecified = "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
  VolumePerformanceTierShared = "VOLUME_PERFORMANCE_TIER_SHARED",
  VolumePerformanceTierAssigned = "VOLUME_PERFORMANCE_TIER_ASSIGNED",
  VolumePerformanceTierHt = "VOLUME_PERFORMANCE_TIER_HT",
}

/**
 * Volume protocol.
 */
export enum VolumeConfigProtocolEnum {
  ProtocolUnspecified = "PROTOCOL_UNSPECIFIED",
  ProtocolFc = "PROTOCOL_FC",
  ProtocolNfs = "PROTOCOL_NFS",
}

/**
 * The type of this Volume.
 */
export enum VolumeConfigTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  Flash = "FLASH",
  Disk = "DISK",
}

/**
 * Configuration parameters for a new volume.
 */
export class VolumeConfigInput extends SpeakeasyBase {
  /**
   * The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gcpService" })
  gcpService?: string;

  /**
   * A transient unique identifier to identify a volume within an ProvisioningConfig request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.
   */
  @SpeakeasyMetadata({ elemType: LunRange })
  @Expose({ name: "lunRanges" })
  @Type(() => LunRange)
  lunRanges?: LunRange[];

  /**
   * Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "machineIds" })
  machineIds?: string[];

  /**
   * NFS exports. Set only when protocol is PROTOCOL_NFS.
   */
  @SpeakeasyMetadata({ elemType: NfsExport })
  @Expose({ name: "nfsExports" })
  @Type(() => NfsExport)
  nfsExports?: NfsExport[];

  /**
   * Performance tier of the Volume. Default is SHARED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "performanceTier" })
  performanceTier?: VolumeConfigPerformanceTierEnum;

  /**
   * Volume protocol.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: VolumeConfigProtocolEnum;

  /**
   * The requested size of this volume, in GB.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sizeGb" })
  sizeGb?: number;

  /**
   * Whether snapshots should be enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snapshotsEnabled" })
  snapshotsEnabled?: boolean;

  /**
   * Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storageAggregatePool" })
  storageAggregatePool?: string;

  /**
   * The type of this Volume.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: VolumeConfigTypeEnum;

  /**
   * User note field, it can be used by customers to add additional information for the BMS Ops team .
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userNote" })
  userNote?: string;
}

/**
 * Configuration parameters for a new volume.
 */
export class VolumeConfig extends SpeakeasyBase {
  /**
   * The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gcpService" })
  gcpService?: string;

  /**
   * A transient unique identifier to identify a volume within an ProvisioningConfig request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.
   */
  @SpeakeasyMetadata({ elemType: LunRange })
  @Expose({ name: "lunRanges" })
  @Type(() => LunRange)
  lunRanges?: LunRange[];

  /**
   * Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "machineIds" })
  machineIds?: string[];

  /**
   * Output only. The name of the volume config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * NFS exports. Set only when protocol is PROTOCOL_NFS.
   */
  @SpeakeasyMetadata({ elemType: NfsExport })
  @Expose({ name: "nfsExports" })
  @Type(() => NfsExport)
  nfsExports?: NfsExport[];

  /**
   * Performance tier of the Volume. Default is SHARED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "performanceTier" })
  performanceTier?: VolumeConfigPerformanceTierEnum;

  /**
   * Volume protocol.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: VolumeConfigProtocolEnum;

  /**
   * The requested size of this volume, in GB.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sizeGb" })
  sizeGb?: number;

  /**
   * Whether snapshots should be enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snapshotsEnabled" })
  snapshotsEnabled?: boolean;

  /**
   * Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storageAggregatePool" })
  storageAggregatePool?: string;

  /**
   * The type of this Volume.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: VolumeConfigTypeEnum;

  /**
   * User note field, it can be used by customers to add additional information for the BMS Ops team .
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userNote" })
  userNote?: string;
}
