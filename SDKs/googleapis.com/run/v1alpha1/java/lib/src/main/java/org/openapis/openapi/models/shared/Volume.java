/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Volume - Volume represents a named volume in a container.
 */
public class Volume {
    /**
     * Not supported by Cloud Run Adapts a ConfigMap into a volume. The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configMap")
    public ConfigMapVolumeSource configMap;
    public Volume withConfigMap(ConfigMapVolumeSource configMap) {
        this.configMap = configMap;
        return this;
    }
    
    /**
     * Volume's name. In Cloud Run Fully Managed, the name 'cloudsql' is reserved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Volume withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The secret's value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secret_name. The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public SecretVolumeSource secret;
    public Volume withSecret(SecretVolumeSource secret) {
        this.secret = secret;
        return this;
    }
    
}
