// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AlertSeverityEnum - Output only. Severity of this alert.
type AlertSeverityEnum string

const (
	AlertSeverityEnumSeverityUnspecified AlertSeverityEnum = "SEVERITY_UNSPECIFIED"
	AlertSeverityEnumInfo                AlertSeverityEnum = "INFO"
	AlertSeverityEnumWarning             AlertSeverityEnum = "WARNING"
	AlertSeverityEnumSevere              AlertSeverityEnum = "SEVERE"
)

func (e *AlertSeverityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SEVERITY_UNSPECIFIED":
		fallthrough
	case "INFO":
		fallthrough
	case "WARNING":
		fallthrough
	case "SEVERE":
		*e = AlertSeverityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlertSeverityEnum: %s", s)
	}
}

// Alert - Representation of an alert.
type Alert struct {
	// Output only. The localized alert message. This may contain HTML markup, such as phrase elements or links.
	Message *string `json:"message,omitempty"`
	// Output only. Resource name of the alert. Format: accounts/{account}/alerts/{alert}
	Name *string `json:"name,omitempty"`
	// Output only. Severity of this alert.
	Severity *AlertSeverityEnum `json:"severity,omitempty"`
	// Output only. Type of alert. This identifies the broad type of this alert, and provides a stable machine-readable identifier that will not be translated. For example, "payment-hold".
	Type *string `json:"type,omitempty"`
}
