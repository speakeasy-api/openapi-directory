/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDebitMemoItemsRequest {
    /**
     * An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
     * 
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Zuora-Entity-Ids")
    public String zuoraEntityIds;
    public GETDebitMemoItemsRequest withZuoraEntityIds(String zuoraEntityIds) {
        this.zuoraEntityIds = zuoraEntityIds;
        return this;
    }
    
    /**
     * A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
     * 
     * The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
     * 
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Zuora-Track-Id")
    public String zuoraTrackId;
    public GETDebitMemoItemsRequest withZuoraTrackId(String zuoraTrackId) {
        this.zuoraTrackId = zuoraTrackId;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `amount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=amount")
    public Double amount;
    public GETDebitMemoItemsRequest withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `beAppliedAmount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=beAppliedAmount")
    public Double beAppliedAmount;
    public GETDebitMemoItemsRequest withBeAppliedAmount(Double beAppliedAmount) {
        this.beAppliedAmount = beAppliedAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `createdById` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createdById")
    public String createdById;
    public GETDebitMemoItemsRequest withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `createdDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createdDate")
    public OffsetDateTime createdDate;
    public GETDebitMemoItemsRequest withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * The unique ID of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e.
     * 
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=debitMemoId")
    public String debitMemoId;
    public GETDebitMemoItemsRequest withDebitMemoId(String debitMemoId) {
        this.debitMemoId = debitMemoId;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `id` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id")
    public String id;
    public GETDebitMemoItemsRequest withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Number of rows returned per page.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Long pageSize;
    public GETDebitMemoItemsRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `serviceEndDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=serviceEndDate")
    public LocalDate serviceEndDate;
    public GETDebitMemoItemsRequest withServiceEndDate(LocalDate serviceEndDate) {
        this.serviceEndDate = serviceEndDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `serviceStartDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=serviceStartDate")
    public LocalDate serviceStartDate;
    public GETDebitMemoItemsRequest withServiceStartDate(LocalDate serviceStartDate) {
        this.serviceStartDate = serviceStartDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `sku` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sku")
    public String sku;
    public GETDebitMemoItemsRequest withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `skuName` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=skuName")
    public String skuName;
    public GETDebitMemoItemsRequest withSkuName(String skuName) {
        this.skuName = skuName;
        return this;
    }
    
    /**
     * This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
     * 
     * A sortable field uses the following form: 
     * 
     * *operator* *field_name*
     * 
     * You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
     * 
     * *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
     * 
     *   - The `-` operator indicates an ascending order.
     *   - The `+` operator indicates a descending order.
     * 
     * By default, the response data is displayed in descending order by updated date.
     * 
     * *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
     * 
     *   - id
     *   - amount
     *   - beAppliedAmount
     *   - sku
     *   - skuName
     *   - serviceStartDate
     *   - serviceEndDate
     *   - sourceItemId
     *   - createdDate
     *   - createdById
     *   - updatedDate
     *   - updatedById
     *   - subscriptionId
     *   
     * Examples:
     * 
     * - /v1/debitmemos/402890245c7ca371015c7cb40b28001f/items?sort=createdDate
     * 
     * - /v1/debitmemos/402890245c7ca371015c7cb40b28001f/items?amount=100&amp;sort=createdDate
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public GETDebitMemoItemsRequest withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `sourceItemId` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sourceItemId")
    public String sourceItemId;
    public GETDebitMemoItemsRequest withSourceItemId(String sourceItemId) {
        this.sourceItemId = sourceItemId;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `subscriptionId` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=subscriptionId")
    public String subscriptionId;
    public GETDebitMemoItemsRequest withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `updatedById` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=updatedById")
    public String updatedById;
    public GETDebitMemoItemsRequest withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `updatedDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=updatedDate")
    public OffsetDateTime updatedDate;
    public GETDebitMemoItemsRequest withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
    /**
     * The minor version of the Zuora REST API. See [Minor Version](https://www.zuora.com/developer/api-reference/#section/API-Versions/Minor-Version) for information about REST API version control. 
     * 
     * This header affects the availability of the following response fields:
     * * `items` &gt; `taxItems`
     * * `items` &gt; `taxationItems`
     * * `items` &gt; `comment`
     * * `items` &gt; `description`
     * 
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=zuora-version")
    public String zuoraVersion;
    public GETDebitMemoItemsRequest withZuoraVersion(String zuoraVersion) {
        this.zuoraVersion = zuoraVersion;
        return this;
    }
    
}
