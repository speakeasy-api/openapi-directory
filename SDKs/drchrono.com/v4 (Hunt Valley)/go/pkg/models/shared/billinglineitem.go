// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BillingLineItemBillingStatusEnum - One of `""`, `"Incomplete Information"`, `"In Process Emdeon"`, `"In Process iHCFA"`, `"In Process Gateway"`, `"Rejected Emdeon"`, `"Rejected iHCFA"`, `"Rejected Gateway"`, `"In Process Payer"`, `"Payer Acknowledged"`, `"Rejected Payer"`, `"Paid in Full"`,  `"Partially Paid"`,  `"Coordination of Benefits"`,  `"ERA Received"`,  `"ERA Denied"`
type BillingLineItemBillingStatusEnum string

const (
	BillingLineItemBillingStatusEnumUnknown                BillingLineItemBillingStatusEnum = ""
	BillingLineItemBillingStatusEnumIncompleteInformation  BillingLineItemBillingStatusEnum = "Incomplete Information"
	BillingLineItemBillingStatusEnumInProcessEmdeon        BillingLineItemBillingStatusEnum = "In Process Emdeon"
	BillingLineItemBillingStatusEnumInProcessIHcfa         BillingLineItemBillingStatusEnum = "In Process iHCFA"
	BillingLineItemBillingStatusEnumInProcessGateway       BillingLineItemBillingStatusEnum = "In Process Gateway"
	BillingLineItemBillingStatusEnumInProcessJopari        BillingLineItemBillingStatusEnum = "In Process Jopari"
	BillingLineItemBillingStatusEnumInProcessWaystar       BillingLineItemBillingStatusEnum = "In Process Waystar"
	BillingLineItemBillingStatusEnumRejectedEmdeon         BillingLineItemBillingStatusEnum = "Rejected Emdeon"
	BillingLineItemBillingStatusEnumRejectedIHcfa          BillingLineItemBillingStatusEnum = "Rejected iHCFA"
	BillingLineItemBillingStatusEnumRejectedGateway        BillingLineItemBillingStatusEnum = "Rejected Gateway"
	BillingLineItemBillingStatusEnumRejectedJopari         BillingLineItemBillingStatusEnum = "Rejected Jopari"
	BillingLineItemBillingStatusEnumRejectedWaystar        BillingLineItemBillingStatusEnum = "Rejected Waystar"
	BillingLineItemBillingStatusEnumInProcessPayer         BillingLineItemBillingStatusEnum = "In Process Payer"
	BillingLineItemBillingStatusEnumPayerAcknowledged      BillingLineItemBillingStatusEnum = "Payer Acknowledged"
	BillingLineItemBillingStatusEnumRejectedPayer          BillingLineItemBillingStatusEnum = "Rejected Payer"
	BillingLineItemBillingStatusEnumPaidInFull             BillingLineItemBillingStatusEnum = "Paid in Full"
	BillingLineItemBillingStatusEnumPartiallyPaid          BillingLineItemBillingStatusEnum = "Partially Paid"
	BillingLineItemBillingStatusEnumCoordinationOfBenefits BillingLineItemBillingStatusEnum = "Coordination of Benefits"
	BillingLineItemBillingStatusEnumEraReceived            BillingLineItemBillingStatusEnum = "ERA Received"
	BillingLineItemBillingStatusEnumEraDenied              BillingLineItemBillingStatusEnum = "ERA Denied"
)

func (e *BillingLineItemBillingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "":
		fallthrough
	case "Incomplete Information":
		fallthrough
	case "In Process Emdeon":
		fallthrough
	case "In Process iHCFA":
		fallthrough
	case "In Process Gateway":
		fallthrough
	case "In Process Jopari":
		fallthrough
	case "In Process Waystar":
		fallthrough
	case "Rejected Emdeon":
		fallthrough
	case "Rejected iHCFA":
		fallthrough
	case "Rejected Gateway":
		fallthrough
	case "Rejected Jopari":
		fallthrough
	case "Rejected Waystar":
		fallthrough
	case "In Process Payer":
		fallthrough
	case "Payer Acknowledged":
		fallthrough
	case "Rejected Payer":
		fallthrough
	case "Paid in Full":
		fallthrough
	case "Partially Paid":
		fallthrough
	case "Coordination of Benefits":
		fallthrough
	case "ERA Received":
		fallthrough
	case "ERA Denied":
		*e = BillingLineItemBillingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingLineItemBillingStatusEnum: %s", s)
	}
}

// BillingLineItemProcedureTypeEnum - One of `"CPT(C)"`, `"HCPCS(H)"`, `"Custom(U)"`, use 1 character identifier when using `POST`
type BillingLineItemProcedureTypeEnum string

const (
	BillingLineItemProcedureTypeEnumC BillingLineItemProcedureTypeEnum = "C"
	BillingLineItemProcedureTypeEnumH BillingLineItemProcedureTypeEnum = "H"
	BillingLineItemProcedureTypeEnumU BillingLineItemProcedureTypeEnum = "U"
	BillingLineItemProcedureTypeEnumS BillingLineItemProcedureTypeEnum = "S"
)

func (e *BillingLineItemProcedureTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "C":
		fallthrough
	case "H":
		fallthrough
	case "U":
		fallthrough
	case "S":
		*e = BillingLineItemProcedureTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingLineItemProcedureTypeEnum: %s", s)
	}
}

// BillingLineItem - Created
type BillingLineItem struct {
	// Adjustment from total billed
	Adjustment *float64 `json:"adjustment,omitempty"`
	// Amount allowed by insurance
	Allowed *float64 `json:"allowed,omitempty"`
	// Appointment ID
	Appointment int64 `json:"appointment"`
	// Insurance balance
	BalanceIns *float64 `json:"balance_ins,omitempty"`
	// Patient balance
	BalancePt *float64 `json:"balance_pt,omitempty"`
	// Total balance
	BalanceTotal *string `json:"balance_total,omitempty"`
	// Total billed
	Billed *float64 `json:"billed,omitempty"`
	// One of `""`, `"Incomplete Information"`, `"In Process Emdeon"`, `"In Process iHCFA"`, `"In Process Gateway"`, `"Rejected Emdeon"`, `"Rejected iHCFA"`, `"Rejected Gateway"`, `"In Process Payer"`, `"Payer Acknowledged"`, `"Rejected Payer"`, `"Paid in Full"`,  `"Partially Paid"`,  `"Coordination of Benefits"`,  `"ERA Received"`,  `"ERA Denied"`
	BillingStatus *BillingLineItemBillingStatusEnum `json:"billing_status,omitempty"`
	Code          string                            `json:"code"`
	DeniedFlag    *bool                             `json:"denied_flag,omitempty"`
	Description   *string                           `json:"description,omitempty"`
	// List of 4 diagnosis pointers
	DiagnosisPointers []string `json:"diagnosis_pointers"`
	// Doctor ID
	Doctor                *string  `json:"doctor,omitempty"`
	ExpectedReimbursement *float64 `json:"expected_reimbursement,omitempty"`
	ID                    *int64   `json:"id,omitempty"`
	// Amount paid by patient's primary insurer
	Ins1Paid *float64 `json:"ins1_paid,omitempty"`
	// Amount paid by patient's secondary insurer
	Ins2Paid *float64 `json:"ins2_paid,omitempty"`
	// Amount paid by patinet's tertiary insurer
	Ins3Paid *float64 `json:"ins3_paid,omitempty"`
	// Total amount paid by patient's insurers
	InsTotal *string `json:"ins_total,omitempty"`
	// This corresponds to the "Status/Adj Type" from billing detail screen
	InsuranceStatus *string `json:"insurance_status,omitempty"`
	// List of 4 code modifiers
	Modifiers []string `json:"modifiers,omitempty"`
	// Total amount paid
	PaidTotal *string `json:"paid_total,omitempty"`
	// Patient ID
	Patient    *string `json:"patient,omitempty"`
	PostedDate *string `json:"posted_date,omitempty"`
	// Price of procedure
	Price *float64 `json:"price,omitempty"`
	// One of `"CPT(C)"`, `"HCPCS(H)"`, `"Custom(U)"`, use 1 character identifier when using `POST`
	ProcedureType BillingLineItemProcedureTypeEnum `json:"procedure_type"`
	// Amount paid by patient
	PtPaid   *float64 `json:"pt_paid,omitempty"`
	Quantity *float64 `json:"quantity,omitempty"`
	// Date on which the service was rendered
	ServiceDate *string `json:"service_date,omitempty"`
	// Default to "UN"
	Units     *string `json:"units,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}
