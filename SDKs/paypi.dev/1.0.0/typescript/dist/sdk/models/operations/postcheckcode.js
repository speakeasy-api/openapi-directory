"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostCheckCodeResponse = exports.PostCheckCode200ApplicationJSON = exports.PostCheckCode401ApplicationJSON = exports.PostCheckCode403ApplicationJSON = exports.PostCheckCodeRequestBody = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var PostCheckCodeRequestBody = /** @class */ (function (_super) {
    __extends(PostCheckCodeRequestBody, _super);
    function PostCheckCodeRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], PostCheckCodeRequestBody.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "email" }),
        __metadata("design:type", String)
    ], PostCheckCodeRequestBody.prototype, "email", void 0);
    return PostCheckCodeRequestBody;
}(utils_1.SpeakeasyBase));
exports.PostCheckCodeRequestBody = PostCheckCodeRequestBody;
/**
 * #### Tries for this email exceeded.
 *
 * @remarks
 * To prevent abuse and brute forcing, we limit the number of checkCode requests for each email address to 20. \
 * This means if more than 20 requests are made you will have to send another code to your user, this will reset the limit.
 *
 */
var PostCheckCode403ApplicationJSON = /** @class */ (function (_super) {
    __extends(PostCheckCode403ApplicationJSON, _super);
    function PostCheckCode403ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], PostCheckCode403ApplicationJSON.prototype, "message", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "success" }),
        __metadata("design:type", Boolean)
    ], PostCheckCode403ApplicationJSON.prototype, "success", void 0);
    return PostCheckCode403ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.PostCheckCode403ApplicationJSON = PostCheckCode403ApplicationJSON;
/**
 * #### Invalid API key
 *
 * @remarks
 *
 */
var PostCheckCode401ApplicationJSON = /** @class */ (function (_super) {
    __extends(PostCheckCode401ApplicationJSON, _super);
    function PostCheckCode401ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], PostCheckCode401ApplicationJSON.prototype, "message", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "success" }),
        __metadata("design:type", Boolean)
    ], PostCheckCode401ApplicationJSON.prototype, "success", void 0);
    return PostCheckCode401ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.PostCheckCode401ApplicationJSON = PostCheckCode401ApplicationJSON;
/**
 * If success is true, the user has given the correct code. If not the code is incorrect. \
 *
 * @remarks
 * Check the message for more information
 *
 */
var PostCheckCode200ApplicationJSON = /** @class */ (function (_super) {
    __extends(PostCheckCode200ApplicationJSON, _super);
    function PostCheckCode200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], PostCheckCode200ApplicationJSON.prototype, "message", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "success" }),
        __metadata("design:type", Boolean)
    ], PostCheckCode200ApplicationJSON.prototype, "success", void 0);
    return PostCheckCode200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.PostCheckCode200ApplicationJSON = PostCheckCode200ApplicationJSON;
var PostCheckCodeResponse = /** @class */ (function (_super) {
    __extends(PostCheckCodeResponse, _super);
    function PostCheckCodeResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PostCheckCodeResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], PostCheckCodeResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], PostCheckCodeResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", PostCheckCode200ApplicationJSON)
    ], PostCheckCodeResponse.prototype, "postCheckCode200ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", PostCheckCode401ApplicationJSON)
    ], PostCheckCodeResponse.prototype, "postCheckCode401ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", PostCheckCode403ApplicationJSON)
    ], PostCheckCodeResponse.prototype, "postCheckCode403ApplicationJSONObject", void 0);
    return PostCheckCodeResponse;
}(utils_1.SpeakeasyBase));
exports.PostCheckCodeResponse = PostCheckCodeResponse;
