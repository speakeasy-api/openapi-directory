<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Volume - Volume describes a volume and parameters for it to be mounted to a VM.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Volume
{
    /**
     * Device name of an attached disk volume, which should align with a device_name specified by job.allocation_policy.instances[0].policy.disks[i].device_name or defined by the given instance template in job.allocation_policy.instances[0].instance_template.
     * 
     * @var ?string $deviceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('deviceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deviceName = null;
    
    /**
     * Represents a Google Cloud Storage volume.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Gcs $gcs
     */
	#[\JMS\Serializer\Annotation\SerializedName('gcs')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Gcs')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Gcs $gcs = null;
    
    /**
     * For Google Cloud Storage (GCS), mount options are the options supported by the gcsfuse tool (https://github.com/GoogleCloudPlatform/gcsfuse). For existing persistent disks, mount options provided by the mount command (https://man7.org/linux/man-pages/man8/mount.8.html) except writing are supported. This is due to restrictions of multi-writer mode (https://cloud.google.com/compute/docs/disks/sharing-disks-between-vms). For other attached disks and Network File System (NFS), mount options are these supported by the mount command (https://man7.org/linux/man-pages/man8/mount.8.html).
     * 
     * @var ?array<string> $mountOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('mountOptions')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $mountOptions = null;
    
    /**
     * The mount path for the volume, e.g. /mnt/disks/share.
     * 
     * @var ?string $mountPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('mountPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mountPath = null;
    
    /**
     * Represents an NFS volume.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Nfs $nfs
     */
	#[\JMS\Serializer\Annotation\SerializedName('nfs')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Nfs')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Nfs $nfs = null;
    
	public function __construct()
	{
		$this->deviceName = null;
		$this->gcs = null;
		$this->mountOptions = null;
		$this->mountPath = null;
		$this->nfs = null;
	}
}
