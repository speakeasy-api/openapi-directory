/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETReplaceTransitGatewayRouteActionEnum {
  ReplaceTransitGatewayRoute = "ReplaceTransitGatewayRoute",
}

export enum GETReplaceTransitGatewayRouteVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETReplaceTransitGatewayRouteRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETReplaceTransitGatewayRouteActionEnum;

  /**
   * Indicates whether traffic matching this route is to be dropped.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Blackhole",
  })
  blackhole?: boolean;

  /**
   * The CIDR range used for the destination match. Routing decisions are based on the most specific match.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DestinationCidrBlock",
  })
  destinationCidrBlock: string;

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The ID of the attachment.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=TransitGatewayAttachmentId",
  })
  transitGatewayAttachmentId?: string;

  /**
   * The ID of the route table.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=TransitGatewayRouteTableId",
  })
  transitGatewayRouteTableId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETReplaceTransitGatewayRouteVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETReplaceTransitGatewayRouteResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
