/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { QuoteBaseVO } from "./quotebasevo";
import { RfqItemBaseVO } from "./rfqitembasevo";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Java type: com.noosh.nooshapi.vo.RfqDetailsVO
 */
export class RfqDetailsVO extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "proposed_completion_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  proposedCompletionDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "quote_due_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  quoteDueDate?: Date;

  @SpeakeasyMetadata({ elemType: QuoteBaseVO })
  @Expose({ name: "quotes" })
  @Type(() => QuoteBaseVO)
  quotes?: QuoteBaseVO[];

  @SpeakeasyMetadata()
  @Expose({ name: "received_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  receivedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient_name" })
  recipientName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requestor_name" })
  requestorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rfq_id" })
  rfqId?: number;

  @SpeakeasyMetadata({ elemType: RfqItemBaseVO })
  @Expose({ name: "rfq_items" })
  @Type(() => RfqItemBaseVO)
  rfqItems?: RfqItemBaseVO[];

  @SpeakeasyMetadata()
  @Expose({ name: "rfq_title" })
  rfqTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}
