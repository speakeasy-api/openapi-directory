// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OpsFilterOperatorTypeEnum string

const (
	OpsFilterOperatorTypeEnumEqual       OpsFilterOperatorTypeEnum = "Equal"
	OpsFilterOperatorTypeEnumNotEqual    OpsFilterOperatorTypeEnum = "NotEqual"
	OpsFilterOperatorTypeEnumBeginWith   OpsFilterOperatorTypeEnum = "BeginWith"
	OpsFilterOperatorTypeEnumLessThan    OpsFilterOperatorTypeEnum = "LessThan"
	OpsFilterOperatorTypeEnumGreaterThan OpsFilterOperatorTypeEnum = "GreaterThan"
	OpsFilterOperatorTypeEnumExists      OpsFilterOperatorTypeEnum = "Exists"
)

func (e *OpsFilterOperatorTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Equal":
		fallthrough
	case "NotEqual":
		fallthrough
	case "BeginWith":
		fallthrough
	case "LessThan":
		fallthrough
	case "GreaterThan":
		fallthrough
	case "Exists":
		*e = OpsFilterOperatorTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OpsFilterOperatorTypeEnum: %s", s)
	}
}
