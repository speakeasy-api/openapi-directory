"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import limit as shared_limit
from ..shared import update_a_limit_parameters as shared_update_a_limit_parameters
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class UpdateALimitRequest:
    
    limit_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'limit_id', 'style': 'simple', 'explode': False }})  
    update_a_limit_parameters: shared_update_a_limit_parameters.UpdateALimitParameters = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    
class UpdateALimitDefaultApplicationJSON13StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_TWENTY_NINE = '429'

class UpdateALimitDefaultApplicationJSON13TypeEnum(str, Enum):
    RATE_LIMITED_ERROR = 'rate_limited_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON13:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON13StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON13TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    retry_after: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retry_after'), 'exclude': lambda f: f is None }})  
    
class UpdateALimitDefaultApplicationJSON12StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class UpdateALimitDefaultApplicationJSON12TypeEnum(str, Enum):
    PRIVATE_FEATURE_ERROR = 'private_feature_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON12:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON12StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON12TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class UpdateALimitDefaultApplicationJSON11StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_FOUR = '404'

class UpdateALimitDefaultApplicationJSON11TypeEnum(str, Enum):
    OBJECT_NOT_FOUND_ERROR = 'object_not_found_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON11:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON11StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON11TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class UpdateALimitDefaultApplicationJSON10StatusEnum(str, Enum):
    FOUR_HUNDRED = '400'

class UpdateALimitDefaultApplicationJSON10TypeEnum(str, Enum):
    MALFORMED_REQUEST_ERROR = 'malformed_request_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON10:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON10StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON10TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class UpdateALimitDefaultApplicationJSON9StatusEnum(str, Enum):
    FOUR_HUNDRED = '400'

class UpdateALimitDefaultApplicationJSON9TypeEnum(str, Enum):
    INVALID_PARAMETERS_ERROR = 'invalid_parameters_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON9:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON9StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON9TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    errors: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""All errors related to parsing the request parameters."""  
    
class UpdateALimitDefaultApplicationJSON8StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_NINE = '409'

class UpdateALimitDefaultApplicationJSON8TypeEnum(str, Enum):
    INVALID_OPERATION_ERROR = 'invalid_operation_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON8:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON8StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON8TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class UpdateALimitDefaultApplicationJSON7StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_ONE = '401'

class UpdateALimitDefaultApplicationJSON7TypeEnum(str, Enum):
    INVALID_API_KEY_ERROR = 'invalid_api_key_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON7:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON7StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON7TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class UpdateALimitDefaultApplicationJSON6StatusEnum(str, Enum):
    FIVE_HUNDRED = '500'

class UpdateALimitDefaultApplicationJSON6TypeEnum(str, Enum):
    INTERNAL_SERVER_ERROR = 'internal_server_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON6:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON6StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON6TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class UpdateALimitDefaultApplicationJSON5StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class UpdateALimitDefaultApplicationJSON5TypeEnum(str, Enum):
    INSUFFICIENT_PERMISSIONS_ERROR = 'insufficient_permissions_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON5:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON5StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON5TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class UpdateALimitDefaultApplicationJSON4StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_TWENTY_TWO = '422'

class UpdateALimitDefaultApplicationJSON4TypeEnum(str, Enum):
    IDEMPOTENCY_UNPROCESSABLE_ERROR = 'idempotency_unprocessable_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON4:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON4StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON4TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class UpdateALimitDefaultApplicationJSON3StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_NINE = '409'

class UpdateALimitDefaultApplicationJSON3TypeEnum(str, Enum):
    IDEMPOTENCY_CONFLICT_ERROR = 'idempotency_conflict_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON3:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON3StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON3TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class UpdateALimitDefaultApplicationJSON2StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class UpdateALimitDefaultApplicationJSON2TypeEnum(str, Enum):
    ENVIRONMENT_MISMATCH_ERROR = 'environment_mismatch_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON2:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON2StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON2TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class UpdateALimitDefaultApplicationJSON1StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_FOUR = '404'

class UpdateALimitDefaultApplicationJSON1TypeEnum(str, Enum):
    API_METHOD_NOT_FOUND_ERROR = 'api_method_not_found_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateALimitDefaultApplicationJSON1:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: UpdateALimitDefaultApplicationJSON1StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: UpdateALimitDefaultApplicationJSON1TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    

@dataclasses.dataclass
class UpdateALimitResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[Any] = dataclasses.field(default=None)
    r"""Error"""  
    limit: Optional[shared_limit.Limit] = dataclasses.field(default=None)
    r"""Limit"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    