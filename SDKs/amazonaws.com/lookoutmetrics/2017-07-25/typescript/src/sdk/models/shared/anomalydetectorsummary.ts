/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnomalyDetectorStatusEnum } from "./anomalydetectorstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains information about an an anomaly detector.
 */
export class AnomalyDetectorSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorArn" })
  anomalyDetectorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorDescription" })
  anomalyDetectorDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorName" })
  anomalyDetectorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: AnomalyDetectorStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}
