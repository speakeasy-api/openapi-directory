// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetEnvironmentTemplateVersionXAmzTargetEnum
type GetEnvironmentTemplateVersionXAmzTargetEnum string

const (
	GetEnvironmentTemplateVersionXAmzTargetEnumAwsProton20200720GetEnvironmentTemplateVersion GetEnvironmentTemplateVersionXAmzTargetEnum = "AwsProton20200720.GetEnvironmentTemplateVersion"
)

func (e *GetEnvironmentTemplateVersionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AwsProton20200720.GetEnvironmentTemplateVersion":
		*e = GetEnvironmentTemplateVersionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetEnvironmentTemplateVersionXAmzTargetEnum: %s", s)
	}
}

type GetEnvironmentTemplateVersionHeaders struct {
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetEnvironmentTemplateVersionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetEnvironmentTemplateVersionRequest struct {
	Headers GetEnvironmentTemplateVersionHeaders
	Request shared.GetEnvironmentTemplateVersionInput `request:"mediaType=application/json"`
}

type GetEnvironmentTemplateVersionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetEnvironmentTemplateVersionOutput *shared.GetEnvironmentTemplateVersionOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
