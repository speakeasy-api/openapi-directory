"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import glossaryterm as shared_glossaryterm
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GlossaryTermsPair:
    r"""Represents a single entry for an unidirectional glossary."""
    
    source_term: Optional[shared_glossaryterm.GlossaryTerm] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceTerm'), 'exclude': lambda f: f is None }})
    r"""Represents a single glossary term"""  
    target_term: Optional[shared_glossaryterm.GlossaryTerm] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetTerm'), 'exclude': lambda f: f is None }})
    r"""Represents a single glossary term"""  
    