"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition = void 0;
var utils_1 = require("../../../internal/utils");
var destinydefinitionsitemsdestinyderiveditemdefinition_1 = require("./destinydefinitionsitemsdestinyderiveditemdefinition");
/**
 * A shortcut for the fact that some items have a "Preview Vendor" - See DestinyInventoryItemDefinition.preview.previewVendorHash - that is intended to be used to show what items you can get as a result of acquiring or using this item.
 *
 * @remarks
 * A common example of this in Destiny 1 was Eververse "Boxes," which could have many possible items. This "Preview Vendor" is not a vendor you can actually see in the game, but it defines categories and sale items for all of the possible items you could get from the Box so that the game can show them to you. We summarize that info here so that you don't have to do that Vendor lookup and aggregation manually.
 */
var DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition = /** @class */ (function (_super) {
    __extends(DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition, _super);
    function DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.prototype, "categoryDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: destinydefinitionsitemsdestinyderiveditemdefinition_1.DestinyDefinitionsItemsDestinyDerivedItemDefinition,
        }),
        __metadata("design:type", Array)
    ], DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition.prototype, "items", void 0);
    return DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition;
}(utils_1.SpeakeasyBase));
exports.DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition = DestinyDefinitionsItemsDestinyDerivedItemCategoryDefinition;
