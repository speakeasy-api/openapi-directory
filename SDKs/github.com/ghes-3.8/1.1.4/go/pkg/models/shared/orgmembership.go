// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OrgMembershipPermissions struct {
	CanCreateRepository bool `json:"can_create_repository"`
}

// OrgMembershipRoleEnum - The user's membership type in the organization.
type OrgMembershipRoleEnum string

const (
	OrgMembershipRoleEnumAdmin          OrgMembershipRoleEnum = "admin"
	OrgMembershipRoleEnumMember         OrgMembershipRoleEnum = "member"
	OrgMembershipRoleEnumBillingManager OrgMembershipRoleEnum = "billing_manager"
)

func (e OrgMembershipRoleEnum) ToPointer() *OrgMembershipRoleEnum {
	return &e
}

func (e *OrgMembershipRoleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "admin":
		fallthrough
	case "member":
		fallthrough
	case "billing_manager":
		*e = OrgMembershipRoleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrgMembershipRoleEnum: %v", v)
	}
}

// OrgMembershipStateEnum - The state of the member in the organization. The `pending` state indicates the user has not yet accepted an invitation.
type OrgMembershipStateEnum string

const (
	OrgMembershipStateEnumActive  OrgMembershipStateEnum = "active"
	OrgMembershipStateEnumPending OrgMembershipStateEnum = "pending"
)

func (e OrgMembershipStateEnum) ToPointer() *OrgMembershipStateEnum {
	return &e
}

func (e *OrgMembershipStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "pending":
		*e = OrgMembershipStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrgMembershipStateEnum: %v", v)
	}
}

// OrgMembership - Org Membership
type OrgMembership struct {
	// A GitHub organization.
	Organization    OrganizationSimple        `json:"organization"`
	OrganizationURL string                    `json:"organization_url"`
	Permissions     *OrgMembershipPermissions `json:"permissions,omitempty"`
	// The user's membership type in the organization.
	Role OrgMembershipRoleEnum `json:"role"`
	// The state of the member in the organization. The `pending` state indicates the user has not yet accepted an invitation.
	State OrgMembershipStateEnum `json:"state"`
	URL   string                 `json:"url"`
	// A GitHub user.
	User NullableSimpleUser `json:"user"`
}
