// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListUserConversationServerList = []string{
	"https://conversations.twilio.com",
}

type ListUserConversationSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListUserConversationRequest struct {
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.
	UserSid string `pathParam:"style=simple,explode=false,name=UserSid"`
}

type ListUserConversationListUserConversationResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListUserConversationListUserConversationResponse - OK
type ListUserConversationListUserConversationResponse struct {
	Conversations []shared.ConversationsV1UserUserConversation          `json:"conversations,omitempty"`
	Meta          *ListUserConversationListUserConversationResponseMeta `json:"meta,omitempty"`
}

type ListUserConversationResponse struct {
	ContentType string
	// OK
	ListUserConversationResponse *ListUserConversationListUserConversationResponse
	StatusCode                   int
	RawResponse                  *http.Response
}
