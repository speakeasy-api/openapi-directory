/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRunV2Condition - Defines a status condition for a resource.
 */
public class GoogleCloudRunV2Condition {
    /**
     * A reason for the execution condition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionReason")
    public GoogleCloudRunV2ConditionExecutionReasonEnum executionReason;

    public GoogleCloudRunV2Condition withExecutionReason(GoogleCloudRunV2ConditionExecutionReasonEnum executionReason) {
        this.executionReason = executionReason;
        return this;
    }
    
    /**
     * Last time the condition transitioned from one status to another.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastTransitionTime")
    public String lastTransitionTime;

    public GoogleCloudRunV2Condition withLastTransitionTime(String lastTransitionTime) {
        this.lastTransitionTime = lastTransitionTime;
        return this;
    }
    
    /**
     * Human readable message indicating details about the current status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;

    public GoogleCloudRunV2Condition withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * A common (service-level) reason for this condition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public GoogleCloudRunV2ConditionReasonEnum reason;

    public GoogleCloudRunV2Condition withReason(GoogleCloudRunV2ConditionReasonEnum reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * A reason for the revision condition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revisionReason")
    public GoogleCloudRunV2ConditionRevisionReasonEnum revisionReason;

    public GoogleCloudRunV2Condition withRevisionReason(GoogleCloudRunV2ConditionRevisionReasonEnum revisionReason) {
        this.revisionReason = revisionReason;
        return this;
    }
    
    /**
     * How to interpret failures of this condition, one of Error, Warning, Info
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severity")
    public GoogleCloudRunV2ConditionSeverityEnum severity;

    public GoogleCloudRunV2Condition withSeverity(GoogleCloudRunV2ConditionSeverityEnum severity) {
        this.severity = severity;
        return this;
    }
    
    /**
     * State of the condition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public GoogleCloudRunV2ConditionStateEnum state;

    public GoogleCloudRunV2Condition withState(GoogleCloudRunV2ConditionStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * "Ready": True when the Resource is ready.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public GoogleCloudRunV2Condition withType(String type) {
        this.type = type;
        return this;
    }
    
    public GoogleCloudRunV2Condition(){}
}
