// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListTrustStoreCertificatesPathParams struct {
	// The ARN of the trust store
	TrustStoreArn string `pathParam:"style=simple,explode=false,name=trustStoreArn"`
}

type ListTrustStoreCertificatesQueryParams struct {
	// The maximum number of results to be included in the next page.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The pagination token used to retrieve the next page of results for this operation.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListTrustStoreCertificatesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListTrustStoreCertificatesRequest struct {
	PathParams  ListTrustStoreCertificatesPathParams
	QueryParams ListTrustStoreCertificatesQueryParams
	Headers     ListTrustStoreCertificatesHeaders
}

type ListTrustStoreCertificatesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListTrustStoreCertificatesResponse *shared.ListTrustStoreCertificatesResponse
	StatusCode                         int
	RawResponse                        *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
