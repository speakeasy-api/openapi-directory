// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// YoutubeAdGroupAdEntityStatusEnum - The entity status of the ad.
type YoutubeAdGroupAdEntityStatusEnum string

const (
	YoutubeAdGroupAdEntityStatusEnumEntityStatusUnspecified          YoutubeAdGroupAdEntityStatusEnum = "ENTITY_STATUS_UNSPECIFIED"
	YoutubeAdGroupAdEntityStatusEnumEntityStatusActive               YoutubeAdGroupAdEntityStatusEnum = "ENTITY_STATUS_ACTIVE"
	YoutubeAdGroupAdEntityStatusEnumEntityStatusArchived             YoutubeAdGroupAdEntityStatusEnum = "ENTITY_STATUS_ARCHIVED"
	YoutubeAdGroupAdEntityStatusEnumEntityStatusDraft                YoutubeAdGroupAdEntityStatusEnum = "ENTITY_STATUS_DRAFT"
	YoutubeAdGroupAdEntityStatusEnumEntityStatusPaused               YoutubeAdGroupAdEntityStatusEnum = "ENTITY_STATUS_PAUSED"
	YoutubeAdGroupAdEntityStatusEnumEntityStatusScheduledForDeletion YoutubeAdGroupAdEntityStatusEnum = "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
)

func (e *YoutubeAdGroupAdEntityStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENTITY_STATUS_UNSPECIFIED":
		fallthrough
	case "ENTITY_STATUS_ACTIVE":
		fallthrough
	case "ENTITY_STATUS_ARCHIVED":
		fallthrough
	case "ENTITY_STATUS_DRAFT":
		fallthrough
	case "ENTITY_STATUS_PAUSED":
		fallthrough
	case "ENTITY_STATUS_SCHEDULED_FOR_DELETION":
		*e = YoutubeAdGroupAdEntityStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for YoutubeAdGroupAdEntityStatusEnum: %s", s)
	}
}

// YoutubeAdGroupAd - A single ad associated with a YouTube ad group.
type YoutubeAdGroupAd struct {
	// The unique ID of the ad. Assigned by the system.
	AdGroupAdID *string `json:"adGroupAdId,omitempty"`
	// The unique ID of the ad group that the ad belongs to.
	AdGroupID *string `json:"adGroupId,omitempty"`
	// List of URLs used by the ad.
	AdUrls []AdURL `json:"adUrls,omitempty"`
	// The unique ID of the advertiser the ad belongs to.
	AdvertiserID *string `json:"advertiserId,omitempty"`
	// Details for an audio ad.
	AudioAd *AudioAd `json:"audioAd,omitempty"`
	// Details for a bumper ad.
	BumperAd *BumperAd `json:"bumperAd,omitempty"`
	// The display name of the ad. Must be UTF-8 encoded with a maximum size of 255 bytes.
	DisplayName *string `json:"displayName,omitempty"`
	// The ad sourced from a DV360 creative.
	DisplayVideoSourceAd *DisplayVideoSourceAd `json:"displayVideoSourceAd,omitempty"`
	// The entity status of the ad.
	EntityStatus *YoutubeAdGroupAdEntityStatusEnum `json:"entityStatus,omitempty"`
	// Details for an in-stream ad.
	InStreamAd *InStreamAd `json:"inStreamAd,omitempty"`
	// Details for a Masthead Ad.
	MastheadAd *MastheadAd `json:"mastheadAd,omitempty"`
	// The resource name of the ad.
	Name *string `json:"name,omitempty"`
	// Details for a non-skippable ad.
	NonSkippableAd *NonSkippableAd `json:"nonSkippableAd,omitempty"`
	// Details for a video discovery ad.
	VideoDiscoverAd *VideoDiscoveryAd `json:"videoDiscoverAd,omitempty"`
	// Details for a video performance ad.
	VideoPerformanceAd *VideoPerformanceAd `json:"videoPerformanceAd,omitempty"`
}
