"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apispec as shared_apispec
from ..shared import status as shared_status
from typing import Optional


@dataclasses.dataclass
class RegistryCreateAPISpecRequest:
    
    api: str = dataclasses.field(metadata={'path_param': { 'field_name': 'api', 'style': 'simple', 'explode': False }})
    r"""The api id."""  
    api_spec_input: shared_apispec.APISpecInput = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    location: str = dataclasses.field(metadata={'path_param': { 'field_name': 'location', 'style': 'simple', 'explode': False }})
    r"""The location id."""  
    project: str = dataclasses.field(metadata={'path_param': { 'field_name': 'project', 'style': 'simple', 'explode': False }})
    r"""The project id."""  
    version: str = dataclasses.field(metadata={'path_param': { 'field_name': 'version', 'style': 'simple', 'explode': False }})
    r"""The version id."""  
    api_spec_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'apiSpecId', 'style': 'form', 'explode': True }})
    r"""Required. The ID to use for the spec, which will become the final component of the spec's resource name. This value should be 4-63 characters, and valid characters are /[a-z][0-9]-/. Following AIP-162, IDs must not have the form of a UUID."""  
    

@dataclasses.dataclass
class RegistryCreateAPISpecResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_spec: Optional[shared_apispec.APISpecOutput] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    status: Optional[shared_status.Status] = dataclasses.field(default=None)
    r"""Default error response"""  
    