/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RevisionTemplate } from "./revisiontemplate";
import { TrafficTarget, TrafficTargetInput } from "./traffictarget";
import { Expose, Type } from "class-transformer";

/**
 * ServiceSpec holds the desired state of the Route (from the client), which is used to manipulate the underlying Route and Configuration(s).
 */
export class ServiceSpecInput extends SpeakeasyBase {
  /**
   * RevisionTemplateSpec describes the data a revision should have when created from a template. Based on: https://github.com/kubernetes/api/blob/e771f807/core/v1/types.go#L3179-L3190
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template" })
  @Type(() => RevisionTemplate)
  template?: RevisionTemplate;

  /**
   * Specifies how to distribute traffic over a collection of Knative Revisions and Configurations to the Service's main URL.
   */
  @SpeakeasyMetadata({ elemType: TrafficTargetInput })
  @Expose({ name: "traffic" })
  @Type(() => TrafficTargetInput)
  traffic?: TrafficTargetInput[];
}

/**
 * ServiceSpec holds the desired state of the Route (from the client), which is used to manipulate the underlying Route and Configuration(s).
 */
export class ServiceSpec extends SpeakeasyBase {
  /**
   * RevisionTemplateSpec describes the data a revision should have when created from a template. Based on: https://github.com/kubernetes/api/blob/e771f807/core/v1/types.go#L3179-L3190
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template" })
  @Type(() => RevisionTemplate)
  template?: RevisionTemplate;

  /**
   * Specifies how to distribute traffic over a collection of Knative Revisions and Configurations to the Service's main URL.
   */
  @SpeakeasyMetadata({ elemType: TrafficTarget })
  @Expose({ name: "traffic" })
  @Type(() => TrafficTarget)
  traffic?: TrafficTarget[];
}
