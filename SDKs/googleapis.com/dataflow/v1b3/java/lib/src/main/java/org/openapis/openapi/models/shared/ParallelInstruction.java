/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ParallelInstruction - Describes a particular operation comprising a MapTask.
 */
public class ParallelInstruction {
    /**
     * An instruction that copies its inputs (zero or more) to its (single) output.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flatten")
    public FlattenInstruction flatten;
    public ParallelInstruction withFlatten(FlattenInstruction flatten) {
        this.flatten = flatten;
        return this;
    }
    
    /**
     * User-provided name of this operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ParallelInstruction withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * System-defined name for the operation in the original workflow graph.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalName")
    public String originalName;
    public ParallelInstruction withOriginalName(String originalName) {
        this.originalName = originalName;
        return this;
    }
    
    /**
     * Describes the outputs of the instruction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputs")
    public InstructionOutput[] outputs;
    public ParallelInstruction withOutputs(InstructionOutput[] outputs) {
        this.outputs = outputs;
        return this;
    }
    
    /**
     * An instruction that does a ParDo operation. Takes one main input and zero or more side inputs, and produces zero or more outputs. Runs user code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parDo")
    public ParDoInstruction parDo;
    public ParallelInstruction withParDo(ParDoInstruction parDo) {
        this.parDo = parDo;
        return this;
    }
    
    /**
     * An instruction that does a partial group-by-key. One input and one output.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partialGroupByKey")
    public PartialGroupByKeyInstruction partialGroupByKey;
    public ParallelInstruction withPartialGroupByKey(PartialGroupByKeyInstruction partialGroupByKey) {
        this.partialGroupByKey = partialGroupByKey;
        return this;
    }
    
    /**
     * An instruction that reads records. Takes no inputs, produces one output.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("read")
    public ReadInstruction read;
    public ParallelInstruction withRead(ReadInstruction read) {
        this.read = read;
        return this;
    }
    
    /**
     * System-defined name of this operation. Unique across the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("systemName")
    public String systemName;
    public ParallelInstruction withSystemName(String systemName) {
        this.systemName = systemName;
        return this;
    }
    
    /**
     * An instruction that writes records. Takes one input, produces no outputs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("write")
    public WriteInstruction write;
    public ParallelInstruction withWrite(WriteInstruction write) {
        this.write = write;
        return this;
    }
    
}
