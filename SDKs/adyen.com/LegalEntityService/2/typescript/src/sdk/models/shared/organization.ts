/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { PhoneNumber } from "./phonenumber";
import { StockData } from "./stockdata";
import { TaxInformation } from "./taxinformation";
import { TaxReportingClassification } from "./taxreportingclassification";
import { WebData, WebDataInput } from "./webdata";
import { Expose, Type } from "class-transformer";

/**
 * Type of organization.
 *
 * @remarks
 *
 * Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
 */
export enum OrganizationTypeEnum {
  AssociationIncorporated = "associationIncorporated",
  GovernmentalOrganization = "governmentalOrganization",
  ListedPublicCompany = "listedPublicCompany",
  NonProfit = "nonProfit",
  PartnershipIncorporated = "partnershipIncorporated",
  PrivateCompany = "privateCompany",
}

/**
 * The reason the organization has not provided a VAT number.
 *
 * @remarks
 *
 * Possible values: **industryExemption**, **belowTaxThreshold**.
 */
export enum OrganizationVatAbsenceReasonEnum {
  IndustryExemption = "industryExemption",
  BelowTaxThreshold = "belowTaxThreshold",
}

export class OrganizationInput extends SpeakeasyBase {
  /**
   * The date when the organization was incorporated in YYYY-MM-DD format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateOfIncorporation" })
  dateOfIncorporation?: string;

  /**
   * Your description for the organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The organization's trading name, if different from the registered legal name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doingBusinessAs" })
  doingBusinessAs?: string;

  /**
   * The email address of the legal entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The organization's legal name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legalName" })
  legalName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  @Type(() => PhoneNumber)
  phone?: PhoneNumber;

  @SpeakeasyMetadata()
  @Expose({ name: "principalPlaceOfBusiness" })
  @Type(() => Address)
  principalPlaceOfBusiness?: Address;

  @SpeakeasyMetadata()
  @Expose({ name: "registeredAddress" })
  @Type(() => Address)
  registeredAddress: Address;

  /**
   * The organization's registration number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registrationNumber" })
  registrationNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stockData" })
  @Type(() => StockData)
  stockData?: StockData;

  /**
   * The tax information of the organization.
   */
  @SpeakeasyMetadata({ elemType: TaxInformation })
  @Expose({ name: "taxInformation" })
  @Type(() => TaxInformation)
  taxInformation?: TaxInformation[];

  @SpeakeasyMetadata()
  @Expose({ name: "taxReportingClassification" })
  @Type(() => TaxReportingClassification)
  taxReportingClassification?: TaxReportingClassification;

  /**
   * Type of organization.
   *
   * @remarks
   *
   * Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: OrganizationTypeEnum;

  /**
   * The reason the organization has not provided a VAT number.
   *
   * @remarks
   *
   * Possible values: **industryExemption**, **belowTaxThreshold**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vatAbsenceReason" })
  vatAbsenceReason?: OrganizationVatAbsenceReasonEnum;

  /**
   * The organization's VAT number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vatNumber" })
  vatNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "webData" })
  @Type(() => WebDataInput)
  webData?: WebDataInput;
}

export class Organization extends SpeakeasyBase {
  /**
   * The date when the organization was incorporated in YYYY-MM-DD format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateOfIncorporation" })
  dateOfIncorporation?: string;

  /**
   * Your description for the organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The organization's trading name, if different from the registered legal name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doingBusinessAs" })
  doingBusinessAs?: string;

  /**
   * The email address of the legal entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The organization's legal name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legalName" })
  legalName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  @Type(() => PhoneNumber)
  phone?: PhoneNumber;

  @SpeakeasyMetadata()
  @Expose({ name: "principalPlaceOfBusiness" })
  @Type(() => Address)
  principalPlaceOfBusiness?: Address;

  @SpeakeasyMetadata()
  @Expose({ name: "registeredAddress" })
  @Type(() => Address)
  registeredAddress: Address;

  /**
   * The organization's registration number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registrationNumber" })
  registrationNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stockData" })
  @Type(() => StockData)
  stockData?: StockData;

  /**
   * The tax information of the organization.
   */
  @SpeakeasyMetadata({ elemType: TaxInformation })
  @Expose({ name: "taxInformation" })
  @Type(() => TaxInformation)
  taxInformation?: TaxInformation[];

  @SpeakeasyMetadata()
  @Expose({ name: "taxReportingClassification" })
  @Type(() => TaxReportingClassification)
  taxReportingClassification?: TaxReportingClassification;

  /**
   * Type of organization.
   *
   * @remarks
   *
   * Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: OrganizationTypeEnum;

  /**
   * The reason the organization has not provided a VAT number.
   *
   * @remarks
   *
   * Possible values: **industryExemption**, **belowTaxThreshold**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vatAbsenceReason" })
  vatAbsenceReason?: OrganizationVatAbsenceReasonEnum;

  /**
   * The organization's VAT number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vatNumber" })
  vatNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "webData" })
  @Type(() => WebData)
  webData?: WebData;
}
