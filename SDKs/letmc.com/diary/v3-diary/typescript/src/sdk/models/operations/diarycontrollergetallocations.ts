/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class DiaryControllerGetAllocationsRequest extends SpeakeasyBase {
  /**
   * The unique appointment type identifier
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=appointmentType",
  })
  appointmentType: string;

  /**
   * Branch ID to check appointments (required if no property submitted)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=branchID",
  })
  branchID?: string;

  /**
   * Sales or Lettings property?
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=lettings",
  })
  lettings?: boolean;

  /**
   * The date to search from
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=preferredDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  preferredDate: Date;

  /**
   * The unique property identifier (Sales or Lettings) determines branch and property type
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=propertyIdentifier",
  })
  propertyIdentifier?: string;

  /**
   * The unique client short-name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=shortName",
  })
  shortName: string;
}

export class DiaryControllerGetAllocationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.DiaryBookingModel })
  diaryBookingModels?: shared.DiaryBookingModel[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
