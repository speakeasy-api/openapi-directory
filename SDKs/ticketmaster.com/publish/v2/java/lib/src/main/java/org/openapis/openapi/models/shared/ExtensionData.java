/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExtensionData - This class defines an extenstion data on the Publish API
 */
public class ExtensionData {
    /**
     * The actual information to add to the entity
     */
    @JsonProperty("data")
    public java.util.Map<String, Object> data;

    public ExtensionData withData(java.util.Map<String, Object> data) {
        this.data = data;
        return this;
    }
    
    /**
     * Id of the entity to add this extionsion to. If the relatedEntityId is Null, a relatedEntitySource MUST be provided
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedEntityId")
    public String relatedEntityId;

    public ExtensionData withRelatedEntityId(String relatedEntityId) {
        this.relatedEntityId = relatedEntityId;
        return this;
    }
    
    /**
     * Source
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedEntitySource")
    public Source relatedEntitySource;

    public ExtensionData withRelatedEntitySource(Source relatedEntitySource) {
        this.relatedEntitySource = relatedEntitySource;
        return this;
    }
    
    /**
     * The type of the entity to add this extensions to
     */
    @JsonProperty("relatedEntityType")
    public ExtensionDataRelatedEntityTypeEnum relatedEntityType;

    public ExtensionData withRelatedEntityType(ExtensionDataRelatedEntityTypeEnum relatedEntityType) {
        this.relatedEntityType = relatedEntityType;
        return this;
    }
    
    /**
     * Source of the extension, where it came from
     */
    @JsonProperty("source")
    public String source;

    public ExtensionData withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * The type of the extension. This represent the data sent
     */
    @JsonProperty("type")
    public String type;

    public ExtensionData withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Version of the extensions. Version is to prevent to override an extension with an older one
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionNumber")
    public Long versionNumber;

    public ExtensionData withVersionNumber(Long versionNumber) {
        this.versionNumber = versionNumber;
        return this;
    }
    
    public ExtensionData(@JsonProperty("data") java.util.Map<String, Object> data, @JsonProperty("relatedEntityType") ExtensionDataRelatedEntityTypeEnum relatedEntityType, @JsonProperty("source") String source, @JsonProperty("type") String type) {
        this.data = data;
        this.relatedEntityType = relatedEntityType;
        this.source = source;
        this.type = type;
  }
}
