// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PlaylistStatusPrivacyStatusEnum - The playlist's privacy status.
type PlaylistStatusPrivacyStatusEnum string

const (
	PlaylistStatusPrivacyStatusEnumPublic   PlaylistStatusPrivacyStatusEnum = "public"
	PlaylistStatusPrivacyStatusEnumUnlisted PlaylistStatusPrivacyStatusEnum = "unlisted"
	PlaylistStatusPrivacyStatusEnumPrivate  PlaylistStatusPrivacyStatusEnum = "private"
)

func (e *PlaylistStatusPrivacyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "public":
		fallthrough
	case "unlisted":
		fallthrough
	case "private":
		*e = PlaylistStatusPrivacyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlaylistStatusPrivacyStatusEnum: %s", s)
	}
}

type PlaylistStatus struct {
	// The playlist's privacy status.
	PrivacyStatus *PlaylistStatusPrivacyStatusEnum `json:"privacyStatus,omitempty"`
}
