"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import consent as shared_consent
from ..shared import daterange as shared_daterange
from ..shared import keymaterial as shared_keymaterial
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HIPHIRequestHiRequest:
    
    consent: shared_consent.Consent = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consent') }})  
    data_push_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataPushUrl') }})  
    date_range: shared_daterange.DateRange = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateRange') }})  
    key_material: shared_keymaterial.KeyMaterial = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keyMaterial') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HIPHIRequest:
    
    hi_request: HIPHIRequestHiRequest = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hiRequest') }})  
    request_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestId') }})  
    timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ"""  
    transaction_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionId') }})  
    