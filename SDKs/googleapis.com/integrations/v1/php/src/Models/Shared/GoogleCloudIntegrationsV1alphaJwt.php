<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudIntegrationsV1alphaJwt - Represents JSON web token(JWT), which is a compact, URL-safe means of representing claims to be transferred between two parties, enabling the claims to be digitally signed or integrity protected.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudIntegrationsV1alphaJwt
{
    /**
     * The token calculated by the header, payload and signature.
     * 
     * @var ?string $jwt
     */
	#[\JMS\Serializer\Annotation\SerializedName('jwt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $jwt = null;
    
    /**
     * Identifies which algorithm is used to generate the signature.
     * 
     * @var ?string $jwtHeader
     */
	#[\JMS\Serializer\Annotation\SerializedName('jwtHeader')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $jwtHeader = null;
    
    /**
     * Contains a set of claims. The JWT specification defines seven Registered Claim Names which are the standard fields commonly included in tokens. Custom claims are usually also included, depending on the purpose of the token.
     * 
     * @var ?string $jwtPayload
     */
	#[\JMS\Serializer\Annotation\SerializedName('jwtPayload')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $jwtPayload = null;
    
    /**
     * User's pre-shared secret to sign the token.
     * 
     * @var ?string $secret
     */
	#[\JMS\Serializer\Annotation\SerializedName('secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secret = null;
    
	public function __construct()
	{
		$this->jwt = null;
		$this->jwtHeader = null;
		$this->jwtPayload = null;
		$this->secret = null;
	}
}
