// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListInsightsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

type ListInsightsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListInsightsRequestBodyStatusFilter -  A filter used by <code>ListInsights</code> to specify which insights to return.
type ListInsightsRequestBodyStatusFilter struct {
	Any     *shared.ListInsightsAnyStatusFilter     `json:"Any,omitempty"`
	Closed  *shared.ListInsightsClosedStatusFilter  `json:"Closed,omitempty"`
	Ongoing *shared.ListInsightsOngoingStatusFilter `json:"Ongoing,omitempty"`
}

type ListInsightsRequestBody struct {
	// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
	NextToken *string `json:"NextToken,omitempty"`
	//  A filter used by <code>ListInsights</code> to specify which insights to return.
	StatusFilter ListInsightsRequestBodyStatusFilter `json:"StatusFilter"`
}

type ListInsightsRequest struct {
	QueryParams ListInsightsQueryParams
	Headers     ListInsightsHeaders
	Request     ListInsightsRequestBody `request:"mediaType=application/json"`
}

type ListInsightsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListInsightsResponse *shared.ListInsightsResponse
	StatusCode           int
	RawResponse          *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
