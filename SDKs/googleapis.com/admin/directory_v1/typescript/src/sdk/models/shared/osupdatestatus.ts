/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The update state of an OS update.
 */
export enum OsUpdateStatusStateEnum {
  UpdateStateUnspecified = "updateStateUnspecified",
  UpdateStateNotStarted = "updateStateNotStarted",
  UpdateStateDownloadInProgress = "updateStateDownloadInProgress",
  UpdateStateNeedReboot = "updateStateNeedReboot",
}

/**
 * Contains information regarding the current OS update status.
 */
export class OsUpdateStatus extends SpeakeasyBase {
  /**
   * Date and time of the last reboot.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rebootTime" })
  rebootTime?: string;

  /**
   * The update state of an OS update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: OsUpdateStatusStateEnum;

  /**
   * New required platform version from the pending updated kiosk app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetKioskAppVersion" })
  targetKioskAppVersion?: string;

  /**
   * New platform version of the OS image being downloaded and applied. It is only set when update status is UPDATE_STATUS_DOWNLOAD_IN_PROGRESS or UPDATE_STATUS_NEED_REBOOT. Note this could be a dummy "0.0.0.0" for UPDATE_STATUS_NEED_REBOOT for some edge cases, e.g. update engine is restarted without a reboot.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetOsVersion" })
  targetOsVersion?: string;

  /**
   * Date and time of the last update check.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateCheckTime" })
  updateCheckTime?: string;

  /**
   * Date and time of the last successful OS update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
