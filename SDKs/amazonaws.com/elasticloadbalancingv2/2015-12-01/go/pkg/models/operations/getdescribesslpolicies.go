// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeSSLPoliciesActionEnum
type GETDescribeSSLPoliciesActionEnum string

const (
	GETDescribeSSLPoliciesActionEnumDescribeSslPolicies GETDescribeSSLPoliciesActionEnum = "DescribeSSLPolicies"
)

func (e *GETDescribeSSLPoliciesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeSSLPolicies":
		*e = GETDescribeSSLPoliciesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeSSLPoliciesActionEnum: %s", s)
	}
}

// GETDescribeSSLPoliciesLoadBalancerTypeEnum -  The type of load balancer. The default lists the SSL policies for all load balancers.
type GETDescribeSSLPoliciesLoadBalancerTypeEnum string

const (
	GETDescribeSSLPoliciesLoadBalancerTypeEnumApplication GETDescribeSSLPoliciesLoadBalancerTypeEnum = "application"
	GETDescribeSSLPoliciesLoadBalancerTypeEnumNetwork     GETDescribeSSLPoliciesLoadBalancerTypeEnum = "network"
	GETDescribeSSLPoliciesLoadBalancerTypeEnumGateway     GETDescribeSSLPoliciesLoadBalancerTypeEnum = "gateway"
)

func (e *GETDescribeSSLPoliciesLoadBalancerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "application":
		fallthrough
	case "network":
		fallthrough
	case "gateway":
		*e = GETDescribeSSLPoliciesLoadBalancerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeSSLPoliciesLoadBalancerTypeEnum: %s", s)
	}
}

// GETDescribeSSLPoliciesVersionEnum
type GETDescribeSSLPoliciesVersionEnum string

const (
	GETDescribeSSLPoliciesVersionEnumTwoThousandAndFifteen1201 GETDescribeSSLPoliciesVersionEnum = "2015-12-01"
)

func (e *GETDescribeSSLPoliciesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-12-01":
		*e = GETDescribeSSLPoliciesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeSSLPoliciesVersionEnum: %s", s)
	}
}

type GETDescribeSSLPoliciesRequest struct {
	Action GETDescribeSSLPoliciesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	//  The type of load balancer. The default lists the SSL policies for all load balancers.
	LoadBalancerType *GETDescribeSSLPoliciesLoadBalancerTypeEnum `queryParam:"style=form,explode=true,name=LoadBalancerType"`
	// The marker for the next set of results. (You received this marker from a previous call.)
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// The names of the policies.
	Names []string `queryParam:"style=form,explode=true,name=Names"`
	// The maximum number of results to return with this call.
	PageSize          *int64                            `queryParam:"style=form,explode=true,name=PageSize"`
	Version           GETDescribeSSLPoliciesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeSSLPoliciesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
