/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SearchContentMatch } from "./searchcontentmatch";
import { SearchSegment } from "./searchsegment";
import { Expose, Type } from "class-transformer";

export class SearchCodeSearchResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "content_match_count" })
  contentMatchCount?: number;

  @SpeakeasyMetadata({ elemType: SearchContentMatch })
  @Expose({ name: "content_matches" })
  @Type(() => SearchContentMatch)
  contentMatches?: SearchContentMatch[];

  /**
   * A file object, representing a file at a commit in a repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "file" })
  file?: Record<string, any>;

  @SpeakeasyMetadata({ elemType: SearchSegment })
  @Expose({ name: "path_matches" })
  @Type(() => SearchSegment)
  pathMatches?: SearchSegment[];

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
