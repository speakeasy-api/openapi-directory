// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FiveHundredAndThreeSERVICEUNAVAILABLECodeEnum string

const (
	FiveHundredAndThreeSERVICEUNAVAILABLECodeEnumServiceUnavailable FiveHundredAndThreeSERVICEUNAVAILABLECodeEnum = "SERVICE_UNAVAILABLE"
)

func (e FiveHundredAndThreeSERVICEUNAVAILABLECodeEnum) ToPointer() *FiveHundredAndThreeSERVICEUNAVAILABLECodeEnum {
	return &e
}

func (e *FiveHundredAndThreeSERVICEUNAVAILABLECodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SERVICE_UNAVAILABLE":
		*e = FiveHundredAndThreeSERVICEUNAVAILABLECodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FiveHundredAndThreeSERVICEUNAVAILABLECodeEnum: %v", v)
	}
}

type FiveHundredAndThreeSERVICEUNAVAILABLEMessageEnum string

const (
	FiveHundredAndThreeSERVICEUNAVAILABLEMessageEnumInternalServerError FiveHundredAndThreeSERVICEUNAVAILABLEMessageEnum = "Internal server error"
)

func (e FiveHundredAndThreeSERVICEUNAVAILABLEMessageEnum) ToPointer() *FiveHundredAndThreeSERVICEUNAVAILABLEMessageEnum {
	return &e
}

func (e *FiveHundredAndThreeSERVICEUNAVAILABLEMessageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Internal server error":
		*e = FiveHundredAndThreeSERVICEUNAVAILABLEMessageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FiveHundredAndThreeSERVICEUNAVAILABLEMessageEnum: %v", v)
	}
}

// FiveHundredAndThreeSERVICEUNAVAILABLE - Service Unavailable
type FiveHundredAndThreeSERVICEUNAVAILABLE struct {
	Code    *FiveHundredAndThreeSERVICEUNAVAILABLECodeEnum    `json:"code,omitempty"`
	Message *FiveHundredAndThreeSERVICEUNAVAILABLEMessageEnum `json:"message,omitempty"`
	// Timestamp of the request
	// e.g.: `2019-09-17T03:20:45.737043Z`
	//
	Timestamp *string `json:"timestamp,omitempty"`
	// Tracking identifier for this error response
	TrackingID *string `json:"trackingId,omitempty"`
}
