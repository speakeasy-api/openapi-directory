/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class HarvestActivitySummary {
    /**
     * The time the harvest activity was created. Time in ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339).
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public HarvestActivitySummary withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The start time of the harvest activity. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTime")
    public OffsetDateTime endTime;

    public HarvestActivitySummary withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Array of field ids associated the harvest activity.
     */
    @JsonProperty("fieldIds")
    public String[] fieldIds;

    public HarvestActivitySummary withFieldIds(String[] fieldIds) {
        this.fieldIds = fieldIds;
        return this;
    }
    
    /**
     * The id of a harvest activity.
     */
    @JsonProperty("id")
    public String id;

    public HarvestActivitySummary withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The size in bytes of the raw harvest activity file.
     */
    @JsonProperty("length")
    public Long length;

    public HarvestActivitySummary withLength(Long length) {
        this.length = length;
        return this;
    }
    
    /**
     * The start time of the harvest activity. Time in ISO 8601 format with UTC timezone, 3 fractional seconds (https://tools.ietf.org/html/rfc3339).
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;

    public HarvestActivitySummary withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * The time the harvest activity was last updated. Time in ISO 8601 format with UTC timezone, 3 fractional seconds. (https://tools.ietf.org/html/rfc3339).
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;

    public HarvestActivitySummary withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public HarvestActivitySummary(@JsonProperty("createdAt") OffsetDateTime createdAt, @JsonProperty("endTime") OffsetDateTime endTime, @JsonProperty("fieldIds") String[] fieldIds, @JsonProperty("id") String id, @JsonProperty("length") Long length, @JsonProperty("startTime") OffsetDateTime startTime, @JsonProperty("updatedAt") OffsetDateTime updatedAt) {
        this.createdAt = createdAt;
        this.endTime = endTime;
        this.fieldIds = fieldIds;
        this.id = id;
        this.length = length;
        this.startTime = startTime;
        this.updatedAt = updatedAt;
  }
}
