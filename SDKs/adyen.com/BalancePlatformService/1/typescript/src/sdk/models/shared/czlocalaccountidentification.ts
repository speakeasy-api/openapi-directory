/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * **czLocal**
 */
export enum CZLocalAccountIdentificationTypeEnum {
  CzLocal = "czLocal",
}

/**
 * Bank account identification.
 */
export class CZLocalAccountIdentification extends SpeakeasyBase {
  /**
   * The 2- to 16-digit bank account number (Číslo účtu) in the following format:
   *
   * @remarks
   *
   * - The optional prefix (předčíslí).
   *
   * - The required second part (základní část) which must be at least two non-zero digits.
   *
   * Examples:
   *
   * - **19-123457** (with prefix)
   *
   * - **123457** (without prefix)
   *
   * - **000019-0000123457** (with prefix, normalized)
   *
   * - **000000-0000123457** (without prefix, normalized)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountNumber" })
  accountNumber: string;

  /**
   * The 4-digit bank code (Kód banky), without separators or whitespace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bankCode" })
  bankCode: string;

  /**
   * **czLocal**
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: CZLocalAccountIdentificationTypeEnum;
}
