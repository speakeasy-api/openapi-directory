/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Pagination {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Long count;
    public Pagination withCount(Long count) {
        this.count = count;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentUrl")
    public String currentUrl;
    public Pagination withCurrentUrl(String currentUrl) {
        this.currentUrl = currentUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max")
    public Long max;
    public Pagination withMax(Long max) {
        this.max = max;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextUrl")
    public String nextUrl;
    public Pagination withNextUrl(String nextUrl) {
        this.nextUrl = nextUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Long offset;
    public Pagination withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageNum")
    public Long pageNum;
    public Pagination withPageNum(Long pageNum) {
        this.pageNum = pageNum;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previousUrl")
    public String previousUrl;
    public Pagination withPreviousUrl(String previousUrl) {
        this.previousUrl = previousUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sort")
    public String sort;
    public Pagination withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Long total;
    public Pagination withTotal(Long total) {
        this.total = total;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalPages")
    public Long totalPages;
    public Pagination withTotalPages(Long totalPages) {
        this.totalPages = totalPages;
        return this;
    }
    
}
