<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Item
{
    /**
     * Additional information about the item.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AdditionalInfo $additionalInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AdditionalInfo')]
    public AdditionalInfo $additionalInfo;
    
    /**
     * Retrieves information about orders item's customizations.
     * 
     * @var array<mixed> $assemblies
     */
	#[\JMS\Serializer\Annotation\SerializedName('assemblies')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $assemblies;
    
    /**
     * List of attachments details.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\ItemAttachmentOfferings> $attachmentOfferings
     */
	#[\JMS\Serializer\Annotation\SerializedName('attachmentOfferings')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ItemAttachmentOfferings>')]
    public array $attachmentOfferings;
    
    /**
     * Array containing information on attachments.
     * 
     * @var array<string> $attachments
     */
	#[\JMS\Serializer\Annotation\SerializedName('attachments')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $attachments;
    
    /**
     * Information on services sold along with the item's SKU. For example, a gift package.
     * 
     * @var array<string> $bundleItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('bundleItems')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $bundleItems;
    
    /**
     * Call center operator responsible for the order.
     * 
     * @var string $callCenterOperator
     */
	#[\JMS\Serializer\Annotation\SerializedName('callCenterOperator')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $callCenterOperator;
    
    /**
     * Commission value registered for the seller.
     * 
     * @var int $commission
     */
	#[\JMS\Serializer\Annotation\SerializedName('commission')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $commission;
    
    /**
     * Item's components.
     * 
     * @var array<string> $components
     */
	#[\JMS\Serializer\Annotation\SerializedName('components')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $components;
    
    /**
     * Item's cost price.
     * 
     * @var int $costPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('costPrice')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $costPrice;
    
    /**
     * URL slug of the item.
     * 
     * @var string $detailUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('detailUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $detailUrl;
    
    /**
     * EAN of the SKU.
     * 
     * @var string $ean
     */
	#[\JMS\Serializer\Annotation\SerializedName('ean')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ean;
    
    /**
     * Value of the freight commission.
     * 
     * @var int $freightCommission
     */
	#[\JMS\Serializer\Annotation\SerializedName('freightCommission')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $freightCommission;
    
    /**
     * Item's SKU ID, which is a unique numerical identifier.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Item's SKU image URL.
     * 
     * @var string $imageUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('imageUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $imageUrl;
    
    /**
     * This field is `true` when the item is a gift in order context and `false` when it is not.
     * 
     * @var bool $isGift
     */
	#[\JMS\Serializer\Annotation\SerializedName('isGift')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isGift;
    
    /**
     * Information about attachments, if it applies.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ItemAttachment $itemAttachment
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemAttachment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ItemAttachment')]
    public ItemAttachment $itemAttachment;
    
    /**
     * Item's list price.
     * 
     * @var int $listPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('listPrice')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $listPrice;
    
    /**
     * Reservation ID.
     * 
     * @var string $lockId
     */
	#[\JMS\Serializer\Annotation\SerializedName('lockId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $lockId;
    
    /**
     * Item's manual price.
     * 
     * @var string $manualPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('manualPrice')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $manualPrice;
    
    /**
     * Item's measurement unit.
     * 
     * @var string $measurementUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('measurementUnit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $measurementUnit;
    
    /**
     * Item's name.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Item's offerings, which are services related to the item. For example, guarantee or installation.
     * 
     * @var array<string> $offerings
     */
	#[\JMS\Serializer\Annotation\SerializedName('offerings')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $offerings;
    
    /**
     * Information about params.
     * 
     * @var array<string> $params
     */
	#[\JMS\Serializer\Annotation\SerializedName('params')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $params;
    
    /**
     * Parent assembly binding.
     * 
     * @var string $parentAssemblyBinding
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentAssemblyBinding')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $parentAssemblyBinding;
    
    /**
     * Parent item index.
     * 
     * @var string $parentItemIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentItemIndex')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $parentItemIndex;
    
    /**
     * Item's pre sale date.
     * 
     * @var string $preSaleDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('preSaleDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $preSaleDate;
    
    /**
     * Item's price.
     * 
     * @var int $price
     */
	#[\JMS\Serializer\Annotation\SerializedName('price')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $price;
    
    /**
     * Item's price information.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ItemPriceDefinitions $priceDefinitions
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceDefinitions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ItemPriceDefinitions')]
    public ItemPriceDefinitions $priceDefinitions;
    
    /**
     * List of objects with item's price modifiers.
     * 
     * @var array<string> $priceTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceTags')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $priceTags;
    
    /**
     * Date until when the price is going to be valid if there is a promotion.
     * 
     * @var string $priceValidUntil
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceValidUntil')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $priceValidUntil;
    
    /**
     * ID of the Product associated with the item.
     * 
     * @var string $productId
     */
	#[\JMS\Serializer\Annotation\SerializedName('productId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $productId;
    
    /**
     * Quantity of items.
     * 
     * @var int $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $quantity;
    
    /**
     * Product referencial code associated with the item.
     * 
     * @var string $refId
     */
	#[\JMS\Serializer\Annotation\SerializedName('refId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $refId;
    
    /**
     * Item's reward value.
     * 
     * @var int $rewardValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('rewardValue')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $rewardValue;
    
    /**
     * Seller related to the order.
     * 
     * @var string $seller
     */
	#[\JMS\Serializer\Annotation\SerializedName('seller')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $seller;
    
    /**
     * SKU ID from the seller perspective.
     * 
     * @var string $sellerSku
     */
	#[\JMS\Serializer\Annotation\SerializedName('sellerSku')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sellerSku;
    
    /**
     * Item's selling price.
     * 
     * @var int $sellingPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('sellingPrice')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $sellingPrice;
    
    /**
     * This field identifies the order in the `handling` status in the workflow, and it was used for VTEX internal control.
     * 
     * @var string $serialNumbers
     */
	#[\JMS\Serializer\Annotation\SerializedName('serialNumbers')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serialNumbers;
    
    /**
     * Item's shipping price.
     * 
     * @var string $shippingPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('shippingPrice')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shippingPrice;
    
    /**
     * Item's tax.
     * 
     * @var int $tax
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $tax;
    
    /**
     *  Item's tax code.
     * 
     * @var string $taxCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $taxCode;
    
    /**
     * Unique ID is an alphanumeric sequence that identifies an SKU in a given order.
     * 
     * @var string $uniqueId
     */
	#[\JMS\Serializer\Annotation\SerializedName('uniqueId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uniqueId;
    
    /**
     * Item's unit multiplier.
     * 
     * @var int $unitMultiplier
     */
	#[\JMS\Serializer\Annotation\SerializedName('unitMultiplier')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $unitMultiplier;
    
	public function __construct()
	{
		$this->additionalInfo = new \OpenAPI\OpenAPI\Models\Shared\AdditionalInfo();
		$this->assemblies = [];
		$this->attachmentOfferings = [];
		$this->attachments = [];
		$this->bundleItems = [];
		$this->callCenterOperator = "";
		$this->commission = 0;
		$this->components = [];
		$this->costPrice = 0;
		$this->detailUrl = "";
		$this->ean = "";
		$this->freightCommission = 0;
		$this->id = "";
		$this->imageUrl = "";
		$this->isGift = false;
		$this->itemAttachment = new \OpenAPI\OpenAPI\Models\Shared\ItemAttachment();
		$this->listPrice = 0;
		$this->lockId = "";
		$this->manualPrice = "";
		$this->measurementUnit = "";
		$this->name = "";
		$this->offerings = [];
		$this->params = [];
		$this->parentAssemblyBinding = "";
		$this->parentItemIndex = "";
		$this->preSaleDate = "";
		$this->price = 0;
		$this->priceDefinitions = new \OpenAPI\OpenAPI\Models\Shared\ItemPriceDefinitions();
		$this->priceTags = [];
		$this->priceValidUntil = "";
		$this->productId = "";
		$this->quantity = 0;
		$this->refId = "";
		$this->rewardValue = 0;
		$this->seller = "";
		$this->sellerSku = "";
		$this->sellingPrice = 0;
		$this->serialNumbers = "";
		$this->shippingPrice = "";
		$this->tax = 0;
		$this->taxCode = "";
		$this->uniqueId = "";
		$this->unitMultiplier = 0;
	}
}
