/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssociationEdgeTypeEnum } from "./associationedgetypeenum";
import { UserContext } from "./usercontext";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Lists a summary of the properties of an association. An association is an entity that links other lineage or experiment entities. An example would be an association between a training job and a model.
 */
export class AssociationSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AssociationType" })
  associationType?: AssociationEdgeTypeEnum;

  /**
   * Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBy" })
  @Type(() => UserContext)
  createdBy?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DestinationArn" })
  destinationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DestinationName" })
  destinationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DestinationType" })
  destinationType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceArn" })
  sourceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceName" })
  sourceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceType" })
  sourceType?: string;
}
