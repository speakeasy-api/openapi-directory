// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AutoMergeMergeMethodEnum - The merge method to use.
type AutoMergeMergeMethodEnum string

const (
	AutoMergeMergeMethodEnumMerge  AutoMergeMergeMethodEnum = "merge"
	AutoMergeMergeMethodEnumSquash AutoMergeMergeMethodEnum = "squash"
	AutoMergeMergeMethodEnumRebase AutoMergeMergeMethodEnum = "rebase"
)

func (e AutoMergeMergeMethodEnum) ToPointer() *AutoMergeMergeMethodEnum {
	return &e
}

func (e *AutoMergeMergeMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "merge":
		fallthrough
	case "squash":
		fallthrough
	case "rebase":
		*e = AutoMergeMergeMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AutoMergeMergeMethodEnum: %v", v)
	}
}

// AutoMerge - The status of auto merging a pull request.
type AutoMerge struct {
	// Commit message for the merge commit.
	CommitMessage string `json:"commit_message"`
	// Title for the merge commit message.
	CommitTitle string `json:"commit_title"`
	// A GitHub user.
	EnabledBy SimpleUser `json:"enabled_by"`
	// The merge method to use.
	MergeMethod AutoMergeMergeMethodEnum `json:"merge_method"`
}
