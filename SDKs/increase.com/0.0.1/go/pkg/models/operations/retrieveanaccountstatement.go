// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveAnAccountStatementRequest struct {
	AccountStatementID string `pathParam:"style=simple,explode=false,name=account_statement_id"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON13StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveAnAccountStatementDefaultApplicationJSON13StatusEnum = 429
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON13StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON13TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveAnAccountStatementDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON13TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON13 struct {
	Detail     string                                                       `json:"detail"`
	RetryAfter *int64                                                       `json:"retry_after,omitempty"`
	Status     RetrieveAnAccountStatementDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                       `json:"title"`
	Type       RetrieveAnAccountStatementDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON12StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveAnAccountStatementDefaultApplicationJSON12StatusEnum = 403
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON12StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON12TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveAnAccountStatementDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON12TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON12 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON11StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveAnAccountStatementDefaultApplicationJSON11StatusEnum = 404
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON11StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON11TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveAnAccountStatementDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON11TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON11 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON10StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON10StatusEnumFourHundred RetrieveAnAccountStatementDefaultApplicationJSON10StatusEnum = 400
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON10StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON10TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveAnAccountStatementDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON10TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON10 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON9StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON9StatusEnumFourHundred RetrieveAnAccountStatementDefaultApplicationJSON9StatusEnum = 400
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON9StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON9TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveAnAccountStatementDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON9TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                    `json:"errors"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON8StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveAnAccountStatementDefaultApplicationJSON8StatusEnum = 409
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON8StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON8TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveAnAccountStatementDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON8TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON8 struct {
	Detail string                                                      `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON7StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveAnAccountStatementDefaultApplicationJSON7StatusEnum = 401
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON7StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON7TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveAnAccountStatementDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON7TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON7 struct {
	Detail string                                                      `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON6StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON6StatusEnumFiveHundred RetrieveAnAccountStatementDefaultApplicationJSON6StatusEnum = 500
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON6StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON6TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON6TypeEnumInternalServerError RetrieveAnAccountStatementDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON6TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON6 struct {
	Detail string                                                      `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON5StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveAnAccountStatementDefaultApplicationJSON5StatusEnum = 403
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON5StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON5TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveAnAccountStatementDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON5TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON5 struct {
	Detail string                                                      `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON4StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveAnAccountStatementDefaultApplicationJSON4StatusEnum = 422
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON4StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON4TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveAnAccountStatementDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON4TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON4 struct {
	Detail string                                                      `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON3StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveAnAccountStatementDefaultApplicationJSON3StatusEnum = 409
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON3StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON3TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveAnAccountStatementDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON3TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON3 struct {
	Detail string                                                      `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON2StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveAnAccountStatementDefaultApplicationJSON2StatusEnum = 403
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON2StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON2TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveAnAccountStatementDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON2TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON2 struct {
	Detail string                                                      `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementDefaultApplicationJSON1StatusEnum int64

const (
	RetrieveAnAccountStatementDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveAnAccountStatementDefaultApplicationJSON1StatusEnum = 404
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON1StatusEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveAnAccountStatementDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON1TypeEnum string

const (
	RetrieveAnAccountStatementDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveAnAccountStatementDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e RetrieveAnAccountStatementDefaultApplicationJSON1TypeEnum) ToPointer() *RetrieveAnAccountStatementDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *RetrieveAnAccountStatementDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = RetrieveAnAccountStatementDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountStatementDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type RetrieveAnAccountStatementDefaultApplicationJSON1 struct {
	Detail string                                                      `json:"detail"`
	Status RetrieveAnAccountStatementDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RetrieveAnAccountStatementDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveAnAccountStatementResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account Statement
	AccountStatement *shared.AccountStatement
	// Error
	Error interface{}
}
