<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateAddonRequestBody
{
    /**
     * The name of the add-on. The name must match one of the names that <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a> returns.
     * 
     * @var string $addonName
     */
	#[\JMS\Serializer\Annotation\SerializedName('addonName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $addonName;
    
    /**
     * The version of the add-on. The version must match one of the versions returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a>.
     * 
     * @var ?string $addonVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('addonVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addonVersion = null;
    
    /**
     * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
     * 
     * @var ?string $clientRequestToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientRequestToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientRequestToken = null;
    
    /**
     * The set of configuration values for the add-on that's created. The values that you provide are validated against the schema in <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonConfiguration.html"> <code>DescribeAddonConfiguration</code> </a>.
     * 
     * @var ?string $configurationValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('configurationValues')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $configurationValues = null;
    
    /**
     * <p>How to resolve field value conflicts for an Amazon EKS add-on. Conflicts are handled based on the value you choose:</p> <ul> <li> <p> <b>None</b> – If the self-managed version of the add-on is installed on your cluster, Amazon EKS doesn't change the value. Creation of the add-on might fail.</p> </li> <li> <p> <b>Overwrite</b> – If the self-managed version of the add-on is installed on your cluster and the Amazon EKS default value is different than the existing value, Amazon EKS changes the value to the Amazon EKS default value.</p> </li> <li> <p> <b>Preserve</b> – Not supported. You can set this value when updating an add-on though. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html">UpdateAddon</a>.</p> </li> </ul> <p>If you don't currently have the self-managed version of the add-on installed on your cluster, the Amazon EKS add-on is installed. Amazon EKS sets all values to default values, regardless of the option that you specify.</p>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateAddonRequestBodyResolveConflictsEnum $resolveConflicts
     */
	#[\JMS\Serializer\Annotation\SerializedName('resolveConflicts')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateAddonRequestBodyResolveConflictsEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateAddonRequestBodyResolveConflictsEnum $resolveConflicts = null;
    
    /**
     * <p>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</p> <note> <p>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</p> </note>
     * 
     * @var ?string $serviceAccountRoleArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceAccountRoleArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceAccountRoleArn = null;
    
    /**
     * The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->addonName = "";
		$this->addonVersion = null;
		$this->clientRequestToken = null;
		$this->configurationValues = null;
		$this->resolveConflicts = null;
		$this->serviceAccountRoleArn = null;
		$this->tags = null;
	}
}
