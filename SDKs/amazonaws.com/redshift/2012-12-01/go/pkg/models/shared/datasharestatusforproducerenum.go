// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataShareStatusForProducerEnum string

const (
	DataShareStatusForProducerEnumActive               DataShareStatusForProducerEnum = "ACTIVE"
	DataShareStatusForProducerEnumAuthorized           DataShareStatusForProducerEnum = "AUTHORIZED"
	DataShareStatusForProducerEnumPendingAuthorization DataShareStatusForProducerEnum = "PENDING_AUTHORIZATION"
	DataShareStatusForProducerEnumDeauthorized         DataShareStatusForProducerEnum = "DEAUTHORIZED"
	DataShareStatusForProducerEnumRejected             DataShareStatusForProducerEnum = "REJECTED"
)

func (e *DataShareStatusForProducerEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVE":
		fallthrough
	case "AUTHORIZED":
		fallthrough
	case "PENDING_AUTHORIZATION":
		fallthrough
	case "DEAUTHORIZED":
		fallthrough
	case "REJECTED":
		*e = DataShareStatusForProducerEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataShareStatusForProducerEnum: %s", s)
	}
}
