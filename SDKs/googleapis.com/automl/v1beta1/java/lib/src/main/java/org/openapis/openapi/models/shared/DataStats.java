/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DataStats - The data statistics of a series of values that share the same DataType.
 */
public class DataStats {
    /**
     * The data statistics of a series of ARRAY values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arrayStats")
    public ArrayStats arrayStats;
    public DataStats withArrayStats(ArrayStats arrayStats) {
        this.arrayStats = arrayStats;
        return this;
    }
    
    /**
     * The data statistics of a series of CATEGORY values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryStats")
    public CategoryStats categoryStats;
    public DataStats withCategoryStats(CategoryStats categoryStats) {
        this.categoryStats = categoryStats;
        return this;
    }
    
    /**
     * The number of distinct values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distinctValueCount")
    public String distinctValueCount;
    public DataStats withDistinctValueCount(String distinctValueCount) {
        this.distinctValueCount = distinctValueCount;
        return this;
    }
    
    /**
     * The data statistics of a series of FLOAT64 values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("float64Stats")
    public Float64Stats float64Stats;
    public DataStats withFloat64Stats(Float64Stats float64Stats) {
        this.float64Stats = float64Stats;
        return this;
    }
    
    /**
     * The number of values that are null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nullValueCount")
    public String nullValueCount;
    public DataStats withNullValueCount(String nullValueCount) {
        this.nullValueCount = nullValueCount;
        return this;
    }
    
    /**
     * The data statistics of a series of STRING values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stringStats")
    public StringStats stringStats;
    public DataStats withStringStats(StringStats stringStats) {
        this.stringStats = stringStats;
        return this;
    }
    
    /**
     * The data statistics of a series of STRUCT values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("structStats")
    public StructStats structStats;
    public DataStats withStructStats(StructStats structStats) {
        this.structStats = structStats;
        return this;
    }
    
    /**
     * The data statistics of a series of TIMESTAMP values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestampStats")
    public TimestampStats timestampStats;
    public DataStats withTimestampStats(TimestampStats timestampStats) {
        this.timestampStats = timestampStats;
        return this;
    }
    
    /**
     * The number of values that are valid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validValueCount")
    public String validValueCount;
    public DataStats withValidValueCount(String validValueCount) {
        this.validValueCount = validValueCount;
        return this;
    }
    
}
