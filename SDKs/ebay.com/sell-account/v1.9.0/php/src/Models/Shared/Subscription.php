<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Subscription - This type is used by the <strong>getSubscription</strong> response container, which defines the subscription types and levels for the seller account.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Subscription
{
    /**
     * The marketplace with which the subscription is associated. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>
     * 
     * @var ?string $marketplaceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('marketplaceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $marketplaceId = null;
    
    /**
     * The subscription ID.
     * 
     * @var ?string $subscriptionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscriptionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriptionId = null;
    
    /**
     * The subscription level. For example, subscription levels for an eBay store include Starter, Basic, Featured, Anchor, and Enterprise levels.
     * 
     * @var ?string $subscriptionLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscriptionLevel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriptionLevel = null;
    
    /**
     * The kind of entity with which the subscription is associated, such as an eBay store. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:SubscriptionTypeEnum'>eBay API documentation</a>
     * 
     * @var ?string $subscriptionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscriptionType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriptionType = null;
    
    /**
     * A type used to specify a period of time using a specified time-measurement unit. Payment, return, and fulfillment business policies all use this type to specify time windows.<br/><br/>Whenever a container that uses this type is used in a request, both of these fields are required. Similarly, whenever a container that uses this type is returned in a response, both of these fields are always returned.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TimeDuration $term
     */
	#[\JMS\Serializer\Annotation\SerializedName('term')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TimeDuration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TimeDuration $term = null;
    
	public function __construct()
	{
		$this->marketplaceId = null;
		$this->subscriptionId = null;
		$this->subscriptionLevel = null;
		$this->subscriptionType = null;
		$this->term = null;
	}
}
