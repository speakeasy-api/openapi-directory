"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import include_enum as shared_include_enum
from ..shared import segmentgroup as shared_segmentgroup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SegmentGroupList:
    r"""Specifies the settings that define the relationships between segment groups for a segment."""
    
    groups: Optional[list[shared_segmentgroup.SegmentGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Groups'), 'exclude': lambda f: f is None }})  
    include: Optional[shared_include_enum.IncludeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Include'), 'exclude': lambda f: f is None }})  
    