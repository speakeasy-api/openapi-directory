"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IdentitytoolkitRelyingpartyVerifyPasswordRequest:
    r"""Request to verify the password."""
    
    captcha_challenge: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('captchaChallenge'), 'exclude': lambda f: f is None }})
    r"""The captcha challenge."""  
    captcha_response: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('captchaResponse'), 'exclude': lambda f: f is None }})
    r"""Response to the captcha."""  
    delegated_project_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delegatedProjectNumber'), 'exclude': lambda f: f is None }})
    r"""GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""The email of the user."""  
    id_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idToken'), 'exclude': lambda f: f is None }})
    r"""The GITKit token of the authenticated user."""  
    instance_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instanceId'), 'exclude': lambda f: f is None }})
    r"""Instance id token of the app."""  
    password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password'), 'exclude': lambda f: f is None }})
    r"""The password inputed by the user."""  
    pending_id_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pendingIdToken'), 'exclude': lambda f: f is None }})
    r"""The GITKit token for the non-trusted IDP, which is to be confirmed by the user."""  
    return_secure_token: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnSecureToken'), 'exclude': lambda f: f is None }})
    r"""Whether return sts id token and refresh token instead of gitkit token."""  
    tenant_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tenantId'), 'exclude': lambda f: f is None }})
    r"""For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from."""  
    tenant_project_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tenantProjectNumber'), 'exclude': lambda f: f is None }})
    r"""Tenant project number to be used for idp discovery."""  
    