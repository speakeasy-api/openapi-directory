<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Notification - A notification delivered by the API.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Notification
{
    /**
     * The collection that generated the notification.
     * 
     * @var ?string $collection
     */
	#[\JMS\Serializer\Annotation\SerializedName('collection')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $collection = null;
    
    /**
     * The ID of the item that generated the notification.
     * 
     * @var ?string $itemId
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $itemId = null;
    
    /**
     * The type of operation that generated the notification.
     * 
     * @var ?string $operation
     */
	#[\JMS\Serializer\Annotation\SerializedName('operation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operation = null;
    
    /**
     * A list of actions taken by the user that triggered the notification.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\UserAction> $userActions
     */
	#[\JMS\Serializer\Annotation\SerializedName('userActions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\UserAction>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $userActions = null;
    
    /**
     * The user token provided by the service when it subscribed for notifications.
     * 
     * @var ?string $userToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('userToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userToken = null;
    
    /**
     * The secret verify token provided by the service when it subscribed for notifications.
     * 
     * @var ?string $verifyToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('verifyToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $verifyToken = null;
    
	public function __construct()
	{
		$this->collection = null;
		$this->itemId = null;
		$this->operation = null;
		$this->userActions = null;
		$this->userToken = null;
		$this->verifyToken = null;
	}
}
