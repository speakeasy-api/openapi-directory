/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StreamLocation - Describes a stream of data, either as input to be processed or as output of a streaming Dataflow job.
 */
public class StreamLocation {
    /**
     * Identifies the location of a custom souce.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customSourceLocation")
    public CustomSourceLocation customSourceLocation;
    public StreamLocation withCustomSourceLocation(CustomSourceLocation customSourceLocation) {
        this.customSourceLocation = customSourceLocation;
        return this;
    }
    
    /**
     * Identifies a pubsub location to use for transferring data into or out of a streaming Dataflow job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pubsubLocation")
    public PubsubLocation pubsubLocation;
    public StreamLocation withPubsubLocation(PubsubLocation pubsubLocation) {
        this.pubsubLocation = pubsubLocation;
        return this;
    }
    
    /**
     * Identifies the location of a streaming side input.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sideInputLocation")
    public StreamingSideInputLocation sideInputLocation;
    public StreamLocation withSideInputLocation(StreamingSideInputLocation sideInputLocation) {
        this.sideInputLocation = sideInputLocation;
        return this;
    }
    
    /**
     * Identifies the location of a streaming computation stage, for stage-to-stage communication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamingStageLocation")
    public StreamingStageLocation streamingStageLocation;
    public StreamLocation withStreamingStageLocation(StreamingStageLocation streamingStageLocation) {
        this.streamingStageLocation = streamingStageLocation;
        return this;
    }
    
}
