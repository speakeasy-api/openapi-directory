/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WindowsBasedSli - A WindowsBasedSli defines good_service as the count of time windows for which the provided service was of good quality. Criteria for determining if service was good are embedded in the window_criterion.
 */
public class WindowsBasedSli {
    /**
     * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries with ValueType = BOOL. The window is good if any true values appear in the window.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("goodBadMetricFilter")
    public String goodBadMetricFilter;
    public WindowsBasedSli withGoodBadMetricFilter(String goodBadMetricFilter) {
        this.goodBadMetricFilter = goodBadMetricFilter;
        return this;
    }
    
    /**
     * A PerformanceThreshold is used when each window is good when that window has a sufficiently high performance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("goodTotalRatioThreshold")
    public PerformanceThreshold goodTotalRatioThreshold;
    public WindowsBasedSli withGoodTotalRatioThreshold(PerformanceThreshold goodTotalRatioThreshold) {
        this.goodTotalRatioThreshold = goodTotalRatioThreshold;
        return this;
    }
    
    /**
     * A MetricRange is used when each window is good when the value x of a single TimeSeries satisfies range.min &lt;= x &lt;= range.max. The provided TimeSeries must have ValueType = INT64 or ValueType = DOUBLE and MetricKind = GAUGE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricMeanInRange")
    public MetricRange metricMeanInRange;
    public WindowsBasedSli withMetricMeanInRange(MetricRange metricMeanInRange) {
        this.metricMeanInRange = metricMeanInRange;
        return this;
    }
    
    /**
     * A MetricRange is used when each window is good when the value x of a single TimeSeries satisfies range.min &lt;= x &lt;= range.max. The provided TimeSeries must have ValueType = INT64 or ValueType = DOUBLE and MetricKind = GAUGE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricSumInRange")
    public MetricRange metricSumInRange;
    public WindowsBasedSli withMetricSumInRange(MetricRange metricSumInRange) {
        this.metricSumInRange = metricSumInRange;
        return this;
    }
    
    /**
     * Duration over which window quality is evaluated. Must be an integer fraction of a day and at least 60s.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("windowPeriod")
    public String windowPeriod;
    public WindowsBasedSli withWindowPeriod(String windowPeriod) {
        this.windowPeriod = windowPeriod;
        return this;
    }
    
}
