"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeleteIpamPoolResult = exports.DeleteIpamPoolResultIpamPool = exports.DeleteIpamPoolResultIpamPoolTags = exports.DeleteIpamPoolResultIpamPoolStateEnum = exports.DeleteIpamPoolResultIpamPoolPublicIpSourceEnum = exports.DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum = exports.DeleteIpamPoolResultIpamPoolAwsServiceEnum = exports.DeleteIpamPoolResultIpamPoolAllocationResourceTags = exports.DeleteIpamPoolResultIpamPoolAddressFamilyEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The address family of the pool.
 */
var DeleteIpamPoolResultIpamPoolAddressFamilyEnum;
(function (DeleteIpamPoolResultIpamPoolAddressFamilyEnum) {
    DeleteIpamPoolResultIpamPoolAddressFamilyEnum["Ipv4"] = "ipv4";
    DeleteIpamPoolResultIpamPoolAddressFamilyEnum["Ipv6"] = "ipv6";
})(DeleteIpamPoolResultIpamPoolAddressFamilyEnum = exports.DeleteIpamPoolResultIpamPoolAddressFamilyEnum || (exports.DeleteIpamPoolResultIpamPoolAddressFamilyEnum = {}));
/**
 * The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.
 */
var DeleteIpamPoolResultIpamPoolAllocationResourceTags = /** @class */ (function (_super) {
    __extends(DeleteIpamPoolResultIpamPoolAllocationResourceTags, _super);
    function DeleteIpamPoolResultIpamPoolAllocationResourceTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPoolAllocationResourceTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPoolAllocationResourceTags.prototype, "value", void 0);
    return DeleteIpamPoolResultIpamPoolAllocationResourceTags;
}(utils_1.SpeakeasyBase));
exports.DeleteIpamPoolResultIpamPoolAllocationResourceTags = DeleteIpamPoolResultIpamPoolAllocationResourceTags;
/**
 * Limits which service in Amazon Web Services that the pool can be used in. "ec2", for example, allows users to use space for Elastic IP addresses and VPCs.
 */
var DeleteIpamPoolResultIpamPoolAwsServiceEnum;
(function (DeleteIpamPoolResultIpamPoolAwsServiceEnum) {
    DeleteIpamPoolResultIpamPoolAwsServiceEnum["Ec2"] = "ec2";
})(DeleteIpamPoolResultIpamPoolAwsServiceEnum = exports.DeleteIpamPoolResultIpamPoolAwsServiceEnum || (exports.DeleteIpamPoolResultIpamPoolAwsServiceEnum = {}));
/**
 * In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.
 */
var DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum;
(function (DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum) {
    DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum["Public"] = "public";
    DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum["Private"] = "private";
})(DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum = exports.DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum || (exports.DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum = {}));
/**
 * The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Default is <code>BYOIP</code>. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/intro-create-ipv6-pools.html">Create IPv6 pools</a> in the <i>Amazon VPC IPAM User Guide</i>. By default, you can add only one Amazon-provided IPv6 CIDR block to a top-level IPv6 pool. For information on increasing the default limit, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/quotas-ipam.html"> Quotas for your IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>.
 */
var DeleteIpamPoolResultIpamPoolPublicIpSourceEnum;
(function (DeleteIpamPoolResultIpamPoolPublicIpSourceEnum) {
    DeleteIpamPoolResultIpamPoolPublicIpSourceEnum["Amazon"] = "amazon";
    DeleteIpamPoolResultIpamPoolPublicIpSourceEnum["Byoip"] = "byoip";
})(DeleteIpamPoolResultIpamPoolPublicIpSourceEnum = exports.DeleteIpamPoolResultIpamPoolPublicIpSourceEnum || (exports.DeleteIpamPoolResultIpamPoolPublicIpSourceEnum = {}));
/**
 * The state of the IPAM pool.
 */
var DeleteIpamPoolResultIpamPoolStateEnum;
(function (DeleteIpamPoolResultIpamPoolStateEnum) {
    DeleteIpamPoolResultIpamPoolStateEnum["CreateInProgress"] = "create-in-progress";
    DeleteIpamPoolResultIpamPoolStateEnum["CreateComplete"] = "create-complete";
    DeleteIpamPoolResultIpamPoolStateEnum["CreateFailed"] = "create-failed";
    DeleteIpamPoolResultIpamPoolStateEnum["ModifyInProgress"] = "modify-in-progress";
    DeleteIpamPoolResultIpamPoolStateEnum["ModifyComplete"] = "modify-complete";
    DeleteIpamPoolResultIpamPoolStateEnum["ModifyFailed"] = "modify-failed";
    DeleteIpamPoolResultIpamPoolStateEnum["DeleteInProgress"] = "delete-in-progress";
    DeleteIpamPoolResultIpamPoolStateEnum["DeleteComplete"] = "delete-complete";
    DeleteIpamPoolResultIpamPoolStateEnum["DeleteFailed"] = "delete-failed";
    DeleteIpamPoolResultIpamPoolStateEnum["IsolateInProgress"] = "isolate-in-progress";
    DeleteIpamPoolResultIpamPoolStateEnum["IsolateComplete"] = "isolate-complete";
    DeleteIpamPoolResultIpamPoolStateEnum["RestoreInProgress"] = "restore-in-progress";
})(DeleteIpamPoolResultIpamPoolStateEnum = exports.DeleteIpamPoolResultIpamPoolStateEnum || (exports.DeleteIpamPoolResultIpamPoolStateEnum = {}));
/**
 * Describes a tag.
 */
var DeleteIpamPoolResultIpamPoolTags = /** @class */ (function (_super) {
    __extends(DeleteIpamPoolResultIpamPoolTags, _super);
    function DeleteIpamPoolResultIpamPoolTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPoolTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPoolTags.prototype, "value", void 0);
    return DeleteIpamPoolResultIpamPoolTags;
}(utils_1.SpeakeasyBase));
exports.DeleteIpamPoolResultIpamPoolTags = DeleteIpamPoolResultIpamPoolTags;
/**
 * Information about the results of the deletion.
 */
var DeleteIpamPoolResultIpamPool = /** @class */ (function (_super) {
    __extends(DeleteIpamPoolResultIpamPool, _super);
    function DeleteIpamPoolResultIpamPool() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "addressFamily", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DeleteIpamPoolResultIpamPool.prototype, "allocationDefaultNetmaskLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DeleteIpamPoolResultIpamPool.prototype, "allocationMaxNetmaskLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DeleteIpamPoolResultIpamPool.prototype, "allocationMinNetmaskLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DeleteIpamPoolResultIpamPoolAllocationResourceTags,
        }),
        __metadata("design:type", Array)
    ], DeleteIpamPoolResultIpamPool.prototype, "allocationResourceTags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DeleteIpamPoolResultIpamPool.prototype, "autoImport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "awsService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "ipamArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "ipamPoolArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "ipamPoolId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "ipamRegion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "ipamScopeArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "ipamScopeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "locale", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DeleteIpamPoolResultIpamPool.prototype, "poolDepth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "publicIpSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DeleteIpamPoolResultIpamPool.prototype, "publiclyAdvertisable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "sourceIpamPoolId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DeleteIpamPoolResultIpamPool.prototype, "stateMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DeleteIpamPoolResultIpamPoolTags }),
        __metadata("design:type", Array)
    ], DeleteIpamPoolResultIpamPool.prototype, "tags", void 0);
    return DeleteIpamPoolResultIpamPool;
}(utils_1.SpeakeasyBase));
exports.DeleteIpamPoolResultIpamPool = DeleteIpamPoolResultIpamPool;
/**
 * Success
 */
var DeleteIpamPoolResult = /** @class */ (function (_super) {
    __extends(DeleteIpamPoolResult, _super);
    function DeleteIpamPoolResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DeleteIpamPoolResultIpamPool)
    ], DeleteIpamPoolResult.prototype, "ipamPool", void 0);
    return DeleteIpamPoolResult;
}(utils_1.SpeakeasyBase));
exports.DeleteIpamPoolResult = DeleteIpamPoolResult;
