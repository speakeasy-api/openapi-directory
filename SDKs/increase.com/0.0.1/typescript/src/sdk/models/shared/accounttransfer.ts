/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.
 */
export class AccountTransferTransferApproval extends SpeakeasyBase {
  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approved_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  approvedAt: Date;
}

/**
 * If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.
 */
export class AccountTransferTransferCancellation extends SpeakeasyBase {
  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canceled_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  canceledAt: Date;
}

/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
 */
export enum AccountTransferCurrencyEnum {
  Cad = "CAD",
  Chf = "CHF",
  Eur = "EUR",
  Gbp = "GBP",
  Jpy = "JPY",
  Usd = "USD",
}

/**
 * The transfer's network.
 */
export enum AccountTransferNetworkEnum {
  Account = "account",
}

/**
 * The lifecycle status of the transfer.
 */
export enum AccountTransferStatusEnum {
  PendingSubmission = "pending_submission",
  PendingApproval = "pending_approval",
  Canceled = "canceled",
  RequiresAttention = "requires_attention",
  FlaggedByOperator = "flagged_by_operator",
  Complete = "complete",
}

/**
 * A constant representing the object's type. For this resource it will always be `account_transfer`.
 */
export enum AccountTransferTypeEnum {
  AccountTransfer = "account_transfer",
}

/**
 * Account transfers move funds between your own accounts at Increase.
 */
export class AccountTransfer extends SpeakeasyBase {
  /**
   * The Account to which the transfer belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId: string;

  /**
   * The transfer amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approval" })
  @Type(() => AccountTransferTransferApproval)
  approval: AccountTransferTransferApproval;

  /**
   * If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancellation" })
  @Type(() => AccountTransferTransferCancellation)
  cancellation: AccountTransferTransferCancellation;

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: AccountTransferCurrencyEnum;

  /**
   * The description that will show on the transactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * The destination account's identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination_account_id" })
  destinationAccountId: string;

  /**
   * The ID for the transaction receiving the transfer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination_transaction_id" })
  destinationTransactionId: string;

  /**
   * The account transfer's identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The transfer's network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network: AccountTransferNetworkEnum;

  /**
   * The lifecycle status of the transfer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: AccountTransferStatusEnum;

  /**
   * If the transfer was created from a template, this will be the template's ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template_id" })
  templateId: string;

  /**
   * The ID for the transaction funding the transfer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId: string;

  /**
   * A constant representing the object's type. For this resource it will always be `account_transfer`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AccountTransferTypeEnum;
}
