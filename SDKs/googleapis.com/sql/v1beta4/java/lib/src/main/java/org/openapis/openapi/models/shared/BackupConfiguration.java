/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BackupConfiguration - Database instance backup configuration.
 */
public class BackupConfiguration {
    /**
     * We currently only support backup retention by specifying the number of backups we will retain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupRetentionSettings")
    public BackupRetentionSettings backupRetentionSettings;

    public BackupConfiguration withBackupRetentionSettings(BackupRetentionSettings backupRetentionSettings) {
        this.backupRetentionSettings = backupRetentionSettings;
        return this;
    }
    
    /**
     * (MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("binaryLogEnabled")
    public Boolean binaryLogEnabled;

    public BackupConfiguration withBinaryLogEnabled(Boolean binaryLogEnabled) {
        this.binaryLogEnabled = binaryLogEnabled;
        return this;
    }
    
    /**
     * Whether this configuration is enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;

    public BackupConfiguration withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * This is always `sql#backupConfiguration`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public BackupConfiguration withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Location of the backup
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;

    public BackupConfiguration withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * (Postgres only) Whether point in time recovery is enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pointInTimeRecoveryEnabled")
    public Boolean pointInTimeRecoveryEnabled;

    public BackupConfiguration withPointInTimeRecoveryEnabled(Boolean pointInTimeRecoveryEnabled) {
        this.pointInTimeRecoveryEnabled = pointInTimeRecoveryEnabled;
        return this;
    }
    
    /**
     * Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicationLogArchivingEnabled")
    public Boolean replicationLogArchivingEnabled;

    public BackupConfiguration withReplicationLogArchivingEnabled(Boolean replicationLogArchivingEnabled) {
        this.replicationLogArchivingEnabled = replicationLogArchivingEnabled;
        return this;
    }
    
    /**
     * Start time for the daily backup configuration in UTC timezone in the 24 hour format - `HH:MM`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public BackupConfiguration withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * The number of days of transaction logs we retain for point in time restore, from 1-7.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionLogRetentionDays")
    public Integer transactionLogRetentionDays;

    public BackupConfiguration withTransactionLogRetentionDays(Integer transactionLogRetentionDays) {
        this.transactionLogRetentionDays = transactionLogRetentionDays;
        return this;
    }
    
    public BackupConfiguration(){}
}
