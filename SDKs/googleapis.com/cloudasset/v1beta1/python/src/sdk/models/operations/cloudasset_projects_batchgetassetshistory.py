"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import _xgafv_enum as shared__xgafv_enum
from ..shared import alt_enum as shared_alt_enum
from ..shared import batchgetassetshistoryresponse as shared_batchgetassetshistoryresponse
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class CloudassetProjectsBatchGetAssetsHistorySecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    oauth2c: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class CloudassetProjectsBatchGetAssetsHistoryContentTypeEnum(str, Enum):
    r"""Optional. The content type."""
    CONTENT_TYPE_UNSPECIFIED = 'CONTENT_TYPE_UNSPECIFIED'
    RESOURCE = 'RESOURCE'
    IAM_POLICY = 'IAM_POLICY'


@dataclasses.dataclass
class CloudassetProjectsBatchGetAssetsHistoryRequest:
    
    parent: str = dataclasses.field(metadata={'path_param': { 'field_name': 'parent', 'style': 'simple', 'explode': False }})
    r"""Required. The relative name of the root asset. It can only be an organization number (such as \\"organizations/123\\"), a project ID (such as \\"projects/my-project-id\\")\\", or a project number (such as \\"projects/12345\\")."""  
    dollar_xgafv: Optional[shared__xgafv_enum.XgafvEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': '$.xgafv', 'style': 'form', 'explode': True }})
    r"""V1 error format."""  
    access_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'access_token', 'style': 'form', 'explode': True }})
    r"""OAuth access token."""  
    alt: Optional[shared_alt_enum.AltEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'alt', 'style': 'form', 'explode': True }})
    r"""Data format for response."""  
    asset_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'assetNames', 'style': 'form', 'explode': True }})
    r"""A list of the full names of the assets. For example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info. The request becomes a no-op if the asset name list is empty, and the max size of the asset name list is 100 in one request."""  
    callback: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'callback', 'style': 'form', 'explode': True }})
    r"""JSONP"""  
    content_type: Optional[CloudassetProjectsBatchGetAssetsHistoryContentTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contentType', 'style': 'form', 'explode': True }})
    r"""Optional. The content type."""  
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': True }})
    r"""Selector specifying which fields to include in a partial response."""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."""  
    oauth_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'oauth_token', 'style': 'form', 'explode': True }})
    r"""OAuth 2.0 token for the current user."""  
    pretty_print: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'prettyPrint', 'style': 'form', 'explode': True }})
    r"""Returns response with indentations and line breaks."""  
    quota_user: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'quotaUser', 'style': 'form', 'explode': True }})
    r"""Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."""  
    read_time_window_end_time: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'readTimeWindow.endTime', 'style': 'form', 'explode': True }})
    r"""End time of the time window (inclusive). If not specified, the current timestamp is used instead."""  
    read_time_window_start_time: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'readTimeWindow.startTime', 'style': 'form', 'explode': True }})
    r"""Start time of the time window (exclusive)."""  
    upload_protocol: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'upload_protocol', 'style': 'form', 'explode': True }})
    r"""Upload protocol for media (e.g. \\"raw\\", \\"multipart\\")."""  
    upload_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'uploadType', 'style': 'form', 'explode': True }})
    r"""Legacy upload protocol for media (e.g. \\"media\\", \\"multipart\\")."""  
    

@dataclasses.dataclass
class CloudassetProjectsBatchGetAssetsHistoryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    batch_get_assets_history_response: Optional[shared_batchgetassetshistoryresponse.BatchGetAssetsHistoryResponse] = dataclasses.field(default=None)
    r"""Successful response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    