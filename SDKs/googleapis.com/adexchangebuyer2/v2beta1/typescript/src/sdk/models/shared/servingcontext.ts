/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppContext } from "./appcontext";
import { AuctionContext } from "./auctioncontext";
import { LocationContext } from "./locationcontext";
import { PlatformContext } from "./platformcontext";
import { SecurityContext } from "./securitycontext";
import { Expose, Type } from "class-transformer";

/**
 * Matches all contexts.
 */
export enum ServingContextAllEnum {
  SimpleContext = "SIMPLE_CONTEXT",
}

/**
 * The serving context for this restriction.
 */
export class ServingContext extends SpeakeasyBase {
  /**
   * Matches all contexts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "all" })
  all?: ServingContextAllEnum;

  /**
   * Output only. The app type the restriction applies to for mobile device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appType" })
  @Type(() => AppContext)
  appType?: AppContext;

  /**
   * Output only. The auction type the restriction applies to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auctionType" })
  @Type(() => AuctionContext)
  auctionType?: AuctionContext;

  /**
   * Output only. The Geo criteria the restriction applies to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => LocationContext)
  location?: LocationContext;

  /**
   * Output only. The type of platform the restriction applies to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  @Type(() => PlatformContext)
  platform?: PlatformContext;

  /**
   * Output only. A security context.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "securityType" })
  @Type(() => SecurityContext)
  securityType?: SecurityContext;
}
