/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorReason } from "./errorreason";
import { MetricInfo } from "./metricinfo";
import { QuotaPeriod } from "./quotaperiod";
import { Expose, Type } from "class-transformer";

/**
 * Information about a quota.
 */
export class ServiceQuota extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Adjustable" })
  adjustable?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorReason" })
  @Type(() => ErrorReason)
  errorReason?: ErrorReason;

  @SpeakeasyMetadata()
  @Expose({ name: "GlobalQuota" })
  globalQuota?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Period" })
  @Type(() => QuotaPeriod)
  period?: QuotaPeriod;

  @SpeakeasyMetadata()
  @Expose({ name: "QuotaArn" })
  quotaArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "QuotaCode" })
  quotaCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "QuotaName" })
  quotaName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceCode" })
  serviceCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceName" })
  serviceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Unit" })
  unit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UsageMetric" })
  @Type(() => MetricInfo)
  usageMetric?: MetricInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value?: number;
}
