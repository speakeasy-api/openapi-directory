<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SystemParameter - Define a parameter's name and location. The parameter may be passed as either an HTTP header or a URL query parameter, and if both are passed the behavior is implementation-dependent.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SystemParameter
{
    /**
     * Define the HTTP header name to use for the parameter. It is case insensitive.
     * 
     * @var ?string $httpHeader
     */
	#[\JMS\Serializer\Annotation\SerializedName('httpHeader')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $httpHeader = null;
    
    /**
     * Define the name of the parameter, such as "api_key" . It is case sensitive.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Define the URL query parameter name to use for the parameter. It is case sensitive.
     * 
     * @var ?string $urlQueryParameter
     */
	#[\JMS\Serializer\Annotation\SerializedName('urlQueryParameter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $urlQueryParameter = null;
    
	public function __construct()
	{
		$this->httpHeader = null;
		$this->name = null;
		$this->urlQueryParameter = null;
	}
}
