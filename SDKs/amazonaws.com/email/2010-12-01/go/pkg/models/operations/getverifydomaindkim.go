// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETVerifyDomainDkimActionEnum
type GETVerifyDomainDkimActionEnum string

const (
	GETVerifyDomainDkimActionEnumVerifyDomainDkim GETVerifyDomainDkimActionEnum = "VerifyDomainDkim"
)

func (e *GETVerifyDomainDkimActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VerifyDomainDkim":
		*e = GETVerifyDomainDkimActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETVerifyDomainDkimActionEnum: %s", s)
	}
}

// GETVerifyDomainDkimVersionEnum
type GETVerifyDomainDkimVersionEnum string

const (
	GETVerifyDomainDkimVersionEnumTwoThousandAndTen1201 GETVerifyDomainDkimVersionEnum = "2010-12-01"
)

func (e *GETVerifyDomainDkimVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETVerifyDomainDkimVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETVerifyDomainDkimVersionEnum: %s", s)
	}
}

type GETVerifyDomainDkimQueryParams struct {
	Action GETVerifyDomainDkimActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the domain to be verified for Easy DKIM signing.
	Domain  string                         `queryParam:"style=form,explode=true,name=Domain"`
	Version GETVerifyDomainDkimVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETVerifyDomainDkimHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETVerifyDomainDkimRequest struct {
	QueryParams GETVerifyDomainDkimQueryParams
	Headers     GETVerifyDomainDkimHeaders
}

type GETVerifyDomainDkimResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
