/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetMediaRequestBodyStartSelector - &lt;p&gt;Identifies the chunk on the Kinesis video stream where you want the &lt;code&gt;GetMedia&lt;/code&gt; API to start returning media data. You have the following options to identify the starting chunk: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Choose the latest (or oldest) chunk.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Identify a specific chunk. You can identify a specific chunk either by providing a fragment number or timestamp (server or producer). &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Each chunk's metadata includes a continuation token as a Matroska (MKV) tag (&lt;code&gt;AWS_KINESISVIDEO_CONTINUATION_TOKEN&lt;/code&gt;). If your previous &lt;code&gt;GetMedia&lt;/code&gt; request terminated, you can use this tag value in your next &lt;code&gt;GetMedia&lt;/code&gt; request. The API then starts returning chunks starting where the last API ended.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
public class GetMediaRequestBodyStartSelector {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AfterFragmentNumber")
    public String afterFragmentNumber;

    public GetMediaRequestBodyStartSelector withAfterFragmentNumber(String afterFragmentNumber) {
        this.afterFragmentNumber = afterFragmentNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ContinuationToken")
    public String continuationToken;

    public GetMediaRequestBodyStartSelector withContinuationToken(String continuationToken) {
        this.continuationToken = continuationToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StartSelectorType")
    public org.openapis.openapi.models.shared.StartSelectorTypeEnum startSelectorType;

    public GetMediaRequestBodyStartSelector withStartSelectorType(org.openapis.openapi.models.shared.StartSelectorTypeEnum startSelectorType) {
        this.startSelectorType = startSelectorType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTimestamp")
    public OffsetDateTime startTimestamp;

    public GetMediaRequestBodyStartSelector withStartTimestamp(OffsetDateTime startTimestamp) {
        this.startTimestamp = startTimestamp;
        return this;
    }
    
    public GetMediaRequestBodyStartSelector(){}
}
