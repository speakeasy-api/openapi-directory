"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CarrierAndIspTargetingOptionDetailsTypeEnum(str, Enum):
    r"""Output only. The type indicating if it's carrier or ISP."""
    CARRIER_AND_ISP_TYPE_UNSPECIFIED = 'CARRIER_AND_ISP_TYPE_UNSPECIFIED'
    CARRIER_AND_ISP_TYPE_ISP = 'CARRIER_AND_ISP_TYPE_ISP'
    CARRIER_AND_ISP_TYPE_CARRIER = 'CARRIER_AND_ISP_TYPE_CARRIER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CarrierAndIspTargetingOptionDetails:
    r"""Represents a targetable carrier or ISP. This will be populated in the carrier_and_isp_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`."""
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Output only. The display name of the carrier or ISP."""  
    type: Optional[CarrierAndIspTargetingOptionDetailsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Output only. The type indicating if it's carrier or ISP."""  
    