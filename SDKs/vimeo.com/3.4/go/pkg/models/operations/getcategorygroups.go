// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCategoryGroupsDirectionEnum - The sort direction of the results.
type GetCategoryGroupsDirectionEnum string

const (
	GetCategoryGroupsDirectionEnumAsc  GetCategoryGroupsDirectionEnum = "asc"
	GetCategoryGroupsDirectionEnumDesc GetCategoryGroupsDirectionEnum = "desc"
)

func (e *GetCategoryGroupsDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetCategoryGroupsDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCategoryGroupsDirectionEnum: %s", s)
	}
}

// GetCategoryGroupsSortEnum - The way to sort the results.
type GetCategoryGroupsSortEnum string

const (
	GetCategoryGroupsSortEnumAlphabetical GetCategoryGroupsSortEnum = "alphabetical"
	GetCategoryGroupsSortEnumDate         GetCategoryGroupsSortEnum = "date"
	GetCategoryGroupsSortEnumMembers      GetCategoryGroupsSortEnum = "members"
	GetCategoryGroupsSortEnumVideos       GetCategoryGroupsSortEnum = "videos"
)

func (e *GetCategoryGroupsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		fallthrough
	case "members":
		fallthrough
	case "videos":
		*e = GetCategoryGroupsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCategoryGroupsSortEnum: %s", s)
	}
}

type GetCategoryGroupsRequest struct {
	// The name of the category.
	Category string `pathParam:"style=simple,explode=false,name=category"`
	// The sort direction of the results.
	Direction *GetCategoryGroupsDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetCategoryGroupsSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetCategoryGroupsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The groups were returned.
	Groups []shared.Group
	// No such category exists.
	LegacyError *shared.LegacyError
}
