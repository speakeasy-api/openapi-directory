/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RouterStatusNatStatusNatRuleStatus - Status of a NAT Rule contained in this NAT.
 */
public class RouterStatusNatStatusNatRuleStatus {
    /**
     * A list of active IPs for NAT. Example: ["1.1.1.1", "179.12.26.133"].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeNatIps")
    public String[] activeNatIps;
    public RouterStatusNatStatusNatRuleStatus withActiveNatIps(String[] activeNatIps) {
        this.activeNatIps = activeNatIps;
        return this;
    }
    
    /**
     * A list of IPs for NAT that are in drain mode. Example: ["1.1.1.1", "179.12.26.133"].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("drainNatIps")
    public String[] drainNatIps;
    public RouterStatusNatStatusNatRuleStatus withDrainNatIps(String[] drainNatIps) {
        this.drainNatIps = drainNatIps;
        return this;
    }
    
    /**
     * The number of extra IPs to allocate. This will be greater than 0 only if the existing IPs in this NAT Rule are NOT enough to allow all configured VMs to use NAT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minExtraIpsNeeded")
    public Integer minExtraIpsNeeded;
    public RouterStatusNatStatusNatRuleStatus withMinExtraIpsNeeded(Integer minExtraIpsNeeded) {
        this.minExtraIpsNeeded = minExtraIpsNeeded;
        return this;
    }
    
    /**
     * Number of VM endpoints (i.e., NICs) that have NAT Mappings from this NAT Rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numVmEndpointsWithNatMappings")
    public Integer numVmEndpointsWithNatMappings;
    public RouterStatusNatStatusNatRuleStatus withNumVmEndpointsWithNatMappings(Integer numVmEndpointsWithNatMappings) {
        this.numVmEndpointsWithNatMappings = numVmEndpointsWithNatMappings;
        return this;
    }
    
    /**
     * Rule number of the rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleNumber")
    public Integer ruleNumber;
    public RouterStatusNatStatusNatRuleStatus withRuleNumber(Integer ruleNumber) {
        this.ruleNumber = ruleNumber;
        return this;
    }
    
}
