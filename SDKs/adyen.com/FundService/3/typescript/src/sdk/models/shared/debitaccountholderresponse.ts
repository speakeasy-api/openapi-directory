/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * OK - the request has succeeded.
 */
export class DebitAccountHolderResponse extends SpeakeasyBase {
  /**
   * The code of the account holder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountHolderCode" })
  accountHolderCode?: string;

  /**
   * The Adyen-generated unique alphanumeric identifier (UUID) of the account holder's bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bankAccountUUID" })
  bankAccountUUID?: string;

  /**
   * List of the `reference` values from the `split` array in the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantReferences" })
  merchantReferences?: string[];

  /**
   * The reference of a request. Can be used to uniquely identify the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pspReference" })
  pspReference?: string;

  /**
   * The result code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resultCode" })
  resultCode?: string;

  /**
   * Indicates whether the request is processed asynchronously. Depending on the request's platform settings, the following scenarios may be applied:
   *
   * @remarks
   * * **true**: The request is queued and will be executed when the providing service is available in the order in which the requests are received.
   * * **false**: The processing of the request is immediately attempted; it may result in an error if the providing service is unavailable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submittedAsync" })
  submittedAsync?: boolean;
}
