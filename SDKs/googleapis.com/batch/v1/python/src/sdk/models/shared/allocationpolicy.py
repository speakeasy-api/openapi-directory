"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import instancepolicyortemplate as shared_instancepolicyortemplate
from ..shared import locationpolicy as shared_locationpolicy
from ..shared import networkpolicy as shared_networkpolicy
from ..shared import serviceaccount as shared_serviceaccount
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AllocationPolicy:
    r"""A Job's resource allocation policy describes when, where, and how compute resources should be allocated for the Job."""
    
    instances: Optional[list[shared_instancepolicyortemplate.InstancePolicyOrTemplate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instances'), 'exclude': lambda f: f is None }})
    r"""Describe instances that can be created by this AllocationPolicy. Only instances[0] is supported now."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels applied to all VM instances and other resources created by AllocationPolicy. Labels could be user provided or system generated. You can assign up to 64 labels. [Google Compute Engine label restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) apply. Label names that start with \\"goog-\\" or \\"google-\\" are reserved."""  
    location: Optional[shared_locationpolicy.LocationPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})  
    network: Optional[shared_networkpolicy.NetworkPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('network'), 'exclude': lambda f: f is None }})
    r"""NetworkPolicy describes VM instance network configurations."""  
    service_account: Optional[shared_serviceaccount.ServiceAccount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceAccount'), 'exclude': lambda f: f is None }})
    r"""Carries information about a Google Cloud service account."""  
    