/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AuditLogEvent - An object representing a single event within an Asana domain.
 * 
 * Every audit log event is comprised of an `event_type`, `actor`, `resource`, and `context`. Some events will include additional metadata about the event under `details`. See our [currently supported list of events](/docs/supported-auditlogevents) for more details.
 */
public class AuditLogEvent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actor")
    public AuditLogEventActor actor;
    public AuditLogEvent withActor(AuditLogEventActor actor) {
        this.actor = actor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    public AuditLogEventContext context;
    public AuditLogEvent withContext(AuditLogEventContext context) {
        this.context = context;
        return this;
    }
    
    /**
     * The time the event was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public AuditLogEvent withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("details")
    public java.util.Map<String, Object> details;
    public AuditLogEvent withDetails(java.util.Map<String, Object> details) {
        this.details = details;
        return this;
    }
    
    /**
     * The category that this `event_type` belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event_category")
    public String eventCategory;
    public AuditLogEvent withEventCategory(String eventCategory) {
        this.eventCategory = eventCategory;
        return this;
    }
    
    /**
     * The type of the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event_type")
    public String eventType;
    public AuditLogEvent withEventType(String eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * Globally unique identifier of the `AuditLogEvent`, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;
    public AuditLogEvent withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    public AuditLogEventResource resource;
    public AuditLogEvent withResource(AuditLogEventResource resource) {
        this.resource = resource;
        return this;
    }
    
}
