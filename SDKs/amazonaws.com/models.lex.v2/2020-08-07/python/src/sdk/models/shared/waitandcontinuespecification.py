"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import responsespecification as shared_responsespecification
from ..shared import stillwaitingresponsespecification as shared_stillwaitingresponsespecification
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WaitAndContinueSpecification:
    r"""Specifies the prompts that Amazon Lex uses while a bot is waiting for customer input."""
    
    continue_response: shared_responsespecification.ResponseSpecification = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('continueResponse') }})  
    waiting_response: shared_responsespecification.ResponseSpecification = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('waitingResponse') }})  
    active: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})  
    still_waiting_response: Optional[shared_stillwaitingresponsespecification.StillWaitingResponseSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stillWaitingResponse'), 'exclude': lambda f: f is None }})  
    