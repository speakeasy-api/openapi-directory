// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OrganizationResourceAttributes struct {
	Name string `json:"name"`
}

type OrganizationResourceLinks struct {
	Self string `json:"self"`
}

type OrganizationResourceTypeEnum string

const (
	OrganizationResourceTypeEnumOrganization OrganizationResourceTypeEnum = "organization"
)

func (e OrganizationResourceTypeEnum) ToPointer() *OrganizationResourceTypeEnum {
	return &e
}

func (e *OrganizationResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "organization":
		*e = OrganizationResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationResourceTypeEnum: %v", v)
	}
}

type OrganizationResource struct {
	Attributes OrganizationResourceAttributes `json:"attributes"`
	ID         string                         `json:"id"`
	Links      *OrganizationResourceLinks     `json:"links,omitempty"`
	Type       OrganizationResourceTypeEnum   `json:"type"`
}
