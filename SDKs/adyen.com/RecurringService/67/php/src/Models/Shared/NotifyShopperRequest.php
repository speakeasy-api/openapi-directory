<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class NotifyShopperRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    public Amount $amount;
    
    /**
     * Date on which the subscription amount will be debited from the shopper. In YYYY-MM-DD format
     * 
     * @var ?string $billingDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('billingDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $billingDate = null;
    
    /**
     * Sequence of the debit. Depends on Frequency and Billing Attempts Rule.
     * 
     * @var ?string $billingSequenceNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('billingSequenceNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $billingSequenceNumber = null;
    
    /**
     * Reference of Pre-debit notification that is displayed to the shopper. Optional field. Maps to reference if missing
     * 
     * @var ?string $displayedReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayedReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayedReference = null;
    
    /**
     * The merchant account identifier with which you want to process the transaction.
     * 
     * @var string $merchantAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantAccount;
    
    /**
     * This is the `recurringDetailReference` returned in the response when you created the token.
     * 
     * @var ?string $recurringDetailReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('recurringDetailReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $recurringDetailReference = null;
    
    /**
     * Pre-debit notification reference sent by the merchant. This is a mandatory field
     * 
     * @var string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reference;
    
    /**
     * The ID that uniquely identifies the shopper.
     * 
     * 
     * This `shopperReference` must be the same as the `shopperReference` used in the initial payment.
     * 
     * @var string $shopperReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shopperReference;
    
    /**
     * This is the `recurringDetailReference` returned in the response when you created the token.
     * 
     * @var ?string $storedPaymentMethodId
     */
	#[\JMS\Serializer\Annotation\SerializedName('storedPaymentMethodId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $storedPaymentMethodId = null;
    
	public function __construct()
	{
		$this->amount = new \OpenAPI\OpenAPI\Models\Shared\Amount();
		$this->billingDate = null;
		$this->billingSequenceNumber = null;
		$this->displayedReference = null;
		$this->merchantAccount = "";
		$this->recurringDetailReference = null;
		$this->reference = "";
		$this->shopperReference = "";
		$this->storedPaymentMethodId = null;
	}
}
