// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaskStatusEnum string

const (
	TaskStatusEnumScheduled  TaskStatusEnum = "scheduled"
	TaskStatusEnumInProgress TaskStatusEnum = "inProgress"
	TaskStatusEnumCompleted  TaskStatusEnum = "completed"
	TaskStatusEnumFailed     TaskStatusEnum = "failed"
)

func (e TaskStatusEnum) ToPointer() *TaskStatusEnum {
	return &e
}

func (e *TaskStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "scheduled":
		fallthrough
	case "inProgress":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = TaskStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskStatusEnum: %v", v)
	}
}
