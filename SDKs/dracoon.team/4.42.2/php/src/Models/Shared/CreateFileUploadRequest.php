<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateFileUploadRequest - Request model for creating an upload channel
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateFileUploadRequest
{
    /**
     * Classification ID:
     * 
     * 
     * * `1` - public
     * 
     * * `2` - internal
     * 
     * * `3` - confidential
     * 
     * * `4` - strictly confidential
     * 
     * 
     * 
     * (default: classification from parent room)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateFileUploadRequestClassificationEnum $classification
     */
	#[\JMS\Serializer\Annotation\SerializedName('classification')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateFileUploadRequestClassificationEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFileUploadRequestClassificationEnum $classification = null;
    
    /**
     * &#128640; Since v4.15.0
     * 
     * 
     * Upload direct to S3
     * 
     * @var ?bool $directS3Upload
     */
	#[\JMS\Serializer\Annotation\SerializedName('directS3Upload')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $directS3Upload = null;
    
    /**
     * Expiration information
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ObjectExpiration $expiration
     */
	#[\JMS\Serializer\Annotation\SerializedName('expiration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ObjectExpiration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ObjectExpiration $expiration = null;
    
    /**
     * File name
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * User notes
     * 
     * 
     * Use empty string to remove.
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * Parent node ID (room or folder)
     * 
     * @var int $parentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $parentId;
    
    /**
     * File size in byte
     * 
     * @var ?int $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $size = null;
    
    /**
     * &#128640; Since v4.22.0
     * 
     * 
     * Time the node was created on external file system
     * 
     * (default: current server datetime in UTC format)
     * 
     * @var ?\DateTime $timestampCreation
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestampCreation')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $timestampCreation = null;
    
    /**
     * &#128640; Since v4.22.0
     * 
     * 
     * Time the content of a node was last modified on external file system
     * 
     * (default: current server datetime in UTC format)
     * 
     * @var ?\DateTime $timestampModification
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestampModification')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $timestampModification = null;
    
	public function __construct()
	{
		$this->classification = null;
		$this->directS3Upload = null;
		$this->expiration = null;
		$this->name = "";
		$this->notes = null;
		$this->parentId = 0;
		$this->size = null;
		$this->timestampCreation = null;
		$this->timestampModification = null;
	}
}
