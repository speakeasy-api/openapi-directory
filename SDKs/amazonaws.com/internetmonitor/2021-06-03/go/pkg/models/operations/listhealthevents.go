// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// ListHealthEventsEventStatusEnum - The status of a health event.
type ListHealthEventsEventStatusEnum string

const (
	ListHealthEventsEventStatusEnumActive   ListHealthEventsEventStatusEnum = "ACTIVE"
	ListHealthEventsEventStatusEnumResolved ListHealthEventsEventStatusEnum = "RESOLVED"
)

func (e ListHealthEventsEventStatusEnum) ToPointer() *ListHealthEventsEventStatusEnum {
	return &e
}

func (e *ListHealthEventsEventStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "RESOLVED":
		*e = ListHealthEventsEventStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListHealthEventsEventStatusEnum: %v", v)
	}
}

type ListHealthEventsRequest struct {
	// The time when a health event ended. If the health event is still ongoing, then the end time is not set.
	EndTime *time.Time `queryParam:"style=form,explode=true,name=EndTime"`
	// The status of a health event.
	EventStatus *ListHealthEventsEventStatusEnum `queryParam:"style=form,explode=true,name=EventStatus"`
	// The number of health event objects that you want to return with this call.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// The name of the monitor.
	MonitorName string `pathParam:"style=simple,explode=false,name=MonitorName"`
	// The token for the next set of results. You receive this token from a previous call.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// The time when a health event started.
	StartTime         *time.Time `queryParam:"style=form,explode=true,name=StartTime"`
	XAmzAlgorithm     *string    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListHealthEventsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListHealthEventsOutput *shared.ListHealthEventsOutput
	StatusCode             int
	RawResponse            *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
