// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteEntityRecognizerXAmzTargetEnum
type DeleteEntityRecognizerXAmzTargetEnum string

const (
	DeleteEntityRecognizerXAmzTargetEnumComprehend20171127DeleteEntityRecognizer DeleteEntityRecognizerXAmzTargetEnum = "Comprehend_20171127.DeleteEntityRecognizer"
)

func (e DeleteEntityRecognizerXAmzTargetEnum) ToPointer() *DeleteEntityRecognizerXAmzTargetEnum {
	return &e
}

func (e *DeleteEntityRecognizerXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Comprehend_20171127.DeleteEntityRecognizer":
		*e = DeleteEntityRecognizerXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteEntityRecognizerXAmzTargetEnum: %v", v)
	}
}

type DeleteEntityRecognizerRequest struct {
	DeleteEntityRecognizerRequest shared.DeleteEntityRecognizerRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    DeleteEntityRecognizerXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteEntityRecognizerResponse struct {
	ContentType string
	// Success
	DeleteEntityRecognizerResponse map[string]interface{}
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceUnavailableException
	ResourceUnavailableException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
