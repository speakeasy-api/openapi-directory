// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUpdateApplicationVersionActionEnum
type GETUpdateApplicationVersionActionEnum string

const (
	GETUpdateApplicationVersionActionEnumUpdateApplicationVersion GETUpdateApplicationVersionActionEnum = "UpdateApplicationVersion"
)

func (e *GETUpdateApplicationVersionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UpdateApplicationVersion":
		*e = GETUpdateApplicationVersionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateApplicationVersionActionEnum: %s", s)
	}
}

// GETUpdateApplicationVersionVersionEnum
type GETUpdateApplicationVersionVersionEnum string

const (
	GETUpdateApplicationVersionVersionEnumTwoThousandAndTen1201 GETUpdateApplicationVersionVersionEnum = "2010-12-01"
)

func (e *GETUpdateApplicationVersionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETUpdateApplicationVersionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateApplicationVersionVersionEnum: %s", s)
	}
}

type GETUpdateApplicationVersionRequest struct {
	Action GETUpdateApplicationVersionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of the application associated with this version.</p> <p> If no application is found with this name, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error.</p>
	ApplicationName string `queryParam:"style=form,explode=true,name=ApplicationName"`
	// A new description for this version.
	Description *string                                `queryParam:"style=form,explode=true,name=Description"`
	Version     GETUpdateApplicationVersionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// <p>The name of the version to update.</p> <p>If no application version is found with this label, <code>UpdateApplication</code> returns an <code>InvalidParameterValue</code> error. </p>
	VersionLabel      string  `queryParam:"style=form,explode=true,name=VersionLabel"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUpdateApplicationVersionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
