/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Report - Reports filed against users and/or statuses, to be taken action on by moderators.
 * https://docs.joinmastodon.org/entities/report/
 */
public class Report {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action_taken")
    public Boolean actionTaken;

    public Report withActionTaken(Boolean actionTaken) {
        this.actionTaken = actionTaken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("action_taken_at")
    public OffsetDateTime actionTakenAt;

    public Report withActionTakenAt(OffsetDateTime actionTakenAt) {
        this.actionTakenAt = actionTakenAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public ReportCategoryEnum category;

    public Report withCategory(ReportCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;

    public Report withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public Report withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("forwarded")
    public Boolean forwarded;

    public Report withForwarded(Boolean forwarded) {
        this.forwarded = forwarded;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Report withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rule_ids")
    public Long[] ruleIds;

    public Report withRuleIds(Long[] ruleIds) {
        this.ruleIds = ruleIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status_ids")
    public Long[] statusIds;

    public Report withStatusIds(Long[] statusIds) {
        this.statusIds = statusIds;
        return this;
    }
    
    /**
     * Represents a user of Mastodon and their associated profile.
     * https://docs.joinmastodon.org/entities/account/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_account")
    public Account targetAccount;

    public Report withTargetAccount(Account targetAccount) {
        this.targetAccount = targetAccount;
        return this;
    }
    
    public Report(){}
}
