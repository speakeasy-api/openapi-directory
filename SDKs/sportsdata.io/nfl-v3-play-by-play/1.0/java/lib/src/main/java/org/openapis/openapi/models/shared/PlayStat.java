/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlayStat {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssistedTackles")
    public Long assistedTackles;
    public PlayStat withAssistedTackles(Long assistedTackles) {
        this.assistedTackles = assistedTackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedKickReturnTouchdowns")
    public Long blockedKickReturnTouchdowns;
    public PlayStat withBlockedKickReturnTouchdowns(Long blockedKickReturnTouchdowns) {
        this.blockedKickReturnTouchdowns = blockedKickReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedKickReturnYards")
    public Long blockedKickReturnYards;
    public PlayStat withBlockedKickReturnYards(Long blockedKickReturnYards) {
        this.blockedKickReturnYards = blockedKickReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedKickReturns")
    public Long blockedKickReturns;
    public PlayStat withBlockedKickReturns(Long blockedKickReturns) {
        this.blockedKickReturns = blockedKickReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedKicks")
    public Long blockedKicks;
    public PlayStat withBlockedKicks(Long blockedKicks) {
        this.blockedKicks = blockedKicks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Created")
    public String created;
    public PlayStat withCreated(String created) {
        this.created = created;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Direction")
    public String direction;
    public PlayStat withDirection(String direction) {
        this.direction = direction;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExtraPointsAttempted")
    public Long extraPointsAttempted;
    public PlayStat withExtraPointsAttempted(Long extraPointsAttempted) {
        this.extraPointsAttempted = extraPointsAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExtraPointsHadBlocked")
    public Long extraPointsHadBlocked;
    public PlayStat withExtraPointsHadBlocked(Long extraPointsHadBlocked) {
        this.extraPointsHadBlocked = extraPointsHadBlocked;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExtraPointsMade")
    public Long extraPointsMade;
    public PlayStat withExtraPointsMade(Long extraPointsMade) {
        this.extraPointsMade = extraPointsMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalReturnTouchdowns")
    public Long fieldGoalReturnTouchdowns;
    public PlayStat withFieldGoalReturnTouchdowns(Long fieldGoalReturnTouchdowns) {
        this.fieldGoalReturnTouchdowns = fieldGoalReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalReturnYards")
    public Long fieldGoalReturnYards;
    public PlayStat withFieldGoalReturnYards(Long fieldGoalReturnYards) {
        this.fieldGoalReturnYards = fieldGoalReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalReturns")
    public Long fieldGoalReturns;
    public PlayStat withFieldGoalReturns(Long fieldGoalReturns) {
        this.fieldGoalReturns = fieldGoalReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsAttempted")
    public Long fieldGoalsAttempted;
    public PlayStat withFieldGoalsAttempted(Long fieldGoalsAttempted) {
        this.fieldGoalsAttempted = fieldGoalsAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsHadBlocked")
    public Long fieldGoalsHadBlocked;
    public PlayStat withFieldGoalsHadBlocked(Long fieldGoalsHadBlocked) {
        this.fieldGoalsHadBlocked = fieldGoalsHadBlocked;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsMade")
    public Long fieldGoalsMade;
    public PlayStat withFieldGoalsMade(Long fieldGoalsMade) {
        this.fieldGoalsMade = fieldGoalsMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsYards")
    public Long fieldGoalsYards;
    public PlayStat withFieldGoalsYards(Long fieldGoalsYards) {
        this.fieldGoalsYards = fieldGoalsYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumbleReturnTouchdowns")
    public Long fumbleReturnTouchdowns;
    public PlayStat withFumbleReturnTouchdowns(Long fumbleReturnTouchdowns) {
        this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumbleReturnYards")
    public Long fumbleReturnYards;
    public PlayStat withFumbleReturnYards(Long fumbleReturnYards) {
        this.fumbleReturnYards = fumbleReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Fumbles")
    public Long fumbles;
    public PlayStat withFumbles(Long fumbles) {
        this.fumbles = fumbles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumblesForced")
    public Long fumblesForced;
    public PlayStat withFumblesForced(Long fumblesForced) {
        this.fumblesForced = fumblesForced;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumblesLost")
    public Long fumblesLost;
    public PlayStat withFumblesLost(Long fumblesLost) {
        this.fumblesLost = fumblesLost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumblesRecovered")
    public Long fumblesRecovered;
    public PlayStat withFumblesRecovered(Long fumblesRecovered) {
        this.fumblesRecovered = fumblesRecovered;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeOrAway")
    public String homeOrAway;
    public PlayStat withHomeOrAway(String homeOrAway) {
        this.homeOrAway = homeOrAway;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InterceptionReturnTouchdowns")
    public Long interceptionReturnTouchdowns;
    public PlayStat withInterceptionReturnTouchdowns(Long interceptionReturnTouchdowns) {
        this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InterceptionReturnYards")
    public Long interceptionReturnYards;
    public PlayStat withInterceptionReturnYards(Long interceptionReturnYards) {
        this.interceptionReturnYards = interceptionReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Interceptions")
    public Long interceptions;
    public PlayStat withInterceptions(Long interceptions) {
        this.interceptions = interceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturnTouchdowns")
    public Long kickReturnTouchdowns;
    public PlayStat withKickReturnTouchdowns(Long kickReturnTouchdowns) {
        this.kickReturnTouchdowns = kickReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturnYards")
    public Long kickReturnYards;
    public PlayStat withKickReturnYards(Long kickReturnYards) {
        this.kickReturnYards = kickReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturns")
    public Long kickReturns;
    public PlayStat withKickReturns(Long kickReturns) {
        this.kickReturns = kickReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickoffTouchbacks")
    public Long kickoffTouchbacks;
    public PlayStat withKickoffTouchbacks(Long kickoffTouchbacks) {
        this.kickoffTouchbacks = kickoffTouchbacks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickoffYards")
    public Long kickoffYards;
    public PlayStat withKickoffYards(Long kickoffYards) {
        this.kickoffYards = kickoffYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Kickoffs")
    public Long kickoffs;
    public PlayStat withKickoffs(Long kickoffs) {
        this.kickoffs = kickoffs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public PlayStat withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Opponent")
    public String opponent;
    public PlayStat withOpponent(String opponent) {
        this.opponent = opponent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassesDefended")
    public Long passesDefended;
    public PlayStat withPassesDefended(Long passesDefended) {
        this.passesDefended = passesDefended;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingAttempts")
    public Long passingAttempts;
    public PlayStat withPassingAttempts(Long passingAttempts) {
        this.passingAttempts = passingAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingCompletions")
    public Long passingCompletions;
    public PlayStat withPassingCompletions(Long passingCompletions) {
        this.passingCompletions = passingCompletions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingInterceptions")
    public Long passingInterceptions;
    public PlayStat withPassingInterceptions(Long passingInterceptions) {
        this.passingInterceptions = passingInterceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingSackYards")
    public Long passingSackYards;
    public PlayStat withPassingSackYards(Long passingSackYards) {
        this.passingSackYards = passingSackYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingSacks")
    public Long passingSacks;
    public PlayStat withPassingSacks(Long passingSacks) {
        this.passingSacks = passingSacks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingTouchdowns")
    public Long passingTouchdowns;
    public PlayStat withPassingTouchdowns(Long passingTouchdowns) {
        this.passingTouchdowns = passingTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassingYards")
    public Long passingYards;
    public PlayStat withPassingYards(Long passingYards) {
        this.passingYards = passingYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Penalties")
    public Long penalties;
    public PlayStat withPenalties(Long penalties) {
        this.penalties = penalties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltyYards")
    public Long penaltyYards;
    public PlayStat withPenaltyYards(Long penaltyYards) {
        this.penaltyYards = penaltyYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayID")
    public Long playID;
    public PlayStat withPlayID(Long playID) {
        this.playID = playID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayStatID")
    public Long playStatID;
    public PlayStat withPlayStatID(Long playStatID) {
        this.playStatID = playStatID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerID")
    public Long playerID;
    public PlayStat withPlayerID(Long playerID) {
        this.playerID = playerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturnTouchdowns")
    public Long puntReturnTouchdowns;
    public PlayStat withPuntReturnTouchdowns(Long puntReturnTouchdowns) {
        this.puntReturnTouchdowns = puntReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturnYards")
    public Long puntReturnYards;
    public PlayStat withPuntReturnYards(Long puntReturnYards) {
        this.puntReturnYards = puntReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturns")
    public Long puntReturns;
    public PlayStat withPuntReturns(Long puntReturns) {
        this.puntReturns = puntReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntTouchbacks")
    public Long puntTouchbacks;
    public PlayStat withPuntTouchbacks(Long puntTouchbacks) {
        this.puntTouchbacks = puntTouchbacks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntYards")
    public Long puntYards;
    public PlayStat withPuntYards(Long puntYards) {
        this.puntYards = puntYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Punts")
    public Long punts;
    public PlayStat withPunts(Long punts) {
        this.punts = punts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntsHadBlocked")
    public Long puntsHadBlocked;
    public PlayStat withPuntsHadBlocked(Long puntsHadBlocked) {
        this.puntsHadBlocked = puntsHadBlocked;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceivingTargets")
    public Long receivingTargets;
    public PlayStat withReceivingTargets(Long receivingTargets) {
        this.receivingTargets = receivingTargets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceivingTouchdowns")
    public Long receivingTouchdowns;
    public PlayStat withReceivingTouchdowns(Long receivingTouchdowns) {
        this.receivingTouchdowns = receivingTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReceivingYards")
    public Long receivingYards;
    public PlayStat withReceivingYards(Long receivingYards) {
        this.receivingYards = receivingYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Receptions")
    public Long receptions;
    public PlayStat withReceptions(Long receptions) {
        this.receptions = receptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RushingAttempts")
    public Long rushingAttempts;
    public PlayStat withRushingAttempts(Long rushingAttempts) {
        this.rushingAttempts = rushingAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RushingTouchdowns")
    public Long rushingTouchdowns;
    public PlayStat withRushingTouchdowns(Long rushingTouchdowns) {
        this.rushingTouchdowns = rushingTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RushingYards")
    public Long rushingYards;
    public PlayStat withRushingYards(Long rushingYards) {
        this.rushingYards = rushingYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SackYards")
    public Double sackYards;
    public PlayStat withSackYards(Double sackYards) {
        this.sackYards = sackYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sacks")
    public Double sacks;
    public PlayStat withSacks(Double sacks) {
        this.sacks = sacks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Safeties")
    public Long safeties;
    public PlayStat withSafeties(Long safeties) {
        this.safeties = safeties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sequence")
    public Long sequence;
    public PlayStat withSequence(Long sequence) {
        this.sequence = sequence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SoloTackles")
    public Long soloTackles;
    public PlayStat withSoloTackles(Long soloTackles) {
        this.soloTackles = soloTackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TacklesForLoss")
    public Long tacklesForLoss;
    public PlayStat withTacklesForLoss(Long tacklesForLoss) {
        this.tacklesForLoss = tacklesForLoss;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;
    public PlayStat withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointConversionAttempts")
    public Long twoPointConversionAttempts;
    public PlayStat withTwoPointConversionAttempts(Long twoPointConversionAttempts) {
        this.twoPointConversionAttempts = twoPointConversionAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointConversionPasses")
    public Long twoPointConversionPasses;
    public PlayStat withTwoPointConversionPasses(Long twoPointConversionPasses) {
        this.twoPointConversionPasses = twoPointConversionPasses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointConversionReceptions")
    public Long twoPointConversionReceptions;
    public PlayStat withTwoPointConversionReceptions(Long twoPointConversionReceptions) {
        this.twoPointConversionReceptions = twoPointConversionReceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointConversionReturns")
    public Long twoPointConversionReturns;
    public PlayStat withTwoPointConversionReturns(Long twoPointConversionReturns) {
        this.twoPointConversionReturns = twoPointConversionReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointConversionRuns")
    public Long twoPointConversionRuns;
    public PlayStat withTwoPointConversionRuns(Long twoPointConversionRuns) {
        this.twoPointConversionRuns = twoPointConversionRuns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;
    public PlayStat withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
}
