/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The direction from StartPosition from which to retrieve message. Default: BACKWARD when no StartPosition is provided, FORWARD with StartPosition.
 */
export enum GetTranscriptRequestBodyScanDirectionEnum {
  Forward = "FORWARD",
  Backward = "BACKWARD",
}

/**
 * The sort order for the records. Default: DESCENDING.
 */
export enum GetTranscriptRequestBodySortOrderEnum {
  Descending = "DESCENDING",
  Ascending = "ASCENDING",
}

/**
 * A filtering option for where to start. For example, if you sent 100 messages, start with message 50.
 */
export class GetTranscriptRequestBodyStartPosition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AbsoluteTime" })
  absoluteTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MostRecent" })
  mostRecent?: number;
}

export class GetTranscriptRequestBody extends SpeakeasyBase {
  /**
   * The contactId from the current contact chain for which transcript is needed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ContactId" })
  contactId?: string;

  /**
   * The maximum number of results to return in the page. Default: 10.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  /**
   * The pagination token. Use the value returned previously in the next subsequent request to retrieve the next set of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  /**
   * The direction from StartPosition from which to retrieve message. Default: BACKWARD when no StartPosition is provided, FORWARD with StartPosition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ScanDirection" })
  scanDirection?: GetTranscriptRequestBodyScanDirectionEnum;

  /**
   * The sort order for the records. Default: DESCENDING.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SortOrder" })
  sortOrder?: GetTranscriptRequestBodySortOrderEnum;

  /**
   * A filtering option for where to start. For example, if you sent 100 messages, start with message 50.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartPosition" })
  @Type(() => GetTranscriptRequestBodyStartPosition)
  startPosition?: GetTranscriptRequestBodyStartPosition;
}

export class GetTranscriptRequest extends SpeakeasyBase {
  /**
   * Pagination limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxResults",
  })
  maxResults?: string;

  /**
   * Pagination token
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NextToken",
  })
  nextToken?: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: GetTranscriptRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  /**
   * The authentication token associated with the participant's connection.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Bearer",
  })
  xAmzBearer: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GetTranscriptResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getTranscriptResponse?: shared.GetTranscriptResponse;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
