/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * If true returns only invoices with a CompanyRegistrationCertificate
 */
export enum GetSpacesIdCollectiveDecisionHasCompanyRegistrationCertificateEnum {
  True = "true",
  False = "false",
}

/**
 * If true returns only invoices with Minutes
 */
export enum GetSpacesIdCollectiveDecisionHasMinutesEnum {
  True = "true",
  False = "false",
}

/**
 * If true returns only invoices with a SireneRegister
 */
export enum GetSpacesIdCollectiveDecisionHasSireneRegisterEnum {
  True = "true",
  False = "false",
}

/**
 * If true returns only invoices with a Status
 */
export enum GetSpacesIdCollectiveDecisionHasStatusEnum {
  True = "true",
  False = "false",
}

export class GetSpacesIdCollectiveDecisionRequest extends SpeakeasyBase {
  /**
   * Date of the collective decision YYYMMDD
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Date" })
  date?: string;

  /**
   * Event of the collective decision (see post for the list of events)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Event" })
  event?: string;

  /**
   * If true returns only invoices with a CompanyRegistrationCertificate
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=HasCompanyRegistrationCertificate",
  })
  hasCompanyRegistrationCertificate?: GetSpacesIdCollectiveDecisionHasCompanyRegistrationCertificateEnum;

  /**
   * If true returns only invoices with Minutes
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=HasMinutes",
  })
  hasMinutes?: GetSpacesIdCollectiveDecisionHasMinutesEnum;

  /**
   * If true returns only invoices with a SireneRegister
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=HasSireneRegister",
  })
  hasSireneRegister?: GetSpacesIdCollectiveDecisionHasSireneRegisterEnum;

  /**
   * If true returns only invoices with a Status
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=HasStatus",
  })
  hasStatus?: GetSpacesIdCollectiveDecisionHasStatusEnum;

  /**
   * index range of the results
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Range" })
  range?: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export enum GetSpacesIdCollectiveDecision200ApplicationJSONEventEnum {
  Egm = "EGM",
  Cgm = "CGM",
  Ogm = "OGM",
  ConstituentAssembly = "ConstituentAssembly",
  SolePartner = "SolePartner",
  OtherEvent = "OtherEvent",
  Other = "Other",
  Office = "Office",
  ExecutiveCommittee = "ExecutiveCommittee",
  Consulting = "Consulting",
  Board = "Board",
  PartnersMeeting = "PartnersMeeting",
}

export enum GetSpacesIdCollectiveDecision200ApplicationJSONLevelEnum {
  Confidential = "confidential",
  Regular = "regular",
  Public = "public",
}

export class GetSpacesIdCollectiveDecision200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "About" })
  about?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ArchivalDate" })
  archivalDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Class" })
  class?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Date" })
  date?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DividendDistributions" })
  dividendDistributions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DividendDistributionsDate" })
  dividendDistributionsDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Event" })
  event?: GetSpacesIdCollectiveDecision200ApplicationJSONEventEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Home" })
  home?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Keywords" })
  keywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Level" })
  level?: GetSpacesIdCollectiveDecision200ApplicationJSONLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModificationDate" })
  modificationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Parent" })
  parent?: string;
}

export class GetSpacesIdCollectiveDecisionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of collective decisions
   */
  @SpeakeasyMetadata({
    elemType: GetSpacesIdCollectiveDecision200ApplicationJSON,
  })
  getSpacesIdCollectiveDecision200ApplicationJSONAnies?: GetSpacesIdCollectiveDecision200ApplicationJSON[];
}
