/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class DetachStaticIpResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;
    public DetachStaticIpResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    /**
     * AccountSetupInProgressException
     */
    
    public Object accountSetupInProgressException;
    public DetachStaticIpResponse withAccountSetupInProgressException(Object accountSetupInProgressException) {
        this.accountSetupInProgressException = accountSetupInProgressException;
        return this;
    }
    
    
    public String contentType;
    public DetachStaticIpResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.DetachStaticIpResult detachStaticIpResult;
    public DetachStaticIpResponse withDetachStaticIpResult(org.openapis.openapi.models.shared.DetachStaticIpResult detachStaticIpResult) {
        this.detachStaticIpResult = detachStaticIpResult;
        return this;
    }
    
    /**
     * InvalidInputException
     */
    
    public Object invalidInputException;
    public DetachStaticIpResponse withInvalidInputException(Object invalidInputException) {
        this.invalidInputException = invalidInputException;
        return this;
    }
    
    /**
     * NotFoundException
     */
    
    public Object notFoundException;
    public DetachStaticIpResponse withNotFoundException(Object notFoundException) {
        this.notFoundException = notFoundException;
        return this;
    }
    
    /**
     * OperationFailureException
     */
    
    public Object operationFailureException;
    public DetachStaticIpResponse withOperationFailureException(Object operationFailureException) {
        this.operationFailureException = operationFailureException;
        return this;
    }
    
    /**
     * ServiceException
     */
    
    public Object serviceException;
    public DetachStaticIpResponse withServiceException(Object serviceException) {
        this.serviceException = serviceException;
        return this;
    }
    
    
    public Integer statusCode;
    public DetachStaticIpResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public DetachStaticIpResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnauthenticatedException
     */
    
    public Object unauthenticatedException;
    public DetachStaticIpResponse withUnauthenticatedException(Object unauthenticatedException) {
        this.unauthenticatedException = unauthenticatedException;
        return this;
    }
    
}
