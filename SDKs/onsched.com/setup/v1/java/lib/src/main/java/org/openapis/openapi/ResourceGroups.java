/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class ResourceGroups {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public ResourceGroups(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Delete Resource Group
     * &lt;p&gt;Use this endpoint to &lt;b&gt;Delete&lt;/b&gt; a resourceGroup object. A valid &lt;b&gt;resourceGroup id&lt;/b&gt; is required. The resource group is not permanently deleted and can be recovered by using the &lt;i&gt;PUT \u200b/setup\u200b/v1\u200b/resourcegroups\u200b/{id}\u200b/recover&lt;/i&gt; endpoint.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteSetupV1ResourcegroupsIdResponse deleteSetupV1ResourcegroupsId(org.openapis.openapi.models.operations.DeleteSetupV1ResourcegroupsIdRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteSetupV1ResourcegroupsIdRequest.class, baseUrl, "/setup/v1/resourcegroups/{id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteSetupV1ResourcegroupsIdResponse res = new org.openapis.openapi.models.operations.DeleteSetupV1ResourcegroupsIdResponse(contentType, httpRes.statusCode()) {{
            resourceGroupViewModel = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ResourceGroupViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ResourceGroupViewModel.class);
                res.resourceGroupViewModel = out;
            }
        }

        return res;
    }

    /**
     * List Resource Groups
     * &lt;p&gt;Use this endpoint to &lt;b&gt;List Resource Groups&lt;/b&gt; for the specified location. If not specified, the business location defaults to the primary business location. &lt;b&gt;Name&lt;/b&gt; is a required field.&lt;/p&gt;
     * &lt;p&gt;Use the offset and limit parameters to control the page start and size. Default offset is 0, limit is 20, maximum is 100. Use the query parameters to filter the results further.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetSetupV1ResourcegroupsResponse getSetupV1Resourcegroups(org.openapis.openapi.models.operations.GetSetupV1ResourcegroupsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/v1/resourcegroups");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.GetSetupV1ResourcegroupsRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetSetupV1ResourcegroupsResponse res = new org.openapis.openapi.models.operations.GetSetupV1ResourcegroupsResponse(contentType, httpRes.statusCode()) {{
            resourceGroupListViewModel = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ResourceGroupListViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ResourceGroupListViewModel.class);
                res.resourceGroupListViewModel = out;
            }
        }

        return res;
    }

    /**
     * Get Resource Group
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;Resource Group&lt;/b&gt; object. A valid &lt;b&gt;resourceGroup id&lt;/b&gt; is required. Find resourceGroup id's by using the &lt;i&gt;GET setup/v1/resourceGroups&lt;/i&gt; endpoint.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetSetupV1ResourcegroupsIdResponse getSetupV1ResourcegroupsId(org.openapis.openapi.models.operations.GetSetupV1ResourcegroupsIdRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GetSetupV1ResourcegroupsIdRequest.class, baseUrl, "/setup/v1/resourcegroups/{id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetSetupV1ResourcegroupsIdResponse res = new org.openapis.openapi.models.operations.GetSetupV1ResourcegroupsIdResponse(contentType, httpRes.statusCode()) {{
            resourceGroupViewModel = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ResourceGroupViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ResourceGroupViewModel.class);
                res.resourceGroupViewModel = out;
            }
        }

        return res;
    }

    /**
     * Create Resource Group
     * &lt;p&gt;Use this endpoint to &lt;b&gt;Create&lt;/b&gt; a resourceGroup object. Resource groups are used to categorize your resources.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostSetupV1ResourcegroupsResponse postSetupV1Resourcegroups(org.openapis.openapi.models.shared.ResourceGroupInputModel request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/v1/resourcegroups");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostSetupV1ResourcegroupsResponse res = new org.openapis.openapi.models.operations.PostSetupV1ResourcegroupsResponse(contentType, httpRes.statusCode()) {{
            resourceGroupViewModel = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ResourceGroupViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ResourceGroupViewModel.class);
                res.resourceGroupViewModel = out;
            }
        }

        return res;
    }

    /**
     * Update Resource Group
     * &lt;p&gt;Use this endpoint to &lt;b&gt;Update&lt;/b&gt; a resourceGroup object. A valid &lt;b&gt;resourceGroup id&lt;/b&gt; is required. &lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PutSetupV1ResourcegroupsIdResponse putSetupV1ResourcegroupsId(org.openapis.openapi.models.operations.PutSetupV1ResourcegroupsIdRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PutSetupV1ResourcegroupsIdRequest.class, baseUrl, "/setup/v1/resourcegroups/{id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "resourceGroupUpdateModel", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PutSetupV1ResourcegroupsIdResponse res = new org.openapis.openapi.models.operations.PutSetupV1ResourcegroupsIdResponse(contentType, httpRes.statusCode()) {{
            resourceGroupViewModel = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ResourceGroupViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ResourceGroupViewModel.class);
                res.resourceGroupViewModel = out;
            }
        }

        return res;
    }

    /**
     * Recover Resource Group
     * &lt;p&gt;Use this endpoint to &lt;b&gt;Recover&lt;/b&gt; a deleted resourceGroup object. A valid &lt;b&gt;resourceGroup id&lt;/b&gt; is required.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PutSetupV1ResourcegroupsIdRecoverResponse putSetupV1ResourcegroupsIdRecover(org.openapis.openapi.models.operations.PutSetupV1ResourcegroupsIdRecoverRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PutSetupV1ResourcegroupsIdRecoverRequest.class, baseUrl, "/setup/v1/resourcegroups/{id}/recover", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PutSetupV1ResourcegroupsIdRecoverResponse res = new org.openapis.openapi.models.operations.PutSetupV1ResourcegroupsIdRecoverResponse(contentType, httpRes.statusCode()) {{
            resourceViewModel = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ResourceViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ResourceViewModel.class);
                res.resourceViewModel = out;
            }
        }

        return res;
    }
}