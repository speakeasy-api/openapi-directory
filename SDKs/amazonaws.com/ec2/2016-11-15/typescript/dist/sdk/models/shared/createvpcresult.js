"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateVpcResult = exports.CreateVpcResultVpc = exports.CreateVpcResultVpcTags = exports.CreateVpcResultVpcStateEnum = exports.CreateVpcResultVpcIpv6CidrBlockAssociationSet = exports.CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState = exports.CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = exports.CreateVpcResultVpcInstanceTenancyEnum = exports.CreateVpcResultVpcCidrBlockAssociationSet = exports.CreateVpcResultVpcCidrBlockAssociationSetCidrBlockState = exports.CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The state of the CIDR block.
 */
var CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum;
(function (CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum) {
    CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum["Associating"] = "associating";
    CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum["Associated"] = "associated";
    CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum["Disassociating"] = "disassociating";
    CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum["Disassociated"] = "disassociated";
    CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum["Failing"] = "failing";
    CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum["Failed"] = "failed";
})(CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum = exports.CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum || (exports.CreateVpcResultVpcCidrBlockAssociationSetCidrBlockStateStateEnum = {}));
/**
 * Information about the state of the CIDR block.
 */
var CreateVpcResultVpcCidrBlockAssociationSetCidrBlockState = /** @class */ (function (_super) {
    __extends(CreateVpcResultVpcCidrBlockAssociationSetCidrBlockState, _super);
    function CreateVpcResultVpcCidrBlockAssociationSetCidrBlockState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcCidrBlockAssociationSetCidrBlockState.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcCidrBlockAssociationSetCidrBlockState.prototype, "statusMessage", void 0);
    return CreateVpcResultVpcCidrBlockAssociationSetCidrBlockState;
}(utils_1.SpeakeasyBase));
exports.CreateVpcResultVpcCidrBlockAssociationSetCidrBlockState = CreateVpcResultVpcCidrBlockAssociationSetCidrBlockState;
/**
 * Describes an IPv4 CIDR block associated with a VPC.
 */
var CreateVpcResultVpcCidrBlockAssociationSet = /** @class */ (function (_super) {
    __extends(CreateVpcResultVpcCidrBlockAssociationSet, _super);
    function CreateVpcResultVpcCidrBlockAssociationSet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcCidrBlockAssociationSet.prototype, "associationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcCidrBlockAssociationSet.prototype, "cidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateVpcResultVpcCidrBlockAssociationSetCidrBlockState)
    ], CreateVpcResultVpcCidrBlockAssociationSet.prototype, "cidrBlockState", void 0);
    return CreateVpcResultVpcCidrBlockAssociationSet;
}(utils_1.SpeakeasyBase));
exports.CreateVpcResultVpcCidrBlockAssociationSet = CreateVpcResultVpcCidrBlockAssociationSet;
/**
 * The allowed tenancy of instances launched into the VPC.
 */
var CreateVpcResultVpcInstanceTenancyEnum;
(function (CreateVpcResultVpcInstanceTenancyEnum) {
    CreateVpcResultVpcInstanceTenancyEnum["Default"] = "default";
    CreateVpcResultVpcInstanceTenancyEnum["Dedicated"] = "dedicated";
    CreateVpcResultVpcInstanceTenancyEnum["Host"] = "host";
})(CreateVpcResultVpcInstanceTenancyEnum = exports.CreateVpcResultVpcInstanceTenancyEnum || (exports.CreateVpcResultVpcInstanceTenancyEnum = {}));
/**
 * The state of the CIDR block.
 */
var CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum;
(function (CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum) {
    CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Associating"] = "associating";
    CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Associated"] = "associated";
    CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Disassociating"] = "disassociating";
    CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Disassociated"] = "disassociated";
    CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Failing"] = "failing";
    CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Failed"] = "failed";
})(CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = exports.CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum || (exports.CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = {}));
/**
 * Information about the state of the CIDR block.
 */
var CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState = /** @class */ (function (_super) {
    __extends(CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState, _super);
    function CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState.prototype, "statusMessage", void 0);
    return CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState;
}(utils_1.SpeakeasyBase));
exports.CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState = CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState;
/**
 * Describes an IPv6 CIDR block associated with a VPC.
 */
var CreateVpcResultVpcIpv6CidrBlockAssociationSet = /** @class */ (function (_super) {
    __extends(CreateVpcResultVpcIpv6CidrBlockAssociationSet, _super);
    function CreateVpcResultVpcIpv6CidrBlockAssociationSet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcIpv6CidrBlockAssociationSet.prototype, "associationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcIpv6CidrBlockAssociationSet.prototype, "ipv6CidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateVpcResultVpcIpv6CidrBlockAssociationSetIpv6CidrBlockState)
    ], CreateVpcResultVpcIpv6CidrBlockAssociationSet.prototype, "ipv6CidrBlockState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcIpv6CidrBlockAssociationSet.prototype, "ipv6Pool", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcIpv6CidrBlockAssociationSet.prototype, "networkBorderGroup", void 0);
    return CreateVpcResultVpcIpv6CidrBlockAssociationSet;
}(utils_1.SpeakeasyBase));
exports.CreateVpcResultVpcIpv6CidrBlockAssociationSet = CreateVpcResultVpcIpv6CidrBlockAssociationSet;
/**
 * The current state of the VPC.
 */
var CreateVpcResultVpcStateEnum;
(function (CreateVpcResultVpcStateEnum) {
    CreateVpcResultVpcStateEnum["Pending"] = "pending";
    CreateVpcResultVpcStateEnum["Available"] = "available";
})(CreateVpcResultVpcStateEnum = exports.CreateVpcResultVpcStateEnum || (exports.CreateVpcResultVpcStateEnum = {}));
/**
 * Describes a tag.
 */
var CreateVpcResultVpcTags = /** @class */ (function (_super) {
    __extends(CreateVpcResultVpcTags, _super);
    function CreateVpcResultVpcTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpcTags.prototype, "value", void 0);
    return CreateVpcResultVpcTags;
}(utils_1.SpeakeasyBase));
exports.CreateVpcResultVpcTags = CreateVpcResultVpcTags;
/**
 * Information about the VPC.
 */
var CreateVpcResultVpc = /** @class */ (function (_super) {
    __extends(CreateVpcResultVpc, _super);
    function CreateVpcResultVpc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpc.prototype, "cidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CreateVpcResultVpcCidrBlockAssociationSet }),
        __metadata("design:type", Array)
    ], CreateVpcResultVpc.prototype, "cidrBlockAssociationSet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpc.prototype, "dhcpOptionsId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpc.prototype, "instanceTenancy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateVpcResultVpcIpv6CidrBlockAssociationSet,
        }),
        __metadata("design:type", Array)
    ], CreateVpcResultVpc.prototype, "ipv6CidrBlockAssociationSet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateVpcResultVpc.prototype, "isDefault", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpc.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpc.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CreateVpcResultVpcTags }),
        __metadata("design:type", Array)
    ], CreateVpcResultVpc.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateVpcResultVpc.prototype, "vpcId", void 0);
    return CreateVpcResultVpc;
}(utils_1.SpeakeasyBase));
exports.CreateVpcResultVpc = CreateVpcResultVpc;
/**
 * Success
 */
var CreateVpcResult = /** @class */ (function (_super) {
    __extends(CreateVpcResult, _super);
    function CreateVpcResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateVpcResultVpc)
    ], CreateVpcResult.prototype, "vpc", void 0);
    return CreateVpcResult;
}(utils_1.SpeakeasyBase));
exports.CreateVpcResult = CreateVpcResult;
