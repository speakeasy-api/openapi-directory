/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ConfigLog {
    @JsonProperty("id")
    public Long id;

    public ConfigLog withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("key")
    public String key;

    public ConfigLog withKey(String key) {
        this.key = key;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_value")
    public String newValue;

    public ConfigLog withNewValue(String newValue) {
        this.newValue = newValue;
        return this;
    }
    
    /**
     * The entity who made the config key modification
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin")
    public String origin;

    public ConfigLog withOrigin(String origin) {
        this.origin = origin;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previous_value")
    public String previousValue;

    public ConfigLog withPreviousValue(String previousValue) {
        this.previousValue = previousValue;
        return this;
    }
    
    /**
     * Timestamp of when the configuration key was changed
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;

    public ConfigLog withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * Action done on the config: add, update or delete
     */
    @JsonProperty("type")
    public String type;

    public ConfigLog withType(String type) {
        this.type = type;
        return this;
    }
    
    public ConfigLog(@JsonProperty("id") Long id, @JsonProperty("key") String key, @JsonProperty("timestamp") OffsetDateTime timestamp, @JsonProperty("type") String type) {
        this.id = id;
        this.key = key;
        this.timestamp = timestamp;
        this.type = type;
  }
}
