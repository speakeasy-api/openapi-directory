/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BillbeeInterfacesBillbeeAPIModelOrderItemAttribute } from "./billbeeinterfacesbillbeeapimodelorderitemattribute";
import {
  BillbeeInterfacesBillbeeAPIModelSoldProduct,
  BillbeeInterfacesBillbeeAPIModelSoldProductInput,
} from "./billbeeinterfacesbillbeeapimodelsoldproduct";
import { Expose, Type } from "class-transformer";

export class BillbeeInterfacesBillbeeAPIModelOrderItemInput extends SpeakeasyBase {
  /**
   * A list of product attributes for this position
   */
  @SpeakeasyMetadata({
    elemType: BillbeeInterfacesBillbeeAPIModelOrderItemAttribute,
  })
  @Expose({ name: "Attributes" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderItemAttribute)
  attributes?: BillbeeInterfacesBillbeeAPIModelOrderItemAttribute[];

  /**
   * The billbee id of this item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BillbeeId" })
  billbeeId?: number;

  /**
   * Sets the discount in percent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Discount" })
  discount?: number;

  /**
   * If true, the import of this order won't adjust the stock level at billbee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DontAdjustStock" })
  dontAdjustStock?: boolean;

  /**
   * If true, the price will be overwritten by the known article price in billbee if available
   */
  @SpeakeasyMetadata()
  @Expose({ name: "GetPriceFromArticleIfAny" })
  getPriceFromArticleIfAny?: boolean;

  /**
   * Contains the SKU from OrderDetail (if available) or from Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceSKU" })
  invoiceSKU?: string;

  /**
   * Determines if it is a coupon, which is interpreted as tax-free payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsCoupon" })
  isCoupon?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Product" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelSoldProductInput)
  product?: BillbeeInterfacesBillbeeAPIModelSoldProductInput;

  /**
   * The sold quantity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Quantity" })
  quantity?: number;

  /**
   * Contains the used serial number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SerialNumber" })
  serialNumber?: string;

  /**
   * Determines if it is a coupon, which is interpreted as tax-free payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShippingProfileId" })
  shippingProfileId?: string;

  /**
   * The tax amount in the total price
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxAmount" })
  taxAmount?: number;

  /**
   * The tax index.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxIndex" })
  taxIndex?: number;

  /**
   * The total price (unit price * quantity)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TotalPrice" })
  totalPrice?: number;

  /**
   * Id of the individual transaction. Only required by Ebay to detect aggregated orders
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TransactionId" })
  transactionId?: string;

  /**
   * Is just used for the billbee api
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UnrebatedTotalPrice" })
  unrebatedTotalPrice?: number;
}

export class BillbeeInterfacesBillbeeAPIModelOrderItem extends SpeakeasyBase {
  /**
   * A list of product attributes for this position
   */
  @SpeakeasyMetadata({
    elemType: BillbeeInterfacesBillbeeAPIModelOrderItemAttribute,
  })
  @Expose({ name: "Attributes" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelOrderItemAttribute)
  attributes?: BillbeeInterfacesBillbeeAPIModelOrderItemAttribute[];

  /**
   * The billbee id of this item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BillbeeId" })
  billbeeId?: number;

  /**
   * Sets the discount in percent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Discount" })
  discount?: number;

  /**
   * If true, the import of this order won't adjust the stock level at billbee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DontAdjustStock" })
  dontAdjustStock?: boolean;

  /**
   * If true, the price will be overwritten by the known article price in billbee if available
   */
  @SpeakeasyMetadata()
  @Expose({ name: "GetPriceFromArticleIfAny" })
  getPriceFromArticleIfAny?: boolean;

  /**
   * Contains the SKU from OrderDetail (if available) or from Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceSKU" })
  invoiceSKU?: string;

  /**
   * Determines if it is a coupon, which is interpreted as tax-free payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsCoupon" })
  isCoupon?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Product" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelSoldProduct)
  product?: BillbeeInterfacesBillbeeAPIModelSoldProduct;

  /**
   * The sold quantity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Quantity" })
  quantity?: number;

  /**
   * Contains the used serial number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SerialNumber" })
  serialNumber?: string;

  /**
   * Determines if it is a coupon, which is interpreted as tax-free payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ShippingProfileId" })
  shippingProfileId?: string;

  /**
   * The tax amount in the total price
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxAmount" })
  taxAmount?: number;

  /**
   * The tax index.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxIndex" })
  taxIndex?: number;

  /**
   * The total price (unit price * quantity)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TotalPrice" })
  totalPrice?: number;

  /**
   * Id of the individual transaction. Only required by Ebay to detect aggregated orders
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TransactionId" })
  transactionId?: string;

  /**
   * Is just used for the billbee api
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UnrebatedTotalPrice" })
  unrebatedTotalPrice?: number;
}
