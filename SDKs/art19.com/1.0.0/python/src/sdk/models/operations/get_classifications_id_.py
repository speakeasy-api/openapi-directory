"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import classification as shared_classification
from ..shared import resourcelink as shared_resourcelink
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetClassificationsIDSecurity:
    
    api_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetClassificationsIDRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The ID of the classification resource to load."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetClassificationsID200ApplicationVndAPIPlusJSON:
    r"""Success"""
    
    data: Optional[shared_classification.Classification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data'), 'exclude': lambda f: f is None }})
    r"""A classification, in general, is something that can describe other resources, such as countries, genres or
    languages. How they're described (included or excluded, and whether they're the primary classification
    of this type) is handled using other resources. Different functions of ART19 rely on classifications differently,
    and could have an effect only on directory information, or may have an effect on ad decisioning.
    """  
    links: Optional[shared_resourcelink.ResourceLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links'), 'exclude': lambda f: f is None }})
    r"""Links related to the retrieved resource"""  
    

@dataclasses.dataclass
class GetClassificationsIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_classifications_id_200_application_vnd_api_plus_json_object: Optional[GetClassificationsID200ApplicationVndAPIPlusJSON] = dataclasses.field(default=None)
    r"""Success"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    