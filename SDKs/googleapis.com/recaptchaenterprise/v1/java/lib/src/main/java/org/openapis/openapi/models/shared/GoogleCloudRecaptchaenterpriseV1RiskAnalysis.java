/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRecaptchaenterpriseV1RiskAnalysis - Risk analysis result for an event.
 */
public class GoogleCloudRecaptchaenterpriseV1RiskAnalysis {
    /**
     * Extended verdict reasons to be used for experimentation only. The set of possible reasons is subject to change.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extendedVerdictReasons")
    public String[] extendedVerdictReasons;

    public GoogleCloudRecaptchaenterpriseV1RiskAnalysis withExtendedVerdictReasons(String[] extendedVerdictReasons) {
        this.extendedVerdictReasons = extendedVerdictReasons;
        return this;
    }
    
    /**
     * Reasons contributing to the risk analysis verdict.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reasons")
    public GoogleCloudRecaptchaenterpriseV1RiskAnalysisReasonsEnum[] reasons;

    public GoogleCloudRecaptchaenterpriseV1RiskAnalysis withReasons(GoogleCloudRecaptchaenterpriseV1RiskAnalysisReasonsEnum[] reasons) {
        this.reasons = reasons;
        return this;
    }
    
    /**
     * Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic while 0.0 means very likely non-legitimate traffic).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("score")
    public Float score;

    public GoogleCloudRecaptchaenterpriseV1RiskAnalysis withScore(Float score) {
        this.score = score;
        return this;
    }
    
    public GoogleCloudRecaptchaenterpriseV1RiskAnalysis(){}
}
