"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudAdvisorynotificationsV1TextLocalizationStateEnum(str, Enum):
    r"""Status of the localization."""
    LOCALIZATION_STATE_UNSPECIFIED = 'LOCALIZATION_STATE_UNSPECIFIED'
    LOCALIZATION_STATE_NOT_APPLICABLE = 'LOCALIZATION_STATE_NOT_APPLICABLE'
    LOCALIZATION_STATE_PENDING = 'LOCALIZATION_STATE_PENDING'
    LOCALIZATION_STATE_COMPLETED = 'LOCALIZATION_STATE_COMPLETED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudAdvisorynotificationsV1Text:
    r"""A text object containing the English text and its localized copies."""
    
    en_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enText'), 'exclude': lambda f: f is None }})
    r"""The English copy."""  
    localization_state: Optional[GoogleCloudAdvisorynotificationsV1TextLocalizationStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localizationState'), 'exclude': lambda f: f is None }})
    r"""Status of the localization."""  
    localized_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localizedText'), 'exclude': lambda f: f is None }})
    r"""The requested localized copy (if applicable)."""  
    