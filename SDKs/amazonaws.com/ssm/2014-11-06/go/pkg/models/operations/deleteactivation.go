// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteActivationXAmzTargetEnum
type DeleteActivationXAmzTargetEnum string

const (
	DeleteActivationXAmzTargetEnumAmazonSsmDeleteActivation DeleteActivationXAmzTargetEnum = "AmazonSSM.DeleteActivation"
)

func (e *DeleteActivationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.DeleteActivation":
		*e = DeleteActivationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteActivationXAmzTargetEnum: %s", s)
	}
}

type DeleteActivationHeaders struct {
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteActivationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteActivationRequest struct {
	Headers DeleteActivationHeaders
	Request shared.DeleteActivationRequest `request:"mediaType=application/json"`
}

type DeleteActivationResponse struct {
	ContentType string
	// Success
	DeleteActivationResult map[string]interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidActivation
	InvalidActivation interface{}
	// InvalidActivationId
	InvalidActivationID interface{}
	StatusCode          int
	RawResponse         *http.Response
	// TooManyUpdates
	TooManyUpdates interface{}
}
