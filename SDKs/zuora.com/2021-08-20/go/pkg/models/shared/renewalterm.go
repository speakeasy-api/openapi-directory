// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RenewalTermPeriodTypeEnum - Unit of time that the renewal term is measured in.
type RenewalTermPeriodTypeEnum string

const (
	RenewalTermPeriodTypeEnumMonth RenewalTermPeriodTypeEnum = "Month"
	RenewalTermPeriodTypeEnumYear  RenewalTermPeriodTypeEnum = "Year"
	RenewalTermPeriodTypeEnumDay   RenewalTermPeriodTypeEnum = "Day"
	RenewalTermPeriodTypeEnumWeek  RenewalTermPeriodTypeEnum = "Week"
)

func (e *RenewalTermPeriodTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Month":
		fallthrough
	case "Year":
		fallthrough
	case "Day":
		fallthrough
	case "Week":
		*e = RenewalTermPeriodTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RenewalTermPeriodTypeEnum: %s", s)
	}
}

type RenewalTerm struct {
	// Duration of the renewal term in months, years, days, or weeks, depending on the value of the `periodType` field.
	//
	Period *int64 `json:"period,omitempty"`
	// Unit of time that the renewal term is measured in.
	//
	PeriodType *RenewalTermPeriodTypeEnum `json:"periodType,omitempty"`
}
