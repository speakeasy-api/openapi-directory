<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class LinkParameterProperty3
{
    /**
     * description of the parameter
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The label corresponding to the link parameter property. This label is automatically translated based on the Accept-Language http header.
     * 
     * @var ?string $label
     */
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
    /**
     * Describe the way you have to follow to get access to the LOV
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LOVLink3 $lovLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('lovLink')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LOVLink3')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LOVLink3 $lovLink = null;
    
    /**
     * If true, you MUST use indicate a value from the list of values otherwise it's a freetext
     * 
     * @var ?bool $lovRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('lovRequired')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $lovRequired = null;
    
    /**
     * The regular expression to validate the value
     * 
     * @var ?string $pattern
     */
	#[\JMS\Serializer\Annotation\SerializedName('pattern')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pattern = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('required')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $required = null;
    
    /**
     * schema of the parameter
     * 
     * @var ?string $schema
     */
	#[\JMS\Serializer\Annotation\SerializedName('schema')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schema = null;
    
    /**
     * The value type of the parameter
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ParameterTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ParameterTypeEnum>')]
    public ParameterTypeEnum $type;
    
    /**
     * The value of the parameter. It can be an integer a string or an object.
     * 
     * @var ?array<string, mixed> $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $value = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->label = null;
		$this->lovLink = null;
		$this->lovRequired = null;
		$this->pattern = null;
		$this->required = null;
		$this->schema = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\ParameterTypeEnum::STRING;
		$this->value = null;
	}
}
