/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClientDetailsApiModel } from "./clientdetailsapimodel";
import { CurrencyDetailsApiModel } from "./currencydetailsapimodel";
import { EstimationActivityApiModel } from "./estimationactivityapimodel";
import { EstimationAttachmentApiModel } from "./estimationattachmentapimodel";
import { EstimationGatewayApiModel } from "./estimationgatewayapimodel";
import { EstimationItemApiModel } from "./estimationitemapimodel";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Indicate the status of the estimation (paid/unpaid/overdue)
 */
export enum EstimationFullDetailsApiModelStatusEnum {
  Draft = "Draft",
  Accepted = "Accepted",
  Rejected = "Rejected",
}

/**
 * OK
 */
export class EstimationFullDetailsApiModel extends SpeakeasyBase {
  /**
   * Security access token used for accessing the estimation anonymously
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccessToken" })
  accessToken?: string;

  /**
   * List of estimation activities. estimation audit log
   */
  @SpeakeasyMetadata({ elemType: EstimationActivityApiModel })
  @Expose({ name: "Activities" })
  @Type(() => EstimationActivityApiModel)
  activities?: EstimationActivityApiModel[];

  /**
   * List of estimation attachments
   */
  @SpeakeasyMetadata({ elemType: EstimationAttachmentApiModel })
  @Expose({ name: "Attachments" })
  @Type(() => EstimationAttachmentApiModel)
  attachments?: EstimationAttachmentApiModel[];

  @SpeakeasyMetadata()
  @Expose({ name: "Client" })
  @Type(() => ClientDetailsApiModel)
  client?: ClientDetailsApiModel;

  /**
   * Indicate from which estimation this estimation has been cloned from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ClonedFromId" })
  clonedFromId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Currency" })
  @Type(() => CurrencyDetailsApiModel)
  currency?: CurrencyDetailsApiModel;

  /**
   * Amount that goes as a discount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DiscountAmount" })
  discountAmount?: number;

  /**
   * Indicates when the estimation will be proclamed as due
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ExpiresOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresOn?: Date;

  /**
   * Estimation id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: number;

  /**
   * Indicates when the estimation was issued
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IssuedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  issuedOn?: Date;

  /**
   * List of estimation items
   */
  @SpeakeasyMetadata({ elemType: EstimationItemApiModel })
  @Expose({ name: "Items" })
  @Type(() => EstimationItemApiModel)
  items?: EstimationItemApiModel[];

  /**
   * Internal note regarding the estimation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Notes" })
  notes?: string;

  /**
   * Unique estimation number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Number" })
  number?: string;

  /**
   * List of enabled payment gateways for this estimation
   */
  @SpeakeasyMetadata({ elemType: EstimationGatewayApiModel })
  @Expose({ name: "PaymentGateways" })
  @Type(() => EstimationGatewayApiModel)
  paymentGateways?: EstimationGatewayApiModel[];

  /**
   * Unique number generated by the buyer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PoNumber" })
  poNumber?: string;

  /**
   * Indicate the status of the estimation (paid/unpaid/overdue)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: EstimationFullDetailsApiModelStatusEnum;

  /**
   * Total amount of the estimation without tax
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SubTotalAmount" })
  subTotalAmount?: number;

  /**
   * Amount that goes to the tax
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxAmount" })
  taxAmount?: number;

  /**
   * Terms of agreement
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Terms" })
  terms?: string;

  /**
   * Total amount of the estimation with tax
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TotalAmount" })
  totalAmount?: number;
}
