/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListPayeesV4Request extends SpeakeasyBase {
  /**
   * Payee disabled
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=disabled",
  })
  disabled?: boolean;

  /**
   * The display name of the payees.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=displayName",
  })
  displayName?: string;

  /**
   * Email address
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
  email?: string;

  /**
   * The ofacStatus of the payees.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ofacStatus",
  })
  ofacStatus?: string;

  /**
   * The onboarded status of the payees.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=onboardedStatus",
  })
  onboardedStatus?: string;

  /**
   * Page number. Default is 1.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Page size. Default is 25. Max allowable is 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * The country of the payee - 2 letter ISO 3166-1 country code (upper case)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=payeeCountry",
  })
  payeeCountry?: string;

  /**
   * The onboarded status of the payees.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=payeeType",
  })
  payeeType?: string;

  /**
   * The account owner Payor ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=payorId",
  })
  payorId: string;

  /**
   * The remote id of the payees.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=remoteId",
  })
  remoteId?: string;

  /**
   * List of sort fields (e.g. ?sort=onboardedStatus:asc,name:asc) Default is name:asc 'name' is treated as company name for companies - last name + ',' + firstName for individuals The supported sort fields are - payeeId, displayName, payoutStatus, onboardedStatus.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * The watchlistStatus of the payees.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=watchlistStatus",
  })
  watchlistStatus?: string;
}

export class ListPayeesV4Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Details of Payee
   */
  @SpeakeasyMetadata()
  pagedPayeeResponseV4?: shared.PagedPayeeResponseV4;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid request. See Error message payload for details of failure
   */
  @SpeakeasyMetadata()
  inlineResponse400?: shared.InlineResponse400;

  /**
   * Invalid access token. May be expired or invalid
   */
  @SpeakeasyMetadata()
  inlineResponse401?: shared.InlineResponse401;

  /**
   * The authentication does not have permissions to access the resource
   *
   * @remarks
   * This usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions
   *
   */
  @SpeakeasyMetadata()
  inlineResponse403?: shared.InlineResponse403;

  /**
   * The resource was not found or is no longer available
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  inlineResponse404?: shared.InlineResponse404;
}
