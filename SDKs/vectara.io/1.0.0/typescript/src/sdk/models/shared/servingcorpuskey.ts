/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CorpusKeySemanticsEnum } from "./corpuskeysemanticsenum";
import { VectaraservingCustomDimension } from "./vectaraservingcustomdimension";
import { Expose, Type } from "class-transformer";

export class ServingCorpusKey extends SpeakeasyBase {
  /**
   * The Corpus ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "corpusId" })
  corpusId?: number;

  /**
   * The Customer ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerId" })
  customerId?: number;

  /**
   * Weights on custom dimensions for the corpus.
   */
  @SpeakeasyMetadata({ elemType: VectaraservingCustomDimension })
  @Expose({ name: "dim" })
  @Type(() => VectaraservingCustomDimension)
  dim?: VectaraservingCustomDimension[];

  @SpeakeasyMetadata()
  @Expose({ name: "metadataFilter" })
  metadataFilter?: string;

  /**
   * Semantics controls the interpretation of the query string by the
   *
   * @remarks
   * server, and can be used to override the default semantics assigned
   * in the corpus definition.
   *
   *
   *
   *
   *  - DEFAULT: Use corpus-assigned semantics.  This is the most common setting.
   *  - QUERY: Use query semantics.  This is also common.
   *  - RESPONSE: Use response semantics.  Usage of this is rare.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "semantics" })
  semantics?: CorpusKeySemanticsEnum;
}
