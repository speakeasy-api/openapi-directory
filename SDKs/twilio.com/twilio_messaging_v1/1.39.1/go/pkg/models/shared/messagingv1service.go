// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// MessagingV1ServiceFallbackMethodEnum - The HTTP method we use to call `fallback_url`. Can be: `GET` or `POST`.
type MessagingV1ServiceFallbackMethodEnum string

const (
	MessagingV1ServiceFallbackMethodEnumHead   MessagingV1ServiceFallbackMethodEnum = "HEAD"
	MessagingV1ServiceFallbackMethodEnumGet    MessagingV1ServiceFallbackMethodEnum = "GET"
	MessagingV1ServiceFallbackMethodEnumPost   MessagingV1ServiceFallbackMethodEnum = "POST"
	MessagingV1ServiceFallbackMethodEnumPatch  MessagingV1ServiceFallbackMethodEnum = "PATCH"
	MessagingV1ServiceFallbackMethodEnumPut    MessagingV1ServiceFallbackMethodEnum = "PUT"
	MessagingV1ServiceFallbackMethodEnumDelete MessagingV1ServiceFallbackMethodEnum = "DELETE"
)

func (e *MessagingV1ServiceFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = MessagingV1ServiceFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MessagingV1ServiceFallbackMethodEnum: %s", s)
	}
}

// MessagingV1ServiceInboundMethodEnum - The HTTP method we use to call `inbound_request_url`. Can be `GET` or `POST`.
type MessagingV1ServiceInboundMethodEnum string

const (
	MessagingV1ServiceInboundMethodEnumHead   MessagingV1ServiceInboundMethodEnum = "HEAD"
	MessagingV1ServiceInboundMethodEnumGet    MessagingV1ServiceInboundMethodEnum = "GET"
	MessagingV1ServiceInboundMethodEnumPost   MessagingV1ServiceInboundMethodEnum = "POST"
	MessagingV1ServiceInboundMethodEnumPatch  MessagingV1ServiceInboundMethodEnum = "PATCH"
	MessagingV1ServiceInboundMethodEnumPut    MessagingV1ServiceInboundMethodEnum = "PUT"
	MessagingV1ServiceInboundMethodEnumDelete MessagingV1ServiceInboundMethodEnum = "DELETE"
)

func (e *MessagingV1ServiceInboundMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = MessagingV1ServiceInboundMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MessagingV1ServiceInboundMethodEnum: %s", s)
	}
}

// MessagingV1Service - Created
type MessagingV1Service struct {
	// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.
	AccountSid *string `json:"account_sid,omitempty"`
	// Whether to enable [Area Code Geomatch](https://www.twilio.com/docs/sms/services#area-code-geomatch) on the Service Instance.
	AreaCodeGeomatch *bool `json:"area_code_geomatch,omitempty"`
	// The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	DateCreated *time.Time `json:"date_created,omitempty"`
	// The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	DateUpdated *time.Time `json:"date_updated,omitempty"`
	// The HTTP method we use to call `fallback_url`. Can be: `GET` or `POST`.
	FallbackMethod *MessagingV1ServiceFallbackMethodEnum `json:"fallback_method,omitempty"`
	// Whether to enable [Fallback to Long Code](https://www.twilio.com/docs/sms/services#fallback-to-long-code) for messages sent through the Service instance.
	FallbackToLongCode *bool `json:"fallback_to_long_code,omitempty"`
	// The URL that we call using `fallback_method` if an error occurs while retrieving or executing the TwiML from the Inbound Request URL. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `fallback_url` defined for the Messaging Service.
	FallbackURL *string `json:"fallback_url,omitempty"`
	// The string that you assigned to describe the resource.
	FriendlyName *string `json:"friendly_name,omitempty"`
	// The HTTP method we use to call `inbound_request_url`. Can be `GET` or `POST`.
	InboundMethod *MessagingV1ServiceInboundMethodEnum `json:"inbound_method,omitempty"`
	// The URL we call using `inbound_method` when a message is received by any phone number or short code in the Service. When this property is `null`, receiving inbound messages is disabled. All messages sent to the Twilio phone number or short code will not be logged and received on the Account. If the `use_inbound_webhook_on_number` field is enabled then the webhook url defined on the phone number will override the `inbound_request_url` defined for the Messaging Service.
	InboundRequestURL *string `json:"inbound_request_url,omitempty"`
	// The absolute URLs of related resources.
	Links map[string]interface{} `json:"links,omitempty"`
	// Whether to enable the [MMS Converter](https://www.twilio.com/docs/sms/services#mms-converter) for messages sent through the Service instance.
	MmsConverter       *bool                              `json:"mms_converter,omitempty"`
	ScanMessageContent *ServiceEnumScanMessageContentEnum `json:"scan_message_content,omitempty"`
	// The unique string that we created to identify the Service resource.
	Sid *string `json:"sid,omitempty"`
	// Whether to enable [Smart Encoding](https://www.twilio.com/docs/sms/services#smart-encoding) for messages sent through the Service instance.
	SmartEncoding *bool `json:"smart_encoding,omitempty"`
	// The URL we call to [pass status updates](https://www.twilio.com/docs/sms/api/message-resource#message-status-values) about message delivery.
	StatusCallback *string `json:"status_callback,omitempty"`
	// Whether to enable [Sticky Sender](https://www.twilio.com/docs/sms/services#sticky-sender) on the Service instance.
	StickySender *bool `json:"sticky_sender,omitempty"`
	// Reserved.
	SynchronousValidation *bool `json:"synchronous_validation,omitempty"`
	// The absolute URL of the Service resource.
	URL *string `json:"url,omitempty"`
	// Whether US A2P campaign is registered for this Service.
	UsAppToPersonRegistered *bool `json:"us_app_to_person_registered,omitempty"`
	// A boolean value that indicates either the webhook url configured on the phone number will be used or `inbound_request_url`/`fallback_url` url will be called when a message is received from the phone number. If this field is enabled then the webhook url defined on the phone number will override the `inbound_request_url`/`fallback_url` defined for the Messaging Service.
	UseInboundWebhookOnNumber *bool `json:"use_inbound_webhook_on_number,omitempty"`
	// A string that describes the scenario in which the Messaging Service will be used. Examples: [notification, marketing, verification, poll ..]
	Usecase *string `json:"usecase,omitempty"`
	// How long, in seconds, messages sent from the Service are valid. Can be an integer from `1` to `14,400`.
	ValidityPeriod *int64 `json:"validity_period,omitempty"`
}
