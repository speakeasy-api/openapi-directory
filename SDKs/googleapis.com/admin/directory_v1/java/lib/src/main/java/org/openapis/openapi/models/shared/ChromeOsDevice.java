/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ChromeOsDevice - Google Chrome devices run on the [Chrome OS](https://support.google.com/chromeos). For more information about common API tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices).
 */
public class ChromeOsDevice {
    /**
     * A list of active time ranges (Read-only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeTimeRanges")
    public ChromeOsDeviceActiveTimeRanges[] activeTimeRanges;

    public ChromeOsDevice withActiveTimeRanges(ChromeOsDeviceActiveTimeRanges[] activeTimeRanges) {
        this.activeTimeRanges = activeTimeRanges;
        return this;
    }
    
    /**
     * The asset identifier as noted by an administrator or specified during enrollment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotatedAssetId")
    public String annotatedAssetId;

    public ChromeOsDevice withAnnotatedAssetId(String annotatedAssetId) {
        this.annotatedAssetId = annotatedAssetId;
        return this;
    }
    
    /**
     * The address or location of the device as noted by the administrator. Maximum length is `200` characters. Empty values are allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotatedLocation")
    public String annotatedLocation;

    public ChromeOsDevice withAnnotatedLocation(String annotatedLocation) {
        this.annotatedLocation = annotatedLocation;
        return this;
    }
    
    /**
     * The user of the device as noted by the administrator. Maximum length is 100 characters. Empty values are allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotatedUser")
    public String annotatedUser;

    public ChromeOsDevice withAnnotatedUser(String annotatedUser) {
        this.annotatedUser = annotatedUser;
        return this;
    }
    
    /**
     * (Read-only) The timestamp after which the device will stop receiving Chrome updates or support
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoUpdateExpiration")
    public String autoUpdateExpiration;

    public ChromeOsDevice withAutoUpdateExpiration(String autoUpdateExpiration) {
        this.autoUpdateExpiration = autoUpdateExpiration;
        return this;
    }
    
    /**
     * The boot mode for the device. The possible values are: * `Verified`: The device is running a valid version of the Chrome OS. * `Dev`: The devices's developer hardware switch is enabled. When booted, the device has a command line shell. For an example of a developer switch, see the [Chromebook developer information](https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/samsung-series-5-chromebook#TOC-Developer-switch).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bootMode")
    public String bootMode;

    public ChromeOsDevice withBootMode(String bootMode) {
        this.bootMode = bootMode;
        return this;
    }
    
    /**
     * Information regarding CPU specs in the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuInfo")
    public ChromeOsDeviceCpuInfo[] cpuInfo;

    public ChromeOsDevice withCpuInfo(ChromeOsDeviceCpuInfo[] cpuInfo) {
        this.cpuInfo = cpuInfo;
        return this;
    }
    
    /**
     * Reports of CPU utilization and temperature (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuStatusReports")
    public ChromeOsDeviceCpuStatusReports[] cpuStatusReports;

    public ChromeOsDevice withCpuStatusReports(ChromeOsDeviceCpuStatusReports[] cpuStatusReports) {
        this.cpuStatusReports = cpuStatusReports;
        return this;
    }
    
    /**
     * (Read-only) Deprovision reason.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deprovisionReason")
    public ChromeOsDeviceDeprovisionReasonEnum deprovisionReason;

    public ChromeOsDevice withDeprovisionReason(ChromeOsDeviceDeprovisionReasonEnum deprovisionReason) {
        this.deprovisionReason = deprovisionReason;
        return this;
    }
    
    /**
     * A list of device files to download (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceFiles")
    public ChromeOsDeviceDeviceFiles[] deviceFiles;

    public ChromeOsDevice withDeviceFiles(ChromeOsDeviceDeviceFiles[] deviceFiles) {
        this.deviceFiles = deviceFiles;
        return this;
    }
    
    /**
     * The unique ID of the Chrome device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceId")
    public String deviceId;

    public ChromeOsDevice withDeviceId(String deviceId) {
        this.deviceId = deviceId;
        return this;
    }
    
    /**
     * Reports of disk space and other info about mounted/connected volumes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskVolumeReports")
    public ChromeOsDeviceDiskVolumeReports[] diskVolumeReports;

    public ChromeOsDevice withDiskVolumeReports(ChromeOsDeviceDiskVolumeReports[] diskVolumeReports) {
        this.diskVolumeReports = diskVolumeReports;
        return this;
    }
    
    /**
     * (Read-only) Built-in MAC address for the docking station that the device connected to. Factory sets Media access control address (MAC address) assigned for use by a dock. It is reserved specifically for MAC pass through device policy. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dockMacAddress")
    public String dockMacAddress;

    public ChromeOsDevice withDockMacAddress(String dockMacAddress) {
        this.dockMacAddress = dockMacAddress;
        return this;
    }
    
    /**
     * ETag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public ChromeOsDevice withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The device's MAC address on the ethernet network interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ethernetMacAddress")
    public String ethernetMacAddress;

    public ChromeOsDevice withEthernetMacAddress(String ethernetMacAddress) {
        this.ethernetMacAddress = ethernetMacAddress;
        return this;
    }
    
    /**
     * (Read-only) MAC address used by the Chromebook\u2019s internal ethernet port, and for onboard network (ethernet) interface. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ethernetMacAddress0")
    public String ethernetMacAddress0;

    public ChromeOsDevice withEthernetMacAddress0(String ethernetMacAddress0) {
        this.ethernetMacAddress0 = ethernetMacAddress0;
        return this;
    }
    
    /**
     * The Chrome device's firmware version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firmwareVersion")
    public String firmwareVersion;

    public ChromeOsDevice withFirmwareVersion(String firmwareVersion) {
        this.firmwareVersion = firmwareVersion;
        return this;
    }
    
    /**
     * Date and time for the first time the device was enrolled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstEnrollmentTime")
    public String firstEnrollmentTime;

    public ChromeOsDevice withFirstEnrollmentTime(String firstEnrollmentTime) {
        this.firstEnrollmentTime = firstEnrollmentTime;
        return this;
    }
    
    /**
     * The type of resource. For the Chromeosdevices resource, the value is `admin#directory#chromeosdevice`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public ChromeOsDevice withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * (Read-only) Date and time for the last deprovision of the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastDeprovisionTimestamp")
    public String lastDeprovisionTimestamp;

    public ChromeOsDevice withLastDeprovisionTimestamp(String lastDeprovisionTimestamp) {
        this.lastDeprovisionTimestamp = lastDeprovisionTimestamp;
        return this;
    }
    
    /**
     * Date and time the device was last enrolled (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastEnrollmentTime")
    public OffsetDateTime lastEnrollmentTime;

    public ChromeOsDevice withLastEnrollmentTime(OffsetDateTime lastEnrollmentTime) {
        this.lastEnrollmentTime = lastEnrollmentTime;
        return this;
    }
    
    /**
     * Contains last known network (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastKnownNetwork")
    public ChromeOsDeviceLastKnownNetwork[] lastKnownNetwork;

    public ChromeOsDevice withLastKnownNetwork(ChromeOsDeviceLastKnownNetwork[] lastKnownNetwork) {
        this.lastKnownNetwork = lastKnownNetwork;
        return this;
    }
    
    /**
     * Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastSync")
    public OffsetDateTime lastSync;

    public ChromeOsDevice withLastSync(OffsetDateTime lastSync) {
        this.lastSync = lastSync;
        return this;
    }
    
    /**
     * The device's wireless MAC address. If the device does not have this information, it is not included in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("macAddress")
    public String macAddress;

    public ChromeOsDevice withMacAddress(String macAddress) {
        this.macAddress = macAddress;
        return this;
    }
    
    /**
     * (Read-only) The date the device was manufactured in yyyy-mm-dd format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manufactureDate")
    public String manufactureDate;

    public ChromeOsDevice withManufactureDate(String manufactureDate) {
        this.manufactureDate = manufactureDate;
        return this;
    }
    
    /**
     * The Mobile Equipment Identifier (MEID) or the International Mobile Equipment Identity (IMEI) for the 3G mobile card in a mobile device. A MEID/IMEI is typically used when adding a device to a wireless carrier's post-pay service plan. If the device does not have this information, this property is not included in the response. For more information on how to export a MEID/IMEI list, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-chrome-devices.html#export_meid).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meid")
    public String meid;

    public ChromeOsDevice withMeid(String meid) {
        this.meid = meid;
        return this;
    }
    
    /**
     * The device's model information. If the device does not have this information, this property is not included in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("model")
    public String model;

    public ChromeOsDevice withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * Notes about this device added by the administrator. This property can be [searched](https://support.google.com/chrome/a/answer/1698333) with the [list](/admin-sdk/directory/v1/reference/chromeosdevices/list) method's `query` parameter. Maximum length is 500 characters. Empty values are allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public ChromeOsDevice withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The device's order number. Only devices directly purchased from Google have an order number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderNumber")
    public String orderNumber;

    public ChromeOsDevice withOrderNumber(String orderNumber) {
        this.orderNumber = orderNumber;
        return this;
    }
    
    /**
     * The unique ID of the organizational unit. orgUnitPath is the human readable version of orgUnitId. While orgUnitPath may change by renaming an organizational unit within the path, orgUnitId is unchangeable for one organizational unit. This property can be [updated](/admin-sdk/directory/v1/guides/manage-chrome-devices#move_chrome_devices_to_ou) using the API. For more information about how to create an organizational structure for your device, see the [administration help center](https://support.google.com/a/answer/182433).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orgUnitId")
    public String orgUnitId;

    public ChromeOsDevice withOrgUnitId(String orgUnitId) {
        this.orgUnitId = orgUnitId;
        return this;
    }
    
    /**
     * The full parent path with the organizational unit's name associated with the device. Path names are case insensitive. If the parent organizational unit is the top-level organization, it is represented as a forward slash, `/`. This property can be [updated](/admin-sdk/directory/v1/guides/manage-chrome-devices#move_chrome_devices_to_ou) using the API. For more information about how to create an organizational structure for your device, see the [administration help center](https://support.google.com/a/answer/182433).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orgUnitPath")
    public String orgUnitPath;

    public ChromeOsDevice withOrgUnitPath(String orgUnitPath) {
        this.orgUnitPath = orgUnitPath;
        return this;
    }
    
    /**
     * Contains information regarding the current OS update status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osUpdateStatus")
    public OsUpdateStatus osUpdateStatus;

    public ChromeOsDevice withOsUpdateStatus(OsUpdateStatus osUpdateStatus) {
        this.osUpdateStatus = osUpdateStatus;
        return this;
    }
    
    /**
     * The Chrome device's operating system version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osVersion")
    public String osVersion;

    public ChromeOsDevice withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }
    
    /**
     * The Chrome device's platform version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platformVersion")
    public String platformVersion;

    public ChromeOsDevice withPlatformVersion(String platformVersion) {
        this.platformVersion = platformVersion;
        return this;
    }
    
    /**
     * A list of recent device users, in descending order, by last login time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recentUsers")
    public ChromeOsDeviceRecentUsers[] recentUsers;

    public ChromeOsDevice withRecentUsers(ChromeOsDeviceRecentUsers[] recentUsers) {
        this.recentUsers = recentUsers;
        return this;
    }
    
    /**
     * A list of screenshot files to download. Type is always "SCREENSHOT_FILE". (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("screenshotFiles")
    public ChromeOsDeviceScreenshotFiles[] screenshotFiles;

    public ChromeOsDevice withScreenshotFiles(ChromeOsDeviceScreenshotFiles[] screenshotFiles) {
        this.screenshotFiles = screenshotFiles;
        return this;
    }
    
    /**
     * The Chrome device serial number entered when the device was enabled. This value is the same as the Admin console's *Serial Number* in the *Chrome OS Devices* tab.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serialNumber")
    public String serialNumber;

    public ChromeOsDevice withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    /**
     * The status of the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public ChromeOsDevice withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Final date the device will be supported (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("supportEndDate")
    public OffsetDateTime supportEndDate;

    public ChromeOsDevice withSupportEndDate(OffsetDateTime supportEndDate) {
        this.supportEndDate = supportEndDate;
        return this;
    }
    
    /**
     * Reports of amounts of available RAM memory (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("systemRamFreeReports")
    public ChromeOsDeviceSystemRamFreeReports[] systemRamFreeReports;

    public ChromeOsDevice withSystemRamFreeReports(ChromeOsDeviceSystemRamFreeReports[] systemRamFreeReports) {
        this.systemRamFreeReports = systemRamFreeReports;
        return this;
    }
    
    /**
     * Total RAM on the device [in bytes] (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("systemRamTotal")
    public String systemRamTotal;

    public ChromeOsDevice withSystemRamTotal(String systemRamTotal) {
        this.systemRamTotal = systemRamTotal;
        return this;
    }
    
    /**
     * Trusted Platform Module (TPM) (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tpmVersionInfo")
    public ChromeOsDeviceTpmVersionInfo tpmVersionInfo;

    public ChromeOsDevice withTpmVersionInfo(ChromeOsDeviceTpmVersionInfo tpmVersionInfo) {
        this.tpmVersionInfo = tpmVersionInfo;
        return this;
    }
    
    /**
     * Determines if the device will auto renew its support after the support end date. This is a read-only property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("willAutoRenew")
    public Boolean willAutoRenew;

    public ChromeOsDevice withWillAutoRenew(Boolean willAutoRenew) {
        this.willAutoRenew = willAutoRenew;
        return this;
    }
    
    public ChromeOsDevice(){}
}
