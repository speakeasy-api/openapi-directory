/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssetCompositeModel } from "./assetcompositemodel";
import { AssetHierarchy } from "./assethierarchy";
import { AssetProperty } from "./assetproperty";
import { AssetStatus } from "./assetstatus";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeAssetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assetArn" })
  assetArn: string;

  @SpeakeasyMetadata({ elemType: AssetCompositeModel })
  @Expose({ name: "assetCompositeModels" })
  @Type(() => AssetCompositeModel)
  assetCompositeModels?: AssetCompositeModel[];

  @SpeakeasyMetadata()
  @Expose({ name: "assetCreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  assetCreationDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "assetDescription" })
  assetDescription?: string;

  @SpeakeasyMetadata({ elemType: AssetHierarchy })
  @Expose({ name: "assetHierarchies" })
  @Type(() => AssetHierarchy)
  assetHierarchies: AssetHierarchy[];

  @SpeakeasyMetadata()
  @Expose({ name: "assetId" })
  assetId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assetLastUpdateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  assetLastUpdateDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "assetModelId" })
  assetModelId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assetName" })
  assetName: string;

  @SpeakeasyMetadata({ elemType: AssetProperty })
  @Expose({ name: "assetProperties" })
  @Type(() => AssetProperty)
  assetProperties: AssetProperty[];

  @SpeakeasyMetadata()
  @Expose({ name: "assetStatus" })
  @Type(() => AssetStatus)
  assetStatus: AssetStatus;
}
