/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class GenerateIdTokenRequest extends SpeakeasyBase {
  /**
   * Required. The audience for the token, such as the API or account that this token grants access to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audience" })
  audience?: string;

  /**
   * The sequence of service accounts in a delegation chain. Each service account must be granted the `roles/iam.serviceAccountTokenCreator` role on its next service account in the chain. The last service account in the chain must be granted the `roles/iam.serviceAccountTokenCreator` role on the service account that is specified in the `name` field of the request. The delegates must have the following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard character is required; replacing it with a project ID is invalid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delegates" })
  delegates?: string[];

  /**
   * Include the service account email in the token. If set to `true`, the token will contain `email` and `email_verified` claims.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includeEmail" })
  includeEmail?: boolean;
}
