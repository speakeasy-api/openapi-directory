"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import auditevent as shared_auditevent
from ..shared import paginationdata as shared_paginationdata
from ..shared import paginationlinks as shared_paginationlinks
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AuditRespEmbedded:
    r"""Container containing the `events` array."""
    
    events: Optional[list[shared_auditevent.AuditEvent]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('events'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AuditResp:
    r"""OK"""
    
    embedded: Optional[AuditRespEmbedded] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('_embedded'), 'exclude': lambda f: f is None }})
    r"""Container containing the `events` array."""  
    links: Optional[shared_paginationlinks.PaginationLinks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('_links'), 'exclude': lambda f: f is None }})
    r"""Container containing self, next and last page links."""  
    page: Optional[shared_paginationdata.PaginationData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page'), 'exclude': lambda f: f is None }})
    r"""Page containing results."""  
    