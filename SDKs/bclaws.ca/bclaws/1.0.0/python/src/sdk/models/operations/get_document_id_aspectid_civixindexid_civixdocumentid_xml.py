"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum(str, Enum):
    r"""The identifier of the 'aspect' (content group) to search"""
    COMPLETE = 'complete'
    CORPREG = 'corpreg'
    BCGAZ1 = 'bcgaz1'
    BCGAZ2 = 'bcgaz2'
    OIC = 'oic'
    PSL = 'psl'
    ECB = 'ecb'
    HSCR = 'hscr'
    ARCH_OIC = 'arch_oic'


@dataclasses.dataclass
class GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLRequest:
    
    aspect_id: GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLAspectIDEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'aspectId', 'style': 'simple', 'explode': False }})
    r"""The identifier of the 'aspect' (content group) to search"""  
    civix_document_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'civixDocumentId', 'style': 'simple', 'explode': False }})
    r"""The document identification code for an index or directory"""  
    civix_index_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'civixIndexId', 'style': 'simple', 'explode': False }})
    r"""Index identification code"""  
    

@dataclasses.dataclass
class GetDocumentIDAspectIDCivixIndexIDCivixDocumentIDXMLResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    