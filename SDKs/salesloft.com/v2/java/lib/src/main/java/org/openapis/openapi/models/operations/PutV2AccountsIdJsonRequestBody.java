/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PutV2AccountsIdJsonRequestBody {
    /**
     * ID of the Account Tier for this Account
     */
    @SpeakeasyMetadata("form:name=account_tier_id")
    public Long accountTierId;

    public PutV2AccountsIdJsonRequestBody withAccountTierId(Long accountTierId) {
        this.accountTierId = accountTierId;
        return this;
    }
    
    /**
     * Whether this Account should be archived or not. Setting this to true sets archived_at to the current time if it's not already set. Setting this to false will set archived_at to null
     */
    @SpeakeasyMetadata("form:name=archived")
    public Boolean archived;

    public PutV2AccountsIdJsonRequestBody withArchived(Boolean archived) {
        this.archived = archived;
        return this;
    }
    
    /**
     * City
     */
    @SpeakeasyMetadata("form:name=city")
    public String city;

    public PutV2AccountsIdJsonRequestBody withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * ID of the CompanyStage assigned to this Account
     */
    @SpeakeasyMetadata("form:name=company_stage_id")
    public Long companyStageId;

    public PutV2AccountsIdJsonRequestBody withCompanyStageId(Long companyStageId) {
        this.companyStageId = companyStageId;
        return this;
    }
    
    /**
     * Type of the Account's company
     */
    @SpeakeasyMetadata("form:name=company_type")
    public String companyType;

    public PutV2AccountsIdJsonRequestBody withCompanyType(String companyType) {
        this.companyType = companyType;
        return this;
    }
    
    /**
     * Conversational name of the Account
     */
    @SpeakeasyMetadata("form:name=conversational_name")
    public String conversationalName;

    public PutV2AccountsIdJsonRequestBody withConversationalName(String conversationalName) {
        this.conversationalName = conversationalName;
        return this;
    }
    
    /**
     * Country
     */
    @SpeakeasyMetadata("form:name=country")
    public String country;

    public PutV2AccountsIdJsonRequestBody withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Requires Salesforce.
     * 
     * ID of the person in your external CRM. You must provide a crm_id_type if this is included.
     * 
     * Validations will be applied to the crm_id depending on the crm_id_type. A "salesforce" ID must be exactly 18 characters. A "salesforce" ID must be either an Account (001) object. The type will be validated using the 18 character ID.
     * 
     * This field can only be used if your application or API key has the "account:set_crm_id" scope.
     * 
     * 
     */
    @SpeakeasyMetadata("form:name=crm_id")
    public String crmId;

    public PutV2AccountsIdJsonRequestBody withCrmId(String crmId) {
        this.crmId = crmId;
        return this;
    }
    
    /**
     * The CRM that the provided crm_id is for. Must be one of: salesforce
     */
    @SpeakeasyMetadata("form:name=crm_id_type")
    public String crmIdType;

    public PutV2AccountsIdJsonRequestBody withCrmIdType(String crmIdType) {
        this.crmIdType = crmIdType;
        return this;
    }
    
    /**
     * Custom fields are defined by the user's team. Only fields with values are presented in the API.
     */
    @SpeakeasyMetadata("form:name=custom_fields,json")
    public java.util.Map<String, Object>[] customFields;

    public PutV2AccountsIdJsonRequestBody withCustomFields(java.util.Map<String, Object>[] customFields) {
        this.customFields = customFields;
        return this;
    }
    
    /**
     * Description
     */
    @SpeakeasyMetadata("form:name=description")
    public String description;

    public PutV2AccountsIdJsonRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Whether this company can not be contacted. Values are either true or false. Setting this to true will remove all associated people from all active communications
     */
    @SpeakeasyMetadata("form:name=do_not_contact")
    public Boolean doNotContact;

    public PutV2AccountsIdJsonRequestBody withDoNotContact(Boolean doNotContact) {
        this.doNotContact = doNotContact;
        return this;
    }
    
    /**
     * Website domain, not a fully qualified URI
     */
    @SpeakeasyMetadata("form:name=domain")
    public String domain;

    public PutV2AccountsIdJsonRequestBody withDomain(String domain) {
        this.domain = domain;
        return this;
    }
    
    /**
     * Date or year of founding
     */
    @SpeakeasyMetadata("form:name=founded")
    public String founded;

    public PutV2AccountsIdJsonRequestBody withFounded(String founded) {
        this.founded = founded;
        return this;
    }
    
    /**
     * Industry
     */
    @SpeakeasyMetadata("form:name=industry")
    public String industry;

    public PutV2AccountsIdJsonRequestBody withIndustry(String industry) {
        this.industry = industry;
        return this;
    }
    
    /**
     * Full LinkedIn url
     */
    @SpeakeasyMetadata("form:name=linkedin_url")
    public String linkedinUrl;

    public PutV2AccountsIdJsonRequestBody withLinkedinUrl(String linkedinUrl) {
        this.linkedinUrl = linkedinUrl;
        return this;
    }
    
    /**
     * Time locale
     */
    @SpeakeasyMetadata("form:name=locale")
    public String locale;

    public PutV2AccountsIdJsonRequestBody withLocale(String locale) {
        this.locale = locale;
        return this;
    }
    
    /**
     * Account Full Name
     */
    @SpeakeasyMetadata("form:name=name")
    public String name;

    public PutV2AccountsIdJsonRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * ID of the User that owns this Account
     */
    @SpeakeasyMetadata("form:name=owner_id")
    public Long ownerId;

    public PutV2AccountsIdJsonRequestBody withOwnerId(Long ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    /**
     * Phone number without formatting
     */
    @SpeakeasyMetadata("form:name=phone")
    public String phone;

    public PutV2AccountsIdJsonRequestBody withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    /**
     * Postal code
     */
    @SpeakeasyMetadata("form:name=postal_code")
    public String postalCode;

    public PutV2AccountsIdJsonRequestBody withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * Estimated revenue range
     */
    @SpeakeasyMetadata("form:name=revenue_range")
    public String revenueRange;

    public PutV2AccountsIdJsonRequestBody withRevenueRange(String revenueRange) {
        this.revenueRange = revenueRange;
        return this;
    }
    
    /**
     * Estimated number of people in employment
     */
    @SpeakeasyMetadata("form:name=size")
    public String size;

    public PutV2AccountsIdJsonRequestBody withSize(String size) {
        this.size = size;
        return this;
    }
    
    /**
     * State
     */
    @SpeakeasyMetadata("form:name=state")
    public String state;

    public PutV2AccountsIdJsonRequestBody withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Street name and number
     */
    @SpeakeasyMetadata("form:name=street")
    public String street;

    public PutV2AccountsIdJsonRequestBody withStreet(String street) {
        this.street = street;
        return this;
    }
    
    /**
     * All tags applied to this Account
     */
    @SpeakeasyMetadata("form:name=tags")
    public String[] tags;

    public PutV2AccountsIdJsonRequestBody withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Twitter handle, with @
     */
    @SpeakeasyMetadata("form:name=twitter_handle")
    public String twitterHandle;

    public PutV2AccountsIdJsonRequestBody withTwitterHandle(String twitterHandle) {
        this.twitterHandle = twitterHandle;
        return this;
    }
    
    /**
     * Website
     */
    @SpeakeasyMetadata("form:name=website")
    public String website;

    public PutV2AccountsIdJsonRequestBody withWebsite(String website) {
        this.website = website;
        return this;
    }
    
    public PutV2AccountsIdJsonRequestBody(@JsonProperty("domain") String domain, @JsonProperty("name") String name) {
        this.domain = domain;
        this.name = name;
  }
}
