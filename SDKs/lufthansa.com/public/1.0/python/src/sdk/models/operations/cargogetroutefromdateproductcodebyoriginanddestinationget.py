"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Any, Optional


@dataclasses.dataclass
class CargoGetRouteFromDateProductCodeByOriginAndDestinationGetSecurity:
    
    auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class CargoGetRouteFromDateProductCodeByOriginAndDestinationGetProductCodeEnum(str, Enum):
    r"""Product code for requested service and specials : 3-letter eg: YNZ"""
    FAN = 'FAN'
    FCO = 'FCO'
    FCP = 'FCP'
    FDG = 'FDG'
    FTF = 'FTF'
    FUN = 'FUN'
    FWN = 'FWN'
    YCO = 'YCO'
    YCP = 'YCP'
    YDG = 'YDG'
    YNB = 'YNB'
    YNZ = 'YNZ'
    YTF = 'YTF'
    YUN = 'YUN'
    ZXB = 'ZXB'
    ZXF = 'ZXF'
    ZXR = 'ZXR'


@dataclasses.dataclass
class CargoGetRouteFromDateProductCodeByOriginAndDestinationGetRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""http header: application/json or application/xml (Acceptable values are: \\"application/json\\", \\"application/xml\\")"""  
    destination: str = dataclasses.field(metadata={'path_param': { 'field_name': 'destination', 'style': 'simple', 'explode': False }})
    r"""Arrival airport : 3-letter IATA airport code, e.g. HKG."""  
    from_date: str = dataclasses.field(metadata={'path_param': { 'field_name': 'fromDate', 'style': 'simple', 'explode': False }})
    r"""Departure date in the local time of the departure airport. Based on LAT (Latest Acceptance Time). format : yyyy-MM-dd eg : 2017-07-15"""  
    origin: str = dataclasses.field(metadata={'path_param': { 'field_name': 'origin', 'style': 'simple', 'explode': False }})
    r"""Departure Airport : 3-letter IATA airport code, e.g. FRA."""  
    product_code: CargoGetRouteFromDateProductCodeByOriginAndDestinationGetProductCodeEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'productCode', 'style': 'simple', 'explode': False }})
    r"""Product code for requested service and specials : 3-letter eg: YNZ"""  
    

@dataclasses.dataclass
class CargoGetRouteFromDateProductCodeByOriginAndDestinationGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    cargo_get_route_from_date_product_code_by_origin_and_destination_get_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    