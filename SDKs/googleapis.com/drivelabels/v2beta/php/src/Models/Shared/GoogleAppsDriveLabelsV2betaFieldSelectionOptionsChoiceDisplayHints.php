<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints - UI display hints for rendering an option.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceDisplayHints
{
    /**
     * The color derived from BadgeConfig and changed to the closest recommended supported color.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsDriveLabelsV2betaBadgeColors $badgeColors
     */
	#[\JMS\Serializer\Annotation\SerializedName('badgeColors')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsDriveLabelsV2betaBadgeColors')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsDriveLabelsV2betaBadgeColors $badgeColors = null;
    
    /**
     * The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority.
     * 
     * @var ?string $badgePriority
     */
	#[\JMS\Serializer\Annotation\SerializedName('badgePriority')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $badgePriority = null;
    
    /**
     * The color derived from BadgeConfig and changed to the closest recommended supported color.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsDriveLabelsV2betaBadgeColors $darkBadgeColors
     */
	#[\JMS\Serializer\Annotation\SerializedName('darkBadgeColors')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsDriveLabelsV2betaBadgeColors')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsDriveLabelsV2betaBadgeColors $darkBadgeColors = null;
    
    /**
     * Whether the option should be shown in the UI as disabled.
     * 
     * @var ?bool $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
    /**
     * This option should be hidden in the search menu when searching for Drive items.
     * 
     * @var ?bool $hiddenInSearch
     */
	#[\JMS\Serializer\Annotation\SerializedName('hiddenInSearch')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hiddenInSearch = null;
    
    /**
     * This option should be shown in the apply menu when applying values to a Drive item.
     * 
     * @var ?bool $shownInApply
     */
	#[\JMS\Serializer\Annotation\SerializedName('shownInApply')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shownInApply = null;
    
	public function __construct()
	{
		$this->badgeColors = null;
		$this->badgePriority = null;
		$this->darkBadgeColors = null;
		$this->disabled = null;
		$this->hiddenInSearch = null;
		$this->shownInApply = null;
	}
}
