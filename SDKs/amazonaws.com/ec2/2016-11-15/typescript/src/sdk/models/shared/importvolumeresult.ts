/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The instance operating system.
 */
export enum ImportVolumeResultConversionTaskImportInstancePlatformEnum {
  Windows = "Windows",
}

/**
 * The disk image format.
 */
export enum ImportVolumeResultConversionTaskImportInstanceVolumesImageFormatEnum {
  Vmdk = "VMDK",
  Raw = "RAW",
  Vhd = "VHD",
}

/**
 * The image.
 */
export class ImportVolumeResultConversionTaskImportInstanceVolumesImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  checksum?: string;

  @SpeakeasyMetadata()
  format?: ImportVolumeResultConversionTaskImportInstanceVolumesImageFormatEnum;

  @SpeakeasyMetadata()
  importManifestUrl?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * The volume.
 */
export class ImportVolumeResultConversionTaskImportInstanceVolumesVolume extends SpeakeasyBase {
  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * Describes an import volume task.
 */
export class ImportVolumeResultConversionTaskImportInstanceVolumes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  bytesConverted?: number;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  image?: ImportVolumeResultConversionTaskImportInstanceVolumesImage;

  @SpeakeasyMetadata()
  status?: string;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata()
  volume?: ImportVolumeResultConversionTaskImportInstanceVolumesVolume;
}

/**
 * If the task is for importing an instance, this contains information about the import instance task.
 */
export class ImportVolumeResultConversionTaskImportInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  platform?: ImportVolumeResultConversionTaskImportInstancePlatformEnum;

  @SpeakeasyMetadata({
    elemType: ImportVolumeResultConversionTaskImportInstanceVolumes,
  })
  volumes?: ImportVolumeResultConversionTaskImportInstanceVolumes[];
}

/**
 * The disk image format.
 */
export enum ImportVolumeResultConversionTaskImportVolumeImageFormatEnum {
  Vmdk = "VMDK",
  Raw = "RAW",
  Vhd = "VHD",
}

/**
 * The image.
 */
export class ImportVolumeResultConversionTaskImportVolumeImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  checksum?: string;

  @SpeakeasyMetadata()
  format?: ImportVolumeResultConversionTaskImportVolumeImageFormatEnum;

  @SpeakeasyMetadata()
  importManifestUrl?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * The volume.
 */
export class ImportVolumeResultConversionTaskImportVolumeVolume extends SpeakeasyBase {
  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * If the task is for importing a volume, this contains information about the import volume task.
 */
export class ImportVolumeResultConversionTaskImportVolume extends SpeakeasyBase {
  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  bytesConverted?: number;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  image?: ImportVolumeResultConversionTaskImportVolumeImage;

  @SpeakeasyMetadata()
  volume?: ImportVolumeResultConversionTaskImportVolumeVolume;
}

/**
 * The state of the conversion task.
 */
export enum ImportVolumeResultConversionTaskStateEnum {
  Active = "active",
  Cancelling = "cancelling",
  Cancelled = "cancelled",
  Completed = "completed",
}

/**
 * Describes a tag.
 */
export class ImportVolumeResultConversionTaskTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Information about the conversion task.
 */
export class ImportVolumeResultConversionTask extends SpeakeasyBase {
  @SpeakeasyMetadata()
  conversionTaskId?: string;

  @SpeakeasyMetadata()
  expirationTime?: string;

  @SpeakeasyMetadata()
  importInstance?: ImportVolumeResultConversionTaskImportInstance;

  @SpeakeasyMetadata()
  importVolume?: ImportVolumeResultConversionTaskImportVolume;

  @SpeakeasyMetadata()
  state?: ImportVolumeResultConversionTaskStateEnum;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata({ elemType: ImportVolumeResultConversionTaskTags })
  tags?: ImportVolumeResultConversionTaskTags[];
}

/**
 * Success
 */
export class ImportVolumeResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  conversionTask?: ImportVolumeResultConversionTask;
}
