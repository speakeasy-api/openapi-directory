// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AccountAccessPermissionEnum string

const (
	AccountAccessPermissionEnumRead          AccountAccessPermissionEnum = "read"
	AccountAccessPermissionEnumEdit          AccountAccessPermissionEnum = "edit"
	AccountAccessPermissionEnumPublish       AccountAccessPermissionEnum = "publish"
	AccountAccessPermissionEnumDelete        AccountAccessPermissionEnum = "delete"
	AccountAccessPermissionEnumManage        AccountAccessPermissionEnum = "manage"
	AccountAccessPermissionEnumEditWorkspace AccountAccessPermissionEnum = "editWorkspace"
)

func (e AccountAccessPermissionEnum) ToPointer() *AccountAccessPermissionEnum {
	return &e
}

func (e *AccountAccessPermissionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "read":
		fallthrough
	case "edit":
		fallthrough
	case "publish":
		fallthrough
	case "delete":
		fallthrough
	case "manage":
		fallthrough
	case "editWorkspace":
		*e = AccountAccessPermissionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountAccessPermissionEnum: %v", v)
	}
}

// AccountAccess - Defines the Google Tag Manager Account access permissions.
type AccountAccess struct {
	// List of Account permissions. Valid account permissions are read and manage. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
	Permission []AccountAccessPermissionEnum `json:"permission,omitempty"`
}
