"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserRepresentation = void 0;
var utils_1 = require("../../../internal/utils");
var credentialrepresentation_1 = require("./credentialrepresentation");
var federatedidentityrepresentation_1 = require("./federatedidentityrepresentation");
var userconsentrepresentation_1 = require("./userconsentrepresentation");
var class_transformer_1 = require("class-transformer");
/**
 * success
 */
var UserRepresentation = /** @class */ (function (_super) {
    __extends(UserRepresentation, _super);
    function UserRepresentation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "access" }),
        __metadata("design:type", Object)
    ], UserRepresentation.prototype, "access", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "attributes" }),
        __metadata("design:type", Object)
    ], UserRepresentation.prototype, "attributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: userconsentrepresentation_1.UserConsentRepresentation }),
        (0, class_transformer_1.Expose)({ name: "clientConsents" }),
        (0, class_transformer_1.Type)(function () { return userconsentrepresentation_1.UserConsentRepresentation; }),
        __metadata("design:type", Array)
    ], UserRepresentation.prototype, "clientConsents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientRoles" }),
        __metadata("design:type", Object)
    ], UserRepresentation.prototype, "clientRoles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdTimestamp" }),
        __metadata("design:type", Number)
    ], UserRepresentation.prototype, "createdTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: credentialrepresentation_1.CredentialRepresentation }),
        (0, class_transformer_1.Expose)({ name: "credentials" }),
        (0, class_transformer_1.Type)(function () { return credentialrepresentation_1.CredentialRepresentation; }),
        __metadata("design:type", Array)
    ], UserRepresentation.prototype, "credentials", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disableableCredentialTypes" }),
        __metadata("design:type", Array)
    ], UserRepresentation.prototype, "disableableCredentialTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "email" }),
        __metadata("design:type", String)
    ], UserRepresentation.prototype, "email", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "emailVerified" }),
        __metadata("design:type", Boolean)
    ], UserRepresentation.prototype, "emailVerified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UserRepresentation.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: federatedidentityrepresentation_1.FederatedIdentityRepresentation }),
        (0, class_transformer_1.Expose)({ name: "federatedIdentities" }),
        (0, class_transformer_1.Type)(function () { return federatedidentityrepresentation_1.FederatedIdentityRepresentation; }),
        __metadata("design:type", Array)
    ], UserRepresentation.prototype, "federatedIdentities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "federationLink" }),
        __metadata("design:type", String)
    ], UserRepresentation.prototype, "federationLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "firstName" }),
        __metadata("design:type", String)
    ], UserRepresentation.prototype, "firstName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groups" }),
        __metadata("design:type", Array)
    ], UserRepresentation.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], UserRepresentation.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastName" }),
        __metadata("design:type", String)
    ], UserRepresentation.prototype, "lastName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notBefore" }),
        __metadata("design:type", Number)
    ], UserRepresentation.prototype, "notBefore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "origin" }),
        __metadata("design:type", String)
    ], UserRepresentation.prototype, "origin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "realmRoles" }),
        __metadata("design:type", Array)
    ], UserRepresentation.prototype, "realmRoles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "requiredActions" }),
        __metadata("design:type", Array)
    ], UserRepresentation.prototype, "requiredActions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "self" }),
        __metadata("design:type", String)
    ], UserRepresentation.prototype, "self", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serviceAccountClientId" }),
        __metadata("design:type", String)
    ], UserRepresentation.prototype, "serviceAccountClientId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "username" }),
        __metadata("design:type", String)
    ], UserRepresentation.prototype, "username", void 0);
    return UserRepresentation;
}(utils_1.SpeakeasyBase));
exports.UserRepresentation = UserRepresentation;
