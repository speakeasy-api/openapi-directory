/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NAMain {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_id")
    public String id;

    public NAMain withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cipher_id")
    public String cipherId;

    public NAMain withCipherId(String cipherId) {
        this.cipherId = cipherId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("co2_calibrating")
    public Boolean co2Calibrating;

    public NAMain withCo2Calibrating(Boolean co2Calibrating) {
        this.co2Calibrating = co2Calibrating;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dashboard_data")
    public NADashboardData dashboardData;

    public NAMain withDashboardData(NADashboardData dashboardData) {
        this.dashboardData = dashboardData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data_type")
    public String[] dataType;

    public NAMain withDataType(String[] dataType) {
        this.dataType = dataType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_setup")
    public Integer dateSetup;

    public NAMain withDateSetup(Integer dateSetup) {
        this.dateSetup = dateSetup;
        return this;
    }
    
    /**
     * true when the device is a user favorite and not owned by them
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("favorite")
    public Boolean favorite;

    public NAMain withFavorite(Boolean favorite) {
        this.favorite = favorite;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firmware")
    public Integer firmware;

    public NAMain withFirmware(Integer firmware) {
        this.firmware = firmware;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_setup")
    public Integer lastSetup;

    public NAMain withLastSetup(Integer lastSetup) {
        this.lastSetup = lastSetup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_status_store")
    public Integer lastStatusStore;

    public NAMain withLastStatusStore(Integer lastStatusStore) {
        this.lastStatusStore = lastStatusStore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_upgrade")
    public Integer lastUpgrade;

    public NAMain withLastUpgrade(Integer lastUpgrade) {
        this.lastUpgrade = lastUpgrade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("module_name")
    public String moduleName;

    public NAMain withModuleName(String moduleName) {
        this.moduleName = moduleName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modules")
    public NAStationModule[] modules;

    public NAMain withModules(NAStationModule[] modules) {
        this.modules = modules;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("place")
    public NAPlace place;

    public NAMain withPlace(NAPlace place) {
        this.place = place;
        return this;
    }
    
    /**
     * true when the station was seen by the Netatmo cloud within the last 4 hours
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reachable")
    public Boolean reachable;

    public NAMain withReachable(Boolean reachable) {
        this.reachable = reachable;
        return this;
    }
    
    /**
     * true when the user was invited to (or has favorited) a station, false when the user owns it
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("read_only")
    public Boolean readOnly;

    public NAMain withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("station_name")
    public String stationName;

    public NAMain withStationName(String stationName) {
        this.stationName = stationName;
        return this;
    }
    
    /**
     * Included in every device or module. It defines the type of the device/module. Its values are among :
     * NAMain : for the base station
     * NAModule1 : for the outdoor module
     * NAModule4 : for the additionnal indoor module
     * NAModule3 : for the rain gauge module
     * NAPlug : for the thermostat relay/plug
     * NATherm1 : for the thermostat module
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public NAMain withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * It contains the current wifi status. The different thresholds to take into account are
     * RSSI_THRESHOLD_0 = 86 bad signal
     * RSSI_THRESHOLD_1 = 71 middle quality signal
     * RSSI_THRESHOLD_2 = 56 good signal
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifi_status")
    public Integer wifiStatus;

    public NAMain withWifiStatus(Integer wifiStatus) {
        this.wifiStatus = wifiStatus;
        return this;
    }
    
    public NAMain(){}
}
