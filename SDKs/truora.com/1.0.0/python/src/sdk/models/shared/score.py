"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import scoredetail as shared_scoredetail
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ScoreDataSetEnum(str, Enum):
    r"""Dataset summed up to create the score"""
    AFFILIATIONS_AND_INSURANCES = 'affiliations_and_insurances'
    ALERT_IN_MEDIA = 'alert_in_media'
    BEHAVIOR = 'behavior'
    BUSINESS_BACKGROUND = 'business_background'
    CRIMINAL_RECORD = 'criminal_record'
    DRIVING_LICENSES = 'driving_licenses'
    INTERNATIONAL_BACKGROUND = 'international_background'
    LEGAL_BACKGROUND = 'legal_background'
    PERSONAL_IDENTITY = 'personal_identity'
    PROFESSIONAL_BACKGROUND = 'professional_background'
    TRAFFIC_FINES = 'traffic_fines'
    VEHICLE_INFORMATION = 'vehicle_information'
    VEHICLE_PERMITS = 'vehicle_permits'
    TAXES_AND_FINANCES = 'taxes_and_finances'

class ScoreResultEnum(str, Enum):
    r"""Overall result of the data collected. If at least one collected data status is found, the result will be found, otherwise, it will be the most frecuent status"""
    PENDING = 'pending'
    FOUND = 'found'
    NOT_FOUND = 'not_found'
    ERROR = 'error'
    DELAYED = 'delayed'
    IGNORED = 'ignored'

class ScoreSeverityEnum(str, Enum):
    r"""Risk asociated with each category for the search according to the information found. None is returned when the person, vehicle or company is in the clear. Unknown is returned when the score is none due to a problem with one of the searches"""
    UNKNOWN = 'unknown'
    NONE = 'none'
    VERY_LOW = 'very_low'
    LOW = 'low'
    MEDIUM = 'medium'
    HIGH = 'high'
    VERY_HIGH = 'very_high'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Score:
    r"""Represents dataset scores. A score is a number between 0 and 1 that indicates how trustworthy the person, vehicle, or company is accordig to the result of the background check. Severity represents the risk associated with each dataset according to the background check. Keep in mind that you should use either the score or the severity but not both"""
    
    by_id: shared_scoredetail.ScoreDetail = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('by_id') }})
    r"""Represents score detail of a background check"""  
    by_name: shared_scoredetail.ScoreDetail = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('by_name') }})
    r"""Represents score detail of a background check"""  
    data_set: ScoreDataSetEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_set') }})
    r"""Dataset summed up to create the score"""  
    score: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score') }})
    r"""Dataset score. Number between 0 and 1 where 1 is the best score."""  
    severity: ScoreSeverityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('severity') }})
    r"""Risk asociated with each category for the search according to the information found. None is returned when the person, vehicle or company is in the clear. Unknown is returned when the score is none due to a problem with one of the searches"""  
    result: Optional[ScoreResultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})
    r"""Overall result of the data collected. If at least one collected data status is found, the result will be found, otherwise, it will be the most frecuent status"""  
    