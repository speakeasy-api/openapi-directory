<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetRepositoriesWorkspaceRepoSlugForksRequest
{
    /**
     * Query string to narrow down the response as per [filtering and sorting](/cloud/bitbucket/rest/intro/#filtering).
     * 
     * 
     * 
     * @var ?string $q
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q')]
    public ?string $q = null;
    
    /**
     * This can either be the repository slug or the UUID of the repository,
     * 
     * surrounded by curly-braces, for example: `{repository UUID}`.
     * 
     * 
     * @var string $repoSlug
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=repo_slug')]
    public string $repoSlug;
    
    /**
     * Filters the result based on the authenticated user's role on each repository.
     * 
     * 
     * * **member**: returns repositories to which the user has explicit read access
     * * **contributor**: returns repositories to which the user has explicit write access
     * * **admin**: returns repositories to which the user has explicit administrator access
     * * **owner**: returns all repositories owned by the current user
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetRepositoriesWorkspaceRepoSlugForksRoleEnum $role
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=role')]
    public ?GetRepositoriesWorkspaceRepoSlugForksRoleEnum $role = null;
    
    /**
     * Field by which the results should be sorted as per [filtering and sorting](/cloud/bitbucket/rest/intro/#filtering).
     * 
     * 
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * This can either be the workspace ID (slug) or the workspace UUID
     * 
     * surrounded by curly-braces, for example: `{workspace UUID}`.
     * 
     * 
     * @var string $workspace
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=workspace')]
    public string $workspace;
    
	public function __construct()
	{
		$this->q = null;
		$this->repoSlug = "";
		$this->role = null;
		$this->sort = null;
		$this->workspace = "";
	}
}
