/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProjectReference } from "./projectreference";
import { Expose, Type } from "class-transformer";

export class ProjectListProjects extends SpeakeasyBase {
  /**
   * A descriptive name for this project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendlyName" })
  friendlyName?: string;

  /**
   * An opaque ID of this project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The resource type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The numeric ID of this project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numericId" })
  numericId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "projectReference" })
  @Type(() => ProjectReference)
  projectReference?: ProjectReference;
}

/**
 * Successful response
 */
export class ProjectList extends SpeakeasyBase {
  /**
   * A hash of the page of results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The type of list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * A token to request the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Projects to which you have at least READ access.
   */
  @SpeakeasyMetadata({ elemType: ProjectListProjects })
  @Expose({ name: "projects" })
  @Type(() => ProjectListProjects)
  projects?: ProjectListProjects[];

  /**
   * The total number of projects in the list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalItems" })
  totalItems?: number;
}
