/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
 */
export enum MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum {
  Disabled = "disabled",
  Disabling = "disabling",
  Enabled = "enabled",
  Pending = "pending",
}

/**
 * The monitoring for the instance.
 */
export class MonitorInstancesResultInstanceMonitoringsMonitoring extends SpeakeasyBase {
  @SpeakeasyMetadata()
  state?: MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum;
}

/**
 * Describes the monitoring of an instance.
 */
export class MonitorInstancesResultInstanceMonitorings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  monitoring?: MonitorInstancesResultInstanceMonitoringsMonitoring;
}

/**
 * Success
 */
export class MonitorInstancesResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: MonitorInstancesResultInstanceMonitorings })
  instanceMonitorings?: MonitorInstancesResultInstanceMonitorings[];
}
