/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PricingSchedulePricingPeriod } from "./pricingschedulepricingperiod";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Placement cap cost option.
 */
export enum PricingScheduleCapCostOptionEnum {
  CapCostNone = "CAP_COST_NONE",
  CapCostMonthly = "CAP_COST_MONTHLY",
  CapCostCumulative = "CAP_COST_CUMULATIVE",
}

/**
 * Placement pricing type. This field is required on insertion.
 */
export enum PricingSchedulePricingTypeEnum {
  PricingTypeCpm = "PRICING_TYPE_CPM",
  PricingTypeCpc = "PRICING_TYPE_CPC",
  PricingTypeCpa = "PRICING_TYPE_CPA",
  PricingTypeFlatRateImpressions = "PRICING_TYPE_FLAT_RATE_IMPRESSIONS",
  PricingTypeFlatRateClicks = "PRICING_TYPE_FLAT_RATE_CLICKS",
  PricingTypeCpmActiveview = "PRICING_TYPE_CPM_ACTIVEVIEW",
}

/**
 * Pricing Schedule
 */
export class PricingSchedule extends SpeakeasyBase {
  /**
   * Placement cap cost option.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "capCostOption" })
  capCostOption?: PricingScheduleCapCostOptionEnum;

  /**
   * Whether cap costs are ignored by ad serving.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disregardOverdelivery" })
  disregardOverdelivery?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDate?: Date;

  /**
   * Whether this placement is flighted. If true, pricing periods will be computed automatically.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flighted" })
  flighted?: boolean;

  /**
   * Floodlight activity ID associated with this placement. This field should be set when placement pricing type is set to PRICING_TYPE_CPA.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "floodlightActivityId" })
  floodlightActivityId?: string;

  /**
   * Pricing periods for this placement.
   */
  @SpeakeasyMetadata({ elemType: PricingSchedulePricingPeriod })
  @Expose({ name: "pricingPeriods" })
  @Type(() => PricingSchedulePricingPeriod)
  pricingPeriods?: PricingSchedulePricingPeriod[];

  /**
   * Placement pricing type. This field is required on insertion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pricingType" })
  pricingType?: PricingSchedulePricingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "testingStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  testingStartDate?: Date;
}
