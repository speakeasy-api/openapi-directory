// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SchemaValueTypeEnum string

const (
	SchemaValueTypeEnumLong    SchemaValueTypeEnum = "LONG"
	SchemaValueTypeEnumInt     SchemaValueTypeEnum = "INT"
	SchemaValueTypeEnumString  SchemaValueTypeEnum = "STRING"
	SchemaValueTypeEnumFloat   SchemaValueTypeEnum = "FLOAT"
	SchemaValueTypeEnumDouble  SchemaValueTypeEnum = "DOUBLE"
	SchemaValueTypeEnumBoolean SchemaValueTypeEnum = "BOOLEAN"
)

func (e *SchemaValueTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LONG":
		fallthrough
	case "INT":
		fallthrough
	case "STRING":
		fallthrough
	case "FLOAT":
		fallthrough
	case "DOUBLE":
		fallthrough
	case "BOOLEAN":
		*e = SchemaValueTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SchemaValueTypeEnum: %s", s)
	}
}
