/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ImportContext - Database instance import context.
 */
public class ImportContext {
    /**
     * Import parameters specific to SQL Server .BAK files
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bakImportOptions")
    public ImportContextBakImportOptions bakImportOptions;

    public ImportContext withBakImportOptions(ImportContextBakImportOptions bakImportOptions) {
        this.bakImportOptions = bakImportOptions;
        return this;
    }
    
    /**
     * Options for importing data as CSV.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("csvImportOptions")
    public ImportContextCsvImportOptions csvImportOptions;

    public ImportContext withCsvImportOptions(ImportContextCsvImportOptions csvImportOptions) {
        this.csvImportOptions = csvImportOptions;
        return this;
    }
    
    /**
     * The target database for the import. If `fileType` is `SQL`, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If `fileType` is `CSV`, one database must be specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("database")
    public String database;

    public ImportContext withDatabase(String database) {
        this.database = database;
        return this;
    }
    
    /**
     * The file type for the specified uri. * `SQL`: The file contains SQL statements. * `CSV`: The file contains CSV data. * `BAK`: The file contains backup data for a SQL Server instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileType")
    public ImportContextFileTypeEnum fileType;

    public ImportContext withFileType(ImportContextFileTypeEnum fileType) {
        this.fileType = fileType;
        return this;
    }
    
    /**
     * The PostgreSQL user for this import operation. PostgreSQL instances only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("importUser")
    public String importUser;

    public ImportContext withImportUser(String importUser) {
        this.importUser = importUser;
        return this;
    }
    
    /**
     * This is always `sql#importContext`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public ImportContext withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Path to the import file in Cloud Storage, in the form `gs://bucketName/fileName`. Compressed gzip files (.gz) are supported when `fileType` is `SQL`. The instance must have write permissions to the bucket and read access to the file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uri")
    public String uri;

    public ImportContext withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
    public ImportContext(){}
}
