"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Model = exports.ModelTypeEnum = exports.ModelSubtypeEnum = exports.ModelLicenseEnum = exports.ModelFeePayerEnum = exports.ModelBillingPeriodEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The billingPeriod along with the billingPeriodUnit make up the time between billing cycles
 */
var ModelBillingPeriodEnum;
(function (ModelBillingPeriodEnum) {
    ModelBillingPeriodEnum["Daily"] = "daily";
    ModelBillingPeriodEnum["Weekly"] = "weekly";
    ModelBillingPeriodEnum["Monthly"] = "monthly";
    ModelBillingPeriodEnum["Annually"] = "annually";
})(ModelBillingPeriodEnum = exports.ModelBillingPeriodEnum || (exports.ModelBillingPeriodEnum = {}));
/**
 * The payee that will be paying for any payment processing fees
 */
var ModelFeePayerEnum;
(function (ModelFeePayerEnum) {
    ModelFeePayerEnum["Developer"] = "developer";
    ModelFeePayerEnum["Marketplace"] = "marketplace";
})(ModelFeePayerEnum = exports.ModelFeePayerEnum || (exports.ModelFeePayerEnum = {}));
/**
 * The license model type. Single allows a purchase to a single user or organization
 */
var ModelLicenseEnum;
(function (ModelLicenseEnum) {
    ModelLicenseEnum["Single"] = "single";
})(ModelLicenseEnum = exports.ModelLicenseEnum || (exports.ModelLicenseEnum = {}));
/**
 * The pricing model subtype
 */
var ModelSubtypeEnum;
(function (ModelSubtypeEnum) {
    ModelSubtypeEnum["Usage"] = "usage";
    ModelSubtypeEnum["Seat"] = "seat";
})(ModelSubtypeEnum = exports.ModelSubtypeEnum || (exports.ModelSubtypeEnum = {}));
/**
 * The pricing model type. Free has no cost, single has a one time purchase cost and recurring requires a monthly subscription
 */
var ModelTypeEnum;
(function (ModelTypeEnum) {
    ModelTypeEnum["Free"] = "free";
    ModelTypeEnum["Single"] = "single";
    ModelTypeEnum["Recurring"] = "recurring";
})(ModelTypeEnum = exports.ModelTypeEnum || (exports.ModelTypeEnum = {}));
/**
 * The model that describes the cost and pricing for apps
 */
var Model = /** @class */ (function (_super) {
    __extends(Model, _super);
    function Model() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Model.prototype, "billingPeriod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Model.prototype, "billingPeriodUnit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Model.prototype, "commission", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Model.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], Model.prototype, "customData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Model.prototype, "feePayer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Model.prototype, "license", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Model.prototype, "modelId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Model.prototype, "price", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Model.prototype, "subtype", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Model.prototype, "trial", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Model.prototype, "type", void 0);
    return Model;
}(utils_1.SpeakeasyBase));
exports.Model = Model;
