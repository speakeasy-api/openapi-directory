// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ThemeColorPairTypeEnum - The type of the theme color.
type ThemeColorPairTypeEnum string

const (
	ThemeColorPairTypeEnumThemeColorTypeUnspecified ThemeColorPairTypeEnum = "THEME_COLOR_TYPE_UNSPECIFIED"
	ThemeColorPairTypeEnumDark1                     ThemeColorPairTypeEnum = "DARK1"
	ThemeColorPairTypeEnumLight1                    ThemeColorPairTypeEnum = "LIGHT1"
	ThemeColorPairTypeEnumDark2                     ThemeColorPairTypeEnum = "DARK2"
	ThemeColorPairTypeEnumLight2                    ThemeColorPairTypeEnum = "LIGHT2"
	ThemeColorPairTypeEnumAccent1                   ThemeColorPairTypeEnum = "ACCENT1"
	ThemeColorPairTypeEnumAccent2                   ThemeColorPairTypeEnum = "ACCENT2"
	ThemeColorPairTypeEnumAccent3                   ThemeColorPairTypeEnum = "ACCENT3"
	ThemeColorPairTypeEnumAccent4                   ThemeColorPairTypeEnum = "ACCENT4"
	ThemeColorPairTypeEnumAccent5                   ThemeColorPairTypeEnum = "ACCENT5"
	ThemeColorPairTypeEnumAccent6                   ThemeColorPairTypeEnum = "ACCENT6"
	ThemeColorPairTypeEnumHyperlink                 ThemeColorPairTypeEnum = "HYPERLINK"
	ThemeColorPairTypeEnumFollowedHyperlink         ThemeColorPairTypeEnum = "FOLLOWED_HYPERLINK"
	ThemeColorPairTypeEnumText1                     ThemeColorPairTypeEnum = "TEXT1"
	ThemeColorPairTypeEnumBackground1               ThemeColorPairTypeEnum = "BACKGROUND1"
	ThemeColorPairTypeEnumText2                     ThemeColorPairTypeEnum = "TEXT2"
	ThemeColorPairTypeEnumBackground2               ThemeColorPairTypeEnum = "BACKGROUND2"
)

func (e *ThemeColorPairTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "THEME_COLOR_TYPE_UNSPECIFIED":
		fallthrough
	case "DARK1":
		fallthrough
	case "LIGHT1":
		fallthrough
	case "DARK2":
		fallthrough
	case "LIGHT2":
		fallthrough
	case "ACCENT1":
		fallthrough
	case "ACCENT2":
		fallthrough
	case "ACCENT3":
		fallthrough
	case "ACCENT4":
		fallthrough
	case "ACCENT5":
		fallthrough
	case "ACCENT6":
		fallthrough
	case "HYPERLINK":
		fallthrough
	case "FOLLOWED_HYPERLINK":
		fallthrough
	case "TEXT1":
		fallthrough
	case "BACKGROUND1":
		fallthrough
	case "TEXT2":
		fallthrough
	case "BACKGROUND2":
		*e = ThemeColorPairTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ThemeColorPairTypeEnum: %s", s)
	}
}

// ThemeColorPair - A pair mapping a theme color type to the concrete color it represents.
type ThemeColorPair struct {
	// An RGB color.
	Color *RgbColor `json:"color,omitempty"`
	// The type of the theme color.
	Type *ThemeColorPairTypeEnum `json:"type,omitempty"`
}
