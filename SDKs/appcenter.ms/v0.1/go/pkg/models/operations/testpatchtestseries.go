// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type TestPatchTestSeriesSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type TestPatchTestSeriesPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The slug of the test series
	TestSeriesSlug string `pathParam:"style=simple,explode=false,name=test_series_slug"`
}

type TestPatchTestSeriesNameOfTheTestSeries struct {
	// Name of the new test series
	Name string `json:"name"`
}

type TestPatchTestSeriesRequest struct {
	PathParams TestPatchTestSeriesPathParams
	Request    TestPatchTestSeriesNameOfTheTestSeries `request:"mediaType=application/json"`
	Security   TestPatchTestSeriesSecurity
}

// TestPatchTestSeriesTestSeriesTestRunSummary - Most important information about a test run.
type TestPatchTestSeriesTestSeriesTestRunSummary struct {
	// Tells whether the test run has completed
	Completed *bool `json:"completed,omitempty"`
	// Date of the test run.
	Date *string `json:"date,omitempty"`
	// Number of failed tests
	Failed *float64 `json:"failed,omitempty"`
	// Number of passed tests
	Passed *float64 `json:"passed,omitempty"`
	// Human-readable status of the test run.
	StatusDescription *string `json:"statusDescription,omitempty"`
}

// TestPatchTestSeriesTestSeries - Summary of a single test series
type TestPatchTestSeriesTestSeries struct {
	// Date of the latest test run that used this test series
	MostRecentActivity *string `json:"mostRecentActivity,omitempty"`
	// Name of the test series
	Name string `json:"name"`
	// Unique, human-readable identifier of the test series
	Slug string `json:"slug"`
	// Most recent test runs
	TestRuns []TestPatchTestSeriesTestSeriesTestRunSummary `json:"testRuns,omitempty"`
}

type TestPatchTestSeriesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Test series was successfully patched
	TestSeries *TestPatchTestSeriesTestSeries
}
