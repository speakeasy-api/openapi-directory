/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LineItemSummary } from "./lineitemsummary";
import { OrderSummaryPricing } from "./ordersummarypricing";
import { Expose, Type } from "class-transformer";

export class OrderSummary extends SpeakeasyBase {
  /**
   * Date and time when the current order was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt: string;

  /**
   * Currency in which the order was placed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  /**
   * Sets of two or more line items in current order
   */
  @SpeakeasyMetadata({ elemType: LineItemSummary })
  @Expose({ name: "items" })
  @Type(() => LineItemSummary)
  items: LineItemSummary[];

  /**
   * Unique identifier of the current order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderId" })
  orderId: string;

  /**
   * Unique identifier of the parent order. All refund/chargeback orders are tied to the original order.
   *
   * @remarks
   * The orginal order's `orderId` is the `parentOrderId` of refund/chargeback orders
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentOrderId" })
  parentOrderId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pricing" })
  @Type(() => OrderSummaryPricing)
  pricing: OrderSummaryPricing;
}
