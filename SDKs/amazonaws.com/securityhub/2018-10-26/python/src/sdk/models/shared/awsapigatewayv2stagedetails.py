"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsapigatewayaccesslogsettings as shared_awsapigatewayaccesslogsettings
from ..shared import awsapigatewayv2routesettings as shared_awsapigatewayv2routesettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsAPIGatewayV2StageDetails:
    r"""Contains information about a version 2 stage for Amazon API Gateway."""
    
    access_log_settings: Optional[shared_awsapigatewayaccesslogsettings.AwsAPIGatewayAccessLogSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccessLogSettings'), 'exclude': lambda f: f is None }})  
    api_gateway_managed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ApiGatewayManaged'), 'exclude': lambda f: f is None }})  
    auto_deploy: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoDeploy'), 'exclude': lambda f: f is None }})  
    client_certificate_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientCertificateId'), 'exclude': lambda f: f is None }})  
    created_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedDate'), 'exclude': lambda f: f is None }})  
    default_route_settings: Optional[shared_awsapigatewayv2routesettings.AwsAPIGatewayV2RouteSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultRouteSettings'), 'exclude': lambda f: f is None }})  
    deployment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeploymentId'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    last_deployment_status_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastDeploymentStatusMessage'), 'exclude': lambda f: f is None }})  
    last_updated_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastUpdatedDate'), 'exclude': lambda f: f is None }})  
    route_settings: Optional[shared_awsapigatewayv2routesettings.AwsAPIGatewayV2RouteSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RouteSettings'), 'exclude': lambda f: f is None }})  
    stage_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StageName'), 'exclude': lambda f: f is None }})  
    stage_variables: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StageVariables'), 'exclude': lambda f: f is None }})  
    