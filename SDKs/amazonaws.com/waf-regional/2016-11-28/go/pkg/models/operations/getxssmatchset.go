// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetXSSMatchSetXAmzTargetEnum
type GetXSSMatchSetXAmzTargetEnum string

const (
	GetXSSMatchSetXAmzTargetEnumAwswafRegional20161128GetXSSMatchSet GetXSSMatchSetXAmzTargetEnum = "AWSWAF_Regional_20161128.GetXssMatchSet"
)

func (e GetXSSMatchSetXAmzTargetEnum) ToPointer() *GetXSSMatchSetXAmzTargetEnum {
	return &e
}

func (e *GetXSSMatchSetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSWAF_Regional_20161128.GetXssMatchSet":
		*e = GetXSSMatchSetXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetXSSMatchSetXAmzTargetEnum: %v", v)
	}
}

type GetXSSMatchSetRequest struct {
	GetXSSMatchSetRequest shared.GetXSSMatchSetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            GetXSSMatchSetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetXSSMatchSetResponse struct {
	ContentType string
	// Success
	GetXSSMatchSetResponse *shared.GetXSSMatchSetResponse
	StatusCode             int
	RawResponse            *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
}
