"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import orderreturnspartialrefund as shared_orderreturnspartialrefund
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderreturnsRefundOperation:
    
    full_refund: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullRefund'), 'exclude': lambda f: f is None }})
    r"""If true, the item will be fully refunded. Allowed only when payment_type is FOP. Merchant can choose this refund option to indicate the full remaining amount of corresponding object to be refunded to the customer through FOP."""  
    partial_refund: Optional[shared_orderreturnspartialrefund.OrderreturnsPartialRefund] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partialRefund'), 'exclude': lambda f: f is None }})  
    payment_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentType'), 'exclude': lambda f: f is None }})
    r"""The payment way of issuing refund. Default value is ORIGINAL_FOP if not set."""  
    reason_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reasonText'), 'exclude': lambda f: f is None }})
    r"""The explanation of the reason."""  
    return_refund_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnRefundReason'), 'exclude': lambda f: f is None }})
    r"""Code of the refund reason."""  
    