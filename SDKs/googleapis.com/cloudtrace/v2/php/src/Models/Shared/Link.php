<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Link - A pointer from the current span to another span in the same trace or in a different trace. For example, this can be used in batching operations, where a single batch handler processes multiple requests from different traces or when the handler receives a request from a different project.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Link
{
    /**
     * A set of attributes as key-value pairs.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Attributes $attributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('attributes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Attributes')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Attributes $attributes = null;
    
    /**
     * The `[SPAN_ID]` for a span within a trace.
     * 
     * @var ?string $spanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('spanId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $spanId = null;
    
    /**
     * The `[TRACE_ID]` for a trace within a project.
     * 
     * @var ?string $traceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('traceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $traceId = null;
    
    /**
     * The relationship of the current span relative to the linked span.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LinkTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LinkTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LinkTypeEnum $type = null;
    
	public function __construct()
	{
		$this->attributes = null;
		$this->spanId = null;
		$this->traceId = null;
		$this->type = null;
	}
}
