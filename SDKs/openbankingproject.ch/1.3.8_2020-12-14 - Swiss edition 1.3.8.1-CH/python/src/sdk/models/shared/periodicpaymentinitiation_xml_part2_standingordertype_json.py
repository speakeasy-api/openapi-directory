"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dayofexecution_enum as shared_dayofexecution_enum
from ..shared import executionrule_enum as shared_executionrule_enum
from ..shared import frequencycode_enum as shared_frequencycode_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PeriodicPaymentInitiationXMLPart2StandingorderTypeJSON:
    r"""The body part 2 of a periodic payment initation request containes the execution related informations
    of the periodic payment.
    """
    
    frequency: shared_frequencycode_enum.FrequencyCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frequency') }})
    r"""The following codes from the \\"EventFrequency7Code\\" of ISO 20022 are supported:
    - \"Daily\"
    - \"Weekly\"
    - \"EveryTwoWeeks\"
    - \"Monthly\"
    - \"EveryTwoMonths\"
    - \"Quarterly\"
    - \"SemiAnnual\"
    - \"Annual\"
    - \"MonthlyVariable\" 
    """  
    start_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startDate'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""The first applicable day of execution starting from this date is the first payment."""  
    day_of_execution: Optional[shared_dayofexecution_enum.DayOfExecutionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfExecution'), 'exclude': lambda f: f is None }})
    r"""Day of execution as string.
    
    This string consists of up two characters.
    Leading zeroes are not allowed.
    
    31 is ultimo of the month.
    """  
    end_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The last applicable day of execution.
    If not given, it is an infinite standing order.
    """  
    execution_rule: Optional[shared_executionrule_enum.ExecutionRuleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionRule'), 'exclude': lambda f: f is None }})
    r"""\\"following\\" or \\"preceding\\" supported as values.
    This data attribute defines the behaviour when recurring payment dates falls on a weekend or bank holiday.
    The payment is then executed either the \"preceding\" or \"following\" working day.
    ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting
    this execution rule.
    """  
    