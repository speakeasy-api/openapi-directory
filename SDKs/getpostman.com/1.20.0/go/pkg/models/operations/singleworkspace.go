// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type SingleWorkspaceRequest struct {
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspace_id"`
}

type SingleWorkspace404ApplicationJSONError struct {
	Message *string `json:"message,omitempty"`
	Name    *string `json:"name,omitempty"`
}

// SingleWorkspace404ApplicationJSON - Workspace Not Found
type SingleWorkspace404ApplicationJSON struct {
	Error *SingleWorkspace404ApplicationJSONError `json:"error,omitempty"`
}

type SingleWorkspace200ApplicationJSONWorkspaceCollections struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	UID  *string `json:"uid,omitempty"`
}

type SingleWorkspace200ApplicationJSONWorkspaceEnvironments struct {
	ID   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	UID  *string `json:"uid,omitempty"`
}

type SingleWorkspace200ApplicationJSONWorkspace struct {
	Collections  []SingleWorkspace200ApplicationJSONWorkspaceCollections  `json:"collections,omitempty"`
	Description  *string                                                  `json:"description,omitempty"`
	Environments []SingleWorkspace200ApplicationJSONWorkspaceEnvironments `json:"environments,omitempty"`
	ID           *string                                                  `json:"id,omitempty"`
	Name         *string                                                  `json:"name,omitempty"`
	Type         *string                                                  `json:"type,omitempty"`
}

// SingleWorkspace200ApplicationJSON - Valid Response
type SingleWorkspace200ApplicationJSON struct {
	Workspace *SingleWorkspace200ApplicationJSONWorkspace `json:"workspace,omitempty"`
}

type SingleWorkspaceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Valid Response
	SingleWorkspace200ApplicationJSONObject *SingleWorkspace200ApplicationJSON
	// Workspace Not Found
	SingleWorkspace404ApplicationJSONObject *SingleWorkspace404ApplicationJSON
}
