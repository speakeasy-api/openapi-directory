<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudDatacatalogV1beta1ColumnSchema - Representation of a column within a schema. Columns could be nested inside other columns.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudDatacatalogV1beta1ColumnSchema
{
    /**
     * Required. Name of the column.
     * 
     * @var ?string $column
     */
	#[\JMS\Serializer\Annotation\SerializedName('column')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $column = null;
    
    /**
     * Optional. Description of the column. Default value is an empty string.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Optional. A column's mode indicates whether the values in this column are required, nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported. Default mode is `NULLABLE`.
     * 
     * @var ?string $mode
     */
	#[\JMS\Serializer\Annotation\SerializedName('mode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mode = null;
    
    /**
     * Optional. Schema of sub-columns. A column can have zero or more sub-columns.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDatacatalogV1beta1ColumnSchema> $subcolumns
     */
	#[\JMS\Serializer\Annotation\SerializedName('subcolumns')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleCloudDatacatalogV1beta1ColumnSchema>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subcolumns = null;
    
    /**
     * Required. Type of the column.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->column = null;
		$this->description = null;
		$this->mode = null;
		$this->subcolumns = null;
		$this->type = null;
	}
}
