/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Message } from "./message";
import { Expose, Type } from "class-transformer";

export class MessagesResponseError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class MessagesResponsePagination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "offset" })
  offset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;
}

/**
 * successful operation
 */
export class MessagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Message })
  @Expose({ name: "data" })
  @Type(() => Message)
  data?: Message[];

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => MessagesResponseError)
  error?: MessagesResponseError;

  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => MessagesResponsePagination)
  pagination?: MessagesResponsePagination;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;
}
