// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutFirewallRuleGroupPolicyXAmzTargetEnum
type PutFirewallRuleGroupPolicyXAmzTargetEnum string

const (
	PutFirewallRuleGroupPolicyXAmzTargetEnumRoute53ResolverPutFirewallRuleGroupPolicy PutFirewallRuleGroupPolicyXAmzTargetEnum = "Route53Resolver.PutFirewallRuleGroupPolicy"
)

func (e PutFirewallRuleGroupPolicyXAmzTargetEnum) ToPointer() *PutFirewallRuleGroupPolicyXAmzTargetEnum {
	return &e
}

func (e *PutFirewallRuleGroupPolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Route53Resolver.PutFirewallRuleGroupPolicy":
		*e = PutFirewallRuleGroupPolicyXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutFirewallRuleGroupPolicyXAmzTargetEnum: %v", v)
	}
}

type PutFirewallRuleGroupPolicyRequest struct {
	PutFirewallRuleGroupPolicyRequest shared.PutFirewallRuleGroupPolicyRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        PutFirewallRuleGroupPolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutFirewallRuleGroupPolicyResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// Success
	PutFirewallRuleGroupPolicyResponse *shared.PutFirewallRuleGroupPolicyResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
