// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteStoredQueryXAmzTargetEnum
type DeleteStoredQueryXAmzTargetEnum string

const (
	DeleteStoredQueryXAmzTargetEnumStarlingDoveServiceDeleteStoredQuery DeleteStoredQueryXAmzTargetEnum = "StarlingDoveService.DeleteStoredQuery"
)

func (e *DeleteStoredQueryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "StarlingDoveService.DeleteStoredQuery":
		*e = DeleteStoredQueryXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteStoredQueryXAmzTargetEnum: %s", s)
	}
}

type DeleteStoredQueryRequest struct {
	DeleteStoredQueryRequest shared.DeleteStoredQueryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               DeleteStoredQueryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteStoredQueryResponse struct {
	ContentType string
	// Success
	DeleteStoredQueryResponse map[string]interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
