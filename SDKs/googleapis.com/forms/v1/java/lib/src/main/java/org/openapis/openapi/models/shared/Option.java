/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Option - An option for a Choice question.
 */
public class Option {
    /**
     * Section navigation type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("goToAction")
    public OptionGoToActionEnum goToAction;

    public Option withGoToAction(OptionGoToActionEnum goToAction) {
        this.goToAction = goToAction;
        return this;
    }
    
    /**
     * Item ID of section header to go to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("goToSectionId")
    public String goToSectionId;

    public Option withGoToSectionId(String goToSectionId) {
        this.goToSectionId = goToSectionId;
        return this;
    }
    
    /**
     * Data representing an image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public Image image;

    public Option withImage(Image image) {
        this.image = image;
        return this;
    }
    
    /**
     * Whether the option is "other". Currently only applies to `RADIO` and `CHECKBOX` choice types, but is not allowed in a QuestionGroupItem.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isOther")
    public Boolean isOther;

    public Option withIsOther(Boolean isOther) {
        this.isOther = isOther;
        return this;
    }
    
    /**
     * Required. The choice as presented to the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;

    public Option withValue(String value) {
        this.value = value;
        return this;
    }
    
    public Option(){}
}
