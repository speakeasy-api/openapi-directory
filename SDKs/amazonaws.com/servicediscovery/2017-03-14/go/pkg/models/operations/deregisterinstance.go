// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeregisterInstanceXAmzTargetEnum
type DeregisterInstanceXAmzTargetEnum string

const (
	DeregisterInstanceXAmzTargetEnumRoute53AutoNamingV20170314DeregisterInstance DeregisterInstanceXAmzTargetEnum = "Route53AutoNaming_v20170314.DeregisterInstance"
)

func (e DeregisterInstanceXAmzTargetEnum) ToPointer() *DeregisterInstanceXAmzTargetEnum {
	return &e
}

func (e *DeregisterInstanceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Route53AutoNaming_v20170314.DeregisterInstance":
		*e = DeregisterInstanceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeregisterInstanceXAmzTargetEnum: %v", v)
	}
}

type DeregisterInstanceRequest struct {
	DeregisterInstanceRequest shared.DeregisterInstanceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                DeregisterInstanceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeregisterInstanceResponse struct {
	ContentType string
	// Success
	DeregisterInstanceResponse *shared.DeregisterInstanceResponse
	// DuplicateRequest
	DuplicateRequest interface{}
	// InstanceNotFound
	InstanceNotFound interface{}
	// InvalidInput
	InvalidInput interface{}
	// ResourceInUse
	ResourceInUse interface{}
	// ServiceNotFound
	ServiceNotFound interface{}
	StatusCode      int
	RawResponse     *http.Response
}
