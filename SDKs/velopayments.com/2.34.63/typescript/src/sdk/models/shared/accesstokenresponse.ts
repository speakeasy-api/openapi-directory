/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserInfo } from "./userinfo";
import { Expose, Type } from "class-transformer";

/**
 * User request has been validated
 */
export class AccessTokenResponse extends SpeakeasyBase {
  /**
   * Bearer token used in headers to access secure endpoints
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access_token" })
  accessToken?: string;

  /**
   * If the user is a payee then the payeeId<P>
   *
   * @remarks
   * If the user is a payor then the payorId
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entityIds" })
  entityIds?: string[];

  /**
   * The lifetime in seconds of the access token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_in" })
  expiresIn?: number;

  /**
   * can be used to obtain a new access token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refresh_token" })
  refreshToken?: string;

  /**
   * the scope of the access token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * the type of the token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token_type" })
  tokenType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_info" })
  @Type(() => UserInfo)
  userInfo?: UserInfo;
}
