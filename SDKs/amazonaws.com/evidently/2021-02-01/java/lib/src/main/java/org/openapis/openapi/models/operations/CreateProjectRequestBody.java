/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateProjectRequestBody {
    /**
     * &lt;p&gt;Use this parameter to configure client-side evaluation for your project. Client-side evaluation allows your application to assign variations to user sessions locally instead of by calling the &lt;a href="https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_EvaluateFeature.html"&gt;EvaluateFeature&lt;/a&gt; operation to assign the variations. This mitigates the latency and availability risks that come with an API call.&lt;/p&gt; &lt;p&gt; &lt;code&gt;ProjectAppConfigResource&lt;/code&gt; is a structure that defines the configuration of how your application integrates with AppConfig to run client-side evaluation.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appConfigResource")
    public CreateProjectRequestBodyAppConfigResource appConfigResource;

    public CreateProjectRequestBody withAppConfigResource(CreateProjectRequestBodyAppConfigResource appConfigResource) {
        this.appConfigResource = appConfigResource;
        return this;
    }
    
    /**
     * A structure that contains information about where Evidently is to store evaluation events for longer term storage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataDelivery")
    public CreateProjectRequestBodyDataDelivery dataDelivery;

    public CreateProjectRequestBody withDataDelivery(CreateProjectRequestBodyDataDelivery dataDelivery) {
        this.dataDelivery = dataDelivery;
        return this;
    }
    
    /**
     * An optional description of the project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CreateProjectRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The name for the project.
     */
    @JsonProperty("name")
    public String name;

    public CreateProjectRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * &lt;p&gt;Assigns one or more tags (key-value pairs) to the project.&lt;/p&gt; &lt;p&gt;Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.&lt;/p&gt; &lt;p&gt;Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.&lt;/p&gt; &lt;p&gt;You can associate as many as 50 tags with a project.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"&gt;Tagging Amazon Web Services resources&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateProjectRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateProjectRequestBody(@JsonProperty("name") String name) {
        this.name = name;
  }
}
