// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// URLRestrictionRestrictionTypeEnum - The restriction type for the specified URL.
type URLRestrictionRestrictionTypeEnum string

const (
	URLRestrictionRestrictionTypeEnumRestrictionTypeUnspecified URLRestrictionRestrictionTypeEnum = "RESTRICTION_TYPE_UNSPECIFIED"
	URLRestrictionRestrictionTypeEnumContains                   URLRestrictionRestrictionTypeEnum = "CONTAINS"
	URLRestrictionRestrictionTypeEnumEquals                     URLRestrictionRestrictionTypeEnum = "EQUALS"
	URLRestrictionRestrictionTypeEnumStartsWith                 URLRestrictionRestrictionTypeEnum = "STARTS_WITH"
	URLRestrictionRestrictionTypeEnumEndsWith                   URLRestrictionRestrictionTypeEnum = "ENDS_WITH"
	URLRestrictionRestrictionTypeEnumDoesNotEqual               URLRestrictionRestrictionTypeEnum = "DOES_NOT_EQUAL"
	URLRestrictionRestrictionTypeEnumDoesNotContain             URLRestrictionRestrictionTypeEnum = "DOES_NOT_CONTAIN"
	URLRestrictionRestrictionTypeEnumDoesNotStartWith           URLRestrictionRestrictionTypeEnum = "DOES_NOT_START_WITH"
	URLRestrictionRestrictionTypeEnumDoesNotEndWith             URLRestrictionRestrictionTypeEnum = "DOES_NOT_END_WITH"
)

func (e URLRestrictionRestrictionTypeEnum) ToPointer() *URLRestrictionRestrictionTypeEnum {
	return &e
}

func (e *URLRestrictionRestrictionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RESTRICTION_TYPE_UNSPECIFIED":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "EQUALS":
		fallthrough
	case "STARTS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "DOES_NOT_EQUAL":
		fallthrough
	case "DOES_NOT_CONTAIN":
		fallthrough
	case "DOES_NOT_START_WITH":
		fallthrough
	case "DOES_NOT_END_WITH":
		*e = URLRestrictionRestrictionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for URLRestrictionRestrictionTypeEnum: %v", v)
	}
}

// URLRestriction - Represents the URL restriction (for the URL captured by the pixel callback) for a user list.
type URLRestriction struct {
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	EndDate *Date `json:"endDate,omitempty"`
	// The restriction type for the specified URL.
	RestrictionType *URLRestrictionRestrictionTypeEnum `json:"restrictionType,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	StartDate *Date `json:"startDate,omitempty"`
	// Required. The URL to use for applying the restriction on the user list.
	URL *string `json:"url,omitempty"`
}
