// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SslCertificateTypeEnum - The type of the certificate:
// <ul><li>Standard: Certificate for a single domain.</li><li>Multi domain: Certificate for multiple (sub)domains belonging to the same owner.</li><li>Wildcard: Certificate for all the subdomains.</li></ul>
type SslCertificateTypeEnum string

const (
	SslCertificateTypeEnumStandard    SslCertificateTypeEnum = "standard"
	SslCertificateTypeEnumMultiDomain SslCertificateTypeEnum = "multi_domain"
	SslCertificateTypeEnumWildcard    SslCertificateTypeEnum = "wildcard"
)

func (e SslCertificateTypeEnum) ToPointer() *SslCertificateTypeEnum {
	return &e
}

func (e *SslCertificateTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "standard":
		fallthrough
	case "multi_domain":
		fallthrough
	case "wildcard":
		*e = SslCertificateTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SslCertificateTypeEnum: %v", v)
	}
}
