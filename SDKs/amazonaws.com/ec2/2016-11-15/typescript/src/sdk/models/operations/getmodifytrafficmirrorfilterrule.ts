/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GETModifyTrafficMirrorFilterRuleActionEnum {
  ModifyTrafficMirrorFilterRule = "ModifyTrafficMirrorFilterRule",
}

/**
 * Information about the Traffic Mirror filter rule port range.
 */
export class GETModifyTrafficMirrorFilterRuleDestinationPortRange extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=FromPort" })
  fromPort?: number;

  @SpeakeasyMetadata({ data: "queryParam, name=ToPort" })
  toPort?: number;
}

/**
 * The action to assign to the rule.
 */
export enum GETModifyTrafficMirrorFilterRuleRuleActionEnum {
  Accept = "accept",
  Reject = "reject",
}

/**
 * Information about the Traffic Mirror filter rule port range.
 */
export class GETModifyTrafficMirrorFilterRuleSourcePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=FromPort" })
  fromPort?: number;

  @SpeakeasyMetadata({ data: "queryParam, name=ToPort" })
  toPort?: number;
}

/**
 * The type of traffic to assign to the rule.
 */
export enum GETModifyTrafficMirrorFilterRuleTrafficDirectionEnum {
  Ingress = "ingress",
  Egress = "egress",
}

export enum GETModifyTrafficMirrorFilterRuleVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETModifyTrafficMirrorFilterRuleRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETModifyTrafficMirrorFilterRuleActionEnum;

  /**
   * The description to assign to the Traffic Mirror rule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Description",
  })
  description?: string;

  /**
   * The destination CIDR block to assign to the Traffic Mirror rule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DestinationCidrBlock",
  })
  destinationCidrBlock?: string;

  /**
   * The destination ports that are associated with the Traffic Mirror rule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DestinationPortRange",
  })
  destinationPortRange?: GETModifyTrafficMirrorFilterRuleDestinationPortRange;

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The protocol, for example TCP, to assign to the Traffic Mirror rule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Protocol",
  })
  protocol?: number;

  /**
   * <p>The properties that you want to remove from the Traffic Mirror filter rule.</p> <p>When you remove a property from a Traffic Mirror filter rule, the property is set to the default.</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RemoveField",
  })
  removeField?: shared.TrafficMirrorFilterRuleFieldEnum[];

  /**
   * The action to assign to the rule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RuleAction",
  })
  ruleAction?: GETModifyTrafficMirrorFilterRuleRuleActionEnum;

  /**
   * The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RuleNumber",
  })
  ruleNumber?: number;

  /**
   * The source CIDR block to assign to the Traffic Mirror rule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SourceCidrBlock",
  })
  sourceCidrBlock?: string;

  /**
   * The port range to assign to the Traffic Mirror rule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SourcePortRange",
  })
  sourcePortRange?: GETModifyTrafficMirrorFilterRuleSourcePortRange;

  /**
   * The type of traffic to assign to the rule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=TrafficDirection",
  })
  trafficDirection?: GETModifyTrafficMirrorFilterRuleTrafficDirectionEnum;

  /**
   * The ID of the Traffic Mirror rule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=TrafficMirrorFilterRuleId",
  })
  trafficMirrorFilterRuleId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETModifyTrafficMirrorFilterRuleVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETModifyTrafficMirrorFilterRuleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
