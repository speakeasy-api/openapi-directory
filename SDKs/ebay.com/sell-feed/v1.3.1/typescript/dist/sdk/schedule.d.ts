import * as operations from "./models/operations";
import * as shared from "./models/shared";
import { AxiosInstance, AxiosRequestConfig } from "axios";
export declare class Schedule {
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    _language: string;
    _sdkVersion: string;
    _genVersion: string;
    constructor(defaultClient: AxiosInstance, securityClient: AxiosInstance, serverURL: string, language: string, sdkVersion: string, genVersion: string);
    /**
     * This method creates a schedule, which is a subscription to the specified schedule template. A schedule periodically generates a report for the <strong>feedType</strong> specified by the template. Specify the same <strong>feedType</strong> as the <strong>feedType</strong> of the associated schedule template. When creating the schedule, if available from the template, you can specify a preferred trigger hour, day of the week, or day of the month. These and other fields are conditionally available as specified by the template.<p> <span class="tablenote"><strong>Note:</strong> Make sure to include all fields required by the schedule template (<strong>scheduleTemplateId</strong>). Call the <strong>getScheduleTemplate</strong> method (or the <strong>getScheduleTemplates</strong> method), to find out which fields are required or optional. If a field is optional and a default value is provided by the template, the default value will be used if omitted from the payload.</span></p>A successful call returns the location response header containing the <strong>getSchedule</strong> call URI to retrieve the schedule you just created. The URL includes the eBay-assigned schedule ID, which you can use to reference the schedule task. <br /><br />To retrieve the details of the create schedule task, use the <strong>getSchedule</strong> method for a single schedule ID or the <strong>getSchedules</strong> method to retrieve all schedule details for the specified <strong>feed_type</strong>. The number of schedules for each feedType is limited. Error code 160031 is returned when you have reached this maximum.<p> <span class="tablenote"><strong>Note:</strong> Except for schedules with a HALF-HOUR frequency, all schedules will ideally run at the start of each hour ('00' minutes). Actual start time may vary time may vary due to load and other factors.</span></p>
     */
    createSchedule(req: shared.CreateUserScheduleRequest, security: operations.CreateScheduleSecurity, config?: AxiosRequestConfig): Promise<operations.CreateScheduleResponse>;
    /**
     * This method deletes an existing schedule. Specify the schedule to delete using the <strong>schedule_id</strong> path parameter.
     */
    deleteSchedule(req: operations.DeleteScheduleRequest, security: operations.DeleteScheduleSecurity, config?: AxiosRequestConfig): Promise<operations.DeleteScheduleResponse>;
    /**
     * This method downloads the latest result file generated by the schedule. The response of this call is a compressed or uncompressed CSV, XML, or JSON file, with the applicable file extension (for example: csv.gz). Specify the <strong>schedule_id</strong> path parameter to download its last generated file.
     */
    getLatestResultFile(req: operations.GetLatestResultFileRequest, security: operations.GetLatestResultFileSecurity, config?: AxiosRequestConfig): Promise<operations.GetLatestResultFileResponse>;
    /**
     * This method retrieves schedule details and status of the specified schedule. Specify the schedule to retrieve using the <strong>schedule_id</strong>. Use the <strong>getSchedules</strong> method to find a schedule if you do not know the <strong>schedule_id</strong>.
     */
    getSchedule(req: operations.GetScheduleRequest, security: operations.GetScheduleSecurity, config?: AxiosRequestConfig): Promise<operations.GetScheduleResponse>;
    /**
     * This method retrieves the details of the specified template. Specify the template to retrieve using the <strong>schedule_template_id</strong> path parameter. Use the <strong>getScheduleTemplates</strong> method to find a schedule template if you do not know the <strong>schedule_template_id</strong>.
     */
    getScheduleTemplate(req: operations.GetScheduleTemplateRequest, security: operations.GetScheduleTemplateSecurity, config?: AxiosRequestConfig): Promise<operations.GetScheduleTemplateResponse>;
    /**
     * This method retrieves an array containing the details and status of all schedule templates based on the specified <strong>feed_type</strong>. Use this method to find a schedule template if you do not know the <strong>schedule_template_id</strong>.
     */
    getScheduleTemplates(req: operations.GetScheduleTemplatesRequest, security: operations.GetScheduleTemplatesSecurity, config?: AxiosRequestConfig): Promise<operations.GetScheduleTemplatesResponse>;
    /**
     * This method retrieves an array containing the details and status of all schedules based on the specified <strong>feed_type</strong>. Use this method to find a schedule if you do not know the <strong>schedule_id</strong>.
     */
    getSchedules(req: operations.GetSchedulesRequest, security: operations.GetSchedulesSecurity, config?: AxiosRequestConfig): Promise<operations.GetSchedulesResponse>;
    /**
     * This method updates an existing schedule. Specify the schedule to update using the <strong>schedule_id</strong> path parameter. If the schedule template has changed after the schedule was created or updated, the input will be validated using the changed template.<p> <span class="tablenote"><strong>Note:</strong> Make sure to include all fields required by the schedule template (<strong>scheduleTemplateId</strong>). Call the <strong>getScheduleTemplate</strong> method (or the <strong>getScheduleTemplates</strong> method), to find out which fields are required or optional. If you do not know the <strong>scheduleTemplateId</strong>, call the <strong>getSchedule</strong> method to find out.</span></p>
     */
    updateSchedule(req: operations.UpdateScheduleRequest, security: operations.UpdateScheduleSecurity, config?: AxiosRequestConfig): Promise<operations.UpdateScheduleResponse>;
}
