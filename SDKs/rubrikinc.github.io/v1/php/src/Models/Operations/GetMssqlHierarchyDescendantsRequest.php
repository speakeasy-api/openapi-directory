<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetMssqlHierarchyDescendantsRequest
{
    /**
     * Filter by the ID of the effective SLA Domain.
     * 
     * @var ?string $effectiveSlaDomainId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=effective_sla_domain_id')]
    public ?string $effectiveSlaDomainId = null;
    
    /**
     * Boolean that filters top-level nodes with the Host or WindowsCluster object type by whether or not the nodes have children MssqlInstance nodes. When this value is 'true,' the filter shows only nodes with children MssqlInstance nodes. When this value is 'false,' the filter shows only nodes without children MssqlInstance nodes.
     * 
     * @var ?bool $hasInstances
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=has_instances')]
    public ?bool $hasInstances = null;
    
    /**
     * ID of the parent SQL server hierarchy object. To get top-level nodes, use **root** as the ID.
     * 
     * 
     * 
     * @var string $id
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=id')]
    public string $id;
    
    /**
     * Filter by the value of the `isClustered` field for nodes with object type MssqlDatabase or MssqlInstance.
     * 
     * @var ?bool $isClustered
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_clustered')]
    public ?bool $isClustered = null;
    
    /**
     * Filter database by the value of the `isLiveMount` field for nodes with MssqlDatabase as the value of the object type field.
     * 
     * @var ?bool $isLiveMount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_live_mount')]
    public ?bool $isLiveMount = null;
    
    /**
     * Filter by the value of the `isLogShippingSecondary` field for nodes with MssqlDatabase as the value of the object type field.
     * 
     * @var ?bool $isLogShippingSecondary
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_log_shipping_secondary')]
    public ?bool $isLogShippingSecondary = null;
    
    /**
     * Filter by the value of the `isRelic` field for nodes with MssqlDatabase as the value of the object type field.
     * 
     * @var ?bool $isRelic
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_relic')]
    public ?bool $isRelic = null;
    
    /**
     * Limit the number of matches returned.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Filter descendants by provided name.
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?string $name = null;
    
    /**
     * Filter by a comma-separated list of node object types.
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetMssqlHierarchyDescendantsObjectTypeEnum> $objectType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=object_type')]
    public ?array $objectType = null;
    
    /**
     * An integer that specifies the number of initial matches to ignore.
     * 
     * 
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * Filter by primary cluster ID, or **local**.
     * 
     * @var ?string $primaryClusterId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=primary_cluster_id')]
    public ?string $primaryClusterId = null;
    
    /**
     * Filter by SLA Domain assignment type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetMssqlHierarchyDescendantsSLAAssignmentEnum $slaAssignment
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sla_assignment')]
    public ?GetMssqlHierarchyDescendantsSLAAssignmentEnum $slaAssignment = null;
    
    /**
     * Determines whether SQL Server instances are fetched with additional privilege checks.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetMssqlHierarchyDescendantsSnappableStatusEnum $snappableStatus
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=snappable_status')]
    public ?GetMssqlHierarchyDescendantsSnappableStatusEnum $snappableStatus = null;
    
    /**
     * Attribute to sort the results on.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetMssqlHierarchyDescendantsSortByEnum $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_by')]
    public ?GetMssqlHierarchyDescendantsSortByEnum $sortBy = null;
    
    /**
     * Sort order, either ascending or descending.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetMssqlHierarchyDescendantsSortOrderEnum $sortOrder
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_order')]
    public ?GetMssqlHierarchyDescendantsSortOrderEnum $sortOrder = null;
    
	public function __construct()
	{
		$this->effectiveSlaDomainId = null;
		$this->hasInstances = null;
		$this->id = "";
		$this->isClustered = null;
		$this->isLiveMount = null;
		$this->isLogShippingSecondary = null;
		$this->isRelic = null;
		$this->limit = null;
		$this->name = null;
		$this->objectType = null;
		$this->offset = null;
		$this->primaryClusterId = null;
		$this->slaAssignment = null;
		$this->snappableStatus = null;
		$this->sortBy = null;
		$this->sortOrder = null;
	}
}
