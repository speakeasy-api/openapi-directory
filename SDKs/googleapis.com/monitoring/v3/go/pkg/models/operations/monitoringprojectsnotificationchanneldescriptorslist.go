// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type MonitoringProjectsNotificationChannelDescriptorsListSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type MonitoringProjectsNotificationChannelDescriptorsListSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type MonitoringProjectsNotificationChannelDescriptorsListSecurityOption3 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type MonitoringProjectsNotificationChannelDescriptorsListSecurity struct {
	Option1 *MonitoringProjectsNotificationChannelDescriptorsListSecurityOption1 `security:"option"`
	Option2 *MonitoringProjectsNotificationChannelDescriptorsListSecurityOption2 `security:"option"`
	Option3 *MonitoringProjectsNotificationChannelDescriptorsListSecurityOption3 `security:"option"`
}

type MonitoringProjectsNotificationChannelDescriptorsListPathParams struct {
	// Required. The REST resource name of the parent from which to retrieve the notification channel descriptors. The expected syntax is: projects/[PROJECT_ID_OR_NUMBER] Note that this names (https://cloud.google.com/monitoring/api/v3#project_name) the parent container in which to look for the descriptors; to retrieve a single descriptor by name, use the GetNotificationChannelDescriptor operation, instead.
	Name string `pathParam:"style=simple,explode=false,name=name"`
}

type MonitoringProjectsNotificationChannelDescriptorsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of results to return in a single response. If not set to a positive number, a reasonable value will be chosen by the service.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// If non-empty, page_token must contain a value returned as the next_page_token in a previous response to request the next set of results.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type MonitoringProjectsNotificationChannelDescriptorsListRequest struct {
	PathParams  MonitoringProjectsNotificationChannelDescriptorsListPathParams
	QueryParams MonitoringProjectsNotificationChannelDescriptorsListQueryParams
	Security    MonitoringProjectsNotificationChannelDescriptorsListSecurity
}

type MonitoringProjectsNotificationChannelDescriptorsListResponse struct {
	ContentType string
	// Successful response
	ListNotificationChannelDescriptorsResponse *shared.ListNotificationChannelDescriptorsResponse
	StatusCode                                 int
	RawResponse                                *http.Response
}
