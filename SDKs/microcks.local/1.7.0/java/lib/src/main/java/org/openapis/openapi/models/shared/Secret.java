/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Secret - A Secret allows grouping informations on how to access a restricted resource such as a repsoitory URL. Secrets are typically used by ImpoortJobs.
 */
public class Secret {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caCertPem")
    public String caCertPem;

    public Secret withCaCertPem(String caCertPem) {
        this.caCertPem = caCertPem;
        return this;
    }
    
    /**
     * Description of this Secret
     */
    @JsonProperty("description")
    public String description;

    public Secret withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Unique identifier of Secret
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Secret withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Unique distinct name of Secret
     */
    @JsonProperty("name")
    public String name;

    public Secret withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;

    public Secret withPassword(String password) {
        this.password = password;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token")
    public String token;

    public Secret withToken(String token) {
        this.token = token;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tokenHeader")
    public String tokenHeader;

    public Secret withTokenHeader(String tokenHeader) {
        this.tokenHeader = tokenHeader;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;

    public Secret withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public Secret(@JsonProperty("description") String description, @JsonProperty("name") String name) {
        this.description = description;
        this.name = name;
  }
}
