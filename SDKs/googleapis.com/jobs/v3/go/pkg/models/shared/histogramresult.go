// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// HistogramResultSearchTypeEnum - The Histogram search filters.
type HistogramResultSearchTypeEnum string

const (
	HistogramResultSearchTypeEnumSearchTypeUnspecified HistogramResultSearchTypeEnum = "SEARCH_TYPE_UNSPECIFIED"
	HistogramResultSearchTypeEnumCompanyID             HistogramResultSearchTypeEnum = "COMPANY_ID"
	HistogramResultSearchTypeEnumEmploymentType        HistogramResultSearchTypeEnum = "EMPLOYMENT_TYPE"
	HistogramResultSearchTypeEnumCompanySize           HistogramResultSearchTypeEnum = "COMPANY_SIZE"
	HistogramResultSearchTypeEnumDatePublished         HistogramResultSearchTypeEnum = "DATE_PUBLISHED"
	HistogramResultSearchTypeEnumEducationLevel        HistogramResultSearchTypeEnum = "EDUCATION_LEVEL"
	HistogramResultSearchTypeEnumExperienceLevel       HistogramResultSearchTypeEnum = "EXPERIENCE_LEVEL"
	HistogramResultSearchTypeEnumAdmin1                HistogramResultSearchTypeEnum = "ADMIN_1"
	HistogramResultSearchTypeEnumCountry               HistogramResultSearchTypeEnum = "COUNTRY"
	HistogramResultSearchTypeEnumCity                  HistogramResultSearchTypeEnum = "CITY"
	HistogramResultSearchTypeEnumLocale                HistogramResultSearchTypeEnum = "LOCALE"
	HistogramResultSearchTypeEnumLanguage              HistogramResultSearchTypeEnum = "LANGUAGE"
	HistogramResultSearchTypeEnumCategory              HistogramResultSearchTypeEnum = "CATEGORY"
	HistogramResultSearchTypeEnumCityCoordinate        HistogramResultSearchTypeEnum = "CITY_COORDINATE"
	HistogramResultSearchTypeEnumAdmin1Country         HistogramResultSearchTypeEnum = "ADMIN_1_COUNTRY"
	HistogramResultSearchTypeEnumCompanyDisplayName    HistogramResultSearchTypeEnum = "COMPANY_DISPLAY_NAME"
	HistogramResultSearchTypeEnumBaseCompensationUnit  HistogramResultSearchTypeEnum = "BASE_COMPENSATION_UNIT"
)

func (e *HistogramResultSearchTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SEARCH_TYPE_UNSPECIFIED":
		fallthrough
	case "COMPANY_ID":
		fallthrough
	case "EMPLOYMENT_TYPE":
		fallthrough
	case "COMPANY_SIZE":
		fallthrough
	case "DATE_PUBLISHED":
		fallthrough
	case "EDUCATION_LEVEL":
		fallthrough
	case "EXPERIENCE_LEVEL":
		fallthrough
	case "ADMIN_1":
		fallthrough
	case "COUNTRY":
		fallthrough
	case "CITY":
		fallthrough
	case "LOCALE":
		fallthrough
	case "LANGUAGE":
		fallthrough
	case "CATEGORY":
		fallthrough
	case "CITY_COORDINATE":
		fallthrough
	case "ADMIN_1_COUNTRY":
		fallthrough
	case "COMPANY_DISPLAY_NAME":
		fallthrough
	case "BASE_COMPENSATION_UNIT":
		*e = HistogramResultSearchTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HistogramResultSearchTypeEnum: %s", s)
	}
}

// HistogramResult - Output only. Result of a histogram call. The response contains the histogram map for the search type specified by HistogramResult.field. The response is a map of each filter value to the corresponding count of jobs for that filter.
type HistogramResult struct {
	// The Histogram search filters.
	SearchType *HistogramResultSearchTypeEnum `json:"searchType,omitempty"`
	// A map from the values of field to the number of jobs with that value in this search result. Key: search type (filter names, such as the companyName). Values: the count of jobs that match the filter for this search.
	Values map[string]int `json:"values,omitempty"`
}
