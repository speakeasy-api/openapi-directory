"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import podcastsimple as shared_podcastsimple
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CuratedListFull:
    r"""OK"""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""This curated list's description."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Curated list id, which can be used to further fetch detailed curated list metadata via `GET /curated_podcasts/{id}`."""  
    listennotes_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listennotes_url'), 'exclude': lambda f: f is None }})
    r"""The url of this curated list on [ListenNotes.com](https://www.ListenNotes.com)."""  
    podcasts: Optional[list[shared_podcastsimple.PodcastSimple]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('podcasts'), 'exclude': lambda f: f is None }})
    r"""Complete meta data of all podcasts in this curated list."""  
    pub_date_ms: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pub_date_ms'), 'exclude': lambda f: f is None }})
    r"""Published date of this curated list. In milliseconds."""  
    source_domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source_domain'), 'exclude': lambda f: f is None }})
    r"""The domain name of the source of this curated list."""  
    source_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source_url'), 'exclude': lambda f: f is None }})
    r"""Url of the source of this curated list."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Curated list name."""  
    total: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""The total number of podcasts in this curated list."""  
    