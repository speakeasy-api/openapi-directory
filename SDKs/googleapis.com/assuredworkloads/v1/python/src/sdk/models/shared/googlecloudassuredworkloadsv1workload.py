"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudassuredworkloadsv1workloadcompliancestatus as shared_googlecloudassuredworkloadsv1workloadcompliancestatus
from ..shared import googlecloudassuredworkloadsv1workloadekmprovisioningresponse as shared_googlecloudassuredworkloadsv1workloadekmprovisioningresponse
from ..shared import googlecloudassuredworkloadsv1workloadkmssettings as shared_googlecloudassuredworkloadsv1workloadkmssettings
from ..shared import googlecloudassuredworkloadsv1workloadresourceinfo as shared_googlecloudassuredworkloadsv1workloadresourceinfo
from ..shared import googlecloudassuredworkloadsv1workloadresourcesettings as shared_googlecloudassuredworkloadsv1workloadresourcesettings
from ..shared import googlecloudassuredworkloadsv1workloadsaaenrollmentresponse as shared_googlecloudassuredworkloadsv1workloadsaaenrollmentresponse
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudAssuredworkloadsV1WorkloadComplianceRegimeEnum(str, Enum):
    r"""Required. Immutable. Compliance Regime associated with this workload."""
    COMPLIANCE_REGIME_UNSPECIFIED = 'COMPLIANCE_REGIME_UNSPECIFIED'
    IL4 = 'IL4'
    CJIS = 'CJIS'
    FEDRAMP_HIGH = 'FEDRAMP_HIGH'
    FEDRAMP_MODERATE = 'FEDRAMP_MODERATE'
    US_REGIONAL_ACCESS = 'US_REGIONAL_ACCESS'
    HIPAA = 'HIPAA'
    HITRUST = 'HITRUST'
    EU_REGIONS_AND_SUPPORT = 'EU_REGIONS_AND_SUPPORT'
    CA_REGIONS_AND_SUPPORT = 'CA_REGIONS_AND_SUPPORT'
    ITAR = 'ITAR'
    AU_REGIONS_AND_US_SUPPORT = 'AU_REGIONS_AND_US_SUPPORT'
    ASSURED_WORKLOADS_FOR_PARTNERS = 'ASSURED_WORKLOADS_FOR_PARTNERS'
    ISR_REGIONS = 'ISR_REGIONS'
    ISR_REGIONS_AND_SUPPORT = 'ISR_REGIONS_AND_SUPPORT'
    CA_PROTECTED_B = 'CA_PROTECTED_B'

class GoogleCloudAssuredworkloadsV1WorkloadPartnerEnum(str, Enum):
    r"""Optional. Partner regime associated with this workload."""
    PARTNER_UNSPECIFIED = 'PARTNER_UNSPECIFIED'
    LOCAL_CONTROLS_BY_S3_NS = 'LOCAL_CONTROLS_BY_S3NS'
    SOVEREIGN_CONTROLS_BY_T_SYSTEMS = 'SOVEREIGN_CONTROLS_BY_T_SYSTEMS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudAssuredworkloadsV1WorkloadInput:
    r"""A Workload object for managing highly regulated workloads of cloud customers."""
    
    billing_account: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingAccount'), 'exclude': lambda f: f is None }})
    r"""Optional. The billing account used for the resources which are direct children of workload. This billing account is initially associated with the resources created as part of Workload creation. After the initial creation of these resources, the customer can change the assigned billing account. The resource name has the form `billingAccounts/{billing_account_id}`. For example, `billingAccounts/012345-567890-ABCDEF`."""  
    compliance_regime: Optional[GoogleCloudAssuredworkloadsV1WorkloadComplianceRegimeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('complianceRegime'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. Compliance Regime associated with this workload."""  
    compliance_status: Optional[shared_googlecloudassuredworkloadsv1workloadcompliancestatus.GoogleCloudAssuredworkloadsV1WorkloadComplianceStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('complianceStatus'), 'exclude': lambda f: f is None }})
    r"""Represents the Compliance Status of this workload"""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The user-assigned display name of the Workload. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, and spaces. Example: My Workload"""  
    ekm_provisioning_response: Optional[shared_googlecloudassuredworkloadsv1workloadekmprovisioningresponse.GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ekmProvisioningResponse'), 'exclude': lambda f: f is None }})
    r"""External key management systems(EKM) Provisioning response"""  
    enable_sovereign_controls: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableSovereignControls'), 'exclude': lambda f: f is None }})
    r"""Optional. Indicates the sovereignty status of the given workload. Currently meant to be used by Europe/Canada customers."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Optional. ETag of the workload, it is calculated on the basis of the Workload contents. It will be used in Update & Delete operations."""  
    kms_settings: Optional[shared_googlecloudassuredworkloadsv1workloadkmssettings.GoogleCloudAssuredworkloadsV1WorkloadKMSSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kmsSettings'), 'exclude': lambda f: f is None }})
    r"""Settings specific to the Key Management Service. This message is deprecated. In order to create a Keyring, callers should specify, ENCRYPTION_KEYS_PROJECT or KEYRING in ResourceSettings.resource_type field."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Optional. Labels applied to the workload."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Optional. The resource name of the workload. Format: organizations/{organization}/locations/{location}/workloads/{workload} Read-only."""  
    partner: Optional[GoogleCloudAssuredworkloadsV1WorkloadPartnerEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partner'), 'exclude': lambda f: f is None }})
    r"""Optional. Partner regime associated with this workload."""  
    provisioned_resources_parent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provisionedResourcesParent'), 'exclude': lambda f: f is None }})
    r"""Input only. The parent resource for the resources managed by this Assured Workload. May be either empty or a folder resource which is a child of the Workload parent. If not specified all resources are created under the parent organization. Format: folders/{folder_id}"""  
    resource_settings: Optional[list[shared_googlecloudassuredworkloadsv1workloadresourcesettings.GoogleCloudAssuredworkloadsV1WorkloadResourceSettings]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceSettings'), 'exclude': lambda f: f is None }})
    r"""Input only. Resource properties that are used to customize workload resources. These properties (such as custom project id) will be used to create workload resources if possible. This field is optional."""  
    saa_enrollment_response: Optional[shared_googlecloudassuredworkloadsv1workloadsaaenrollmentresponse.GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('saaEnrollmentResponse'), 'exclude': lambda f: f is None }})
    r"""Signed Access Approvals (SAA) enrollment response."""  
    
class GoogleCloudAssuredworkloadsV1WorkloadKajEnrollmentStateEnum(str, Enum):
    r"""Output only. Represents the KAJ enrollment state of the given workload."""
    KAJ_ENROLLMENT_STATE_UNSPECIFIED = 'KAJ_ENROLLMENT_STATE_UNSPECIFIED'
    KAJ_ENROLLMENT_STATE_PENDING = 'KAJ_ENROLLMENT_STATE_PENDING'
    KAJ_ENROLLMENT_STATE_COMPLETE = 'KAJ_ENROLLMENT_STATE_COMPLETE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudAssuredworkloadsV1Workload:
    r"""A Workload object for managing highly regulated workloads of cloud customers."""
    
    billing_account: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingAccount'), 'exclude': lambda f: f is None }})
    r"""Optional. The billing account used for the resources which are direct children of workload. This billing account is initially associated with the resources created as part of Workload creation. After the initial creation of these resources, the customer can change the assigned billing account. The resource name has the form `billingAccounts/{billing_account_id}`. For example, `billingAccounts/012345-567890-ABCDEF`."""  
    compliance_regime: Optional[GoogleCloudAssuredworkloadsV1WorkloadComplianceRegimeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('complianceRegime'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. Compliance Regime associated with this workload."""  
    compliance_status: Optional[shared_googlecloudassuredworkloadsv1workloadcompliancestatus.GoogleCloudAssuredworkloadsV1WorkloadComplianceStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('complianceStatus'), 'exclude': lambda f: f is None }})
    r"""Represents the Compliance Status of this workload"""  
    compliant_but_disallowed_services: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compliantButDisallowedServices'), 'exclude': lambda f: f is None }})
    r"""Output only. Urls for services which are compliant for this Assured Workload, but which are currently disallowed by the ResourceUsageRestriction org policy. Invoke RestrictAllowedResources endpoint to allow your project developers to use these services in their environment.\\" """  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Immutable. The Workload creation timestamp."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The user-assigned display name of the Workload. When present it must be between 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, and spaces. Example: My Workload"""  
    ekm_provisioning_response: Optional[shared_googlecloudassuredworkloadsv1workloadekmprovisioningresponse.GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ekmProvisioningResponse'), 'exclude': lambda f: f is None }})
    r"""External key management systems(EKM) Provisioning response"""  
    enable_sovereign_controls: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableSovereignControls'), 'exclude': lambda f: f is None }})
    r"""Optional. Indicates the sovereignty status of the given workload. Currently meant to be used by Europe/Canada customers."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Optional. ETag of the workload, it is calculated on the basis of the Workload contents. It will be used in Update & Delete operations."""  
    kaj_enrollment_state: Optional[GoogleCloudAssuredworkloadsV1WorkloadKajEnrollmentStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kajEnrollmentState'), 'exclude': lambda f: f is None }})
    r"""Output only. Represents the KAJ enrollment state of the given workload."""  
    kms_settings: Optional[shared_googlecloudassuredworkloadsv1workloadkmssettings.GoogleCloudAssuredworkloadsV1WorkloadKMSSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kmsSettings'), 'exclude': lambda f: f is None }})
    r"""Settings specific to the Key Management Service. This message is deprecated. In order to create a Keyring, callers should specify, ENCRYPTION_KEYS_PROJECT or KEYRING in ResourceSettings.resource_type field."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Optional. Labels applied to the workload."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Optional. The resource name of the workload. Format: organizations/{organization}/locations/{location}/workloads/{workload} Read-only."""  
    partner: Optional[GoogleCloudAssuredworkloadsV1WorkloadPartnerEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partner'), 'exclude': lambda f: f is None }})
    r"""Optional. Partner regime associated with this workload."""  
    provisioned_resources_parent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provisionedResourcesParent'), 'exclude': lambda f: f is None }})
    r"""Input only. The parent resource for the resources managed by this Assured Workload. May be either empty or a folder resource which is a child of the Workload parent. If not specified all resources are created under the parent organization. Format: folders/{folder_id}"""  
    resources: Optional[list[shared_googlecloudassuredworkloadsv1workloadresourceinfo.GoogleCloudAssuredworkloadsV1WorkloadResourceInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resources'), 'exclude': lambda f: f is None }})
    r"""Output only. The resources associated with this workload. These resources will be created when creating the workload. If any of the projects already exist, the workload creation will fail. Always read only."""  
    resource_settings: Optional[list[shared_googlecloudassuredworkloadsv1workloadresourcesettings.GoogleCloudAssuredworkloadsV1WorkloadResourceSettings]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceSettings'), 'exclude': lambda f: f is None }})
    r"""Input only. Resource properties that are used to customize workload resources. These properties (such as custom project id) will be used to create workload resources if possible. This field is optional."""  
    saa_enrollment_response: Optional[shared_googlecloudassuredworkloadsv1workloadsaaenrollmentresponse.GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('saaEnrollmentResponse'), 'exclude': lambda f: f is None }})
    r"""Signed Access Approvals (SAA) enrollment response."""  
    