/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetNetworkSmDeviceSecurityCentersRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=deviceId",
  })
  deviceId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class GetNetworkSmDeviceSecurityCenters200ApplicationJSON extends SpeakeasyBase {
  /**
   * The name of the Antivirus.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "antiVirusName" })
  antiVirusName?: string;

  /**
   * The name of the Firewall.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fireWallName" })
  fireWallName?: string;

  /**
   * Boolean indicating if the device has Antivirus.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasAntiVirus" })
  hasAntiVirus?: boolean;

  /**
   * Boolean indicating if the device has a Firewall installed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasFireWallInstalled" })
  hasFireWallInstalled?: boolean;

  /**
   * The Meraki identifier for the security center record.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Boolean indicating if the device has auto login disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isAutoLoginDisabled" })
  isAutoLoginDisabled?: boolean;

  /**
   * Boolean indicating if the device has disk encryption.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDiskEncrypted" })
  isDiskEncrypted?: boolean;

  /**
   * Boolean indicating if the device has a Firewall enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isFireWallEnabled" })
  isFireWallEnabled?: boolean;

  /**
   * Boolean indicating if the device is rooted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isRooted" })
  isRooted?: boolean;

  /**
   * A comma seperated list of procs running on the device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runningProcs" })
  runningProcs?: string;
}

export class GetNetworkSmDeviceSecurityCentersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({
    elemType: GetNetworkSmDeviceSecurityCenters200ApplicationJSON,
  })
  getNetworkSmDeviceSecurityCenters200ApplicationJSONObjects?: GetNetworkSmDeviceSecurityCenters200ApplicationJSON[];
}
