/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StartRunRequestBody {
    /**
     * A log level for the run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logLevel")
    public StartRunRequestBodyLogLevelEnum logLevel;

    public StartRunRequestBody withLogLevel(StartRunRequestBodyLogLevelEnum logLevel) {
        this.logLevel = logLevel;
        return this;
    }
    
    /**
     * A name for the run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public StartRunRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * An output URI for the run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputUri")
    public String outputUri;

    public StartRunRequestBody withOutputUri(String outputUri) {
        this.outputUri = outputUri;
        return this;
    }
    
    /**
     * Parameters for the run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public java.util.Map<String, Object> parameters;

    public StartRunRequestBody withParameters(java.util.Map<String, Object> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * A priority for the run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public Long priority;

    public StartRunRequestBody withPriority(Long priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * To ensure that requests don't run multiple times, specify a unique ID for each request.
     */
    @JsonProperty("requestId")
    public String requestId;

    public StartRunRequestBody withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    
    /**
     * A service role for the run.
     */
    @JsonProperty("roleArn")
    public String roleArn;

    public StartRunRequestBody withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    /**
     * The run's group ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runGroupId")
    public String runGroupId;

    public StartRunRequestBody withRunGroupId(String runGroupId) {
        this.runGroupId = runGroupId;
        return this;
    }
    
    /**
     * The run's ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runId")
    public String runId;

    public StartRunRequestBody withRunId(String runId) {
        this.runId = runId;
        return this;
    }
    
    /**
     * A storage capacity for the run in gigabytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storageCapacity")
    public Long storageCapacity;

    public StartRunRequestBody withStorageCapacity(Long storageCapacity) {
        this.storageCapacity = storageCapacity;
        return this;
    }
    
    /**
     * Tags for the run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public StartRunRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The run's workflow ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflowId")
    public String workflowId;

    public StartRunRequestBody withWorkflowId(String workflowId) {
        this.workflowId = workflowId;
        return this;
    }
    
    /**
     * The run's workflows type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflowType")
    public StartRunRequestBodyWorkflowTypeEnum workflowType;

    public StartRunRequestBody withWorkflowType(StartRunRequestBodyWorkflowTypeEnum workflowType) {
        this.workflowType = workflowType;
        return this;
    }
    
    public StartRunRequestBody(@JsonProperty("requestId") String requestId, @JsonProperty("roleArn") String roleArn) {
        this.requestId = requestId;
        this.roleArn = roleArn;
  }
}
