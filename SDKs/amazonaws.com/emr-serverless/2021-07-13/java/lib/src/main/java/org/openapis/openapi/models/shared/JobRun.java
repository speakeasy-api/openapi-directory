/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * JobRun - Information about a job run. A job run is a unit of work, such as a Spark JAR, Hive query, or SparkSQL query, that you submit to an EMR Serverless application.
 */
public class JobRun {
    @JsonProperty("applicationId")
    public String applicationId;
    public JobRun withApplicationId(String applicationId) {
        this.applicationId = applicationId;
        return this;
    }
    
    @JsonProperty("arn")
    public String arn;
    public JobRun withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configurationOverrides")
    public ConfigurationOverrides configurationOverrides;
    public JobRun withConfigurationOverrides(ConfigurationOverrides configurationOverrides) {
        this.configurationOverrides = configurationOverrides;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public JobRun withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("createdBy")
    public String createdBy;
    public JobRun withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    @JsonProperty("executionRole")
    public String executionRole;
    public JobRun withExecutionRole(String executionRole) {
        this.executionRole = executionRole;
        return this;
    }
    
    @JsonProperty("jobDriver")
    public JobDriver jobDriver;
    public JobRun withJobDriver(JobDriver jobDriver) {
        this.jobDriver = jobDriver;
        return this;
    }
    
    @JsonProperty("jobRunId")
    public String jobRunId;
    public JobRun withJobRunId(String jobRunId) {
        this.jobRunId = jobRunId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public JobRun withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The network configuration for customer VPC connectivity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkConfiguration")
    public NetworkConfiguration networkConfiguration;
    public JobRun withNetworkConfiguration(NetworkConfiguration networkConfiguration) {
        this.networkConfiguration = networkConfiguration;
        return this;
    }
    
    @JsonProperty("releaseLabel")
    public String releaseLabel;
    public JobRun withReleaseLabel(String releaseLabel) {
        this.releaseLabel = releaseLabel;
        return this;
    }
    
    @JsonProperty("state")
    public JobRunStateEnum state;
    public JobRun withState(JobRunStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonProperty("stateDetails")
    public String stateDetails;
    public JobRun withStateDetails(String stateDetails) {
        this.stateDetails = stateDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public JobRun withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalExecutionDurationSeconds")
    public Long totalExecutionDurationSeconds;
    public JobRun withTotalExecutionDurationSeconds(Long totalExecutionDurationSeconds) {
        this.totalExecutionDurationSeconds = totalExecutionDurationSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalResourceUtilization")
    public TotalResourceUtilization totalResourceUtilization;
    public JobRun withTotalResourceUtilization(TotalResourceUtilization totalResourceUtilization) {
        this.totalResourceUtilization = totalResourceUtilization;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;
    public JobRun withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
