<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Psd2RegistrationLog - Keep traces of PSD2 registration calls.
 * 
 *     The table is used by the plugin `psd2registration` to know:
 *      - whether it must call `update` or `create` routes on the PSD2 APIs when the config is updated
 *      - the list of PSD2 API to create (needed when a new connector is added)
 *      - the list of broken connectors
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Psd2RegistrationLog
{
    /**
     * When this row was created
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * If fail, error message received from connector
     * 
     * @var ?string $errorMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('error_message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $errorMessage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * ID of the psd2 registration
     * 
     * @var ?int $idPsd2registration
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_psd2registration')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idPsd2registration = null;
    
    /**
     * Action done: create, update, delete
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
	public function __construct()
	{
		$this->createdAt = new \DateTime();
		$this->errorMessage = null;
		$this->id = 0;
		$this->idPsd2registration = null;
		$this->type = "";
	}
}
