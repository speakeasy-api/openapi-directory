// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListPermissionsRequestBodyPrincipal - The Lake Formation principal. Supported principals are IAM users or IAM roles.
type ListPermissionsRequestBodyPrincipal struct {
	DataLakePrincipalIdentifier *string `json:"DataLakePrincipalIdentifier,omitempty"`
}

// ListPermissionsRequestBodyResource - A structure for the resource.
type ListPermissionsRequestBodyResource struct {
	Catalog          map[string]interface{}           `json:"Catalog,omitempty"`
	DataCellsFilter  *shared.DataCellsFilterResource  `json:"DataCellsFilter,omitempty"`
	DataLocation     *shared.DataLocationResource     `json:"DataLocation,omitempty"`
	Database         *shared.DatabaseResource         `json:"Database,omitempty"`
	LFTag            *shared.LFTagKeyResource         `json:"LFTag,omitempty"`
	LFTagPolicy      *shared.LFTagPolicyResource      `json:"LFTagPolicy,omitempty"`
	Table            *shared.TableResource            `json:"Table,omitempty"`
	TableWithColumns *shared.TableWithColumnsResource `json:"TableWithColumns,omitempty"`
}

// ListPermissionsRequestBodyResourceTypeEnum - Specifies a resource type to filter the permissions returned.
type ListPermissionsRequestBodyResourceTypeEnum string

const (
	ListPermissionsRequestBodyResourceTypeEnumCatalog             ListPermissionsRequestBodyResourceTypeEnum = "CATALOG"
	ListPermissionsRequestBodyResourceTypeEnumDatabase            ListPermissionsRequestBodyResourceTypeEnum = "DATABASE"
	ListPermissionsRequestBodyResourceTypeEnumTable               ListPermissionsRequestBodyResourceTypeEnum = "TABLE"
	ListPermissionsRequestBodyResourceTypeEnumDataLocation        ListPermissionsRequestBodyResourceTypeEnum = "DATA_LOCATION"
	ListPermissionsRequestBodyResourceTypeEnumLfTag               ListPermissionsRequestBodyResourceTypeEnum = "LF_TAG"
	ListPermissionsRequestBodyResourceTypeEnumLfTagPolicy         ListPermissionsRequestBodyResourceTypeEnum = "LF_TAG_POLICY"
	ListPermissionsRequestBodyResourceTypeEnumLfTagPolicyDatabase ListPermissionsRequestBodyResourceTypeEnum = "LF_TAG_POLICY_DATABASE"
	ListPermissionsRequestBodyResourceTypeEnumLfTagPolicyTable    ListPermissionsRequestBodyResourceTypeEnum = "LF_TAG_POLICY_TABLE"
)

func (e ListPermissionsRequestBodyResourceTypeEnum) ToPointer() *ListPermissionsRequestBodyResourceTypeEnum {
	return &e
}

func (e *ListPermissionsRequestBodyResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CATALOG":
		fallthrough
	case "DATABASE":
		fallthrough
	case "TABLE":
		fallthrough
	case "DATA_LOCATION":
		fallthrough
	case "LF_TAG":
		fallthrough
	case "LF_TAG_POLICY":
		fallthrough
	case "LF_TAG_POLICY_DATABASE":
		fallthrough
	case "LF_TAG_POLICY_TABLE":
		*e = ListPermissionsRequestBodyResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPermissionsRequestBodyResourceTypeEnum: %v", v)
	}
}

type ListPermissionsRequestBody struct {
	// The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
	CatalogID *string `json:"CatalogId,omitempty"`
	// Indicates that related permissions should be included in the results.
	IncludeRelated *string `json:"IncludeRelated,omitempty"`
	// The maximum number of results to return.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// A continuation token, if this is not the first call to retrieve this list.
	NextToken *string `json:"NextToken,omitempty"`
	// The Lake Formation principal. Supported principals are IAM users or IAM roles.
	Principal *ListPermissionsRequestBodyPrincipal `json:"Principal,omitempty"`
	// A structure for the resource.
	Resource *ListPermissionsRequestBodyResource `json:"Resource,omitempty"`
	// Specifies a resource type to filter the permissions returned.
	ResourceType *ListPermissionsRequestBodyResourceTypeEnum `json:"ResourceType,omitempty"`
}

type ListPermissionsRequest struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                    `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       ListPermissionsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListPermissionsResponse struct {
	ContentType string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	ListPermissionsResponse *shared.ListPermissionsResponse
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
