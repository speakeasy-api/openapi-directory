/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { CurrencyEnum } from "./currencyenum";
import { Email } from "./email";
import { LinkedTaxRate } from "./linkedtaxrate";
import { PhoneNumber } from "./phonenumber";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The start month of fiscal year.
 */
export enum CompanyInfoTheStartMonthOfFiscalYearEnum {
  January = "January",
  February = "February",
  March = "March",
  April = "April",
  May = "May",
  June = "June",
  July = "July",
  August = "August",
  September = "September",
  October = "October",
  November = "November",
  December = "December",
}

/**
 * Based on the status some functionality is enabled or disabled.
 */
export enum CompanyInfoCompanyStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

export class CompanyInfo extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Address })
  @Expose({ name: "addresses" })
  @Type(() => Address)
  addresses?: Address[];

  /**
   * Whether sales tax is calculated automatically for the company
   */
  @SpeakeasyMetadata()
  @Expose({ name: "automated_sales_tax" })
  automatedSalesTax?: boolean;

  /**
   * The name of the company.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company_name" })
  companyName?: string;

  /**
   * Date when company file was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company_start_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  companyStartDate?: Date;

  /**
   * country code according to ISO 3166-1 alpha-2.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: CurrencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "default_sales_tax" })
  @Type(() => LinkedTaxRate)
  defaultSalesTax?: LinkedTaxRate;

  @SpeakeasyMetadata({ elemType: Email })
  @Expose({ name: "emails" })
  @Type(() => Email)
  emails?: Email[];

  /**
   * The start month of fiscal year.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fiscal_year_start_month" })
  fiscalYearStartMonth?: CompanyInfoTheStartMonthOfFiscalYearEnum;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * language code according to ISO 639-1. For the United States - EN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * The legal name of the company
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legal_name" })
  legalName?: string;

  @SpeakeasyMetadata({ elemType: PhoneNumber })
  @Expose({ name: "phone_numbers" })
  @Type(() => PhoneNumber)
  phoneNumbers?: PhoneNumber[];

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  /**
   * Whether sales tax is enabled for the company
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sales_tax_enabled" })
  salesTaxEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sales_tax_number" })
  salesTaxNumber?: string;

  /**
   * Based on the status some functionality is enabled or disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CompanyInfoCompanyStatusEnum;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;
}
