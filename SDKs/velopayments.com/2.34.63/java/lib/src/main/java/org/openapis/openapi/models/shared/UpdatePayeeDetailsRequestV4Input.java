/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdatePayeeDetailsRequestV4Input - Request to update payee details
 */
public class UpdatePayeeDetailsRequestV4Input {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public PayeeAddressV4 address;
    public UpdatePayeeDetailsRequestV4Input withAddress(PayeeAddressV4 address) {
        this.address = address;
        return this;
    }
    
    /**
     * &lt;p&gt;Used to override the default challenge presented to the payee when they onboard&lt;/p&gt;
     * &lt;p&gt;Not used after the payee has onboarded&lt;/p&gt;
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("challenge")
    public ChallengeV4 challenge;
    public UpdatePayeeDetailsRequestV4Input withChallenge(ChallengeV4 challenge) {
        this.challenge = challenge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company")
    public CompanyV4 company;
    public UpdatePayeeDetailsRequestV4Input withCompany(CompanyV4 company) {
        this.company = company;
        return this;
    }
    
    /**
     * The phone number of a device that the payee wishes to receive sms messages on
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactSmsNumber")
    public String contactSmsNumber;
    public UpdatePayeeDetailsRequestV4Input withContactSmsNumber(String contactSmsNumber) {
        this.contactSmsNumber = contactSmsNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public UpdatePayeeDetailsRequestV4Input withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individual")
    public IndividualV4Input individual;
    public UpdatePayeeDetailsRequestV4Input withIndividual(IndividualV4Input individual) {
        this.individual = individual;
        return this;
    }
    
    /**
     * An IETF BCP 47 language code which has been configured for use within this Velo environment.&lt;BR&gt;
     * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;
    public UpdatePayeeDetailsRequestV4Input withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * The type of the payee
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payeeType")
    public PayeeTypeEnumEnum payeeType;
    public UpdatePayeeDetailsRequestV4Input withPayeeType(PayeeTypeEnumEnum payeeType) {
        this.payeeType = payeeType;
        return this;
    }
    
}
