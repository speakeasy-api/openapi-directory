/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EmbeddedResource } from "./embeddedresource";

/**
 * Success
 */
export class User extends SpeakeasyBase {
  /**
   * For internal use only. This field does not comply with our backwards compatability policies.
   */
  @SpeakeasyMetadata()
  privateFields?: Record<string, any>;

  /**
   * Whether an user is currently active in SalesLoft
   */
  @SpeakeasyMetadata()
  active?: boolean;

  /**
   * Address that will be BBC'd on all emails from this user
   */
  @SpeakeasyMetadata()
  bccEmailAddress?: string;

  /**
   * Whether this user has click to call enabled
   */
  @SpeakeasyMetadata()
  clickToCallEnabled?: boolean;

  /**
   * Datetime of when the user was created
   */
  @SpeakeasyMetadata()
  createdAt?: Date;

  /**
   * Whether the user has a crm connected
   */
  @SpeakeasyMetadata()
  crmConnected?: boolean;

  /**
   * Email address provided to accounts.salesloft.com
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * Whether this user has a email client configured
   */
  @SpeakeasyMetadata()
  emailClientConfigured?: boolean;

  /**
   * Email address associated with the email client of the user
   */
  @SpeakeasyMetadata()
  emailClientEmailAddress?: string;

  /**
   * Email signature
   */
  @SpeakeasyMetadata()
  emailSignature?: string;

  /**
   * Whether this user has click tracking disabled in email signature
   */
  @SpeakeasyMetadata()
  emailSignatureClickTrackingDisabled?: boolean;

  /**
   * Email signature type
   */
  @SpeakeasyMetadata()
  emailSignatureType?: string;

  /**
   * Feature flags that are for this user. New flags may appear or disappear at any time
   */
  @SpeakeasyMetadata()
  externalFeatureFlags?: Record<string, any>;

  /**
   * First name of user
   */
  @SpeakeasyMetadata()
  firstName?: string;

  /**
   * The from address of this user
   */
  @SpeakeasyMetadata()
  fromAddress?: string;

  /**
   * RFC 5322 compliant email address
   */
  @SpeakeasyMetadata()
  fullEmailAddress?: string;

  @SpeakeasyMetadata()
  group?: EmbeddedResource;

  /**
   * Globally unique user ID. New endpoints will explicitly accept this over id
   */
  @SpeakeasyMetadata()
  guid?: string;

  /**
   * User ID
   */
  @SpeakeasyMetadata()
  id?: number;

  /**
   * Job role of user
   */
  @SpeakeasyMetadata()
  jobRole?: string;

  /**
   * Last name of user
   */
  @SpeakeasyMetadata()
  lastName?: string;

  /**
   * Whether this user has Local Dial enabled
   */
  @SpeakeasyMetadata()
  localDialEnabled?: boolean;

  /**
   * Display name of user
   */
  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata()
  phoneClient?: EmbeddedResource;

  @SpeakeasyMetadata()
  phoneNumberAssignment?: EmbeddedResource;

  @SpeakeasyMetadata()
  role?: EmbeddedResource;

  /**
   * The email address that email of the user will be sent from, resolved in the following resolution order: from_user, email_client_email_address, email
   */
  @SpeakeasyMetadata()
  sendingEmailAddress?: string;

  /**
   * Slack username
   */
  @SpeakeasyMetadata()
  slackUsername?: string;

  @SpeakeasyMetadata()
  team?: EmbeddedResource;

  /**
   * Team Admin
   */
  @SpeakeasyMetadata()
  teamAdmin?: boolean;

  /**
   * User Time Zone
   */
  @SpeakeasyMetadata()
  timeZone?: string;

  /**
   * Twitter handle
   */
  @SpeakeasyMetadata()
  twitterHandle?: string;

  /**
   * Datetime of when the user was last updated
   */
  @SpeakeasyMetadata()
  updatedAt?: Date;

  /**
   * Work Country
   */
  @SpeakeasyMetadata()
  workCountry?: string;
}
