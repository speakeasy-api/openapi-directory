/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AutoInstallPolicy {
    /**
     * The constraints for auto-installing the app. You can specify a maximum of one constraint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoInstallConstraint")
    public AutoInstallConstraint[] autoInstallConstraint;

    public AutoInstallPolicy withAutoInstallConstraint(AutoInstallConstraint[] autoInstallConstraint) {
        this.autoInstallConstraint = autoInstallConstraint;
        return this;
    }
    
    /**
     * The auto-install mode. If unset defaults to "doNotAutoInstall".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoInstallMode")
    public AutoInstallPolicyAutoInstallModeEnum autoInstallMode;

    public AutoInstallPolicy withAutoInstallMode(AutoInstallPolicyAutoInstallModeEnum autoInstallMode) {
        this.autoInstallMode = autoInstallMode;
        return this;
    }
    
    /**
     * The priority of the install, as an unsigned integer. A lower number means higher priority.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoInstallPriority")
    public Integer autoInstallPriority;

    public AutoInstallPolicy withAutoInstallPriority(Integer autoInstallPriority) {
        this.autoInstallPriority = autoInstallPriority;
        return this;
    }
    
    /**
     * The minimum version of the app. If a lower version of the app is installed, then the app will be auto-updated according to the auto-install constraints, instead of waiting for the regular auto-update. You can set a minimum version code for at most 20 apps per device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimumVersionCode")
    public Integer minimumVersionCode;

    public AutoInstallPolicy withMinimumVersionCode(Integer minimumVersionCode) {
        this.minimumVersionCode = minimumVersionCode;
        return this;
    }
    
    public AutoInstallPolicy(){}
}
