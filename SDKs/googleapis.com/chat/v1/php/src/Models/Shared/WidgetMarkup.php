<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * WidgetMarkup - A widget is a UI element that presents texts, images, etc.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class WidgetMarkup
{
    /**
     * A list of buttons. Buttons is also oneof data and only one of these fields should be set.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Button> $buttons
     */
	#[\JMS\Serializer\Annotation\SerializedName('buttons')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Button>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $buttons = null;
    
    /**
     * An image that is specified by a URL and can have an onclick action.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Image $image
     */
	#[\JMS\Serializer\Annotation\SerializedName('image')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Image')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Image $image = null;
    
    /**
     * A UI element contains a key (label) and a value (content). And this element may also contain some actions such as onclick button.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\KeyValue $keyValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyValue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\KeyValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?KeyValue $keyValue = null;
    
    /**
     * A paragraph of text. Formatted text supported.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TextParagraph $textParagraph
     */
	#[\JMS\Serializer\Annotation\SerializedName('textParagraph')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TextParagraph')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TextParagraph $textParagraph = null;
    
	public function __construct()
	{
		$this->buttons = null;
		$this->image = null;
		$this->keyValue = null;
		$this->textParagraph = null;
	}
}
