// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ApproveAnAchTransferPathParams struct {
	AchTransferID string `pathParam:"style=simple,explode=false,name=ach_transfer_id"`
}

type ApproveAnAchTransferRequest struct {
	PathParams ApproveAnAchTransferPathParams
}

type ApproveAnAchTransferDefaultApplicationJSON13StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ApproveAnAchTransferDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ApproveAnAchTransferDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON13TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON13TypeEnumRateLimitedError ApproveAnAchTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON13 struct {
	Detail     string                                                 `json:"detail"`
	RetryAfter *int64                                                 `json:"retry_after,omitempty"`
	Status     ApproveAnAchTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                 `json:"title"`
	Type       ApproveAnAchTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON12StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree ApproveAnAchTransferDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ApproveAnAchTransferDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON12TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError ApproveAnAchTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON12 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON11StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour ApproveAnAchTransferDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ApproveAnAchTransferDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON11TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError ApproveAnAchTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON11 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON10StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON10StatusEnumFourHundred ApproveAnAchTransferDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ApproveAnAchTransferDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON10TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON10TypeEnumMalformedRequestError ApproveAnAchTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON10 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON9StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON9StatusEnumFourHundred ApproveAnAchTransferDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ApproveAnAchTransferDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON9TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON9TypeEnumInvalidParametersError ApproveAnAchTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                              `json:"errors,omitempty"`
	Status ApproveAnAchTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON8StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine ApproveAnAchTransferDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ApproveAnAchTransferDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON8TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON8TypeEnumInvalidOperationError ApproveAnAchTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON8 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON7StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne ApproveAnAchTransferDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ApproveAnAchTransferDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON7TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ApproveAnAchTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON7 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON6StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON6StatusEnumFiveHundred ApproveAnAchTransferDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ApproveAnAchTransferDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON6TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON6TypeEnumInternalServerError ApproveAnAchTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON6 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON5StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree ApproveAnAchTransferDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ApproveAnAchTransferDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON5TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ApproveAnAchTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON5 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON4StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ApproveAnAchTransferDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ApproveAnAchTransferDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON4TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ApproveAnAchTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON4 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON3StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine ApproveAnAchTransferDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ApproveAnAchTransferDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON3TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError ApproveAnAchTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON3 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON2StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree ApproveAnAchTransferDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ApproveAnAchTransferDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON2TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ApproveAnAchTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON2 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ApproveAnAchTransferDefaultApplicationJSON1StatusEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour ApproveAnAchTransferDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ApproveAnAchTransferDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON1TypeEnum string

const (
	ApproveAnAchTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ApproveAnAchTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ApproveAnAchTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ApproveAnAchTransferDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAchTransferDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ApproveAnAchTransferDefaultApplicationJSON1 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAnAchTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAnAchTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ApproveAnAchTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ACH Transfer
	AchTransfer *shared.AchTransfer
	// Error
	Error interface{}
}
