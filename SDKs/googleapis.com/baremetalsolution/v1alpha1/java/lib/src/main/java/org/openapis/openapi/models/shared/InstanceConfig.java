/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InstanceConfig - Configuration parameters for a new instance.
 */
public class InstanceConfig {
    /**
     * A network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientNetwork")
    public NetworkAddress clientNetwork;

    public InstanceConfig withClientNetwork(NetworkAddress clientNetwork) {
        this.clientNetwork = clientNetwork;
        return this;
    }
    
    /**
     * Whether the instance should be provisioned with Hyperthreading enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hyperthreading")
    public Boolean hyperthreading;

    public InstanceConfig withHyperthreading(Boolean hyperthreading) {
        this.hyperthreading = hyperthreading;
        return this;
    }
    
    /**
     * A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public InstanceConfig withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Instance type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceType")
    public String instanceType;

    public InstanceConfig withInstanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }
    
    /**
     * Location where to deploy the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;

    public InstanceConfig withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * OS image to initialize the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osImage")
    public String osImage;

    public InstanceConfig withOsImage(String osImage) {
        this.osImage = osImage;
        return this;
    }
    
    /**
     * A network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateNetwork")
    public NetworkAddress privateNetwork;

    public InstanceConfig withPrivateNetwork(NetworkAddress privateNetwork) {
        this.privateNetwork = privateNetwork;
        return this;
    }
    
    /**
     * User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userNote")
    public String userNote;

    public InstanceConfig withUserNote(String userNote) {
        this.userNote = userNote;
        return this;
    }
    
    public InstanceConfig(){}
}
