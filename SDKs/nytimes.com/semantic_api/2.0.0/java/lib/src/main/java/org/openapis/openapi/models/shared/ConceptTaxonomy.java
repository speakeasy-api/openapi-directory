/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ConceptTaxonomy {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_concept_id")
    public Long sourceConceptId;
    public ConceptTaxonomy withSourceConceptId(Long sourceConceptId) {
        this.sourceConceptId = sourceConceptId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_concept_name")
    public String sourceConceptName;
    public ConceptTaxonomy withSourceConceptName(String sourceConceptName) {
        this.sourceConceptName = sourceConceptName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_concept_type")
    public String sourceConceptType;
    public ConceptTaxonomy withSourceConceptType(String sourceConceptType) {
        this.sourceConceptType = sourceConceptType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_concept_vernacular")
    public String sourceConceptVernacular;
    public ConceptTaxonomy withSourceConceptVernacular(String sourceConceptVernacular) {
        this.sourceConceptVernacular = sourceConceptVernacular;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_concept_id")
    public Long targetConceptId;
    public ConceptTaxonomy withTargetConceptId(Long targetConceptId) {
        this.targetConceptId = targetConceptId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_concept_name")
    public String targetConceptName;
    public ConceptTaxonomy withTargetConceptName(String targetConceptName) {
        this.targetConceptName = targetConceptName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_concept_type")
    public String targetConceptType;
    public ConceptTaxonomy withTargetConceptType(String targetConceptType) {
        this.targetConceptType = targetConceptType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_concept_vernacular")
    public String targetConceptVernacular;
    public ConceptTaxonomy withTargetConceptVernacular(String targetConceptVernacular) {
        this.targetConceptVernacular = targetConceptVernacular;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxonomic_relation")
    public String taxonomicRelation;
    public ConceptTaxonomy withTaxonomicRelation(String taxonomicRelation) {
        this.taxonomicRelation = taxonomicRelation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxonomic_verification_status")
    public String taxonomicVerificationStatus;
    public ConceptTaxonomy withTaxonomicVerificationStatus(String taxonomicVerificationStatus) {
        this.taxonomicVerificationStatus = taxonomicVerificationStatus;
        return this;
    }
    
}
