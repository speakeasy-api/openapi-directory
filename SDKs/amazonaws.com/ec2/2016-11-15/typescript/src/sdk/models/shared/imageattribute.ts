/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The volume type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon EC2 User Guide</i>. If the volume type is <code>io1</code> or <code>io2</code>, you must specify the IOPS that the volume supports.
 */
export enum ImageAttributeBlockDeviceMappingsEbsVolumeTypeEnum {
  Standard = "standard",
  Io1 = "io1",
  Io2 = "io2",
  Gp2 = "gp2",
  Sc1 = "sc1",
  St1 = "st1",
  Gp3 = "gp3",
}

/**
 * Parameters used to automatically set up EBS volumes when the instance is launched.
 */
export class ImageAttributeBlockDeviceMappingsEbs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  deleteOnTermination?: boolean;

  @SpeakeasyMetadata()
  encrypted?: boolean;

  @SpeakeasyMetadata()
  iops?: number;

  @SpeakeasyMetadata()
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  outpostArn?: string;

  @SpeakeasyMetadata()
  snapshotId?: string;

  @SpeakeasyMetadata()
  throughput?: number;

  @SpeakeasyMetadata()
  volumeSize?: number;

  @SpeakeasyMetadata()
  volumeType?: ImageAttributeBlockDeviceMappingsEbsVolumeTypeEnum;
}

/**
 * Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch.
 */
export class ImageAttributeBlockDeviceMappings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  deviceName?: string;

  @SpeakeasyMetadata()
  ebs?: ImageAttributeBlockDeviceMappingsEbs;

  @SpeakeasyMetadata()
  noDevice?: string;

  @SpeakeasyMetadata()
  virtualName?: string;
}

/**
 * The boot mode.
 */
export class ImageAttributeBootMode extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * A description for the AMI.
 */
export class ImageAttributeDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * If <code>v2.0</code>, it indicates that IMDSv2 is specified in the AMI. Instances launched from this AMI will have <code>HttpTokens</code> automatically set to <code>required</code> so that, by default, the instance requires that IMDSv2 is used when requesting instance metadata. In addition, <code>HttpPutResponseHopLimit</code> is set to <code>2</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration">Configure the AMI</a> in the <i>Amazon EC2 User Guide</i>.
 */
export class ImageAttributeImdsSupport extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The kernel ID.
 */
export class ImageAttributeKernelId extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the AMI was last used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported.</p> <note> <p> <code>lastLaunchedTime</code> data is available starting April 2017.</p> </note>
 */
export class ImageAttributeLastLaunchedTime extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The name of the group.
 */
export enum ImageAttributeLaunchPermissionsGroupEnum {
  All = "all",
}

/**
 * Describes a launch permission.
 */
export class ImageAttributeLaunchPermissions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  group?: ImageAttributeLaunchPermissionsGroupEnum;

  @SpeakeasyMetadata()
  organizationArn?: string;

  @SpeakeasyMetadata()
  organizationalUnitArn?: string;

  @SpeakeasyMetadata()
  userId?: string;
}

/**
 * The type of product code.
 */
export enum ImageAttributeProductCodesProductCodeTypeEnum {
  Devpay = "devpay",
  Marketplace = "marketplace",
}

/**
 * Describes a product code.
 */
export class ImageAttributeProductCodes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  productCodeId?: string;

  @SpeakeasyMetadata()
  productCodeType?: ImageAttributeProductCodesProductCodeTypeEnum;
}

/**
 * The RAM disk ID.
 */
export class ImageAttributeRamdiskId extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
 */
export class ImageAttributeSriovNetSupport extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * If the image is configured for NitroTPM support, the value is <code>v2.0</code>.
 */
export class ImageAttributeTpmSupport extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Base64 representation of the non-volatile UEFI variable store. To retrieve the UEFI data, use the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceUefiData">GetInstanceUefiData</a> command. You can inspect and modify the UEFI data by using the <a href="https://github.com/awslabs/python-uefivars">python-uefivars tool</a> on GitHub. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html">UEFI Secure Boot</a> in the <i>Amazon EC2 User Guide</i>.
 */
export class ImageAttributeUefiData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes an image attribute.
 */
export class ImageAttribute extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ImageAttributeBlockDeviceMappings })
  blockDeviceMappings?: ImageAttributeBlockDeviceMappings[];

  @SpeakeasyMetadata()
  bootMode?: ImageAttributeBootMode;

  @SpeakeasyMetadata()
  description?: ImageAttributeDescription;

  @SpeakeasyMetadata()
  imageId?: string;

  @SpeakeasyMetadata()
  imdsSupport?: ImageAttributeImdsSupport;

  @SpeakeasyMetadata()
  kernelId?: ImageAttributeKernelId;

  @SpeakeasyMetadata()
  lastLaunchedTime?: ImageAttributeLastLaunchedTime;

  @SpeakeasyMetadata({ elemType: ImageAttributeLaunchPermissions })
  launchPermissions?: ImageAttributeLaunchPermissions[];

  @SpeakeasyMetadata({ elemType: ImageAttributeProductCodes })
  productCodes?: ImageAttributeProductCodes[];

  @SpeakeasyMetadata()
  ramdiskId?: ImageAttributeRamdiskId;

  @SpeakeasyMetadata()
  sriovNetSupport?: ImageAttributeSriovNetSupport;

  @SpeakeasyMetadata()
  tpmSupport?: ImageAttributeTpmSupport;

  @SpeakeasyMetadata()
  uefiData?: ImageAttributeUefiData;
}
