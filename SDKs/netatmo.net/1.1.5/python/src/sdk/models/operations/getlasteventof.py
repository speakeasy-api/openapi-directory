"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import nawelcomeeventresponse as shared_nawelcomeeventresponse
from typing import Optional


@dataclasses.dataclass
class GetlasteventofSecurity:
    
    code_oauth: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    password_oauth: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetlasteventofRequest:
    
    home_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'home_id', 'style': 'form', 'explode': True }})
    r"""ID of the Home you're interested in"""  
    person_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'person_id', 'style': 'form', 'explode': True }})
    r"""Your request will retrieve all events of the given home until the most recent event of the given person"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Number of events to retrieve. Default is 30."""  
    

@dataclasses.dataclass
class GetlasteventofResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    na_welcome_event_response: Optional[shared_nawelcomeeventresponse.NAWelcomeEventResponse] = dataclasses.field(default=None)
    r"""Successful response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    