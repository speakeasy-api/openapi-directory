<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EnterpriseCrmEventbusProtoNextTask - The task that is next in line to be executed, if the condition specified evaluated to true.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EnterpriseCrmEventbusProtoNextTask
{
    /**
     * Combined condition for this task to become an eligible next task. Each of these combined_conditions are joined with logical OR. DEPRECATED: use `condition`
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoCombinedCondition> $combinedConditions
     */
	#[\JMS\Serializer\Annotation\SerializedName('combinedConditions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoCombinedCondition>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $combinedConditions = null;
    
    /**
     * Standard filter expression for this task to become an eligible next task.
     * 
     * @var ?string $condition
     */
	#[\JMS\Serializer\Annotation\SerializedName('condition')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $condition = null;
    
    /**
     * User-provided description intended to give more business context about the next task edge or condition.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * User-provided label that is attached to this edge in the UI.
     * 
     * @var ?string $label
     */
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
    /**
     * ID of the next task.
     * 
     * @var ?string $taskConfigId
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskConfigId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taskConfigId = null;
    
    /**
     * Task number of the next task.
     * 
     * @var ?string $taskNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taskNumber = null;
    
	public function __construct()
	{
		$this->combinedConditions = null;
		$this->condition = null;
		$this->description = null;
		$this->label = null;
		$this->taskConfigId = null;
		$this->taskNumber = null;
	}
}
