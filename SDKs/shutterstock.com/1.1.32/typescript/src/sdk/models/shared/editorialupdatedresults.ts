/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EditorialUpdatedContent } from "./editorialupdatedcontent";
import { Expose, Type } from "class-transformer";

/**
 * Editorial updated results
 */
export class EditorialUpdatedResults extends SpeakeasyBase {
  /**
   * Editorial updated items
   */
  @SpeakeasyMetadata({ elemType: EditorialUpdatedContent })
  @Expose({ name: "data" })
  @Type(() => EditorialUpdatedContent)
  data: EditorialUpdatedContent[];

  /**
   * Optional error message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Cursor value that represents the next page of results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  /**
   * Number of results per page
   */
  @SpeakeasyMetadata()
  @Expose({ name: "per_page" })
  perPage?: number;

  /**
   * Cursor value that represents the previous page of results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prev" })
  prev?: string;
}
