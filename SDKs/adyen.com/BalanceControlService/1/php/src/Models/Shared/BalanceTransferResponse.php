<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BalanceTransferResponse - OK - the request has succeeded.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BalanceTransferResponse
{
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    public Amount $amount;
    
    /**
     * The date when the balance transfer was requested.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * A human-readable description for the transfer. You can use alphanumeric characters and hyphens. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The unique identifier of the source merchant account from which funds are deducted.
     * 
     * @var string $fromMerchant
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromMerchant')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $fromMerchant;
    
    /**
     * Adyen's 16-character string reference associated with the balance transfer.
     * 
     * @var string $pspReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('pspReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $pspReference;
    
    /**
     * A reference for the balance transfer. If you don't provide this in the request, Adyen generates a unique reference.
     * 
     * Maximum length: 80 characters.
     * 
     * @var ?string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reference = null;
    
    /**
     * The status of the balance transfer. Possible values: **transferred**, **failed**, **error**, and **notEnoughBalance**.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\BalanceTransferResponseStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BalanceTransferResponseStatusEnum>')]
    public BalanceTransferResponseStatusEnum $status;
    
    /**
     * The unique identifier of the destination merchant account from which funds are transferred.
     * 
     * @var string $toMerchant
     */
	#[\JMS\Serializer\Annotation\SerializedName('toMerchant')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $toMerchant;
    
    /**
     * The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\BalanceTransferResponseTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BalanceTransferResponseTypeEnum>')]
    public BalanceTransferResponseTypeEnum $type;
    
	public function __construct()
	{
		$this->amount = new \OpenAPI\OpenAPI\Models\Shared\Amount();
		$this->createdAt = new \DateTime();
		$this->description = null;
		$this->fromMerchant = "";
		$this->pspReference = "";
		$this->reference = null;
		$this->status = \OpenAPI\OpenAPI\Models\Shared\BalanceTransferResponseStatusEnum::ERROR;
		$this->toMerchant = "";
		$this->type = \OpenAPI\OpenAPI\Models\Shared\BalanceTransferResponseTypeEnum::TAX;
	}
}
