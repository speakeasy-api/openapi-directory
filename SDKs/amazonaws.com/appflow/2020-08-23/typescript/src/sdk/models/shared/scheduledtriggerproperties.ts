/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataPullModeEnum } from "./datapullmodeenum";
import { Expose, Transform } from "class-transformer";

/**
 *  Specifies the configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the <code>Scheduled</code> trigger type.
 */
export class ScheduledTriggerProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dataPullMode" })
  dataPullMode?: DataPullModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "firstExecutionFrom" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstExecutionFrom?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "flowErrorDeactivationThreshold" })
  flowErrorDeactivationThreshold?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "scheduleEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scheduleEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "scheduleExpression" })
  scheduleExpression: string;

  @SpeakeasyMetadata()
  @Expose({ name: "scheduleOffset" })
  scheduleOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "scheduleStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scheduleStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;
}
