// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteNetworkInsightsAccessScopeAnalysisActionEnum
type GETDeleteNetworkInsightsAccessScopeAnalysisActionEnum string

const (
	GETDeleteNetworkInsightsAccessScopeAnalysisActionEnumDeleteNetworkInsightsAccessScopeAnalysis GETDeleteNetworkInsightsAccessScopeAnalysisActionEnum = "DeleteNetworkInsightsAccessScopeAnalysis"
)

func (e GETDeleteNetworkInsightsAccessScopeAnalysisActionEnum) ToPointer() *GETDeleteNetworkInsightsAccessScopeAnalysisActionEnum {
	return &e
}

func (e *GETDeleteNetworkInsightsAccessScopeAnalysisActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteNetworkInsightsAccessScopeAnalysis":
		*e = GETDeleteNetworkInsightsAccessScopeAnalysisActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteNetworkInsightsAccessScopeAnalysisActionEnum: %v", v)
	}
}

// GETDeleteNetworkInsightsAccessScopeAnalysisVersionEnum
type GETDeleteNetworkInsightsAccessScopeAnalysisVersionEnum string

const (
	GETDeleteNetworkInsightsAccessScopeAnalysisVersionEnumTwoThousandAndSixteen1115 GETDeleteNetworkInsightsAccessScopeAnalysisVersionEnum = "2016-11-15"
)

func (e GETDeleteNetworkInsightsAccessScopeAnalysisVersionEnum) ToPointer() *GETDeleteNetworkInsightsAccessScopeAnalysisVersionEnum {
	return &e
}

func (e *GETDeleteNetworkInsightsAccessScopeAnalysisVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteNetworkInsightsAccessScopeAnalysisVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteNetworkInsightsAccessScopeAnalysisVersionEnum: %v", v)
	}
}

type GETDeleteNetworkInsightsAccessScopeAnalysisRequest struct {
	Action GETDeleteNetworkInsightsAccessScopeAnalysisActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the Network Access Scope analysis.
	NetworkInsightsAccessScopeAnalysisID string                                                 `queryParam:"style=form,explode=true,name=NetworkInsightsAccessScopeAnalysisId"`
	Version                              GETDeleteNetworkInsightsAccessScopeAnalysisVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm                        *string                                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteNetworkInsightsAccessScopeAnalysisResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
