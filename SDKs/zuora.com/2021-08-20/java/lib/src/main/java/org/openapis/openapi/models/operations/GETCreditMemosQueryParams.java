/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETCreditMemosQueryParams {
    /**
     * This parameter filters the response based on the `accountId` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=accountId")
    public String accountId;
    public GETCreditMemosQueryParams withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `amount` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=amount")
    public Double amount;
    public GETCreditMemosQueryParams withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `appliedAmount` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=appliedAmount")
    public Double appliedAmount;
    public GETCreditMemosQueryParams withAppliedAmount(Double appliedAmount) {
        this.appliedAmount = appliedAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `autoApplyUponPosting` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=autoApplyUponPosting")
    public Boolean autoApplyUponPosting;
    public GETCreditMemosQueryParams withAutoApplyUponPosting(Boolean autoApplyUponPosting) {
        this.autoApplyUponPosting = autoApplyUponPosting;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `createdById` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createdById")
    public String createdById;
    public GETCreditMemosQueryParams withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `createdDate` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createdDate")
    public OffsetDateTime createdDate;
    public GETCreditMemosQueryParams withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `creditMemoDate` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=creditMemoDate")
    public LocalDate creditMemoDate;
    public GETCreditMemosQueryParams withCreditMemoDate(LocalDate creditMemoDate) {
        this.creditMemoDate = creditMemoDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `currency` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=currency")
    public String currency;
    public GETCreditMemosQueryParams withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `excludeFromAutoApplyRules` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=excludeFromAutoApplyRules")
    public Boolean excludeFromAutoApplyRules;
    public GETCreditMemosQueryParams withExcludeFromAutoApplyRules(Boolean excludeFromAutoApplyRules) {
        this.excludeFromAutoApplyRules = excludeFromAutoApplyRules;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `number` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=number")
    public String number;
    public GETCreditMemosQueryParams withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * Number of rows returned per page.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Long pageSize;
    public GETCreditMemosQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `referredInvoiceId` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=referredInvoiceId")
    public String referredInvoiceId;
    public GETCreditMemosQueryParams withReferredInvoiceId(String referredInvoiceId) {
        this.referredInvoiceId = referredInvoiceId;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `refundAmount` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=refundAmount")
    public Double refundAmount;
    public GETCreditMemosQueryParams withRefundAmount(Double refundAmount) {
        this.refundAmount = refundAmount;
        return this;
    }
    
    /**
     * This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
     * 
     * A sortable field uses the following form: 
     * 
     * *operator* *field_name*
     * 
     * You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
     * 
     * *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
     * 
     *   - The `-` operator indicates an ascending order.
     *   - The `+` operator indicates a descending order.
     * 
     * By default, the response data is displayed in descending order by credit memo number.
     * 
     * *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
     * 
     *   - accountId
     *   - amount
     *   - appliedAmount
     *   - createdById
     *   - createdDate
     *   - creditMemoDate
     *   - number
     *   - referredInvoiceId
     *   - refundAmount
     *   - status
     *   - targetDate
     *   - taxAmount
     *   - totalTaxExemptAmount
     *   - transferredToAccounting
     *   - unappliedAmount
     *   - updatedDate
     * 
     *   
     * Examples:
     * 
     * - /v1/creditmemos?sort=+number
     * 
     * - /v1/creditmemos?status=Processed&amp;sort=-number,+amount
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public GETCreditMemosQueryParams withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `status` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=status")
    public GETCreditMemosStatusEnum status;
    public GETCreditMemosQueryParams withStatus(GETCreditMemosStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `targetDate` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=targetDate")
    public LocalDate targetDate;
    public GETCreditMemosQueryParams withTargetDate(LocalDate targetDate) {
        this.targetDate = targetDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `taxAmount` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=taxAmount")
    public Double taxAmount;
    public GETCreditMemosQueryParams withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `totalTaxExemptAmount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=totalTaxExemptAmount")
    public Double totalTaxExemptAmount;
    public GETCreditMemosQueryParams withTotalTaxExemptAmount(Double totalTaxExemptAmount) {
        this.totalTaxExemptAmount = totalTaxExemptAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `transferredToAccounting` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=transferredToAccounting")
    public GETCreditMemosTransferredToAccountingEnum transferredToAccounting;
    public GETCreditMemosQueryParams withTransferredToAccounting(GETCreditMemosTransferredToAccountingEnum transferredToAccounting) {
        this.transferredToAccounting = transferredToAccounting;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `unappliedAmount` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=unappliedAmount")
    public Double unappliedAmount;
    public GETCreditMemosQueryParams withUnappliedAmount(Double unappliedAmount) {
        this.unappliedAmount = unappliedAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `updatedById` field. 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=updatedById")
    public String updatedById;
    public GETCreditMemosQueryParams withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `updatedDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=updatedDate")
    public OffsetDateTime updatedDate;
    public GETCreditMemosQueryParams withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
