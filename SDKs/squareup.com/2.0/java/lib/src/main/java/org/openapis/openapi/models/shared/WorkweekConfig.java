/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorkweekConfig - Sets the day of the week and hour of the day that a business starts a
 * workweek. This is used to calculate overtime pay.
 */
public class WorkweekConfig {
    /**
     * A read-only timestamp in RFC 3339 format; presented in UTC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;
    public WorkweekConfig withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The UUID for this object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public WorkweekConfig withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The local time at which a business week ends. Represented as a
     * string in `HH:MM` format (`HH:MM:SS` is also accepted, but seconds are
     * truncated).
     */
    @JsonProperty("start_of_day_local_time")
    public String startOfDayLocalTime;
    public WorkweekConfig withStartOfDayLocalTime(String startOfDayLocalTime) {
        this.startOfDayLocalTime = startOfDayLocalTime;
        return this;
    }
    
    /**
     * The day of the week on which a business week ends for
     * compensation purposes.
     */
    @JsonProperty("start_of_week")
    public String startOfWeek;
    public WorkweekConfig withStartOfWeek(String startOfWeek) {
        this.startOfWeek = startOfWeek;
        return this;
    }
    
    /**
     * A read-only timestamp in RFC 3339 format; presented in UTC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;
    public WorkweekConfig withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * Used for resolving concurrency issues. The request fails if the version
     * provided does not match the server version at the time of the request. If not provided,
     * Square executes a blind write; potentially overwriting data from another
     * write.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public Long version;
    public WorkweekConfig withVersion(Long version) {
        this.version = version;
        return this;
    }
    
}
