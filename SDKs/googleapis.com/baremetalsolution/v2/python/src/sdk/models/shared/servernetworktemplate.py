"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudbaremetalsolutionv2servernetworktemplatelogicalinterface as shared_googlecloudbaremetalsolutionv2servernetworktemplatelogicalinterface
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ServerNetworkTemplate:
    r"""Network template."""
    
    applicable_instance_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicableInstanceTypes'), 'exclude': lambda f: f is None }})
    r"""Instance types this template is applicable to."""  
    logical_interfaces: Optional[list[shared_googlecloudbaremetalsolutionv2servernetworktemplatelogicalinterface.GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logicalInterfaces'), 'exclude': lambda f: f is None }})
    r"""Logical interfaces."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \\"bond\\" or \\"nic\\"."""  
    