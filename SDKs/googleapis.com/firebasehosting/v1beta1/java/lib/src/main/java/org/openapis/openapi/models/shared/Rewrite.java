/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Rewrite - A [`Rewrite`](https://firebase.google.com/docs/hosting/full-config#rewrites) specifies a URL pattern that, if matched to the request URL path, triggers Hosting to respond as if the service were given the specified destination URL.
 */
public class Rewrite {
    /**
     * The request will be forwarded to Firebase Dynamic Links.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dynamicLinks")
    public Boolean dynamicLinks;

    public Rewrite withDynamicLinks(Boolean dynamicLinks) {
        this.dynamicLinks = dynamicLinks;
        return this;
    }
    
    /**
     * The function to proxy requests to. Must match the exported function name exactly.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("function")
    public String function;

    public Rewrite withFunction(String function) {
        this.function = function;
        return this;
    }
    
    /**
     * Optional. Specify a Cloud region for rewritten Functions invocations. If not provided, defaults to us-central1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("functionRegion")
    public String functionRegion;

    public Rewrite withFunctionRegion(String functionRegion) {
        this.functionRegion = functionRegion;
        return this;
    }
    
    /**
     * The user-supplied [glob](https://firebase.google.com/docs/hosting/full-config#glob_pattern_matching) to match against the request URL path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("glob")
    public String glob;

    public Rewrite withGlob(String glob) {
        this.glob = glob;
        return this;
    }
    
    /**
     * The URL path to rewrite the request to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;

    public Rewrite withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * The user-supplied RE2 regular expression to match against the request URL path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regex")
    public String regex;

    public Rewrite withRegex(String regex) {
        this.regex = regex;
        return this;
    }
    
    /**
     * A configured rewrite that directs requests to a Cloud Run service. If the Cloud Run service does not exist when setting or updating your Firebase Hosting configuration, then the request fails. Any errors from the Cloud Run service are passed to the end user (for example, if you delete a service, any requests directed to that service receive a `404` error).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("run")
    public CloudRunRewrite run;

    public Rewrite withRun(CloudRunRewrite run) {
        this.run = run;
        return this;
    }
    
    public Rewrite(){}
}
