/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PutAddonLinkersLinkerKeyValuesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  apiKey?: string;

  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2?: string;
}

export class PutAddonLinkersLinkerKeyValuesRequest extends SpeakeasyBase {
  /**
   * The unique key of a [linker module](/cloud/bitbucket/modules/linker/)
   *
   * @remarks
   * as defined in an application descriptor.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=linker_key",
  })
  linkerKey: string;
}

export class PutAddonLinkersLinkerKeyValuesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid input.
   */
  @SpeakeasyMetadata()
  error?: Record<string, any>;
}
