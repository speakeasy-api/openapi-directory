<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateFilterRequestBody
{
    /**
     * Specifies the action that is to be applied to the findings that match the filter.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateFilterRequestBodyActionEnum $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateFilterRequestBodyActionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateFilterRequestBodyActionEnum $action = null;
    
    /**
     * A description of the filter.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The Amazon Resource Number (ARN) of the filter to update.
     * 
     * @var string $filterArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $filterArn;
    
    /**
     * Details on the criteria used to define the filter.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateFilterRequestBodyFilterCriteria $filterCriteria
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterCriteria')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateFilterRequestBodyFilterCriteria')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateFilterRequestBodyFilterCriteria $filterCriteria = null;
    
    /**
     * The name of the filter.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The reason the filter was updated.
     * 
     * @var ?string $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reason = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->description = null;
		$this->filterArn = "";
		$this->filterCriteria = null;
		$this->name = null;
		$this->reason = null;
	}
}
