// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeClustersXAmzTargetEnum
type DescribeClustersXAmzTargetEnum string

const (
	DescribeClustersXAmzTargetEnumAmazonEc2ContainerServiceV20141113DescribeClusters DescribeClustersXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.DescribeClusters"
)

func (e DescribeClustersXAmzTargetEnum) ToPointer() *DescribeClustersXAmzTargetEnum {
	return &e
}

func (e *DescribeClustersXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonEC2ContainerServiceV20141113.DescribeClusters":
		*e = DescribeClustersXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeClustersXAmzTargetEnum: %v", v)
	}
}

type DescribeClustersRequest struct {
	DescribeClustersRequest shared.DescribeClustersRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              DescribeClustersXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeClustersResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// Success
	DescribeClustersResponse *shared.DescribeClustersResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
}
