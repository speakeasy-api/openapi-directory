/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 *
 * @remarks
 * Value | Notes
 * ----- | -----
 * `'L'` | `'low'`
 * `'LL'` | `'alert low'`
 * `'H'` | `'high'`
 * `'HH'` | `'alert high'`
 * `'<'` | `'panic low'`
 * `'>'` | `'panic high'`
 * `'A'` | `'abnormal'`
 * `'AA'` | `'very abnormal'`
 * `'S'` | `'susceptible'`
 * `'R'` | `'resistant'`
 * `'I'` | `'intermediate'`
 * `'NEG'` | `'negative'`
 * `'POS'` | `'positive'`
 * `'N'` | `'normal'`
 * `''` | `'no comment'`
 *
 */
export enum LabResultAbnormalStatusEnum {
  L = "L",
  Ll = "LL",
  H = "H",
  Hh = "HH",
  LessThan = "<",
  GreaterThan = ">",
  A = "A",
  Aa = "AA",
  S = "S",
  R = "R",
  I = "I",
  Neg = "NEG",
  Pos = "POS",
  N = "N",
  Unknown = "",
}

/**
 *
 * @remarks
 * Value | Notes
 * ----- | -----
 * `'P'` | `'preliminary'`
 * `'I'` | `'pending'`
 * `'C'` | `'correction'`
 * `'F'` | `'final'`
 * `'X'` | `'canceled'`
 *
 */
export enum LabResultStatusEnum {
  P = "P",
  I = "I",
  C = "C",
  F = "F",
  X = "X",
}

/**
 * Created
 */
export class LabResult extends SpeakeasyBase {
  /**
   *
   * @remarks
   * Value | Notes
   * ----- | -----
   * `'L'` | `'low'`
   * `'LL'` | `'alert low'`
   * `'H'` | `'high'`
   * `'HH'` | `'alert high'`
   * `'<'` | `'panic low'`
   * `'>'` | `'panic high'`
   * `'A'` | `'abnormal'`
   * `'AA'` | `'very abnormal'`
   * `'S'` | `'susceptible'`
   * `'R'` | `'resistant'`
   * `'I'` | `'intermediate'`
   * `'NEG'` | `'negative'`
   * `'POS'` | `'positive'`
   * `'N'` | `'normal'`
   * `''` | `'no comment'`
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "abnormal_status" })
  abnormalStatus?: LabResultAbnormalStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  /**
   * ID of `/lab_documents` object for the result
   */
  @SpeakeasyMetadata()
  @Expose({ name: "document" })
  document: number;

  /**
   * This is the code used for grouping result data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_code" })
  groupCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * If true, the result will be flagged for the doctor's attention
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_abnormal" })
  isAbnormal?: string;

  /**
   * ID of `/lab_orders` object the result belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lab_order" })
  labOrder?: string;

  /**
   * ID of `/lab_tests` object for the result
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lab_test" })
  labTest: number;

  /**
   * When ``value_is_numeric`` is True, this parameter must be a string of the form ``"<lower> <upper>", where both lower and upper are numerical``
   */
  @SpeakeasyMetadata()
  @Expose({ name: "normal_range" })
  normalRange?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "observation_code" })
  observationCode?: string;

  /**
   * For example, ``"Blood Urea Nitrogen (BUN)"``
   */
  @SpeakeasyMetadata()
  @Expose({ name: "observation_description" })
  observationDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "specimen_received" })
  specimenReceived?: string;

  /**
   *
   * @remarks
   * Value | Notes
   * ----- | -----
   * `'P'` | `'preliminary'`
   * `'I'` | `'pending'`
   * `'C'` | `'correction'`
   * `'F'` | `'final'`
   * `'X'` | `'canceled'`
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: LabResultStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "test_performed" })
  testPerformed: string;

  /**
   * Unit used for the value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: string;

  /**
   * Default to `False`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value_is_numeric" })
  valueIsNumeric?: boolean;
}
