// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetWorkflowExecutionHistoryQueryParams struct {
	// Pagination limit
	MaximumPageSize *string `queryParam:"style=form,explode=true,name=maximumPageSize"`
	// Pagination token
	NextPageToken *string `queryParam:"style=form,explode=true,name=nextPageToken"`
}

// GetWorkflowExecutionHistoryXAmzTargetEnum
type GetWorkflowExecutionHistoryXAmzTargetEnum string

const (
	GetWorkflowExecutionHistoryXAmzTargetEnumSimpleWorkflowServiceGetWorkflowExecutionHistory GetWorkflowExecutionHistoryXAmzTargetEnum = "SimpleWorkflowService.GetWorkflowExecutionHistory"
)

func (e *GetWorkflowExecutionHistoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SimpleWorkflowService.GetWorkflowExecutionHistory":
		*e = GetWorkflowExecutionHistoryXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkflowExecutionHistoryXAmzTargetEnum: %s", s)
	}
}

type GetWorkflowExecutionHistoryHeaders struct {
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetWorkflowExecutionHistoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetWorkflowExecutionHistoryRequest struct {
	QueryParams GetWorkflowExecutionHistoryQueryParams
	Headers     GetWorkflowExecutionHistoryHeaders
	Request     shared.GetWorkflowExecutionHistoryInput `request:"mediaType=application/json"`
}

type GetWorkflowExecutionHistoryResponse struct {
	ContentType string
	// Success
	History *shared.History
	// OperationNotPermittedFault
	OperationNotPermittedFault interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// UnknownResourceFault
	UnknownResourceFault interface{}
}
