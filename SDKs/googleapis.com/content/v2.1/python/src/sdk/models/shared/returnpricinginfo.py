"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import monetaryamount as shared_monetaryamount
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReturnPricingInfo:
    
    charge_return_shipping_fee: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chargeReturnShippingFee'), 'exclude': lambda f: f is None }})
    r"""Default option for whether merchant should charge the customer for return shipping costs, based on customer selected return reason and merchant's return policy for the items being returned."""  
    max_return_shipping_fee: Optional[shared_monetaryamount.MonetaryAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxReturnShippingFee'), 'exclude': lambda f: f is None }})  
    refundable_items_total_amount: Optional[shared_monetaryamount.MonetaryAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refundableItemsTotalAmount'), 'exclude': lambda f: f is None }})  
    refundable_shipping_amount: Optional[shared_monetaryamount.MonetaryAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refundableShippingAmount'), 'exclude': lambda f: f is None }})  
    total_refunded_amount: Optional[shared_monetaryamount.MonetaryAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalRefundedAmount'), 'exclude': lambda f: f is None }})  
    