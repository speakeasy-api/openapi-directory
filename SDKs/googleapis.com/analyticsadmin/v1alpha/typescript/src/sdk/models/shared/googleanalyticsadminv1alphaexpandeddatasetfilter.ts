/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleAnalyticsAdminV1alphaExpandedDataSetFilterInListFilter } from "./googleanalyticsadminv1alphaexpandeddatasetfilterinlistfilter";
import { GoogleAnalyticsAdminV1alphaExpandedDataSetFilterStringFilter } from "./googleanalyticsadminv1alphaexpandeddatasetfilterstringfilter";
import { Expose, Type } from "class-transformer";

/**
 * A specific filter for a single dimension
 */
export class GoogleAnalyticsAdminV1alphaExpandedDataSetFilter extends SpeakeasyBase {
  /**
   * Required. The dimension name to filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fieldName" })
  fieldName?: string;

  /**
   * A filter for a string dimension that matches a particular list of options.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inListFilter" })
  @Type(() => GoogleAnalyticsAdminV1alphaExpandedDataSetFilterInListFilter)
  inListFilter?: GoogleAnalyticsAdminV1alphaExpandedDataSetFilterInListFilter;

  /**
   * A filter for a string-type dimension that matches a particular pattern.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringFilter" })
  @Type(() => GoogleAnalyticsAdminV1alphaExpandedDataSetFilterStringFilter)
  stringFilter?: GoogleAnalyticsAdminV1alphaExpandedDataSetFilterStringFilter;
}
