/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
export const FetchEvidenceContentServerList = [
  /**
   * Production
   */
  "https://apiz.ebay.com{basePath}",
] as const;

export class FetchEvidenceContentSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  apiAuth: string;
}

export class FetchEvidenceContentRequest extends SpeakeasyBase {
  /**
   * The identifier of the evidential file set. The identifier of an evidential file set for a payment dispute is returned under the <strong>evidence</strong> array in the <strong>getPaymentDispute</strong> response.<br><br>Below is an example of the syntax to use for this query parameter:<br><br><code>evidence_id=12345678</code>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=evidence_id",
  })
  evidenceId: string;

  /**
   * The identifier of an evidential file. This file must belong to the evidential file set identified through the <strong>evidence_id</strong> query parameter. The identifier of each evidential file is returned under the <strong>evidence.files</strong> array in the <strong>getPaymentDispute</strong> response. <br><br>Below is an example of the syntax to use for this query parameter:<br><br><code>file_id=12345678</code>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=file_id",
  })
  fileId: string;

  /**
   * The identifier of the payment dispute. The identifier of each payment dispute is returned in the <strong>getPaymentDisputeSummaries</strong> response. This identifier is passed in as a path parameter at the end of the call URI.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=payment_dispute_id",
  })
  paymentDisputeId: string;
}

export class FetchEvidenceContentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
