/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CatalogCollection - Catalog collection
 */
public class CatalogCollection {
    /**
     * Metadata about an item that is part of a collection
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cover_asset")
    public CatalogCollectionItem coverAsset;

    public CatalogCollection withCoverAsset(CatalogCollectionItem coverAsset) {
        this.coverAsset = coverAsset;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_time")
    public OffsetDateTime createdTime;

    public CatalogCollection withCreatedTime(OffsetDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public CatalogCollection withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public CatalogCollection withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * List of role assignments for a catalog collection
     */
    @JsonProperty("role_assignments")
    public CatalogCollectionRoleAssignments roleAssignments;

    public CatalogCollection withRoleAssignments(CatalogCollectionRoleAssignments roleAssignments) {
        this.roleAssignments = roleAssignments;
        return this;
    }
    
    @JsonProperty("total_item_count")
    public Double totalItemCount;

    public CatalogCollection withTotalItemCount(Double totalItemCount) {
        this.totalItemCount = totalItemCount;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_time")
    public OffsetDateTime updatedTime;

    public CatalogCollection withUpdatedTime(OffsetDateTime updatedTime) {
        this.updatedTime = updatedTime;
        return this;
    }
    
    @JsonProperty("visibility")
    public CatalogCollectionVisibilityEnum visibility;

    public CatalogCollection withVisibility(CatalogCollectionVisibilityEnum visibility) {
        this.visibility = visibility;
        return this;
    }
    
    public CatalogCollection(@JsonProperty("created_time") OffsetDateTime createdTime, @JsonProperty("id") String id, @JsonProperty("name") String name, @JsonProperty("role_assignments") CatalogCollectionRoleAssignments roleAssignments, @JsonProperty("total_item_count") Double totalItemCount, @JsonProperty("updated_time") OffsetDateTime updatedTime, @JsonProperty("visibility") CatalogCollectionVisibilityEnum visibility) {
        this.createdTime = createdTime;
        this.id = id;
        this.name = name;
        this.roleAssignments = roleAssignments;
        this.totalItemCount = totalItemCount;
        this.updatedTime = updatedTime;
        this.visibility = visibility;
  }
}
