/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ConnectorEntity } from "./connectorentity";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class ListConnectorEntitiesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ConnectorEntity, elemDepth: 2 })
  @Expose({ name: "connectorEntityMap" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ConnectorEntity[]> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ConnectorEntity);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  connectorEntityMap: Record<string, ConnectorEntity[]>;

  @SpeakeasyMetadata()
  @Expose({ name: "nextToken" })
  nextToken?: string;
}
