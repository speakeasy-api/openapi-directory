/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PerLocationCloudOutForecastSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computeForecast")
    public CloudOutComputeForecastSummaries computeForecast;

    public PerLocationCloudOutForecastSummary withComputeForecast(CloudOutComputeForecastSummaries computeForecast) {
        this.computeForecast = computeForecast;
        return this;
    }
    
    /**
     * Type of compute instance used at the cloud archival location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceType")
    public String instanceType;

    public PerLocationCloudOutForecastSummary withInstanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }
    
    /**
     * Name of the cloud archival location.
     */
    @JsonProperty("locationName")
    public String locationName;

    public PerLocationCloudOutForecastSummary withLocationName(String locationName) {
        this.locationName = locationName;
        return this;
    }
    
    /**
     * Region of the cloud archival location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationRegion")
    public String locationRegion;

    public PerLocationCloudOutForecastSummary withLocationRegion(String locationRegion) {
        this.locationRegion = locationRegion;
        return this;
    }
    
    /**
     * Type of cloud archival location.
     */
    @JsonProperty("locationType")
    public String locationType;

    public PerLocationCloudOutForecastSummary withLocationType(String locationType) {
        this.locationType = locationType;
        return this;
    }
    
    @JsonProperty("storageForecast")
    public CloudOutStorageForecastSummaries storageForecast;

    public PerLocationCloudOutForecastSummary withStorageForecast(CloudOutStorageForecastSummaries storageForecast) {
        this.storageForecast = storageForecast;
        return this;
    }
    
    public PerLocationCloudOutForecastSummary(@JsonProperty("locationName") String locationName, @JsonProperty("locationType") String locationType, @JsonProperty("storageForecast") CloudOutStorageForecastSummaries storageForecast) {
        this.locationName = locationName;
        this.locationType = locationType;
        this.storageForecast = storageForecast;
  }
}
