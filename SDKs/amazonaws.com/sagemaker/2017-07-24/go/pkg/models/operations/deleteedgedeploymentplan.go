// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteEdgeDeploymentPlanXAmzTargetEnum
type DeleteEdgeDeploymentPlanXAmzTargetEnum string

const (
	DeleteEdgeDeploymentPlanXAmzTargetEnumSageMakerDeleteEdgeDeploymentPlan DeleteEdgeDeploymentPlanXAmzTargetEnum = "SageMaker.DeleteEdgeDeploymentPlan"
)

func (e DeleteEdgeDeploymentPlanXAmzTargetEnum) ToPointer() *DeleteEdgeDeploymentPlanXAmzTargetEnum {
	return &e
}

func (e *DeleteEdgeDeploymentPlanXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.DeleteEdgeDeploymentPlan":
		*e = DeleteEdgeDeploymentPlanXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteEdgeDeploymentPlanXAmzTargetEnum: %v", v)
	}
}

type DeleteEdgeDeploymentPlanRequest struct {
	DeleteEdgeDeploymentPlanRequest shared.DeleteEdgeDeploymentPlanRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      DeleteEdgeDeploymentPlanXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteEdgeDeploymentPlanResponse struct {
	ContentType string
	// ResourceInUse
	ResourceInUse interface{}
	StatusCode    int
	RawResponse   *http.Response
}
