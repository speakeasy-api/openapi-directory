"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardProfileDigitalWalletsTextColor:
    r"""The Card's text color, specified as an RGB triple."""
    
    blue: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blue') }})
    r"""The value of the blue channel in the RGB color."""  
    green: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('green') }})
    r"""The value of the green channel in the RGB color."""  
    red: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('red') }})
    r"""The value of the red channel in the RGB color."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardProfileDigitalWallets:
    r"""How Cards should appear in digital wallets such as Apple Pay. Different wallets will use these values to render card artwork appropriately for their app."""
    
    app_icon_file_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('app_icon_file_id') }})
    r"""The identifier of the File containing the card's icon image."""  
    background_image_file_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('background_image_file_id') }})
    r"""The identifier of the File containing the card's front image."""  
    card_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_description') }})
    r"""A user-facing description for the card itself."""  
    contact_email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contact_email') }})
    r"""An email address the user can contact to receive support for their card."""  
    contact_phone: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contact_phone') }})
    r"""A phone number the user can contact to receive support for their card."""  
    contact_website: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contact_website') }})
    r"""A website the user can visit to view and receive support for their card."""  
    issuer_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issuer_name') }})
    r"""A user-facing description for whoever is issuing the card."""  
    text_color: CardProfileDigitalWalletsTextColor = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text_color') }})
    r"""The Card's text color, specified as an RGB triple."""  
    
class CardProfileStatusEnum(str, Enum):
    r"""The status of the Card Profile."""
    PENDING = 'pending'
    REJECTED = 'rejected'
    ACTIVE = 'active'
    ARCHIVED = 'archived'

class CardProfileTypeEnum(str, Enum):
    r"""A constant representing the object's type. For this resource it will always be `card_profile`."""
    CARD_PROFILE = 'card_profile'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardProfile:
    r"""This contains artwork and metadata relating to a Card's appearance in digital wallet apps like Apple Pay and Google Pay. For more information, see our guide on [digital card artwork](https://increase.com/documentation/card-art)"""
    
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created."""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""A description you can use to identify the Card Profile."""  
    digital_wallets: CardProfileDigitalWallets = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('digital_wallets') }})
    r"""How Cards should appear in digital wallets such as Apple Pay. Different wallets will use these values to render card artwork appropriately for their app."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The Card Profile identifier."""  
    status: CardProfileStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The status of the Card Profile."""  
    type: CardProfileTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""A constant representing the object's type. For this resource it will always be `card_profile`."""  
    