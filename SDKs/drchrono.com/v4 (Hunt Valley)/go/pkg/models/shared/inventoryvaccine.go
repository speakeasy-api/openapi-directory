// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InventoryVaccineStatusEnum - Status of vaccine, could be one of `active`, `inactive`, `archived`, `voided`, default to `active`
type InventoryVaccineStatusEnum string

const (
	InventoryVaccineStatusEnumActive   InventoryVaccineStatusEnum = "active"
	InventoryVaccineStatusEnumInactive InventoryVaccineStatusEnum = "inactive"
	InventoryVaccineStatusEnumArchived InventoryVaccineStatusEnum = "archived"
	InventoryVaccineStatusEnumVoided   InventoryVaccineStatusEnum = "voided"
)

func (e InventoryVaccineStatusEnum) ToPointer() *InventoryVaccineStatusEnum {
	return &e
}

func (e *InventoryVaccineStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "archived":
		fallthrough
	case "voided":
		*e = InventoryVaccineStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InventoryVaccineStatusEnum: %v", v)
	}
}

// InventoryVaccine - Created
type InventoryVaccine struct {
	// ID of `/api/inventory_categories`
	Category *int64 `json:"category,omitempty"`
	// Base cost for consumables.
	Cost      *float64 `json:"cost,omitempty"`
	CreatedAt *string  `json:"created_at,omitempty"`
	// This field can onlyu be changed by creating new patient vaccine record. Current quantity of an inventory vaccine is calculated by subtract number of records pointing to this inventory from the original quantity value.
	CurrentQuantity *int64  `json:"current_quantity,omitempty"`
	CvxCode         *string `json:"cvx_code,omitempty"`
	Doctor          int64   `json:"doctor"`
	// When will the vaccine expire
	Expiry           *string `json:"expiry,omitempty"`
	ID               *int64  `json:"id,omitempty"`
	LotNumber        *string `json:"lot_number,omitempty"`
	Manufacturer     *string `json:"manufacturer,omitempty"`
	ManufacturerCode string  `json:"manufacturer_code"`
	Name             string  `json:"name"`
	Note             *string `json:"note,omitempty"`
	// Default to zero
	OriginalQuantity *int64   `json:"original_quantity,omitempty"`
	Price            *float64 `json:"price,omitempty"`
	PriceWithTax     *float64 `json:"price_with_tax,omitempty"`
	// Is sales tax applicable to this service/product? Default to false
	SalesTaxApplicable *bool `json:"sales_tax_applicable,omitempty"`
	// Status of vaccine, could be one of `active`, `inactive`, `archived`, `voided`, default to `active`
	Status    *InventoryVaccineStatusEnum `json:"status,omitempty"`
	UpdatedAt *string                     `json:"updated_at,omitempty"`
	// Default to `"standard vaccine"`
	VaccinationType *string `json:"vaccination_type,omitempty"`
}
