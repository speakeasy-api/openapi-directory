"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import format_enum as shared_format_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SegmentImportResource:
    r"""Provides information about the import job that created a segment. An import job is a job that creates a user segment by importing endpoint definitions."""
    
    external_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExternalId') }})  
    format: shared_format_enum.FormatEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Format') }})  
    role_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoleArn') }})  
    s3_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Url') }})  
    size: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Size') }})  
    channel_counts: Optional[dict[str, int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChannelCounts'), 'exclude': lambda f: f is None }})  
    