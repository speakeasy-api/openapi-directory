// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var CancelBookingServerList = []string{
	"https://api.sandbox.viator.com/partner",
}

type CancelBookingRequest struct {
	// Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
	//
	AcceptLanguage      string                      `header:"style=simple,explode=false,name=Accept-Language"`
	CancellationRequest *shared.CancellationRequest `request:"mediaType=application/json"`
	// The ID of the booking
	BookingReference string `pathParam:"style=simple,explode=false,name=booking-reference"`
}

type CancelBooking404ApplicationJSONCodeEnum string

const (
	CancelBooking404ApplicationJSONCodeEnumNotFound CancelBooking404ApplicationJSONCodeEnum = "NOT_FOUND"
)

func (e CancelBooking404ApplicationJSONCodeEnum) ToPointer() *CancelBooking404ApplicationJSONCodeEnum {
	return &e
}

func (e *CancelBooking404ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_FOUND":
		*e = CancelBooking404ApplicationJSONCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelBooking404ApplicationJSONCodeEnum: %v", v)
	}
}

// CancelBooking404ApplicationJSONMessageEnum - The specified booking was not found; or, it was not created with this API key
type CancelBooking404ApplicationJSONMessageEnum string

const (
	CancelBooking404ApplicationJSONMessageEnumBookingNotFound CancelBooking404ApplicationJSONMessageEnum = "Booking not found"
)

func (e CancelBooking404ApplicationJSONMessageEnum) ToPointer() *CancelBooking404ApplicationJSONMessageEnum {
	return &e
}

func (e *CancelBooking404ApplicationJSONMessageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Booking not found":
		*e = CancelBooking404ApplicationJSONMessageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelBooking404ApplicationJSONMessageEnum: %v", v)
	}
}

// CancelBooking404ApplicationJSON - Not found
type CancelBooking404ApplicationJSON struct {
	Code *CancelBooking404ApplicationJSONCodeEnum `json:"code,omitempty"`
	// The specified booking was not found; or, it was not created with this API key
	Message *CancelBooking404ApplicationJSONMessageEnum `json:"message,omitempty"`
	// Timestamp of the request
	Timestamp *string `json:"timestamp,omitempty"`
	// Tracking identifier for this error response (useful when seeking support)
	TrackingID *string `json:"trackingId,omitempty"`
}

type CancelBooking400ApplicationJSONCodeEnum string

const (
	CancelBooking400ApplicationJSONCodeEnumBadRequest CancelBooking400ApplicationJSONCodeEnum = "BAD_REQUEST"
)

func (e CancelBooking400ApplicationJSONCodeEnum) ToPointer() *CancelBooking400ApplicationJSONCodeEnum {
	return &e
}

func (e *CancelBooking400ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BAD_REQUEST":
		*e = CancelBooking400ApplicationJSONCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelBooking400ApplicationJSONCodeEnum: %v", v)
	}
}

type CancelBooking400ApplicationJSONMessageEnum string

const (
	CancelBooking400ApplicationJSONMessageEnumMissingCancellationReason CancelBooking400ApplicationJSONMessageEnum = "Missing cancellation reason"
)

func (e CancelBooking400ApplicationJSONMessageEnum) ToPointer() *CancelBooking400ApplicationJSONMessageEnum {
	return &e
}

func (e *CancelBooking400ApplicationJSONMessageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Missing cancellation reason":
		*e = CancelBooking400ApplicationJSONMessageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelBooking400ApplicationJSONMessageEnum: %v", v)
	}
}

// CancelBooking400ApplicationJSON - Bad request
type CancelBooking400ApplicationJSON struct {
	Code    *CancelBooking400ApplicationJSONCodeEnum    `json:"code,omitempty"`
	Message *CancelBooking400ApplicationJSONMessageEnum `json:"message,omitempty"`
	// Timestamp of the request
	Timestamp *string `json:"timestamp,omitempty"`
	// Tracking identifier for this error response (useful when seeking support)
	TrackingID *string `json:"trackingId,omitempty"`
}

type CancelBookingResponse struct {
	// Unauthorized
	FourHundredAndOneUNAUTHORIZED *shared.FourHundredAndOneUNAUTHORIZED
	// Not Acceptable
	FourHundredAndSixNOTACCEPTABLE *shared.FourHundredAndSixNOTACCEPTABLE
	// Internal Server Error
	FiveHundredINTERNALSERVERERROR *shared.FiveHundredINTERNALSERVERERROR
	// Service Unavailable
	FiveHundredAndThreeSERVICEUNAVAILABLE *shared.FiveHundredAndThreeSERVICEUNAVAILABLE
	// Success
	CancelBookingResponse *shared.CancelBookingResponse
	ContentType           string
	StatusCode            int
	RawResponse           *http.Response
	// Bad request
	CancelBooking400ApplicationJSONObject *CancelBooking400ApplicationJSON
	// Not found
	CancelBooking404ApplicationJSONObject *CancelBooking404ApplicationJSON
}
