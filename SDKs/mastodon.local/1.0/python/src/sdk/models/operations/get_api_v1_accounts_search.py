"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import account as shared_account
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class GetAPIV1AccountsSearchSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetAPIV1AccountsSearchRequest:
    
    q: str = dataclasses.field(metadata={'query_param': { 'field_name': 'q', 'style': 'form', 'explode': True }})
    r"""What to search for"""  
    following: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'following', 'style': 'form', 'explode': True }})
    r"""Only who the user is following. Defaults to false."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Maximum number of results. Defaults to 40."""  
    resolve: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'resolve', 'style': 'form', 'explode': True }})
    r"""Attempt WebFinger lookup. Defaults to false. Use this when `q` is an exact address."""  
    

@dataclasses.dataclass
class GetAPIV1AccountsSearchResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    accounts: Optional[list[shared_account.Account]] = dataclasses.field(default=None)
    r"""Accounts matching `q` in username or display name"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""resolve=true, but the domain part of the user@domain address is not a currently live website"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    