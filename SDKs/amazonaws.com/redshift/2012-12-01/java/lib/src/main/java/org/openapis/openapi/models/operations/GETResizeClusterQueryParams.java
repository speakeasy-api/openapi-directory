/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETResizeClusterQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETResizeClusterActionEnum action;
    public GETResizeClusterQueryParams withAction(GETResizeClusterActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to &lt;code&gt;false&lt;/code&gt;, the resize type is elastic. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Classic")
    public Boolean classic;
    public GETResizeClusterQueryParams withClassic(Boolean classic) {
        this.classic = classic;
        return this;
    }
    
    /**
     * The unique identifier for the cluster to resize.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClusterIdentifier")
    public String clusterIdentifier;
    public GETResizeClusterQueryParams withClusterIdentifier(String clusterIdentifier) {
        this.clusterIdentifier = clusterIdentifier;
        return this;
    }
    
    /**
     * The new cluster type for the specified cluster.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClusterType")
    public String clusterType;
    public GETResizeClusterQueryParams withClusterType(String clusterType) {
        this.clusterType = clusterType;
        return this;
    }
    
    /**
     * The new node type for the nodes you are adding. If not specified, the cluster's current node type is used.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NodeType")
    public String nodeType;
    public GETResizeClusterQueryParams withNodeType(String nodeType) {
        this.nodeType = nodeType;
        return this;
    }
    
    /**
     * The new number of nodes for the cluster. If not specified, the cluster's current number of nodes is used.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NumberOfNodes")
    public Long numberOfNodes;
    public GETResizeClusterQueryParams withNumberOfNodes(Long numberOfNodes) {
        this.numberOfNodes = numberOfNodes;
        return this;
    }
    
    /**
     * The identifier of the reserved node.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ReservedNodeId")
    public String reservedNodeId;
    public GETResizeClusterQueryParams withReservedNodeId(String reservedNodeId) {
        this.reservedNodeId = reservedNodeId;
        return this;
    }
    
    /**
     * The identifier of the target reserved node offering.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TargetReservedNodeOfferingId")
    public String targetReservedNodeOfferingId;
    public GETResizeClusterQueryParams withTargetReservedNodeOfferingId(String targetReservedNodeOfferingId) {
        this.targetReservedNodeOfferingId = targetReservedNodeOfferingId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETResizeClusterVersionEnum version;
    public GETResizeClusterQueryParams withVersion(GETResizeClusterVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
