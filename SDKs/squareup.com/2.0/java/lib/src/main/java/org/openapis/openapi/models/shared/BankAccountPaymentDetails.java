/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BankAccountPaymentDetails - Additional details about BANK_ACCOUNT type payments.
 */
public class BankAccountPaymentDetails {
    /**
     * The ownership type of the bank account performing the transfer.
     * The type can be `INDIVIDUAL`, `COMPANY`, or `UNKNOWN`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_ownership_type")
    public String accountOwnershipType;
    public BankAccountPaymentDetails withAccountOwnershipType(String accountOwnershipType) {
        this.accountOwnershipType = accountOwnershipType;
        return this;
    }
    
    /**
     * ACH-specific details about `BANK_ACCOUNT` type payments with the `transfer_type` of `ACH`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ach_details")
    public ACHDetails achDetails;
    public BankAccountPaymentDetails withAchDetails(ACHDetails achDetails) {
        this.achDetails = achDetails;
        return this;
    }
    
    /**
     * The name of the bank associated with the bank account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bank_name")
    public String bankName;
    public BankAccountPaymentDetails withBankName(String bankName) {
        this.bankName = bankName;
        return this;
    }
    
    /**
     * The two-letter ISO code representing the country the bank account is located in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public BankAccountPaymentDetails withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Information about errors encountered during the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errors")
    public Error[] errors;
    public BankAccountPaymentDetails withErrors(Error[] errors) {
        this.errors = errors;
        return this;
    }
    
    /**
     * Uniquely identifies the bank account for this seller and can be used
     * to determine if payments are from the same bank account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;
    public BankAccountPaymentDetails withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * The statement description as sent to the bank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statement_description")
    public String statementDescription;
    public BankAccountPaymentDetails withStatementDescription(String statementDescription) {
        this.statementDescription = statementDescription;
        return this;
    }
    
    /**
     * The type of the bank transfer. The type can be `ACH` or `UNKNOWN`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transfer_type")
    public String transferType;
    public BankAccountPaymentDetails withTransferType(String transferType) {
        this.transferType = transferType;
        return this;
    }
    
}
