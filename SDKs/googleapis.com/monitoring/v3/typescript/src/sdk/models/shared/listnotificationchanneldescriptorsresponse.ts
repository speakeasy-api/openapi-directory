/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NotificationChannelDescriptor } from "./notificationchanneldescriptor";
import { Expose, Type } from "class-transformer";

/**
 * The ListNotificationChannelDescriptors response.
 */
export class ListNotificationChannelDescriptorsResponse extends SpeakeasyBase {
  /**
   * The monitored resource descriptors supported for the specified project, optionally filtered.
   */
  @SpeakeasyMetadata({ elemType: NotificationChannelDescriptor })
  @Expose({ name: "channelDescriptors" })
  @Type(() => NotificationChannelDescriptor)
  channelDescriptors?: NotificationChannelDescriptor[];

  /**
   * If not empty, indicates that there may be more results that match the request. Use the value in the page_token field in a subsequent request to fetch the next set of results. If empty, all results have been returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
