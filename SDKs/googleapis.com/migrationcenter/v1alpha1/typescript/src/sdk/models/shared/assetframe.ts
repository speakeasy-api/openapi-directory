/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PerformanceSample } from "./performancesample";
import { VirtualMachineDetails } from "./virtualmachinedetails";
import { Expose, Type } from "class-transformer";

/**
 * Contains data reported from an inventory source on an asset.
 */
export class AssetFrame extends SpeakeasyBase {
  /**
   * Generic asset attributes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: Record<string, string>;

  /**
   * Labels as key value pairs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Asset performance data samples.
   */
  @SpeakeasyMetadata({ elemType: PerformanceSample })
  @Expose({ name: "performanceSamples" })
  @Type(() => PerformanceSample)
  performanceSamples?: PerformanceSample[];

  /**
   * The time the data was reported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reportTime" })
  reportTime?: string;

  /**
   * Optional. Trace token is optionally provided to assist with debugging and traceability.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "traceToken" })
  traceToken?: string;

  /**
   * Details of a VirtualMachine.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "virtualMachineDetails" })
  @Type(() => VirtualMachineDetails)
  virtualMachineDetails?: VirtualMachineDetails;
}
