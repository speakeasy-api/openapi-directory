// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetChannelSubscribersPathParams struct {
	// The ID of the channel.
	ChannelID float64 `pathParam:"style=simple,explode=false,name=channel_id"`
}

// GetChannelSubscribersDirectionEnum - The sort direction of the results.
type GetChannelSubscribersDirectionEnum string

const (
	GetChannelSubscribersDirectionEnumAsc  GetChannelSubscribersDirectionEnum = "asc"
	GetChannelSubscribersDirectionEnumDesc GetChannelSubscribersDirectionEnum = "desc"
)

func (e *GetChannelSubscribersDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetChannelSubscribersDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelSubscribersDirectionEnum: %s", s)
	}
}

// GetChannelSubscribersFilterEnum - The attribute by which to filter the results.
type GetChannelSubscribersFilterEnum string

const (
	GetChannelSubscribersFilterEnumModerators GetChannelSubscribersFilterEnum = "moderators"
)

func (e *GetChannelSubscribersFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "moderators":
		*e = GetChannelSubscribersFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelSubscribersFilterEnum: %s", s)
	}
}

// GetChannelSubscribersSortEnum - The way to sort the results.
type GetChannelSubscribersSortEnum string

const (
	GetChannelSubscribersSortEnumAlphabetical GetChannelSubscribersSortEnum = "alphabetical"
	GetChannelSubscribersSortEnumDate         GetChannelSubscribersSortEnum = "date"
)

func (e *GetChannelSubscribersSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		*e = GetChannelSubscribersSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelSubscribersSortEnum: %s", s)
	}
}

type GetChannelSubscribersQueryParams struct {
	// The sort direction of the results.
	Direction *GetChannelSubscribersDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	Filter GetChannelSubscribersFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetChannelSubscribersSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetChannelSubscribersRequest struct {
	PathParams  GetChannelSubscribersPathParams
	QueryParams GetChannelSubscribersQueryParams
}

type GetChannelSubscribersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// No such channel exists.
	LegacyError *shared.LegacyError
	// The followers were returned.
	Users []shared.User
}
