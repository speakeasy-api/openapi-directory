<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Fee - This type is used to display fees that are automatically deducted from seller payouts.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Fee
{
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the <strong>Finances API</strong>, including an order total, a seller payout, a buyer refund, or a seller credit.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $amount = null;
    
    /**
     * This container returns jurisdiction information about region-specific fees that are charged to sellers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FeeJurisdiction $feeJurisdiction
     */
	#[\JMS\Serializer\Annotation\SerializedName('feeJurisdiction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FeeJurisdiction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FeeJurisdiction $feeJurisdiction = null;
    
    /**
     * A description of the fee that was deducted from the seller payout.
     * 
     * @var ?string $feeMemo
     */
	#[\JMS\Serializer\Annotation\SerializedName('feeMemo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $feeMemo = null;
    
    /**
     * The enumeration value returned here indicates the type of fee that was deducted from the seller payout. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/finances/types/api:FeeTypeEnum'>eBay API documentation</a>
     * 
     * @var ?string $feeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('feeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $feeType = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->feeJurisdiction = null;
		$this->feeMemo = null;
		$this->feeType = null;
	}
}
