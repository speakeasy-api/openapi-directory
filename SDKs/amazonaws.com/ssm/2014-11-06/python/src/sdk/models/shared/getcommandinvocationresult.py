"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cloudwatchoutputconfig as shared_cloudwatchoutputconfig
from ..shared import commandinvocationstatus_enum as shared_commandinvocationstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCommandInvocationResult:
    r"""Success"""
    
    cloud_watch_output_config: Optional[shared_cloudwatchoutputconfig.CloudWatchOutputConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CloudWatchOutputConfig'), 'exclude': lambda f: f is None }})  
    command_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CommandId'), 'exclude': lambda f: f is None }})  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Comment'), 'exclude': lambda f: f is None }})  
    document_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentName'), 'exclude': lambda f: f is None }})  
    document_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentVersion'), 'exclude': lambda f: f is None }})  
    execution_elapsed_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionElapsedTime'), 'exclude': lambda f: f is None }})  
    execution_end_date_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionEndDateTime'), 'exclude': lambda f: f is None }})  
    execution_start_date_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionStartDateTime'), 'exclude': lambda f: f is None }})  
    instance_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceId'), 'exclude': lambda f: f is None }})  
    plugin_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PluginName'), 'exclude': lambda f: f is None }})  
    response_code: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResponseCode'), 'exclude': lambda f: f is None }})  
    standard_error_content: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StandardErrorContent'), 'exclude': lambda f: f is None }})  
    standard_error_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StandardErrorUrl'), 'exclude': lambda f: f is None }})  
    standard_output_content: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StandardOutputContent'), 'exclude': lambda f: f is None }})  
    standard_output_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StandardOutputUrl'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_commandinvocationstatus_enum.CommandInvocationStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    status_details: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatusDetails'), 'exclude': lambda f: f is None }})  
    