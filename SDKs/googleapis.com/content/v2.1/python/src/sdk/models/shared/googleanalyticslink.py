"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import attributionsettings as shared_attributionsettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsLinkInput:
    r"""\\"Google Analytics Link\\" sources can be used to get conversion data from an existing Google Analytics property into the linked Merchant Center account."""
    
    attribution_settings: Optional[shared_attributionsettings.AttributionSettingsInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributionSettings'), 'exclude': lambda f: f is None }})
    r"""Represents attribution settings for conversion sources receiving pre-attribution data."""  
    property_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('propertyId'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. ID of the Google Analytics property the merchant is linked to."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsLink:
    r"""\\"Google Analytics Link\\" sources can be used to get conversion data from an existing Google Analytics property into the linked Merchant Center account."""
    
    attribution_settings: Optional[shared_attributionsettings.AttributionSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributionSettings'), 'exclude': lambda f: f is None }})
    r"""Represents attribution settings for conversion sources receiving pre-attribution data."""  
    property_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('propertyId'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. ID of the Google Analytics property the merchant is linked to."""  
    property_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('propertyName'), 'exclude': lambda f: f is None }})
    r"""Output only. Name of the Google Analytics property the merchant is linked to."""  
    