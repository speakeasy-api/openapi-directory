// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProjectStatusEnum string

const (
	ProjectStatusEnumPending          ProjectStatusEnum = "Pending"
	ProjectStatusEnumCreateInProgress ProjectStatusEnum = "CreateInProgress"
	ProjectStatusEnumCreateCompleted  ProjectStatusEnum = "CreateCompleted"
	ProjectStatusEnumCreateFailed     ProjectStatusEnum = "CreateFailed"
	ProjectStatusEnumDeleteInProgress ProjectStatusEnum = "DeleteInProgress"
	ProjectStatusEnumDeleteFailed     ProjectStatusEnum = "DeleteFailed"
	ProjectStatusEnumDeleteCompleted  ProjectStatusEnum = "DeleteCompleted"
	ProjectStatusEnumUpdateInProgress ProjectStatusEnum = "UpdateInProgress"
	ProjectStatusEnumUpdateCompleted  ProjectStatusEnum = "UpdateCompleted"
	ProjectStatusEnumUpdateFailed     ProjectStatusEnum = "UpdateFailed"
)

func (e *ProjectStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "CreateInProgress":
		fallthrough
	case "CreateCompleted":
		fallthrough
	case "CreateFailed":
		fallthrough
	case "DeleteInProgress":
		fallthrough
	case "DeleteFailed":
		fallthrough
	case "DeleteCompleted":
		fallthrough
	case "UpdateInProgress":
		fallthrough
	case "UpdateCompleted":
		fallthrough
	case "UpdateFailed":
		*e = ProjectStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectStatusEnum: %s", s)
	}
}
