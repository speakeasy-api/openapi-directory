/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class GetDevicePoolResponse {
    /**
     * ArgumentException
     */
    
    public Object argumentException;
    public GetDevicePoolResponse withArgumentException(Object argumentException) {
        this.argumentException = argumentException;
        return this;
    }
    
    
    public String contentType;
    public GetDevicePoolResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.GetDevicePoolResult getDevicePoolResult;
    public GetDevicePoolResponse withGetDevicePoolResult(org.openapis.openapi.models.shared.GetDevicePoolResult getDevicePoolResult) {
        this.getDevicePoolResult = getDevicePoolResult;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;
    public GetDevicePoolResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    /**
     * NotFoundException
     */
    
    public Object notFoundException;
    public GetDevicePoolResponse withNotFoundException(Object notFoundException) {
        this.notFoundException = notFoundException;
        return this;
    }
    
    /**
     * ServiceAccountException
     */
    
    public Object serviceAccountException;
    public GetDevicePoolResponse withServiceAccountException(Object serviceAccountException) {
        this.serviceAccountException = serviceAccountException;
        return this;
    }
    
    
    public Integer statusCode;
    public GetDevicePoolResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public GetDevicePoolResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
}
