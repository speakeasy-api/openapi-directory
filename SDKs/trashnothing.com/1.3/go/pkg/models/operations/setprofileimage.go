// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SetProfileImageRequestBodyPhoto struct {
	Content []byte `multipartForm:"content"`
	Photo   string `multipartForm:"name=photo"`
}

type SetProfileImageRequestBody struct {
	// If the photo needs to be cropped, a JSON encoded object with the crop arguments can be passed. The supported crop arguments are below.  All arguments except rotate are required. <br /><br /> - **original_width**: Original width of the photo before being cropped or rotated (in pixels).<br /> - **original_height**: Original height of the photo before being cropped or rotated (in pixels).<br /> - **x**: The x-coordinate of the top left corner of the cropped area.<br /> - **y**: The y-coordinate of the top left corner of the cropped area.<br /> - **size**: The size of the square cropped area.<br /> - **rotate**: (optional) The number of degrees to rotate the image before cropping.
	//   Currently only 90, 180 and 270 are supported which correspond to rotate left, rotate upside down and rotate right.
	// <br />
	//
	Crop *string `multipartForm:"name=crop"`
	// Client device pixel ratio used to determine thumbnail size (default 1.0).
	DevicePixelRatio *float64 `multipartForm:"name=device_pixel_ratio"`
	// Photo to upload.
	Photo *SetProfileImageRequestBodyPhoto `multipartForm:"file"`
	// Photo to use (if already uploaded).
	PhotoID *string `multipartForm:"name=photo_id"`
	// Whether or not to set the photo as the users' default profile image.  Set to 1 to enable and 0 to disable.
	//
	SetDefault *int64 `multipartForm:"name=set_default"`
}

// SetProfileImage200ApplicationJSON - The updated user and the photo.
type SetProfileImage200ApplicationJSON struct {
	// The result of uploading or editing a photo.
	Photo *shared.PhotoResult `json:"photo,omitempty"`
	User  *shared.CurrentUser `json:"user,omitempty"`
}

type SetProfileImageResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The updated user and the photo.
	SetProfileImage200ApplicationJSONObject *SetProfileImage200ApplicationJSON
}
