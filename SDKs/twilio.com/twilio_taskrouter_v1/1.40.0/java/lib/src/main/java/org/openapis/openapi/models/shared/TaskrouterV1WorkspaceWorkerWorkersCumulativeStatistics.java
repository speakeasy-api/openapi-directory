/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics - OK
 */
public class TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The minimum, average, maximum, and total time (in seconds) that Workers spent in each Activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activity_durations")
    public Object[] activityDurations;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withActivityDurations(Object[] activityDurations) {
        this.activityDurations = activityDurations;
        return this;
    }
    
    /**
     * The end of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("end_time")
    public OffsetDateTime endTime;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The total number of Reservations that were accepted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservations_accepted")
    public Long reservationsAccepted;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withReservationsAccepted(Long reservationsAccepted) {
        this.reservationsAccepted = reservationsAccepted;
        return this;
    }
    
    /**
     * The total number of Reservations that were canceled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservations_canceled")
    public Long reservationsCanceled;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withReservationsCanceled(Long reservationsCanceled) {
        this.reservationsCanceled = reservationsCanceled;
        return this;
    }
    
    /**
     * The total number of Reservations that were created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservations_created")
    public Long reservationsCreated;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withReservationsCreated(Long reservationsCreated) {
        this.reservationsCreated = reservationsCreated;
        return this;
    }
    
    /**
     * The total number of Reservations that were rejected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservations_rejected")
    public Long reservationsRejected;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withReservationsRejected(Long reservationsRejected) {
        this.reservationsRejected = reservationsRejected;
        return this;
    }
    
    /**
     * The total number of Reservations that were rescinded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservations_rescinded")
    public Long reservationsRescinded;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withReservationsRescinded(Long reservationsRescinded) {
        this.reservationsRescinded = reservationsRescinded;
        return this;
    }
    
    /**
     * The total number of Reservations that were timed out.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservations_timed_out")
    public Long reservationsTimedOut;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withReservationsTimedOut(Long reservationsTimedOut) {
        this.reservationsTimedOut = reservationsTimedOut;
        return this;
    }
    
    /**
     * The beginning of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("start_time")
    public OffsetDateTime startTime;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * The absolute URL of the Workers statistics resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The SID of the Workspace that contains the Workers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspace_sid")
    public String workspaceSid;
    public TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics withWorkspaceSid(String workspaceSid) {
        this.workspaceSid = workspaceSid;
        return this;
    }
    
}
