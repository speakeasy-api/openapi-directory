<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PayoutRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    public Amount $amount;
    
	#[\JMS\Serializer\Annotation\SerializedName('billingAddress')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Address')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Address $billingAddress = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('card')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Card')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Card $card = null;
    
    /**
     * An integer value that is added to the normal fraud score. The value can be either positive or negative.
     * 
     * @var ?int $fraudOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('fraudOffset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $fraudOffset = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('fundSource')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FundSource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FundSource $fundSource = null;
    
    /**
     * The merchant account identifier, with which you want to process the transaction.
     * 
     * @var string $merchantAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantAccount;
    
	#[\JMS\Serializer\Annotation\SerializedName('recurring')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Recurring')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Recurring $recurring = null;
    
    /**
     * The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
     * 
     * If you need to provide multiple references for a transaction, separate them with hyphens ("-").
     * Maximum length: 80 characters.
     * 
     * @var string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reference;
    
    /**
     * The `recurringDetailReference` you want to use for this payment. The value `LATEST` can be used to select the most recently stored recurring detail.
     * 
     * @var ?string $selectedRecurringDetailReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectedRecurringDetailReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selectedRecurringDetailReference = null;
    
    /**
     * The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
     * 
     * > For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.
     * 
     * @var ?string $shopperEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shopperEmail = null;
    
    /**
     * Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
     * 
     * For the web service API, Adyen assumes Ecommerce shopper interaction by default.
     * 
     * This field has the following possible values:
     * * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
     * * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
     * * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
     * * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PayoutRequestShopperInteractionEnum $shopperInteraction
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperInteraction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PayoutRequestShopperInteractionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PayoutRequestShopperInteractionEnum $shopperInteraction = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('shopperName')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Name')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Name $shopperName = null;
    
    /**
     * Required for recurring payments. 
     * 
     * Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
     * > Your reference must not include personally identifiable information (PII), for example name or email address.
     * 
     * @var ?string $shopperReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shopperReference = null;
    
    /**
     * The shopper's telephone number.
     * 
     * @var ?string $telephoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('telephoneNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $telephoneNumber = null;
    
	public function __construct()
	{
		$this->amount = new \OpenAPI\OpenAPI\Models\Shared\Amount();
		$this->billingAddress = null;
		$this->card = null;
		$this->fraudOffset = null;
		$this->fundSource = null;
		$this->merchantAccount = "";
		$this->recurring = null;
		$this->reference = "";
		$this->selectedRecurringDetailReference = null;
		$this->shopperEmail = null;
		$this->shopperInteraction = null;
		$this->shopperName = null;
		$this->shopperReference = null;
		$this->telephoneNumber = null;
	}
}
