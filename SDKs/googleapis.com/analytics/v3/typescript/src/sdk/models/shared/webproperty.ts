/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Child link for this web property. Points to the list of views (profiles) for this web property.
 */
export class WebpropertyChildLink extends SpeakeasyBase {
  /**
   * Link to the list of views (profiles) for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * Type of the parent link. Its value is "analytics#profiles".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Parent link for this web property. Points to the account to which this web property belongs.
 */
export class WebpropertyParentLink extends SpeakeasyBase {
  /**
   * Link to the account for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * Type of the parent link. Its value is "analytics#account".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Permissions the user has for this web property.
 */
export class WebpropertyPermissions extends SpeakeasyBase {
  /**
   * All the permissions that the user has for this web property. These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "effective" })
  effective?: string[];
}

/**
 * JSON template for an Analytics web property.
 */
export class Webproperty extends SpeakeasyBase {
  /**
   * Account ID to which this web property belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Child link for this web property. Points to the list of views (profiles) for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "childLink" })
  @Type(() => WebpropertyChildLink)
  childLink?: WebpropertyChildLink;

  /**
   * Time this web property was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * Set to true to reset the retention period of the user identifier with each new event from that user (thus setting the expiration date to current time plus retention period).
   *
   * @remarks
   * Set to false to delete data associated with the user identifier automatically after the rentention period.
   * This property cannot be set on insert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataRetentionResetOnNewActivity" })
  dataRetentionResetOnNewActivity?: boolean;

  /**
   * The length of time for which user and event data is retained.
   *
   * @remarks
   * This property cannot be set on insert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataRetentionTtl" })
  dataRetentionTtl?: string;

  /**
   * Default view (profile) ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultProfileId" })
  defaultProfileId?: string;

  /**
   * Web property ID of the form UA-XXXXX-YY.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The industry vertical/category selected for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "industryVertical" })
  industryVertical?: string;

  /**
   * Internal ID for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "internalWebPropertyId" })
  internalWebPropertyId?: string;

  /**
   * Resource type for Analytics WebProperty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Level for this web property. Possible values are STANDARD or PREMIUM.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "level" })
  level?: string;

  /**
   * Name of this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Parent link for this web property. Points to the account to which this web property belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentLink" })
  @Type(() => WebpropertyParentLink)
  parentLink?: WebpropertyParentLink;

  /**
   * Permissions the user has for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => WebpropertyPermissions)
  permissions?: WebpropertyPermissions;

  /**
   * View (Profile) count for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileCount" })
  profileCount?: number;

  /**
   * Link for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * Indicates whether this web property is starred or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "starred" })
  starred?: boolean;

  /**
   * Time this web property was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated?: Date;

  /**
   * Website url for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "websiteUrl" })
  websiteUrl?: string;
}

/**
 * JSON template for an Analytics web property.
 */
export class WebpropertyInput extends SpeakeasyBase {
  /**
   * Account ID to which this web property belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Child link for this web property. Points to the list of views (profiles) for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "childLink" })
  @Type(() => WebpropertyChildLink)
  childLink?: WebpropertyChildLink;

  /**
   * Set to true to reset the retention period of the user identifier with each new event from that user (thus setting the expiration date to current time plus retention period).
   *
   * @remarks
   * Set to false to delete data associated with the user identifier automatically after the rentention period.
   * This property cannot be set on insert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataRetentionResetOnNewActivity" })
  dataRetentionResetOnNewActivity?: boolean;

  /**
   * The length of time for which user and event data is retained.
   *
   * @remarks
   * This property cannot be set on insert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataRetentionTtl" })
  dataRetentionTtl?: string;

  /**
   * Default view (profile) ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultProfileId" })
  defaultProfileId?: string;

  /**
   * Web property ID of the form UA-XXXXX-YY.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The industry vertical/category selected for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "industryVertical" })
  industryVertical?: string;

  /**
   * Name of this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Parent link for this web property. Points to the account to which this web property belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentLink" })
  @Type(() => WebpropertyParentLink)
  parentLink?: WebpropertyParentLink;

  /**
   * Indicates whether this web property is starred or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "starred" })
  starred?: boolean;

  /**
   * Website url for this web property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "websiteUrl" })
  websiteUrl?: string;
}
