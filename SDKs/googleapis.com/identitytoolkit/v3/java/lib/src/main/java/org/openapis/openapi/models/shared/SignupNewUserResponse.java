/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SignupNewUserResponse - Response of signing up new user, creating anonymous user or anonymous user reauth.
 */
public class SignupNewUserResponse {
    /**
     * The name of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public SignupNewUserResponse withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The email of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public SignupNewUserResponse withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiresIn")
    public String expiresIn;
    public SignupNewUserResponse withExpiresIn(String expiresIn) {
        this.expiresIn = expiresIn;
        return this;
    }
    
    /**
     * The Gitkit id token to login the newly sign up user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idToken")
    public String idToken;
    public SignupNewUserResponse withIdToken(String idToken) {
        this.idToken = idToken;
        return this;
    }
    
    /**
     * The fixed string "identitytoolkit#SignupNewUserResponse".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public SignupNewUserResponse withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The RP local ID of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localId")
    public String localId;
    public SignupNewUserResponse withLocalId(String localId) {
        this.localId = localId;
        return this;
    }
    
    /**
     * If idToken is STS id token, then this field will be refresh token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refreshToken")
    public String refreshToken;
    public SignupNewUserResponse withRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }
    
}
