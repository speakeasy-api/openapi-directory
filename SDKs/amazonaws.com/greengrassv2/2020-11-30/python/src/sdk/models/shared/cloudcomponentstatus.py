"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cloudcomponentstate_enum as shared_cloudcomponentstate_enum
from ..shared import vendorguidance_enum as shared_vendorguidance_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CloudComponentStatus:
    r"""Contains the status of a component version in the IoT Greengrass service."""
    
    component_state: Optional[shared_cloudcomponentstate_enum.CloudComponentStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('componentState'), 'exclude': lambda f: f is None }})  
    errors: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    vendor_guidance: Optional[shared_vendorguidance_enum.VendorGuidanceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendorGuidance'), 'exclude': lambda f: f is None }})  
    vendor_guidance_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendorGuidanceMessage'), 'exclude': lambda f: f is None }})  
    