// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type CommitSearchResultItemCommitAuthor struct {
	Date  time.Time `json:"date"`
	Email string    `json:"email"`
	Name  string    `json:"name"`
}

type CommitSearchResultItemCommitTree struct {
	Sha string `json:"sha"`
	URL string `json:"url"`
}

type CommitSearchResultItemCommit struct {
	Author       CommitSearchResultItemCommitAuthor `json:"author"`
	CommentCount int64                              `json:"comment_count"`
	// Metaproperties for Git author/committer information.
	Committer    NullableGitUser                  `json:"committer"`
	Message      string                           `json:"message"`
	Tree         CommitSearchResultItemCommitTree `json:"tree"`
	URL          string                           `json:"url"`
	Verification *Verification                    `json:"verification,omitempty"`
}

type CommitSearchResultItemParents struct {
	HTMLURL *string `json:"html_url,omitempty"`
	Sha     *string `json:"sha,omitempty"`
	URL     *string `json:"url,omitempty"`
}

// CommitSearchResultItem - Commit Search Result Item
type CommitSearchResultItem struct {
	// A GitHub user.
	Author      NullableSimpleUser           `json:"author"`
	CommentsURL string                       `json:"comments_url"`
	Commit      CommitSearchResultItemCommit `json:"commit"`
	// Metaproperties for Git author/committer information.
	Committer NullableGitUser                 `json:"committer"`
	HTMLURL   string                          `json:"html_url"`
	NodeID    string                          `json:"node_id"`
	Parents   []CommitSearchResultItemParents `json:"parents"`
	// Minimal Repository
	Repository  MinimalRepository         `json:"repository"`
	Score       float64                   `json:"score"`
	Sha         string                    `json:"sha"`
	TextMatches []SearchResultTextMatches `json:"text_matches,omitempty"`
	URL         string                    `json:"url"`
}
