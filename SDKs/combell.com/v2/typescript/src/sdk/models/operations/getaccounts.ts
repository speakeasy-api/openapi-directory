/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetAccountsRequest extends SpeakeasyBase {
  /**
   * Filters the list, returning only accounts containing the specified asset type.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=asset_type",
  })
  assetType?: shared.AssetTypeEnum;

  /**
   * Return only accounts, matching the specified identifier.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=identifier",
  })
  identifier?: string;

  /**
   * The number of items to skip in the resultset.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=skip" })
  skip?: number;

  /**
   * The number of items to return in the resultset. The returned count can be equal or less than this number.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=take" })
  take?: number;
}

export class GetAccountsResponse extends SpeakeasyBase {
  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: shared.Account })
  accounts?: shared.Account[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
