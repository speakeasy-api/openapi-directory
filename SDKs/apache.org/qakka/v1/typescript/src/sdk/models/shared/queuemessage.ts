/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A Queue Message
 */
export class QueueMessage extends SpeakeasyBase {
  /**
   * Content-type of data associated with QueueMessage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contentType" })
  contentType?: string;

  /**
   * Date that message was received by system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createDate" })
  createDate?: number;

  /**
   * Embedded JSON to be sent with Queue Message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: string;

  /**
   * URL of data associated with Queue Message (if not embedded JSON)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * UUID of Message Data associated with this Queue Message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messageId" })
  messageId?: string;

  /**
   * UUID of Queue Message in local region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queueMessageId" })
  queueMessageId?: string;

  /**
   * Name of Queue for message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queueName" })
  queueName: string;

  /**
   * Regions to which message will be sent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receivingRegion" })
  receivingRegion?: string;

  /**
   * Region from which was sent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sendingRegion" })
  sendingRegion?: string;
}
