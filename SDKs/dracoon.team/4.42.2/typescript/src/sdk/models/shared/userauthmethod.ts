/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { KeyValueEntry } from "./keyvalueentry";
import { Expose, Type } from "class-transformer";

/**
 * Authentication method
 */
export class UserAuthMethod extends SpeakeasyBase {
  /**
   * Authentication method
   *
   * @remarks
   *
   *
   *
   * Authentication methods:
   *
   * * `basic`
   *
   * * `active_directory`
   *
   * * `radius`
   *
   * * `openid`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authId" })
  authId: string;

  /**
   * Is enabled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isEnabled" })
  isEnabled: boolean;

  /**
   * Authentication method options
   */
  @SpeakeasyMetadata({ elemType: KeyValueEntry })
  @Expose({ name: "options" })
  @Type(() => KeyValueEntry)
  options?: KeyValueEntry[];
}
