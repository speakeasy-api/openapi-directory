/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Permission {
    /**
     * Action name this permission is for (e.g. SendMessage)
     */
    @JsonProperty("action")
    public String action;
    public Permission withAction(String action) {
        this.action = action;
        return this;
    }
    
    /**
     * MongoDB style condition which decides whether or not the permission is granted
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public java.util.Map<String, Object> condition;
    public Permission withCondition(java.util.Map<String, Object> condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * Whether this is a custom permission or built-in
     */
    @JsonProperty("custom")
    public Boolean custom;
    public Permission withCustom(Boolean custom) {
        this.custom = custom;
        return this;
    }
    
    /**
     * Description of the permission
     */
    @JsonProperty("description")
    public String description;
    public Permission withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Unique permission ID
     */
    @JsonProperty("id")
    public String id;
    public Permission withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Level at which permission could be applied (app or channel)
     */
    @JsonProperty("level")
    public PermissionLevelEnum level;
    public Permission withLevel(PermissionLevelEnum level) {
        this.level = level;
        return this;
    }
    
    /**
     * Name of the permission
     */
    @JsonProperty("name")
    public String name;
    public Permission withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Whether this permission applies to resource owner or not
     */
    @JsonProperty("owner")
    public Boolean owner;
    public Permission withOwner(Boolean owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * Whether this permission applies to teammates (multi-tenancy mode only)
     */
    @JsonProperty("same_team")
    public Boolean sameTeam;
    public Permission withSameTeam(Boolean sameTeam) {
        this.sameTeam = sameTeam;
        return this;
    }
    
    /**
     * List of tags of the permission
     */
    @JsonProperty("tags")
    public String[] tags;
    public Permission withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
}
