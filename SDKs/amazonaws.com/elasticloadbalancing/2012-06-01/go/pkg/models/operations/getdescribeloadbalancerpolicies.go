// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeLoadBalancerPoliciesActionEnum
type GETDescribeLoadBalancerPoliciesActionEnum string

const (
	GETDescribeLoadBalancerPoliciesActionEnumDescribeLoadBalancerPolicies GETDescribeLoadBalancerPoliciesActionEnum = "DescribeLoadBalancerPolicies"
)

func (e *GETDescribeLoadBalancerPoliciesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeLoadBalancerPolicies":
		*e = GETDescribeLoadBalancerPoliciesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeLoadBalancerPoliciesActionEnum: %s", s)
	}
}

// GETDescribeLoadBalancerPoliciesVersionEnum
type GETDescribeLoadBalancerPoliciesVersionEnum string

const (
	GETDescribeLoadBalancerPoliciesVersionEnumTwoThousandAndTwelve0601 GETDescribeLoadBalancerPoliciesVersionEnum = "2012-06-01"
)

func (e *GETDescribeLoadBalancerPoliciesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-06-01":
		*e = GETDescribeLoadBalancerPoliciesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeLoadBalancerPoliciesVersionEnum: %s", s)
	}
}

type GETDescribeLoadBalancerPoliciesRequest struct {
	Action GETDescribeLoadBalancerPoliciesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the load balancer.
	LoadBalancerName *string `queryParam:"style=form,explode=true,name=LoadBalancerName"`
	// The names of the policies.
	PolicyNames       []string                                   `queryParam:"style=form,explode=true,name=PolicyNames"`
	Version           GETDescribeLoadBalancerPoliciesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeLoadBalancerPoliciesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
