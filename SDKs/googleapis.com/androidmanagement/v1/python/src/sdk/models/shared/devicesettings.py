"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DeviceSettingsEncryptionStatusEnum(str, Enum):
    r"""Encryption status from DevicePolicyManager."""
    ENCRYPTION_STATUS_UNSPECIFIED = 'ENCRYPTION_STATUS_UNSPECIFIED'
    UNSUPPORTED = 'UNSUPPORTED'
    INACTIVE = 'INACTIVE'
    ACTIVATING = 'ACTIVATING'
    ACTIVE = 'ACTIVE'
    ACTIVE_DEFAULT_KEY = 'ACTIVE_DEFAULT_KEY'
    ACTIVE_PER_USER = 'ACTIVE_PER_USER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceSettings:
    r"""Information about security related device settings on device."""
    
    adb_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adbEnabled'), 'exclude': lambda f: f is None }})
    r"""Whether ADB (https://developer.android.com/studio/command-line/adb.html) is enabled on the device."""  
    development_settings_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('developmentSettingsEnabled'), 'exclude': lambda f: f is None }})
    r"""Whether developer mode is enabled on the device."""  
    encryption_status: Optional[DeviceSettingsEncryptionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encryptionStatus'), 'exclude': lambda f: f is None }})
    r"""Encryption status from DevicePolicyManager."""  
    is_device_secure: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDeviceSecure'), 'exclude': lambda f: f is None }})
    r"""Whether the device is secured with PIN/password."""  
    is_encrypted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isEncrypted'), 'exclude': lambda f: f is None }})
    r"""Whether the storage encryption is enabled."""  
    unknown_sources_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unknownSourcesEnabled'), 'exclude': lambda f: f is None }})
    r"""Whether installing apps from unknown sources is enabled."""  
    verify_apps_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verifyAppsEnabled'), 'exclude': lambda f: f is None }})
    r"""Whether Google Play Protect verification (https://support.google.com/accounts/answer/2812853) is enforced on the device."""  
    