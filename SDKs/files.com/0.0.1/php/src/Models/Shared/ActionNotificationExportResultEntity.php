<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ActionNotificationExportResultEntity - List Action Notification Export Results
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ActionNotificationExportResultEntity
{
    /**
     * When the notification was sent.
     * 
     * @var ?int $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $createdAt = null;
    
    /**
     * The folder associated with the triggering action for this notification.
     * 
     * @var ?string $folder
     */
	#[\JMS\Serializer\Annotation\SerializedName('folder')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $folder = null;
    
    /**
     * Notification ID
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * A message indicating the overall status of the webhook notification.
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * The path to the actual file that triggered this notification.
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * A JSON-encoded string with headers that were sent with the webhook.
     * 
     * @var ?string $requestHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('request_headers')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestHeaders = null;
    
    /**
     * The HTTP verb used to perform the webhook.
     * 
     * @var ?string $requestMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('request_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestMethod = null;
    
    /**
     * The webhook request URL.
     * 
     * @var ?string $requestUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('request_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestUrl = null;
    
    /**
     * HTTP status code returned in the webhook response.
     * 
     * @var ?int $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $status = null;
    
    /**
     * `true` if the webhook succeeded by receiving a 200 or 204 response.
     * 
     * @var ?bool $success
     */
	#[\JMS\Serializer\Annotation\SerializedName('success')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $success = null;
    
	public function __construct()
	{
		$this->createdAt = null;
		$this->folder = null;
		$this->id = null;
		$this->message = null;
		$this->path = null;
		$this->requestHeaders = null;
		$this->requestMethod = null;
		$this->requestUrl = null;
		$this->status = null;
		$this->success = null;
	}
}
