"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import collectionresponsepublicbusinessunitnopaging as shared_collectionresponsepublicbusinessunitnopaging
from typing import Optional


@dataclasses.dataclass
class GetBusinessUnitsV3BusinessUnitsUserUserIDSecurity:
    
    oauth2_legacy: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    private_apps_legacy: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'private-app-legacy' }})  
    

@dataclasses.dataclass
class GetBusinessUnitsV3BusinessUnitsUserUserIDRequest:
    
    user_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})
    r"""Identifier of user to retrieve."""  
    name: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})
    r"""The names of Business Units to retrieve. If empty or not provided, then all associated Business Units will be returned."""  
    properties: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'properties', 'style': 'form', 'explode': True }})
    r"""The names of properties to optionally include in the response body. The only valid value is `logoMetadata`."""  
    

@dataclasses.dataclass
class GetBusinessUnitsV3BusinessUnitsUserUserIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    collection_response_public_business_unit_no_paging: Optional[shared_collectionresponsepublicbusinessunitnopaging.CollectionResponsePublicBusinessUnitNoPaging] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    