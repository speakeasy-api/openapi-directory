// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SearchTransitGatewayRoutesResultRoutesStateEnum - The state of the route.
type SearchTransitGatewayRoutesResultRoutesStateEnum string

const (
	SearchTransitGatewayRoutesResultRoutesStateEnumPending   SearchTransitGatewayRoutesResultRoutesStateEnum = "pending"
	SearchTransitGatewayRoutesResultRoutesStateEnumActive    SearchTransitGatewayRoutesResultRoutesStateEnum = "active"
	SearchTransitGatewayRoutesResultRoutesStateEnumBlackhole SearchTransitGatewayRoutesResultRoutesStateEnum = "blackhole"
	SearchTransitGatewayRoutesResultRoutesStateEnumDeleting  SearchTransitGatewayRoutesResultRoutesStateEnum = "deleting"
	SearchTransitGatewayRoutesResultRoutesStateEnumDeleted   SearchTransitGatewayRoutesResultRoutesStateEnum = "deleted"
)

func (e SearchTransitGatewayRoutesResultRoutesStateEnum) ToPointer() *SearchTransitGatewayRoutesResultRoutesStateEnum {
	return &e
}

func (e *SearchTransitGatewayRoutesResultRoutesStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "active":
		fallthrough
	case "blackhole":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = SearchTransitGatewayRoutesResultRoutesStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchTransitGatewayRoutesResultRoutesStateEnum: %v", v)
	}
}

// SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum - The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
type SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum string

const (
	SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnumVpc                  SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum = "vpc"
	SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnumVpn                  SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum = "vpn"
	SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnumDirectConnectGateway SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum = "direct-connect-gateway"
	SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnumConnect              SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum = "connect"
	SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnumPeering              SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum = "peering"
	SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnumTgwPeering           SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum = "tgw-peering"
)

func (e SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum) ToPointer() *SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum {
	return &e
}

func (e *SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum: %v", v)
	}
}

// SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachments - Describes a route attachment.
type SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachments struct {
	ResourceID                 *string
	ResourceType               *SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachmentsResourceTypeEnum
	TransitGatewayAttachmentID *string
}

// SearchTransitGatewayRoutesResultRoutesTypeEnum - The route type.
type SearchTransitGatewayRoutesResultRoutesTypeEnum string

const (
	SearchTransitGatewayRoutesResultRoutesTypeEnumStatic     SearchTransitGatewayRoutesResultRoutesTypeEnum = "static"
	SearchTransitGatewayRoutesResultRoutesTypeEnumPropagated SearchTransitGatewayRoutesResultRoutesTypeEnum = "propagated"
)

func (e SearchTransitGatewayRoutesResultRoutesTypeEnum) ToPointer() *SearchTransitGatewayRoutesResultRoutesTypeEnum {
	return &e
}

func (e *SearchTransitGatewayRoutesResultRoutesTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "static":
		fallthrough
	case "propagated":
		*e = SearchTransitGatewayRoutesResultRoutesTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchTransitGatewayRoutesResultRoutesTypeEnum: %v", v)
	}
}

// SearchTransitGatewayRoutesResultRoutes - Describes a route for a transit gateway route table.
type SearchTransitGatewayRoutesResultRoutes struct {
	DestinationCidrBlock                   *string
	PrefixListID                           *string
	State                                  *SearchTransitGatewayRoutesResultRoutesStateEnum
	TransitGatewayAttachments              []SearchTransitGatewayRoutesResultRoutesTransitGatewayAttachments
	TransitGatewayRouteTableAnnouncementID *string
	Type                                   *SearchTransitGatewayRoutesResultRoutesTypeEnum
}

// SearchTransitGatewayRoutesResult - Success
type SearchTransitGatewayRoutesResult struct {
	AdditionalRoutesAvailable *bool
	Routes                    []SearchTransitGatewayRoutesResultRoutes
}
