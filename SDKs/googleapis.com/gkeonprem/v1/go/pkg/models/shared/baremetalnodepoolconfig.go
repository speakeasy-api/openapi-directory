// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BareMetalNodePoolConfigOperatingSystemEnum - Specifies the nodes operating system (default: LINUX).
type BareMetalNodePoolConfigOperatingSystemEnum string

const (
	BareMetalNodePoolConfigOperatingSystemEnumOperatingSystemUnspecified BareMetalNodePoolConfigOperatingSystemEnum = "OPERATING_SYSTEM_UNSPECIFIED"
	BareMetalNodePoolConfigOperatingSystemEnumLinux                      BareMetalNodePoolConfigOperatingSystemEnum = "LINUX"
)

func (e BareMetalNodePoolConfigOperatingSystemEnum) ToPointer() *BareMetalNodePoolConfigOperatingSystemEnum {
	return &e
}

func (e *BareMetalNodePoolConfigOperatingSystemEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATING_SYSTEM_UNSPECIFIED":
		fallthrough
	case "LINUX":
		*e = BareMetalNodePoolConfigOperatingSystemEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BareMetalNodePoolConfigOperatingSystemEnum: %v", v)
	}
}

// BareMetalNodePoolConfig - BareMetalNodePoolConfig describes the configuration of all nodes within a given bare metal node pool.
type BareMetalNodePoolConfig struct {
	// KubeletConfig defines the modifiable kubelet configurations for baremetal machines. Note: this list includes fields supported in GKE (see https://cloud.google.com/kubernetes-engine/docs/how-to/node-system-config#kubelet-options).
	KubeletConfig *BareMetalKubeletConfig `json:"kubeletConfig,omitempty"`
	// The labels assigned to nodes of this node pool. An object containing a list of key/value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	Labels map[string]string `json:"labels,omitempty"`
	// Required. The list of machine addresses in the bare metal node pool.
	NodeConfigs []BareMetalNodeConfig `json:"nodeConfigs,omitempty"`
	// Specifies the nodes operating system (default: LINUX).
	OperatingSystem *BareMetalNodePoolConfigOperatingSystemEnum `json:"operatingSystem,omitempty"`
	// The initial taints assigned to nodes of this node pool.
	Taints []NodeTaint `json:"taints,omitempty"`
}
