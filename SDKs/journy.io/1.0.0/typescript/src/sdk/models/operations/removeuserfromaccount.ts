/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Account identification requires an accountId, domain or both
 */
export class RemoveUserFromAccountRequestBodyAccount extends SpeakeasyBase {
  /**
   * Unique identifier for the account in your database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * The domain associated with the account (e.g. acme-inc.com)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;
}

/**
 * User identification requires a userId, email or both
 */
export class RemoveUserFromAccountRequestBodyUsersIdentification extends SpeakeasyBase {
  /**
   * Email address of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Unique identifier for the user in your database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}

export class RemoveUserFromAccountRequestBodyUsers extends SpeakeasyBase {
  /**
   * User identification requires a userId, email or both
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identification" })
  @Type(() => RemoveUserFromAccountRequestBodyUsersIdentification)
  identification: RemoveUserFromAccountRequestBodyUsersIdentification;
}

/**
 * The identification for user and account
 */
export class RemoveUserFromAccountRequestBody extends SpeakeasyBase {
  /**
   * Account identification requires an accountId, domain or both
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account" })
  @Type(() => RemoveUserFromAccountRequestBodyAccount)
  account: RemoveUserFromAccountRequestBodyAccount;

  @SpeakeasyMetadata({ elemType: RemoveUserFromAccountRequestBodyUsers })
  @Expose({ name: "users" })
  @Type(() => RemoveUserFromAccountRequestBodyUsers)
  users: RemoveUserFromAccountRequestBodyUsers[];
}

export class RemoveUserFromAccount500ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class RemoveUserFromAccount500ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => RemoveUserFromAccount500ApplicationJSONMeta)
  meta: RemoveUserFromAccount500ApplicationJSONMeta;
}

export class RemoveUserFromAccount429ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class RemoveUserFromAccount429ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => RemoveUserFromAccount429ApplicationJSONMeta)
  meta: RemoveUserFromAccount429ApplicationJSONMeta;
}

export class RemoveUserFromAccount401ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class RemoveUserFromAccount401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => RemoveUserFromAccount401ApplicationJSONMeta)
  meta: RemoveUserFromAccount401ApplicationJSONMeta;
}

/**
 * All query-, header- and path- parameters that seemed incorrect
 */
export class RemoveUserFromAccount400ApplicationJSONErrorsParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "header" })
  header?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "query" })
  query?: Record<string, string>;
}

/**
 * Map that sums up all received values that seemed incorrect
 */
export class RemoveUserFromAccount400ApplicationJSONErrors extends SpeakeasyBase {
  /**
   * All input fields that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fields" })
  fields?: Record<string, string>;

  /**
   * All query-, header- and path- parameters that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameters" })
  @Type(() => RemoveUserFromAccount400ApplicationJSONErrorsParameters)
  parameters?: RemoveUserFromAccount400ApplicationJSONErrorsParameters;
}

export class RemoveUserFromAccount400ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class RemoveUserFromAccount400ApplicationJSON extends SpeakeasyBase {
  /**
   * Map that sums up all received values that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  @Type(() => RemoveUserFromAccount400ApplicationJSONErrors)
  errors: RemoveUserFromAccount400ApplicationJSONErrors;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => RemoveUserFromAccount400ApplicationJSONMeta)
  meta: RemoveUserFromAccount400ApplicationJSONMeta;
}

export class RemoveUserFromAccount204ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class RemoveUserFromAccount204ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => RemoveUserFromAccount204ApplicationJSONMeta)
  meta: RemoveUserFromAccount204ApplicationJSONMeta;
}

export class RemoveUserFromAccountResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * No content
   */
  @SpeakeasyMetadata()
  removeUserFromAccount204ApplicationJSONObject?: RemoveUserFromAccount204ApplicationJSON;

  /**
   * Bad request, some fields or parameters are incorrect
   */
  @SpeakeasyMetadata()
  removeUserFromAccount400ApplicationJSONObject?: RemoveUserFromAccount400ApplicationJSON;

  /**
   * No API Key was provided or the key is not authorised to perform the action
   */
  @SpeakeasyMetadata()
  removeUserFromAccount401ApplicationJSONObject?: RemoveUserFromAccount401ApplicationJSON;

  /**
   * Too many API requests were send
   */
  @SpeakeasyMetadata()
  removeUserFromAccount429ApplicationJSONObject?: RemoveUserFromAccount429ApplicationJSON;

  /**
   * An unexpected error occurred
   */
  @SpeakeasyMetadata()
  removeUserFromAccount500ApplicationJSONObject?: RemoveUserFromAccount500ApplicationJSON;
}
