"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import segmentfilter as shared_segmentfilter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SegmentDefinition:
    r"""SegmentDefinition defines the segment to be a set of SegmentFilters which are combined together with a logical `AND` operation."""
    
    segment_filters: Optional[list[shared_segmentfilter.SegmentFilter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segmentFilters'), 'exclude': lambda f: f is None }})
    r"""A segment is defined by a set of segment filters which are combined together with a logical `AND` operation."""  
    