/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateClusterRequestBody {
    /**
     * &lt;p&gt;The name of the Elastic DocumentDB cluster administrator.&lt;/p&gt; &lt;p&gt; &lt;i&gt;Constraints&lt;/i&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Must be from 1 to 63 letters or numbers.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The first character must be a letter.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot be a reserved word.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonProperty("adminUserName")
    public String adminUserName;

    public CreateClusterRequestBody withAdminUserName(String adminUserName) {
        this.adminUserName = adminUserName;
        return this;
    }
    
    /**
     * &lt;p&gt;The password for the Elastic DocumentDB cluster administrator and can contain any printable ASCII characters.&lt;/p&gt; &lt;p&gt; &lt;i&gt;Constraints&lt;/i&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Must contain from 8 to 100 characters.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot contain a forward slash (/), double quote ("), or the "at" symbol (@).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonProperty("adminUserPassword")
    public String adminUserPassword;

    public CreateClusterRequestBody withAdminUserPassword(String adminUserPassword) {
        this.adminUserPassword = adminUserPassword;
        return this;
    }
    
    /**
     * The authentication type for the Elastic DocumentDB cluster.
     */
    @JsonProperty("authType")
    public CreateClusterRequestBodyAuthTypeEnum authType;

    public CreateClusterRequestBody withAuthType(CreateClusterRequestBodyAuthTypeEnum authType) {
        this.authType = authType;
        return this;
    }
    
    /**
     * The client token for the Elastic DocumentDB cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;

    public CreateClusterRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * &lt;p&gt;The name of the new Elastic DocumentDB cluster. This parameter is stored as a lowercase string.&lt;/p&gt; &lt;p&gt; &lt;i&gt;Constraints&lt;/i&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Must contain from 1 to 63 letters, numbers, or hyphens.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The first character must be a letter.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot end with a hyphen or contain two consecutive hyphens.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;i&gt;Example&lt;/i&gt;: &lt;code&gt;my-cluster&lt;/code&gt; &lt;/p&gt;
     */
    @JsonProperty("clusterName")
    public String clusterName;

    public CreateClusterRequestBody withClusterName(String clusterName) {
        this.clusterName = clusterName;
        return this;
    }
    
    /**
     * &lt;p&gt;The KMS key identifier to use to encrypt the new Elastic DocumentDB cluster.&lt;/p&gt; &lt;p&gt;The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a cluster using the same Amazon account that owns this KMS encryption key, you can use the KMS key alias instead of the ARN as the KMS encryption key.&lt;/p&gt; &lt;p&gt;If an encryption key is not specified, Elastic DocumentDB uses the default encryption key that KMS creates for your account. Your account has a different default encryption key for each Amazon Region.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kmsKeyId")
    public String kmsKeyId;

    public CreateClusterRequestBody withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }
    
    /**
     * &lt;p&gt;The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).&lt;/p&gt; &lt;p&gt; &lt;i&gt;Format&lt;/i&gt;: &lt;code&gt;ddd:hh24:mi-ddd:hh24:mi&lt;/code&gt; &lt;/p&gt; &lt;p&gt; &lt;i&gt;Default&lt;/i&gt;: a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week.&lt;/p&gt; &lt;p&gt; &lt;i&gt;Valid days&lt;/i&gt;: Mon, Tue, Wed, Thu, Fri, Sat, Sun&lt;/p&gt; &lt;p&gt; &lt;i&gt;Constraints&lt;/i&gt;: Minimum 30-minute window.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferredMaintenanceWindow")
    public String preferredMaintenanceWindow;

    public CreateClusterRequestBody withPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        return this;
    }
    
    /**
     * The capacity of each shard in the new Elastic DocumentDB cluster.
     */
    @JsonProperty("shardCapacity")
    public Long shardCapacity;

    public CreateClusterRequestBody withShardCapacity(Long shardCapacity) {
        this.shardCapacity = shardCapacity;
        return this;
    }
    
    /**
     * The number of shards to create in the new Elastic DocumentDB cluster.
     */
    @JsonProperty("shardCount")
    public Long shardCount;

    public CreateClusterRequestBody withShardCount(Long shardCount) {
        this.shardCount = shardCount;
        return this;
    }
    
    /**
     * The Amazon EC2 subnet IDs for the new Elastic DocumentDB cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetIds")
    public String[] subnetIds;

    public CreateClusterRequestBody withSubnetIds(String[] subnetIds) {
        this.subnetIds = subnetIds;
        return this;
    }
    
    /**
     * The tags to be assigned to the new Elastic DocumentDB cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateClusterRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * A list of EC2 VPC security groups to associate with the new Elastic DocumentDB cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcSecurityGroupIds")
    public String[] vpcSecurityGroupIds;

    public CreateClusterRequestBody withVpcSecurityGroupIds(String[] vpcSecurityGroupIds) {
        this.vpcSecurityGroupIds = vpcSecurityGroupIds;
        return this;
    }
    
    public CreateClusterRequestBody(@JsonProperty("adminUserName") String adminUserName, @JsonProperty("adminUserPassword") String adminUserPassword, @JsonProperty("authType") CreateClusterRequestBodyAuthTypeEnum authType, @JsonProperty("clusterName") String clusterName, @JsonProperty("shardCapacity") Long shardCapacity, @JsonProperty("shardCount") Long shardCount) {
        this.adminUserName = adminUserName;
        this.adminUserPassword = adminUserPassword;
        this.authType = authType;
        this.clusterName = clusterName;
        this.shardCapacity = shardCapacity;
        this.shardCount = shardCount;
  }
}
