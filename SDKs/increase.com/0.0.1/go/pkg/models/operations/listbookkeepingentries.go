// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListBookkeepingEntriesRequest struct {
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	Limit  *int64  `queryParam:"style=form,explode=true,name=limit"`
}

type ListBookkeepingEntriesDefaultApplicationJSON13StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListBookkeepingEntriesDefaultApplicationJSON13StatusEnum = 429
)

func (e ListBookkeepingEntriesDefaultApplicationJSON13StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ListBookkeepingEntriesDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON13TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON13TypeEnumRateLimitedError ListBookkeepingEntriesDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON13TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON13 struct {
	Detail     string                                                   `json:"detail"`
	RetryAfter *int64                                                   `json:"retry_after,omitempty"`
	Status     ListBookkeepingEntriesDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                   `json:"title"`
	Type       ListBookkeepingEntriesDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON12StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON12StatusEnumFourHundredAndThree ListBookkeepingEntriesDefaultApplicationJSON12StatusEnum = 403
)

func (e ListBookkeepingEntriesDefaultApplicationJSON12StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListBookkeepingEntriesDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON12TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON12TypeEnumPrivateFeatureError ListBookkeepingEntriesDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON12TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON12 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON11StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON11StatusEnumFourHundredAndFour ListBookkeepingEntriesDefaultApplicationJSON11StatusEnum = 404
)

func (e ListBookkeepingEntriesDefaultApplicationJSON11StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListBookkeepingEntriesDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON11TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON11TypeEnumObjectNotFoundError ListBookkeepingEntriesDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON11TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON11 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON10StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON10StatusEnumFourHundred ListBookkeepingEntriesDefaultApplicationJSON10StatusEnum = 400
)

func (e ListBookkeepingEntriesDefaultApplicationJSON10StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListBookkeepingEntriesDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON10TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON10TypeEnumMalformedRequestError ListBookkeepingEntriesDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON10TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON10 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON9StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON9StatusEnumFourHundred ListBookkeepingEntriesDefaultApplicationJSON9StatusEnum = 400
)

func (e ListBookkeepingEntriesDefaultApplicationJSON9StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListBookkeepingEntriesDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON9TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON9TypeEnumInvalidParametersError ListBookkeepingEntriesDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON9TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                `json:"errors"`
	Status ListBookkeepingEntriesDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON8StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON8StatusEnumFourHundredAndNine ListBookkeepingEntriesDefaultApplicationJSON8StatusEnum = 409
)

func (e ListBookkeepingEntriesDefaultApplicationJSON8StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListBookkeepingEntriesDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON8TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON8TypeEnumInvalidOperationError ListBookkeepingEntriesDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON8TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON8 struct {
	Detail string                                                  `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON7StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON7StatusEnumFourHundredAndOne ListBookkeepingEntriesDefaultApplicationJSON7StatusEnum = 401
)

func (e ListBookkeepingEntriesDefaultApplicationJSON7StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ListBookkeepingEntriesDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON7TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListBookkeepingEntriesDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON7TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON7 struct {
	Detail string                                                  `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON6StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON6StatusEnumFiveHundred ListBookkeepingEntriesDefaultApplicationJSON6StatusEnum = 500
)

func (e ListBookkeepingEntriesDefaultApplicationJSON6StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ListBookkeepingEntriesDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON6TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON6TypeEnumInternalServerError ListBookkeepingEntriesDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON6TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON6 struct {
	Detail string                                                  `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON5StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON5StatusEnumFourHundredAndThree ListBookkeepingEntriesDefaultApplicationJSON5StatusEnum = 403
)

func (e ListBookkeepingEntriesDefaultApplicationJSON5StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListBookkeepingEntriesDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON5TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListBookkeepingEntriesDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON5TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON5 struct {
	Detail string                                                  `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON4StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListBookkeepingEntriesDefaultApplicationJSON4StatusEnum = 422
)

func (e ListBookkeepingEntriesDefaultApplicationJSON4StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ListBookkeepingEntriesDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON4TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListBookkeepingEntriesDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON4TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON4 struct {
	Detail string                                                  `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON3StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON3StatusEnumFourHundredAndNine ListBookkeepingEntriesDefaultApplicationJSON3StatusEnum = 409
)

func (e ListBookkeepingEntriesDefaultApplicationJSON3StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListBookkeepingEntriesDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON3TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListBookkeepingEntriesDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON3TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON3 struct {
	Detail string                                                  `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON2StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON2StatusEnumFourHundredAndThree ListBookkeepingEntriesDefaultApplicationJSON2StatusEnum = 403
)

func (e ListBookkeepingEntriesDefaultApplicationJSON2StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListBookkeepingEntriesDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON2TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListBookkeepingEntriesDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON2TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON2 struct {
	Detail string                                                  `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesDefaultApplicationJSON1StatusEnum int64

const (
	ListBookkeepingEntriesDefaultApplicationJSON1StatusEnumFourHundredAndFour ListBookkeepingEntriesDefaultApplicationJSON1StatusEnum = 404
)

func (e ListBookkeepingEntriesDefaultApplicationJSON1StatusEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListBookkeepingEntriesDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON1TypeEnum string

const (
	ListBookkeepingEntriesDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListBookkeepingEntriesDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ListBookkeepingEntriesDefaultApplicationJSON1TypeEnum) ToPointer() *ListBookkeepingEntriesDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ListBookkeepingEntriesDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ListBookkeepingEntriesDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingEntriesDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ListBookkeepingEntriesDefaultApplicationJSON1 struct {
	Detail string                                                  `json:"detail"`
	Status ListBookkeepingEntriesDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   ListBookkeepingEntriesDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListBookkeepingEntriesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Bookkeeping Entry List
	BookkeepingEntryList *shared.BookkeepingEntryList
	// Error
	Error interface{}
}
