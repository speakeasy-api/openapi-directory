/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PersistenceConfigInput - Configuration of the persistence functionality.
 */
public class PersistenceConfigInput {
    /**
     * Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("persistenceMode")
    public PersistenceConfigPersistenceModeEnum persistenceMode;
    public PersistenceConfigInput withPersistenceMode(PersistenceConfigPersistenceModeEnum persistenceMode) {
        this.persistenceMode = persistenceMode;
        return this;
    }
    
    /**
     * Optional. Period between RDB snapshots. Snapshots will be attempted every period starting from the provided snapshot start time. For example, a start time of 01/01/2033 06:45 and SIX_HOURS snapshot period will do nothing until 01/01/2033, and then trigger snapshots every day at 06:45, 12:45, 18:45, and 00:45 the next day, and so on. If not provided, TWENTY_FOUR_HOURS will be used as default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rdbSnapshotPeriod")
    public PersistenceConfigRdbSnapshotPeriodEnum rdbSnapshotPeriod;
    public PersistenceConfigInput withRdbSnapshotPeriod(PersistenceConfigRdbSnapshotPeriodEnum rdbSnapshotPeriod) {
        this.rdbSnapshotPeriod = rdbSnapshotPeriod;
        return this;
    }
    
    /**
     * Optional. Date and time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rdbSnapshotStartTime")
    public String rdbSnapshotStartTime;
    public PersistenceConfigInput withRdbSnapshotStartTime(String rdbSnapshotStartTime) {
        this.rdbSnapshotStartTime = rdbSnapshotStartTime;
        return this;
    }
    
}
