/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class EventSummaryV1 {
    /**
     * The serialized AfterId of the response, if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("afterId")
    public String afterId;

    public EventSummaryV1 withAfterId(String afterId) {
        this.afterId = afterId;
        return this;
    }
    
    /**
     * A string that contains all the information for this event.
     */
    @JsonProperty("eventInfo")
    public String eventInfo;

    public EventSummaryV1 withEventInfo(String eventInfo) {
        this.eventInfo = eventInfo;
        return this;
    }
    
    /**
     * The event name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventName")
    public String eventName;

    public EventSummaryV1 withEventName(String eventName) {
        this.eventName = eventName;
        return this;
    }
    
    /**
     * The ID of the event series that this event belongs to.
     */
    @JsonProperty("eventSeriesId")
    public String eventSeriesId;

    public EventSummaryV1 withEventSeriesId(String eventSeriesId) {
        this.eventSeriesId = eventSeriesId;
        return this;
    }
    
    /**
     * Level of event's severity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventSeverity")
    public EventSeverityV1Enum eventSeverity;

    public EventSummaryV1 withEventSeverity(EventSeverityV1Enum eventSeverity) {
        this.eventSeverity = eventSeverity;
        return this;
    }
    
    /**
     * Status of an event.
     */
    @JsonProperty("eventStatus")
    public EventStatusV1Enum eventStatus;

    public EventSummaryV1 withEventStatus(EventStatusV1Enum eventStatus) {
        this.eventStatus = eventStatus;
        return this;
    }
    
    /**
     * Type of an event.
     */
    @JsonProperty("eventType")
    public EventTypeV1Enum eventType;

    public EventSummaryV1 withEventType(EventTypeV1Enum eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * The event ID.
     */
    @JsonProperty("id")
    public String id;

    public EventSummaryV1 withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The ID of the associated job instance, if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobInstanceId")
    public String jobInstanceId;

    public EventSummaryV1 withJobInstanceId(String jobInstanceId) {
        this.jobInstanceId = jobInstanceId;
        return this;
    }
    
    /**
     * The ID of the object associated with the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectId")
    public String objectId;

    public EventSummaryV1 withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * The name of the object associated with the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectName")
    public String objectName;

    public EventSummaryV1 withObjectName(String objectName) {
        this.objectName = objectName;
        return this;
    }
    
    /**
     * Type of the object associated with the event.
     */
    @JsonProperty("objectType")
    public ObjectTypeV1Enum objectType;

    public EventSummaryV1 withObjectType(ObjectTypeV1Enum objectType) {
        this.objectType = objectType;
        return this;
    }
    
    /**
     * The time at which this event occurred.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("time")
    public OffsetDateTime time;

    public EventSummaryV1 withTime(OffsetDateTime time) {
        this.time = time;
        return this;
    }
    
    public EventSummaryV1(@JsonProperty("eventInfo") String eventInfo, @JsonProperty("eventSeriesId") String eventSeriesId, @JsonProperty("eventStatus") EventStatusV1Enum eventStatus, @JsonProperty("eventType") EventTypeV1Enum eventType, @JsonProperty("id") String id, @JsonProperty("objectType") ObjectTypeV1Enum objectType, @JsonProperty("time") OffsetDateTime time) {
        this.eventInfo = eventInfo;
        this.eventSeriesId = eventSeriesId;
        this.eventStatus = eventStatus;
        this.eventType = eventType;
        this.id = id;
        this.objectType = objectType;
        this.time = time;
  }
}
