"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var applepay_1 = require("./applepay");
var bankaccounts_1 = require("./bankaccounts");
var bookings_1 = require("./bookings");
var cards_1 = require("./cards");
var cashdrawers_1 = require("./cashdrawers");
var catalog_1 = require("./catalog");
var checkout_1 = require("./checkout");
var customergroups_1 = require("./customergroups");
var customers_1 = require("./customers");
var customersegments_1 = require("./customersegments");
var devices_1 = require("./devices");
var disputes_1 = require("./disputes");
var employees_1 = require("./employees");
var giftcardactivities_1 = require("./giftcardactivities");
var giftcards_1 = require("./giftcards");
var inventory_1 = require("./inventory");
var invoices_1 = require("./invoices");
var labor_1 = require("./labor");
var locations_1 = require("./locations");
var loyalty_1 = require("./loyalty");
var merchants_1 = require("./merchants");
var mobileauthorization_1 = require("./mobileauthorization");
var oauth_1 = require("./oauth");
var orders_1 = require("./orders");
var payments_1 = require("./payments");
var refunds_1 = require("./refunds");
var sites_1 = require("./sites");
var snippets_1 = require("./snippets");
var subscriptions_1 = require("./subscriptions");
var team_1 = require("./team");
var terminal_1 = require("./terminal");
var transactions_1 = require("./transactions");
var v1employees_1 = require("./v1employees");
var v1transactions_1 = require("./v1transactions");
var axios_1 = __importDefault(require("axios"));
/**
 * Contains the list of servers available to the SDK
 */
exports.ServerList = ["https://connect.squareup.com"];
/**
 * Client library for accessing the Square Connect APIs
 *
 * @see {@link https://docs.connect.squareup.com/} - Read the official documentation here:
 */
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props === null || props === void 0 ? void 0 : props.serverURL) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient =
            (_b = props === null || props === void 0 ? void 0 : props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.applePay = new applepay_1.ApplePay(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.bankAccounts = new bankaccounts_1.BankAccounts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.bookings = new bookings_1.Bookings(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.cards = new cards_1.Cards(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.cashDrawers = new cashdrawers_1.CashDrawers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.catalog = new catalog_1.Catalog(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.checkout = new checkout_1.Checkout(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.customerGroups = new customergroups_1.CustomerGroups(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.customerSegments = new customersegments_1.CustomerSegments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.customers = new customers_1.Customers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.devices = new devices_1.Devices(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.disputes = new disputes_1.Disputes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.employees = new employees_1.Employees(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.giftCardActivities = new giftcardactivities_1.GiftCardActivities(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.giftCards = new giftcards_1.GiftCards(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.inventory = new inventory_1.Inventory(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.invoices = new invoices_1.Invoices(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.labor = new labor_1.Labor(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.locations = new locations_1.Locations(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.loyalty = new loyalty_1.Loyalty(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.merchants = new merchants_1.Merchants(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.mobileAuthorization = new mobileauthorization_1.MobileAuthorization(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.oAuth = new oauth_1.OAuth(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.orders = new orders_1.Orders(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.payments = new payments_1.Payments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.refunds = new refunds_1.Refunds(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.sites = new sites_1.Sites(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.snippets = new snippets_1.Snippets(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.subscriptions = new subscriptions_1.Subscriptions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.team = new team_1.Team(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.terminal = new terminal_1.Terminal(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.transactions = new transactions_1.Transactions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.v1Employees = new v1employees_1.V1Employees(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.v1Transactions = new v1transactions_1.V1Transactions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
