/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { PosixAccount } from "./posixaccount";
import { SecurityKey } from "./securitykey";
import { SshPublicKey } from "./sshpublickey";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The user profile information used for logging in to a virtual machine on Google Compute Engine.
 */
export class LoginProfile extends SpeakeasyBase {
  /**
   * Required. A unique user ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The list of POSIX accounts associated with the user.
   */
  @SpeakeasyMetadata({ elemType: PosixAccount })
  @Expose({ name: "posixAccounts" })
  @Type(() => PosixAccount)
  posixAccounts?: PosixAccount[];

  /**
   * The registered security key credentials for a user.
   */
  @SpeakeasyMetadata({ elemType: SecurityKey })
  @Expose({ name: "securityKeys" })
  @Type(() => SecurityKey)
  securityKeys?: SecurityKey[];

  /**
   * A map from SSH public key fingerprint to the associated key object.
   */
  @SpeakeasyMetadata({ elemType: SshPublicKey })
  @Expose({ name: "sshPublicKeys" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, SshPublicKey> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], SshPublicKey);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  sshPublicKeys?: Record<string, SshPublicKey>;
}
