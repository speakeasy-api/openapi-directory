/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrbitClass } from "./orbitclass";
import { Expose, Type } from "class-transformer";

export class OrbitalData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "aphelion_distance" })
  aphelionDistance?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ascending_node_longitude" })
  ascendingNodeLongitude?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "data_arc_in_days" })
  dataArcInDays?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "eccentricity" })
  eccentricity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "epoch_osculation" })
  epochOsculation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "equinox" })
  equinox?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "first_observation_date" })
  firstObservationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "inclination" })
  inclination?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "jupiter_tisserand_invariant" })
  jupiterTisserandInvariant?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_observation_date" })
  lastObservationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mean_anomaly" })
  meanAnomaly?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mean_motion" })
  meanMotion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "minimum_orbit_intersection" })
  minimumOrbitIntersection?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "observations_used" })
  observationsUsed?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "orbit_class" })
  @Type(() => OrbitClass)
  orbitClass?: OrbitClass;

  @SpeakeasyMetadata()
  @Expose({ name: "orbit_determination_date" })
  orbitDeterminationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "orbit_id" })
  orbitId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "orbit_uncertainty" })
  orbitUncertainty?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "orbital_period" })
  orbitalPeriod?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "perihelion_argument" })
  perihelionArgument?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "perihelion_distance" })
  perihelionDistance?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "perihelion_time" })
  perihelionTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "semi_major_axis" })
  semiMajorAxis?: string;
}
