/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateNetworkOneToManyNatRulesRequestBodyRulesPortRules {
    /**
     * Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedIps")
    public String[] allowedIps;

    public UpdateNetworkOneToManyNatRulesRequestBodyRulesPortRules withAllowedIps(String[] allowedIps) {
        this.allowedIps = allowedIps;
        return this;
    }
    
    /**
     * Local IP address to which traffic will be forwarded
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localIp")
    public String localIp;

    public UpdateNetworkOneToManyNatRulesRequestBodyRulesPortRules withLocalIp(String localIp) {
        this.localIp = localIp;
        return this;
    }
    
    /**
     * Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localPort")
    public String localPort;

    public UpdateNetworkOneToManyNatRulesRequestBodyRulesPortRules withLocalPort(String localPort) {
        this.localPort = localPort;
        return this;
    }
    
    /**
     * A description of the rule
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public UpdateNetworkOneToManyNatRulesRequestBodyRulesPortRules withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * 'tcp' or 'udp'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocol")
    public UpdateNetworkOneToManyNatRulesRequestBodyRulesPortRulesProtocolEnum protocol;

    public UpdateNetworkOneToManyNatRulesRequestBodyRulesPortRules withProtocol(UpdateNetworkOneToManyNatRulesRequestBodyRulesPortRulesProtocolEnum protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * Destination port of the traffic that is arriving on the WAN
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publicPort")
    public String publicPort;

    public UpdateNetworkOneToManyNatRulesRequestBodyRulesPortRules withPublicPort(String publicPort) {
        this.publicPort = publicPort;
        return this;
    }
    
    public UpdateNetworkOneToManyNatRulesRequestBodyRulesPortRules(){}
}
