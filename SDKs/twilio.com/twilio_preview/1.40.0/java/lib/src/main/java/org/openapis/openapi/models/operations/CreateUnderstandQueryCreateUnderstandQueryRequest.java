/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreateUnderstandQueryCreateUnderstandQueryRequest {
    /**
     * Constraints the query to a given Field with an task. Useful when you know the Field you are expecting. It accepts one field in the format *task-unique-name-1*:*field-unique-name*
     */
    @SpeakeasyMetadata("form:name=Field")
    public String field;
    public CreateUnderstandQueryCreateUnderstandQueryRequest withField(String field) {
        this.field = field;
        return this;
    }
    
    /**
     * An ISO language-country string of the sample.
     */
    @SpeakeasyMetadata("form:name=Language")
    public String language;
    public CreateUnderstandQueryCreateUnderstandQueryRequest withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * The Model Build Sid or unique name of the Model Build to be queried.
     */
    @SpeakeasyMetadata("form:name=ModelBuild")
    public String modelBuild;
    public CreateUnderstandQueryCreateUnderstandQueryRequest withModelBuild(String modelBuild) {
        this.modelBuild = modelBuild;
        return this;
    }
    
    /**
     * A user-provided string that uniquely identifies this resource as an alternative to the sid. It can be up to 2048 characters long.
     */
    @SpeakeasyMetadata("form:name=Query")
    public String query;
    public CreateUnderstandQueryCreateUnderstandQueryRequest withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     * Constraints the query to a set of tasks. Useful when you need to constrain the paths the user can take. Tasks should be comma separated *task-unique-name-1*, *task-unique-name-2*
     */
    @SpeakeasyMetadata("form:name=Tasks")
    public String tasks;
    public CreateUnderstandQueryCreateUnderstandQueryRequest withTasks(String tasks) {
        this.tasks = tasks;
        return this;
    }
    
}
