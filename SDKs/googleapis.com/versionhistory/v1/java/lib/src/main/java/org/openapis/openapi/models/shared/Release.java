/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Release - A Release is owned by a Version. A Release contains information about the release(s) of its parent version. This includes when the release began and ended, as well as what percentage it was released at. If the version is released again, or if the serving percentage changes, it will create another release under the version.
 */
public class Release {
    /**
     * Rollout fraction. This fraction indicates the fraction of people that should receive this version in this release. If the fraction is not specified in ReleaseManager, the API will assume fraction is 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fraction")
    public Double fraction;

    public Release withFraction(Double fraction) {
        this.fraction = fraction;
        return this;
    }
    
    /**
     * Rollout fraction group. Only fractions with the same fraction_group are statistically comparable: there may be non-fractional differences between different fraction groups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fractionGroup")
    public String fractionGroup;

    public Release withFractionGroup(String fractionGroup) {
        this.fractionGroup = fractionGroup;
        return this;
    }
    
    /**
     * Release name. Format is "{product}/platforms/{platform}/channels/{channel}/versions/{version}/releases/{release}"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Release withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serving")
    public Interval serving;

    public Release withServing(Interval serving) {
        this.serving = serving;
        return this;
    }
    
    /**
     * String containing just the version number. e.g. "84.0.4147.38"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public Release withVersion(String version) {
        this.version = version;
        return this;
    }
    
    public Release(){}
}
