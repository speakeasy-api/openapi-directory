/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthorAssociationEnum } from "./authorassociationenum";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Expose, Transform, Type } from "class-transformer";

export class PullRequestReviewLinksHtml extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href: string;
}

export class PullRequestReviewLinksPullRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href: string;
}

export class PullRequestReviewLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "html" })
  @Type(() => PullRequestReviewLinksHtml)
  html: PullRequestReviewLinksHtml;

  @SpeakeasyMetadata()
  @Expose({ name: "pull_request" })
  @Type(() => PullRequestReviewLinksPullRequest)
  pullRequest: PullRequestReviewLinksPullRequest;
}

/**
 * Pull Request Reviews are reviews on pull requests.
 */
export class PullRequestReview extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => PullRequestReviewLinks)
  links: PullRequestReviewLinks;

  /**
   * How the author is associated with the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "author_association" })
  authorAssociation: AuthorAssociationEnum;

  /**
   * The text of the review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body: string;

  @SpeakeasyMetadata()
  @Expose({ name: "body_html" })
  bodyHtml?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "body_text" })
  bodyText?: string;

  /**
   * A commit SHA for the review. If the commit object was garbage collected or forcibly deleted, then it no longer exists in Git and this value will be `null`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commit_id" })
  commitId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  /**
   * Unique identifier of the review
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pull_request_url" })
  pullRequestUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: string;

  @SpeakeasyMetadata()
  @Expose({ name: "submitted_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submittedAt?: Date;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => NullableSimpleUser)
  user: NullableSimpleUser;
}
