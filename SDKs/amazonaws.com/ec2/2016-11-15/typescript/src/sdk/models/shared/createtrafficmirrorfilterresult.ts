/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The destination port range assigned to the Traffic Mirror rule.
 */
export class CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRulesDestinationPortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * The action assigned to the Traffic Mirror rule.
 */
export enum CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum {
  Accept = "accept",
  Reject = "reject",
}

/**
 * The source port range assigned to the Traffic Mirror rule.
 */
export class CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRulesSourcePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * The traffic direction assigned to the Traffic Mirror rule.
 */
export enum CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum {
  Ingress = "ingress",
  Egress = "egress",
}

/**
 * Describes the Traffic Mirror rule.
 */
export class CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRules extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  destinationCidrBlock?: string;

  @SpeakeasyMetadata()
  destinationPortRange?: CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRulesDestinationPortRange;

  @SpeakeasyMetadata()
  protocol?: number;

  @SpeakeasyMetadata()
  ruleAction?: CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum;

  @SpeakeasyMetadata()
  ruleNumber?: number;

  @SpeakeasyMetadata()
  sourceCidrBlock?: string;

  @SpeakeasyMetadata()
  sourcePortRange?: CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRulesSourcePortRange;

  @SpeakeasyMetadata()
  trafficDirection?: CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum;

  @SpeakeasyMetadata()
  trafficMirrorFilterId?: string;

  @SpeakeasyMetadata()
  trafficMirrorFilterRuleId?: string;
}

/**
 * The destination port range assigned to the Traffic Mirror rule.
 */
export class CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRulesDestinationPortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * The action assigned to the Traffic Mirror rule.
 */
export enum CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum {
  Accept = "accept",
  Reject = "reject",
}

/**
 * The source port range assigned to the Traffic Mirror rule.
 */
export class CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRulesSourcePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * The traffic direction assigned to the Traffic Mirror rule.
 */
export enum CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum {
  Ingress = "ingress",
  Egress = "egress",
}

/**
 * Describes the Traffic Mirror rule.
 */
export class CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRules extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  destinationCidrBlock?: string;

  @SpeakeasyMetadata()
  destinationPortRange?: CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRulesDestinationPortRange;

  @SpeakeasyMetadata()
  protocol?: number;

  @SpeakeasyMetadata()
  ruleAction?: CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum;

  @SpeakeasyMetadata()
  ruleNumber?: number;

  @SpeakeasyMetadata()
  sourceCidrBlock?: string;

  @SpeakeasyMetadata()
  sourcePortRange?: CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRulesSourcePortRange;

  @SpeakeasyMetadata()
  trafficDirection?: CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum;

  @SpeakeasyMetadata()
  trafficMirrorFilterId?: string;

  @SpeakeasyMetadata()
  trafficMirrorFilterRuleId?: string;
}

export enum CreateTrafficMirrorFilterResultTrafficMirrorFilterNetworkServicesEnum {
  AmazonDns = "amazon-dns",
}

/**
 * Describes a tag.
 */
export class CreateTrafficMirrorFilterResultTrafficMirrorFilterTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Information about the Traffic Mirror filter.
 */
export class CreateTrafficMirrorFilterResultTrafficMirrorFilter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata({
    elemType:
      CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRules,
  })
  egressFilterRules?: CreateTrafficMirrorFilterResultTrafficMirrorFilterEgressFilterRules[];

  @SpeakeasyMetadata({
    elemType:
      CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRules,
  })
  ingressFilterRules?: CreateTrafficMirrorFilterResultTrafficMirrorFilterIngressFilterRules[];

  @SpeakeasyMetadata()
  networkServices?: CreateTrafficMirrorFilterResultTrafficMirrorFilterNetworkServicesEnum[];

  @SpeakeasyMetadata({
    elemType: CreateTrafficMirrorFilterResultTrafficMirrorFilterTags,
  })
  tags?: CreateTrafficMirrorFilterResultTrafficMirrorFilterTags[];

  @SpeakeasyMetadata()
  trafficMirrorFilterId?: string;
}

/**
 * Success
 */
export class CreateTrafficMirrorFilterResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  clientToken?: string;

  @SpeakeasyMetadata()
  trafficMirrorFilter?: CreateTrafficMirrorFilterResultTrafficMirrorFilter;
}
