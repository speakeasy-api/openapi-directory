"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ViasNameGenderEnum(str, Enum):
    r"""The gender.
    >The following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.
    """
    MALE = 'MALE'
    FEMALE = 'FEMALE'
    UNKNOWN = 'UNKNOWN'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ViasName:
    
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName'), 'exclude': lambda f: f is None }})
    r"""The first name."""  
    gender: Optional[ViasNameGenderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gender'), 'exclude': lambda f: f is None }})
    r"""The gender.
    >The following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.
    """  
    infix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('infix'), 'exclude': lambda f: f is None }})
    r"""The name's infix, if applicable.
    >A maximum length of twenty (20) characters is imposed.
    """  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName'), 'exclude': lambda f: f is None }})
    r"""The last name."""  
    