/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { Categories } from "./categories";
import { CategoryGroupV5 } from "./categorygroupv5";
import { ConfigSettings } from "./configsettings";
import { Environment } from "./environment";
import { I18n } from "./i18n";
import { LhrEntity } from "./lhrentity";
import { LighthouseAuditResultV5 } from "./lighthouseauditresultv5";
import { RuntimeError } from "./runtimeerror";
import { StackPack } from "./stackpack";
import { Timing } from "./timing";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The Lighthouse result object.
 */
export class LighthouseResultV5 extends SpeakeasyBase {
  /**
   * Map of audits in the LHR.
   */
  @SpeakeasyMetadata({ elemType: LighthouseAuditResultV5 })
  @Expose({ name: "audits" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, LighthouseAuditResultV5> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], LighthouseAuditResultV5);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  audits?: Record<string, LighthouseAuditResultV5>;

  /**
   * The categories in a Lighthouse run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categories" })
  @Type(() => Categories)
  categories?: Categories;

  /**
   * Map of category groups in the LHR.
   */
  @SpeakeasyMetadata({ elemType: CategoryGroupV5 })
  @Expose({ name: "categoryGroups" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, CategoryGroupV5> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], CategoryGroupV5);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  categoryGroups?: Record<string, CategoryGroupV5>;

  /**
   * Message containing the configuration settings for the Lighthouse run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configSettings" })
  @Type(() => ConfigSettings)
  configSettings?: ConfigSettings;

  /**
   * Entity classification data.
   */
  @SpeakeasyMetadata({ elemType: LhrEntity })
  @Expose({ name: "entities" })
  @Type(() => LhrEntity)
  entities?: LhrEntity[];

  /**
   * Message containing environment configuration for a Lighthouse run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  @Type(() => Environment)
  environment?: Environment;

  /**
   * The time that this run was fetched.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fetchTime" })
  fetchTime?: string;

  /**
   * URL displayed on the page after Lighthouse finishes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finalDisplayedUrl" })
  finalDisplayedUrl?: string;

  /**
   * The final resolved url that was audited.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finalUrl" })
  finalUrl?: string;

  /**
   * Screenshot data of the full page, along with node rects relevant to the audit results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fullPageScreenshot" })
  fullPageScreenshot?: any;

  /**
   * Message containing the i18n data for the LHR - Version 1.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "i18n" })
  @Type(() => I18n)
  i18n?: I18n;

  /**
   * The lighthouse version that was used to generate this LHR.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lighthouseVersion" })
  lighthouseVersion?: string;

  /**
   * URL of the main document request of the final navigation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mainDocumentUrl" })
  mainDocumentUrl?: string;

  /**
   * The original requested url.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedUrl" })
  requestedUrl?: string;

  /**
   * List of all run warnings in the LHR. Will always output to at least `[]`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runWarnings" })
  runWarnings?: any[];

  /**
   * Message containing a runtime error config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runtimeError" })
  @Type(() => RuntimeError)
  runtimeError?: RuntimeError;

  /**
   * The Stack Pack advice strings.
   */
  @SpeakeasyMetadata({ elemType: StackPack })
  @Expose({ name: "stackPacks" })
  @Type(() => StackPack)
  stackPacks?: StackPack[];

  /**
   * Message containing the performance timing data for the Lighthouse run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timing" })
  @Type(() => Timing)
  timing?: Timing;

  /**
   * The user agent that was used to run this LHR.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userAgent" })
  userAgent?: string;
}
