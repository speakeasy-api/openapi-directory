"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class API:
    r"""This message defines attributes associated with API operations, such as a network API request. The terminology is based on the conventions used by Google APIs, Istio, and OpenAPI."""
    
    operation: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operation'), 'exclude': lambda f: f is None }})
    r"""The API operation name. For gRPC requests, it is the fully qualified API method name, such as \\"google.pubsub.v1.Publisher.Publish\\". For OpenAPI requests, it is the `operationId`, such as \\"getPet\\"."""  
    protocol: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocol'), 'exclude': lambda f: f is None }})
    r"""The API protocol used for sending the request, such as \\"http\\", \\"https\\", \\"grpc\\", or \\"internal\\"."""  
    service: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service'), 'exclude': lambda f: f is None }})
    r"""The API service name. It is a logical identifier for a networked API, such as \\"pubsub.googleapis.com\\". The naming syntax depends on the API management system being used for handling the request."""  
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""The API version associated with the API operation above, such as \\"v1\\" or \\"v1alpha1\\"."""  
    