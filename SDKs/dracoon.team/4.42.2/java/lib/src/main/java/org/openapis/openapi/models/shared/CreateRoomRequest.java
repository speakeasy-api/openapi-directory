/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CreateRoomRequest - Request model for creating a room
 */
public class CreateRoomRequest {
    /**
     * List of group ids
     * 
     * A room requires at least one admin (user or group)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminGroupIds")
    public Long[] adminGroupIds;
    public CreateRoomRequest withAdminGroupIds(Long[] adminGroupIds) {
        this.adminGroupIds = adminGroupIds;
        return this;
    }
    
    /**
     * List of user ids
     * 
     * A room requires at least one admin (user or group)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminIds")
    public Long[] adminIds;
    public CreateRoomRequest withAdminIds(Long[] adminIds) {
        this.adminIds = adminIds;
        return this;
    }
    
    /**
     * Classification ID:
     * 
     * * `1` - public
     * 
     * * `2` - internal
     * 
     * * `3` - confidential
     * 
     * * `4` - strictly confidential
     * 
     * 
     * 
     * Provided (or default) classification is taken from room
     * 
     * when file gets uploaded without any classification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classification")
    public CreateRoomRequestClassificationEnum classification;
    public CreateRoomRequest withClassification(CreateRoomRequestClassificationEnum classification) {
        this.classification = classification;
        return this;
    }
    
    /**
     * Is activities log active (for rooms only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasActivitiesLog")
    public Boolean hasActivitiesLog;
    public CreateRoomRequest withHasActivitiesLog(Boolean hasActivitiesLog) {
        this.hasActivitiesLog = hasActivitiesLog;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.10.0
     * 
     * Is recycle bin active (for rooms only)
     * 
     * Recycle bin is always on (disabling is not possible).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasRecycleBin")
    public Boolean hasRecycleBin;
    public CreateRoomRequest withHasRecycleBin(Boolean hasRecycleBin) {
        this.hasRecycleBin = hasRecycleBin;
        return this;
    }
    
    /**
     * Inherit permissions from parent room
     * 
     * (default: `false` if `parentId` is `0`; otherwise: `true`)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inheritPermissions")
    public Boolean inheritPermissions;
    public CreateRoomRequest withInheritPermissions(Boolean inheritPermissions) {
        this.inheritPermissions = inheritPermissions;
        return this;
    }
    
    /**
     * Name
     */
    @JsonProperty("name")
    public String name;
    public CreateRoomRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Behaviour when new users are added to the group:
     * 
     * * `autoallow`
     * 
     * * `pending`
     * 
     * 
     * 
     * Only relevant if `adminGroupIds` has items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newGroupMemberAcceptance")
    public CreateRoomRequestNewGroupMemberAcceptanceEnum newGroupMemberAcceptance;
    public CreateRoomRequest withNewGroupMemberAcceptance(CreateRoomRequestNewGroupMemberAcceptanceEnum newGroupMemberAcceptance) {
        this.newGroupMemberAcceptance = newGroupMemberAcceptance;
        return this;
    }
    
    /**
     * User notes
     * 
     * Use empty string to remove.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public CreateRoomRequest withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Parent room ID or `null` (not 0) to create a top level room
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentId")
    public Long parentId;
    public CreateRoomRequest withParentId(Long parentId) {
        this.parentId = parentId;
        return this;
    }
    
    /**
     * Quota in byte
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quota")
    public Long quota;
    public CreateRoomRequest withQuota(Long quota) {
        this.quota = quota;
        return this;
    }
    
    /**
     * Retention period for deleted nodes in days
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recycleBinRetentionPeriod")
    public Integer recycleBinRetentionPeriod;
    public CreateRoomRequest withRecycleBinRetentionPeriod(Integer recycleBinRetentionPeriod) {
        this.recycleBinRetentionPeriod = recycleBinRetentionPeriod;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.22.0
     * 
     * Time the node was created on external file system
     * 
     * (default: current server datetime in UTC format)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestampCreation")
    public OffsetDateTime timestampCreation;
    public CreateRoomRequest withTimestampCreation(OffsetDateTime timestampCreation) {
        this.timestampCreation = timestampCreation;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.22.0
     * 
     * Time the content of a node was last modified on external file system
     * 
     * (default: current server datetime in UTC format)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestampModification")
    public OffsetDateTime timestampModification;
    public CreateRoomRequest withTimestampModification(OffsetDateTime timestampModification) {
        this.timestampModification = timestampModification;
        return this;
    }
    
}
