// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetGetPathwayInfoFormatEnum
type GetGetPathwayInfoFormatEnum string

const (
	GetGetPathwayInfoFormatEnumJSON GetGetPathwayInfoFormatEnum = "json"
	GetGetPathwayInfoFormatEnumXML  GetGetPathwayInfoFormatEnum = "xml"
	GetGetPathwayInfoFormatEnumHTML GetGetPathwayInfoFormatEnum = "html"
	GetGetPathwayInfoFormatEnumDump GetGetPathwayInfoFormatEnum = "dump"
	GetGetPathwayInfoFormatEnumJpg  GetGetPathwayInfoFormatEnum = "jpg"
	GetGetPathwayInfoFormatEnumPdf  GetGetPathwayInfoFormatEnum = "pdf"
)

func (e GetGetPathwayInfoFormatEnum) ToPointer() *GetGetPathwayInfoFormatEnum {
	return &e
}

func (e *GetGetPathwayInfoFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetGetPathwayInfoFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGetPathwayInfoFormatEnum: %v", v)
	}
}

type GetGetPathwayInfoRequest struct {
	Format *GetGetPathwayInfoFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The pathway identifier
	PwID string `queryParam:"style=form,explode=true,name=pwId"`
}

type GetGetPathwayInfoResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
