// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RunnerLabelTypeEnum - The type of label. Read-only labels are applied automatically when the runner is configured.
type RunnerLabelTypeEnum string

const (
	RunnerLabelTypeEnumReadOnly RunnerLabelTypeEnum = "read-only"
	RunnerLabelTypeEnumCustom   RunnerLabelTypeEnum = "custom"
)

func (e RunnerLabelTypeEnum) ToPointer() *RunnerLabelTypeEnum {
	return &e
}

func (e *RunnerLabelTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "read-only":
		fallthrough
	case "custom":
		*e = RunnerLabelTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RunnerLabelTypeEnum: %v", v)
	}
}

// RunnerLabel - A label for a self hosted runner
type RunnerLabel struct {
	// Unique identifier of the label.
	ID *int64 `json:"id,omitempty"`
	// Name of the label.
	Name string `json:"name"`
	// The type of label. Read-only labels are applied automatically when the runner is configured.
	Type *RunnerLabelTypeEnum `json:"type,omitempty"`
}
