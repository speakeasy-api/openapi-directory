// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OtoroshiHealthDatastoreEnum string

const (
	OtoroshiHealthDatastoreEnumHealthy     OtoroshiHealthDatastoreEnum = "healthy"
	OtoroshiHealthDatastoreEnumUnhealthy   OtoroshiHealthDatastoreEnum = "unhealthy"
	OtoroshiHealthDatastoreEnumUnreachable OtoroshiHealthDatastoreEnum = "unreachable"
)

func (e *OtoroshiHealthDatastoreEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "healthy":
		fallthrough
	case "unhealthy":
		fallthrough
	case "unreachable":
		*e = OtoroshiHealthDatastoreEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OtoroshiHealthDatastoreEnum: %s", s)
	}
}

type OtoroshiHealthOtoroshiEnum string

const (
	OtoroshiHealthOtoroshiEnumHealthy   OtoroshiHealthOtoroshiEnum = "healthy"
	OtoroshiHealthOtoroshiEnumUnhealthy OtoroshiHealthOtoroshiEnum = "unhealthy"
	OtoroshiHealthOtoroshiEnumDown      OtoroshiHealthOtoroshiEnum = "down"
)

func (e *OtoroshiHealthOtoroshiEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "healthy":
		fallthrough
	case "unhealthy":
		fallthrough
	case "down":
		*e = OtoroshiHealthOtoroshiEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OtoroshiHealthOtoroshiEnum: %s", s)
	}
}

// OtoroshiHealth - The structure that represent current Otoroshi health
type OtoroshiHealth struct {
	Datastore OtoroshiHealthDatastoreEnum `json:"datastore"`
	Otoroshi  OtoroshiHealthOtoroshiEnum  `json:"otoroshi"`
}
