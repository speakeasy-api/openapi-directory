<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Returnpolicy 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Batches multiple return policy related calls in a single request.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyCustombatchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyCustombatchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyCustombatchResponse
     */
	public function contentReturnpolicyCustombatch(
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyCustombatchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyCustombatchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyCustombatchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/returnpolicy/batch');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "returnpolicyCustomBatchRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyCustombatchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyCustombatchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->returnpolicyCustomBatchResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ReturnpolicyCustomBatchResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Deletes a return policy for the given Merchant Center account.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyDeleteResponse
     */
	public function contentReturnpolicyDelete(
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/returnpolicy/{returnPolicyId}', \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Gets a return policy of the Merchant Center account.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyGetResponse
     */
	public function contentReturnpolicyGet(
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/returnpolicy/{returnPolicyId}', \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->returnPolicy = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ReturnPolicy', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Inserts a return policy for the Merchant Center account.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyInsertRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyInsertSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyInsertResponse
     */
	public function contentReturnpolicyInsert(
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyInsertRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyInsertSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyInsertResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/returnpolicy', \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyInsertRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "returnPolicy", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyInsertRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyInsertResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->returnPolicy = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ReturnPolicy', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists the return policies of the Merchant Center account.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyListResponse
     */
	public function contentReturnpolicyList(
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/returnpolicy', \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->returnpolicyListResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ReturnpolicyListResponse', 'json');
            }
        }

        return $response;
    }
}