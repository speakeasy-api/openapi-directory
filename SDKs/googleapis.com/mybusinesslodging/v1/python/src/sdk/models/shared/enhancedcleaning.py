"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum(str, Enum):
    r"""Commercial grade disinfectant cleaning exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum(str, Enum):
    r"""Common areas enhanced cleaning exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum(str, Enum):
    r"""Employees trained cleaning procedures exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum(str, Enum):
    r"""Employees trained thorough hand washing exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum(str, Enum):
    r"""Employees wear protective equipment exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum(str, Enum):
    r"""Guest rooms enhanced cleaning exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnhancedCleaning:
    r"""Enhanced cleaning measures implemented by the hotel during COVID-19."""
    
    commercial_grade_disinfectant_cleaning: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commercialGradeDisinfectantCleaning'), 'exclude': lambda f: f is None }})
    r"""Commercial-grade disinfectant used to clean the property."""  
    commercial_grade_disinfectant_cleaning_exception: Optional[EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commercialGradeDisinfectantCleaningException'), 'exclude': lambda f: f is None }})
    r"""Commercial grade disinfectant cleaning exception."""  
    common_areas_enhanced_cleaning: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commonAreasEnhancedCleaning'), 'exclude': lambda f: f is None }})
    r"""Enhanced cleaning of common areas."""  
    common_areas_enhanced_cleaning_exception: Optional[EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commonAreasEnhancedCleaningException'), 'exclude': lambda f: f is None }})
    r"""Common areas enhanced cleaning exception."""  
    employees_trained_cleaning_procedures: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employeesTrainedCleaningProcedures'), 'exclude': lambda f: f is None }})
    r"""Employees trained in COVID-19 cleaning procedures."""  
    employees_trained_cleaning_procedures_exception: Optional[EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employeesTrainedCleaningProceduresException'), 'exclude': lambda f: f is None }})
    r"""Employees trained cleaning procedures exception."""  
    employees_trained_thorough_hand_washing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employeesTrainedThoroughHandWashing'), 'exclude': lambda f: f is None }})
    r"""Employees trained in thorough hand-washing."""  
    employees_trained_thorough_hand_washing_exception: Optional[EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employeesTrainedThoroughHandWashingException'), 'exclude': lambda f: f is None }})
    r"""Employees trained thorough hand washing exception."""  
    employees_wear_protective_equipment: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employeesWearProtectiveEquipment'), 'exclude': lambda f: f is None }})
    r"""Employees wear masks, face shields, and/or gloves."""  
    employees_wear_protective_equipment_exception: Optional[EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employeesWearProtectiveEquipmentException'), 'exclude': lambda f: f is None }})
    r"""Employees wear protective equipment exception."""  
    guest_rooms_enhanced_cleaning: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('guestRoomsEnhancedCleaning'), 'exclude': lambda f: f is None }})
    r"""Enhanced cleaning of guest rooms."""  
    guest_rooms_enhanced_cleaning_exception: Optional[EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('guestRoomsEnhancedCleaningException'), 'exclude': lambda f: f is None }})
    r"""Guest rooms enhanced cleaning exception."""  
    