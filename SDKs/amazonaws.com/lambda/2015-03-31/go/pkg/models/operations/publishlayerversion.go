// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PublishLayerVersionPathParams struct {
	// The name or Amazon Resource Name (ARN) of the layer.
	LayerName string `pathParam:"style=simple,explode=false,name=LayerName"`
}

type PublishLayerVersionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// PublishLayerVersionRequestBodyContent - A ZIP archive that contains the contents of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>. You can specify either an Amazon S3 location, or upload a layer archive directly.
type PublishLayerVersionRequestBodyContent struct {
	S3Bucket        *string `json:"S3Bucket,omitempty"`
	S3Key           *string `json:"S3Key,omitempty"`
	S3ObjectVersion *string `json:"S3ObjectVersion,omitempty"`
	ZipFile         *string `json:"ZipFile,omitempty"`
}

type PublishLayerVersionRequestBody struct {
	// A list of compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html">instruction set architectures</a>.
	CompatibleArchitectures []shared.ArchitectureEnum `json:"CompatibleArchitectures,omitempty"`
	// A list of compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">function runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.
	CompatibleRuntimes []shared.RuntimeEnum `json:"CompatibleRuntimes,omitempty"`
	// A ZIP archive that contains the contents of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>. You can specify either an Amazon S3 location, or upload a layer archive directly.
	Content PublishLayerVersionRequestBodyContent `json:"Content"`
	// The description of the version.
	Description *string `json:"Description,omitempty"`
	// <p>The layer's software license. It can be any of the following:</p> <ul> <li> <p>An <a href="https://spdx.org/licenses/">SPDX license identifier</a>. For example, <code>MIT</code>.</p> </li> <li> <p>The URL of a license hosted on the internet. For example, <code>https://opensource.org/licenses/MIT</code>.</p> </li> <li> <p>The full text of the license.</p> </li> </ul>
	LicenseInfo *string `json:"LicenseInfo,omitempty"`
}

type PublishLayerVersionRequest struct {
	PathParams PublishLayerVersionPathParams
	Headers    PublishLayerVersionHeaders
	Request    PublishLayerVersionRequestBody `request:"mediaType=application/json"`
}

type PublishLayerVersionResponse struct {
	// CodeStorageExceededException
	CodeStorageExceededException interface{}
	ContentType                  string
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// Success
	PublishLayerVersionResponse *shared.PublishLayerVersionResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
