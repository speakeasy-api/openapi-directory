// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AcknowledgeThirdPartyJobXAmzTargetEnum
type AcknowledgeThirdPartyJobXAmzTargetEnum string

const (
	AcknowledgeThirdPartyJobXAmzTargetEnumCodePipeline20150709AcknowledgeThirdPartyJob AcknowledgeThirdPartyJobXAmzTargetEnum = "CodePipeline_20150709.AcknowledgeThirdPartyJob"
)

func (e *AcknowledgeThirdPartyJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodePipeline_20150709.AcknowledgeThirdPartyJob":
		*e = AcknowledgeThirdPartyJobXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AcknowledgeThirdPartyJobXAmzTargetEnum: %s", s)
	}
}

type AcknowledgeThirdPartyJobRequest struct {
	AcknowledgeThirdPartyJobInput shared.AcknowledgeThirdPartyJobInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    AcknowledgeThirdPartyJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AcknowledgeThirdPartyJobResponse struct {
	// Success
	AcknowledgeThirdPartyJobOutput *shared.AcknowledgeThirdPartyJobOutput
	ContentType                    string
	// InvalidClientTokenException
	InvalidClientTokenException interface{}
	// InvalidNonceException
	InvalidNonceException interface{}
	// JobNotFoundException
	JobNotFoundException interface{}
	StatusCode           int
	RawResponse          *http.Response
	// ValidationException
	ValidationException interface{}
}
