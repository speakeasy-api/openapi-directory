/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * FraudDetectionResult - The fraud detection result produced by Voice ID, processed against the current session state and streamed audio of the speaker.
 */
public class FraudDetectionResult {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("AudioAggregationEndedAt")
    public OffsetDateTime audioAggregationEndedAt;
    public FraudDetectionResult withAudioAggregationEndedAt(OffsetDateTime audioAggregationEndedAt) {
        this.audioAggregationEndedAt = audioAggregationEndedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("AudioAggregationStartedAt")
    public OffsetDateTime audioAggregationStartedAt;
    public FraudDetectionResult withAudioAggregationStartedAt(OffsetDateTime audioAggregationStartedAt) {
        this.audioAggregationStartedAt = audioAggregationStartedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Configuration")
    public FraudDetectionConfiguration configuration;
    public FraudDetectionResult withConfiguration(FraudDetectionConfiguration configuration) {
        this.configuration = configuration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Decision")
    public FraudDetectionDecisionEnum decision;
    public FraudDetectionResult withDecision(FraudDetectionDecisionEnum decision) {
        this.decision = decision;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FraudDetectionResultId")
    public String fraudDetectionResultId;
    public FraudDetectionResult withFraudDetectionResultId(String fraudDetectionResultId) {
        this.fraudDetectionResultId = fraudDetectionResultId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Reasons")
    public FraudDetectionReasonEnum[] reasons;
    public FraudDetectionResult withReasons(FraudDetectionReasonEnum[] reasons) {
        this.reasons = reasons;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RiskDetails")
    public FraudRiskDetails riskDetails;
    public FraudDetectionResult withRiskDetails(FraudRiskDetails riskDetails) {
        this.riskDetails = riskDetails;
        return this;
    }
    
}
