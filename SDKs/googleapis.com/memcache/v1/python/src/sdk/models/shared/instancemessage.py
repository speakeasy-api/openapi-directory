"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InstanceMessageCodeEnum(str, Enum):
    r"""A code that correspond to one type of user-facing message."""
    CODE_UNSPECIFIED = 'CODE_UNSPECIFIED'
    ZONE_DISTRIBUTION_UNBALANCED = 'ZONE_DISTRIBUTION_UNBALANCED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InstanceMessage:
    
    code: Optional[InstanceMessageCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""A code that correspond to one type of user-facing message."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""Message on memcached instance which will be exposed to users."""  
    