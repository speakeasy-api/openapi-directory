/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EntityKey } from "./entitykey";
import { TransitiveMembershipRole } from "./transitivemembershiprole";
import { Expose, Type } from "class-transformer";

/**
 * The relation between the group and the transitive membership.
 */
export enum MemberRelationRelationTypeEnum {
  RelationTypeUnspecified = "RELATION_TYPE_UNSPECIFIED",
  Direct = "DIRECT",
  Indirect = "INDIRECT",
  DirectAndIndirect = "DIRECT_AND_INDIRECT",
}

/**
 * Message representing a transitive membership of a group.
 */
export class MemberRelation extends SpeakeasyBase {
  /**
   * Resource name for this member.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "member" })
  member?: string;

  /**
   * Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.
   */
  @SpeakeasyMetadata({ elemType: EntityKey })
  @Expose({ name: "preferredMemberKey" })
  @Type(() => EntityKey)
  preferredMemberKey?: EntityKey[];

  /**
   * The relation between the group and the transitive membership.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relationType" })
  relationType?: MemberRelationRelationTypeEnum;

  /**
   * The membership role details (i.e name of role and expiry time).
   */
  @SpeakeasyMetadata({ elemType: TransitiveMembershipRole })
  @Expose({ name: "roles" })
  @Type(() => TransitiveMembershipRole)
  roles?: TransitiveMembershipRole[];
}
