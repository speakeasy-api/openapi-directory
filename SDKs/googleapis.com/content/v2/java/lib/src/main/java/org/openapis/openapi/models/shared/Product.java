/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Product -  Required product attributes are primarily defined by the products data specification. See the Products Data Specification Help Center article for information. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.
 */
public class Product {
    /**
     * Additional URLs of images of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalImageLinks")
    public String[] additionalImageLinks;

    public Product withAdditionalImageLinks(String[] additionalImageLinks) {
        this.additionalImageLinks = additionalImageLinks;
        return this;
    }
    
    /**
     * Additional categories of the item (formatted as in products data specification).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalProductTypes")
    public String[] additionalProductTypes;

    public Product withAdditionalProductTypes(String[] additionalProductTypes) {
        this.additionalProductTypes = additionalProductTypes;
        return this;
    }
    
    /**
     * Should be set to true if the item is targeted towards adults.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adult")
    public Boolean adult;

    public Product withAdult(Boolean adult) {
        this.adult = adult;
        return this;
    }
    
    /**
     * Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adwordsGrouping")
    public String adwordsGrouping;

    public Product withAdwordsGrouping(String adwordsGrouping) {
        this.adwordsGrouping = adwordsGrouping;
        return this;
    }
    
    /**
     * Similar to adwords_grouping, but only works on CPC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adwordsLabels")
    public String[] adwordsLabels;

    public Product withAdwordsLabels(String[] adwordsLabels) {
        this.adwordsLabels = adwordsLabels;
        return this;
    }
    
    /**
     * Allows advertisers to override the item URL when the product is shown within the context of Product Ads.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adwordsRedirect")
    public String adwordsRedirect;

    public Product withAdwordsRedirect(String adwordsRedirect) {
        this.adwordsRedirect = adwordsRedirect;
        return this;
    }
    
    /**
     * Target age group of the item. Acceptable values are: - "`adult`" - "`infant`" - "`kids`" - "`newborn`" - "`toddler`" - "`youngAdult`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ageGroup")
    public String ageGroup;

    public Product withAgeGroup(String ageGroup) {
        this.ageGroup = ageGroup;
        return this;
    }
    
    /**
     * Deprecated. Do not use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aspects")
    public ProductAspect[] aspects;

    public Product withAspects(ProductAspect[] aspects) {
        this.aspects = aspects;
        return this;
    }
    
    /**
     * Availability status of the item. Acceptable values are: - "`in stock`" - "`out of stock`" - "`preorder`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availability")
    public String availability;

    public Product withAvailability(String availability) {
        this.availability = availability;
        return this;
    }
    
    /**
     * The day a pre-ordered product becomes available for delivery, in ISO 8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availabilityDate")
    public String availabilityDate;

    public Product withAvailabilityDate(String availabilityDate) {
        this.availabilityDate = availabilityDate;
        return this;
    }
    
    /**
     * Brand of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brand")
    public String brand;

    public Product withBrand(String brand) {
        this.brand = brand;
        return this;
    }
    
    /**
     * URL for the canonical version of your item's landing page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canonicalLink")
    public String canonicalLink;

    public Product withCanonicalLink(String canonicalLink) {
        this.canonicalLink = canonicalLink;
        return this;
    }
    
    /**
     * Required. The item's channel (online or local). Acceptable values are: - "`local`" - "`online`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channel")
    public String channel;

    public Product withChannel(String channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * Color of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("color")
    public String color;

    public Product withColor(String color) {
        this.color = color;
        return this;
    }
    
    /**
     * Condition or state of the item. Acceptable values are: - "`new`" - "`refurbished`" - "`used`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public String condition;

    public Product withCondition(String condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * Required. The two-letter ISO 639-1 language code for the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentLanguage")
    public String contentLanguage;

    public Product withContentLanguage(String contentLanguage) {
        this.contentLanguage = contentLanguage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("costOfGoodsSold")
    public Price costOfGoodsSold;

    public Product withCostOfGoodsSold(Price costOfGoodsSold) {
        this.costOfGoodsSold = costOfGoodsSold;
        return this;
    }
    
    /**
     * A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., `{ "name": "size type", "value": "regular" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Buy on Google (formerly known as Shopping Actions).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customAttributes")
    public CustomAttribute[] customAttributes;

    public Product withCustomAttributes(CustomAttribute[] customAttributes) {
        this.customAttributes = customAttributes;
        return this;
    }
    
    /**
     * A list of custom (merchant-provided) custom attribute groups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customGroups")
    public CustomGroup[] customGroups;

    public Product withCustomGroups(CustomGroup[] customGroups) {
        this.customGroups = customGroups;
        return this;
    }
    
    /**
     * Custom label 0 for custom grouping of items in a Shopping campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customLabel0")
    public String customLabel0;

    public Product withCustomLabel0(String customLabel0) {
        this.customLabel0 = customLabel0;
        return this;
    }
    
    /**
     * Custom label 1 for custom grouping of items in a Shopping campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customLabel1")
    public String customLabel1;

    public Product withCustomLabel1(String customLabel1) {
        this.customLabel1 = customLabel1;
        return this;
    }
    
    /**
     * Custom label 2 for custom grouping of items in a Shopping campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customLabel2")
    public String customLabel2;

    public Product withCustomLabel2(String customLabel2) {
        this.customLabel2 = customLabel2;
        return this;
    }
    
    /**
     * Custom label 3 for custom grouping of items in a Shopping campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customLabel3")
    public String customLabel3;

    public Product withCustomLabel3(String customLabel3) {
        this.customLabel3 = customLabel3;
        return this;
    }
    
    /**
     * Custom label 4 for custom grouping of items in a Shopping campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customLabel4")
    public String customLabel4;

    public Product withCustomLabel4(String customLabel4) {
        this.customLabel4 = customLabel4;
        return this;
    }
    
    /**
     * Description of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Product withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Specifies the intended destinations for the product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinations")
    public ProductDestination[] destinations;

    public Product withDestinations(ProductDestination[] destinations) {
        this.destinations = destinations;
        return this;
    }
    
    /**
     * An identifier for an item for dynamic remarketing campaigns.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayAdsId")
    public String displayAdsId;

    public Product withDisplayAdsId(String displayAdsId) {
        this.displayAdsId = displayAdsId;
        return this;
    }
    
    /**
     * URL directly to your item's landing page for dynamic remarketing campaigns.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayAdsLink")
    public String displayAdsLink;

    public Product withDisplayAdsLink(String displayAdsLink) {
        this.displayAdsLink = displayAdsLink;
        return this;
    }
    
    /**
     * Advertiser-specified recommendations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayAdsSimilarIds")
    public String[] displayAdsSimilarIds;

    public Product withDisplayAdsSimilarIds(String[] displayAdsSimilarIds) {
        this.displayAdsSimilarIds = displayAdsSimilarIds;
        return this;
    }
    
    /**
     * Title of an item for dynamic remarketing campaigns.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayAdsTitle")
    public String displayAdsTitle;

    public Product withDisplayAdsTitle(String displayAdsTitle) {
        this.displayAdsTitle = displayAdsTitle;
        return this;
    }
    
    /**
     * Offer margin for dynamic remarketing campaigns.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayAdsValue")
    public Double displayAdsValue;

    public Product withDisplayAdsValue(Double displayAdsValue) {
        this.displayAdsValue = displayAdsValue;
        return this;
    }
    
    /**
     * The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - "`A`" - "`A+`" - "`A++`" - "`A+++`" - "`B`" - "`C`" - "`D`" - "`E`" - "`F`" - "`G`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("energyEfficiencyClass")
    public String energyEfficiencyClass;

    public Product withEnergyEfficiencyClass(String energyEfficiencyClass) {
        this.energyEfficiencyClass = energyEfficiencyClass;
        return this;
    }
    
    /**
     * Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expirationDate")
    public String expirationDate;

    public Product withExpirationDate(String expirationDate) {
        this.expirationDate = expirationDate;
        return this;
    }
    
    /**
     * Target gender of the item. Acceptable values are: - "`female`" - "`male`" - "`unisex`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gender")
    public String gender;

    public Product withGender(String gender) {
        this.gender = gender;
        return this;
    }
    
    /**
     * Google's category of the item (see [Google product taxonomy](https://support.google.com/merchants/answer/1705911)). When querying products, this field will contain the user provided value. There is currently no way to get back the auto assigned google product categories through the API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("googleProductCategory")
    public String googleProductCategory;

    public Product withGoogleProductCategory(String googleProductCategory) {
        this.googleProductCategory = googleProductCategory;
        return this;
    }
    
    /**
     * Global Trade Item Number (GTIN) of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gtin")
    public String gtin;

    public Product withGtin(String gtin) {
        this.gtin = gtin;
        return this;
    }
    
    /**
     * The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Product withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identifierExists")
    public Boolean identifierExists;

    public Product withIdentifierExists(Boolean identifierExists) {
        this.identifierExists = identifierExists;
        return this;
    }
    
    /**
     * URL of an image of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageLink")
    public String imageLink;

    public Product withImageLink(String imageLink) {
        this.imageLink = imageLink;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("installment")
    public Installment installment;

    public Product withInstallment(Installment installment) {
        this.installment = installment;
        return this;
    }
    
    /**
     * Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isBundle")
    public Boolean isBundle;

    public Product withIsBundle(Boolean isBundle) {
        this.isBundle = isBundle;
        return this;
    }
    
    /**
     * Shared identifier for all variants of the same product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemGroupId")
    public String itemGroupId;

    public Product withItemGroupId(String itemGroupId) {
        this.itemGroupId = itemGroupId;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "`content#product`"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Product withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * URL directly linking to your item's page on your website.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link")
    public String link;

    public Product withLink(String link) {
        this.link = link;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loyaltyPoints")
    public LoyaltyPoints loyaltyPoints;

    public Product withLoyaltyPoints(LoyaltyPoints loyaltyPoints) {
        this.loyaltyPoints = loyaltyPoints;
        return this;
    }
    
    /**
     * The material of which the item is made.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("material")
    public String material;

    public Product withMaterial(String material) {
        this.material = material;
        return this;
    }
    
    /**
     * The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - "`A`" - "`A+`" - "`A++`" - "`A+++`" - "`B`" - "`C`" - "`D`" - "`E`" - "`F`" - "`G`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxEnergyEfficiencyClass")
    public String maxEnergyEfficiencyClass;

    public Product withMaxEnergyEfficiencyClass(String maxEnergyEfficiencyClass) {
        this.maxEnergyEfficiencyClass = maxEnergyEfficiencyClass;
        return this;
    }
    
    /**
     * Maximal product handling time (in business days).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxHandlingTime")
    public String maxHandlingTime;

    public Product withMaxHandlingTime(String maxHandlingTime) {
        this.maxHandlingTime = maxHandlingTime;
        return this;
    }
    
    /**
     * The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - "`A`" - "`A+`" - "`A++`" - "`A+++`" - "`B`" - "`C`" - "`D`" - "`E`" - "`F`" - "`G`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minEnergyEfficiencyClass")
    public String minEnergyEfficiencyClass;

    public Product withMinEnergyEfficiencyClass(String minEnergyEfficiencyClass) {
        this.minEnergyEfficiencyClass = minEnergyEfficiencyClass;
        return this;
    }
    
    /**
     * Minimal product handling time (in business days).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minHandlingTime")
    public String minHandlingTime;

    public Product withMinHandlingTime(String minHandlingTime) {
        this.minHandlingTime = minHandlingTime;
        return this;
    }
    
    /**
     * URL for the mobile-optimized version of your item's landing page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobileLink")
    public String mobileLink;

    public Product withMobileLink(String mobileLink) {
        this.mobileLink = mobileLink;
        return this;
    }
    
    /**
     * Manufacturer Part Number (MPN) of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mpn")
    public String mpn;

    public Product withMpn(String mpn) {
        this.mpn = mpn;
        return this;
    }
    
    /**
     * The number of identical products in a merchant-defined multipack.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("multipack")
    public String multipack;

    public Product withMultipack(String multipack) {
        this.multipack = multipack;
        return this;
    }
    
    /**
     * Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offerId")
    public String offerId;

    public Product withOfferId(String offerId) {
        this.offerId = offerId;
        return this;
    }
    
    /**
     * Deprecated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onlineOnly")
    public Boolean onlineOnly;

    public Product withOnlineOnly(Boolean onlineOnly) {
        this.onlineOnly = onlineOnly;
        return this;
    }
    
    /**
     * The item's pattern (e.g. polka dots).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pattern")
    public String pattern;

    public Product withPattern(String pattern) {
        this.pattern = pattern;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Price price;

    public Product withPrice(Price price) {
        this.price = price;
        return this;
    }
    
    /**
     * Your category of the item (formatted as in products data specification).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productType")
    public String productType;

    public Product withProductType(String productType) {
        this.productType = productType;
        return this;
    }
    
    /**
     * The unique ID of a promotion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("promotionIds")
    public String[] promotionIds;

    public Product withPromotionIds(String[] promotionIds) {
        this.promotionIds = promotionIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salePrice")
    public Price salePrice;

    public Product withSalePrice(Price salePrice) {
        this.salePrice = salePrice;
        return this;
    }
    
    /**
     * Date range during which the item is on sale (see products data specification ).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salePriceEffectiveDate")
    public String salePriceEffectiveDate;

    public Product withSalePriceEffectiveDate(String salePriceEffectiveDate) {
        this.salePriceEffectiveDate = salePriceEffectiveDate;
        return this;
    }
    
    /**
     * The quantity of the product that is available for selling on Google. Supported only for online products.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellOnGoogleQuantity")
    public String sellOnGoogleQuantity;

    public Product withSellOnGoogleQuantity(String sellOnGoogleQuantity) {
        this.sellOnGoogleQuantity = sellOnGoogleQuantity;
        return this;
    }
    
    /**
     * Shipping rules.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping")
    public ProductShipping[] shipping;

    public Product withShipping(ProductShipping[] shipping) {
        this.shipping = shipping;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingHeight")
    public ProductShippingDimension shippingHeight;

    public Product withShippingHeight(ProductShippingDimension shippingHeight) {
        this.shippingHeight = shippingHeight;
        return this;
    }
    
    /**
     * The shipping label of the product, used to group product in account-level shipping rules.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingLabel")
    public String shippingLabel;

    public Product withShippingLabel(String shippingLabel) {
        this.shippingLabel = shippingLabel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingLength")
    public ProductShippingDimension shippingLength;

    public Product withShippingLength(ProductShippingDimension shippingLength) {
        this.shippingLength = shippingLength;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingWeight")
    public ProductShippingWeight shippingWeight;

    public Product withShippingWeight(ProductShippingWeight shippingWeight) {
        this.shippingWeight = shippingWeight;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingWidth")
    public ProductShippingDimension shippingWidth;

    public Product withShippingWidth(ProductShippingDimension shippingWidth) {
        this.shippingWidth = shippingWidth;
        return this;
    }
    
    /**
     * System in which the size is specified. Recommended for apparel items. Acceptable values are: - "`AU`" - "`BR`" - "`CN`" - "`DE`" - "`EU`" - "`FR`" - "`IT`" - "`JP`" - "`MEX`" - "`UK`" - "`US`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizeSystem")
    public String sizeSystem;

    public Product withSizeSystem(String sizeSystem) {
        this.sizeSystem = sizeSystem;
        return this;
    }
    
    /**
     * The cut of the item. Recommended for apparel items. Acceptable values are: - "`big and tall`" - "`maternity`" - "`oversize`" - "`petite`" - "`plus`" - "`regular`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizeType")
    public String sizeType;

    public Product withSizeType(String sizeType) {
        this.sizeType = sizeType;
        return this;
    }
    
    /**
     * Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizes")
    public String[] sizes;

    public Product withSizes(String[] sizes) {
        this.sizes = sizes;
        return this;
    }
    
    /**
     * The source of the offer, i.e., how the offer was created. Acceptable values are: - "`api`" - "`crawl`" - "`feed`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;

    public Product withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * Required. The CLDR territory code for the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetCountry")
    public String targetCountry;

    public Product withTargetCountry(String targetCountry) {
        this.targetCountry = targetCountry;
        return this;
    }
    
    /**
     * Tax information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxes")
    public ProductTax[] taxes;

    public Product withTaxes(ProductTax[] taxes) {
        this.taxes = taxes;
        return this;
    }
    
    /**
     * Title of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public Product withTitle(String title) {
        this.title = title;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitPricingBaseMeasure")
    public ProductUnitPricingBaseMeasure unitPricingBaseMeasure;

    public Product withUnitPricingBaseMeasure(ProductUnitPricingBaseMeasure unitPricingBaseMeasure) {
        this.unitPricingBaseMeasure = unitPricingBaseMeasure;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitPricingMeasure")
    public ProductUnitPricingMeasure unitPricingMeasure;

    public Product withUnitPricingMeasure(ProductUnitPricingMeasure unitPricingMeasure) {
        this.unitPricingMeasure = unitPricingMeasure;
        return this;
    }
    
    /**
     * Deprecated. The read-only list of intended destinations which passed validation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validatedDestinations")
    public String[] validatedDestinations;

    public Product withValidatedDestinations(String[] validatedDestinations) {
        this.validatedDestinations = validatedDestinations;
        return this;
    }
    
    /**
     * Read-only warnings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warnings")
    public Error[] warnings;

    public Product withWarnings(Error[] warnings) {
        this.warnings = warnings;
        return this;
    }
    
    public Product(){}
}
