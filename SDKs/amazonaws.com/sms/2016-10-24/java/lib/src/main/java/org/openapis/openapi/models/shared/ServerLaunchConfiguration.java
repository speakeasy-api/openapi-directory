/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ServerLaunchConfiguration - Launch configuration for a server.
 */
public class ServerLaunchConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associatePublicIpAddress")
    public Boolean associatePublicIpAddress;
    public ServerLaunchConfiguration withAssociatePublicIpAddress(Boolean associatePublicIpAddress) {
        this.associatePublicIpAddress = associatePublicIpAddress;
        return this;
    }
    
    /**
     * Location of an Amazon S3 object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configureScript")
    public S3Location configureScript;
    public ServerLaunchConfiguration withConfigureScript(S3Location configureScript) {
        this.configureScript = configureScript;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configureScriptType")
    public ScriptTypeEnum configureScriptType;
    public ServerLaunchConfiguration withConfigureScriptType(ScriptTypeEnum configureScriptType) {
        this.configureScriptType = configureScriptType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ec2KeyName")
    public String ec2KeyName;
    public ServerLaunchConfiguration withEc2KeyName(String ec2KeyName) {
        this.ec2KeyName = ec2KeyName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iamInstanceProfileName")
    public String iamInstanceProfileName;
    public ServerLaunchConfiguration withIamInstanceProfileName(String iamInstanceProfileName) {
        this.iamInstanceProfileName = iamInstanceProfileName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceType")
    public String instanceType;
    public ServerLaunchConfiguration withInstanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logicalId")
    public String logicalId;
    public ServerLaunchConfiguration withLogicalId(String logicalId) {
        this.logicalId = logicalId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityGroup")
    public String securityGroup;
    public ServerLaunchConfiguration withSecurityGroup(String securityGroup) {
        this.securityGroup = securityGroup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("server")
    public Server server;
    public ServerLaunchConfiguration withServer(Server server) {
        this.server = server;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnet")
    public String subnet;
    public ServerLaunchConfiguration withSubnet(String subnet) {
        this.subnet = subnet;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userData")
    public UserData userData;
    public ServerLaunchConfiguration withUserData(UserData userData) {
        this.userData = userData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpc")
    public String vpc;
    public ServerLaunchConfiguration withVpc(String vpc) {
        this.vpc = vpc;
        return this;
    }
    
}
