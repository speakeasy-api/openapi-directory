/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ImageClassificationModelMetadata } from "./imageclassificationmodelmetadata";
import { ImageObjectDetectionModelMetadata } from "./imageobjectdetectionmodelmetadata";
import { TablesModelMetadata } from "./tablesmodelmetadata";
import { TextClassificationModelMetadata } from "./textclassificationmodelmetadata";
import { TextExtractionModelMetadata } from "./textextractionmodelmetadata";
import { TranslationModelMetadata } from "./translationmodelmetadata";
import { Expose, Type } from "class-transformer";

/**
 * Output only. Deployment state of the model. A model can only serve prediction requests after it gets deployed.
 */
export enum ModelDeploymentStateEnum {
  DeploymentStateUnspecified = "DEPLOYMENT_STATE_UNSPECIFIED",
  Deployed = "DEPLOYED",
  Undeployed = "UNDEPLOYED",
}

/**
 * API proto representing a trained machine learning model.
 */
export class Model extends SpeakeasyBase {
  /**
   * Output only. Timestamp when the model training finished and can be used for prediction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Required. The resource ID of the dataset used to create the model. The dataset must come from the same ancestor project and location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "datasetId" })
  datasetId?: string;

  /**
   * Output only. Deployment state of the model. A model can only serve prediction requests after it gets deployed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deploymentState" })
  deploymentState?: ModelDeploymentStateEnum;

  /**
   * Required. The name of the model to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9. It must start with a letter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Model metadata for image classification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageClassificationModelMetadata" })
  @Type(() => ImageClassificationModelMetadata)
  imageClassificationModelMetadata?: ImageClassificationModelMetadata;

  /**
   * Model metadata specific to image object detection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageObjectDetectionModelMetadata" })
  @Type(() => ImageObjectDetectionModelMetadata)
  imageObjectDetectionModelMetadata?: ImageObjectDetectionModelMetadata;

  /**
   * Output only. Resource name of the model. Format: `projects/{project_id}/locations/{location_id}/models/{model_id}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Model metadata specific to AutoML Tables.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tablesModelMetadata" })
  @Type(() => TablesModelMetadata)
  tablesModelMetadata?: TablesModelMetadata;

  /**
   * Model metadata that is specific to text classification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textClassificationModelMetadata" })
  @Type(() => TextClassificationModelMetadata)
  textClassificationModelMetadata?: TextClassificationModelMetadata;

  /**
   * Model metadata that is specific to text extraction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textExtractionModelMetadata" })
  @Type(() => TextExtractionModelMetadata)
  textExtractionModelMetadata?: TextExtractionModelMetadata;

  /**
   * Model metadata that is specific to text sentiment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textSentimentModelMetadata" })
  textSentimentModelMetadata?: Record<string, any>;

  /**
   * Output only. The number of examples in the training set used for the model creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trainExampleCount" })
  trainExampleCount?: number;

  /**
   * Model metadata that is specific to translation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "translationModelMetadata" })
  @Type(() => TranslationModelMetadata)
  translationModelMetadata?: TranslationModelMetadata;

  /**
   * Output only. Timestamp when this model was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * Output only. The number of examples in the validation set used for the model creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validateExampleCount" })
  validateExampleCount?: number;

  /**
   * Model metadata specific to video classification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videoClassificationModelMetadata" })
  videoClassificationModelMetadata?: Record<string, any>;

  /**
   * Model metadata specific to video object tracking.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videoObjectTrackingModelMetadata" })
  videoObjectTrackingModelMetadata?: Record<string, any>;
}

/**
 * API proto representing a trained machine learning model.
 */
export class ModelInput extends SpeakeasyBase {
  /**
   * Output only. Timestamp when the model training finished and can be used for prediction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Required. The resource ID of the dataset used to create the model. The dataset must come from the same ancestor project and location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "datasetId" })
  datasetId?: string;

  /**
   * Output only. Deployment state of the model. A model can only serve prediction requests after it gets deployed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deploymentState" })
  deploymentState?: ModelDeploymentStateEnum;

  /**
   * Required. The name of the model to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9. It must start with a letter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Model metadata for image classification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageClassificationModelMetadata" })
  @Type(() => ImageClassificationModelMetadata)
  imageClassificationModelMetadata?: ImageClassificationModelMetadata;

  /**
   * Model metadata specific to image object detection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageObjectDetectionModelMetadata" })
  @Type(() => ImageObjectDetectionModelMetadata)
  imageObjectDetectionModelMetadata?: ImageObjectDetectionModelMetadata;

  /**
   * Output only. Resource name of the model. Format: `projects/{project_id}/locations/{location_id}/models/{model_id}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Model metadata specific to AutoML Tables.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tablesModelMetadata" })
  @Type(() => TablesModelMetadata)
  tablesModelMetadata?: TablesModelMetadata;

  /**
   * Model metadata that is specific to text classification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textClassificationModelMetadata" })
  @Type(() => TextClassificationModelMetadata)
  textClassificationModelMetadata?: TextClassificationModelMetadata;

  /**
   * Model metadata that is specific to text extraction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textExtractionModelMetadata" })
  @Type(() => TextExtractionModelMetadata)
  textExtractionModelMetadata?: TextExtractionModelMetadata;

  /**
   * Model metadata that is specific to text sentiment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textSentimentModelMetadata" })
  textSentimentModelMetadata?: Record<string, any>;

  /**
   * Model metadata that is specific to translation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "translationModelMetadata" })
  @Type(() => TranslationModelMetadata)
  translationModelMetadata?: TranslationModelMetadata;

  /**
   * Output only. Timestamp when this model was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * Model metadata specific to video classification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videoClassificationModelMetadata" })
  videoClassificationModelMetadata?: Record<string, any>;

  /**
   * Model metadata specific to video object tracking.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videoObjectTrackingModelMetadata" })
  videoObjectTrackingModelMetadata?: Record<string, any>;
}
