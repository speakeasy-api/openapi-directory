/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetOrganizationInventoryDevicesQueryParams {
    /**
     * A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=endingBefore")
    public String endingBefore;
    public GetOrganizationInventoryDevicesQueryParams withEndingBefore(String endingBefore) {
        this.endingBefore = endingBefore;
        return this;
    }
    
    /**
     * Search for devices in inventory based on mac addresses.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=macs")
    public String[] macs;
    public GetOrganizationInventoryDevicesQueryParams withMacs(String[] macs) {
        this.macs = macs;
        return this;
    }
    
    /**
     * Search for devices in inventory based on model.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=models")
    public String[] models;
    public GetOrganizationInventoryDevicesQueryParams withModels(String[] models) {
        this.models = models;
        return this;
    }
    
    /**
     * Search for devices in inventory based on network ids.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=networkIds")
    public String[] networkIds;
    public GetOrganizationInventoryDevicesQueryParams withNetworkIds(String[] networkIds) {
        this.networkIds = networkIds;
        return this;
    }
    
    /**
     * Search for devices in inventory based on order numbers.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=orderNumbers")
    public String[] orderNumbers;
    public GetOrganizationInventoryDevicesQueryParams withOrderNumbers(String[] orderNumbers) {
        this.orderNumbers = orderNumbers;
        return this;
    }
    
    /**
     * The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=perPage")
    public Long perPage;
    public GetOrganizationInventoryDevicesQueryParams withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * Filter devices by product type. Accepted values are appliance, camera, cellularGateway, sensor, switch, systemsManager, and wireless.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=productTypes")
    public GetOrganizationInventoryDevicesProductTypesEnum[] productTypes;
    public GetOrganizationInventoryDevicesQueryParams withProductTypes(GetOrganizationInventoryDevicesProductTypesEnum[] productTypes) {
        this.productTypes = productTypes;
        return this;
    }
    
    /**
     * Search for devices in inventory based on serial number, mac address, or model.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=search")
    public String search;
    public GetOrganizationInventoryDevicesQueryParams withSearch(String search) {
        this.search = search;
        return this;
    }
    
    /**
     * Search for devices in inventory based on serials.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=serials")
    public String[] serials;
    public GetOrganizationInventoryDevicesQueryParams withSerials(String[] serials) {
        this.serials = serials;
        return this;
    }
    
    /**
     * A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=startingAfter")
    public String startingAfter;
    public GetOrganizationInventoryDevicesQueryParams withStartingAfter(String startingAfter) {
        this.startingAfter = startingAfter;
        return this;
    }
    
    /**
     * Filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=tags")
    public String[] tags;
    public GetOrganizationInventoryDevicesQueryParams withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * To use with 'tags' parameter, to filter devices which contain ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags', default is 'withAnyTags'.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=tagsFilterType")
    public GetOrganizationInventoryDevicesTagsFilterTypeEnum tagsFilterType;
    public GetOrganizationInventoryDevicesQueryParams withTagsFilterType(GetOrganizationInventoryDevicesTagsFilterTypeEnum tagsFilterType) {
        this.tagsFilterType = tagsFilterType;
        return this;
    }
    
    /**
     * Filter results by used or unused inventory. Accepted values are 'used' or 'unused'.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=usedState")
    public GetOrganizationInventoryDevicesUsedStateEnum usedState;
    public GetOrganizationInventoryDevicesQueryParams withUsedState(GetOrganizationInventoryDevicesUsedStateEnum usedState) {
        this.usedState = usedState;
        return this;
    }
    
}
