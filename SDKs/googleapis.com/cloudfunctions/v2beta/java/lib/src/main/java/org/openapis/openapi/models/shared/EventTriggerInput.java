/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EventTriggerInput - Describes EventTrigger, used to request events to be sent from another service.
 */
public class EventTriggerInput {
    /**
     * Optional. The name of the channel associated with the trigger in `projects/{project}/locations/{location}/channels/{channel}` format. You must provide a channel to receive events from Eventarc SaaS partners.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channel")
    public String channel;
    public EventTriggerInput withChannel(String channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * Criteria used to filter events.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventFilters")
    public EventFilter[] eventFilters;
    public EventTriggerInput withEventFilters(EventFilter[] eventFilters) {
        this.eventFilters = eventFilters;
        return this;
    }
    
    /**
     * Required. The type of event to observe. For example: `google.cloud.audit.log.v1.written` or `google.cloud.pubsub.topic.v1.messagePublished`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventType")
    public String eventType;
    public EventTriggerInput withEventType(String eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * Optional. The name of a Pub/Sub topic in the same project that will be used as the transport topic for the event delivery. Format: `projects/{project}/topics/{topic}`. This is only valid for events of type `google.cloud.pubsub.topic.v1.messagePublished`. The topic provided here will not be deleted at function deletion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pubsubTopic")
    public String pubsubTopic;
    public EventTriggerInput withPubsubTopic(String pubsubTopic) {
        this.pubsubTopic = pubsubTopic;
        return this;
    }
    
    /**
     * Optional. If unset, then defaults to ignoring failures (i.e. not retrying them).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retryPolicy")
    public EventTriggerRetryPolicyEnum retryPolicy;
    public EventTriggerInput withRetryPolicy(EventTriggerRetryPolicyEnum retryPolicy) {
        this.retryPolicy = retryPolicy;
        return this;
    }
    
    /**
     * Optional. The email of the trigger's service account. The service account must have permission to invoke Cloud Run services, the permission is `run.routes.invoke`. If empty, defaults to the Compute Engine default service account: `{project_number}-compute@developer.gserviceaccount.com`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccountEmail")
    public String serviceAccountEmail;
    public EventTriggerInput withServiceAccountEmail(String serviceAccountEmail) {
        this.serviceAccountEmail = serviceAccountEmail;
        return this;
    }
    
    /**
     * The region that the trigger will be in. The trigger will only receive events originating in this region. It can be the same region as the function, a different region or multi-region, or the global region. If not provided, defaults to the same region as the function.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerRegion")
    public String triggerRegion;
    public EventTriggerInput withTriggerRegion(String triggerRegion) {
        this.triggerRegion = triggerRegion;
        return this;
    }
    
}
