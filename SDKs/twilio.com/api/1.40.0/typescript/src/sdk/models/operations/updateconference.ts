/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateConferenceServerList = ["https://api.twilio.com"] as const;

export class UpdateConferenceSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * The HTTP method used to call `announce_url`. Can be: `GET` or `POST` and the default is `POST`
 */
export enum UpdateConferenceUpdateConferenceRequestAnnounceMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

export class UpdateConferenceUpdateConferenceRequest extends SpeakeasyBase {
  /**
   * The HTTP method used to call `announce_url`. Can be: `GET` or `POST` and the default is `POST`
   */
  @SpeakeasyMetadata({ data: "form, name=AnnounceMethod" })
  announceMethod?: UpdateConferenceUpdateConferenceRequestAnnounceMethodEnum;

  /**
   * The URL we should call to announce something into the conference. The URL may return an MP3 file, a WAV file, or a TwiML document that contains `<Play>`, `<Say>`, `<Pause>`, or `<Redirect>` verbs.
   */
  @SpeakeasyMetadata({ data: "form, name=AnnounceUrl" })
  announceUrl?: string;

  @SpeakeasyMetadata({ data: "form, name=Status" })
  status?: shared.ConferenceEnumUpdateStatusEnum;
}

export class UpdateConferenceRequest extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=AccountSid",
  })
  accountSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateConferenceUpdateConferenceRequest;

  /**
   * The Twilio-provided string that uniquely identifies the Conference resource to update
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class UpdateConferenceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  apiV2010AccountConference?: shared.ApiV2010AccountConference;
}
