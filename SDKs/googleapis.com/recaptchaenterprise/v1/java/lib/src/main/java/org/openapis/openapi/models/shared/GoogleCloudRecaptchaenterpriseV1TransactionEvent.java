/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRecaptchaenterpriseV1TransactionEvent - Describes an event in the lifecycle of a payment transaction.
 */
public class GoogleCloudRecaptchaenterpriseV1TransactionEvent {
    /**
     * Optional. Timestamp when this transaction event occurred; otherwise assumed to be the time of the API call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTime")
    public String eventTime;
    public GoogleCloudRecaptchaenterpriseV1TransactionEvent withEventTime(String eventTime) {
        this.eventTime = eventTime;
        return this;
    }
    
    /**
     * Optional. The type of this transaction event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventType")
    public GoogleCloudRecaptchaenterpriseV1TransactionEventEventTypeEnum eventType;
    public GoogleCloudRecaptchaenterpriseV1TransactionEvent withEventType(GoogleCloudRecaptchaenterpriseV1TransactionEventEventTypeEnum eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * Optional. The reason or standardized code that corresponds with this transaction event, if one exists. For example, a CHARGEBACK event with code 6005.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;
    public GoogleCloudRecaptchaenterpriseV1TransactionEvent withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * Optional. The value that corresponds with this transaction event, if one exists. For example, a refund event where $5.00 was refunded. Currency is obtained from the original transaction data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public Double value;
    public GoogleCloudRecaptchaenterpriseV1TransactionEvent withValue(Double value) {
        this.value = value;
        return this;
    }
    
}
