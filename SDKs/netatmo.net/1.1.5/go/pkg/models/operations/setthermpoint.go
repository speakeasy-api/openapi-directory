// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SetthermpointSecurity struct {
	CodeOauth     *string `security:"scheme,type=oauth2,name=Authorization"`
	PasswordOauth *string `security:"scheme,type=oauth2,name=Authorization"`
}

// SetthermpointSetpointModeEnum - Chosen setpoint_mode
type SetthermpointSetpointModeEnum string

const (
	SetthermpointSetpointModeEnumProgram SetthermpointSetpointModeEnum = "program"
	SetthermpointSetpointModeEnumAway    SetthermpointSetpointModeEnum = "away"
	SetthermpointSetpointModeEnumHg      SetthermpointSetpointModeEnum = "hg"
	SetthermpointSetpointModeEnumManual  SetthermpointSetpointModeEnum = "manual"
	SetthermpointSetpointModeEnumOff     SetthermpointSetpointModeEnum = "off"
	SetthermpointSetpointModeEnumMax     SetthermpointSetpointModeEnum = "max"
)

func (e *SetthermpointSetpointModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "program":
		fallthrough
	case "away":
		fallthrough
	case "hg":
		fallthrough
	case "manual":
		fallthrough
	case "off":
		fallthrough
	case "max":
		*e = SetthermpointSetpointModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SetthermpointSetpointModeEnum: %s", s)
	}
}

type SetthermpointRequest struct {
	// The relay id
	DeviceID string `queryParam:"style=form,explode=true,name=device_id"`
	// The thermostat id
	ModuleID string `queryParam:"style=form,explode=true,name=module_id"`
	// When using the manual or max setpoint_mode, this parameter defines when the setpoint expires.
	SetpointEndtime *int `queryParam:"style=form,explode=true,name=setpoint_endtime"`
	// Chosen setpoint_mode
	SetpointMode SetthermpointSetpointModeEnum `queryParam:"style=form,explode=true,name=setpoint_mode"`
	// When using the manual setpoint_mode, this parameter defines the temperature setpoint (in Celcius) to use.
	SetpointTemp *float32 `queryParam:"style=form,explode=true,name=setpoint_temp"`
}

type SetthermpointResponse struct {
	ContentType string
	// Successful response
	NAOkResponse *shared.NAOkResponse
	StatusCode   int
	RawResponse  *http.Response
}
