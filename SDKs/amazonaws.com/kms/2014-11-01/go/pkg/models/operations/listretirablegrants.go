// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListRetirableGrantsQueryParams struct {
	// Pagination limit
	Limit *string `queryParam:"style=form,explode=true,name=Limit"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
}

// ListRetirableGrantsXAmzTargetEnum
type ListRetirableGrantsXAmzTargetEnum string

const (
	ListRetirableGrantsXAmzTargetEnumTrentServiceListRetirableGrants ListRetirableGrantsXAmzTargetEnum = "TrentService.ListRetirableGrants"
)

func (e *ListRetirableGrantsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TrentService.ListRetirableGrants":
		*e = ListRetirableGrantsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRetirableGrantsXAmzTargetEnum: %s", s)
	}
}

type ListRetirableGrantsHeaders struct {
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListRetirableGrantsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListRetirableGrantsRequest struct {
	QueryParams ListRetirableGrantsQueryParams
	Headers     ListRetirableGrantsHeaders
	Request     shared.ListRetirableGrantsRequest `request:"mediaType=application/json"`
}

type ListRetirableGrantsResponse struct {
	ContentType string
	// DependencyTimeoutException
	DependencyTimeoutException interface{}
	// InvalidArnException
	InvalidArnException interface{}
	// InvalidMarkerException
	InvalidMarkerException interface{}
	// KMSInternalException
	KMSInternalException interface{}
	// Success
	ListGrantsResponse *shared.ListGrantsResponse
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
}
