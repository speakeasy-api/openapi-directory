/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * FaxV1Fax - OK
 */
public class FaxV1Fax {
    /**
     * The SID of the Account that created the resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public FaxV1Fax withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The API version used to transmit the fax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api_version")
    public String apiVersion;

    public FaxV1Fax withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }
    
    /**
     * The ISO 8601 formatted date and time in GMT when the resource was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public FaxV1Fax withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The ISO 8601 formatted date and time in GMT when the resource was last updated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;

    public FaxV1Fax withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The direction of the fax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public FaxV1FaxDirectionEnum direction;

    public FaxV1Fax withDirection(FaxV1FaxDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * The time it took to transmit the fax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;

    public FaxV1Fax withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * The number the fax was sent from
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public String from;

    public FaxV1Fax withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * The URLs of the fax's related resources
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;

    public FaxV1Fax withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * The SID of the FaxMedia resource that is associated with the Fax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media_sid")
    public String mediaSid;

    public FaxV1Fax withMediaSid(String mediaSid) {
        this.mediaSid = mediaSid;
        return this;
    }
    
    /**
     * The Twilio-hosted URL that can be used to download fax media
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media_url")
    public String mediaUrl;

    public FaxV1Fax withMediaUrl(String mediaUrl) {
        this.mediaUrl = mediaUrl;
        return this;
    }
    
    /**
     * The number of pages contained in the fax document
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("num_pages")
    public Long numPages;

    public FaxV1Fax withNumPages(Long numPages) {
        this.numPages = numPages;
        return this;
    }
    
    /**
     * The fax transmission price
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Double price;

    public FaxV1Fax withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * The ISO 4217 currency used for billing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price_unit")
    public String priceUnit;

    public FaxV1Fax withPriceUnit(String priceUnit) {
        this.priceUnit = priceUnit;
        return this;
    }
    
    /**
     * The quality of the fax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quality")
    public FaxV1FaxQualityEnum quality;

    public FaxV1Fax withQuality(FaxV1FaxQualityEnum quality) {
        this.quality = quality;
        return this;
    }
    
    /**
     * The unique string that identifies the resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;

    public FaxV1Fax withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * The status of the fax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public FaxV1FaxStatusEnum status;

    public FaxV1Fax withStatus(FaxV1FaxStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The phone number that received the fax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public String to;

    public FaxV1Fax withTo(String to) {
        this.to = to;
        return this;
    }
    
    /**
     * The absolute URL of the fax resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public FaxV1Fax withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public FaxV1Fax(){}
}
