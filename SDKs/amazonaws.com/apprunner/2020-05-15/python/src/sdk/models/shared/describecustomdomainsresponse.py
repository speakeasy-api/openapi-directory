"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import customdomain as shared_customdomain
from ..shared import vpcdnstarget as shared_vpcdnstarget
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeCustomDomainsResponse:
    r"""Success"""
    
    custom_domains: list[shared_customdomain.CustomDomain] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomDomains') }})  
    dns_target: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DNSTarget') }})  
    service_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceArn') }})  
    vpc_dns_targets: list[shared_vpcdnstarget.VpcDNSTarget] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcDNSTargets') }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})  
    