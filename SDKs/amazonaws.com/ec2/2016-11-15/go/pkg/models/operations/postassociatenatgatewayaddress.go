// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTAssociateNatGatewayAddressActionEnum
type POSTAssociateNatGatewayAddressActionEnum string

const (
	POSTAssociateNatGatewayAddressActionEnumAssociateNatGatewayAddress POSTAssociateNatGatewayAddressActionEnum = "AssociateNatGatewayAddress"
)

func (e POSTAssociateNatGatewayAddressActionEnum) ToPointer() *POSTAssociateNatGatewayAddressActionEnum {
	return &e
}

func (e *POSTAssociateNatGatewayAddressActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AssociateNatGatewayAddress":
		*e = POSTAssociateNatGatewayAddressActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAssociateNatGatewayAddressActionEnum: %v", v)
	}
}

// POSTAssociateNatGatewayAddressVersionEnum
type POSTAssociateNatGatewayAddressVersionEnum string

const (
	POSTAssociateNatGatewayAddressVersionEnumTwoThousandAndSixteen1115 POSTAssociateNatGatewayAddressVersionEnum = "2016-11-15"
)

func (e POSTAssociateNatGatewayAddressVersionEnum) ToPointer() *POSTAssociateNatGatewayAddressVersionEnum {
	return &e
}

func (e *POSTAssociateNatGatewayAddressVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTAssociateNatGatewayAddressVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAssociateNatGatewayAddressVersionEnum: %v", v)
	}
}

type POSTAssociateNatGatewayAddressRequest struct {
	Action            POSTAssociateNatGatewayAddressActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                    `request:"mediaType=text/xml"`
	Version           POSTAssociateNatGatewayAddressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTAssociateNatGatewayAddressResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
