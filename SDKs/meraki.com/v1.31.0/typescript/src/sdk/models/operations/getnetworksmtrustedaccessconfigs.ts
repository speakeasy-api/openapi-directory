/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class GetNetworkSmTrustedAccessConfigsRequest extends SpeakeasyBase {
  /**
   * A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=endingBefore",
  })
  endingBefore?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;

  /**
   * The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=perPage",
  })
  perPage?: number;

  /**
   * A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startingAfter",
  })
  startingAfter?: string;
}

/**
 * type of access period, either a static range or a dynamic period
 */
export enum GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

export class GetNetworkSmTrustedAccessConfigs200ApplicationJSON extends SpeakeasyBase {
  /**
   * time that access ends
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessEndAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  accessEndAt?: Date;

  /**
   * time that access starts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessStartAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  accessStartAt?: Date;

  /**
   * device ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * device name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * scope
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * SSID name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ssidName" })
  ssidName?: string;

  /**
   * device tags
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  /**
   * type of access period, either a static range or a dynamic period
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeboundType" })
  timeboundType?: GetNetworkSmTrustedAccessConfigs200ApplicationJSONTimeboundTypeEnum;
}

export class GetNetworkSmTrustedAccessConfigsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({
    elemType: GetNetworkSmTrustedAccessConfigs200ApplicationJSON,
  })
  getNetworkSmTrustedAccessConfigs200ApplicationJSONObjects?: GetNetworkSmTrustedAccessConfigs200ApplicationJSON[];
}
