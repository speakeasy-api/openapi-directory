// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetSpacesSpaceIDExtendRequest struct {
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum string

const (
	GetSpacesSpaceIDExtend200ApplicationJSONTypeEnumPrivate     GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum = "private"
	GetSpacesSpaceIDExtend200ApplicationJSONTypeEnumEnterprise  GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum = "enterprise"
	GetSpacesSpaceIDExtend200ApplicationJSONTypeEnumCompany     GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum = "company"
	GetSpacesSpaceIDExtend200ApplicationJSONTypeEnumAssociation GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum = "association"
)

func (e GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum) ToPointer() *GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum {
	return &e
}

func (e *GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private":
		fallthrough
	case "enterprise":
		fallthrough
	case "company":
		fallthrough
	case "association":
		*e = GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum: %v", v)
	}
}

// GetSpacesSpaceIDExtend200ApplicationJSON - A space
type GetSpacesSpaceIDExtend200ApplicationJSON struct {
	Extend           map[string]interface{}                            `json:"Extend,omitempty"`
	ID               *string                                           `json:"Id,omitempty"`
	ModificationDate *string                                           `json:"ModificationDate,omitempty"`
	Name             *string                                           `json:"Name,omitempty"`
	Type             *GetSpacesSpaceIDExtend200ApplicationJSONTypeEnum `json:"Type,omitempty"`
}

type GetSpacesSpaceIDExtendResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A space
	GetSpacesSpaceIDExtend200ApplicationJSONObject *GetSpacesSpaceIDExtend200ApplicationJSON
}
