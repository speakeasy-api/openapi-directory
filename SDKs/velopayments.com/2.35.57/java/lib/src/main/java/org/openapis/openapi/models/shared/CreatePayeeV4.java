/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreatePayeeV4 {
    @JsonProperty("address")
    public CreatePayeeAddressV4 address;

    public CreatePayeeV4 withAddress(CreatePayeeAddressV4 address) {
        this.address = address;
        return this;
    }
    
    /**
     * &lt;p&gt;Used to override the default challenge presented to the payee when they onboard&lt;/p&gt;
     * &lt;p&gt;Not used after the payee has onboarded&lt;/p&gt;
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("challenge")
    public ChallengeV4 challenge;

    public CreatePayeeV4 withChallenge(ChallengeV4 challenge) {
        this.challenge = challenge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company")
    public CompanyV4 company;

    public CreatePayeeV4 withCompany(CompanyV4 company) {
        this.company = company;
        return this;
    }
    
    @JsonProperty("email")
    public String email;

    public CreatePayeeV4 withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individual")
    public CreateIndividualV4 individual;

    public CreatePayeeV4 withIndividual(CreateIndividualV4 individual) {
        this.individual = individual;
        return this;
    }
    
    /**
     * An IETF BCP 47 language code which has been configured for use within this Velo environment.&lt;BR&gt;
     * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;

    public CreatePayeeV4 withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentChannel")
    public CreatePaymentChannelV4 paymentChannel;

    public CreatePayeeV4 withPaymentChannel(CreatePaymentChannelV4 paymentChannel) {
        this.paymentChannel = paymentChannel;
        return this;
    }
    
    @JsonProperty("remoteId")
    public String remoteId;

    public CreatePayeeV4 withRemoteId(String remoteId) {
        this.remoteId = remoteId;
        return this;
    }
    
    /**
     * The type of the payee
     */
    @JsonProperty("type")
    public PayeeTypeEnumEnum type;

    public CreatePayeeV4 withType(PayeeTypeEnumEnum type) {
        this.type = type;
        return this;
    }
    
    public CreatePayeeV4(@JsonProperty("address") CreatePayeeAddressV4 address, @JsonProperty("email") String email, @JsonProperty("remoteId") String remoteId, @JsonProperty("type") PayeeTypeEnumEnum type) {
        this.address = address;
        this.email = email;
        this.remoteId = remoteId;
        this.type = type;
  }
}
