// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateElasticIPXAmzTargetEnum
type UpdateElasticIPXAmzTargetEnum string

const (
	UpdateElasticIPXAmzTargetEnumOpsWorks20130218UpdateElasticIP UpdateElasticIPXAmzTargetEnum = "OpsWorks_20130218.UpdateElasticIp"
)

func (e *UpdateElasticIPXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OpsWorks_20130218.UpdateElasticIp":
		*e = UpdateElasticIPXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateElasticIPXAmzTargetEnum: %s", s)
	}
}

type UpdateElasticIPRequest struct {
	UpdateElasticIPRequest shared.UpdateElasticIPRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             UpdateElasticIPXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateElasticIPResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ValidationException
	ValidationException interface{}
}
