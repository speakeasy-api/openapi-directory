// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConnectivityFreeWifiExceptionEnum - Free wifi exception.
type ConnectivityFreeWifiExceptionEnum string

const (
	ConnectivityFreeWifiExceptionEnumExceptionUnspecified ConnectivityFreeWifiExceptionEnum = "EXCEPTION_UNSPECIFIED"
	ConnectivityFreeWifiExceptionEnumUnderConstruction    ConnectivityFreeWifiExceptionEnum = "UNDER_CONSTRUCTION"
	ConnectivityFreeWifiExceptionEnumDependentOnSeason    ConnectivityFreeWifiExceptionEnum = "DEPENDENT_ON_SEASON"
	ConnectivityFreeWifiExceptionEnumDependentOnDayOfWeek ConnectivityFreeWifiExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e ConnectivityFreeWifiExceptionEnum) ToPointer() *ConnectivityFreeWifiExceptionEnum {
	return &e
}

func (e *ConnectivityFreeWifiExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = ConnectivityFreeWifiExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectivityFreeWifiExceptionEnum: %v", v)
	}
}

// ConnectivityPublicAreaWifiAvailableExceptionEnum - Public area wifi available exception.
type ConnectivityPublicAreaWifiAvailableExceptionEnum string

const (
	ConnectivityPublicAreaWifiAvailableExceptionEnumExceptionUnspecified ConnectivityPublicAreaWifiAvailableExceptionEnum = "EXCEPTION_UNSPECIFIED"
	ConnectivityPublicAreaWifiAvailableExceptionEnumUnderConstruction    ConnectivityPublicAreaWifiAvailableExceptionEnum = "UNDER_CONSTRUCTION"
	ConnectivityPublicAreaWifiAvailableExceptionEnumDependentOnSeason    ConnectivityPublicAreaWifiAvailableExceptionEnum = "DEPENDENT_ON_SEASON"
	ConnectivityPublicAreaWifiAvailableExceptionEnumDependentOnDayOfWeek ConnectivityPublicAreaWifiAvailableExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e ConnectivityPublicAreaWifiAvailableExceptionEnum) ToPointer() *ConnectivityPublicAreaWifiAvailableExceptionEnum {
	return &e
}

func (e *ConnectivityPublicAreaWifiAvailableExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = ConnectivityPublicAreaWifiAvailableExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectivityPublicAreaWifiAvailableExceptionEnum: %v", v)
	}
}

// ConnectivityPublicInternetTerminalExceptionEnum - Public internet terminal exception.
type ConnectivityPublicInternetTerminalExceptionEnum string

const (
	ConnectivityPublicInternetTerminalExceptionEnumExceptionUnspecified ConnectivityPublicInternetTerminalExceptionEnum = "EXCEPTION_UNSPECIFIED"
	ConnectivityPublicInternetTerminalExceptionEnumUnderConstruction    ConnectivityPublicInternetTerminalExceptionEnum = "UNDER_CONSTRUCTION"
	ConnectivityPublicInternetTerminalExceptionEnumDependentOnSeason    ConnectivityPublicInternetTerminalExceptionEnum = "DEPENDENT_ON_SEASON"
	ConnectivityPublicInternetTerminalExceptionEnumDependentOnDayOfWeek ConnectivityPublicInternetTerminalExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e ConnectivityPublicInternetTerminalExceptionEnum) ToPointer() *ConnectivityPublicInternetTerminalExceptionEnum {
	return &e
}

func (e *ConnectivityPublicInternetTerminalExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = ConnectivityPublicInternetTerminalExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectivityPublicInternetTerminalExceptionEnum: %v", v)
	}
}

// ConnectivityWifiAvailableExceptionEnum - Wifi available exception.
type ConnectivityWifiAvailableExceptionEnum string

const (
	ConnectivityWifiAvailableExceptionEnumExceptionUnspecified ConnectivityWifiAvailableExceptionEnum = "EXCEPTION_UNSPECIFIED"
	ConnectivityWifiAvailableExceptionEnumUnderConstruction    ConnectivityWifiAvailableExceptionEnum = "UNDER_CONSTRUCTION"
	ConnectivityWifiAvailableExceptionEnumDependentOnSeason    ConnectivityWifiAvailableExceptionEnum = "DEPENDENT_ON_SEASON"
	ConnectivityWifiAvailableExceptionEnumDependentOnDayOfWeek ConnectivityWifiAvailableExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e ConnectivityWifiAvailableExceptionEnum) ToPointer() *ConnectivityWifiAvailableExceptionEnum {
	return &e
}

func (e *ConnectivityWifiAvailableExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = ConnectivityWifiAvailableExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectivityWifiAvailableExceptionEnum: %v", v)
	}
}

// Connectivity - The ways in which the property provides guests with the ability to access the internet.
type Connectivity struct {
	// Free wifi. The hotel offers guests wifi for free.
	FreeWifi *bool `json:"freeWifi,omitempty"`
	// Free wifi exception.
	FreeWifiException *ConnectivityFreeWifiExceptionEnum `json:"freeWifiException,omitempty"`
	// Public area wifi available. Guests have the ability to wirelessly connect to the internet in the areas of the hotel accessible to anyone. Can be free or for a fee.
	PublicAreaWifiAvailable *bool `json:"publicAreaWifiAvailable,omitempty"`
	// Public area wifi available exception.
	PublicAreaWifiAvailableException *ConnectivityPublicAreaWifiAvailableExceptionEnum `json:"publicAreaWifiAvailableException,omitempty"`
	// Public internet terminal. An area of the hotel supplied with computers and designated for the purpose of providing guests with the ability to access the internet.
	PublicInternetTerminal *bool `json:"publicInternetTerminal,omitempty"`
	// Public internet terminal exception.
	PublicInternetTerminalException *ConnectivityPublicInternetTerminalExceptionEnum `json:"publicInternetTerminalException,omitempty"`
	// Wifi available. The hotel provides the ability for guests to wirelessly connect to the internet. Can be in the public areas of the hotel and/or in the guest rooms. Can be free or for a fee.
	WifiAvailable *bool `json:"wifiAvailable,omitempty"`
	// Wifi available exception.
	WifiAvailableException *ConnectivityWifiAvailableExceptionEnum `json:"wifiAvailableException,omitempty"`
}
