// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ModelStatusEnum string

const (
	ModelStatusEnumSubmitted          ModelStatusEnum = "SUBMITTED"
	ModelStatusEnumTraining           ModelStatusEnum = "TRAINING"
	ModelStatusEnumDeleting           ModelStatusEnum = "DELETING"
	ModelStatusEnumStopRequested      ModelStatusEnum = "STOP_REQUESTED"
	ModelStatusEnumStopped            ModelStatusEnum = "STOPPED"
	ModelStatusEnumInError            ModelStatusEnum = "IN_ERROR"
	ModelStatusEnumTrained            ModelStatusEnum = "TRAINED"
	ModelStatusEnumTrainedWithWarning ModelStatusEnum = "TRAINED_WITH_WARNING"
)

func (e ModelStatusEnum) ToPointer() *ModelStatusEnum {
	return &e
}

func (e *ModelStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUBMITTED":
		fallthrough
	case "TRAINING":
		fallthrough
	case "DELETING":
		fallthrough
	case "STOP_REQUESTED":
		fallthrough
	case "STOPPED":
		fallthrough
	case "IN_ERROR":
		fallthrough
	case "TRAINED":
		fallthrough
	case "TRAINED_WITH_WARNING":
		*e = ModelStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModelStatusEnum: %v", v)
	}
}
