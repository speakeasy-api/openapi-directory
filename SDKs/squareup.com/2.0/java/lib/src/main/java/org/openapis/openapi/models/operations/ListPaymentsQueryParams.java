/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListPaymentsQueryParams {
    /**
     * A pagination cursor to retrieve the next set of results for your
     * original query to the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=batch_token")
    public String batchToken;
    public ListPaymentsQueryParams withBatchToken(String batchToken) {
        this.batchToken = batchToken;
        return this;
    }
    
    /**
     * The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=begin_time")
    public String beginTime;
    public ListPaymentsQueryParams withBeginTime(String beginTime) {
        this.beginTime = beginTime;
        return this;
    }
    
    /**
     * The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end_time")
    public String endTime;
    public ListPaymentsQueryParams withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include_partial")
    public Boolean includePartial;
    public ListPaymentsQueryParams withIncludePartial(Boolean includePartial) {
        this.includePartial = includePartial;
        return this;
    }
    
    /**
     * The maximum number of payments to return in a single response. This value cannot exceed 200.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public ListPaymentsQueryParams withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The order in which payments are listed in the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=order")
    public String order;
    public ListPaymentsQueryParams withOrder(String order) {
        this.order = order;
        return this;
    }
    
}
