<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class FindingBulkUpdateInput
{
    /**
     * Assigned user
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Assignee $assignee
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignee')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Assignee')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Assignee $assignee = null;
    
    /**
     * User comment left on the finding.
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
    /**
     * Array of finding ids
     * 
     * @var array<string> $ids
     */
	#[\JMS\Serializer\Annotation\SerializedName('ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $ids;
    
    /**
     * User labels for the finding.
     * 
     * @var ?array<string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Severity, how serious the issue is considered:
     * 
     *   * 10 - low
     *   * 20 - medium
     *   * 30 - high
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FindingSeverityEnum $severity
     */
	#[\JMS\Serializer\Annotation\SerializedName('severity')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FindingSeverityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FindingSeverityEnum $severity = null;
    
    /**
     * Finding state:
     * 
     *   * notfixed - Issue can still be exploited
     *   * invalid - Issue determined to be a false positive
     *   * accepted - Issue will not be solved and the risk was accepted
     *   * fixed - No problem here anymore
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FindingStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FindingStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FindingStateEnum $state = null;
    
	public function __construct()
	{
		$this->assignee = null;
		$this->comment = null;
		$this->ids = [];
		$this->labels = null;
		$this->severity = null;
		$this->state = null;
	}
}
