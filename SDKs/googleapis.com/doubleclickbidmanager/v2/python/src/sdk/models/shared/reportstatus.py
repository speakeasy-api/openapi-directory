"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ReportStatusFormatEnum(str, Enum):
    r"""The file type of the report."""
    FORMAT_UNSPECIFIED = 'FORMAT_UNSPECIFIED'
    CSV = 'CSV'
    XLSX = 'XLSX'

class ReportStatusStateEnum(str, Enum):
    r"""Output only. The state of the report."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    QUEUED = 'QUEUED'
    RUNNING = 'RUNNING'
    DONE = 'DONE'
    FAILED = 'FAILED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReportStatus:
    r"""Report status."""
    
    finish_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finishTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time when this report either completed successfully or failed."""  
    format: Optional[ReportStatusFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""The file type of the report."""  
    state: Optional[ReportStatusStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. The state of the report."""  
    