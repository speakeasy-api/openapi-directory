/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TimePeriod - Represents a span of time that the business is open, starting on the specified open day/time and closing on the specified close day/time. The closing time must occur after the opening time, for example later in the same day, or on a subsequent day.
 */
public class TimePeriod {
    /**
     * Required. Indicates the day of the week this period ends on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("closeDay")
    public TimePeriodCloseDayEnum closeDay;
    public TimePeriod withCloseDay(TimePeriodCloseDayEnum closeDay) {
        this.closeDay = closeDay;
        return this;
    }
    
    /**
     * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("closeTime")
    public TimeOfDay closeTime;
    public TimePeriod withCloseTime(TimeOfDay closeTime) {
        this.closeTime = closeTime;
        return this;
    }
    
    /**
     * Required. Indicates the day of the week this period starts on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("openDay")
    public TimePeriodOpenDayEnum openDay;
    public TimePeriod withOpenDay(TimePeriodOpenDayEnum openDay) {
        this.openDay = openDay;
        return this;
    }
    
    /**
     * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("openTime")
    public TimeOfDay openTime;
    public TimePeriod withOpenTime(TimeOfDay openTime) {
        this.openTime = openTime;
        return this;
    }
    
}
