/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AttributeMetadata - Metadata for an attribute. Contains display information for the attribute, including a localized name and a heading for grouping related attributes together.
 */
public class AttributeMetadata {
    /**
     * The ID of the attribute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributeId")
    public String attributeId;
    public AttributeMetadata withAttributeId(String attributeId) {
        this.attributeId = attributeId;
        return this;
    }
    
    /**
     * The localized display name for the attribute, if available; otherwise, the English display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public AttributeMetadata withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The localized display name of the group that contains this attribute, if available; otherwise, the English group name. Related attributes are collected into a group and should be displayed together under the heading given here.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groupDisplayName")
    public String groupDisplayName;
    public AttributeMetadata withGroupDisplayName(String groupDisplayName) {
        this.groupDisplayName = groupDisplayName;
        return this;
    }
    
    /**
     * If true, the attribute is deprecated and should no longer be used. If deprecated, updating this attribute will not result in an error, but updates will not be saved. At some point after being deprecated, the attribute will be removed entirely and it will become an error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDeprecated")
    public Boolean isDeprecated;
    public AttributeMetadata withIsDeprecated(Boolean isDeprecated) {
        this.isDeprecated = isDeprecated;
        return this;
    }
    
    /**
     * If true, the attribute supports multiple values. If false, only a single value should be provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isRepeatable")
    public Boolean isRepeatable;
    public AttributeMetadata withIsRepeatable(Boolean isRepeatable) {
        this.isRepeatable = isRepeatable;
        return this;
    }
    
    /**
     * For some types of attributes (for example, enums), a list of supported values and corresponding display names for those values is provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("valueMetadata")
    public AttributeValueMetadata[] valueMetadata;
    public AttributeMetadata withValueMetadata(AttributeValueMetadata[] valueMetadata) {
        this.valueMetadata = valueMetadata;
        return this;
    }
    
    /**
     * The value type for the attribute. Values set and retrieved should be expected to be of this type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("valueType")
    public AttributeMetadataValueTypeEnum valueType;
    public AttributeMetadata withValueType(AttributeMetadataValueTypeEnum valueType) {
        this.valueType = valueType;
        return this;
    }
    
}
