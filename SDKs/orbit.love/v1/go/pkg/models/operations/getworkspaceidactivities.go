// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetWorkspaceIDActivitiesSecurity struct {
	Bearer shared.SchemeBearer `security:"scheme,type=apiKey,subtype=header"`
}

type GetWorkspaceIDActivitiesPathParams struct {
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspace_id"`
}

// GetWorkspaceIDActivitiesActivityTypeEnum
type GetWorkspaceIDActivitiesActivityTypeEnum string

const (
	GetWorkspaceIDActivitiesActivityTypeEnumDiscordMessageSent    GetWorkspaceIDActivitiesActivityTypeEnum = "discord:message:sent"
	GetWorkspaceIDActivitiesActivityTypeEnumSlackThreadReplied    GetWorkspaceIDActivitiesActivityTypeEnum = "slack:thread:replied"
	GetWorkspaceIDActivitiesActivityTypeEnumDiscordMessageReplied GetWorkspaceIDActivitiesActivityTypeEnum = "discord:message:replied"
	GetWorkspaceIDActivitiesActivityTypeEnumTweetSent             GetWorkspaceIDActivitiesActivityTypeEnum = "tweet:sent"
	GetWorkspaceIDActivitiesActivityTypeEnumTwitterFollowed       GetWorkspaceIDActivitiesActivityTypeEnum = "twitter:followed"
	GetWorkspaceIDActivitiesActivityTypeEnumDiscordServerJoined   GetWorkspaceIDActivitiesActivityTypeEnum = "discord:server:joined"
	GetWorkspaceIDActivitiesActivityTypeEnumDiscourseTopicCreated GetWorkspaceIDActivitiesActivityTypeEnum = "discourse:topic:created"
	GetWorkspaceIDActivitiesActivityTypeEnumDiscoursePostCreated  GetWorkspaceIDActivitiesActivityTypeEnum = "discourse:post:created"
	GetWorkspaceIDActivitiesActivityTypeEnumSlackMessageSent      GetWorkspaceIDActivitiesActivityTypeEnum = "slack:message:sent"
	GetWorkspaceIDActivitiesActivityTypeEnumNoteCreated           GetWorkspaceIDActivitiesActivityTypeEnum = "note:created"
	GetWorkspaceIDActivitiesActivityTypeEnumPostCreated           GetWorkspaceIDActivitiesActivityTypeEnum = "post:created"
	GetWorkspaceIDActivitiesActivityTypeEnumIssuesOpened          GetWorkspaceIDActivitiesActivityTypeEnum = "issues:opened"
	GetWorkspaceIDActivitiesActivityTypeEnumIssueCommentCreated   GetWorkspaceIDActivitiesActivityTypeEnum = "issue_comment:created"
	GetWorkspaceIDActivitiesActivityTypeEnumPullRequestsOpened    GetWorkspaceIDActivitiesActivityTypeEnum = "pull_requests:opened"
	GetWorkspaceIDActivitiesActivityTypeEnumPullRequestsMerged    GetWorkspaceIDActivitiesActivityTypeEnum = "pull_requests:merged"
	GetWorkspaceIDActivitiesActivityTypeEnumCustomHappened        GetWorkspaceIDActivitiesActivityTypeEnum = "custom:happened"
	GetWorkspaceIDActivitiesActivityTypeEnumSlackChannelJoined    GetWorkspaceIDActivitiesActivityTypeEnum = "slack:channel:joined"
	GetWorkspaceIDActivitiesActivityTypeEnumStarCreated           GetWorkspaceIDActivitiesActivityTypeEnum = "star:created"
)

func (e *GetWorkspaceIDActivitiesActivityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "discord:message:sent":
		fallthrough
	case "slack:thread:replied":
		fallthrough
	case "discord:message:replied":
		fallthrough
	case "tweet:sent":
		fallthrough
	case "twitter:followed":
		fallthrough
	case "discord:server:joined":
		fallthrough
	case "discourse:topic:created":
		fallthrough
	case "discourse:post:created":
		fallthrough
	case "slack:message:sent":
		fallthrough
	case "note:created":
		fallthrough
	case "post:created":
		fallthrough
	case "issues:opened":
		fallthrough
	case "issue_comment:created":
		fallthrough
	case "pull_requests:opened":
		fallthrough
	case "pull_requests:merged":
		fallthrough
	case "custom:happened":
		fallthrough
	case "slack:channel:joined":
		fallthrough
	case "star:created":
		*e = GetWorkspaceIDActivitiesActivityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceIDActivitiesActivityTypeEnum: %s", s)
	}
}

// GetWorkspaceIDActivitiesAffiliationEnum
type GetWorkspaceIDActivitiesAffiliationEnum string

const (
	GetWorkspaceIDActivitiesAffiliationEnumMember   GetWorkspaceIDActivitiesAffiliationEnum = "member"
	GetWorkspaceIDActivitiesAffiliationEnumTeammate GetWorkspaceIDActivitiesAffiliationEnum = "teammate"
)

func (e *GetWorkspaceIDActivitiesAffiliationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "member":
		fallthrough
	case "teammate":
		*e = GetWorkspaceIDActivitiesAffiliationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceIDActivitiesAffiliationEnum: %s", s)
	}
}

// GetWorkspaceIDActivitiesDirectionEnum
type GetWorkspaceIDActivitiesDirectionEnum string

const (
	GetWorkspaceIDActivitiesDirectionEnumAsc  GetWorkspaceIDActivitiesDirectionEnum = "ASC"
	GetWorkspaceIDActivitiesDirectionEnumDesc GetWorkspaceIDActivitiesDirectionEnum = "DESC"
)

func (e *GetWorkspaceIDActivitiesDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetWorkspaceIDActivitiesDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceIDActivitiesDirectionEnum: %s", s)
	}
}

// GetWorkspaceIDActivitiesIdentityEnum
type GetWorkspaceIDActivitiesIdentityEnum string

const (
	GetWorkspaceIDActivitiesIdentityEnumGithub    GetWorkspaceIDActivitiesIdentityEnum = "github"
	GetWorkspaceIDActivitiesIdentityEnumTwitter   GetWorkspaceIDActivitiesIdentityEnum = "twitter"
	GetWorkspaceIDActivitiesIdentityEnumEmail     GetWorkspaceIDActivitiesIdentityEnum = "email"
	GetWorkspaceIDActivitiesIdentityEnumDiscourse GetWorkspaceIDActivitiesIdentityEnum = "discourse"
	GetWorkspaceIDActivitiesIdentityEnumLinkedin  GetWorkspaceIDActivitiesIdentityEnum = "linkedin"
	GetWorkspaceIDActivitiesIdentityEnumDevto     GetWorkspaceIDActivitiesIdentityEnum = "devto"
	GetWorkspaceIDActivitiesIdentityEnumSlack     GetWorkspaceIDActivitiesIdentityEnum = "slack"
	GetWorkspaceIDActivitiesIdentityEnumDiscord   GetWorkspaceIDActivitiesIdentityEnum = "discord"
)

func (e *GetWorkspaceIDActivitiesIdentityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "github":
		fallthrough
	case "twitter":
		fallthrough
	case "email":
		fallthrough
	case "discourse":
		fallthrough
	case "linkedin":
		fallthrough
	case "devto":
		fallthrough
	case "slack":
		fallthrough
	case "discord":
		*e = GetWorkspaceIDActivitiesIdentityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceIDActivitiesIdentityEnum: %s", s)
	}
}

// GetWorkspaceIDActivitiesItemsEnum
type GetWorkspaceIDActivitiesItemsEnum string

const (
	GetWorkspaceIDActivitiesItemsEnumTen        GetWorkspaceIDActivitiesItemsEnum = "10"
	GetWorkspaceIDActivitiesItemsEnumFifty      GetWorkspaceIDActivitiesItemsEnum = "50"
	GetWorkspaceIDActivitiesItemsEnumOneHundred GetWorkspaceIDActivitiesItemsEnum = "100"
)

func (e *GetWorkspaceIDActivitiesItemsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "10":
		fallthrough
	case "50":
		fallthrough
	case "100":
		*e = GetWorkspaceIDActivitiesItemsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceIDActivitiesItemsEnum: %s", s)
	}
}

// GetWorkspaceIDActivitiesOrbitLevelEnum
type GetWorkspaceIDActivitiesOrbitLevelEnum string

const (
	GetWorkspaceIDActivitiesOrbitLevelEnumOne   GetWorkspaceIDActivitiesOrbitLevelEnum = "1"
	GetWorkspaceIDActivitiesOrbitLevelEnumTwo   GetWorkspaceIDActivitiesOrbitLevelEnum = "2"
	GetWorkspaceIDActivitiesOrbitLevelEnumThree GetWorkspaceIDActivitiesOrbitLevelEnum = "3"
	GetWorkspaceIDActivitiesOrbitLevelEnumFour  GetWorkspaceIDActivitiesOrbitLevelEnum = "4"
	GetWorkspaceIDActivitiesOrbitLevelEnumN     GetWorkspaceIDActivitiesOrbitLevelEnum = "n"
)

func (e *GetWorkspaceIDActivitiesOrbitLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		fallthrough
	case "4":
		fallthrough
	case "n":
		*e = GetWorkspaceIDActivitiesOrbitLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceIDActivitiesOrbitLevelEnum: %s", s)
	}
}

// GetWorkspaceIDActivitiesSortEnum
type GetWorkspaceIDActivitiesSortEnum string

const (
	GetWorkspaceIDActivitiesSortEnumOccurredAt GetWorkspaceIDActivitiesSortEnum = "occurred_at"
	GetWorkspaceIDActivitiesSortEnumMember     GetWorkspaceIDActivitiesSortEnum = "member"
)

func (e *GetWorkspaceIDActivitiesSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "occurred_at":
		fallthrough
	case "member":
		*e = GetWorkspaceIDActivitiesSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceIDActivitiesSortEnum: %s", s)
	}
}

type GetWorkspaceIDActivitiesQueryParams struct {
	ActivityTags *string                                   `queryParam:"style=form,explode=true,name=activity_tags"`
	ActivityType *GetWorkspaceIDActivitiesActivityTypeEnum `queryParam:"style=form,explode=true,name=activity_type"`
	Affiliation  *GetWorkspaceIDActivitiesAffiliationEnum  `queryParam:"style=form,explode=true,name=affiliation"`
	Company      *string                                   `queryParam:"style=form,explode=true,name=company"`
	Direction    *GetWorkspaceIDActivitiesDirectionEnum    `queryParam:"style=form,explode=true,name=direction"`
	EndDate      *string                                   `queryParam:"style=form,explode=true,name=end_date"`
	Identity     *GetWorkspaceIDActivitiesIdentityEnum     `queryParam:"style=form,explode=true,name=identity"`
	Items        *GetWorkspaceIDActivitiesItemsEnum        `queryParam:"style=form,explode=true,name=items"`
	Location     *string                                   `queryParam:"style=form,explode=true,name=location"`
	MemberTags   *string                                   `queryParam:"style=form,explode=true,name=member_tags"`
	OrbitLevel   *GetWorkspaceIDActivitiesOrbitLevelEnum   `queryParam:"style=form,explode=true,name=orbit_level"`
	Page         *string                                   `queryParam:"style=form,explode=true,name=page"`
	Sort         *GetWorkspaceIDActivitiesSortEnum         `queryParam:"style=form,explode=true,name=sort"`
	StartDate    *string                                   `queryParam:"style=form,explode=true,name=start_date"`
	Type         *string                                   `queryParam:"style=form,explode=true,name=type"`
	Weight       *string                                   `queryParam:"style=form,explode=true,name=weight"`
}

type GetWorkspaceIDActivitiesRequest struct {
	PathParams  GetWorkspaceIDActivitiesPathParams
	QueryParams GetWorkspaceIDActivitiesQueryParams
	Security    GetWorkspaceIDActivitiesSecurity
}

type GetWorkspaceIDActivitiesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
