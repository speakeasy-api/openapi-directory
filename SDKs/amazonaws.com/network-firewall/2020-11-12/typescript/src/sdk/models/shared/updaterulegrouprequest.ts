/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EncryptionConfiguration } from "./encryptionconfiguration";
import { RuleGroup } from "./rulegroup";
import { RuleGroupTypeEnum } from "./rulegrouptypeenum";
import { SourceMetadata } from "./sourcemetadata";
import { Expose, Type } from "class-transformer";

export class UpdateRuleGroupRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DryRun" })
  dryRun?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EncryptionConfiguration" })
  @Type(() => EncryptionConfiguration)
  encryptionConfiguration?: EncryptionConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleGroup" })
  @Type(() => RuleGroup)
  ruleGroup?: RuleGroup;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleGroupArn" })
  ruleGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleGroupName" })
  ruleGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Rules" })
  rules?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceMetadata" })
  @Type(() => SourceMetadata)
  sourceMetadata?: SourceMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: RuleGroupTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdateToken" })
  updateToken: string;
}
