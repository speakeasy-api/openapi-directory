// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SecurityContextSecuritiesEnum string

const (
	SecurityContextSecuritiesEnumInsecure SecurityContextSecuritiesEnum = "INSECURE"
	SecurityContextSecuritiesEnumSsl      SecurityContextSecuritiesEnum = "SSL"
)

func (e SecurityContextSecuritiesEnum) ToPointer() *SecurityContextSecuritiesEnum {
	return &e
}

func (e *SecurityContextSecuritiesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INSECURE":
		fallthrough
	case "SSL":
		*e = SecurityContextSecuritiesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SecurityContextSecuritiesEnum: %v", v)
	}
}

// SecurityContext - Output only. A security context.
type SecurityContext struct {
	// The security types in this context.
	Securities []SecurityContextSecuritiesEnum `json:"securities,omitempty"`
}
