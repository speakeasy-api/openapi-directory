"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleanalyticsadminv1alphaaccessdimensionheader as shared_googleanalyticsadminv1alphaaccessdimensionheader
from ..shared import googleanalyticsadminv1alphaaccessmetricheader as shared_googleanalyticsadminv1alphaaccessmetricheader
from ..shared import googleanalyticsadminv1alphaaccessquota as shared_googleanalyticsadminv1alphaaccessquota
from ..shared import googleanalyticsadminv1alphaaccessrow as shared_googleanalyticsadminv1alphaaccessrow
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsAdminV1alphaRunAccessReportResponse:
    r"""The customized Data Access Record Report response."""
    
    dimension_headers: Optional[list[shared_googleanalyticsadminv1alphaaccessdimensionheader.GoogleAnalyticsAdminV1alphaAccessDimensionHeader]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensionHeaders'), 'exclude': lambda f: f is None }})
    r"""The header for a column in the report that corresponds to a specific dimension. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows."""  
    metric_headers: Optional[list[shared_googleanalyticsadminv1alphaaccessmetricheader.GoogleAnalyticsAdminV1alphaAccessMetricHeader]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricHeaders'), 'exclude': lambda f: f is None }})
    r"""The header for a column in the report that corresponds to a specific metric. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows."""  
    quota: Optional[shared_googleanalyticsadminv1alphaaccessquota.GoogleAnalyticsAdminV1alphaAccessQuota] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quota'), 'exclude': lambda f: f is None }})
    r"""Current state of all quotas for this Analytics property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors."""  
    row_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowCount'), 'exclude': lambda f: f is None }})
    r"""The total number of rows in the query result. `rowCount` is independent of the number of rows returned in the response, the `limit` request parameter, and the `offset` request parameter. For example if a query returns 175 rows and includes `limit` of 50 in the API request, the response will contain `rowCount` of 175 but only 50 rows. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination)."""  
    rows: Optional[list[shared_googleanalyticsadminv1alphaaccessrow.GoogleAnalyticsAdminV1alphaAccessRow]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rows'), 'exclude': lambda f: f is None }})
    r"""Rows of dimension value combinations and metric values in the report."""  
    