<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PoolPatchParameter - Parameters for a CloudPoolOperations.Patch request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PoolPatchParameter
{
    /**
     * A list of application packages to be installed on each compute node in the pool. If omitted, any existing application package references are left unchanged.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ApplicationPackageReference> $applicationPackageReferences
     */
	#[\JMS\Serializer\Annotation\SerializedName('applicationPackageReferences')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ApplicationPackageReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $applicationPackageReferences = null;
    
    /**
     * A list of certificates to be installed on each compute node in the pool. If omitted, any existing certificate references are left unchanged.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CertificateReference> $certificateReferences
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificateReferences')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CertificateReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $certificateReferences = null;
    
    /**
     * A list of name-value pairs associated with the pool as metadata. If omitted, any existing metadata is left unchanged.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MetadataItem> $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MetadataItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metadata = null;
    
    /**
     * A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StartTask $startTask
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTask')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StartTask')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StartTask $startTask = null;
    
	public function __construct()
	{
		$this->applicationPackageReferences = null;
		$this->certificateReferences = null;
		$this->metadata = null;
		$this->startTask = null;
	}
}
