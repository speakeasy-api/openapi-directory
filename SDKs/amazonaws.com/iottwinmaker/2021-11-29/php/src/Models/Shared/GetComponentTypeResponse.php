<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetComponentTypeResponse - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetComponentTypeResponse
{
	#[\JMS\Serializer\Annotation\SerializedName('arn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $arn;
    
	#[\JMS\Serializer\Annotation\SerializedName('componentTypeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $componentTypeId;
    
	#[\JMS\Serializer\Annotation\SerializedName('componentTypeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $componentTypeName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('creationDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $creationDateTime;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * $extendsFrom
     * 
     * @var ?array<string> $extendsFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('extendsFrom')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $extendsFrom = null;
    
    /**
     * $functions
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\FunctionResponse> $functions
     */
	#[\JMS\Serializer\Annotation\SerializedName('functions')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\FunctionResponse>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $functions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isAbstract')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isAbstract = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isSchemaInitialized')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSchemaInitialized = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isSingleton')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSingleton = null;
    
    /**
     * $propertyDefinitions
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\PropertyDefinitionResponse> $propertyDefinitions
     */
	#[\JMS\Serializer\Annotation\SerializedName('propertyDefinitions')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\PropertyDefinitionResponse>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $propertyDefinitions = null;
    
    /**
     * $propertyGroups
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\PropertyGroupResponse> $propertyGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('propertyGroups')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\PropertyGroupResponse>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $propertyGroups = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Status')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Status $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('syncSource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $syncSource = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updateDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updateDateTime;
    
	#[\JMS\Serializer\Annotation\SerializedName('workspaceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $workspaceId;
    
	public function __construct()
	{
		$this->arn = "";
		$this->componentTypeId = "";
		$this->componentTypeName = null;
		$this->creationDateTime = new \DateTime();
		$this->description = null;
		$this->extendsFrom = null;
		$this->functions = null;
		$this->isAbstract = null;
		$this->isSchemaInitialized = null;
		$this->isSingleton = null;
		$this->propertyDefinitions = null;
		$this->propertyGroups = null;
		$this->status = null;
		$this->syncSource = null;
		$this->updateDateTime = new \DateTime();
		$this->workspaceId = "";
	}
}
