/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class DevicesRegisterUserForDeviceSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * The information for a single iOS device
 */
export class DevicesRegisterUserForDeviceRequestBody extends SpeakeasyBase {
  /**
   * The device's International Mobile Equipment Identity number. Always empty or undefined at present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imei" })
  imei?: string;

  /**
   * The model identifier of the device, in the format iDeviceM,N
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model: string;

  /**
   * The build number of the last known OS version running on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os_build" })
  osBuild?: string;

  /**
   * The last known OS version running on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os_version" })
  osVersion?: string;

  /**
   * The user ID of the device owner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner_id" })
  ownerId?: string;

  /**
   * The device's serial number. Always empty or undefined at present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial?: string;

  /**
   * The Unique Device IDentifier of the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "udid" })
  udid: string;
}

export class DevicesRegisterUserForDeviceRequest extends SpeakeasyBase {
  /**
   * The device info.
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: DevicesRegisterUserForDeviceRequestBody;

  /**
   * The ID of the user
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=user_id",
  })
  userId: string;
}

export enum DevicesRegisterUserForDevice404ApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * <b>not_found</b>: The user or the device can't be found.
 *
 * @remarks
 *
 */
export class DevicesRegisterUserForDevice404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: DevicesRegisterUserForDevice404ApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * The information for a single iOS device
 */
export class DevicesRegisterUserForDevice200ApplicationJSON extends SpeakeasyBase {
  /**
   * The device description, in the format "iPhone 7 Plus (A1784)"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "device_name" })
  deviceName: string;

  /**
   * A combination of the device model name and the owner name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "full_device_name" })
  fullDeviceName?: string;

  /**
   * The device's International Mobile Equipment Identity number. Always empty or undefined at present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imei" })
  imei?: string;

  /**
   * The model identifier of the device, in the format iDeviceM,N
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model: string;

  /**
   * The last known OS version running on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os_build" })
  osBuild: string;

  /**
   * The last known OS version running on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os_version" })
  osVersion: string;

  /**
   * The user ID of the device owner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner_id" })
  ownerId?: string;

  /**
   * Timestamp of when the device was registered in ISO format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registered_at" })
  registeredAt?: string;

  /**
   * The device's serial number. Always empty or undefined at present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial?: string;

  /**
   * The provisioning status of the device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * The Unique Device IDentifier of the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "udid" })
  udid: string;
}

export class DevicesRegisterUserForDeviceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  devicesRegisterUserForDevice200ApplicationJSONObject?: DevicesRegisterUserForDevice200ApplicationJSON;

  /**
   * <b>not_found</b>: The user or the device can't be found.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  devicesRegisterUserForDevice404ApplicationJSONObject?: DevicesRegisterUserForDevice404ApplicationJSON;
}
