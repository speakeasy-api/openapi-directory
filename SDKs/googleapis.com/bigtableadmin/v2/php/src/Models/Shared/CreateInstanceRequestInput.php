<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateInstanceRequestInput - Request message for BigtableInstanceAdmin.CreateInstance.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateInstanceRequestInput
{
    /**
     * Required. The clusters to be created within the instance, mapped by desired cluster ID, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`. Fields marked `OutputOnly` must be left blank.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\ClusterInput> $clusters
     */
	#[\JMS\Serializer\Annotation\SerializedName('clusters')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\ClusterInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $clusters = null;
    
    /**
     * A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InstanceInput $instance
     */
	#[\JMS\Serializer\Annotation\SerializedName('instance')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InstanceInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InstanceInput $instance = null;
    
    /**
     * Required. The ID to be used when referring to the new instance within its project, e.g., just `myinstance` rather than `projects/myproject/instances/myinstance`.
     * 
     * @var ?string $instanceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('instanceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceId = null;
    
    /**
     * Required. The unique name of the project in which to create the new instance. Values are of the form `projects/{project}`.
     * 
     * @var ?string $parent
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parent = null;
    
	public function __construct()
	{
		$this->clusters = null;
		$this->instance = null;
		$this->instanceId = null;
		$this->parent = null;
	}
}
