"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import beezup_common_infosummaries as shared_beezup_common_infosummaries
from ..shared import channelcatalogmarketplacepropertieslinks as shared_channelcatalogmarketplacepropertieslinks
from ..shared import channelcatalogmarketplacepropertygroup as shared_channelcatalogmarketplacepropertygroup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelCatalogMarketplaceProperties:
    r"""Successfully fetched channel catalog properties"""
    
    links: shared_channelcatalogmarketplacepropertieslinks.ChannelCatalogMarketplacePropertiesLinks = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links') }})  
    property_groups: list[shared_channelcatalogmarketplacepropertygroup.ChannelCatalogMarketplacePropertyGroup] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('propertyGroups') }})
    r"""The groups settings with constraints"""  
    info: Optional[shared_beezup_common_infosummaries.BeezUPCommonInfoSummaries] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('info'), 'exclude': lambda f: f is None }})  
    