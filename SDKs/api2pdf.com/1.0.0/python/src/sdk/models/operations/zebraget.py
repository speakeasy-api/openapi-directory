"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class ZebraGETSecurity:
    
    query_api_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'query', 'field_name': 'apikey' }})  
    

@dataclasses.dataclass
class ZebraGETRequest:
    
    format: str = dataclasses.field(metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})
    r"""Most common is CODE_39 or QR_CODE"""  
    value: str = dataclasses.field(metadata={'query_param': { 'field_name': 'value', 'style': 'form', 'explode': True }})
    r"""Specify the text value you want to convert"""  
    height: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'height', 'style': 'form', 'explode': True }})
    r"""Height of the barcode generated image"""  
    showlabel: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'showlabel', 'style': 'form', 'explode': True }})
    r"""Show label of text below barcode"""  
    width: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'width', 'style': 'form', 'explode': True }})
    r"""Width of the barcode generated image"""  
    

@dataclasses.dataclass
class ZebraGETResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    zebra_get_200_image_png_binary_string: Optional[bytes] = dataclasses.field(default=None)
    r"""An image of the generated barcode or QR code"""  
    