/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * EventsV1Schema - OK
 */
public class EventsV1Schema {
    /**
     * The unique identifier of the schema. Each schema can have multiple versions, that share the same id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public EventsV1Schema withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The latest version published of this schema.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latest_version")
    public Long latestVersion;

    public EventsV1Schema withLatestVersion(Long latestVersion) {
        this.latestVersion = latestVersion;
        return this;
    }
    
    /**
     * The date that the latest schema version was created, given in ISO 8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("latest_version_date_created")
    public OffsetDateTime latestVersionDateCreated;

    public EventsV1Schema withLatestVersionDateCreated(OffsetDateTime latestVersionDateCreated) {
        this.latestVersionDateCreated = latestVersionDateCreated;
        return this;
    }
    
    /**
     * Contains a dictionary of URL links to nested resources of this schema.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;

    public EventsV1Schema withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * The URL of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public EventsV1Schema withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public EventsV1Schema(){}
}
