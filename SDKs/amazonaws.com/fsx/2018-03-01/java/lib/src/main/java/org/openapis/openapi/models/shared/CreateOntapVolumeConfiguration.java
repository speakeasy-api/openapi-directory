/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateOntapVolumeConfiguration - Specifies the configuration of the ONTAP volume that you are creating.
 */
public class CreateOntapVolumeConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CopyTagsToBackups")
    public Boolean copyTagsToBackups;
    public CreateOntapVolumeConfiguration withCopyTagsToBackups(Boolean copyTagsToBackups) {
        this.copyTagsToBackups = copyTagsToBackups;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JunctionPath")
    public String junctionPath;
    public CreateOntapVolumeConfiguration withJunctionPath(String junctionPath) {
        this.junctionPath = junctionPath;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OntapVolumeType")
    public InputOntapVolumeTypeEnum ontapVolumeType;
    public CreateOntapVolumeConfiguration withOntapVolumeType(InputOntapVolumeTypeEnum ontapVolumeType) {
        this.ontapVolumeType = ontapVolumeType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecurityStyle")
    public SecurityStyleEnum securityStyle;
    public CreateOntapVolumeConfiguration withSecurityStyle(SecurityStyleEnum securityStyle) {
        this.securityStyle = securityStyle;
        return this;
    }
    
    @JsonProperty("SizeInMegabytes")
    public Long sizeInMegabytes;
    public CreateOntapVolumeConfiguration withSizeInMegabytes(Long sizeInMegabytes) {
        this.sizeInMegabytes = sizeInMegabytes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SnapshotPolicy")
    public String snapshotPolicy;
    public CreateOntapVolumeConfiguration withSnapshotPolicy(String snapshotPolicy) {
        this.snapshotPolicy = snapshotPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StorageEfficiencyEnabled")
    public Boolean storageEfficiencyEnabled;
    public CreateOntapVolumeConfiguration withStorageEfficiencyEnabled(Boolean storageEfficiencyEnabled) {
        this.storageEfficiencyEnabled = storageEfficiencyEnabled;
        return this;
    }
    
    @JsonProperty("StorageVirtualMachineId")
    public String storageVirtualMachineId;
    public CreateOntapVolumeConfiguration withStorageVirtualMachineId(String storageVirtualMachineId) {
        this.storageVirtualMachineId = storageVirtualMachineId;
        return this;
    }
    
    /**
     * &lt;p&gt;Describes the data tiering policy for an ONTAP volume. When enabled, Amazon FSx for ONTAP's intelligent tiering automatically transitions a volume's data between the file system's primary storage and capacity pool storage based on your access patterns.&lt;/p&gt; &lt;p&gt;Valid tiering policies are the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SNAPSHOT_ONLY&lt;/code&gt; - (Default value) moves cold snapshots to the capacity pool storage tier.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;AUTO&lt;/code&gt; - moves cold user data and snapshots to the capacity pool storage tier based on your access patterns.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ALL&lt;/code&gt; - moves all user data blocks in both the active file system and Snapshot copies to the storage pool tier.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;NONE&lt;/code&gt; - keeps a volume's data in the primary storage tier, preventing it from being moved to the capacity pool tier.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TieringPolicy")
    public TieringPolicy tieringPolicy;
    public CreateOntapVolumeConfiguration withTieringPolicy(TieringPolicy tieringPolicy) {
        this.tieringPolicy = tieringPolicy;
        return this;
    }
    
}
