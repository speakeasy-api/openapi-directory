// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListShareInvitationsShareResourceTypeEnum - The type of share invitations to be returned.
type ListShareInvitationsShareResourceTypeEnum string

const (
	ListShareInvitationsShareResourceTypeEnumWorkload ListShareInvitationsShareResourceTypeEnum = "WORKLOAD"
	ListShareInvitationsShareResourceTypeEnumLens     ListShareInvitationsShareResourceTypeEnum = "LENS"
)

func (e *ListShareInvitationsShareResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WORKLOAD":
		fallthrough
	case "LENS":
		*e = ListShareInvitationsShareResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListShareInvitationsShareResourceTypeEnum: %s", s)
	}
}

type ListShareInvitationsQueryParams struct {
	// An optional string added to the beginning of each lens name returned in the results.
	LensNamePrefix *string `queryParam:"style=form,explode=true,name=LensNamePrefix"`
	// The maximum number of results to return for this request.
	MaxResults *int64  `queryParam:"style=form,explode=true,name=MaxResults"`
	NextToken  *string `queryParam:"style=form,explode=true,name=NextToken"`
	// The type of share invitations to be returned.
	ShareResourceType  *ListShareInvitationsShareResourceTypeEnum `queryParam:"style=form,explode=true,name=ShareResourceType"`
	WorkloadNamePrefix *string                                    `queryParam:"style=form,explode=true,name=WorkloadNamePrefix"`
}

type ListShareInvitationsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListShareInvitationsRequest struct {
	QueryParams ListShareInvitationsQueryParams
	Headers     ListShareInvitationsHeaders
}

type ListShareInvitationsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListShareInvitationsOutput *shared.ListShareInvitationsOutput
	StatusCode                 int
	RawResponse                *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
