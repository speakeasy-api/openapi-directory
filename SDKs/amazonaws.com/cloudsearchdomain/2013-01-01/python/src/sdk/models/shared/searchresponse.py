"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bucketinfo as shared_bucketinfo
from ..shared import fieldstats as shared_fieldstats
from ..shared import hits as shared_hits
from ..shared import searchstatus as shared_searchstatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchResponse:
    r"""The result of a <code>Search</code> request. Contains the documents that match the specified search criteria and any requested fields, highlights, and facet information."""
    
    facets: Optional[dict[str, shared_bucketinfo.BucketInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('facets'), 'exclude': lambda f: f is None }})  
    hits: Optional[shared_hits.Hits] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hits'), 'exclude': lambda f: f is None }})  
    stats: Optional[dict[str, shared_fieldstats.FieldStats]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stats'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_searchstatus.SearchStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    