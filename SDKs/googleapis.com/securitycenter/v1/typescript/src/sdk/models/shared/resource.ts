/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Folder } from "./folder";
import { Expose, Type } from "class-transformer";

/**
 * Information related to the Google Cloud resource that is associated with this finding.
 */
export class Resource extends SpeakeasyBase {
  /**
   * The human readable name of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.
   */
  @SpeakeasyMetadata({ elemType: Folder })
  @Expose({ name: "folders" })
  @Type(() => Folder)
  folders?: Folder[];

  /**
   * The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The human readable name of resource's parent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentDisplayName" })
  parentDisplayName?: string;

  /**
   * The full resource name of resource's parent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentName" })
  parentName?: string;

  /**
   * The project ID that the resource belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "projectDisplayName" })
  projectDisplayName?: string;

  /**
   * The full resource name of project that the resource belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "projectName" })
  projectName?: string;

  /**
   * The full resource type of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
