// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountAccessAllPsd2Enum - Optional if supported by API provider.
//
// The values "allAccounts" and "allAccountsWithOwnerName" are admitted.
// The support of the "allAccountsWithOwnerName" value by the ASPSP is optional.
type AccountAccessAllPsd2Enum string

const (
	AccountAccessAllPsd2EnumAllAccounts              AccountAccessAllPsd2Enum = "allAccounts"
	AccountAccessAllPsd2EnumAllAccountsWithOwnerName AccountAccessAllPsd2Enum = "allAccountsWithOwnerName"
)

func (e AccountAccessAllPsd2Enum) ToPointer() *AccountAccessAllPsd2Enum {
	return &e
}

func (e *AccountAccessAllPsd2Enum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allAccounts":
		fallthrough
	case "allAccountsWithOwnerName":
		*e = AccountAccessAllPsd2Enum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountAccessAllPsd2Enum: %v", v)
	}
}

// AccountAccessAvailableAccountsEnum - Optional if supported by API provider.
//
// The values "allAccounts" and "allAccountsWithOwnerName" are admitted.
// The support of the "allAccountsWithOwnerName" value by the ASPSP is optional.
type AccountAccessAvailableAccountsEnum string

const (
	AccountAccessAvailableAccountsEnumAllAccounts              AccountAccessAvailableAccountsEnum = "allAccounts"
	AccountAccessAvailableAccountsEnumAllAccountsWithOwnerName AccountAccessAvailableAccountsEnum = "allAccountsWithOwnerName"
)

func (e AccountAccessAvailableAccountsEnum) ToPointer() *AccountAccessAvailableAccountsEnum {
	return &e
}

func (e *AccountAccessAvailableAccountsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allAccounts":
		fallthrough
	case "allAccountsWithOwnerName":
		*e = AccountAccessAvailableAccountsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountAccessAvailableAccountsEnum: %v", v)
	}
}

// AccountAccessAvailableAccountsWithBalanceEnum - Optional if supported by API provider.
//
// The values "allAccounts" and "allAccountsWithOwnerName" are admitted.
// The support of the "allAccountsWithOwnerName" value by the ASPSP is optional.
type AccountAccessAvailableAccountsWithBalanceEnum string

const (
	AccountAccessAvailableAccountsWithBalanceEnumAllAccounts              AccountAccessAvailableAccountsWithBalanceEnum = "allAccounts"
	AccountAccessAvailableAccountsWithBalanceEnumAllAccountsWithOwnerName AccountAccessAvailableAccountsWithBalanceEnum = "allAccountsWithOwnerName"
)

func (e AccountAccessAvailableAccountsWithBalanceEnum) ToPointer() *AccountAccessAvailableAccountsWithBalanceEnum {
	return &e
}

func (e *AccountAccessAvailableAccountsWithBalanceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allAccounts":
		fallthrough
	case "allAccountsWithOwnerName":
		*e = AccountAccessAvailableAccountsWithBalanceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountAccessAvailableAccountsWithBalanceEnum: %v", v)
	}
}

// AccountAccess - Requested access services for a consent.
type AccountAccess struct {
	// Is asking for detailed account information.
	//
	// If the array is empty in a request, the TPP is asking for an accessible account list.
	// This may be restricted in a PSU/ASPSP authorization dialogue.
	// If the array is empty, also the arrays for balances, additionalInformation sub attributes or transactions shall be empty, if used.
	//
	Accounts []AccountReference16CH `json:"accounts,omitempty"`
	// Optional if supported by API provider.
	//
	// Is asking for additional information as added within this structured object.
	// The usage of this data element requires at least one of the entries "accounts",
	// "transactions" or "balances" also to be contained in the object.
	// If detailed accounts are referenced, it is required in addition that any account addressed within
	// the additionalInformation attribute is also addressed by at least one of the attributes "accounts",
	// "transactions" or "balances".
	//
	AdditionalInformation *AdditionalInformationAccess `json:"additionalInformation,omitempty"`
	// Optional if supported by API provider.
	//
	// The values "allAccounts" and "allAccountsWithOwnerName" are admitted.
	// The support of the "allAccountsWithOwnerName" value by the ASPSP is optional.
	//
	AllPsd2 *AccountAccessAllPsd2Enum `json:"allPsd2,omitempty"`
	// Optional if supported by API provider.
	//
	// The values "allAccounts" and "allAccountsWithOwnerName" are admitted.
	// The support of the "allAccountsWithOwnerName" value by the ASPSP is optional.
	//
	AvailableAccounts *AccountAccessAvailableAccountsEnum `json:"availableAccounts,omitempty"`
	// Optional if supported by API provider.
	//
	// The values "allAccounts" and "allAccountsWithOwnerName" are admitted.
	// The support of the "allAccountsWithOwnerName" value by the ASPSP is optional.
	//
	AvailableAccountsWithBalance *AccountAccessAvailableAccountsWithBalanceEnum `json:"availableAccountsWithBalance,omitempty"`
	// Is asking for balances of the addressed accounts.
	//
	// If the array is empty in the request, the TPP is asking for the balances of all accessible account lists.
	// This may be restricted in a PSU/ASPSP authorization dialogue.
	// If the array is empty, also the arrays for accounts, additionalInformation sub attributes or transactions shall be empty, if used.
	//
	Balances []AccountReference16CH `json:"balances,omitempty"`
	// If the TPP requests access to accounts via availableAccounts (List of available accounts), global
	// or bank driven consents, the TPP may include this element to restrict access to the referred
	// account types. Absence of the element is interpreted as "no restriction" (therefore access to
	// accounts of all types is requested). The element may only occur, if each of the elements
	//   - accounts
	//   - balances
	//   - transactions
	// is either not present or contains an empty array.
	//
	RestrictedTo []string `json:"restrictedTo,omitempty"`
	// Is asking for transactions of the addressed accounts.
	//
	// If the array is empty in the request, the TPP is asking for the transactions of all accessible account lists.
	// This may be restricted in a PSU/ASPSP authorization dialogue.
	// If the array is empty, also the arrays for accounts, additionalInformation sub attributes or balances shall be empty, if used.
	//
	Transactions []AccountReference16CH `json:"transactions,omitempty"`
}
