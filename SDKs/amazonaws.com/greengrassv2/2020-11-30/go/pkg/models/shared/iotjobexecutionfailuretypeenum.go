// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IoTJobExecutionFailureTypeEnum string

const (
	IoTJobExecutionFailureTypeEnumFailed   IoTJobExecutionFailureTypeEnum = "FAILED"
	IoTJobExecutionFailureTypeEnumRejected IoTJobExecutionFailureTypeEnum = "REJECTED"
	IoTJobExecutionFailureTypeEnumTimedOut IoTJobExecutionFailureTypeEnum = "TIMED_OUT"
	IoTJobExecutionFailureTypeEnumAll      IoTJobExecutionFailureTypeEnum = "ALL"
)

func (e IoTJobExecutionFailureTypeEnum) ToPointer() *IoTJobExecutionFailureTypeEnum {
	return &e
}

func (e *IoTJobExecutionFailureTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FAILED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "TIMED_OUT":
		fallthrough
	case "ALL":
		*e = IoTJobExecutionFailureTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IoTJobExecutionFailureTypeEnum: %v", v)
	}
}
