<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ManagedCertificate - Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ManagedCertificate
{
    /**
     * Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AuthorizationAttemptInfo> $authorizationAttemptInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorizationAttemptInfo')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AuthorizationAttemptInfo>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $authorizationAttemptInfo = null;
    
    /**
     * Immutable. Authorizations that will be used for performing domain authorization.
     * 
     * @var ?array<string> $dnsAuthorizations
     */
	#[\JMS\Serializer\Annotation\SerializedName('dnsAuthorizations')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dnsAuthorizations = null;
    
    /**
     * Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.
     * 
     * @var ?array<string> $domains
     */
	#[\JMS\Serializer\Annotation\SerializedName('domains')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $domains = null;
    
    /**
     * Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/* /locations/* /certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.
     * 
     * @var ?string $issuanceConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('issuanceConfig')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $issuanceConfig = null;
    
    /**
     * Information about issues with provisioning a Managed Certificate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProvisioningIssue $provisioningIssue
     */
	#[\JMS\Serializer\Annotation\SerializedName('provisioningIssue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ProvisioningIssue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProvisioningIssue $provisioningIssue = null;
    
    /**
     * Output only. State of the managed certificate resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ManagedCertificateStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ManagedCertificateStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedCertificateStateEnum $state = null;
    
	public function __construct()
	{
		$this->authorizationAttemptInfo = null;
		$this->dnsAuthorizations = null;
		$this->domains = null;
		$this->issuanceConfig = null;
		$this->provisioningIssue = null;
		$this->state = null;
	}
}
