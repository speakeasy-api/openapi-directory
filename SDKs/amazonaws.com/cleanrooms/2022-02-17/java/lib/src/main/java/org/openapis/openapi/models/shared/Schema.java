/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Schema - A schema is a relation within a collaboration.
 */
public class Schema {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analysisMethod")
    public AnalysisMethodEnum analysisMethod;
    public Schema withAnalysisMethod(AnalysisMethodEnum analysisMethod) {
        this.analysisMethod = analysisMethod;
        return this;
    }
    
    @JsonProperty("analysisRuleTypes")
    public AnalysisRuleTypeEnum[] analysisRuleTypes;
    public Schema withAnalysisRuleTypes(AnalysisRuleTypeEnum[] analysisRuleTypes) {
        this.analysisRuleTypes = analysisRuleTypes;
        return this;
    }
    
    @JsonProperty("collaborationArn")
    public String collaborationArn;
    public Schema withCollaborationArn(String collaborationArn) {
        this.collaborationArn = collaborationArn;
        return this;
    }
    
    @JsonProperty("collaborationId")
    public String collaborationId;
    public Schema withCollaborationId(String collaborationId) {
        this.collaborationId = collaborationId;
        return this;
    }
    
    @JsonProperty("columns")
    public Column[] columns;
    public Schema withColumns(Column[] columns) {
        this.columns = columns;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createTime")
    public OffsetDateTime createTime;
    public Schema withCreateTime(OffsetDateTime createTime) {
        this.createTime = createTime;
        return this;
    }
    
    @JsonProperty("creatorAccountId")
    public String creatorAccountId;
    public Schema withCreatorAccountId(String creatorAccountId) {
        this.creatorAccountId = creatorAccountId;
        return this;
    }
    
    @JsonProperty("description")
    public String description;
    public Schema withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonProperty("name")
    public String name;
    public Schema withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("partitionKeys")
    public Column[] partitionKeys;
    public Schema withPartitionKeys(Column[] partitionKeys) {
        this.partitionKeys = partitionKeys;
        return this;
    }
    
    @JsonProperty("type")
    public SchemaTypeEnum type;
    public Schema withType(SchemaTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updateTime")
    public OffsetDateTime updateTime;
    public Schema withUpdateTime(OffsetDateTime updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
