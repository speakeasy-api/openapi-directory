<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TransferConfig - Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TransferConfig
{
    /**
     * The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.
     * 
     * @var ?int $dataRefreshWindowDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataRefreshWindowDays')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $dataRefreshWindowDays = null;
    
    /**
     * Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list
     * 
     * @var ?string $dataSourceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataSourceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dataSourceId = null;
    
    /**
     * Output only. Region in which BigQuery dataset is located.
     * 
     * @var ?string $datasetRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('datasetRegion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $datasetRegion = null;
    
    /**
     * The BigQuery target dataset id.
     * 
     * @var ?string $destinationDatasetId
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationDatasetId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationDatasetId = null;
    
    /**
     * Is this config disabled. When set to true, no runs are scheduled for a given transfer.
     * 
     * @var ?bool $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
    /**
     * User specified display name for the data transfer.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Represents preferences for sending email notifications for transfer run events.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EmailPreferences $emailPreferences
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailPreferences')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EmailPreferences')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EmailPreferences $emailPreferences = null;
    
    /**
     * The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Output only. Next time when data transfer will run.
     * 
     * @var ?string $nextRunTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextRunTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextRunTime = null;
    
    /**
     * Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`
     * 
     * @var ?string $notificationPubsubTopic
     */
	#[\JMS\Serializer\Annotation\SerializedName('notificationPubsubTopic')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notificationPubsubTopic = null;
    
    /**
     * Information about a user.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserInfo $ownerInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('ownerInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserInfo $ownerInfo = null;
    
    /**
     * Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq
     * 
     * @var ?array<string, mixed> $params
     */
	#[\JMS\Serializer\Annotation\SerializedName('params')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $params = null;
    
    /**
     * Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.
     * 
     * @var ?string $schedule
     */
	#[\JMS\Serializer\Annotation\SerializedName('schedule')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schedule = null;
    
    /**
     * Options customizing the data transfer schedule.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ScheduleOptions $scheduleOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheduleOptions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ScheduleOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScheduleOptions $scheduleOptions = null;
    
    /**
     * Output only. State of the most recently updated transfer run.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransferConfigStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransferConfigStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransferConfigStateEnum $state = null;
    
    /**
     * Output only. Data transfer modification time. Ignored by server on input.
     * 
     * @var ?string $updateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateTime = null;
    
    /**
     * Deprecated. Unique ID of the user on whose behalf transfer is done.
     * 
     * @var ?string $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('userId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
	public function __construct()
	{
		$this->dataRefreshWindowDays = null;
		$this->dataSourceId = null;
		$this->datasetRegion = null;
		$this->destinationDatasetId = null;
		$this->disabled = null;
		$this->displayName = null;
		$this->emailPreferences = null;
		$this->name = null;
		$this->nextRunTime = null;
		$this->notificationPubsubTopic = null;
		$this->ownerInfo = null;
		$this->params = null;
		$this->schedule = null;
		$this->scheduleOptions = null;
		$this->state = null;
		$this->updateTime = null;
		$this->userId = null;
	}
}
