"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDDeliveriesJournalRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the customer folder"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    accounting_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'AccountingDate', 'style': 'form', 'explode': True }})
    r"""accounting dates of the document"""  
    class_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Class', 'style': 'form', 'explode': True }})
    r"""class of the document"""  
    delivery_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'DeliveryDate', 'style': 'form', 'explode': True }})
    r"""delivery dates of the document"""  
    number: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Number', 'style': 'form', 'explode': True }})
    r"""numbers of the document"""  
    target_folder_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'TargetFolderName', 'style': 'form', 'explode': True }})
    r"""Name of the target folder of the document"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDDeliveriesJournal200ApplicationJSONTargetFolder:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDDeliveriesJournal200ApplicationJSON:
    
    author: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Author'), 'exclude': lambda f: f is None }})  
    class_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Class'), 'exclude': lambda f: f is None }})  
    delete_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeleteDate'), 'exclude': lambda f: f is None }})  
    delivery_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryDate'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Number'), 'exclude': lambda f: f is None }})  
    target_folder: Optional[GetSpacesSpaceIDFoldersIDDeliveriesJournal200ApplicationJSONTargetFolder] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetFolder'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDDeliveriesJournalResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_spaces_space_id_folders_id_deliveries_journal_200_application_json_objects: Optional[list[GetSpacesSpaceIDFoldersIDDeliveriesJournal200ApplicationJSON]] = dataclasses.field(default=None)
    r"""A list of document (journal)"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    