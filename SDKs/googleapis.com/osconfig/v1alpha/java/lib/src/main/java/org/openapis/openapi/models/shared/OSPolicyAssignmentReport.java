/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OSPolicyAssignmentReport - A report of the OS policy assignment status for a given instance.
 */
public class OSPolicyAssignmentReport {
    /**
     * The Compute Engine VM instance name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instance")
    public String instance;
    public OSPolicyAssignmentReport withInstance(String instance) {
        this.instance = instance;
        return this;
    }
    
    /**
     * Unique identifier of the last attempted run to apply the OS policies associated with this assignment on the VM. This ID is logged by the OS Config agent while applying the OS policies associated with this assignment on the VM. NOTE: If the service is unable to successfully connect to the agent for this run, then this id will not be available in the agent logs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastRunId")
    public String lastRunId;
    public OSPolicyAssignmentReport withLastRunId(String lastRunId) {
        this.lastRunId = lastRunId;
        return this;
    }
    
    /**
     * The `OSPolicyAssignmentReport` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/osPolicyAssignments/{os_policy_assignment_id}/report`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public OSPolicyAssignmentReport withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Reference to the `OSPolicyAssignment` API resource that the `OSPolicy` belongs to. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osPolicyAssignment")
    public String osPolicyAssignment;
    public OSPolicyAssignmentReport withOsPolicyAssignment(String osPolicyAssignment) {
        this.osPolicyAssignment = osPolicyAssignment;
        return this;
    }
    
    /**
     * Compliance data for each `OSPolicy` that is applied to the VM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osPolicyCompliances")
    public OSPolicyAssignmentReportOSPolicyCompliance[] osPolicyCompliances;
    public OSPolicyAssignmentReport withOsPolicyCompliances(OSPolicyAssignmentReportOSPolicyCompliance[] osPolicyCompliances) {
        this.osPolicyCompliances = osPolicyCompliances;
        return this;
    }
    
    /**
     * Timestamp for when the report was last generated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public OSPolicyAssignmentReport withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
