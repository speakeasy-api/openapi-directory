/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SecurityPolicyUserDefinedField {
    /**
     * The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("base")
    public SecurityPolicyUserDefinedFieldBaseEnum base;

    public SecurityPolicyUserDefinedField withBase(SecurityPolicyUserDefinedFieldBaseEnum base) {
        this.base = base;
        return this;
    }
    
    /**
     * If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mask")
    public String mask;

    public SecurityPolicyUserDefinedField withMask(String mask) {
        this.mask = mask;
        return this;
    }
    
    /**
     * The name of this field. Must be unique within the policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public SecurityPolicyUserDefinedField withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Offset of the first byte of the field (in network byte order) relative to 'base'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Integer offset;

    public SecurityPolicyUserDefinedField withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Size of the field in bytes. Valid values: 1-4.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Integer size;

    public SecurityPolicyUserDefinedField withSize(Integer size) {
        this.size = size;
        return this;
    }
    
    public SecurityPolicyUserDefinedField(){}
}
