// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AccountGetPermissionsCountEntityTypeEnum - Can be "datapoint" or "group"
type AccountGetPermissionsCountEntityTypeEnum string

const (
	AccountGetPermissionsCountEntityTypeEnumDatapoint AccountGetPermissionsCountEntityTypeEnum = "datapoint"
	AccountGetPermissionsCountEntityTypeEnumGroup     AccountGetPermissionsCountEntityTypeEnum = "group"
)

func (e AccountGetPermissionsCountEntityTypeEnum) ToPointer() *AccountGetPermissionsCountEntityTypeEnum {
	return &e
}

func (e *AccountGetPermissionsCountEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "datapoint":
		fallthrough
	case "group":
		*e = AccountGetPermissionsCountEntityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountGetPermissionsCountEntityTypeEnum: %v", v)
	}
}

// AccountGetPermissionsCountTypeEnum - Can be "w" or "r"
type AccountGetPermissionsCountTypeEnum string

const (
	AccountGetPermissionsCountTypeEnumR AccountGetPermissionsCountTypeEnum = "r"
	AccountGetPermissionsCountTypeEnumW AccountGetPermissionsCountTypeEnum = "w"
)

func (e AccountGetPermissionsCountTypeEnum) ToPointer() *AccountGetPermissionsCountTypeEnum {
	return &e
}

func (e *AccountGetPermissionsCountTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "r":
		fallthrough
	case "w":
		*e = AccountGetPermissionsCountTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountGetPermissionsCountTypeEnum: %v", v)
	}
}

type AccountGetPermissionsCountRequest struct {
	// Optional id of the datapoint/group entity to filter by
	EntityID *int64 `queryParam:"style=form,explode=true,name=entityId"`
	// Can be "datapoint" or "group"
	EntityType *AccountGetPermissionsCountEntityTypeEnum `queryParam:"style=form,explode=true,name=entityType"`
	// Id of the guest
	GuestID int64 `pathParam:"style=simple,explode=false,name=guestId"`
	// Can be "w" or "r"
	Type *AccountGetPermissionsCountTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type AccountGetPermissionsCountResponse struct {
	APICoreResponsesCountResponce *shared.APICoreResponsesCountResponce
	Body                          []byte
	ContentType                   string
	StatusCode                    int
	RawResponse                   *http.Response
}
