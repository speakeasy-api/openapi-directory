// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreditCardCardTypeEnum - Type of card.
type CreditCardCardTypeEnum string

const (
	CreditCardCardTypeEnumVisa                 CreditCardCardTypeEnum = "Visa"
	CreditCardCardTypeEnumMasterCard           CreditCardCardTypeEnum = "MasterCard"
	CreditCardCardTypeEnumAmericanExpress      CreditCardCardTypeEnum = "AmericanExpress"
	CreditCardCardTypeEnumDiscover             CreditCardCardTypeEnum = "Discover"
	CreditCardCardTypeEnumJcb                  CreditCardCardTypeEnum = "JCB"
	CreditCardCardTypeEnumDiners               CreditCardCardTypeEnum = "Diners"
	CreditCardCardTypeEnumCup                  CreditCardCardTypeEnum = "CUP"
	CreditCardCardTypeEnumMaestro              CreditCardCardTypeEnum = "Maestro"
	CreditCardCardTypeEnumElectron             CreditCardCardTypeEnum = "Electron"
	CreditCardCardTypeEnumAppleVisa            CreditCardCardTypeEnum = "AppleVisa"
	CreditCardCardTypeEnumAppleMasterCard      CreditCardCardTypeEnum = "AppleMasterCard"
	CreditCardCardTypeEnumAppleAmericanExpress CreditCardCardTypeEnum = "AppleAmericanExpress"
	CreditCardCardTypeEnumAppleDiscover        CreditCardCardTypeEnum = "AppleDiscover"
	CreditCardCardTypeEnumAppleJcb             CreditCardCardTypeEnum = "AppleJCB"
	CreditCardCardTypeEnumElo                  CreditCardCardTypeEnum = "Elo"
	CreditCardCardTypeEnumHipercard            CreditCardCardTypeEnum = "Hipercard"
	CreditCardCardTypeEnumNaranja              CreditCardCardTypeEnum = "Naranja"
	CreditCardCardTypeEnumNativa               CreditCardCardTypeEnum = "Nativa"
	CreditCardCardTypeEnumTarjetaShopping      CreditCardCardTypeEnum = "TarjetaShopping"
	CreditCardCardTypeEnumCencosud             CreditCardCardTypeEnum = "Cencosud"
	CreditCardCardTypeEnumArgencard            CreditCardCardTypeEnum = "Argencard"
	CreditCardCardTypeEnumCabal                CreditCardCardTypeEnum = "Cabal"
)

func (e *CreditCardCardTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Visa":
		fallthrough
	case "MasterCard":
		fallthrough
	case "AmericanExpress":
		fallthrough
	case "Discover":
		fallthrough
	case "JCB":
		fallthrough
	case "Diners":
		fallthrough
	case "CUP":
		fallthrough
	case "Maestro":
		fallthrough
	case "Electron":
		fallthrough
	case "AppleVisa":
		fallthrough
	case "AppleMasterCard":
		fallthrough
	case "AppleAmericanExpress":
		fallthrough
	case "AppleDiscover":
		fallthrough
	case "AppleJCB":
		fallthrough
	case "Elo":
		fallthrough
	case "Hipercard":
		fallthrough
	case "Naranja":
		fallthrough
	case "Nativa":
		fallthrough
	case "TarjetaShopping":
		fallthrough
	case "Cencosud":
		fallthrough
	case "Argencard":
		fallthrough
	case "Cabal":
		*e = CreditCardCardTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreditCardCardTypeEnum: %s", s)
	}
}

// CreditCard - Default payment method associated with an account. Only credit card payment methods are supported.
type CreditCard struct {
	// Information about the cardholder of a credit card payment method associated with an account. If you do not provide information about the cardholder, Zuora uses the account's bill-to contact.
	//
	CardHolderInfo *AccountCreditCardHolder `json:"cardHolderInfo,omitempty"`
	// Card number. Once set, you cannot update or query the value of this field. The value of this field is only available in masked format. For example, XXXX-XXXX-XXXX-1234 (hyphens must not be used when you set the credit card number).
	//
	CardNumber *string `json:"cardNumber,omitempty"`
	// Type of card.
	//
	CardType *CreditCardCardTypeEnum `json:"cardType,omitempty"`
	// Expiration date of the card.
	//
	ExpirationMonth *int64 `json:"expirationMonth,omitempty"`
	// Expiration year of the card.
	//
	ExpirationYear *int64 `json:"expirationYear,omitempty"`
	// CVV or CVV2 security code of the card. To ensure PCI compliance, Zuora does not store the value of this field.
	//
	SecurityCode *string `json:"securityCode,omitempty"`
}
