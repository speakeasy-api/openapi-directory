// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetRepositoriesWorkspaceRepoSlugCommitCommitStatusesSecurity struct {
	APIKey *shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
	Basic  *shared.SchemeBasic  `security:"scheme,type=http,subtype=basic"`
	Oauth2 *shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

type GetRepositoriesWorkspaceRepoSlugCommitCommitStatusesPathParams struct {
	// The commit's SHA1.
	Commit string `pathParam:"style=simple,explode=false,name=commit"`
	// This can either be the repository slug or the UUID of the repository,
	// surrounded by curly-braces, for example: `{repository UUID}`.
	//
	RepoSlug string `pathParam:"style=simple,explode=false,name=repo_slug"`
	// This can either be the workspace ID (slug) or the workspace UUID
	// surrounded by curly-braces, for example: `{workspace UUID}`.
	//
	Workspace string `pathParam:"style=simple,explode=false,name=workspace"`
}

type GetRepositoriesWorkspaceRepoSlugCommitCommitStatusesQueryParams struct {
	// Query string to narrow down the response as per
	// [filtering and sorting](/cloud/bitbucket/rest/intro/#filtering).
	//
	Q *string `queryParam:"style=form,explode=true,name=q"`
	// Field by which the results should be sorted as per
	// [filtering and sorting](/cloud/bitbucket/rest/intro/#filtering).
	// Defaults to `created_on`.
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
}

type GetRepositoriesWorkspaceRepoSlugCommitCommitStatusesRequest struct {
	PathParams  GetRepositoriesWorkspaceRepoSlugCommitCommitStatusesPathParams
	QueryParams GetRepositoriesWorkspaceRepoSlugCommitCommitStatusesQueryParams
	Security    GetRepositoriesWorkspaceRepoSlugCommitCommitStatusesSecurity
}

type GetRepositoriesWorkspaceRepoSlugCommitCommitStatusesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// If the repository or commit does not exist
	Error map[string]interface{}
	// A paginated list of all commit statuses for this commit.
	PaginatedCommitstatuses *shared.PaginatedCommitstatuses
}
