"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import linuxiptype_enum as shared_linuxiptype_enum
from ..shared import linuxsite as shared_linuxsite
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LinuxHostingDetail:
    r"""Success"""
    
    actual_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actual_size'), 'exclude': lambda f: f is None }})
    r"""Used webspace size in MB"""  
    domain_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain_name'), 'exclude': lambda f: f is None }})
    r"""Domain name for the Linux hosting account."""  
    ftp_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ftp_enabled'), 'exclude': lambda f: f is None }})
    r"""Indicates whether ftp is enabled for the hosting account."""  
    ftp_username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ftp_username'), 'exclude': lambda f: f is None }})
    r"""Ftp username"""  
    ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip'), 'exclude': lambda f: f is None }})
    r"""Linux hosting IP address"""  
    ip_type: Optional[shared_linuxiptype_enum.LinuxIPTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip_type'), 'exclude': lambda f: f is None }})
    r"""Type of the hosting IP address (dedicated or shared)"""  
    max_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_size'), 'exclude': lambda f: f is None }})
    r"""Maximum webspace size in MB"""  
    max_webspace_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_webspace_size'), 'exclude': lambda f: f is None }})
    r"""Maximum webspace size in MB<br />
    Use max_size instead.
    """  
    mysql_database_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mysql_database_names'), 'exclude': lambda f: f is None }})
    r"""A list of mysql databases linked to the hosting account.<br />
    Details of the database can be read using the mysql database detail.
    """  
    php_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('php_version'), 'exclude': lambda f: f is None }})
    r"""The active php version for the hosting account."""  
    servicepack_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('servicepack_id'), 'exclude': lambda f: f is None }})
    r"""Id of Linux hosting service package."""  
    sites: Optional[list[shared_linuxsite.LinuxSite]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sites'), 'exclude': lambda f: f is None }})
    r"""A list of websites on the hosting account."""  
    ssh_host: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssh_host'), 'exclude': lambda f: f is None }})
    r"""Ssh host of the linux hosting account"""  
    ssh_username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssh_username'), 'exclude': lambda f: f is None }})
    r"""Ssh username"""  
    webspace_usage: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webspace_usage'), 'exclude': lambda f: f is None }})
    r"""Used webspace size in MB<br />
    Use actual_size instead.
    """  
    