/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Story - A user story
 */
public class Story {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;
    public Story withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * The UTC date and time when the post was published.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date")
    public OffsetDateTime date;
    public Story withDate(OffsetDateTime date) {
        this.date = date;
        return this;
    }
    
    /**
     * The number of people who have liked this story.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("like_count")
    public Long likeCount;
    public Story withLikeCount(Long likeCount) {
        this.likeCount = likeCount;
        return this;
    }
    
    /**
     * Details about the photos associated with this story (may be null if there are no photos).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photos")
    public Photo[] photos;
    public Story withPhotos(Photo[] photos) {
        this.photos = photos;
        return this;
    }
    
    /**
     * A URL that can be used to share the story (may be null if the story is not public).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("share_url")
    public String shareUrl;
    public Story withShareUrl(String shareUrl) {
        this.shareUrl = shareUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("story_id")
    public String storyId;
    public Story withStoryId(String storyId) {
        this.storyId = storyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public Story withTitle(String title) {
        this.title = title;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public User user;
    public Story withUser(User user) {
        this.user = user;
        return this;
    }
    
    /**
     * Whether or not the current user has liked this story or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_liked")
    public Boolean userLiked;
    public Story withUserLiked(Boolean userLiked) {
        this.userLiked = userLiked;
        return this;
    }
    
}
