// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// NotificationConfig - Cloud Security Command Center (Cloud SCC) notification configs. A notification config is a Cloud SCC resource that contains the configuration to send notifications for create/update events of findings, assets and etc.
type NotificationConfig struct {
	// The description of the notification config (max of 1024 characters).
	Description *string `json:"description,omitempty"`
	// The relative resource name of this notification config. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/notificationConfigs/notify_public_bucket", "folders/{folder_id}/notificationConfigs/notify_public_bucket", or "projects/{project_id}/notificationConfigs/notify_public_bucket".
	Name *string `json:"name,omitempty"`
	// The Pub/Sub topic to send notifications to. Its format is "projects/[project_id]/topics/[topic]".
	PubsubTopic *string `json:"pubsubTopic,omitempty"`
	// Output only. The service account that needs "pubsub.topics.publish" permission to publish to the Pub/Sub topic.
	ServiceAccount *string `json:"serviceAccount,omitempty"`
	// The config for streaming-based notifications, which send each event as soon as it is detected.
	StreamingConfig *StreamingConfig `json:"streamingConfig,omitempty"`
}

// NotificationConfigInput - Cloud Security Command Center (Cloud SCC) notification configs. A notification config is a Cloud SCC resource that contains the configuration to send notifications for create/update events of findings, assets and etc.
type NotificationConfigInput struct {
	// The description of the notification config (max of 1024 characters).
	Description *string `json:"description,omitempty"`
	// The relative resource name of this notification config. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/notificationConfigs/notify_public_bucket", "folders/{folder_id}/notificationConfigs/notify_public_bucket", or "projects/{project_id}/notificationConfigs/notify_public_bucket".
	Name *string `json:"name,omitempty"`
	// The Pub/Sub topic to send notifications to. Its format is "projects/[project_id]/topics/[topic]".
	PubsubTopic *string `json:"pubsubTopic,omitempty"`
	// The config for streaming-based notifications, which send each event as soon as it is detected.
	StreamingConfig *StreamingConfig `json:"streamingConfig,omitempty"`
}
