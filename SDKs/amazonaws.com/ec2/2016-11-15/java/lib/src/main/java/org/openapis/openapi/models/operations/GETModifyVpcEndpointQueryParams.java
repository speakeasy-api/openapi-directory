/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETModifyVpcEndpointQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETModifyVpcEndpointActionEnum action;
    public GETModifyVpcEndpointQueryParams withAction(GETModifyVpcEndpointActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * (Gateway endpoint) The IDs of the route tables to associate with the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AddRouteTableId")
    public String[] addRouteTableId;
    public GETModifyVpcEndpointQueryParams withAddRouteTableId(String[] addRouteTableId) {
        this.addRouteTableId = addRouteTableId;
        return this;
    }
    
    /**
     * (Interface endpoint) The IDs of the security groups to associate with the network interface.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AddSecurityGroupId")
    public String[] addSecurityGroupId;
    public GETModifyVpcEndpointQueryParams withAddSecurityGroupId(String[] addSecurityGroupId) {
        this.addSecurityGroupId = addSecurityGroupId;
        return this;
    }
    
    /**
     * (Interface and Gateway Load Balancer endpoints) The IDs of the subnets in which to serve the endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AddSubnetId")
    public String[] addSubnetId;
    public GETModifyVpcEndpointQueryParams withAddSubnetId(String[] addSubnetId) {
        this.addSubnetId = addSubnetId;
        return this;
    }
    
    /**
     * The DNS options for the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DnsOptions")
    public GETModifyVpcEndpointDNSOptions dnsOptions;
    public GETModifyVpcEndpointQueryParams withDnsOptions(GETModifyVpcEndpointDNSOptions dnsOptions) {
        this.dnsOptions = dnsOptions;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETModifyVpcEndpointQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The IP address type for the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=IpAddressType")
    public GETModifyVpcEndpointIPAddressTypeEnum ipAddressType;
    public GETModifyVpcEndpointQueryParams withIpAddressType(GETModifyVpcEndpointIPAddressTypeEnum ipAddressType) {
        this.ipAddressType = ipAddressType;
        return this;
    }
    
    /**
     * (Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PolicyDocument")
    public String policyDocument;
    public GETModifyVpcEndpointQueryParams withPolicyDocument(String policyDocument) {
        this.policyDocument = policyDocument;
        return this;
    }
    
    /**
     * (Interface endpoint) Indicates whether a private hosted zone is associated with the VPC.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PrivateDnsEnabled")
    public Boolean privateDnsEnabled;
    public GETModifyVpcEndpointQueryParams withPrivateDnsEnabled(Boolean privateDnsEnabled) {
        this.privateDnsEnabled = privateDnsEnabled;
        return this;
    }
    
    /**
     * (Gateway endpoint) The IDs of the route tables to disassociate from the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RemoveRouteTableId")
    public String[] removeRouteTableId;
    public GETModifyVpcEndpointQueryParams withRemoveRouteTableId(String[] removeRouteTableId) {
        this.removeRouteTableId = removeRouteTableId;
        return this;
    }
    
    /**
     * (Interface endpoint) The IDs of the security groups to disassociate from the network interface.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RemoveSecurityGroupId")
    public String[] removeSecurityGroupId;
    public GETModifyVpcEndpointQueryParams withRemoveSecurityGroupId(String[] removeSecurityGroupId) {
        this.removeSecurityGroupId = removeSecurityGroupId;
        return this;
    }
    
    /**
     * (Interface endpoint) The IDs of the subnets from which to remove the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RemoveSubnetId")
    public String[] removeSubnetId;
    public GETModifyVpcEndpointQueryParams withRemoveSubnetId(String[] removeSubnetId) {
        this.removeSubnetId = removeSubnetId;
        return this;
    }
    
    /**
     * (Gateway endpoint) Specify &lt;code&gt;true&lt;/code&gt; to reset the policy document to the default policy. The default policy allows full access to the service.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ResetPolicy")
    public Boolean resetPolicy;
    public GETModifyVpcEndpointQueryParams withResetPolicy(Boolean resetPolicy) {
        this.resetPolicy = resetPolicy;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETModifyVpcEndpointVersionEnum version;
    public GETModifyVpcEndpointQueryParams withVersion(GETModifyVpcEndpointVersionEnum version) {
        this.version = version;
        return this;
    }
    
    /**
     * The ID of the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VpcEndpointId")
    public String vpcEndpointId;
    public GETModifyVpcEndpointQueryParams withVpcEndpointId(String vpcEndpointId) {
        this.vpcEndpointId = vpcEndpointId;
        return this;
    }
    
}
