/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ReprocessingSummary } from "./reprocessingsummary";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A summary of information about a pipeline.
 */
export class PipelineSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "pipelineName" })
  pipelineName?: string;

  @SpeakeasyMetadata({ elemType: ReprocessingSummary })
  @Expose({ name: "reprocessingSummaries" })
  @Type(() => ReprocessingSummary)
  reprocessingSummaries?: ReprocessingSummary[];
}
