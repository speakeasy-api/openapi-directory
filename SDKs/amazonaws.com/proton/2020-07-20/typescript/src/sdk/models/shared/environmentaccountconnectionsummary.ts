/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnvironmentAccountConnectionStatusEnum } from "./environmentaccountconnectionstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Summary data of an Proton environment account connection resource.
 */
export class EnvironmentAccountConnectionSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "componentRoleArn" })
  componentRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentAccountId" })
  environmentAccountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentName" })
  environmentName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "managementAccountId" })
  managementAccountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requestedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  requestedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: EnvironmentAccountConnectionStatusEnum;
}
