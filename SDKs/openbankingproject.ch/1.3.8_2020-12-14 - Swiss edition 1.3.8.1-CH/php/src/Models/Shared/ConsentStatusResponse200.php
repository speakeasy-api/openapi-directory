<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ConsentStatusResponse200 - Body of the JSON response for a successful get status request for a consent.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ConsentStatusResponse200
{
    /**
     * This is the overall lifecycle status of the consent.
     * 
     * 
     * Valid values are:
     *   - 'received': The consent data have been received and are technically correct.
     *     The data is not authorised yet.
     *   - 'rejected': The consent data have been rejected e.g. since no successful authorisation has taken place.
     *   - 'valid': The consent is accepted and valid for GET account data calls and others as specified in the consent object.
     *   - 'revokedByPsu': The consent has been revoked by the PSU towards the ASPSP.
     *   - 'expired': The consent expired.
     *   - 'terminatedByTpp': The corresponding TPP has terminated the consent by applying the DELETE method to the consent resource.
     *   - 'partiallyAuthorised': The consent is due to a multi-level authorisation, some but not all mandated authorisations have been performed yet.
     * 
     * The ASPSP might add further codes. These codes then shall be contained in the ASPSP's documentation of the XS2A interface 
     * and has to be added to this API definition as well.
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ConsentStatusEnum $consentStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('consentStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConsentStatusEnum>')]
    public ConsentStatusEnum $consentStatus;
    
    /**
     * Text to be displayed to the PSU.
     * 
     * @var ?string $psuMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('psuMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $psuMessage = null;
    
	public function __construct()
	{
		$this->consentStatus = \OpenAPI\OpenAPI\Models\Shared\ConsentStatusEnum::RECEIVED;
		$this->psuMessage = null;
	}
}
