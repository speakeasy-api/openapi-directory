/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FilterExpression } from "./filterexpression";
import { FilterLogicalOperatorEnum } from "./filterlogicaloperatorenum";
import { Expose, Type } from "class-transformer";

/**
 * Specifies a transform that splits a dataset into two, based on a filter condition.
 */
export class Filter extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: FilterExpression })
  @Expose({ name: "Filters" })
  @Type(() => FilterExpression)
  filters: FilterExpression[];

  @SpeakeasyMetadata()
  @Expose({ name: "Inputs" })
  inputs: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "LogicalOperator" })
  logicalOperator: FilterLogicalOperatorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;
}
