// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AlgorithmNameGeoMosaicEnum string

const (
	AlgorithmNameGeoMosaicEnumNear        AlgorithmNameGeoMosaicEnum = "NEAR"
	AlgorithmNameGeoMosaicEnumBilinear    AlgorithmNameGeoMosaicEnum = "BILINEAR"
	AlgorithmNameGeoMosaicEnumCubic       AlgorithmNameGeoMosaicEnum = "CUBIC"
	AlgorithmNameGeoMosaicEnumCubicspline AlgorithmNameGeoMosaicEnum = "CUBICSPLINE"
	AlgorithmNameGeoMosaicEnumLanczos     AlgorithmNameGeoMosaicEnum = "LANCZOS"
	AlgorithmNameGeoMosaicEnumAverage     AlgorithmNameGeoMosaicEnum = "AVERAGE"
	AlgorithmNameGeoMosaicEnumRms         AlgorithmNameGeoMosaicEnum = "RMS"
	AlgorithmNameGeoMosaicEnumMode        AlgorithmNameGeoMosaicEnum = "MODE"
	AlgorithmNameGeoMosaicEnumMax         AlgorithmNameGeoMosaicEnum = "MAX"
	AlgorithmNameGeoMosaicEnumMin         AlgorithmNameGeoMosaicEnum = "MIN"
	AlgorithmNameGeoMosaicEnumMed         AlgorithmNameGeoMosaicEnum = "MED"
	AlgorithmNameGeoMosaicEnumQ1          AlgorithmNameGeoMosaicEnum = "Q1"
	AlgorithmNameGeoMosaicEnumQ3          AlgorithmNameGeoMosaicEnum = "Q3"
	AlgorithmNameGeoMosaicEnumSum         AlgorithmNameGeoMosaicEnum = "SUM"
)

func (e AlgorithmNameGeoMosaicEnum) ToPointer() *AlgorithmNameGeoMosaicEnum {
	return &e
}

func (e *AlgorithmNameGeoMosaicEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NEAR":
		fallthrough
	case "BILINEAR":
		fallthrough
	case "CUBIC":
		fallthrough
	case "CUBICSPLINE":
		fallthrough
	case "LANCZOS":
		fallthrough
	case "AVERAGE":
		fallthrough
	case "RMS":
		fallthrough
	case "MODE":
		fallthrough
	case "MAX":
		fallthrough
	case "MIN":
		fallthrough
	case "MED":
		fallthrough
	case "Q1":
		fallthrough
	case "Q3":
		fallthrough
	case "SUM":
		*e = AlgorithmNameGeoMosaicEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AlgorithmNameGeoMosaicEnum: %v", v)
	}
}
