/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class CloudOutComputeForecastSummary {
    /**
     * The cost of running a compute instance. The list contains up to forecastPeriodInGranularityUnit values, one for each granularity. For example, for a 3-year forecast period with a granularity of 'year', the list contains 3 values, the first value for the first year, the second value for the second year, and the third value for the third year.
     */
    @JsonProperty("computeCostInUSD")
    public Long[] computeCostInUSD;

    public CloudOutComputeForecastSummary withComputeCostInUSD(Long[] computeCostInUSD) {
        this.computeCostInUSD = computeCostInUSD;
        return this;
    }
    
    /**
     * Number of hours for which a compute instance is used. The list contains up to forecastPeriodInGranularityUnit values, one for each granularity. For example, for a 3-year forecast period with a granularity of 'year', the list contains 3 values, the first value for the first year, the second value for the second year, and the third value for the third year.
     */
    @JsonProperty("computeDurationInHrs")
    public Long[] computeDurationInHrs;

    public CloudOutComputeForecastSummary withComputeDurationInHrs(Long[] computeDurationInHrs) {
        this.computeDurationInHrs = computeDurationInHrs;
        return this;
    }
    
    public CloudOutComputeForecastSummary(@JsonProperty("computeCostInUSD") Long[] computeCostInUSD, @JsonProperty("computeDurationInHrs") Long[] computeDurationInHrs) {
        this.computeCostInUSD = computeCostInUSD;
        this.computeDurationInHrs = computeDurationInHrs;
  }
}
