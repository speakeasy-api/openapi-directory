"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import periosversioninfo as shared_periosversioninfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class IosModelFormFactorEnum(str, Enum):
    r"""Whether this device is a phone, tablet, wearable, etc."""
    DEVICE_FORM_FACTOR_UNSPECIFIED = 'DEVICE_FORM_FACTOR_UNSPECIFIED'
    PHONE = 'PHONE'
    TABLET = 'TABLET'
    WEARABLE = 'WEARABLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IosModel:
    r"""A description of an iOS device tests may be run on."""
    
    device_capabilities: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceCapabilities'), 'exclude': lambda f: f is None }})
    r"""Device capabilities. Copied from https://developer.apple.com/library/archive/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/DeviceCompatibilityMatrix/DeviceCompatibilityMatrix.html"""  
    form_factor: Optional[IosModelFormFactorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formFactor'), 'exclude': lambda f: f is None }})
    r"""Whether this device is a phone, tablet, wearable, etc."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique opaque id for this model. Use this for invoking the TestExecutionService."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The human-readable name for this device model. Examples: \\"iPhone 4s\\", \\"iPad Mini 2\\"."""  
    per_version_info: Optional[list[shared_periosversioninfo.PerIosVersionInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('perVersionInfo'), 'exclude': lambda f: f is None }})
    r"""Version-specific information of an iOS model."""  
    screen_density: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('screenDensity'), 'exclude': lambda f: f is None }})
    r"""Screen density in DPI."""  
    screen_x: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('screenX'), 'exclude': lambda f: f is None }})
    r"""Screen size in the horizontal (X) dimension measured in pixels."""  
    screen_y: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('screenY'), 'exclude': lambda f: f is None }})
    r"""Screen size in the vertical (Y) dimension measured in pixels."""  
    supported_version_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportedVersionIds'), 'exclude': lambda f: f is None }})
    r"""The set of iOS major software versions this device supports."""  
    tags: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})
    r"""Tags for this dimension. Examples: \\"default\\", \\"preview\\", \\"deprecated\\"."""  
    