// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ReposAddCollaboratorRequestBody struct {
	// The permission to grant the collaborator. **Only valid on organization-owned repositories.**
	Permission *string `json:"permission,omitempty"`
}

type ReposAddCollaboratorRequest struct {
	RequestBody *ReposAddCollaboratorRequestBody `request:"mediaType=application/json"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
	// The handle for the GitHub user account.
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

type ReposAddCollaboratorResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Forbidden
	BasicError *shared.BasicError
	// Response when a new invitation is created
	RepositoryInvitation *shared.RepositoryInvitation
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
