// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DetachObjectHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where objects reside. For more information, see <a>arns</a>.
	XAmzDataPartition string `header:"style=simple,explode=false,name=x-amz-data-partition"`
}

// DetachObjectRequestBodyParentReference - The reference that identifies an object.
type DetachObjectRequestBodyParentReference struct {
	Selector *string `json:"Selector,omitempty"`
}

type DetachObjectRequestBody struct {
	// The link name associated with the object that needs to be detached.
	LinkName string `json:"LinkName"`
	// The reference that identifies an object.
	ParentReference DetachObjectRequestBodyParentReference `json:"ParentReference"`
}

type DetachObjectRequest struct {
	Headers DetachObjectHeaders
	Request DetachObjectRequestBody `request:"mediaType=application/json"`
}

type DetachObjectResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	DetachObjectResponse *shared.DetachObjectResponse
	// DirectoryNotEnabledException
	DirectoryNotEnabledException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidArnException
	InvalidArnException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotNodeException
	NotNodeException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// RetryableConflictException
	RetryableConflictException interface{}
	// ValidationException
	ValidationException interface{}
}
