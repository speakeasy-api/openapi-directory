/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Projects {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Projects(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Initialize Identity Platform for a Cloud project. Identity Platform is an end-to-end authentication system for third-party users to access your apps and services. These could include mobile/web apps, games, APIs and beyond. This is the publicly available variant of EnableIdentityPlatform that is only available to billing-enabled projects.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsIdentityPlatformInitializeAuthResponse identitytoolkitProjectsIdentityPlatformInitializeAuth(org.openapis.openapi.models.operations.IdentitytoolkitProjectsIdentityPlatformInitializeAuthRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsIdentityPlatformInitializeAuthSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsIdentityPlatformInitializeAuthRequest.class, baseUrl, "/v2/{project}/identityPlatform:initializeAuth", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsIdentityPlatformInitializeAuthRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsIdentityPlatformInitializeAuthResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsIdentityPlatformInitializeAuthResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleCloudIdentitytoolkitAdminV2InitializeIdentityPlatformResponse = out;
            }
        }

        return res;
    }

    /**
     * Create a tenant. Requires write permission on the Agent project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsCreateResponse identitytoolkitProjectsTenantsCreate(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsCreateRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsCreateRequest.class, baseUrl, "/v2/{parent}/tenants", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIdentitytoolkitAdminV2TenantInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsCreateResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsCreateResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2Tenant = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2Tenant out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2Tenant.class);
                res.googleCloudIdentitytoolkitAdminV2Tenant = out;
            }
        }

        return res;
    }

    /**
     * Create a default supported Idp configuration for an Identity Toolkit project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreateResponse identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreate(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreateRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreateRequest.class, baseUrl, "/v2/{parent}/defaultSupportedIdpConfigs", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreateResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsCreateResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig.class);
                res.googleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig = out;
            }
        }

        return res;
    }

    /**
     * List all default supported Idp configurations for an Identity Toolkit project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsListResponse identitytoolkitProjectsTenantsDefaultSupportedIdpConfigsList(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsListRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsListRequest.class, baseUrl, "/v2/{parent}/defaultSupportedIdpConfigs", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsListResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsDefaultSupportedIdpConfigsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse.class);
                res.googleCloudIdentitytoolkitAdminV2ListDefaultSupportedIdpConfigsResponse = out;
            }
        }

        return res;
    }

    /**
     * Gets the access control policy for a resource. An error is returned if the resource does not exist. An empty policy is returned if the resource exists but does not have a policy set on it. Caller must have the right Google IAM permission on the resource.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsGetIamPolicyResponse identitytoolkitProjectsTenantsGetIamPolicy(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsGetIamPolicyRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsGetIamPolicySecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsGetIamPolicyRequest.class, baseUrl, "/v2/{resource}:getIamPolicy", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleIamV1GetIamPolicyRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsGetIamPolicyRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsGetIamPolicyResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsGetIamPolicyResponse(contentType, httpRes.statusCode()) {{
            googleIamV1Policy = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleIamV1Policy out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleIamV1Policy.class);
                res.googleIamV1Policy = out;
            }
        }

        return res;
    }

    /**
     * Create an inbound SAML configuration for an Identity Toolkit project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsCreateResponse identitytoolkitProjectsTenantsInboundSamlConfigsCreate(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsCreateRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsCreateRequest.class, baseUrl, "/v2/{parent}/inboundSamlConfigs", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIdentitytoolkitAdminV2InboundSamlConfigInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsCreateResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsCreateResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2InboundSamlConfig = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2InboundSamlConfig.class);
                res.googleCloudIdentitytoolkitAdminV2InboundSamlConfig = out;
            }
        }

        return res;
    }

    /**
     * List all inbound SAML configurations for an Identity Toolkit project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsListResponse identitytoolkitProjectsTenantsInboundSamlConfigsList(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsListRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsListRequest.class, baseUrl, "/v2/{parent}/inboundSamlConfigs", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsListResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsInboundSamlConfigsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse.class);
                res.googleCloudIdentitytoolkitAdminV2ListInboundSamlConfigsResponse = out;
            }
        }

        return res;
    }

    /**
     * List tenants under the given agent project. Requires read permission on the Agent project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsListResponse identitytoolkitProjectsTenantsList(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsListRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsListRequest.class, baseUrl, "/v2/{parent}/tenants", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsListResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2ListTenantsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2ListTenantsResponse.class);
                res.googleCloudIdentitytoolkitAdminV2ListTenantsResponse = out;
            }
        }

        return res;
    }

    /**
     * Create an Oidc Idp configuration for an Identity Toolkit project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsCreateResponse identitytoolkitProjectsTenantsOauthIdpConfigsCreate(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsCreateRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsCreateRequest.class, baseUrl, "/v2/{parent}/oauthIdpConfigs", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIdentitytoolkitAdminV2OAuthIdpConfig", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsCreateResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsCreateResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2OAuthIdpConfig = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.class);
                res.googleCloudIdentitytoolkitAdminV2OAuthIdpConfig = out;
            }
        }

        return res;
    }

    /**
     * Delete an Oidc Idp configuration for an Identity Toolkit project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsDeleteResponse identitytoolkitProjectsTenantsOauthIdpConfigsDelete(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsDeleteRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsDeleteRequest.class, baseUrl, "/v2/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsDeleteResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsDeleteResponse(contentType, httpRes.statusCode()) {{
            googleProtobufEmpty = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Retrieve an Oidc Idp configuration for an Identity Toolkit project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsGetResponse identitytoolkitProjectsTenantsOauthIdpConfigsGet(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsGetRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsGetRequest.class, baseUrl, "/v2/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsGetRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsGetResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsGetResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2OAuthIdpConfig = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.class);
                res.googleCloudIdentitytoolkitAdminV2OAuthIdpConfig = out;
            }
        }

        return res;
    }

    /**
     * List all Oidc Idp configurations for an Identity Toolkit project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsListResponse identitytoolkitProjectsTenantsOauthIdpConfigsList(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsListRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsListRequest.class, baseUrl, "/v2/{parent}/oauthIdpConfigs", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsListResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse.class);
                res.googleCloudIdentitytoolkitAdminV2ListOAuthIdpConfigsResponse = out;
            }
        }

        return res;
    }

    /**
     * Update an Oidc Idp configuration for an Identity Toolkit project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsPatchResponse identitytoolkitProjectsTenantsOauthIdpConfigsPatch(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsPatchRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsPatchSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsPatchRequest.class, baseUrl, "/v2/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIdentitytoolkitAdminV2OAuthIdpConfig", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsPatchRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsPatchResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsOauthIdpConfigsPatchResponse(contentType, httpRes.statusCode()) {{
            googleCloudIdentitytoolkitAdminV2OAuthIdpConfig = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIdentitytoolkitAdminV2OAuthIdpConfig.class);
                res.googleCloudIdentitytoolkitAdminV2OAuthIdpConfig = out;
            }
        }

        return res;
    }

    /**
     * Sets the access control policy for a resource. If the policy exists, it is replaced. Caller must have the right Google IAM permission on the resource.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsSetIamPolicyResponse identitytoolkitProjectsTenantsSetIamPolicy(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsSetIamPolicyRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsSetIamPolicySecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsSetIamPolicyRequest.class, baseUrl, "/v2/{resource}:setIamPolicy", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleIamV1SetIamPolicyRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsSetIamPolicyRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsSetIamPolicyResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsSetIamPolicyResponse(contentType, httpRes.statusCode()) {{
            googleIamV1Policy = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleIamV1Policy out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleIamV1Policy.class);
                res.googleIamV1Policy = out;
            }
        }

        return res;
    }

    /**
     * Returns the caller's permissions on a resource. An error is returned if the resource does not exist. A caller is not required to have Google IAM permission to make this request.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsTestIamPermissionsResponse identitytoolkitProjectsTenantsTestIamPermissions(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsTestIamPermissionsRequest request, org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsTestIamPermissionsSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsTestIamPermissionsRequest.class, baseUrl, "/v2/{resource}:testIamPermissions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleIamV1TestIamPermissionsRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsTestIamPermissionsRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsTestIamPermissionsResponse res = new org.openapis.openapi.models.operations.IdentitytoolkitProjectsTenantsTestIamPermissionsResponse(contentType, httpRes.statusCode()) {{
            googleIamV1TestIamPermissionsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleIamV1TestIamPermissionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleIamV1TestIamPermissionsResponse.class);
                res.googleIamV1TestIamPermissionsResponse = out;
            }
        }

        return res;
    }
}