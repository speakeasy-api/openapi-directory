"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import groupidentity as shared_groupidentity
from ..shared import iamroleidentity as shared_iamroleidentity
from ..shared import iamuseridentity as shared_iamuseridentity
from ..shared import useridentity as shared_useridentity
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Identity:
    r"""<p>Contains an identity that can access an IoT SiteWise Monitor resource.</p> <note> <p>Currently, you can't use Amazon Web Services APIs to retrieve IAM Identity Center identity IDs. You can find the IAM Identity Center identity IDs in the URL of user and group pages in the <a href=\\"https://console.aws.amazon.com/singlesignon\\">IAM Identity Center console</a>.</p> </note>"""
    
    group: Optional[shared_groupidentity.GroupIdentity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group'), 'exclude': lambda f: f is None }})  
    iam_role: Optional[shared_iamroleidentity.IAMRoleIdentity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iamRole'), 'exclude': lambda f: f is None }})  
    iam_user: Optional[shared_iamuseridentity.IAMUserIdentity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iamUser'), 'exclude': lambda f: f is None }})  
    user: Optional[shared_useridentity.UserIdentity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user'), 'exclude': lambda f: f is None }})  
    