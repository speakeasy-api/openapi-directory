<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * WaitAndContinueSpecification - Specifies the prompts that Amazon Lex uses while a bot is waiting for customer input. 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class WaitAndContinueSpecification
{
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('continueResponse')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ResponseSpecification')]
    public ResponseSpecification $continueResponse;
    
	#[\JMS\Serializer\Annotation\SerializedName('stillWaitingResponse')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StillWaitingResponseSpecification')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StillWaitingResponseSpecification $stillWaitingResponse = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('waitingResponse')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ResponseSpecification')]
    public ResponseSpecification $waitingResponse;
    
	public function __construct()
	{
		$this->active = null;
		$this->continueResponse = new \OpenAPI\OpenAPI\Models\Shared\ResponseSpecification();
		$this->stillWaitingResponse = null;
		$this->waitingResponse = new \OpenAPI\OpenAPI\Models\Shared\ResponseSpecification();
	}
}
