/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PricingRuleScopeEnum } from "./pricingrulescopeenum";
import { PricingRuleTypeEnum } from "./pricingruletypeenum";
import { Tiering } from "./tiering";
import { Expose, Type } from "class-transformer";

/**
 *  A representation of a pricing rule.
 */
export class PricingRuleListElement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociatedPricingPlanCount" })
  associatedPricingPlanCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "BillingEntity" })
  billingEntity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  creationTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  lastModifiedTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ModifierPercentage" })
  modifierPercentage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Operation" })
  operation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Scope" })
  scope?: PricingRuleScopeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Service" })
  service?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Tiering" })
  @Type(() => Tiering)
  tiering?: Tiering;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: PricingRuleTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UsageType" })
  usageType?: string;
}
