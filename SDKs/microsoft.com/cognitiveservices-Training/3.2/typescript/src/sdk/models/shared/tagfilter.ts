/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Model that query for counting of images whose suggested tags match given tags and their probability are greater than or equal to the given threshold.
 */
export class TagFilter extends SpeakeasyBase {
  /**
   * Existing TagIds in project to get suggested tags count for.
   */
  @SpeakeasyMetadata({ data: "form, name=tagIds" })
  @Expose({ name: "tagIds" })
  tagIds?: string[];

  /**
   * Confidence threshold to filter suggested tags on.
   */
  @SpeakeasyMetadata({ data: "form, name=threshold" })
  @Expose({ name: "threshold" })
  threshold?: number;
}
