/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class BanRequest extends SpeakeasyBase {
  /**
   * Represents chat user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "banned_by" })
  bannedBy?: Record<string, any>;

  /**
   * User ID who issued a ban
   */
  @SpeakeasyMetadata()
  @Expose({ name: "banned_by_id" })
  bannedById?: string;

  /**
   * Channel ID to ban user in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Whether to perform IP ban or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ip_ban" })
  ipBan?: boolean;

  /**
   * Ban reason
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  /**
   * Whether to perform shadow ban or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shadow" })
  shadow?: boolean;

  /**
   * ID of user to ban
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_user_id" })
  targetUserId: string;

  /**
   * Timeout of ban in minutes. User will be unbanned after this period of time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeout" })
  timeout?: number;

  /**
   * Channel type to ban user in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Represents chat user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;
}
