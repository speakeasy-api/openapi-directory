// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RunTaskXAmzTargetEnum
type RunTaskXAmzTargetEnum string

const (
	RunTaskXAmzTargetEnumAmazonEc2ContainerServiceV20141113RunTask RunTaskXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.RunTask"
)

func (e *RunTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerServiceV20141113.RunTask":
		*e = RunTaskXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RunTaskXAmzTargetEnum: %s", s)
	}
}

type RunTaskHeaders struct {
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        RunTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RunTaskRequest struct {
	Headers RunTaskHeaders
	Request shared.RunTaskRequest `request:"mediaType=application/json"`
}

type RunTaskResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// BlockedException
	BlockedException interface{}
	// ClientException
	ClientException interface{}
	// ClusterNotFoundException
	ClusterNotFoundException interface{}
	ContentType              string
	// InvalidParameterException
	InvalidParameterException interface{}
	// PlatformTaskDefinitionIncompatibilityException
	PlatformTaskDefinitionIncompatibilityException interface{}
	// PlatformUnknownException
	PlatformUnknownException interface{}
	// Success
	RunTaskResponse *shared.RunTaskResponse
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
	// UnsupportedFeatureException
	UnsupportedFeatureException interface{}
}
