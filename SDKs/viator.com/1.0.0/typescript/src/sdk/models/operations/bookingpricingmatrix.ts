/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class BookingPricingmatrixRequestBody extends SpeakeasyBase {
  /**
   * **date** for which to retrieve pricing data  (must be in the future) (**note**: this is an optional parameter for normal products; if the date is *not* provided then the nearest available date is determined)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bookingDate" })
  bookingDate?: string;

  /**
   * **currency code** of the currency in which to display pricing information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencyCode" })
  currencyCode?: string;

  /**
   * **unique alphanumeric identifier** of the product for which to retrieve the pricing matrix
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCode" })
  productCode?: string;

  /**
   * **alphanumeric identifier** of the product tour grade for which to retrieve the pricing matrix
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tourGradeCode" })
  tourGradeCode?: string;
}

export class BookingPricingmatrixRequest extends SpeakeasyBase {
  /**
   * Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Accept-Language",
  })
  acceptLanguage: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: BookingPricingmatrixRequestBody;
}

export class BookingPricingmatrix200ApplicationJSONDataAgeBandPricesPrices extends SpeakeasyBase {
  /**
   * **currency code** for the currency in which pricing is displayed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencyCode" })
  currencyCode?: string;

  /**
   * **numeric merchant net rate** for *this* age band
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantNetPrice" })
  merchantNetPrice?: number;

  /**
   * **currency-formatted merchant net rate** for *this* age band
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantNetPriceFormatted" })
  merchantNetPriceFormatted?: string;

  /**
   * **minimum number of travelers** that this pricing schedule can be applied to; e.g., '3' means that the price is for a group of three people or more
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minNoOfTravellersRequiredForPrice" })
  minNoOfTravellersRequiredForPrice?: number;

  /**
   * **numeric suggested retail price** for *this* age band
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * **currency-formatted suggested retail price** for *this* age band and the suggested sell price
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceFormatted" })
  priceFormatted?: string;

  /**
   * **sort order** for *this* pricing object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: string;
}

export class BookingPricingmatrix200ApplicationJSONDataAgeBandPrices extends SpeakeasyBase {
  /**
   * **unique numeric identifier** for the age band
   *
   * @remarks
   * - See: [Working with age bands](#section/Appendices/Working-with-age-bands)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bandId" })
  bandId?: number;

  /**
   * **maximum number of travelers** that this pricing schedule can be applied to
   *
   * @remarks
   * - use this field to specify the largest group size you are interested in making a booking for
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximumCountRequired" })
  maximumCountRequired?: number;

  /**
   * **minimum number of travelers** that this pricing schedule can be applied to
   *
   * @remarks
   * - use this field to specify the smallest group size you are interested in making a booking for
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minimumCountRequired" })
  minimumCountRequired?: number;

  /**
   * **array** of prices available for *this* age band (based on the min and max count required)
   */
  @SpeakeasyMetadata({
    elemType: BookingPricingmatrix200ApplicationJSONDataAgeBandPricesPrices,
  })
  @Expose({ name: "prices" })
  @Type(() => BookingPricingmatrix200ApplicationJSONDataAgeBandPricesPrices)
  prices?: BookingPricingmatrix200ApplicationJSONDataAgeBandPricesPrices[];

  /**
   * **sort order** for *this* age band
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: number;
}

export class BookingPricingmatrix200ApplicationJSONData extends SpeakeasyBase {
  /**
   * **array** of age band pricing objects
   */
  @SpeakeasyMetadata({
    elemType: BookingPricingmatrix200ApplicationJSONDataAgeBandPrices,
  })
  @Expose({ name: "ageBandPrices" })
  @Type(() => BookingPricingmatrix200ApplicationJSONDataAgeBandPrices)
  ageBandPrices?: BookingPricingmatrix200ApplicationJSONDataAgeBandPrices[];

  /**
   * **date** for which to retrieve pricing information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bookingDate" })
  bookingDate?: string;

  /**
   * **unit** in which pricing is calculated (currently, only 'per person' is supported)
   *
   * @remarks
   * - see [Understanding the pricingUnit field](#section/Using-the-API/Understanding-the-pricingUnit-field) for more information
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pricingUnit" })
  pricingUnit?: string;

  /**
   * **sort order** for *this* response object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: number;
}

/**
 * Success
 */
export class BookingPricingmatrix200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: BookingPricingmatrix200ApplicationJSONData })
  @Expose({ name: "data" })
  @Type(() => BookingPricingmatrix200ApplicationJSONData)
  data?: BookingPricingmatrix200ApplicationJSONData[];

  /**
   * **timestamp** of *this* response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateStamp" })
  dateStamp?: string;

  /**
   * **array** of error codes pertaining to *this* error
   *
   * @remarks
   * - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCodes" })
  errorCodes?: string[];

  /**
   * **array** of error message strings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: any[];

  /**
   * **array** of error message strings in plain text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessageText" })
  errorMessageText?: string;

  /**
   * **name** of *this* type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorName" })
  errorName?: string;

  /**
   * **reference number** of *this* error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorReference" })
  errorReference?: string;

  /**
   * **code** specifying the type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorType" })
  errorType?: string;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraInfo" })
  extraInfo?: Record<string, any>;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraObject" })
  extraObject?: Record<string, any>;

  /**
   * **boolean indicator** of *this* request's outcome
   *
   * @remarks
   * - `true`: the request was successful with no errors
   * - `false`: an error was encountered
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * **number** of results available for *this* service
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;

  /**
   * **unique numeric id** of the server that processed *this* request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmid" })
  vmid?: string;
}

export class BookingPricingmatrixResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  bookingPricingmatrix200ApplicationJSONObject?: BookingPricingmatrix200ApplicationJSON;
}
