/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Configuration data for integration workflow.
 */
export class CreateIntegrationWorkflowRequestBodyIntegrationConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AppflowIntegration" })
  @Type(() => shared.AppflowIntegration)
  appflowIntegration?: shared.AppflowIntegration;
}

/**
 * The type of workflow. The only supported value is APPFLOW_INTEGRATION.
 */
export enum CreateIntegrationWorkflowRequestBodyWorkflowTypeEnum {
  AppflowIntegration = "APPFLOW_INTEGRATION",
}

export class CreateIntegrationWorkflowRequestBody extends SpeakeasyBase {
  /**
   * Configuration data for integration workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IntegrationConfig" })
  @Type(() => CreateIntegrationWorkflowRequestBodyIntegrationConfig)
  integrationConfig: CreateIntegrationWorkflowRequestBodyIntegrationConfig;

  /**
   * The name of the profile object type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ObjectTypeName" })
  objectTypeName: string;

  /**
   * The Amazon Resource Name (ARN) of the IAM role. Customer Profiles assumes this role to create resources on your behalf as part of workflow execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn: string;

  /**
   * The tags used to organize, track, or control access for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;

  /**
   * The type of workflow. The only supported value is APPFLOW_INTEGRATION.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "WorkflowType" })
  workflowType: CreateIntegrationWorkflowRequestBodyWorkflowTypeEnum;
}

export class CreateIntegrationWorkflowRequest extends SpeakeasyBase {
  /**
   * The unique name of the domain.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=DomainName",
  })
  domainName: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateIntegrationWorkflowRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateIntegrationWorkflowResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createIntegrationWorkflowResponse?: shared.CreateIntegrationWorkflowResponse;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;
}
