// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StepStateEnum string

const (
	StepStateEnumPending       StepStateEnum = "PENDING"
	StepStateEnumCancelPending StepStateEnum = "CANCEL_PENDING"
	StepStateEnumRunning       StepStateEnum = "RUNNING"
	StepStateEnumCompleted     StepStateEnum = "COMPLETED"
	StepStateEnumCancelled     StepStateEnum = "CANCELLED"
	StepStateEnumFailed        StepStateEnum = "FAILED"
	StepStateEnumInterrupted   StepStateEnum = "INTERRUPTED"
)

func (e StepStateEnum) ToPointer() *StepStateEnum {
	return &e
}

func (e *StepStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "CANCEL_PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		fallthrough
	case "INTERRUPTED":
		*e = StepStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StepStateEnum: %v", v)
	}
}
