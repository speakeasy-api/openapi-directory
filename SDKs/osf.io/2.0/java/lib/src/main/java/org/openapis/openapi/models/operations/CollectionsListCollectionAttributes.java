/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;

/**
 * CollectionsListCollectionAttributes - The properties of the collection.
 */
public class CollectionsListCollectionAttributes {
    /**
     * This attribute indicates if a collection is being used as part of the bookmarking feature that allows each user to create a personal collection.
     */
    
    public Boolean bookmarks;
    public CollectionsListCollectionAttributes withBookmarks(Boolean bookmarks) {
        this.bookmarks = bookmarks;
        return this;
    }
    
    /**
     * A list of the acceptable entity `collected_type` metadata options acceptable for entities in the a collection. This indicates the collected types of entities within a collection.
     */
    
    public String[] collectedTypeChoices;
    public CollectionsListCollectionAttributes withCollectedTypeChoices(String[] collectedTypeChoices) {
        this.collectedTypeChoices = collectedTypeChoices;
        return this;
    }
    
    /**
     * The time at which the collection was created, as an iso8601 formatted timestamp.
     */
    
    public OffsetDateTime dateCreated;
    public CollectionsListCollectionAttributes withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The time at which the collection was last modified, as an iso8601 formatted timestamp.
     */
    
    public OffsetDateTime dateModified;
    public CollectionsListCollectionAttributes withDateModified(OffsetDateTime dateModified) {
        this.dateModified = dateModified;
        return this;
    }
    
    /**
     * ???
     */
    
    public Boolean isPromoted;
    public CollectionsListCollectionAttributes withIsPromoted(Boolean isPromoted) {
        this.isPromoted = isPromoted;
        return this;
    }
    
    /**
     * This attribute indicates if a collection is viewable to a user with no special permissions.
     */
    
    public Boolean isPublic;
    public CollectionsListCollectionAttributes withIsPublic(Boolean isPublic) {
        this.isPublic = isPublic;
        return this;
    }
    
    /**
     * A list of the acceptable entity `issue` metadata options acceptable for entities in the a collection.  This indicates what issues exist of a multi-issue collection.
     */
    
    public String[] issueChoices;
    public CollectionsListCollectionAttributes withIssueChoices(String[] issueChoices) {
        this.issueChoices = issueChoices;
        return this;
    }
    
    /**
     * A list of the acceptable entity `program_area` metadata options acceptable for entities in the a collection.  This indicates what program areas a collection is composed of .
     */
    
    public String[] programAreaChoices;
    public CollectionsListCollectionAttributes withProgramAreaChoices(String[] programAreaChoices) {
        this.programAreaChoices = programAreaChoices;
        return this;
    }
    
    /**
     * A list of the acceptable entity `status` metadata options acceptable for entities in the a collection. This indicates the status of a entity within a collection.
     */
    
    public String[] statusChoices;
    public CollectionsListCollectionAttributes withStatusChoices(String[] statusChoices) {
        this.statusChoices = statusChoices;
        return this;
    }
    
    /**
     * The title of the collection.
     */
    
    public String title;
    public CollectionsListCollectionAttributes withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * A list of the acceptable entity `volume` metadata options acceptable for entities in the a collection.  This indicates what volumes exist of a multi-volume collection.
     */
    
    public String[] volumeChoices;
    public CollectionsListCollectionAttributes withVolumeChoices(String[] volumeChoices) {
        this.volumeChoices = volumeChoices;
        return this;
    }
    
}
