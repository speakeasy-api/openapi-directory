/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreateSipDomainCreateSipDomainRequest {
    /**
     * The SID of the BYOC Trunk(Bring Your Own Carrier) resource that the Sip Domain will be associated with.
     */
    @SpeakeasyMetadata("form:name=ByocTrunkSid")
    public String byocTrunkSid;
    public CreateSipDomainCreateSipDomainRequest withByocTrunkSid(String byocTrunkSid) {
        this.byocTrunkSid = byocTrunkSid;
        return this;
    }
    
    /**
     * The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and "-" and must end with `sip.twilio.com`.
     */
    @SpeakeasyMetadata("form:name=DomainName")
    public String domainName;
    public CreateSipDomainCreateSipDomainRequest withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }
    
    /**
     * Whether an emergency caller sid is configured for the domain. If present, this phone number will be used as the callback for the emergency call.
     */
    @SpeakeasyMetadata("form:name=EmergencyCallerSid")
    public String emergencyCallerSid;
    public CreateSipDomainCreateSipDomainRequest withEmergencyCallerSid(String emergencyCallerSid) {
        this.emergencyCallerSid = emergencyCallerSid;
        return this;
    }
    
    /**
     * Whether emergency calling is enabled for the domain. If enabled, allows emergency calls on the domain from phone numbers with validated addresses.
     */
    @SpeakeasyMetadata("form:name=EmergencyCallingEnabled")
    public Boolean emergencyCallingEnabled;
    public CreateSipDomainCreateSipDomainRequest withEmergencyCallingEnabled(Boolean emergencyCallingEnabled) {
        this.emergencyCallingEnabled = emergencyCallingEnabled;
        return this;
    }
    
    /**
     * A descriptive string that you created to describe the resource. It can be up to 64 characters long.
     */
    @SpeakeasyMetadata("form:name=FriendlyName")
    public String friendlyName;
    public CreateSipDomainCreateSipDomainRequest withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * Whether secure SIP is enabled for the domain. If enabled, TLS will be enforced and SRTP will be negotiated on all incoming calls to this sip domain.
     */
    @SpeakeasyMetadata("form:name=Secure")
    public Boolean secure;
    public CreateSipDomainCreateSipDomainRequest withSecure(Boolean secure) {
        this.secure = secure;
        return this;
    }
    
    /**
     * Whether to allow SIP Endpoints to register with the domain to receive calls. Can be `true` or `false`. `true` allows SIP Endpoints to register with the domain to receive calls, `false` does not.
     */
    @SpeakeasyMetadata("form:name=SipRegistration")
    public Boolean sipRegistration;
    public CreateSipDomainCreateSipDomainRequest withSipRegistration(Boolean sipRegistration) {
        this.sipRegistration = sipRegistration;
        return this;
    }
    
    /**
     * The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
     */
    @SpeakeasyMetadata("form:name=VoiceFallbackMethod")
    public CreateSipDomainCreateSipDomainRequestVoiceFallbackMethodEnum voiceFallbackMethod;
    public CreateSipDomainCreateSipDomainRequest withVoiceFallbackMethod(CreateSipDomainCreateSipDomainRequestVoiceFallbackMethodEnum voiceFallbackMethod) {
        this.voiceFallbackMethod = voiceFallbackMethod;
        return this;
    }
    
    /**
     * The URL that we should call when an error occurs while retrieving or executing the TwiML from `voice_url`.
     */
    @SpeakeasyMetadata("form:name=VoiceFallbackUrl")
    public String voiceFallbackUrl;
    public CreateSipDomainCreateSipDomainRequest withVoiceFallbackUrl(String voiceFallbackUrl) {
        this.voiceFallbackUrl = voiceFallbackUrl;
        return this;
    }
    
    /**
     * The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.
     */
    @SpeakeasyMetadata("form:name=VoiceMethod")
    public CreateSipDomainCreateSipDomainRequestVoiceMethodEnum voiceMethod;
    public CreateSipDomainCreateSipDomainRequest withVoiceMethod(CreateSipDomainCreateSipDomainRequestVoiceMethodEnum voiceMethod) {
        this.voiceMethod = voiceMethod;
        return this;
    }
    
    /**
     * The HTTP method we should use to call `voice_status_callback_url`. Can be: `GET` or `POST`.
     */
    @SpeakeasyMetadata("form:name=VoiceStatusCallbackMethod")
    public CreateSipDomainCreateSipDomainRequestVoiceStatusCallbackMethodEnum voiceStatusCallbackMethod;
    public CreateSipDomainCreateSipDomainRequest withVoiceStatusCallbackMethod(CreateSipDomainCreateSipDomainRequestVoiceStatusCallbackMethodEnum voiceStatusCallbackMethod) {
        this.voiceStatusCallbackMethod = voiceStatusCallbackMethod;
        return this;
    }
    
    /**
     * The URL that we should call to pass status parameters (such as call ended) to your application.
     */
    @SpeakeasyMetadata("form:name=VoiceStatusCallbackUrl")
    public String voiceStatusCallbackUrl;
    public CreateSipDomainCreateSipDomainRequest withVoiceStatusCallbackUrl(String voiceStatusCallbackUrl) {
        this.voiceStatusCallbackUrl = voiceStatusCallbackUrl;
        return this;
    }
    
    /**
     * The URL we should when the domain receives a call.
     */
    @SpeakeasyMetadata("form:name=VoiceUrl")
    public String voiceUrl;
    public CreateSipDomainCreateSipDomainRequest withVoiceUrl(String voiceUrl) {
        this.voiceUrl = voiceUrl;
        return this;
    }
    
}
