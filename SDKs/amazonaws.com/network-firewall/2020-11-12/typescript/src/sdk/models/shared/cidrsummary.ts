/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { IPSetMetadata } from "./ipsetmetadata";
import { Expose, Transform } from "class-transformer";

/**
 * Summarizes the CIDR blocks used by the IP set references in a firewall. Network Firewall calculates the number of CIDRs by taking an aggregated count of all CIDRs used by the IP sets you are referencing.
 */
export class CIDRSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AvailableCIDRCount" })
  availableCIDRCount?: number;

  @SpeakeasyMetadata({ elemType: IPSetMetadata })
  @Expose({ name: "IPSetReferences" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, IPSetMetadata> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], IPSetMetadata);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  ipSetReferences?: Record<string, IPSetMetadata>;

  @SpeakeasyMetadata()
  @Expose({ name: "UtilizedCIDRCount" })
  utilizedCIDRCount?: number;
}
