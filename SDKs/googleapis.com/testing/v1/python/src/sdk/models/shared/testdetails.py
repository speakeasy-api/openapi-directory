"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestDetails:
    r"""Additional details about the progress of the running test."""
    
    error_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorMessage'), 'exclude': lambda f: f is None }})
    r"""Output only. If the TestState is ERROR, then this string will contain human-readable details about the error."""  
    progress_messages: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('progressMessages'), 'exclude': lambda f: f is None }})
    r"""Output only. Human-readable, detailed descriptions of the test's progress. For example: \\"Provisioning a device\\", \\"Starting Test\\". During the course of execution new data may be appended to the end of progress_messages."""  
    