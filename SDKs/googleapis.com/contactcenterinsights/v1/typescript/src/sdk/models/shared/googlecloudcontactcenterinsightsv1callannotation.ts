/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudContactcenterinsightsV1AnnotationBoundary } from "./googlecloudcontactcenterinsightsv1annotationboundary";
import { GoogleCloudContactcenterinsightsV1EntityMentionData } from "./googlecloudcontactcenterinsightsv1entitymentiondata";
import { GoogleCloudContactcenterinsightsV1IntentMatchData } from "./googlecloudcontactcenterinsightsv1intentmatchdata";
import { GoogleCloudContactcenterinsightsV1IssueMatchData } from "./googlecloudcontactcenterinsightsv1issuematchdata";
import { GoogleCloudContactcenterinsightsV1PhraseMatchData } from "./googlecloudcontactcenterinsightsv1phrasematchdata";
import { GoogleCloudContactcenterinsightsV1SentimentData } from "./googlecloudcontactcenterinsightsv1sentimentdata";
import { Expose, Type } from "class-transformer";

/**
 * A piece of metadata that applies to a window of a call.
 */
export class GoogleCloudContactcenterinsightsV1CallAnnotation extends SpeakeasyBase {
  /**
   * A point in a conversation that marks the start or the end of an annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotationEndBoundary" })
  @Type(() => GoogleCloudContactcenterinsightsV1AnnotationBoundary)
  annotationEndBoundary?: GoogleCloudContactcenterinsightsV1AnnotationBoundary;

  /**
   * A point in a conversation that marks the start or the end of an annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotationStartBoundary" })
  @Type(() => GoogleCloudContactcenterinsightsV1AnnotationBoundary)
  annotationStartBoundary?: GoogleCloudContactcenterinsightsV1AnnotationBoundary;

  /**
   * The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelTag" })
  channelTag?: number;

  /**
   * The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entityMentionData" })
  @Type(() => GoogleCloudContactcenterinsightsV1EntityMentionData)
  entityMentionData?: GoogleCloudContactcenterinsightsV1EntityMentionData;

  /**
   * The data for a hold annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "holdData" })
  holdData?: Record<string, any>;

  /**
   * The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "intentMatchData" })
  @Type(() => GoogleCloudContactcenterinsightsV1IntentMatchData)
  intentMatchData?: GoogleCloudContactcenterinsightsV1IntentMatchData;

  /**
   * The data for an interruption annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interruptionData" })
  interruptionData?: Record<string, any>;

  /**
   * The data for an issue match annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issueMatchData" })
  @Type(() => GoogleCloudContactcenterinsightsV1IssueMatchData)
  issueMatchData?: GoogleCloudContactcenterinsightsV1IssueMatchData;

  /**
   * The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phraseMatchData" })
  @Type(() => GoogleCloudContactcenterinsightsV1PhraseMatchData)
  phraseMatchData?: GoogleCloudContactcenterinsightsV1PhraseMatchData;

  /**
   * The data for a sentiment annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sentimentData" })
  @Type(() => GoogleCloudContactcenterinsightsV1SentimentData)
  sentimentData?: GoogleCloudContactcenterinsightsV1SentimentData;

  /**
   * The data for a silence annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "silenceData" })
  silenceData?: Record<string, any>;
}
