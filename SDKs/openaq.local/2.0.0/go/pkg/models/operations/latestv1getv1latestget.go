// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// LatestV1GetV1LatestGetOrderByLocationsOrderEnum - An enumeration.
type LatestV1GetV1LatestGetOrderByLocationsOrderEnum string

const (
	LatestV1GetV1LatestGetOrderByLocationsOrderEnumCity         LatestV1GetV1LatestGetOrderByLocationsOrderEnum = "city"
	LatestV1GetV1LatestGetOrderByLocationsOrderEnumCountry      LatestV1GetV1LatestGetOrderByLocationsOrderEnum = "country"
	LatestV1GetV1LatestGetOrderByLocationsOrderEnumLocation     LatestV1GetV1LatestGetOrderByLocationsOrderEnum = "location"
	LatestV1GetV1LatestGetOrderByLocationsOrderEnumSourceName   LatestV1GetV1LatestGetOrderByLocationsOrderEnum = "sourceName"
	LatestV1GetV1LatestGetOrderByLocationsOrderEnumFirstUpdated LatestV1GetV1LatestGetOrderByLocationsOrderEnum = "firstUpdated"
	LatestV1GetV1LatestGetOrderByLocationsOrderEnumLastUpdated  LatestV1GetV1LatestGetOrderByLocationsOrderEnum = "lastUpdated"
	LatestV1GetV1LatestGetOrderByLocationsOrderEnumCount        LatestV1GetV1LatestGetOrderByLocationsOrderEnum = "count"
	LatestV1GetV1LatestGetOrderByLocationsOrderEnumRandom       LatestV1GetV1LatestGetOrderByLocationsOrderEnum = "random"
)

func (e *LatestV1GetV1LatestGetOrderByLocationsOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "city":
		fallthrough
	case "country":
		fallthrough
	case "location":
		fallthrough
	case "sourceName":
		fallthrough
	case "firstUpdated":
		fallthrough
	case "lastUpdated":
		fallthrough
	case "count":
		fallthrough
	case "random":
		*e = LatestV1GetV1LatestGetOrderByLocationsOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LatestV1GetV1LatestGetOrderByLocationsOrderEnum: %s", s)
	}
}

// LatestV1GetV1LatestGetSortSortEnum - An enumeration.
type LatestV1GetV1LatestGetSortSortEnum string

const (
	LatestV1GetV1LatestGetSortSortEnumAsc  LatestV1GetV1LatestGetSortSortEnum = "asc"
	LatestV1GetV1LatestGetSortSortEnumDesc LatestV1GetV1LatestGetSortSortEnum = "desc"
)

func (e *LatestV1GetV1LatestGetSortSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = LatestV1GetV1LatestGetSortSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LatestV1GetV1LatestGetSortSortEnum: %s", s)
	}
}

type LatestV1GetV1LatestGetQueryParams struct {
	//         Limit results by a certain city or cities.
	//         (ex. ?city=Chicago or ?city=Chicago&city=Boston)
	//
	City        []string `queryParam:"style=form,explode=true,name=city"`
	Coordinates *string  `queryParam:"style=form,explode=true,name=coordinates"`
	//         Limit results by a certain country using two letter country code.
	//         (ex. ?country=US or ?country=US&country=MX)
	//
	Country []string `queryParam:"style=form,explode=true,name=country"`
	//         Limit results by a certain country using two letter country code.
	//         (ex. /US)
	//
	CountryID *string `queryParam:"style=form,explode=true,name=country_id"`
	DumpRaw   *bool   `queryParam:"style=form,explode=true,name=dumpRaw"`
	// Source entity type.
	Entity *shared.EntityTypesEnum `queryParam:"style=form,explode=true,name=entity"`
	HasGeo *bool                   `queryParam:"style=form,explode=true,name=has_geo"`
	// Data is the product of a previous analysis/aggregation and not raw measurements
	IsAnalysis *bool `queryParam:"style=form,explode=true,name=isAnalysis"`
	// Location is mobile
	IsMobile *bool `queryParam:"style=form,explode=true,name=isMobile"`
	// Change the number of results returned.
	Limit      *int64        `queryParam:"style=form,explode=true,name=limit"`
	Location   []interface{} `queryParam:"style=form,explode=true,name=location"`
	LocationID *int64        `queryParam:"style=form,explode=true,name=location_id"`
	// Manufacturer of Sensor
	ManufacturerName []string `queryParam:"style=form,explode=true,name=manufacturerName"`
	// Model Name of Sensor
	ModelName []string `queryParam:"style=form,explode=true,name=modelName"`
	Offset    *int64   `queryParam:"style=form,explode=true,name=offset"`
	// Order by a field
	OrderBy *LatestV1GetV1LatestGetOrderByLocationsOrderEnum `queryParam:"style=form,explode=true,name=order_by"`
	// Paginate through results.
	Page        *int64        `queryParam:"style=form,explode=true,name=page"`
	Parameter   []interface{} `queryParam:"style=form,explode=true,name=parameter"`
	ParameterID *int64        `queryParam:"style=form,explode=true,name=parameter_id"`
	Radius      *int64        `queryParam:"style=form,explode=true,name=radius"`
	// Type of Sensor
	SensorType *shared.SensorTypesEnum `queryParam:"style=form,explode=true,name=sensorType"`
	// Sort Direction
	Sort *LatestV1GetV1LatestGetSortSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Name of the data source
	SourceName []string `queryParam:"style=form,explode=true,name=sourceName"`
	Unit       []string `queryParam:"style=form,explode=true,name=unit"`
}

type LatestV1GetV1LatestGetRequest struct {
	QueryParams LatestV1GetV1LatestGetQueryParams
}

type LatestV1GetV1LatestGetResponse struct {
	ContentType string
	// Validation Error
	HTTPValidationError *shared.HTTPValidationError
	// Successful Response
	OpenAQResult *shared.OpenAQResult
	StatusCode   int
	RawResponse  *http.Response
}
