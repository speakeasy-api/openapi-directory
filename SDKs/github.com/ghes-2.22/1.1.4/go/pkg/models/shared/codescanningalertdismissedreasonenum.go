// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CodeScanningAlertDismissedReasonEnum - **Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.
type CodeScanningAlertDismissedReasonEnum string

const (
	CodeScanningAlertDismissedReasonEnumLessThanNilGreaterThan CodeScanningAlertDismissedReasonEnum = "<nil>"
	CodeScanningAlertDismissedReasonEnumFalsePositive          CodeScanningAlertDismissedReasonEnum = "false positive"
	CodeScanningAlertDismissedReasonEnumWonTFix                CodeScanningAlertDismissedReasonEnum = "won't fix"
	CodeScanningAlertDismissedReasonEnumUsedInTests            CodeScanningAlertDismissedReasonEnum = "used in tests"
)

func (e CodeScanningAlertDismissedReasonEnum) ToPointer() *CodeScanningAlertDismissedReasonEnum {
	return &e
}

func (e *CodeScanningAlertDismissedReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "<nil>":
		fallthrough
	case "false positive":
		fallthrough
	case "won't fix":
		fallthrough
	case "used in tests":
		*e = CodeScanningAlertDismissedReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CodeScanningAlertDismissedReasonEnum: %v", v)
	}
}
