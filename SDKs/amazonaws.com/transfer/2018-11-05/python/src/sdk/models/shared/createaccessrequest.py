"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import homedirectorymapentry as shared_homedirectorymapentry
from ..shared import homedirectorytype_enum as shared_homedirectorytype_enum
from ..shared import posixprofile as shared_posixprofile
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAccessRequest:
    
    external_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExternalId') }})  
    role: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Role') }})  
    server_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServerId') }})  
    home_directory: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeDirectory'), 'exclude': lambda f: f is None }})  
    home_directory_mappings: Optional[list[shared_homedirectorymapentry.HomeDirectoryMapEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeDirectoryMappings'), 'exclude': lambda f: f is None }})  
    home_directory_type: Optional[shared_homedirectorytype_enum.HomeDirectoryTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeDirectoryType'), 'exclude': lambda f: f is None }})  
    policy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Policy'), 'exclude': lambda f: f is None }})  
    posix_profile: Optional[shared_posixprofile.PosixProfile] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PosixProfile'), 'exclude': lambda f: f is None }})
    r"""The full POSIX identity, including user ID (<code>Uid</code>), group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that controls your users' access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems."""  
    