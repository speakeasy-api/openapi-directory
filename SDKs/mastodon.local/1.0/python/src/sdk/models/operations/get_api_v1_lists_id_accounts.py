"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import account as shared_account
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class GetAPIV1ListsIDAccountsSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetAPIV1ListsIDAccountsRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""ID of the list in the database"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Maximum number of results. Defaults to 40. Max 40. Set to 0 in order to get all accounts without pagination. Pagination is done with the HTTP Link header."""  
    max_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max_id', 'style': 'form', 'explode': True }})
    r"""Return results older than ID"""  
    since_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'since_id', 'style': 'form', 'explode': True }})
    r"""Return results newer than ID"""  
    

@dataclasses.dataclass
class GetAPIV1ListsIDAccountsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    accounts: Optional[list[shared_account.Account]] = dataclasses.field(default=None)
    r"""Success"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Invalid or missing Authorization header"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    