"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import guestdiaryparametersresultsmodel as shared_guestdiaryparametersresultsmodel
from typing import Optional


@dataclasses.dataclass
class DiaryControllerSearchGuestRequest:
    
    branch_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'branchID', 'style': 'simple', 'explode': False }})  
    count: int = dataclasses.field(metadata={'query_param': { 'field_name': 'count', 'style': 'form', 'explode': True }})  
    emailaddress: str = dataclasses.field(metadata={'query_param': { 'field_name': 'emailaddress', 'style': 'form', 'explode': True }})  
    forename: str = dataclasses.field(metadata={'query_param': { 'field_name': 'forename', 'style': 'form', 'explode': True }})  
    offset: int = dataclasses.field(metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})  
    shortname: str = dataclasses.field(metadata={'path_param': { 'field_name': 'shortname', 'style': 'simple', 'explode': False }})  
    surname: str = dataclasses.field(metadata={'query_param': { 'field_name': 'surname', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class DiaryControllerSearchGuestResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    guest_diary_parameters_results_model: Optional[shared_guestdiaryparametersresultsmodel.GuestDiaryParametersResultsModel] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    