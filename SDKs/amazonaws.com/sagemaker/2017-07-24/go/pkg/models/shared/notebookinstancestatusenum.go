// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NotebookInstanceStatusEnum string

const (
	NotebookInstanceStatusEnumPending   NotebookInstanceStatusEnum = "Pending"
	NotebookInstanceStatusEnumInService NotebookInstanceStatusEnum = "InService"
	NotebookInstanceStatusEnumStopping  NotebookInstanceStatusEnum = "Stopping"
	NotebookInstanceStatusEnumStopped   NotebookInstanceStatusEnum = "Stopped"
	NotebookInstanceStatusEnumFailed    NotebookInstanceStatusEnum = "Failed"
	NotebookInstanceStatusEnumDeleting  NotebookInstanceStatusEnum = "Deleting"
	NotebookInstanceStatusEnumUpdating  NotebookInstanceStatusEnum = "Updating"
)

func (e *NotebookInstanceStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "InService":
		fallthrough
	case "Stopping":
		fallthrough
	case "Stopped":
		fallthrough
	case "Failed":
		fallthrough
	case "Deleting":
		fallthrough
	case "Updating":
		*e = NotebookInstanceStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NotebookInstanceStatusEnum: %s", s)
	}
}
