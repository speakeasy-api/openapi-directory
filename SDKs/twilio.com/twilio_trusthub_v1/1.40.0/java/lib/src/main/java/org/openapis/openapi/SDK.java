/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * This is the public Twilio REST API.
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        "https://trusthub.twilio.com",
	};
    /**
	 * CREATE_CUSTOMER_PROFILE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] CREATE_CUSTOMER_PROFILE_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * CREATE_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] CREATE_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * CREATE_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] CREATE_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * CREATE_CUSTOMER_PROFILE_EVALUATION_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] CREATE_CUSTOMER_PROFILE_EVALUATION_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * CREATE_END_USER_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] CREATE_END_USER_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * CREATE_SUPPORTING_DOCUMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] CREATE_SUPPORTING_DOCUMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * CREATE_TRUST_PRODUCT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] CREATE_TRUST_PRODUCT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * CREATE_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] CREATE_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * CREATE_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] CREATE_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * CREATE_TRUST_PRODUCT_EVALUATION_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] CREATE_TRUST_PRODUCT_EVALUATION_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * DELETE_CUSTOMER_PROFILE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] DELETE_CUSTOMER_PROFILE_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * DELETE_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] DELETE_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * DELETE_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] DELETE_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * DELETE_END_USER_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] DELETE_END_USER_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * DELETE_SUPPORTING_DOCUMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] DELETE_SUPPORTING_DOCUMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * DELETE_TRUST_PRODUCT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] DELETE_TRUST_PRODUCT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * DELETE_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] DELETE_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * DELETE_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] DELETE_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_CUSTOMER_PROFILE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_CUSTOMER_PROFILE_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_CUSTOMER_PROFILE_EVALUATION_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_CUSTOMER_PROFILE_EVALUATION_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_END_USER_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_END_USER_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_END_USER_TYPE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_END_USER_TYPE_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_POLICIES_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_POLICIES_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_SUPPORTING_DOCUMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_SUPPORTING_DOCUMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_SUPPORTING_DOCUMENT_TYPE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_SUPPORTING_DOCUMENT_TYPE_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_TRUST_PRODUCT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_TRUST_PRODUCT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * FETCH_TRUST_PRODUCT_EVALUATION_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_TRUST_PRODUCT_EVALUATION_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_CUSTOMER_PROFILE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_CUSTOMER_PROFILE_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_CUSTOMER_PROFILE_EVALUATION_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_CUSTOMER_PROFILE_EVALUATION_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_END_USER_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_END_USER_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_END_USER_TYPE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_END_USER_TYPE_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_POLICIES_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_POLICIES_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_SUPPORTING_DOCUMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_SUPPORTING_DOCUMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_SUPPORTING_DOCUMENT_TYPE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_SUPPORTING_DOCUMENT_TYPE_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_TRUST_PRODUCT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_TRUST_PRODUCT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * LIST_TRUST_PRODUCT_EVALUATION_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_TRUST_PRODUCT_EVALUATION_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * UPDATE_CUSTOMER_PROFILE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] UPDATE_CUSTOMER_PROFILE_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * UPDATE_END_USER_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] UPDATE_END_USER_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * UPDATE_SUPPORTING_DOCUMENT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] UPDATE_SUPPORTING_DOCUMENT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
    /**
	 * UPDATE_TRUST_PRODUCT_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] UPDATE_TRUST_PRODUCT_SERVERS = {
        "https://trusthub.twilio.com",
    };
	
  		

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}
		
	}

    /**
     * Create a new Customer-Profile.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateCustomerProfileResponse createCustomerProfile(org.openapis.openapi.models.operations.CreateCustomerProfileRequest request) throws Exception {
        String baseUrl = CREATE_CUSTOMER_PROFILE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/CustomerProfiles");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateCustomerProfileResponse res = new org.openapis.openapi.models.operations.CreateCustomerProfileResponse() {{
            trusthubV1CustomerProfile = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1CustomerProfile out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1CustomerProfile.class);
                res.trusthubV1CustomerProfile = out;
            }
        }

        return res;
    }

    /**
     * Create a new Assigned Item.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateCustomerProfileChannelEndpointAssignmentResponse createCustomerProfileChannelEndpointAssignment(org.openapis.openapi.models.operations.CreateCustomerProfileChannelEndpointAssignmentRequest request) throws Exception {
        String baseUrl = CREATE_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CreateCustomerProfileChannelEndpointAssignmentPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/ChannelEndpointAssignments", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateCustomerProfileChannelEndpointAssignmentResponse res = new org.openapis.openapi.models.operations.CreateCustomerProfileChannelEndpointAssignmentResponse() {{
            trusthubV1CustomerProfileCustomerProfileChannelEndpointAssignment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileChannelEndpointAssignment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileChannelEndpointAssignment.class);
                res.trusthubV1CustomerProfileCustomerProfileChannelEndpointAssignment = out;
            }
        }

        return res;
    }

    /**
     * Create a new Assigned Item.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateCustomerProfileEntityAssignmentResponse createCustomerProfileEntityAssignment(org.openapis.openapi.models.operations.CreateCustomerProfileEntityAssignmentRequest request) throws Exception {
        String baseUrl = CREATE_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CreateCustomerProfileEntityAssignmentPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/EntityAssignments", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateCustomerProfileEntityAssignmentResponse res = new org.openapis.openapi.models.operations.CreateCustomerProfileEntityAssignmentResponse() {{
            trusthubV1CustomerProfileCustomerProfileEntityAssignment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileEntityAssignment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileEntityAssignment.class);
                res.trusthubV1CustomerProfileCustomerProfileEntityAssignment = out;
            }
        }

        return res;
    }

    /**
     * Create a new Evaluation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateCustomerProfileEvaluationResponse createCustomerProfileEvaluation(org.openapis.openapi.models.operations.CreateCustomerProfileEvaluationRequest request) throws Exception {
        String baseUrl = CREATE_CUSTOMER_PROFILE_EVALUATION_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CreateCustomerProfileEvaluationPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/Evaluations", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateCustomerProfileEvaluationResponse res = new org.openapis.openapi.models.operations.CreateCustomerProfileEvaluationResponse() {{
            trusthubV1CustomerProfileCustomerProfileEvaluation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileEvaluation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileEvaluation.class);
                res.trusthubV1CustomerProfileCustomerProfileEvaluation = out;
            }
        }

        return res;
    }

    /**
     * Create a new End User.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateEndUserResponse createEndUser(org.openapis.openapi.models.operations.CreateEndUserRequest request) throws Exception {
        String baseUrl = CREATE_END_USER_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/EndUsers");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateEndUserResponse res = new org.openapis.openapi.models.operations.CreateEndUserResponse() {{
            trusthubV1EndUser = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1EndUser out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1EndUser.class);
                res.trusthubV1EndUser = out;
            }
        }

        return res;
    }

    /**
     * Create a new Supporting Document.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateSupportingDocumentResponse createSupportingDocument(org.openapis.openapi.models.operations.CreateSupportingDocumentRequest request) throws Exception {
        String baseUrl = CREATE_SUPPORTING_DOCUMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/SupportingDocuments");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateSupportingDocumentResponse res = new org.openapis.openapi.models.operations.CreateSupportingDocumentResponse() {{
            trusthubV1SupportingDocument = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1SupportingDocument out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1SupportingDocument.class);
                res.trusthubV1SupportingDocument = out;
            }
        }

        return res;
    }

    /**
     * Create a new Customer-Profile.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateTrustProductResponse createTrustProduct(org.openapis.openapi.models.operations.CreateTrustProductRequest request) throws Exception {
        String baseUrl = CREATE_TRUST_PRODUCT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/TrustProducts");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateTrustProductResponse res = new org.openapis.openapi.models.operations.CreateTrustProductResponse() {{
            trusthubV1TrustProduct = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1TrustProduct out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1TrustProduct.class);
                res.trusthubV1TrustProduct = out;
            }
        }

        return res;
    }

    /**
     * Create a new Assigned Item.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateTrustProductChannelEndpointAssignmentResponse createTrustProductChannelEndpointAssignment(org.openapis.openapi.models.operations.CreateTrustProductChannelEndpointAssignmentRequest request) throws Exception {
        String baseUrl = CREATE_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CreateTrustProductChannelEndpointAssignmentPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/ChannelEndpointAssignments", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateTrustProductChannelEndpointAssignmentResponse res = new org.openapis.openapi.models.operations.CreateTrustProductChannelEndpointAssignmentResponse() {{
            trusthubV1TrustProductTrustProductChannelEndpointAssignment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductChannelEndpointAssignment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductChannelEndpointAssignment.class);
                res.trusthubV1TrustProductTrustProductChannelEndpointAssignment = out;
            }
        }

        return res;
    }

    /**
     * Create a new Assigned Item.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateTrustProductEntityAssignmentResponse createTrustProductEntityAssignment(org.openapis.openapi.models.operations.CreateTrustProductEntityAssignmentRequest request) throws Exception {
        String baseUrl = CREATE_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CreateTrustProductEntityAssignmentPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/EntityAssignments", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateTrustProductEntityAssignmentResponse res = new org.openapis.openapi.models.operations.CreateTrustProductEntityAssignmentResponse() {{
            trusthubV1TrustProductTrustProductEntityAssignment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductEntityAssignment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductEntityAssignment.class);
                res.trusthubV1TrustProductTrustProductEntityAssignment = out;
            }
        }

        return res;
    }

    /**
     * Create a new Evaluation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateTrustProductEvaluationResponse createTrustProductEvaluation(org.openapis.openapi.models.operations.CreateTrustProductEvaluationRequest request) throws Exception {
        String baseUrl = CREATE_TRUST_PRODUCT_EVALUATION_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CreateTrustProductEvaluationPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/Evaluations", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateTrustProductEvaluationResponse res = new org.openapis.openapi.models.operations.CreateTrustProductEvaluationResponse() {{
            trusthubV1TrustProductTrustProductEvaluation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductEvaluation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductEvaluation.class);
                res.trusthubV1TrustProductTrustProductEvaluation = out;
            }
        }

        return res;
    }

    /**
     * Delete a specific Customer-Profile.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteCustomerProfileResponse deleteCustomerProfile(org.openapis.openapi.models.operations.DeleteCustomerProfileRequest request) throws Exception {
        String baseUrl = DELETE_CUSTOMER_PROFILE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteCustomerProfilePathParams.class, baseUrl, "/v1/CustomerProfiles/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteCustomerProfileResponse res = new org.openapis.openapi.models.operations.DeleteCustomerProfileResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Remove an Assignment Item Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteCustomerProfileChannelEndpointAssignmentResponse deleteCustomerProfileChannelEndpointAssignment(org.openapis.openapi.models.operations.DeleteCustomerProfileChannelEndpointAssignmentRequest request) throws Exception {
        String baseUrl = DELETE_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteCustomerProfileChannelEndpointAssignmentPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/ChannelEndpointAssignments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteCustomerProfileChannelEndpointAssignmentResponse res = new org.openapis.openapi.models.operations.DeleteCustomerProfileChannelEndpointAssignmentResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Remove an Assignment Item Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteCustomerProfileEntityAssignmentResponse deleteCustomerProfileEntityAssignment(org.openapis.openapi.models.operations.DeleteCustomerProfileEntityAssignmentRequest request) throws Exception {
        String baseUrl = DELETE_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteCustomerProfileEntityAssignmentPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/EntityAssignments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteCustomerProfileEntityAssignmentResponse res = new org.openapis.openapi.models.operations.DeleteCustomerProfileEntityAssignmentResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete a specific End User.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteEndUserResponse deleteEndUser(org.openapis.openapi.models.operations.DeleteEndUserRequest request) throws Exception {
        String baseUrl = DELETE_END_USER_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteEndUserPathParams.class, baseUrl, "/v1/EndUsers/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteEndUserResponse res = new org.openapis.openapi.models.operations.DeleteEndUserResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete a specific Supporting Document.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteSupportingDocumentResponse deleteSupportingDocument(org.openapis.openapi.models.operations.DeleteSupportingDocumentRequest request) throws Exception {
        String baseUrl = DELETE_SUPPORTING_DOCUMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteSupportingDocumentPathParams.class, baseUrl, "/v1/SupportingDocuments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteSupportingDocumentResponse res = new org.openapis.openapi.models.operations.DeleteSupportingDocumentResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete a specific Customer-Profile.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteTrustProductResponse deleteTrustProduct(org.openapis.openapi.models.operations.DeleteTrustProductRequest request) throws Exception {
        String baseUrl = DELETE_TRUST_PRODUCT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteTrustProductPathParams.class, baseUrl, "/v1/TrustProducts/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteTrustProductResponse res = new org.openapis.openapi.models.operations.DeleteTrustProductResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Remove an Assignment Item Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteTrustProductChannelEndpointAssignmentResponse deleteTrustProductChannelEndpointAssignment(org.openapis.openapi.models.operations.DeleteTrustProductChannelEndpointAssignmentRequest request) throws Exception {
        String baseUrl = DELETE_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteTrustProductChannelEndpointAssignmentPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/ChannelEndpointAssignments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteTrustProductChannelEndpointAssignmentResponse res = new org.openapis.openapi.models.operations.DeleteTrustProductChannelEndpointAssignmentResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Remove an Assignment Item Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteTrustProductEntityAssignmentResponse deleteTrustProductEntityAssignment(org.openapis.openapi.models.operations.DeleteTrustProductEntityAssignmentRequest request) throws Exception {
        String baseUrl = DELETE_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteTrustProductEntityAssignmentPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/EntityAssignments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteTrustProductEntityAssignmentResponse res = new org.openapis.openapi.models.operations.DeleteTrustProductEntityAssignmentResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Fetch a specific Customer-Profile instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchCustomerProfileResponse fetchCustomerProfile(org.openapis.openapi.models.operations.FetchCustomerProfileRequest request) throws Exception {
        String baseUrl = FETCH_CUSTOMER_PROFILE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchCustomerProfilePathParams.class, baseUrl, "/v1/CustomerProfiles/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchCustomerProfileResponse res = new org.openapis.openapi.models.operations.FetchCustomerProfileResponse() {{
            trusthubV1CustomerProfile = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1CustomerProfile out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1CustomerProfile.class);
                res.trusthubV1CustomerProfile = out;
            }
        }

        return res;
    }

    /**
     * Fetch specific Assigned Item Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchCustomerProfileChannelEndpointAssignmentResponse fetchCustomerProfileChannelEndpointAssignment(org.openapis.openapi.models.operations.FetchCustomerProfileChannelEndpointAssignmentRequest request) throws Exception {
        String baseUrl = FETCH_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchCustomerProfileChannelEndpointAssignmentPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/ChannelEndpointAssignments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchCustomerProfileChannelEndpointAssignmentResponse res = new org.openapis.openapi.models.operations.FetchCustomerProfileChannelEndpointAssignmentResponse() {{
            trusthubV1CustomerProfileCustomerProfileChannelEndpointAssignment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileChannelEndpointAssignment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileChannelEndpointAssignment.class);
                res.trusthubV1CustomerProfileCustomerProfileChannelEndpointAssignment = out;
            }
        }

        return res;
    }

    /**
     * Fetch specific Assigned Item Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchCustomerProfileEntityAssignmentResponse fetchCustomerProfileEntityAssignment(org.openapis.openapi.models.operations.FetchCustomerProfileEntityAssignmentRequest request) throws Exception {
        String baseUrl = FETCH_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchCustomerProfileEntityAssignmentPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/EntityAssignments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchCustomerProfileEntityAssignmentResponse res = new org.openapis.openapi.models.operations.FetchCustomerProfileEntityAssignmentResponse() {{
            trusthubV1CustomerProfileCustomerProfileEntityAssignment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileEntityAssignment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileEntityAssignment.class);
                res.trusthubV1CustomerProfileCustomerProfileEntityAssignment = out;
            }
        }

        return res;
    }

    /**
     * Fetch specific Evaluation Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchCustomerProfileEvaluationResponse fetchCustomerProfileEvaluation(org.openapis.openapi.models.operations.FetchCustomerProfileEvaluationRequest request) throws Exception {
        String baseUrl = FETCH_CUSTOMER_PROFILE_EVALUATION_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchCustomerProfileEvaluationPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/Evaluations/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchCustomerProfileEvaluationResponse res = new org.openapis.openapi.models.operations.FetchCustomerProfileEvaluationResponse() {{
            trusthubV1CustomerProfileCustomerProfileEvaluation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileEvaluation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1CustomerProfileCustomerProfileEvaluation.class);
                res.trusthubV1CustomerProfileCustomerProfileEvaluation = out;
            }
        }

        return res;
    }

    /**
     * Fetch specific End User Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchEndUserResponse fetchEndUser(org.openapis.openapi.models.operations.FetchEndUserRequest request) throws Exception {
        String baseUrl = FETCH_END_USER_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchEndUserPathParams.class, baseUrl, "/v1/EndUsers/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchEndUserResponse res = new org.openapis.openapi.models.operations.FetchEndUserResponse() {{
            trusthubV1EndUser = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1EndUser out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1EndUser.class);
                res.trusthubV1EndUser = out;
            }
        }

        return res;
    }

    /**
     * Fetch a specific End-User Type Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchEndUserTypeResponse fetchEndUserType(org.openapis.openapi.models.operations.FetchEndUserTypeRequest request) throws Exception {
        String baseUrl = FETCH_END_USER_TYPE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchEndUserTypePathParams.class, baseUrl, "/v1/EndUserTypes/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchEndUserTypeResponse res = new org.openapis.openapi.models.operations.FetchEndUserTypeResponse() {{
            trusthubV1EndUserType = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1EndUserType out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1EndUserType.class);
                res.trusthubV1EndUserType = out;
            }
        }

        return res;
    }

    /**
     * Fetch specific Policy Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchPoliciesResponse fetchPolicies(org.openapis.openapi.models.operations.FetchPoliciesRequest request) throws Exception {
        String baseUrl = FETCH_POLICIES_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchPoliciesPathParams.class, baseUrl, "/v1/Policies/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchPoliciesResponse res = new org.openapis.openapi.models.operations.FetchPoliciesResponse() {{
            trusthubV1Policies = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1Policies out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1Policies.class);
                res.trusthubV1Policies = out;
            }
        }

        return res;
    }

    /**
     * Fetch specific Supporting Document Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchSupportingDocumentResponse fetchSupportingDocument(org.openapis.openapi.models.operations.FetchSupportingDocumentRequest request) throws Exception {
        String baseUrl = FETCH_SUPPORTING_DOCUMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchSupportingDocumentPathParams.class, baseUrl, "/v1/SupportingDocuments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchSupportingDocumentResponse res = new org.openapis.openapi.models.operations.FetchSupportingDocumentResponse() {{
            trusthubV1SupportingDocument = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1SupportingDocument out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1SupportingDocument.class);
                res.trusthubV1SupportingDocument = out;
            }
        }

        return res;
    }

    /**
     * Fetch a specific Supporting Document Type Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchSupportingDocumentTypeResponse fetchSupportingDocumentType(org.openapis.openapi.models.operations.FetchSupportingDocumentTypeRequest request) throws Exception {
        String baseUrl = FETCH_SUPPORTING_DOCUMENT_TYPE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchSupportingDocumentTypePathParams.class, baseUrl, "/v1/SupportingDocumentTypes/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchSupportingDocumentTypeResponse res = new org.openapis.openapi.models.operations.FetchSupportingDocumentTypeResponse() {{
            trusthubV1SupportingDocumentType = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1SupportingDocumentType out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1SupportingDocumentType.class);
                res.trusthubV1SupportingDocumentType = out;
            }
        }

        return res;
    }

    /**
     * Fetch a specific Customer-Profile instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchTrustProductResponse fetchTrustProduct(org.openapis.openapi.models.operations.FetchTrustProductRequest request) throws Exception {
        String baseUrl = FETCH_TRUST_PRODUCT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchTrustProductPathParams.class, baseUrl, "/v1/TrustProducts/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchTrustProductResponse res = new org.openapis.openapi.models.operations.FetchTrustProductResponse() {{
            trusthubV1TrustProduct = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1TrustProduct out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1TrustProduct.class);
                res.trusthubV1TrustProduct = out;
            }
        }

        return res;
    }

    /**
     * Fetch specific Assigned Item Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchTrustProductChannelEndpointAssignmentResponse fetchTrustProductChannelEndpointAssignment(org.openapis.openapi.models.operations.FetchTrustProductChannelEndpointAssignmentRequest request) throws Exception {
        String baseUrl = FETCH_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchTrustProductChannelEndpointAssignmentPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/ChannelEndpointAssignments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchTrustProductChannelEndpointAssignmentResponse res = new org.openapis.openapi.models.operations.FetchTrustProductChannelEndpointAssignmentResponse() {{
            trusthubV1TrustProductTrustProductChannelEndpointAssignment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductChannelEndpointAssignment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductChannelEndpointAssignment.class);
                res.trusthubV1TrustProductTrustProductChannelEndpointAssignment = out;
            }
        }

        return res;
    }

    /**
     * Fetch specific Assigned Item Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchTrustProductEntityAssignmentResponse fetchTrustProductEntityAssignment(org.openapis.openapi.models.operations.FetchTrustProductEntityAssignmentRequest request) throws Exception {
        String baseUrl = FETCH_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchTrustProductEntityAssignmentPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/EntityAssignments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchTrustProductEntityAssignmentResponse res = new org.openapis.openapi.models.operations.FetchTrustProductEntityAssignmentResponse() {{
            trusthubV1TrustProductTrustProductEntityAssignment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductEntityAssignment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductEntityAssignment.class);
                res.trusthubV1TrustProductTrustProductEntityAssignment = out;
            }
        }

        return res;
    }

    /**
     * Fetch specific Evaluation Instance.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FetchTrustProductEvaluationResponse fetchTrustProductEvaluation(org.openapis.openapi.models.operations.FetchTrustProductEvaluationRequest request) throws Exception {
        String baseUrl = FETCH_TRUST_PRODUCT_EVALUATION_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchTrustProductEvaluationPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/Evaluations/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchTrustProductEvaluationResponse res = new org.openapis.openapi.models.operations.FetchTrustProductEvaluationResponse() {{
            trusthubV1TrustProductTrustProductEvaluation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductEvaluation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1TrustProductTrustProductEvaluation.class);
                res.trusthubV1TrustProductTrustProductEvaluation = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all Customer-Profiles for an account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListCustomerProfileResponse listCustomerProfile(org.openapis.openapi.models.operations.ListCustomerProfileRequest request) throws Exception {
        String baseUrl = LIST_CUSTOMER_PROFILE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/CustomerProfiles");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListCustomerProfileQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListCustomerProfileResponse res = new org.openapis.openapi.models.operations.ListCustomerProfileResponse() {{
            listCustomerProfileResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListCustomerProfileListCustomerProfileResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListCustomerProfileListCustomerProfileResponse.class);
                res.listCustomerProfileResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all Assigned Items for an account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListCustomerProfileChannelEndpointAssignmentResponse listCustomerProfileChannelEndpointAssignment(org.openapis.openapi.models.operations.ListCustomerProfileChannelEndpointAssignmentRequest request) throws Exception {
        String baseUrl = LIST_CUSTOMER_PROFILE_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.ListCustomerProfileChannelEndpointAssignmentPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/ChannelEndpointAssignments", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListCustomerProfileChannelEndpointAssignmentQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListCustomerProfileChannelEndpointAssignmentResponse res = new org.openapis.openapi.models.operations.ListCustomerProfileChannelEndpointAssignmentResponse() {{
            listCustomerProfileChannelEndpointAssignmentResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListCustomerProfileChannelEndpointAssignmentListCustomerProfileChannelEndpointAssignmentResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListCustomerProfileChannelEndpointAssignmentListCustomerProfileChannelEndpointAssignmentResponse.class);
                res.listCustomerProfileChannelEndpointAssignmentResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all Assigned Items for an account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListCustomerProfileEntityAssignmentResponse listCustomerProfileEntityAssignment(org.openapis.openapi.models.operations.ListCustomerProfileEntityAssignmentRequest request) throws Exception {
        String baseUrl = LIST_CUSTOMER_PROFILE_ENTITY_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.ListCustomerProfileEntityAssignmentPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/EntityAssignments", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListCustomerProfileEntityAssignmentQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListCustomerProfileEntityAssignmentResponse res = new org.openapis.openapi.models.operations.ListCustomerProfileEntityAssignmentResponse() {{
            listCustomerProfileEntityAssignmentResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListCustomerProfileEntityAssignmentListCustomerProfileEntityAssignmentResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListCustomerProfileEntityAssignmentListCustomerProfileEntityAssignmentResponse.class);
                res.listCustomerProfileEntityAssignmentResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of Evaluations associated to the customer_profile resource.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListCustomerProfileEvaluationResponse listCustomerProfileEvaluation(org.openapis.openapi.models.operations.ListCustomerProfileEvaluationRequest request) throws Exception {
        String baseUrl = LIST_CUSTOMER_PROFILE_EVALUATION_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.ListCustomerProfileEvaluationPathParams.class, baseUrl, "/v1/CustomerProfiles/{CustomerProfileSid}/Evaluations", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListCustomerProfileEvaluationQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListCustomerProfileEvaluationResponse res = new org.openapis.openapi.models.operations.ListCustomerProfileEvaluationResponse() {{
            listCustomerProfileEvaluationResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListCustomerProfileEvaluationListCustomerProfileEvaluationResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListCustomerProfileEvaluationListCustomerProfileEvaluationResponse.class);
                res.listCustomerProfileEvaluationResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all End User for an account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListEndUserResponse listEndUser(org.openapis.openapi.models.operations.ListEndUserRequest request) throws Exception {
        String baseUrl = LIST_END_USER_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/EndUsers");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListEndUserQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListEndUserResponse res = new org.openapis.openapi.models.operations.ListEndUserResponse() {{
            listEndUserResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListEndUserListEndUserResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListEndUserListEndUserResponse.class);
                res.listEndUserResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all End-User Types.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListEndUserTypeResponse listEndUserType(org.openapis.openapi.models.operations.ListEndUserTypeRequest request) throws Exception {
        String baseUrl = LIST_END_USER_TYPE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/EndUserTypes");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListEndUserTypeQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListEndUserTypeResponse res = new org.openapis.openapi.models.operations.ListEndUserTypeResponse() {{
            listEndUserTypeResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListEndUserTypeListEndUserTypeResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListEndUserTypeListEndUserTypeResponse.class);
                res.listEndUserTypeResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all Policys.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListPoliciesResponse listPolicies(org.openapis.openapi.models.operations.ListPoliciesRequest request) throws Exception {
        String baseUrl = LIST_POLICIES_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/Policies");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListPoliciesQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListPoliciesResponse res = new org.openapis.openapi.models.operations.ListPoliciesResponse() {{
            listPoliciesResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListPoliciesListPoliciesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListPoliciesListPoliciesResponse.class);
                res.listPoliciesResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all Supporting Document for an account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListSupportingDocumentResponse listSupportingDocument(org.openapis.openapi.models.operations.ListSupportingDocumentRequest request) throws Exception {
        String baseUrl = LIST_SUPPORTING_DOCUMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/SupportingDocuments");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListSupportingDocumentQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListSupportingDocumentResponse res = new org.openapis.openapi.models.operations.ListSupportingDocumentResponse() {{
            listSupportingDocumentResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListSupportingDocumentListSupportingDocumentResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListSupportingDocumentListSupportingDocumentResponse.class);
                res.listSupportingDocumentResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all Supporting Document Types.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListSupportingDocumentTypeResponse listSupportingDocumentType(org.openapis.openapi.models.operations.ListSupportingDocumentTypeRequest request) throws Exception {
        String baseUrl = LIST_SUPPORTING_DOCUMENT_TYPE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/SupportingDocumentTypes");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListSupportingDocumentTypeQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListSupportingDocumentTypeResponse res = new org.openapis.openapi.models.operations.ListSupportingDocumentTypeResponse() {{
            listSupportingDocumentTypeResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListSupportingDocumentTypeListSupportingDocumentTypeResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListSupportingDocumentTypeListSupportingDocumentTypeResponse.class);
                res.listSupportingDocumentTypeResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all Customer-Profiles for an account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListTrustProductResponse listTrustProduct(org.openapis.openapi.models.operations.ListTrustProductRequest request) throws Exception {
        String baseUrl = LIST_TRUST_PRODUCT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/TrustProducts");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListTrustProductQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListTrustProductResponse res = new org.openapis.openapi.models.operations.ListTrustProductResponse() {{
            listTrustProductResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListTrustProductListTrustProductResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListTrustProductListTrustProductResponse.class);
                res.listTrustProductResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all Assigned Items for an account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListTrustProductChannelEndpointAssignmentResponse listTrustProductChannelEndpointAssignment(org.openapis.openapi.models.operations.ListTrustProductChannelEndpointAssignmentRequest request) throws Exception {
        String baseUrl = LIST_TRUST_PRODUCT_CHANNEL_ENDPOINT_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.ListTrustProductChannelEndpointAssignmentPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/ChannelEndpointAssignments", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListTrustProductChannelEndpointAssignmentQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListTrustProductChannelEndpointAssignmentResponse res = new org.openapis.openapi.models.operations.ListTrustProductChannelEndpointAssignmentResponse() {{
            listTrustProductChannelEndpointAssignmentResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListTrustProductChannelEndpointAssignmentListTrustProductChannelEndpointAssignmentResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListTrustProductChannelEndpointAssignmentListTrustProductChannelEndpointAssignmentResponse.class);
                res.listTrustProductChannelEndpointAssignmentResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of all Assigned Items for an account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListTrustProductEntityAssignmentResponse listTrustProductEntityAssignment(org.openapis.openapi.models.operations.ListTrustProductEntityAssignmentRequest request) throws Exception {
        String baseUrl = LIST_TRUST_PRODUCT_ENTITY_ASSIGNMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.ListTrustProductEntityAssignmentPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/EntityAssignments", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListTrustProductEntityAssignmentQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListTrustProductEntityAssignmentResponse res = new org.openapis.openapi.models.operations.ListTrustProductEntityAssignmentResponse() {{
            listTrustProductEntityAssignmentResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListTrustProductEntityAssignmentListTrustProductEntityAssignmentResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListTrustProductEntityAssignmentListTrustProductEntityAssignmentResponse.class);
                res.listTrustProductEntityAssignmentResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieve a list of Evaluations associated to the trust_product resource.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListTrustProductEvaluationResponse listTrustProductEvaluation(org.openapis.openapi.models.operations.ListTrustProductEvaluationRequest request) throws Exception {
        String baseUrl = LIST_TRUST_PRODUCT_EVALUATION_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.ListTrustProductEvaluationPathParams.class, baseUrl, "/v1/TrustProducts/{TrustProductSid}/Evaluations", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListTrustProductEvaluationQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListTrustProductEvaluationResponse res = new org.openapis.openapi.models.operations.ListTrustProductEvaluationResponse() {{
            listTrustProductEvaluationResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListTrustProductEvaluationListTrustProductEvaluationResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListTrustProductEvaluationListTrustProductEvaluationResponse.class);
                res.listTrustProductEvaluationResponse = out;
            }
        }

        return res;
    }

    /**
     * Updates a Customer-Profile in an account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.UpdateCustomerProfileResponse updateCustomerProfile(org.openapis.openapi.models.operations.UpdateCustomerProfileRequest request) throws Exception {
        String baseUrl = UPDATE_CUSTOMER_PROFILE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.UpdateCustomerProfilePathParams.class, baseUrl, "/v1/CustomerProfiles/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.UpdateCustomerProfileResponse res = new org.openapis.openapi.models.operations.UpdateCustomerProfileResponse() {{
            trusthubV1CustomerProfile = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1CustomerProfile out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1CustomerProfile.class);
                res.trusthubV1CustomerProfile = out;
            }
        }

        return res;
    }

    /**
     * Update an existing End User.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.UpdateEndUserResponse updateEndUser(org.openapis.openapi.models.operations.UpdateEndUserRequest request) throws Exception {
        String baseUrl = UPDATE_END_USER_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.UpdateEndUserPathParams.class, baseUrl, "/v1/EndUsers/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.UpdateEndUserResponse res = new org.openapis.openapi.models.operations.UpdateEndUserResponse() {{
            trusthubV1EndUser = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1EndUser out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1EndUser.class);
                res.trusthubV1EndUser = out;
            }
        }

        return res;
    }

    /**
     * Update an existing Supporting Document.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.UpdateSupportingDocumentResponse updateSupportingDocument(org.openapis.openapi.models.operations.UpdateSupportingDocumentRequest request) throws Exception {
        String baseUrl = UPDATE_SUPPORTING_DOCUMENT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.UpdateSupportingDocumentPathParams.class, baseUrl, "/v1/SupportingDocuments/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.UpdateSupportingDocumentResponse res = new org.openapis.openapi.models.operations.UpdateSupportingDocumentResponse() {{
            trusthubV1SupportingDocument = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1SupportingDocument out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1SupportingDocument.class);
                res.trusthubV1SupportingDocument = out;
            }
        }

        return res;
    }

    /**
     * Updates a Customer-Profile in an account.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.UpdateTrustProductResponse updateTrustProduct(org.openapis.openapi.models.operations.UpdateTrustProductRequest request) throws Exception {
        String baseUrl = UPDATE_TRUST_PRODUCT_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.UpdateTrustProductPathParams.class, baseUrl, "/v1/TrustProducts/{Sid}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.UpdateTrustProductResponse res = new org.openapis.openapi.models.operations.UpdateTrustProductResponse() {{
            trusthubV1TrustProduct = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.TrusthubV1TrustProduct out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.TrusthubV1TrustProduct.class);
                res.trusthubV1TrustProduct = out;
            }
        }

        return res;
    }
}