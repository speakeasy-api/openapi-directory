"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudContactcenterinsightsV1ConversationParticipantRoleEnum(str, Enum):
    r"""The role of the participant."""
    ROLE_UNSPECIFIED = 'ROLE_UNSPECIFIED'
    HUMAN_AGENT = 'HUMAN_AGENT'
    AUTOMATED_AGENT = 'AUTOMATED_AGENT'
    END_USER = 'END_USER'
    ANY_AGENT = 'ANY_AGENT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudContactcenterinsightsV1ConversationParticipant:
    r"""The call participant speaking for a given utterance."""
    
    dialogflow_participant: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dialogflowParticipant'), 'exclude': lambda f: f is None }})
    r"""Deprecated. Use `dialogflow_participant_name` instead. The name of the Dialogflow participant. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"""  
    dialogflow_participant_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dialogflowParticipantName'), 'exclude': lambda f: f is None }})
    r"""The name of the participant provided by Dialogflow. Format: projects/{project}/locations/{location}/conversations/{conversation}/participants/{participant}"""  
    obfuscated_external_user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('obfuscatedExternalUserId'), 'exclude': lambda f: f is None }})
    r"""Obfuscated user ID from Dialogflow."""  
    role: Optional[GoogleCloudContactcenterinsightsV1ConversationParticipantRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role'), 'exclude': lambda f: f is None }})
    r"""The role of the participant."""  
    user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userId'), 'exclude': lambda f: f is None }})
    r"""A user-specified ID representing the participant."""  
    