<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateOntapVolumeConfiguration - Specifies the configuration of the ONTAP volume that you are creating.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateOntapVolumeConfiguration
{
	#[\JMS\Serializer\Annotation\SerializedName('CopyTagsToBackups')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $copyTagsToBackups = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('JunctionPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $junctionPath = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OntapVolumeType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InputOntapVolumeTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InputOntapVolumeTypeEnum $ontapVolumeType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SecurityStyle')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SecurityStyleEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SecurityStyleEnum $securityStyle = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SizeInMegabytes')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $sizeInMegabytes;
    
	#[\JMS\Serializer\Annotation\SerializedName('SnapshotPolicy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $snapshotPolicy = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('StorageEfficiencyEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $storageEfficiencyEnabled = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('StorageVirtualMachineId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $storageVirtualMachineId;
    
    /**
     * <p>Describes the data tiering policy for an ONTAP volume. When enabled, Amazon FSx for ONTAP's intelligent tiering automatically transitions a volume's data between the file system's primary storage and capacity pool storage based on your access patterns.</p> <p>Valid tiering policies are the following:</p> <ul> <li> <p> <code>SNAPSHOT_ONLY</code> - (Default value) moves cold snapshots to the capacity pool storage tier.</p> </li> </ul> <ul> <li> <p> <code>AUTO</code> - moves cold user data and snapshots to the capacity pool storage tier based on your access patterns.</p> </li> </ul> <ul> <li> <p> <code>ALL</code> - moves all user data blocks in both the active file system and Snapshot copies to the storage pool tier.</p> </li> </ul> <ul> <li> <p> <code>NONE</code> - keeps a volume's data in the primary storage tier, preventing it from being moved to the capacity pool tier.</p> </li> </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TieringPolicy $tieringPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('TieringPolicy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TieringPolicy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TieringPolicy $tieringPolicy = null;
    
	public function __construct()
	{
		$this->copyTagsToBackups = null;
		$this->junctionPath = null;
		$this->ontapVolumeType = null;
		$this->securityStyle = null;
		$this->sizeInMegabytes = 0;
		$this->snapshotPolicy = null;
		$this->storageEfficiencyEnabled = null;
		$this->storageVirtualMachineId = "";
		$this->tieringPolicy = null;
	}
}
