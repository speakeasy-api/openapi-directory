/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SimulationJobRequest - Information about a simulation job request.
 */
public class SimulationJobRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compute")
    public Compute compute;
    public SimulationJobRequest withCompute(Compute compute) {
        this.compute = compute;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataSources")
    public DataSourceConfig[] dataSources;
    public SimulationJobRequest withDataSources(DataSourceConfig[] dataSources) {
        this.dataSources = dataSources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureBehavior")
    public FailureBehaviorEnum failureBehavior;
    public SimulationJobRequest withFailureBehavior(FailureBehaviorEnum failureBehavior) {
        this.failureBehavior = failureBehavior;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iamRole")
    public String iamRole;
    public SimulationJobRequest withIamRole(String iamRole) {
        this.iamRole = iamRole;
        return this;
    }
    
    /**
     * The logging configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loggingConfig")
    public LoggingConfig loggingConfig;
    public SimulationJobRequest withLoggingConfig(LoggingConfig loggingConfig) {
        this.loggingConfig = loggingConfig;
        return this;
    }
    
    @JsonProperty("maxJobDurationInSeconds")
    public Long maxJobDurationInSeconds;
    public SimulationJobRequest withMaxJobDurationInSeconds(Long maxJobDurationInSeconds) {
        this.maxJobDurationInSeconds = maxJobDurationInSeconds;
        return this;
    }
    
    /**
     * The output location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputLocation")
    public OutputLocation outputLocation;
    public SimulationJobRequest withOutputLocation(OutputLocation outputLocation) {
        this.outputLocation = outputLocation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("robotApplications")
    public RobotApplicationConfig[] robotApplications;
    public SimulationJobRequest withRobotApplications(RobotApplicationConfig[] robotApplications) {
        this.robotApplications = robotApplications;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("simulationApplications")
    public SimulationApplicationConfig[] simulationApplications;
    public SimulationJobRequest withSimulationApplications(SimulationApplicationConfig[] simulationApplications) {
        this.simulationApplications = simulationApplications;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public SimulationJobRequest withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useDefaultApplications")
    public Boolean useDefaultApplications;
    public SimulationJobRequest withUseDefaultApplications(Boolean useDefaultApplications) {
        this.useDefaultApplications = useDefaultApplications;
        return this;
    }
    
    /**
     * If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcConfig")
    public VPCConfig vpcConfig;
    public SimulationJobRequest withVpcConfig(VPCConfig vpcConfig) {
        this.vpcConfig = vpcConfig;
        return this;
    }
    
}
