// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AugmentationDataRelatedEntityTypeEnum - The type of the entity to apply the augmentation data.
type AugmentationDataRelatedEntityTypeEnum string

const (
	AugmentationDataRelatedEntityTypeEnumEvent      AugmentationDataRelatedEntityTypeEnum = "event"
	AugmentationDataRelatedEntityTypeEnumAttraction AugmentationDataRelatedEntityTypeEnum = "attraction"
	AugmentationDataRelatedEntityTypeEnumVenue      AugmentationDataRelatedEntityTypeEnum = "venue"
)

func (e *AugmentationDataRelatedEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "event":
		fallthrough
	case "attraction":
		fallthrough
	case "venue":
		*e = AugmentationDataRelatedEntityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AugmentationDataRelatedEntityTypeEnum: %s", s)
	}
}

// AugmentationData - This class defines the Augmentation Data on the Publish API
type AugmentationData struct {
	// List of changes to apply to the related entity
	Changes []Change `json:"changes"`
	// Id of the entity to apply the augmentation data.
	RelatedEntityID string `json:"relatedEntityId"`
	// The type of the entity to apply the augmentation data.
	RelatedEntityType AugmentationDataRelatedEntityTypeEnum `json:"relatedEntityType"`
	// The confidence (%) level of the accuracy of this augmention data. 100 is the better
	Score *float32 `json:"score,omitempty"`
	// The source where the augementation data came from
	Source string `json:"source"`
	// Vesion of this augmentation data. This field is to avoid updating entity with old data.
	VersionNumber int64 `json:"versionNumber"`
}
