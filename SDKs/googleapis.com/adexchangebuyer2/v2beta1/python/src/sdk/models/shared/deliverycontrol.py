"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import frequencycap as shared_frequencycap
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DeliveryControlCreativeBlockingLevelEnum(str, Enum):
    r"""Output only. Specified the creative blocking levels to be applied."""
    CREATIVE_BLOCKING_LEVEL_UNSPECIFIED = 'CREATIVE_BLOCKING_LEVEL_UNSPECIFIED'
    PUBLISHER_BLOCKING_RULES = 'PUBLISHER_BLOCKING_RULES'
    ADX_POLICY_BLOCKING_ONLY = 'ADX_POLICY_BLOCKING_ONLY'

class DeliveryControlDeliveryRateTypeEnum(str, Enum):
    r"""Output only. Specifies how the impression delivery will be paced."""
    DELIVERY_RATE_TYPE_UNSPECIFIED = 'DELIVERY_RATE_TYPE_UNSPECIFIED'
    EVENLY = 'EVENLY'
    FRONT_LOADED = 'FRONT_LOADED'
    AS_FAST_AS_POSSIBLE = 'AS_FAST_AS_POSSIBLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeliveryControl:
    r"""Message contains details about how the deals will be paced."""
    
    creative_blocking_level: Optional[DeliveryControlCreativeBlockingLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeBlockingLevel'), 'exclude': lambda f: f is None }})
    r"""Output only. Specified the creative blocking levels to be applied."""  
    delivery_rate_type: Optional[DeliveryControlDeliveryRateTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryRateType'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies how the impression delivery will be paced."""  
    frequency_caps: Optional[list[shared_frequencycap.FrequencyCap]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frequencyCaps'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies any frequency caps."""  
    