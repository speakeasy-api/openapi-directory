/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OverrideInlineSource } from "./overrideinlinesource";
import { Expose, Type } from "class-transformer";

export enum ImportConsumerOverridesRequestForceOnlyEnum {
  QuotaSafetyCheckUnspecified = "QUOTA_SAFETY_CHECK_UNSPECIFIED",
  LimitDecreaseBelowUsage = "LIMIT_DECREASE_BELOW_USAGE",
  LimitDecreasePercentageTooHigh = "LIMIT_DECREASE_PERCENTAGE_TOO_HIGH",
}

/**
 * Request message for ImportConsumerOverrides
 */
export class ImportConsumerOverridesRequest extends SpeakeasyBase {
  /**
   * Whether to force the creation of the quota overrides. Setting the force parameter to 'true' ignores all quota safety checks that would fail the request. QuotaSafetyCheck lists all such validations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "force" })
  force?: boolean;

  /**
   * The list of quota safety checks to ignore before the override mutation. Unlike 'force' field that ignores all the quota safety checks, the 'force_only' field ignores only the specified checks; other checks are still enforced. The 'force' and 'force_only' fields cannot both be set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "forceOnly" })
  forceOnly?: ImportConsumerOverridesRequestForceOnlyEnum[];

  /**
   * Import data embedded in the request message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inlineSource" })
  @Type(() => OverrideInlineSource)
  inlineSource?: OverrideInlineSource;
}
