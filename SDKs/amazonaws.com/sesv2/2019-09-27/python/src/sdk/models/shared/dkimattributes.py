"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import dkimsigningattributesorigin_enum as shared_dkimsigningattributesorigin_enum
from ..shared import dkimsigningkeylength_enum as shared_dkimsigningkeylength_enum
from ..shared import dkimstatus_enum as shared_dkimstatus_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DkimAttributes:
    r"""<p>An object that contains information about the DKIM authentication status for an email identity.</p> <p>Amazon SES determines the authentication status by searching for specific records in the DNS configuration for the domain. If you used <a href=\\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\\">Easy DKIM</a> to set up DKIM authentication, Amazon SES tries to find three unique CNAME records in the DNS configuration for your domain. If you provided a public key to perform DKIM authentication, Amazon SES tries to find a TXT record that uses the selector that you specified. The value of the TXT record must be a public key that's paired with the private key that you specified in the process of creating the identity</p>"""
    
    current_signing_key_length: Optional[shared_dkimsigningkeylength_enum.DkimSigningKeyLengthEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrentSigningKeyLength'), 'exclude': lambda f: f is None }})  
    last_key_generation_timestamp: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastKeyGenerationTimestamp'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    next_signing_key_length: Optional[shared_dkimsigningkeylength_enum.DkimSigningKeyLengthEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextSigningKeyLength'), 'exclude': lambda f: f is None }})  
    signing_attributes_origin: Optional[shared_dkimsigningattributesorigin_enum.DkimSigningAttributesOriginEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SigningAttributesOrigin'), 'exclude': lambda f: f is None }})  
    signing_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SigningEnabled'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_dkimstatus_enum.DkimStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    tokens: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tokens'), 'exclude': lambda f: f is None }})  
    