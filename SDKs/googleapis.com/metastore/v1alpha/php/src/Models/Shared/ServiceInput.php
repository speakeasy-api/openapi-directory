<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ServiceInput - A managed metastore service that serves metadata queries.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ServiceInput
{
    /**
     * Immutable. The database type that the Metastore service stores its data.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ServiceDatabaseTypeEnum $databaseType
     */
	#[\JMS\Serializer\Annotation\SerializedName('databaseType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ServiceDatabaseTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ServiceDatabaseTypeEnum $databaseType = null;
    
    /**
     * Encryption settings for the service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EncryptionConfig $encryptionConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptionConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EncryptionConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EncryptionConfig $encryptionConfig = null;
    
    /**
     * Specifies configuration information specific to running Hive metastore software as the metastore service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HiveMetastoreConfigInput $hiveMetastoreConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('hiveMetastoreConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HiveMetastoreConfigInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HiveMetastoreConfigInput $hiveMetastoreConfig = null;
    
    /**
     * User-defined labels for the metastore service.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MaintenanceWindow $maintenanceWindow
     */
	#[\JMS\Serializer\Annotation\SerializedName('maintenanceWindow')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MaintenanceWindow')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MaintenanceWindow $maintenanceWindow = null;
    
    /**
     * Specifies how metastore metadata should be integrated with external services.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MetadataIntegration $metadataIntegration
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadataIntegration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MetadataIntegration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MetadataIntegration $metadataIntegration = null;
    
    /**
     * Immutable. The relative resource name of the metastore service, in the following format:projects/{project_number}/locations/{location_id}/services/{service_id}.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Immutable. The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:projects/{project_number}/global/networks/{network_id}.
     * 
     * @var ?string $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $network = null;
    
    /**
     * Network configuration for the Dataproc Metastore service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkConfigInput $networkConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NetworkConfigInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkConfigInput $networkConfig = null;
    
    /**
     * The TCP port at which the metastore service is reached. Default: 9083.
     * 
     * @var ?int $port
     */
	#[\JMS\Serializer\Annotation\SerializedName('port')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $port = null;
    
    /**
     * Immutable. The release channel of the service. If unspecified, defaults to STABLE.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ServiceReleaseChannelEnum $releaseChannel
     */
	#[\JMS\Serializer\Annotation\SerializedName('releaseChannel')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ServiceReleaseChannelEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ServiceReleaseChannelEnum $releaseChannel = null;
    
    /**
     * Represents the scaling configuration of a metastore service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ScalingConfig $scalingConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('scalingConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ScalingConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScalingConfig $scalingConfig = null;
    
    /**
     * Telemetry Configuration for the Dataproc Metastore service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TelemetryConfig $telemetryConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('telemetryConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TelemetryConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TelemetryConfig $telemetryConfig = null;
    
    /**
     * The tier of the service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ServiceTierEnum $tier
     */
	#[\JMS\Serializer\Annotation\SerializedName('tier')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ServiceTierEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ServiceTierEnum $tier = null;
    
	public function __construct()
	{
		$this->databaseType = null;
		$this->encryptionConfig = null;
		$this->hiveMetastoreConfig = null;
		$this->labels = null;
		$this->maintenanceWindow = null;
		$this->metadataIntegration = null;
		$this->name = null;
		$this->network = null;
		$this->networkConfig = null;
		$this->port = null;
		$this->releaseChannel = null;
		$this->scalingConfig = null;
		$this->telemetryConfig = null;
		$this->tier = null;
	}
}
