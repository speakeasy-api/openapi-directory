// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDeleteSnapshotActionEnum
type POSTDeleteSnapshotActionEnum string

const (
	POSTDeleteSnapshotActionEnumDeleteSnapshot POSTDeleteSnapshotActionEnum = "DeleteSnapshot"
)

func (e *POSTDeleteSnapshotActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteSnapshot":
		*e = POSTDeleteSnapshotActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteSnapshotActionEnum: %s", s)
	}
}

// POSTDeleteSnapshotVersionEnum
type POSTDeleteSnapshotVersionEnum string

const (
	POSTDeleteSnapshotVersionEnumTwoThousandAndFifteen0202 POSTDeleteSnapshotVersionEnum = "2015-02-02"
)

func (e *POSTDeleteSnapshotVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-02-02":
		*e = POSTDeleteSnapshotVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteSnapshotVersionEnum: %s", s)
	}
}

type POSTDeleteSnapshotRequest struct {
	Action            POSTDeleteSnapshotActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                        `request:"mediaType=text/xml"`
	Version           POSTDeleteSnapshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDeleteSnapshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
