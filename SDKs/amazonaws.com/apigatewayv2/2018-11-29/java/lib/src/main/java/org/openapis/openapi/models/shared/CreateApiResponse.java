/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CreateApiResponse - Success
 */
public class CreateApiResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ApiEndpoint")
    public String apiEndpoint;
    public CreateApiResponse withApiEndpoint(String apiEndpoint) {
        this.apiEndpoint = apiEndpoint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ApiGatewayManaged")
    public Boolean apiGatewayManaged;
    public CreateApiResponse withApiGatewayManaged(Boolean apiGatewayManaged) {
        this.apiGatewayManaged = apiGatewayManaged;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ApiId")
    public String apiId;
    public CreateApiResponse withApiId(String apiId) {
        this.apiId = apiId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ApiKeySelectionExpression")
    public String apiKeySelectionExpression;
    public CreateApiResponse withApiKeySelectionExpression(String apiKeySelectionExpression) {
        this.apiKeySelectionExpression = apiKeySelectionExpression;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CorsConfiguration")
    public CreateApiResponseCorsConfiguration corsConfiguration;
    public CreateApiResponse withCorsConfiguration(CreateApiResponseCorsConfiguration corsConfiguration) {
        this.corsConfiguration = corsConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public CreateApiResponse withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public CreateApiResponse withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisableExecuteApiEndpoint")
    public Boolean disableExecuteApiEndpoint;
    public CreateApiResponse withDisableExecuteApiEndpoint(Boolean disableExecuteApiEndpoint) {
        this.disableExecuteApiEndpoint = disableExecuteApiEndpoint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisableSchemaValidation")
    public Boolean disableSchemaValidation;
    public CreateApiResponse withDisableSchemaValidation(Boolean disableSchemaValidation) {
        this.disableSchemaValidation = disableSchemaValidation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImportInfo")
    public String[] importInfo;
    public CreateApiResponse withImportInfo(String[] importInfo) {
        this.importInfo = importInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public CreateApiResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProtocolType")
    public CreateApiResponseProtocolTypeEnum protocolType;
    public CreateApiResponse withProtocolType(CreateApiResponseProtocolTypeEnum protocolType) {
        this.protocolType = protocolType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RouteSelectionExpression")
    public String routeSelectionExpression;
    public CreateApiResponse withRouteSelectionExpression(String routeSelectionExpression) {
        this.routeSelectionExpression = routeSelectionExpression;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;
    public CreateApiResponse withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Version")
    public String version;
    public CreateApiResponse withVersion(String version) {
        this.version = version;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Warnings")
    public String[] warnings;
    public CreateApiResponse withWarnings(String[] warnings) {
        this.warnings = warnings;
        return this;
    }
    
}
