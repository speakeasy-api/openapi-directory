"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectTemplateBase = exports.ProjectTemplateBaseOwner = exports.ProjectTemplateBaseColorEnum = void 0;
var utils_1 = require("../../../internal/utils");
var datevariablecompact_1 = require("./datevariablecompact");
var teamcompact_1 = require("./teamcompact");
var class_transformer_1 = require("class-transformer");
/**
 * Color of the project template.
 */
var ProjectTemplateBaseColorEnum;
(function (ProjectTemplateBaseColorEnum) {
    ProjectTemplateBaseColorEnum["DarkPink"] = "dark-pink";
    ProjectTemplateBaseColorEnum["DarkGreen"] = "dark-green";
    ProjectTemplateBaseColorEnum["DarkBlue"] = "dark-blue";
    ProjectTemplateBaseColorEnum["DarkRed"] = "dark-red";
    ProjectTemplateBaseColorEnum["DarkTeal"] = "dark-teal";
    ProjectTemplateBaseColorEnum["DarkBrown"] = "dark-brown";
    ProjectTemplateBaseColorEnum["DarkOrange"] = "dark-orange";
    ProjectTemplateBaseColorEnum["DarkPurple"] = "dark-purple";
    ProjectTemplateBaseColorEnum["DarkWarmGray"] = "dark-warm-gray";
    ProjectTemplateBaseColorEnum["LightPink"] = "light-pink";
    ProjectTemplateBaseColorEnum["LightGreen"] = "light-green";
    ProjectTemplateBaseColorEnum["LightBlue"] = "light-blue";
    ProjectTemplateBaseColorEnum["LightRed"] = "light-red";
    ProjectTemplateBaseColorEnum["LightTeal"] = "light-teal";
    ProjectTemplateBaseColorEnum["LightBrown"] = "light-brown";
    ProjectTemplateBaseColorEnum["LightOrange"] = "light-orange";
    ProjectTemplateBaseColorEnum["LightPurple"] = "light-purple";
    ProjectTemplateBaseColorEnum["LightWarmGray"] = "light-warm-gray";
})(ProjectTemplateBaseColorEnum = exports.ProjectTemplateBaseColorEnum || (exports.ProjectTemplateBaseColorEnum = {}));
/**
 * A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.
 */
var ProjectTemplateBaseOwner = /** @class */ (function (_super) {
    __extends(ProjectTemplateBaseOwner, _super);
    function ProjectTemplateBaseOwner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gid" }),
        __metadata("design:type", String)
    ], ProjectTemplateBaseOwner.prototype, "gid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], ProjectTemplateBaseOwner.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_type" }),
        __metadata("design:type", String)
    ], ProjectTemplateBaseOwner.prototype, "resourceType", void 0);
    return ProjectTemplateBaseOwner;
}(utils_1.SpeakeasyBase));
exports.ProjectTemplateBaseOwner = ProjectTemplateBaseOwner;
/**
 * A *project template* is an object that allows new projects to be created with a predefined setup, which may include tasks, sections, Rules, etc. It simplifies the process of running a workflow that involves a similar set of work every time.
 */
var ProjectTemplateBase = /** @class */ (function (_super) {
    __extends(ProjectTemplateBase, _super);
    function ProjectTemplateBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "color" }),
        __metadata("design:type", String)
    ], ProjectTemplateBase.prototype, "color", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], ProjectTemplateBase.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gid" }),
        __metadata("design:type", String)
    ], ProjectTemplateBase.prototype, "gid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "html_description" }),
        __metadata("design:type", String)
    ], ProjectTemplateBase.prototype, "htmlDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], ProjectTemplateBase.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "owner" }),
        (0, class_transformer_1.Type)(function () { return ProjectTemplateBaseOwner; }),
        __metadata("design:type", ProjectTemplateBaseOwner)
    ], ProjectTemplateBase.prototype, "owner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "public" }),
        __metadata("design:type", Boolean)
    ], ProjectTemplateBase.prototype, "public", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: datevariablecompact_1.DateVariableCompact }),
        (0, class_transformer_1.Expose)({ name: "requested_dates" }),
        (0, class_transformer_1.Type)(function () { return datevariablecompact_1.DateVariableCompact; }),
        __metadata("design:type", Array)
    ], ProjectTemplateBase.prototype, "requestedDates", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_type" }),
        __metadata("design:type", String)
    ], ProjectTemplateBase.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "team" }),
        (0, class_transformer_1.Type)(function () { return teamcompact_1.TeamCompact; }),
        __metadata("design:type", teamcompact_1.TeamCompact)
    ], ProjectTemplateBase.prototype, "team", void 0);
    return ProjectTemplateBase;
}(utils_1.SpeakeasyBase));
exports.ProjectTemplateBase = ProjectTemplateBase;
