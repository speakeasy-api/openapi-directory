/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetInvestorRootTypeForInvestor - JSON for the Investor resource type
 */
public class GetInvestorRootTypeForInvestor {
    @JsonProperty("address")
    public GetInvestorRootTypeForInvestorAddress address;
    public GetInvestorRootTypeForInvestor withAddress(GetInvestorRootTypeForInvestorAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * Array of bank account IDs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bank_accounts")
    public String[] bankAccounts;
    public GetInvestorRootTypeForInvestor withBankAccounts(String[] bankAccounts) {
        this.bankAccounts = bankAccounts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public GetInvestorRootTypeForInvestor withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("date_of_birth")
    public GetInvestorRootTypeForInvestorDateOfBirth dateOfBirth;
    public GetInvestorRootTypeForInvestor withDateOfBirth(GetInvestorRootTypeForInvestorDateOfBirth dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dealing_status")
    public GetInvestorRootTypeForInvestorDealingStatusEnum dealingStatus;
    public GetInvestorRootTypeForInvestor withDealingStatus(GetInvestorRootTypeForInvestorDealingStatusEnum dealingStatus) {
        this.dealingStatus = dealingStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public GetInvestorRootTypeForInvestor withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Status of an investor best describes their personal circumstances.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employment_status")
    public GetInvestorRootTypeForInvestorEmploymentStatusEnum employmentStatus;
    public GetInvestorRootTypeForInvestor withEmploymentStatus(GetInvestorRootTypeForInvestorEmploymentStatusEnum employmentStatus) {
        this.employmentStatus = employmentStatus;
        return this;
    }
    
    /**
     * Beneficiary and nominee list of the expression of wish.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expression_of_wish")
    public GetInvestorRootTypeForInvestorExpressionOfWish expressionOfWish;
    public GetInvestorRootTypeForInvestor withExpressionOfWish(GetInvestorRootTypeForInvestorExpressionOfWish expressionOfWish) {
        this.expressionOfWish = expressionOfWish;
        return this;
    }
    
    @JsonProperty("first_name")
    public String firstName;
    public GetInvestorRootTypeForInvestor withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gender")
    public String gender;
    public GetInvestorRootTypeForInvestor withGender(String gender) {
        this.gender = gender;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("home_number")
    public String homeNumber;
    public GetInvestorRootTypeForInvestor withHomeNumber(String homeNumber) {
        this.homeNumber = homeNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_numbers")
    public GetInvestorRootTypeForInvestorIdNumbers[] idNumbers;
    public GetInvestorRootTypeForInvestor withIdNumbers(GetInvestorRootTypeForInvestorIdNumbers[] idNumbers) {
        this.idNumbers = idNumbers;
        return this;
    }
    
    @JsonProperty("investor_id")
    public String investorId;
    public GetInvestorRootTypeForInvestor withInvestorId(String investorId) {
        this.investorId = investorId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kyc_aml_status")
    public GetInvestorRootTypeForInvestorKycAmlStatusEnum kycAmlStatus;
    public GetInvestorRootTypeForInvestor withKycAmlStatus(GetInvestorRootTypeForInvestorKycAmlStatusEnum kycAmlStatus) {
        this.kycAmlStatus = kycAmlStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("kyc_aml_status_last_updated")
    public OffsetDateTime kycAmlStatusLastUpdated;
    public GetInvestorRootTypeForInvestor withKycAmlStatusLastUpdated(OffsetDateTime kycAmlStatusLastUpdated) {
        this.kycAmlStatusLastUpdated = kycAmlStatusLastUpdated;
        return this;
    }
    
    @JsonProperty("last_name")
    public String lastName;
    public GetInvestorRootTypeForInvestor withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Additional details of the lifetime allowance protections of the investor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lta_protection_details")
    public GetInvestorRootTypeForInvestorLtaProtectionDetails[] ltaProtectionDetails;
    public GetInvestorRootTypeForInvestor withLtaProtectionDetails(GetInvestorRootTypeForInvestorLtaProtectionDetails[] ltaProtectionDetails) {
        this.ltaProtectionDetails = ltaProtectionDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mifid_tax_id")
    public String mifidTaxId;
    public GetInvestorRootTypeForInvestor withMifidTaxId(String mifidTaxId) {
        this.mifidTaxId = mifidTaxId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobile_number")
    public String mobileNumber;
    public GetInvestorRootTypeForInvestor withMobileNumber(String mobileNumber) {
        this.mobileNumber = mobileNumber;
        return this;
    }
    
    /**
     * Whether the investor has triggered the Money Purchase Annual Allowance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mpaa_triggered")
    public Boolean mpaaTriggered;
    public GetInvestorRootTypeForInvestor withMpaaTriggered(Boolean mpaaTriggered) {
        this.mpaaTriggered = mpaaTriggered;
        return this;
    }
    
    /**
     * Date of triggering the Money Purchase Annual Allowance. It is required if mpaa_triggered is true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mpaa_triggered_date")
    public String mpaaTriggeredDate;
    public GetInvestorRootTypeForInvestor withMpaaTriggeredDate(String mpaaTriggeredDate) {
        this.mpaaTriggeredDate = mpaaTriggeredDate;
        return this;
    }
    
    /**
     * 3 character country code inline with ISO 3166-1 alpha-3
     */
    @JsonProperty("nationality")
    public String nationality;
    public GetInvestorRootTypeForInvestor withNationality(String nationality) {
        this.nationality = nationality;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("office_number")
    public String officeNumber;
    public GetInvestorRootTypeForInvestor withOfficeNumber(String officeNumber) {
        this.officeNumber = officeNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference_version")
    public Long referenceVersion;
    public GetInvestorRootTypeForInvestor withReferenceVersion(Long referenceVersion) {
        this.referenceVersion = referenceVersion;
        return this;
    }
    
    /**
     * Intended retirement age of the investor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retirement_age")
    public Double retirementAge;
    public GetInvestorRootTypeForInvestor withRetirementAge(Double retirementAge) {
        this.retirementAge = retirementAge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public GetInvestorRootTypeForInvestorStatusEnum status;
    public GetInvestorRootTypeForInvestor withStatus(GetInvestorRootTypeForInvestorStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonProperty("tax_id")
    public String taxId;
    public GetInvestorRootTypeForInvestor withTaxId(String taxId) {
        this.taxId = taxId;
        return this;
    }
    
    /**
     * Residence of the investor for tax purposes. (for example, to claim relief at source) GB-ENG=England GB-NIR=Northern Ireland GB-SCT=Scotland GB-WLS=Wales
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_residence")
    public GetInvestorRootTypeForInvestorTaxResidenceEnum taxResidence;
    public GetInvestorRootTypeForInvestor withTaxResidence(GetInvestorRootTypeForInvestorTaxResidenceEnum taxResidence) {
        this.taxResidence = taxResidence;
        return this;
    }
    
    @JsonProperty("tax_residency_compliant")
    public Boolean taxResidencyCompliant;
    public GetInvestorRootTypeForInvestor withTaxResidencyCompliant(Boolean taxResidencyCompliant) {
        this.taxResidencyCompliant = taxResidencyCompliant;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public GetInvestorRootTypeForInvestor withTitle(String title) {
        this.title = title;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public GetInvestorRootTypeForInvestor withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
