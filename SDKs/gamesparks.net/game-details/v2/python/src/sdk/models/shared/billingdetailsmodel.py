"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BillingDetailsModel:
    r"""OK"""
    
    building: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('building') }})  
    city: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city') }})  
    company_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companyName') }})  
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})  
    email1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email1') }})  
    first_name1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName1') }})  
    last_name1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName1') }})  
    postcode: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postcode') }})  
    street: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('street') }})  
    email2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email2'), 'exclude': lambda f: f is None }})  
    email3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email3'), 'exclude': lambda f: f is None }})  
    first_name2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName2'), 'exclude': lambda f: f is None }})  
    first_name3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName3'), 'exclude': lambda f: f is None }})  
    last_name2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName2'), 'exclude': lambda f: f is None }})  
    last_name3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName3'), 'exclude': lambda f: f is None }})  
    state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})  
    tax_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxNumber'), 'exclude': lambda f: f is None }})  
    