/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListIncomingTypedLinksRequestBody {
    /**
     * The consistency level to execute the request at.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConsistencyLevel")
    public ListIncomingTypedLinksRequestBodyConsistencyLevelEnum consistencyLevel;

    public ListIncomingTypedLinksRequestBody withConsistencyLevel(ListIncomingTypedLinksRequestBodyConsistencyLevelEnum consistencyLevel) {
        this.consistencyLevel = consistencyLevel;
        return this;
    }
    
    /**
     * Provides range filters for multiple attributes. When providing ranges to typed link selection, any inexact ranges must be specified at the end. Any attributes that do not have a range specified are presumed to match the entire range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FilterAttributeRanges")
    public org.openapis.openapi.models.shared.TypedLinkAttributeRange[] filterAttributeRanges;

    public ListIncomingTypedLinksRequestBody withFilterAttributeRanges(org.openapis.openapi.models.shared.TypedLinkAttributeRange[] filterAttributeRanges) {
        this.filterAttributeRanges = filterAttributeRanges;
        return this;
    }
    
    /**
     * Identifies the schema Amazon Resource Name (ARN) and facet name for the typed link.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FilterTypedLink")
    public ListIncomingTypedLinksRequestBodyFilterTypedLink filterTypedLink;

    public ListIncomingTypedLinksRequestBody withFilterTypedLink(ListIncomingTypedLinksRequestBodyFilterTypedLink filterTypedLink) {
        this.filterTypedLink = filterTypedLink;
        return this;
    }
    
    /**
     * The maximum number of results to retrieve.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxResults")
    public Long maxResults;

    public ListIncomingTypedLinksRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The pagination token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextToken")
    public String nextToken;

    public ListIncomingTypedLinksRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * The reference that identifies an object.
     */
    @JsonProperty("ObjectReference")
    public ListIncomingTypedLinksRequestBodyObjectReference objectReference;

    public ListIncomingTypedLinksRequestBody withObjectReference(ListIncomingTypedLinksRequestBodyObjectReference objectReference) {
        this.objectReference = objectReference;
        return this;
    }
    
    public ListIncomingTypedLinksRequestBody(@JsonProperty("ObjectReference") ListIncomingTypedLinksRequestBodyObjectReference objectReference) {
        this.objectReference = objectReference;
  }
}
