"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deliveryid as shared_deliveryid
from ..shared import pickupstoreinfo as shared_pickupstoreinfo
from ..shared import sla as shared_sla
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LogisticsInfoDeliveryChannels:
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Delivery channel's shipping type, which can be `delivery` or `pickup-in-point`."""  
    stock_balance: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stockBalance') }})
    r"""Stock check for an SKU availability."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LogisticsInfo:
    
    address_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressId') }})
    r"""Address ID."""  
    delivery_channel: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryChannel') }})
    r"""If the delivery channel is `delivery` or `pickup-in-point`."""  
    delivery_channels: list[LogisticsInfoDeliveryChannels] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryChannels') }})
    r"""List of delivery channels associated with the trade policy."""  
    delivery_company: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryCompany') }})
    r"""[Carrier](https://help.vtex.com/en/tutorial/transportadoras-na-vtex--7u9duMD5UQa2QQwukAWMcE) company's name."""  
    delivery_ids: list[shared_deliveryid.DeliveryID] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryIds') }})
    r"""Information about delivery IDs."""  
    delivery_window: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryWindow') }})
    r"""[Scheduled delivery](https://help.vtex.com/tutorial/scheduled-delivery--22g3HAVCGLFiU7xugShOBi) window information, if it applies to the item."""  
    entity_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entityId') }})
    r"""Shipping address entity ID."""  
    item_index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemIndex') }})
    r"""Index of the item starting from 0."""  
    list_price: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listPrice') }})
    r"""SKU's optional price for a specific trade policy."""  
    lock_ttl: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lockTTL') }})
    r"""Logistics [reservation](https://help.vtex.com/en/tutorial/how-does-reservation-work--tutorials_92) waiting time."""  
    pickup_point_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupPointId') }})
    r"""[Pickup point](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R)'s ID."""  
    pickup_store_info: shared_pickupstoreinfo.PickupStoreInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupStoreInfo') }})
    r"""Detailed information about a [pickup point](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R)."""  
    polygon_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('polygonName') }})
    r"""Name of the [polygon](https://help.vtex.com/en/tutorial/registering-geolocation/) associated with the shipping policy."""  
    price: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price') }})
    r"""Shipping price for the item in cents. Does not account for the whole order's shipping price."""  
    selected_sla: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selectedSla') }})
    r"""Selected shipping option."""  
    selling_price: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellingPrice') }})
    r"""Item's selling price."""  
    shipping_estimate: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shippingEstimate') }})
    r"""Total shipping estimate time in days. For instance, three business days is represented `3bd`."""  
    shipping_estimate_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shippingEstimateDate') }})
    r"""Shipping estimate date. It is defined only after the confirmation of the order."""  
    ships_to: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipsTo') }})
    r"""Three letters ISO code of the country of the shipping address (ISO 3166 ALPHA-3)."""  
    slas: list[shared_sla.SLA] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slas') }})
    r"""Information on Service Level Agreement (SLA), corresponding to [shipping policies](https://help.vtex.com/tutorial/shipping-policy--tutorials_140)."""  
    transit_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transitTime') }})
    r"""Duration in business days of the time the carrier takes in transit to fulfill the order. For example, three business days is represented `3bd`."""  
    version_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionId') }})
    r"""Shipping address version ID."""  
    