<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ComputeScheduling - Scheduling information for VM on maintenance/restart behaviour and node allocation in sole tenant nodes.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ComputeScheduling
{
	#[\JMS\Serializer\Annotation\SerializedName('automaticRestart')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $automaticRestart = null;
    
    /**
     * The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node. Ignored if no node_affinites are configured.
     * 
     * @var ?int $minNodeCpus
     */
	#[\JMS\Serializer\Annotation\SerializedName('minNodeCpus')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minNodeCpus = null;
    
    /**
     * A set of node affinity and anti-affinity configurations for sole tenant nodes.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SchedulingNodeAffinity> $nodeAffinities
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeAffinities')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SchedulingNodeAffinity>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $nodeAffinities = null;
    
    /**
     * How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ComputeSchedulingOnHostMaintenanceEnum $onHostMaintenance
     */
	#[\JMS\Serializer\Annotation\SerializedName('onHostMaintenance')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ComputeSchedulingOnHostMaintenanceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ComputeSchedulingOnHostMaintenanceEnum $onHostMaintenance = null;
    
    /**
     * Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user). This configuration is identical to `automaticRestart` field in Compute Engine create instance under scheduling. It was changed to an enum (instead of a boolean) to match the default value in Compute Engine which is automatic restart.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ComputeSchedulingRestartTypeEnum $restartType
     */
	#[\JMS\Serializer\Annotation\SerializedName('restartType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ComputeSchedulingRestartTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ComputeSchedulingRestartTypeEnum $restartType = null;
    
	public function __construct()
	{
		$this->automaticRestart = null;
		$this->minNodeCpus = null;
		$this->nodeAffinities = null;
		$this->onHostMaintenance = null;
		$this->restartType = null;
	}
}
