"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class KubernetesMetadata:
    r"""KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters."""
    
    kubernetes_api_server_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kubernetesApiServerVersion'), 'exclude': lambda f: f is None }})
    r"""Output only. Kubernetes API server version string as reported by '/version'."""  
    memory_mb: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memoryMb'), 'exclude': lambda f: f is None }})
    r"""Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB."""  
    node_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeCount'), 'exclude': lambda f: f is None }})
    r"""Output only. Node count as reported by Kubernetes nodes resources."""  
    node_provider_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeProviderId'), 'exclude': lambda f: f is None }})
    r"""Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers."""  
    vcpu_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vcpuCount'), 'exclude': lambda f: f is None }})
    r"""Output only. vCPU count as reported by Kubernetes nodes resources."""  
    