"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ChangelogTypeEnum(str, Enum):
    UNKNOWN = ''
    ADDED = 'added'
    FIXED = 'fixed'
    IMPROVED = 'improved'
    DEPRECATED = 'deprecated'
    REMOVED = 'removed'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Changelog:
    r"""Changelog object"""
    
    body: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('body') }})
    r"""Body content of the changelog"""  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""Title of the changelog"""  
    hidden: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hidden'), 'exclude': lambda f: f is None }})
    r"""Visibility of the changelog"""  
    type: Optional[ChangelogTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    