// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListExecutionsStateEnum - A structure used to filter the tasks by their current state.
type ListExecutionsStateEnum string

const (
	ListExecutionsStateEnumQueued     ListExecutionsStateEnum = "QUEUED"
	ListExecutionsStateEnumInProgress ListExecutionsStateEnum = "IN_PROGRESS"
	ListExecutionsStateEnumCanceled   ListExecutionsStateEnum = "CANCELED"
	ListExecutionsStateEnumFailed     ListExecutionsStateEnum = "FAILED"
	ListExecutionsStateEnumSucceeded  ListExecutionsStateEnum = "SUCCEEDED"
	ListExecutionsStateEnumRejected   ListExecutionsStateEnum = "REJECTED"
	ListExecutionsStateEnumTimedOut   ListExecutionsStateEnum = "TIMED_OUT"
)

func (e *ListExecutionsStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "QUEUED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "CANCELED":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "TIMED_OUT":
		*e = ListExecutionsStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExecutionsStateEnum: %s", s)
	}
}

type ListExecutionsQueryParams struct {
	// The maximum number of tasks to list per page.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// A pagination token to continue to the next page of tasks.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// A structure used to filter the tasks by their current state.
	State *ListExecutionsStateEnum `queryParam:"style=form,explode=true,name=state"`
	// The ID of the task.
	TaskID string `queryParam:"style=form,explode=true,name=taskId"`
}

type ListExecutionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListExecutionsRequest struct {
	QueryParams ListExecutionsQueryParams
	Headers     ListExecutionsHeaders
}

type ListExecutionsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListExecutionsOutput *shared.ListExecutionsOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
