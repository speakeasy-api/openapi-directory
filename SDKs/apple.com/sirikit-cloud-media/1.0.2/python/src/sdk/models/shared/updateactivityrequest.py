"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import constraints as shared_constraints
from ..shared import playercontext as shared_playercontext
from ..shared import queueactivityreportevent_enum as shared_queueactivityreportevent_enum
from ..shared import useractivity as shared_useractivity
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateActivityRequest:
    
    report: shared_queueactivityreportevent_enum.QueueActivityReportEventEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('report') }})  
    timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    user_activity: shared_useractivity.UserActivity = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userActivity') }})  
    version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version') }})  
    constraints: Optional[shared_constraints.Constraints] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('constraints'), 'exclude': lambda f: f is None }})  
    now_playing: Optional[shared_playercontext.PlayerContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nowPlaying'), 'exclude': lambda f: f is None }})  
    previously_playing: Optional[shared_playercontext.PlayerContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previouslyPlaying'), 'exclude': lambda f: f is None }})  
    