"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class MediaAssetAttributesAttachmentTypeEnum(str, Enum):
    r"""This will be replaced by the relationship `attachment` in a future update.<br/>
    The type of the entity this media asset is attached to
    """
    IMAGE = 'Image'
    SEGMENT = 'Segment'
    SEGMENT_LIST = 'SegmentList'

class MediaAssetAttributesStyleEnum(str, Enum):
    r"""The style of the media asset. A media asset is part of a collection of related media files,
    for example an image or an episode (audio). Images usually have differently sized versions,
    and episodes can have different audio formats.
    """
    INFO = 'info'
    ITUNES = 'itunes'
    MEDIUM = 'medium'
    ORIGINAL = 'original'
    REGULAR = 'regular'
    SQUARE_400 = 'square-400'
    SQUARE_640 = 'square-640'
    SQUARE_888 = 'square-888'
    SQUARE_3000 = 'square-3000'
    STRIPPED_ORIGINAL = 'stripped-original'
    THUMB = 'thumb'
    WAVEFORM_DATA = 'waveform_data'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MediaAssetAttributes:
    
    attachment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachment_id'), 'exclude': lambda f: f is None }})
    r"""This will be replaced by the relationship `attachment` in a future update.<br/>
    The ID of the entity this media asset is attached to
    """  
    attachment_type: Optional[MediaAssetAttributesAttachmentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachment_type'), 'exclude': lambda f: f is None }})
    r"""This will be replaced by the relationship `attachment` in a future update.<br/>
    The type of the entity this media asset is attached to
    """  
    cdn_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cdn_url'), 'exclude': lambda f: f is None }})
    r"""The CDN-URL where the media asset is available"""  
    content_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content_type'), 'exclude': lambda f: f is None }})
    r"""The MIME type of the media asset"""  
    created_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    file_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_name'), 'exclude': lambda f: f is None }})
    r"""The filename of the media asset without any path components."""  
    file_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_size'), 'exclude': lambda f: f is None }})
    r"""The size in bytes of the media asset"""  
    size_height: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size_height'), 'exclude': lambda f: f is None }})
    r"""The height in pixels of the media asset, if the media asset is an image"""  
    size_width: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size_width'), 'exclude': lambda f: f is None }})
    r"""The width in pixels of the media asset, if the media asset is an image"""  
    style: Optional[MediaAssetAttributesStyleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('style'), 'exclude': lambda f: f is None }})
    r"""The style of the media asset. A media asset is part of a collection of related media files,
    for example an image or an episode (audio). Images usually have differently sized versions,
    and episodes can have different audio formats.
    """  
    updated_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated_at'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MediaAsset:
    
    attributes: Optional[MediaAssetAttributes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributes'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of resource. This is always `media_assets`"""  
    