<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CodeScanningAlertItems
{
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     * 
     * @var \DateTime $dismissedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('dismissed_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $dismissedAt;
    
    /**
     * Simple User
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser $dismissedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('dismissed_by')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser')]
    public NullableSimpleUser $dismissedBy;
    
    /**
     * **Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertDismissedReasonEnum $dismissedReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('dismissed_reason')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertDismissedReasonEnum>')]
    public CodeScanningAlertDismissedReasonEnum $dismissedReason;
    
    /**
     * The GitHub URL of the alert resource.
     * 
     * @var string $htmlUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('html_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $htmlUrl;
    
    /**
     * The REST API URL for fetching the list of instances for an alert.
     * 
     * @var string $instancesUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('instances_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $instancesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('most_recent_instance')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertInstance')]
    public CodeScanningAlertInstance $mostRecentInstance;
    
    /**
     * The security alert number.
     * 
     * @var int $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $number;
    
	#[\JMS\Serializer\Annotation\SerializedName('rule')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertRuleSummary')]
    public CodeScanningAlertRuleSummary $rule;
    
    /**
     * State of a code scanning alert.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertStateEnum>')]
    public CodeScanningAlertStateEnum $state;
    
	#[\JMS\Serializer\Annotation\SerializedName('tool')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CodeScanningAnalysisTool')]
    public CodeScanningAnalysisTool $tool;
    
    /**
     * The REST API URL of the alert resource.
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	public function __construct()
	{
		$this->createdAt = new \DateTime();
		$this->dismissedAt = new \DateTime();
		$this->dismissedBy = new \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser();
		$this->dismissedReason = \OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertDismissedReasonEnum::LESS_THAN_NIL_GREATER_THAN;
		$this->htmlUrl = "";
		$this->instancesUrl = "";
		$this->mostRecentInstance = new \OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertInstance();
		$this->number = 0;
		$this->rule = new \OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertRuleSummary();
		$this->state = \OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertStateEnum::OPEN;
		$this->tool = new \OpenAPI\OpenAPI\Models\Shared\CodeScanningAnalysisTool();
		$this->url = "";
	}
}
