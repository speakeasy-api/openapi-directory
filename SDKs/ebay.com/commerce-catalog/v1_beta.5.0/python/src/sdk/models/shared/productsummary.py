"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aspect as shared_aspect
from ..shared import image as shared_image
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductSummary:
    r"""This type contains a summary of a specified product. The product summary includes information about the product's identifiers, product images, aspects, and the <b>getProduct</b> URL for retrieving the product details."""
    
    additional_images: Optional[list[shared_image.Image]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalImages'), 'exclude': lambda f: f is None }})
    r"""Contains information about additional images associated with this product. For the primary image, see the <b>image</b> container."""  
    aspects: Optional[list[shared_aspect.Aspect]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aspects'), 'exclude': lambda f: f is None }})
    r"""Contains an array of the category aspects and their values that are associated with this product."""  
    brand: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brand'), 'exclude': lambda f: f is None }})
    r"""The manufacturer's brand name for this product."""  
    ean: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ean'), 'exclude': lambda f: f is None }})
    r"""A list of all European Article Numbers (EANs) that identify this product."""  
    epid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('epid'), 'exclude': lambda f: f is None }})
    r"""The eBay product ID of this product."""  
    gtin: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gtin'), 'exclude': lambda f: f is None }})
    r"""A list of all GTINs that identify this product. This includes all of the values returned in the <b>ean</b>, <b>isbn</b>, and <b>upc</b> fields."""  
    image: Optional[shared_image.Image] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""This type contains information about a product image stored in eBay Picture Services (EPS)."""  
    isbn: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isbn'), 'exclude': lambda f: f is None }})
    r"""A list of all International Standard Book Numbers (ISBNs) that identify this product."""  
    mpn: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mpn'), 'exclude': lambda f: f is None }})
    r"""A list of all Manufacturer Product Number (MPN) values that the manufacturer uses to identify this product."""  
    product_href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productHref'), 'exclude': lambda f: f is None }})
    r"""The URI of the <b>getProduct</b> call request that retrieves this product's details."""  
    product_web_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productWebUrl'), 'exclude': lambda f: f is None }})
    r"""The URL for this product's eBay product page."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The title of this product on eBay."""  
    upc: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upc'), 'exclude': lambda f: f is None }})
    r"""A list of Universal Product Codes (UPCs) that identify this product."""  
    