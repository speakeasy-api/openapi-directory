// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateTopicPostPMRequestBody struct {
	// Required for new private message.
	Archetype *string `json:"archetype,omitempty"`
	// Optional if creating a new topic, and ignored if creating
	// a new post.
	Category  *int64  `json:"category,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	// Provide a URL from a remote system to associate a forum
	// topic with that URL, typically for using Discourse as a comments
	// system for an external blog.
	EmbedURL *string `json:"embed_url,omitempty"`
	// Provide an external_id from a remote system to associate
	// a forum topic with that id.
	ExternalID *string `json:"external_id,omitempty"`
	Raw        string  `json:"raw"`
	// Required for private message, comma separated.
	TargetRecipients *string `json:"target_recipients,omitempty"`
	// Deprecated. Use target_recipients instead.
	TargetUsernames *string `json:"target_usernames,omitempty"`
	// Required if creating a new topic or new private message.
	Title *string `json:"title,omitempty"`
	// Required if creating a new post.
	TopicID *int64 `json:"topic_id,omitempty"`
}

type CreateTopicPostPMRequest struct {
	Request *CreateTopicPostPMRequestBody `request:"mediaType=application/json"`
}

type CreateTopicPostPM200ApplicationJSONActionsSummary struct {
	CanAct bool  `json:"can_act"`
	ID     int64 `json:"id"`
}

// CreateTopicPostPM200ApplicationJSON - post created
type CreateTopicPostPM200ApplicationJSON struct {
	ActionsSummary              []CreateTopicPostPM200ApplicationJSONActionsSummary `json:"actions_summary"`
	Admin                       bool                                                `json:"admin"`
	AvatarTemplate              string                                              `json:"avatar_template"`
	Bookmarked                  bool                                                `json:"bookmarked"`
	CanDelete                   bool                                                `json:"can_delete"`
	CanEdit                     bool                                                `json:"can_edit"`
	CanRecover                  bool                                                `json:"can_recover"`
	CanViewEditHistory          bool                                                `json:"can_view_edit_history"`
	CanWiki                     bool                                                `json:"can_wiki"`
	Cooked                      string                                              `json:"cooked"`
	CreatedAt                   string                                              `json:"created_at"`
	DeletedAt                   string                                              `json:"deleted_at"`
	DisplayUsername             string                                              `json:"display_username"`
	DraftSequence               int64                                               `json:"draft_sequence"`
	EditReason                  string                                              `json:"edit_reason"`
	FlairBgColor                string                                              `json:"flair_bg_color"`
	FlairColor                  string                                              `json:"flair_color"`
	FlairName                   string                                              `json:"flair_name"`
	FlairURL                    string                                              `json:"flair_url"`
	Hidden                      bool                                                `json:"hidden"`
	ID                          int64                                               `json:"id"`
	IncomingLinkCount           int64                                               `json:"incoming_link_count"`
	MentionedUsers              []interface{}                                       `json:"mentioned_users,omitempty"`
	Moderator                   bool                                                `json:"moderator"`
	Name                        string                                              `json:"name"`
	PostNumber                  int64                                               `json:"post_number"`
	PostType                    int64                                               `json:"post_type"`
	PrimaryGroupName            string                                              `json:"primary_group_name"`
	QuoteCount                  int64                                               `json:"quote_count"`
	Raw                         *string                                             `json:"raw,omitempty"`
	ReadersCount                int64                                               `json:"readers_count"`
	Reads                       int64                                               `json:"reads"`
	ReplyCount                  int64                                               `json:"reply_count"`
	ReplyToPostNumber           string                                              `json:"reply_to_post_number"`
	ReviewableID                string                                              `json:"reviewable_id"`
	ReviewableScoreCount        int64                                               `json:"reviewable_score_count"`
	ReviewableScorePendingCount int64                                               `json:"reviewable_score_pending_count"`
	Score                       int64                                               `json:"score"`
	Staff                       bool                                                `json:"staff"`
	TopicID                     int64                                               `json:"topic_id"`
	TopicSlug                   string                                              `json:"topic_slug"`
	TrustLevel                  int64                                               `json:"trust_level"`
	UpdatedAt                   string                                              `json:"updated_at"`
	UserDeleted                 bool                                                `json:"user_deleted"`
	UserID                      int64                                               `json:"user_id"`
	UserTitle                   string                                              `json:"user_title"`
	Username                    string                                              `json:"username"`
	Version                     int64                                               `json:"version"`
	Wiki                        bool                                                `json:"wiki"`
	Yours                       bool                                                `json:"yours"`
}

type CreateTopicPostPMResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// post created
	CreateTopicPostPM200ApplicationJSONObject *CreateTopicPostPM200ApplicationJSON
}
