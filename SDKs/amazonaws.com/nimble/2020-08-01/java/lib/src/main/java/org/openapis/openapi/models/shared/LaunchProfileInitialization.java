/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LaunchProfileInitialization - &lt;p&gt;A launch profile initialization contains information required for a workstation or server to connect to a launch profile.&lt;/p&gt; &lt;p&gt;This includes scripts, endpoints, security groups, subnets, and other configuration.&lt;/p&gt;
 */
public class LaunchProfileInitialization {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeDirectory")
    public LaunchProfileInitializationActiveDirectory activeDirectory;
    public LaunchProfileInitialization withActiveDirectory(LaunchProfileInitializationActiveDirectory activeDirectory) {
        this.activeDirectory = activeDirectory;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ec2SecurityGroupIds")
    public String[] ec2SecurityGroupIds;
    public LaunchProfileInitialization withEc2SecurityGroupIds(String[] ec2SecurityGroupIds) {
        this.ec2SecurityGroupIds = ec2SecurityGroupIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchProfileId")
    public String launchProfileId;
    public LaunchProfileInitialization withLaunchProfileId(String launchProfileId) {
        this.launchProfileId = launchProfileId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchProfileProtocolVersion")
    public String launchProfileProtocolVersion;
    public LaunchProfileInitialization withLaunchProfileProtocolVersion(String launchProfileProtocolVersion) {
        this.launchProfileProtocolVersion = launchProfileProtocolVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchPurpose")
    public String launchPurpose;
    public LaunchProfileInitialization withLaunchPurpose(String launchPurpose) {
        this.launchPurpose = launchPurpose;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public LaunchProfileInitialization withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public LaunchProfilePlatformEnum platform;
    public LaunchProfileInitialization withPlatform(LaunchProfilePlatformEnum platform) {
        this.platform = platform;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("systemInitializationScripts")
    public LaunchProfileInitializationScript[] systemInitializationScripts;
    public LaunchProfileInitialization withSystemInitializationScripts(LaunchProfileInitializationScript[] systemInitializationScripts) {
        this.systemInitializationScripts = systemInitializationScripts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userInitializationScripts")
    public LaunchProfileInitializationScript[] userInitializationScripts;
    public LaunchProfileInitialization withUserInitializationScripts(LaunchProfileInitializationScript[] userInitializationScripts) {
        this.userInitializationScripts = userInitializationScripts;
        return this;
    }
    
}
