// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PathFilterPathMatchPositionEnum - Indicates the position of the path the filter should match to (first, last, or any event in path).
type PathFilterPathMatchPositionEnum string

const (
	PathFilterPathMatchPositionEnumAny   PathFilterPathMatchPositionEnum = "ANY"
	PathFilterPathMatchPositionEnumFirst PathFilterPathMatchPositionEnum = "FIRST"
	PathFilterPathMatchPositionEnumLast  PathFilterPathMatchPositionEnum = "LAST"
)

func (e *PathFilterPathMatchPositionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ANY":
		fallthrough
	case "FIRST":
		fallthrough
	case "LAST":
		*e = PathFilterPathMatchPositionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PathFilterPathMatchPositionEnum: %s", s)
	}
}

// PathFilter - Path filters specify which paths to include in a report. A path is the result of combining DV360 events based on User ID to create a workflow of users' actions. When a path filter is set, the resulting report will only include paths that match the specified event at the specified position. All other paths will be excluded.
type PathFilter struct {
	// Filter on an event to be applied to some part of the path.
	EventFilters []EventFilter `json:"eventFilters,omitempty"`
	// Indicates the position of the path the filter should match to (first, last, or any event in path).
	PathMatchPosition *PathFilterPathMatchPositionEnum `json:"pathMatchPosition,omitempty"`
}
