<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InboundWireTransferSimulationResultTransactionTransactionSourceAccountTransferIntention - A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InboundWireTransferSimulationResultTransactionTransactionSourceAccountTransferIntention
{
    /**
     * The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundWireTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InboundWireTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum>')]
    public InboundWireTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum $currency;
    
    /**
     * The description you chose to give the transfer.
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * The identifier of the Account to where the Account Transfer was sent.
     * 
     * @var string $destinationAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $destinationAccountId;
    
    /**
     * The identifier of the Account from where the Account Transfer was sent.
     * 
     * @var string $sourceAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceAccountId;
    
    /**
     * The identifier of the Account Transfer that led to this Pending Transaction.
     * 
     * @var string $transferId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transfer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $transferId;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->currency = \OpenAPI\OpenAPI\Models\Shared\InboundWireTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum::CAD;
		$this->description = "";
		$this->destinationAccountId = "";
		$this->sourceAccountId = "";
		$this->transferId = "";
	}
}
