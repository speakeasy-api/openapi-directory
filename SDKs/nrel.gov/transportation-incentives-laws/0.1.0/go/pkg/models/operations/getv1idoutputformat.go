// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetV1IDOutputFormatOutputFormatEnum - Response format
type GetV1IDOutputFormatOutputFormatEnum string

const (
	GetV1IDOutputFormatOutputFormatEnumJSON GetV1IDOutputFormatOutputFormatEnum = "json"
	GetV1IDOutputFormatOutputFormatEnumXML  GetV1IDOutputFormatOutputFormatEnum = "xml"
)

func (e *GetV1IDOutputFormatOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		*e = GetV1IDOutputFormatOutputFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetV1IDOutputFormatOutputFormatEnum: %s", s)
	}
}

type GetV1IDOutputFormatPathParams struct {
	// The id of the law that you are searching
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
	// Response format
	OutputFormat GetV1IDOutputFormatOutputFormatEnum `pathParam:"style=simple,explode=false,name=output_format"`
}

type GetV1IDOutputFormatQueryParams struct {
	// API Key
	APIKey string `queryParam:"style=form,explode=true,name=api_key"`
	// The 'true' value returns a record no matter its status (current, expired, archived, or repealed). The default 'false' value returns only current laws and incentives.
	Expired *bool `queryParam:"style=form,explode=true,name=expired"`
	// Include points of contacts in the return value.
	Poc *bool `queryParam:"style=form,explode=true,name=poc"`
}

type GetV1IDOutputFormatRequest struct {
	PathParams  GetV1IDOutputFormatPathParams
	QueryParams GetV1IDOutputFormatQueryParams
}

type GetV1IDOutputFormatResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
