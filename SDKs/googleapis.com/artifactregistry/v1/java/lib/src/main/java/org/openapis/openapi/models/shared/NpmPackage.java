/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NpmPackage - NpmPackage represents an npm artifact.
 */
public class NpmPackage {
    /**
     * Output only. Time the package was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public NpmPackage withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Required. registry_location, project_id, repository_name and npm_package forms a unique package For example, "projects/test-project/locations/us-west4/repositories/test-repo/npmPackages/ npm_test:1.0.0", where "us-west4" is the registry_location, "test-project" is the project_id, "test-repo" is the repository_name and npm_test:1.0.0" is the npm package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public NpmPackage withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Package for the artifact.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageName")
    public String packageName;

    public NpmPackage withPackageName(String packageName) {
        this.packageName = packageName;
        return this;
    }
    
    /**
     * Tags attached to this package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;

    public NpmPackage withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Output only. Time the package was updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public NpmPackage withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * Version of this package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public NpmPackage withVersion(String version) {
        this.version = version;
        return this;
    }
    
    public NpmPackage(){}
}
