/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Token - Represents the smallest syntactic building block of the text.
 */
public class Token {
    /**
     * Represents dependency parse tree information for a token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dependencyEdge")
    public DependencyEdge dependencyEdge;
    public Token withDependencyEdge(DependencyEdge dependencyEdge) {
        this.dependencyEdge = dependencyEdge;
        return this;
    }
    
    /**
     * [Lemma](https://en.wikipedia.org/wiki/Lemma_%28morphology%29) of the token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lemma")
    public String lemma;
    public Token withLemma(String lemma) {
        this.lemma = lemma;
        return this;
    }
    
    /**
     * Represents part of speech information for a token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partOfSpeech")
    public PartOfSpeech partOfSpeech;
    public Token withPartOfSpeech(PartOfSpeech partOfSpeech) {
        this.partOfSpeech = partOfSpeech;
        return this;
    }
    
    /**
     * Represents an output piece of text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public TextSpan text;
    public Token withText(TextSpan text) {
        this.text = text;
        return this;
    }
    
}
