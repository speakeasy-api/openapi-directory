// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetCallsSecurity struct {
	BearerAuth string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

// GetCallsOrderEnum - Either ascending or  descending order.
type GetCallsOrderEnum string

const (
	GetCallsOrderEnumAsc  GetCallsOrderEnum = "asc"
	GetCallsOrderEnumDesc GetCallsOrderEnum = "desc"
)

func (e *GetCallsOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetCallsOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCallsOrderEnum: %s", s)
	}
}

// GetCallsStatusEnum - Filter by call status
type GetCallsStatusEnum string

const (
	GetCallsStatusEnumStarted    GetCallsStatusEnum = "started"
	GetCallsStatusEnumRinging    GetCallsStatusEnum = "ringing"
	GetCallsStatusEnumAnswered   GetCallsStatusEnum = "answered"
	GetCallsStatusEnumMachine    GetCallsStatusEnum = "machine"
	GetCallsStatusEnumCompleted  GetCallsStatusEnum = "completed"
	GetCallsStatusEnumBusy       GetCallsStatusEnum = "busy"
	GetCallsStatusEnumCancelled  GetCallsStatusEnum = "cancelled"
	GetCallsStatusEnumFailed     GetCallsStatusEnum = "failed"
	GetCallsStatusEnumRejected   GetCallsStatusEnum = "rejected"
	GetCallsStatusEnumTimeout    GetCallsStatusEnum = "timeout"
	GetCallsStatusEnumUnanswered GetCallsStatusEnum = "unanswered"
)

func (e *GetCallsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "started":
		fallthrough
	case "ringing":
		fallthrough
	case "answered":
		fallthrough
	case "machine":
		fallthrough
	case "completed":
		fallthrough
	case "busy":
		fallthrough
	case "cancelled":
		fallthrough
	case "failed":
		fallthrough
	case "rejected":
		fallthrough
	case "timeout":
		fallthrough
	case "unanswered":
		*e = GetCallsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCallsStatusEnum: %s", s)
	}
}

type GetCallsRequest struct {
	// Return all the records associated with a specific conversation.
	ConversationUUID *string `queryParam:"style=form,explode=true,name=conversation_uuid"`
	// Return the records that occurred before this point in time
	DateEnd *time.Time `queryParam:"style=form,explode=true,name=date_end"`
	// Return the records that occurred after this point in time
	DateStart *time.Time `queryParam:"style=form,explode=true,name=date_start"`
	// Either ascending or  descending order.
	Order *GetCallsOrderEnum `queryParam:"style=form,explode=true,name=order"`
	// Return this amount of records in the response
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Return calls from this index in the response
	RecordIndex *int64 `queryParam:"style=form,explode=true,name=record_index"`
	// Filter by call status
	Status *GetCallsStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type GetCallsResponse struct {
	ContentType string
	// OK
	GetCallsResponse *shared.GetCallsResponse
	StatusCode       int
	RawResponse      *http.Response
}
