// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDefineExpressionActionEnum
type GETDefineExpressionActionEnum string

const (
	GETDefineExpressionActionEnumDefineExpression GETDefineExpressionActionEnum = "DefineExpression"
)

func (e GETDefineExpressionActionEnum) ToPointer() *GETDefineExpressionActionEnum {
	return &e
}

func (e *GETDefineExpressionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DefineExpression":
		*e = GETDefineExpressionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDefineExpressionActionEnum: %v", v)
	}
}

// GETDefineExpressionExpression - A named expression that can be evaluated at search time. Can be used to sort the search results, define other expressions, or return computed information in the search results.
type GETDefineExpressionExpression struct {
	// Names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore).
	ExpressionName string `queryParam:"name=ExpressionName"`
	// The expression to evaluate for sorting while processing a search request. The <code>Expression</code> syntax is based on JavaScript expressions. For more information, see <a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html" target="_blank">Configuring Expressions</a> in the <i>Amazon CloudSearch Developer Guide</i>.
	ExpressionValue string `queryParam:"name=ExpressionValue"`
}

// GETDefineExpressionVersionEnum
type GETDefineExpressionVersionEnum string

const (
	GETDefineExpressionVersionEnumTwoThousandAndThirteen0101 GETDefineExpressionVersionEnum = "2013-01-01"
)

func (e GETDefineExpressionVersionEnum) ToPointer() *GETDefineExpressionVersionEnum {
	return &e
}

func (e *GETDefineExpressionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-01":
		*e = GETDefineExpressionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDefineExpressionVersionEnum: %v", v)
	}
}

type GETDefineExpressionRequest struct {
	Action     GETDefineExpressionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	DomainName string                        `queryParam:"style=form,explode=true,name=DomainName"`
	// A named expression that can be evaluated at search time. Can be used to sort the search results, define other expressions, or return computed information in the search results.
	Expression        GETDefineExpressionExpression  `queryParam:"style=form,explode=true,name=Expression"`
	Version           GETDefineExpressionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDefineExpressionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
