"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationStatisticEnum(str, Enum):
    STATISTIC_UNDEFINED = 'STATISTIC_UNDEFINED'
    MEAN = 'MEAN'
    MIN = 'MIN'
    MAX = 'MAX'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation:
    r"""Evaluates whether the column aggregate statistic lies between a specified range."""
    
    max_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxValue'), 'exclude': lambda f: f is None }})
    r"""The maximum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided."""  
    min_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minValue'), 'exclude': lambda f: f is None }})
    r"""The minimum column statistic value allowed for a row to pass this validation.At least one of min_value and max_value need to be provided."""  
    statistic: Optional[GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectationStatisticEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statistic'), 'exclude': lambda f: f is None }})  
    strict_max_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('strictMaxEnabled'), 'exclude': lambda f: f is None }})
    r"""Whether column statistic needs to be strictly lesser than ('<') the maximum, or if equality is allowed.Only relevant if a max_value has been defined. Default = false."""  
    strict_min_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('strictMinEnabled'), 'exclude': lambda f: f is None }})
    r"""Whether column statistic needs to be strictly greater than ('>') the minimum, or if equality is allowed.Only relevant if a min_value has been defined. Default = false."""  
    