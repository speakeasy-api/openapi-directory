<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class EntityReceiptDisbursementTotals
{
    /**
     * Cumulative candidate disbursements in a two year period, adjusted to avoid double counting.
     * 
     * @var ?float $cumulativeCandidateDisbursements
     */
	#[\JMS\Serializer\Annotation\SerializedName('cumulative_candidate_disbursements')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cumulativeCandidateDisbursements = null;
    
    /**
     * Cumulative candidate receipts in a two year period, adjusted to avoid double counting.
     * 
     * @var ?float $cumulativeCandidateReceipts
     */
	#[\JMS\Serializer\Annotation\SerializedName('cumulative_candidate_receipts')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cumulativeCandidateReceipts = null;
    
    /**
     * Cumulative PAC disbursements in a two year period, adjusted to avoid double counting.
     * 
     * @var ?float $cumulativePacDisbursements
     */
	#[\JMS\Serializer\Annotation\SerializedName('cumulative_pac_disbursements')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cumulativePacDisbursements = null;
    
    /**
     * Cumulative PAC recipts in a two year period, adjusted to avoid double counting.
     * 
     * @var ?float $cumulativePacReceipts
     */
	#[\JMS\Serializer\Annotation\SerializedName('cumulative_pac_receipts')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cumulativePacReceipts = null;
    
    /**
     * Cumulative party disbursements in a two year period, adjusted to avoid double counting.
     * 
     * @var ?float $cumulativePartyDisbursements
     */
	#[\JMS\Serializer\Annotation\SerializedName('cumulative_party_disbursements')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cumulativePartyDisbursements = null;
    
    /**
     * Cumulative party receipts in a two year period, adjusted to avoid double counting.
     * 
     * @var ?float $cumulativePartyReceipts
     */
	#[\JMS\Serializer\Annotation\SerializedName('cumulative_party_receipts')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cumulativePartyReceipts = null;
    
    /**
     * 
     * Filter records to only those that were applicable to a given
     * two-year period.The cycle begins with an odd year and is named
     * for its ending, even year.
     * 
     * 
     * @var ?int $cycle
     */
	#[\JMS\Serializer\Annotation\SerializedName('cycle')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cycle = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('end_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $endDate = null;
    
	public function __construct()
	{
		$this->cumulativeCandidateDisbursements = null;
		$this->cumulativeCandidateReceipts = null;
		$this->cumulativePacDisbursements = null;
		$this->cumulativePacReceipts = null;
		$this->cumulativePartyDisbursements = null;
		$this->cumulativePartyReceipts = null;
		$this->cycle = null;
		$this->endDate = null;
	}
}
