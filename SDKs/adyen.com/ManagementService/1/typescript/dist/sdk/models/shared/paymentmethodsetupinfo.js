"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentMethodSetupInfo = exports.PaymentMethodSetupInfoTypeEnum = exports.PaymentMethodSetupInfoShopperInteractionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var applepayinfo_1 = require("./applepayinfo");
var bcmcinfo_1 = require("./bcmcinfo");
var cartesbancairesinfo_1 = require("./cartesbancairesinfo");
var giropayinfo_1 = require("./giropayinfo");
var googlepayinfo_1 = require("./googlepayinfo");
var klarnainfo_1 = require("./klarnainfo");
var mealvoucherfrinfo_1 = require("./mealvoucherfrinfo");
var paypalinfo_1 = require("./paypalinfo");
var sofortinfo_1 = require("./sofortinfo");
var swishinfo_1 = require("./swishinfo");
var vippsinfo_1 = require("./vippsinfo");
var class_transformer_1 = require("class-transformer");
/**
 * The sales channel. Required if the merchant account does not have a sales channel. When you provide this field, it overrides the default sales channel set on the merchant account.
 *
 * @remarks
 *
 * Possible values: **eCommerce**, **pos**, **contAuth**, and **moto**.
 */
var PaymentMethodSetupInfoShopperInteractionEnum;
(function (PaymentMethodSetupInfoShopperInteractionEnum) {
    PaymentMethodSetupInfoShopperInteractionEnum["ECommerce"] = "eCommerce";
    PaymentMethodSetupInfoShopperInteractionEnum["Pos"] = "pos";
    PaymentMethodSetupInfoShopperInteractionEnum["Moto"] = "moto";
    PaymentMethodSetupInfoShopperInteractionEnum["ContAuth"] = "contAuth";
})(PaymentMethodSetupInfoShopperInteractionEnum = exports.PaymentMethodSetupInfoShopperInteractionEnum || (exports.PaymentMethodSetupInfoShopperInteractionEnum = {}));
/**
 * Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).
 */
var PaymentMethodSetupInfoTypeEnum;
(function (PaymentMethodSetupInfoTypeEnum) {
    PaymentMethodSetupInfoTypeEnum["Afterpaytouch"] = "afterpaytouch";
    PaymentMethodSetupInfoTypeEnum["Alipay"] = "alipay";
    PaymentMethodSetupInfoTypeEnum["AlipayHk"] = "alipay_hk";
    PaymentMethodSetupInfoTypeEnum["Amex"] = "amex";
    PaymentMethodSetupInfoTypeEnum["Applepay"] = "applepay";
    PaymentMethodSetupInfoTypeEnum["Bcmc"] = "bcmc";
    PaymentMethodSetupInfoTypeEnum["Blik"] = "blik";
    PaymentMethodSetupInfoTypeEnum["Cartebancaire"] = "cartebancaire";
    PaymentMethodSetupInfoTypeEnum["Clearpay"] = "clearpay";
    PaymentMethodSetupInfoTypeEnum["Cup"] = "cup";
    PaymentMethodSetupInfoTypeEnum["Diners"] = "diners";
    PaymentMethodSetupInfoTypeEnum["DirectEbanking"] = "directEbanking";
    PaymentMethodSetupInfoTypeEnum["DirectdebitGB"] = "directdebit_GB";
    PaymentMethodSetupInfoTypeEnum["Discover"] = "discover";
    PaymentMethodSetupInfoTypeEnum["EbankingFI"] = "ebanking_FI";
    PaymentMethodSetupInfoTypeEnum["EftposAustralia"] = "eftpos_australia";
    PaymentMethodSetupInfoTypeEnum["Elo"] = "elo";
    PaymentMethodSetupInfoTypeEnum["Elocredit"] = "elocredit";
    PaymentMethodSetupInfoTypeEnum["Elodebit"] = "elodebit";
    PaymentMethodSetupInfoTypeEnum["Girocard"] = "girocard";
    PaymentMethodSetupInfoTypeEnum["Giropay"] = "giropay";
    PaymentMethodSetupInfoTypeEnum["Googlepay"] = "googlepay";
    PaymentMethodSetupInfoTypeEnum["Hiper"] = "hiper";
    PaymentMethodSetupInfoTypeEnum["Hipercard"] = "hipercard";
    PaymentMethodSetupInfoTypeEnum["Ideal"] = "ideal";
    PaymentMethodSetupInfoTypeEnum["InteracCard"] = "interac_card";
    PaymentMethodSetupInfoTypeEnum["Jcb"] = "jcb";
    PaymentMethodSetupInfoTypeEnum["Klarna"] = "klarna";
    PaymentMethodSetupInfoTypeEnum["KlarnaAccount"] = "klarna_account";
    PaymentMethodSetupInfoTypeEnum["KlarnaPaynow"] = "klarna_paynow";
    PaymentMethodSetupInfoTypeEnum["Maestro"] = "maestro";
    PaymentMethodSetupInfoTypeEnum["Mbway"] = "mbway";
    PaymentMethodSetupInfoTypeEnum["Mc"] = "mc";
    PaymentMethodSetupInfoTypeEnum["Mcdebit"] = "mcdebit";
    PaymentMethodSetupInfoTypeEnum["MealVoucherFR"] = "mealVoucher_FR";
    PaymentMethodSetupInfoTypeEnum["Mobilepay"] = "mobilepay";
    PaymentMethodSetupInfoTypeEnum["Multibanco"] = "multibanco";
    PaymentMethodSetupInfoTypeEnum["OnlineBankingPL"] = "onlineBanking_PL";
    PaymentMethodSetupInfoTypeEnum["Paypal"] = "paypal";
    PaymentMethodSetupInfoTypeEnum["Payshop"] = "payshop";
    PaymentMethodSetupInfoTypeEnum["Swish"] = "swish";
    PaymentMethodSetupInfoTypeEnum["Trustly"] = "trustly";
    PaymentMethodSetupInfoTypeEnum["Vipps"] = "vipps";
    PaymentMethodSetupInfoTypeEnum["Visa"] = "visa";
    PaymentMethodSetupInfoTypeEnum["Visadebit"] = "visadebit";
    PaymentMethodSetupInfoTypeEnum["Vpay"] = "vpay";
    PaymentMethodSetupInfoTypeEnum["Wechatpay"] = "wechatpay";
    PaymentMethodSetupInfoTypeEnum["WechatpayPos"] = "wechatpay_pos";
})(PaymentMethodSetupInfoTypeEnum = exports.PaymentMethodSetupInfoTypeEnum || (exports.PaymentMethodSetupInfoTypeEnum = {}));
var PaymentMethodSetupInfo = /** @class */ (function (_super) {
    __extends(PaymentMethodSetupInfo, _super);
    function PaymentMethodSetupInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "applePay" }),
        (0, class_transformer_1.Type)(function () { return applepayinfo_1.ApplePayInfo; }),
        __metadata("design:type", applepayinfo_1.ApplePayInfo)
    ], PaymentMethodSetupInfo.prototype, "applePay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bcmc" }),
        (0, class_transformer_1.Type)(function () { return bcmcinfo_1.BcmcInfo; }),
        __metadata("design:type", bcmcinfo_1.BcmcInfo)
    ], PaymentMethodSetupInfo.prototype, "bcmc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "businessLineId" }),
        __metadata("design:type", String)
    ], PaymentMethodSetupInfo.prototype, "businessLineId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cartesBancaires" }),
        (0, class_transformer_1.Type)(function () { return cartesbancairesinfo_1.CartesBancairesInfo; }),
        __metadata("design:type", cartesbancairesinfo_1.CartesBancairesInfo)
    ], PaymentMethodSetupInfo.prototype, "cartesBancaires", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "countries" }),
        __metadata("design:type", Array)
    ], PaymentMethodSetupInfo.prototype, "countries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currencies" }),
        __metadata("design:type", Array)
    ], PaymentMethodSetupInfo.prototype, "currencies", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customRoutingFlags" }),
        __metadata("design:type", Array)
    ], PaymentMethodSetupInfo.prototype, "customRoutingFlags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "giroPay" }),
        (0, class_transformer_1.Type)(function () { return giropayinfo_1.GiroPayInfo; }),
        __metadata("design:type", giropayinfo_1.GiroPayInfo)
    ], PaymentMethodSetupInfo.prototype, "giroPay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "googlePay" }),
        (0, class_transformer_1.Type)(function () { return googlepayinfo_1.GooglePayInfo; }),
        __metadata("design:type", googlepayinfo_1.GooglePayInfo)
    ], PaymentMethodSetupInfo.prototype, "googlePay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "klarna" }),
        (0, class_transformer_1.Type)(function () { return klarnainfo_1.KlarnaInfo; }),
        __metadata("design:type", klarnainfo_1.KlarnaInfo)
    ], PaymentMethodSetupInfo.prototype, "klarna", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mealVoucher_FR" }),
        (0, class_transformer_1.Type)(function () { return mealvoucherfrinfo_1.MealVoucherFRInfo; }),
        __metadata("design:type", mealvoucherfrinfo_1.MealVoucherFRInfo)
    ], PaymentMethodSetupInfo.prototype, "mealVoucherFR", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paypal" }),
        (0, class_transformer_1.Type)(function () { return paypalinfo_1.PayPalInfo; }),
        __metadata("design:type", paypalinfo_1.PayPalInfo)
    ], PaymentMethodSetupInfo.prototype, "paypal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reference" }),
        __metadata("design:type", String)
    ], PaymentMethodSetupInfo.prototype, "reference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shopperInteraction" }),
        __metadata("design:type", String)
    ], PaymentMethodSetupInfo.prototype, "shopperInteraction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sofort" }),
        (0, class_transformer_1.Type)(function () { return sofortinfo_1.SofortInfo; }),
        __metadata("design:type", sofortinfo_1.SofortInfo)
    ], PaymentMethodSetupInfo.prototype, "sofort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storeId" }),
        __metadata("design:type", String)
    ], PaymentMethodSetupInfo.prototype, "storeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "swish" }),
        (0, class_transformer_1.Type)(function () { return swishinfo_1.SwishInfo; }),
        __metadata("design:type", swishinfo_1.SwishInfo)
    ], PaymentMethodSetupInfo.prototype, "swish", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], PaymentMethodSetupInfo.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vipps" }),
        (0, class_transformer_1.Type)(function () { return vippsinfo_1.VippsInfo; }),
        __metadata("design:type", vippsinfo_1.VippsInfo)
    ], PaymentMethodSetupInfo.prototype, "vipps", void 0);
    return PaymentMethodSetupInfo;
}(utils_1.SpeakeasyBase));
exports.PaymentMethodSetupInfo = PaymentMethodSetupInfo;
