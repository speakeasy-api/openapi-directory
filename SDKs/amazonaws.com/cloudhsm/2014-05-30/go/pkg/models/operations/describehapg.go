// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeHapgXAmzTargetEnum
type DescribeHapgXAmzTargetEnum string

const (
	DescribeHapgXAmzTargetEnumCloudHsmFrontendServiceDescribeHapg DescribeHapgXAmzTargetEnum = "CloudHsmFrontendService.DescribeHapg"
)

func (e DescribeHapgXAmzTargetEnum) ToPointer() *DescribeHapgXAmzTargetEnum {
	return &e
}

func (e *DescribeHapgXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CloudHsmFrontendService.DescribeHapg":
		*e = DescribeHapgXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeHapgXAmzTargetEnum: %v", v)
	}
}

type DescribeHapgRequest struct {
	DescribeHapgRequest shared.DescribeHapgRequest `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          DescribeHapgXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeHapgResponse struct {
	// CloudHsmInternalException
	CloudHsmInternalException interface{}
	// CloudHsmServiceException
	CloudHsmServiceException interface{}
	ContentType              string
	// Success
	DescribeHapgResponse *shared.DescribeHapgResponse
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
