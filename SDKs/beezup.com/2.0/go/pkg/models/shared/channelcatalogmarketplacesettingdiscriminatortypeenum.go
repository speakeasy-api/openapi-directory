// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ChannelCatalogMarketplaceSettingDiscriminatorTypeEnum string

const (
	ChannelCatalogMarketplaceSettingDiscriminatorTypeEnumChannelCatalogMarketplaceStringSetting  ChannelCatalogMarketplaceSettingDiscriminatorTypeEnum = "channelCatalogMarketplaceStringSetting"
	ChannelCatalogMarketplaceSettingDiscriminatorTypeEnumChannelCatalogMarketplaceIntegerSetting ChannelCatalogMarketplaceSettingDiscriminatorTypeEnum = "channelCatalogMarketplaceIntegerSetting"
	ChannelCatalogMarketplaceSettingDiscriminatorTypeEnumChannelCatalogMarketplaceBooleanSetting ChannelCatalogMarketplaceSettingDiscriminatorTypeEnum = "channelCatalogMarketplaceBooleanSetting"
	ChannelCatalogMarketplaceSettingDiscriminatorTypeEnumChannelCatalogMarketplaceNumberSetting  ChannelCatalogMarketplaceSettingDiscriminatorTypeEnum = "channelCatalogMarketplaceNumberSetting"
)

func (e ChannelCatalogMarketplaceSettingDiscriminatorTypeEnum) ToPointer() *ChannelCatalogMarketplaceSettingDiscriminatorTypeEnum {
	return &e
}

func (e *ChannelCatalogMarketplaceSettingDiscriminatorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "channelCatalogMarketplaceStringSetting":
		fallthrough
	case "channelCatalogMarketplaceIntegerSetting":
		fallthrough
	case "channelCatalogMarketplaceBooleanSetting":
		fallthrough
	case "channelCatalogMarketplaceNumberSetting":
		*e = ChannelCatalogMarketplaceSettingDiscriminatorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChannelCatalogMarketplaceSettingDiscriminatorTypeEnum: %v", v)
	}
}
