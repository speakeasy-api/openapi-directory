"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import agentstatus_enum as shared_agentstatus_enum
from ..shared import componenttype_enum as shared_componenttype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ComponentStatusData:
    r"""Data on the status of agent components."""
    
    capability_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capabilityArn') }})  
    component_type: shared_componenttype_enum.ComponentTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('componentType') }})  
    dataflow_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataflowId') }})  
    status: shared_agentstatus_enum.AgentStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    bytes_received: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bytesReceived'), 'exclude': lambda f: f is None }})  
    bytes_sent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bytesSent'), 'exclude': lambda f: f is None }})  
    packets_dropped: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packetsDropped'), 'exclude': lambda f: f is None }})  
    