<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification - Private password leak verification info.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification
{
    /**
     * Output only. List of prefixes of the encrypted potential password leaks that matched the given parameters. They must be compared with the client-side decryption prefix of `reencrypted_user_credentials_hash`
     * 
     * @var ?array<string> $encryptedLeakMatchPrefixes
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptedLeakMatchPrefixes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $encryptedLeakMatchPrefixes = null;
    
    /**
     * Optional. Encrypted Scrypt hash of the canonicalized username+password. It is re-encrypted by the server and returned through `reencrypted_user_credentials_hash`.
     * 
     * @var ?string $encryptedUserCredentialsHash
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptedUserCredentialsHash')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $encryptedUserCredentialsHash = null;
    
    /**
     * Optional. Exactly 26-bit prefix of the SHA-256 hash of the canonicalized username. It is used to look up password leaks associated with that hash prefix.
     * 
     * @var ?string $lookupHashPrefix
     */
	#[\JMS\Serializer\Annotation\SerializedName('lookupHashPrefix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lookupHashPrefix = null;
    
    /**
     * Output only. Corresponds to the re-encryption of the `encrypted_user_credentials_hash` field. It is used to match potential password leaks within `encrypted_leak_match_prefixes`.
     * 
     * @var ?string $reencryptedUserCredentialsHash
     */
	#[\JMS\Serializer\Annotation\SerializedName('reencryptedUserCredentialsHash')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reencryptedUserCredentialsHash = null;
    
	public function __construct()
	{
		$this->encryptedLeakMatchPrefixes = null;
		$this->encryptedUserCredentialsHash = null;
		$this->lookupHashPrefix = null;
		$this->reencryptedUserCredentialsHash = null;
	}
}
