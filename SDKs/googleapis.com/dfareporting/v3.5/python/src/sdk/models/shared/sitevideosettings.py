"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import obaicon as shared_obaicon
from ..shared import sitecompanionsetting as shared_sitecompanionsetting
from ..shared import siteskippablesetting as shared_siteskippablesetting
from ..shared import sitetranscodesetting as shared_sitetranscodesetting
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SiteVideoSettingsOrientationEnum(str, Enum):
    r"""Orientation of a site template used for video. This will act as default for new placements created under this site."""
    ANY = 'ANY'
    LANDSCAPE = 'LANDSCAPE'
    PORTRAIT = 'PORTRAIT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SiteVideoSettings:
    r"""Video Settings"""
    
    companion_settings: Optional[shared_sitecompanionsetting.SiteCompanionSetting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companionSettings'), 'exclude': lambda f: f is None }})
    r"""Companion Settings"""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"dfareporting#siteVideoSettings\\"."""  
    oba_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('obaEnabled'), 'exclude': lambda f: f is None }})
    r"""Whether OBA icons are enabled for this placement."""  
    oba_settings: Optional[shared_obaicon.ObaIcon] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('obaSettings'), 'exclude': lambda f: f is None }})
    r"""Online Behavioral Advertiser icon."""  
    orientation: Optional[SiteVideoSettingsOrientationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orientation'), 'exclude': lambda f: f is None }})
    r"""Orientation of a site template used for video. This will act as default for new placements created under this site."""  
    skippable_settings: Optional[shared_siteskippablesetting.SiteSkippableSetting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skippableSettings'), 'exclude': lambda f: f is None }})
    r"""Skippable Settings"""  
    transcode_settings: Optional[shared_sitetranscodesetting.SiteTranscodeSetting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transcodeSettings'), 'exclude': lambda f: f is None }})
    r"""Transcode Settings"""  
    