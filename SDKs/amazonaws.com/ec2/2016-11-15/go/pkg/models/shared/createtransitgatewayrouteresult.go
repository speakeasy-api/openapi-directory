// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateTransitGatewayRouteResultRouteStateEnum - The state of the route.
type CreateTransitGatewayRouteResultRouteStateEnum string

const (
	CreateTransitGatewayRouteResultRouteStateEnumPending   CreateTransitGatewayRouteResultRouteStateEnum = "pending"
	CreateTransitGatewayRouteResultRouteStateEnumActive    CreateTransitGatewayRouteResultRouteStateEnum = "active"
	CreateTransitGatewayRouteResultRouteStateEnumBlackhole CreateTransitGatewayRouteResultRouteStateEnum = "blackhole"
	CreateTransitGatewayRouteResultRouteStateEnumDeleting  CreateTransitGatewayRouteResultRouteStateEnum = "deleting"
	CreateTransitGatewayRouteResultRouteStateEnumDeleted   CreateTransitGatewayRouteResultRouteStateEnum = "deleted"
)

func (e CreateTransitGatewayRouteResultRouteStateEnum) ToPointer() *CreateTransitGatewayRouteResultRouteStateEnum {
	return &e
}

func (e *CreateTransitGatewayRouteResultRouteStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "active":
		fallthrough
	case "blackhole":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = CreateTransitGatewayRouteResultRouteStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayRouteResultRouteStateEnum: %v", v)
	}
}

// CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum - The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
type CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum string

const (
	CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumVpc                  CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "vpc"
	CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumVpn                  CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "vpn"
	CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumDirectConnectGateway CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "direct-connect-gateway"
	CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumConnect              CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "connect"
	CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumPeering              CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "peering"
	CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumTgwPeering           CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "tgw-peering"
)

func (e CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum) ToPointer() *CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum {
	return &e
}

func (e *CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum: %v", v)
	}
}

// CreateTransitGatewayRouteResultRouteTransitGatewayAttachments - Describes a route attachment.
type CreateTransitGatewayRouteResultRouteTransitGatewayAttachments struct {
	ResourceID                 *string
	ResourceType               *CreateTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum
	TransitGatewayAttachmentID *string
}

// CreateTransitGatewayRouteResultRouteTypeEnum - The route type.
type CreateTransitGatewayRouteResultRouteTypeEnum string

const (
	CreateTransitGatewayRouteResultRouteTypeEnumStatic     CreateTransitGatewayRouteResultRouteTypeEnum = "static"
	CreateTransitGatewayRouteResultRouteTypeEnumPropagated CreateTransitGatewayRouteResultRouteTypeEnum = "propagated"
)

func (e CreateTransitGatewayRouteResultRouteTypeEnum) ToPointer() *CreateTransitGatewayRouteResultRouteTypeEnum {
	return &e
}

func (e *CreateTransitGatewayRouteResultRouteTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "static":
		fallthrough
	case "propagated":
		*e = CreateTransitGatewayRouteResultRouteTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayRouteResultRouteTypeEnum: %v", v)
	}
}

// CreateTransitGatewayRouteResultRoute - Information about the route.
type CreateTransitGatewayRouteResultRoute struct {
	DestinationCidrBlock                   *string
	PrefixListID                           *string
	State                                  *CreateTransitGatewayRouteResultRouteStateEnum
	TransitGatewayAttachments              []CreateTransitGatewayRouteResultRouteTransitGatewayAttachments
	TransitGatewayRouteTableAnnouncementID *string
	Type                                   *CreateTransitGatewayRouteResultRouteTypeEnum
}

// CreateTransitGatewayRouteResult - Success
type CreateTransitGatewayRouteResult struct {
	Route *CreateTransitGatewayRouteResultRoute
}
