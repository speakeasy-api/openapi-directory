// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PublicUpdateSubscriptionStatusRequestLegalBasisEnum - Legal basis for updating the contact's status (required for GDPR enabled portals).
type PublicUpdateSubscriptionStatusRequestLegalBasisEnum string

const (
	PublicUpdateSubscriptionStatusRequestLegalBasisEnumLegitimateInterestPql    PublicUpdateSubscriptionStatusRequestLegalBasisEnum = "LEGITIMATE_INTEREST_PQL"
	PublicUpdateSubscriptionStatusRequestLegalBasisEnumLegitimateInterestClient PublicUpdateSubscriptionStatusRequestLegalBasisEnum = "LEGITIMATE_INTEREST_CLIENT"
	PublicUpdateSubscriptionStatusRequestLegalBasisEnumPerformanceOfContract    PublicUpdateSubscriptionStatusRequestLegalBasisEnum = "PERFORMANCE_OF_CONTRACT"
	PublicUpdateSubscriptionStatusRequestLegalBasisEnumConsentWithNotice        PublicUpdateSubscriptionStatusRequestLegalBasisEnum = "CONSENT_WITH_NOTICE"
	PublicUpdateSubscriptionStatusRequestLegalBasisEnumNonGdpr                  PublicUpdateSubscriptionStatusRequestLegalBasisEnum = "NON_GDPR"
	PublicUpdateSubscriptionStatusRequestLegalBasisEnumProcessAndStore          PublicUpdateSubscriptionStatusRequestLegalBasisEnum = "PROCESS_AND_STORE"
	PublicUpdateSubscriptionStatusRequestLegalBasisEnumLegitimateInterestOther  PublicUpdateSubscriptionStatusRequestLegalBasisEnum = "LEGITIMATE_INTEREST_OTHER"
)

func (e *PublicUpdateSubscriptionStatusRequestLegalBasisEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LEGITIMATE_INTEREST_PQL":
		fallthrough
	case "LEGITIMATE_INTEREST_CLIENT":
		fallthrough
	case "PERFORMANCE_OF_CONTRACT":
		fallthrough
	case "CONSENT_WITH_NOTICE":
		fallthrough
	case "NON_GDPR":
		fallthrough
	case "PROCESS_AND_STORE":
		fallthrough
	case "LEGITIMATE_INTEREST_OTHER":
		*e = PublicUpdateSubscriptionStatusRequestLegalBasisEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PublicUpdateSubscriptionStatusRequestLegalBasisEnum: %s", s)
	}
}

// PublicUpdateSubscriptionStatusRequest - A request to change the status of a contact's subscription.
type PublicUpdateSubscriptionStatusRequest struct {
	// Contact's email address.
	EmailAddress string `json:"emailAddress"`
	// Legal basis for updating the contact's status (required for GDPR enabled portals).
	LegalBasis *PublicUpdateSubscriptionStatusRequestLegalBasisEnum `json:"legalBasis,omitempty"`
	// A more detailed explanation to go with the legal basis (required for GDPR enabled portals).
	LegalBasisExplanation *string `json:"legalBasisExplanation,omitempty"`
	// ID of the subscription being updated for the contact.
	SubscriptionID string `json:"subscriptionId"`
}
