"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import webhookactivityresponse as shared_webhookactivityresponse
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class GetWebhookLogsRequest:
    
    ev_access_token: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-access-token', 'style': 'simple', 'explode': False }})
    r"""Access Token"""  
    ev_api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-api-key', 'style': 'simple', 'explode': False }})
    r"""API Key"""  
    end_date: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'endDate', 'style': 'form', 'explode': True }})
    r"""Latest date of entries to include in list"""  
    endpoint_url: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'endpointUrl', 'style': 'form', 'explode': True }})
    r"""Webhook listener endpoint"""  
    event: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'event', 'style': 'form', 'explode': True }})
    r"""Type of activity that triggered the webhook attempt"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Limit of the records list"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Records to skip before returning results."""  
    resource_path: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'resourcePath', 'style': 'form', 'explode': True }})
    r"""Path of the resource that triggered the webhook attempt"""  
    sort: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Comma separated list sort params"""  
    start_date: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'startDate', 'style': 'form', 'explode': True }})
    r"""Earliest date of entries to include in list"""  
    status_code: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'statusCode', 'style': 'form', 'explode': True }})
    r"""Response code from the webhook endpoint"""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'username', 'style': 'form', 'explode': True }})
    r"""Filter by triggering username."""  
    

@dataclasses.dataclass
class GetWebhookLogsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    webhook_activity_response: Optional[shared_webhookactivityresponse.WebhookActivityResponse] = dataclasses.field(default=None)
    r"""Successful operation"""  
    