/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IpReputation - IP Reputation information for a set of IPs in a specific reputation category.
 */
public class IpReputation {
    /**
     * Total number of unique IPs in this reputation category. This metric only pertains to traffic that passed [SPF](http://www.openspf.org/) or [DKIM](http://www.dkim.org/).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipCount")
    public String ipCount;

    public IpReputation withIpCount(String ipCount) {
        this.ipCount = ipCount;
        return this;
    }
    
    /**
     * Total number of unique IPs in this reputation category. This metric only pertains to traffic that passed [SPF](http://www.openspf.org/) or [DKIM](http://www.dkim.org/). Deprecated to be complied with ApiLinter for Quantities. Use ip_count instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numIps")
    public String numIps;

    public IpReputation withNumIps(String numIps) {
        this.numIps = numIps;
        return this;
    }
    
    /**
     * The reputation category this IP reputation represents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reputation")
    public IpReputationReputationEnum reputation;

    public IpReputation withReputation(IpReputationReputationEnum reputation) {
        this.reputation = reputation;
        return this;
    }
    
    /**
     * A sample of IPs in this reputation category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sampleIps")
    public String[] sampleIps;

    public IpReputation withSampleIps(String[] sampleIps) {
        this.sampleIps = sampleIps;
        return this;
    }
    
    public IpReputation(){}
}
