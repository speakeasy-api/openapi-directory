/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelStatus } from "./channelstatus";
import { Expose, Type } from "class-transformer";

/**
 * OK
 */
export class ChannelDetails extends SpeakeasyBase {
  /**
   * The required name of the channel including any qualifier, if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelId" })
  channelId: string;

  /**
   * In events relating to the activity of a channel in a specific region, this optionally identifies whether or not that region is responsible for global coordination of the channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isGlobalMaster" })
  isGlobalMaster?: boolean;

  /**
   * In events relating to the activity of a channel in a specific region, this optionally identifies the region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * A ChannelStatus instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => ChannelStatus)
  status?: ChannelStatus;
}
