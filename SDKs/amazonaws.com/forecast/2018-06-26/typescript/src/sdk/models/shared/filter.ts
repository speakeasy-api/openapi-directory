/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FilterConditionStringEnum } from "./filterconditionstringenum";
import { Expose } from "class-transformer";

/**
 * Describes a filter for choosing a subset of objects. Each filter consists of a condition and a match statement. The condition is either <code>IS</code> or <code>IS_NOT</code>, which specifies whether to include or exclude the objects that match the statement, respectively. The match statement consists of a key and a value.
 */
export class Filter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Condition" })
  condition: FilterConditionStringEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Key" })
  key: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value: string;
}
