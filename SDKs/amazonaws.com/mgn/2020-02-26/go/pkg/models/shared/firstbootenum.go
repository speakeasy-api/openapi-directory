// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FirstBootEnum string

const (
	FirstBootEnumWaiting   FirstBootEnum = "WAITING"
	FirstBootEnumSucceeded FirstBootEnum = "SUCCEEDED"
	FirstBootEnumUnknown   FirstBootEnum = "UNKNOWN"
	FirstBootEnumStopped   FirstBootEnum = "STOPPED"
)

func (e FirstBootEnum) ToPointer() *FirstBootEnum {
	return &e
}

func (e *FirstBootEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WAITING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "STOPPED":
		*e = FirstBootEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FirstBootEnum: %v", v)
	}
}
