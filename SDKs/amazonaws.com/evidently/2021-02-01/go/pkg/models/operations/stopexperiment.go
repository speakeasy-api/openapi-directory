// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopExperimentRequestBodyDesiredStateEnum - Specify whether the experiment is to be considered <code>COMPLETED</code> or <code>CANCELLED</code> after it stops.
type StopExperimentRequestBodyDesiredStateEnum string

const (
	StopExperimentRequestBodyDesiredStateEnumCompleted StopExperimentRequestBodyDesiredStateEnum = "COMPLETED"
	StopExperimentRequestBodyDesiredStateEnumCancelled StopExperimentRequestBodyDesiredStateEnum = "CANCELLED"
)

func (e StopExperimentRequestBodyDesiredStateEnum) ToPointer() *StopExperimentRequestBodyDesiredStateEnum {
	return &e
}

func (e *StopExperimentRequestBodyDesiredStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMPLETED":
		fallthrough
	case "CANCELLED":
		*e = StopExperimentRequestBodyDesiredStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StopExperimentRequestBodyDesiredStateEnum: %v", v)
	}
}

type StopExperimentRequestBody struct {
	// Specify whether the experiment is to be considered <code>COMPLETED</code> or <code>CANCELLED</code> after it stops.
	DesiredState *StopExperimentRequestBodyDesiredStateEnum `json:"desiredState,omitempty"`
	// A string that describes why you are stopping the experiment.
	Reason *string `json:"reason,omitempty"`
}

type StopExperimentRequest struct {
	RequestBody       StopExperimentRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The name of the experiment to stop.
	Experiment string `pathParam:"style=simple,explode=false,name=experiment"`
	// The name or ARN of the project that contains the experiment to stop.
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

type StopExperimentResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// Success
	StopExperimentResponse *shared.StopExperimentResponse
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
