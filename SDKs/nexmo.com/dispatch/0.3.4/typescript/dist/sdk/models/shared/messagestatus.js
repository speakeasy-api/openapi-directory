"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageStatus = exports.MessageStatusUsage = exports.MessageStatusUsageCurrencyEnum = exports.MessageStatusStatusEnum = exports.MessageStatusError = exports.MessageStatusLinks = exports.MessageStatusLinksWorkflow = void 0;
var utils_1 = require("../../../internal/utils");
var fromproperty_1 = require("./fromproperty");
var toproperty_1 = require("./toproperty");
var class_transformer_1 = require("class-transformer");
var MessageStatusLinksWorkflow = /** @class */ (function (_super) {
    __extends(MessageStatusLinksWorkflow, _super);
    function MessageStatusLinksWorkflow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dispatch_uuid" }),
        __metadata("design:type", String)
    ], MessageStatusLinksWorkflow.prototype, "dispatchUuid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "href" }),
        __metadata("design:type", String)
    ], MessageStatusLinksWorkflow.prototype, "href", void 0);
    return MessageStatusLinksWorkflow;
}(utils_1.SpeakeasyBase));
exports.MessageStatusLinksWorkflow = MessageStatusLinksWorkflow;
var MessageStatusLinks = /** @class */ (function (_super) {
    __extends(MessageStatusLinks, _super);
    function MessageStatusLinks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workflow" }),
        (0, class_transformer_1.Type)(function () { return MessageStatusLinksWorkflow; }),
        __metadata("design:type", MessageStatusLinksWorkflow)
    ], MessageStatusLinks.prototype, "workflow", void 0);
    return MessageStatusLinks;
}(utils_1.SpeakeasyBase));
exports.MessageStatusLinks = MessageStatusLinks;
var MessageStatusError = /** @class */ (function (_super) {
    __extends(MessageStatusError, _super);
    function MessageStatusError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", Number)
    ], MessageStatusError.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reason" }),
        __metadata("design:type", String)
    ], MessageStatusError.prototype, "reason", void 0);
    return MessageStatusError;
}(utils_1.SpeakeasyBase));
exports.MessageStatusError = MessageStatusError;
/**
 * The status of the message.
 */
var MessageStatusStatusEnum;
(function (MessageStatusStatusEnum) {
    MessageStatusStatusEnum["Submitted"] = "submitted";
    MessageStatusStatusEnum["Delivered"] = "delivered";
    MessageStatusStatusEnum["Read"] = "read";
    MessageStatusStatusEnum["Rejected"] = "rejected";
    MessageStatusStatusEnum["Undeliverable"] = "undeliverable";
})(MessageStatusStatusEnum = exports.MessageStatusStatusEnum || (exports.MessageStatusStatusEnum = {}));
/**
 * The charge currency in ISO 4217 format.
 */
var MessageStatusUsageCurrencyEnum;
(function (MessageStatusUsageCurrencyEnum) {
    MessageStatusUsageCurrencyEnum["Eur"] = "EUR";
})(MessageStatusUsageCurrencyEnum = exports.MessageStatusUsageCurrencyEnum || (exports.MessageStatusUsageCurrencyEnum = {}));
var MessageStatusUsage = /** @class */ (function (_super) {
    __extends(MessageStatusUsage, _super);
    function MessageStatusUsage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], MessageStatusUsage.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "price" }),
        __metadata("design:type", String)
    ], MessageStatusUsage.prototype, "price", void 0);
    return MessageStatusUsage;
}(utils_1.SpeakeasyBase));
exports.MessageStatusUsage = MessageStatusUsage;
/**
 * The callbacks for the message status are the same as defined in the Messaging API. The only difference will be that dispatch_uuid and link will be appended.
 */
var MessageStatus = /** @class */ (function (_super) {
    __extends(MessageStatus, _super);
    function MessageStatus() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "_links" }),
        (0, class_transformer_1.Type)(function () { return MessageStatusLinks; }),
        __metadata("design:type", MessageStatusLinks)
    ], MessageStatus.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        (0, class_transformer_1.Type)(function () { return MessageStatusError; }),
        __metadata("design:type", MessageStatusError)
    ], MessageStatus.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "from" }),
        (0, class_transformer_1.Type)(function () { return fromproperty_1.FromProperty; }),
        __metadata("design:type", fromproperty_1.FromProperty)
    ], MessageStatus.prototype, "from", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message_uuid" }),
        __metadata("design:type", String)
    ], MessageStatus.prototype, "messageUuid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], MessageStatus.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timestamp" }),
        __metadata("design:type", String)
    ], MessageStatus.prototype, "timestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "to" }),
        (0, class_transformer_1.Type)(function () { return toproperty_1.ToProperty; }),
        __metadata("design:type", toproperty_1.ToProperty)
    ], MessageStatus.prototype, "to", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "usage" }),
        (0, class_transformer_1.Type)(function () { return MessageStatusUsage; }),
        __metadata("design:type", MessageStatusUsage)
    ], MessageStatus.prototype, "usage", void 0);
    return MessageStatus;
}(utils_1.SpeakeasyBase));
exports.MessageStatus = MessageStatus;
