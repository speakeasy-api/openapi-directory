/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataSourceToIndexFieldMapping } from "./datasourcetoindexfieldmapping";
import { DataSourceVpcConfiguration } from "./datasourcevpcconfiguration";
import { Expose, Type } from "class-transformer";

/**
 * Provides the configuration information to connect to Quip as your data source.
 */
export class QuipConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "AttachmentFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  attachmentFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "CrawlAttachments" })
  crawlAttachments?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "CrawlChatRooms" })
  crawlChatRooms?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "CrawlFileComments" })
  crawlFileComments?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Domain" })
  domain: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExclusionPatterns" })
  exclusionPatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "FolderIds" })
  folderIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "InclusionPatterns" })
  inclusionPatterns?: string[];

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "MessageFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  messageFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "SecretArn" })
  secretArn: string;

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "ThreadFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  threadFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "VpcConfiguration" })
  @Type(() => DataSourceVpcConfiguration)
  vpcConfiguration?: DataSourceVpcConfiguration;
}
