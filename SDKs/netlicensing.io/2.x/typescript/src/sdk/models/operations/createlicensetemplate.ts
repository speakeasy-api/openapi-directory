/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CreateLicenseTemplateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateLicenseTemplateRequestBody extends SpeakeasyBase {
  /**
   * If set to 'false', the License Template is disabled. Licensee can not obtain any new Licenses off this License Template.
   */
  @SpeakeasyMetadata({ data: "form, name=active" })
  active: boolean;

  /**
   * If set to 'true', every new Licensee automatically gets one License out of this License Template on creation. Automatic Licenses must have their price set to 0.
   */
  @SpeakeasyMetadata({ data: "form, name=automatic" })
  automatic?: boolean;

  /**
   * Specifies currency for the License price. Check data types to discover which currencies are supported.
   */
  @SpeakeasyMetadata({ data: "form, name=currency" })
  currency?: string;

  /**
   * If set to 'true', this License Template is not shown in NetLicensing Shop as offered for purchase.
   */
  @SpeakeasyMetadata({ data: "form, name=hidden" })
  hidden?: boolean;

  /**
   * If set to 'true', Licenses from this License Template are not visible to the end customer, but participate in validation.
   */
  @SpeakeasyMetadata({ data: "form, name=hideLicenses" })
  hideLicenses?: boolean;

  /**
   * Type of Licenses created from this License Template. Supported types: FEATURE, TIMEVOLUME, FLOATING, QUANTITY
   */
  @SpeakeasyMetadata({ data: "form, name=licenseType" })
  licenseType: string;

  /**
   * Mandatory for 'FLOATING' License Type.
   */
  @SpeakeasyMetadata({ data: "form, name=maxSessions" })
  maxSessions?: string;

  /**
   * License Template name to create License Template object
   */
  @SpeakeasyMetadata({ data: "form, name=name" })
  name: string;

  /**
   * Unique number (across all Products of a Vendor) that identifies the License Template. Vendor can assign this number when creating a License Template or let NetLicensing generate one. Read-only after creation of the first License from this License Template.
   */
  @SpeakeasyMetadata({ data: "form, name=number" })
  number?: string;

  /**
   * Price for the License. If >0, it must always be accompanied by the currency specification.
   */
  @SpeakeasyMetadata({ data: "form, name=price" })
  price?: number;

  /**
   * Number of Product Module to create License Template object
   */
  @SpeakeasyMetadata({ data: "form, name=productModuleNumber" })
  productModuleNumber: string;

  /**
   * Mandatory for 'Pay-per-Use' and 'Node-Locked' License Model.
   */
  @SpeakeasyMetadata({ data: "form, name=quantity" })
  quantity?: string;

  /**
   * Mandatory for 'Quota' License Model.
   */
  @SpeakeasyMetadata({ data: "form, name=quota" })
  quota?: string;

  /**
   * Mandatory for 'TIMEVOLUME' License Type.
   */
  @SpeakeasyMetadata({ data: "form, name=timeVolume" })
  timeVolume?: string;

  /**
   * For 'TIMEVOLUME' License Type.
   */
  @SpeakeasyMetadata({ data: "form, name=timeVolumePeriod" })
  timeVolumePeriod?: string;
}

export class CreateLicenseTemplateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful request
   */
  @SpeakeasyMetadata()
  netlicensing?: shared.Netlicensing;
}
