/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CodeScanningDeleteAnalysisRequest {
    /**
     * The ID of the analysis, as returned from the `GET /repos/{owner}/{repo}/code-scanning/analyses` operation.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=analysis_id")
    public Long analysisId;

    public CodeScanningDeleteAnalysisRequest withAnalysisId(Long analysisId) {
        this.analysisId = analysisId;
        return this;
    }
    
    /**
     * Allow deletion if the specified analysis is the last in a set. If you attempt to delete the final analysis in a set without setting this parameter to `true`, you'll get a 400 response with the message: `Analysis is last of its type and deletion may result in the loss of historical alert data. Please specify confirm_delete.`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=confirm_delete")
    public String confirmDelete;

    public CodeScanningDeleteAnalysisRequest withConfirmDelete(String confirmDelete) {
        this.confirmDelete = confirmDelete;
        return this;
    }
    
    /**
     * The account owner of the repository. The name is not case sensitive.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=owner")
    public String owner;

    public CodeScanningDeleteAnalysisRequest withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * The name of the repository. The name is not case sensitive.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=repo")
    public String repo;

    public CodeScanningDeleteAnalysisRequest withRepo(String repo) {
        this.repo = repo;
        return this;
    }
    
    public CodeScanningDeleteAnalysisRequest(@JsonProperty("analysis_id") Long analysisId, @JsonProperty("owner") String owner, @JsonProperty("repo") String repo) {
        this.analysisId = analysisId;
        this.owner = owner;
        this.repo = repo;
  }
}
