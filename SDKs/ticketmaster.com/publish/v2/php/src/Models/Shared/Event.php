<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Event - Event
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Event
{
    /**
     * Indicate if the entity is active, inactive entity won't appear in Discovery API
     * 
     * @var ?bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
    /**
     * Additional informations of the entity - multi-lingual fields
     * 
     * @var ?array<string, string> $additionalInfos
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalInfos')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalInfos = null;
    
    /**
     * Ordered Attraction related to the event
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Attraction> $attractions
     */
	#[\JMS\Serializer\Annotation\SerializedName('attractions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Attraction>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $attractions = null;
    
    /**
     * Event's classifications
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Classification> $classifications
     */
	#[\JMS\Serializer\Annotation\SerializedName('classifications')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Classification>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $classifications = null;
    
    /**
     * Event's Dates
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EventDates $dates
     */
	#[\JMS\Serializer\Annotation\SerializedName('dates')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EventDates')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventDates $dates = null;
    
    /**
     * Descriptions of the entity - multi-lingual fields
     * 
     * @var ?array<string, string> $descriptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('descriptions')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $descriptions = null;
    
    /**
     * True if the entity is dicoverable in discovery API
     * 
     * @var ?bool $discoverable
     */
	#[\JMS\Serializer\Annotation\SerializedName('discoverable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $discoverable = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('distance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $distance = null;
    
    /**
     * Images of the entity
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Image> $images
     */
	#[\JMS\Serializer\Annotation\SerializedName('images')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Image>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $images = null;
    
    /**
     * Any information related to the event - multi-lingual fields
     * 
     * @var ?array<string, string> $infos
     */
	#[\JMS\Serializer\Annotation\SerializedName('infos')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $infos = null;
    
    /**
     * Location
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Location $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Location')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Location $location = null;
    
    /**
     * Names of the entity - multi-lingual fields
     * 
     * @var ?array<string, string> $names
     */
	#[\JMS\Serializer\Annotation\SerializedName('names')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $names = null;
    
    /**
     * Place
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Place $place
     */
	#[\JMS\Serializer\Annotation\SerializedName('place')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Place')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Place $place = null;
    
    /**
     * Any notes related to the event - multi-lingual fields
     * 
     * @var ?array<string, string> $pleaseNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('pleaseNotes')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $pleaseNotes = null;
    
    /**
     * Price ranges of this event
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PriceRange> $priceRanges
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceRanges')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PriceRange>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $priceRanges = null;
    
    /**
     * Promoter
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Promoter $promoter
     */
	#[\JMS\Serializer\Annotation\SerializedName('promoter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Promoter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Promoter $promoter = null;
    
    /**
     * The class defines the public visibility period on the Discovery/Publish API.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PublicVisibility $publicVisibility
     */
	#[\JMS\Serializer\Annotation\SerializedName('publicVisibility')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PublicVisibility')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PublicVisibility $publicVisibility = null;
    
    /**
     * References of this entity in an other system. Reference is the exact same entity
     * 
     * @var ?array<string, string> $references
     */
	#[\JMS\Serializer\Annotation\SerializedName('references')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $references = null;
    
    /**
     * Relationships on the entity, like if the entity is a duplicate of another one
     * 
     * @var ?array<array<string, mixed>> $relationships
     */
	#[\JMS\Serializer\Annotation\SerializedName('relationships')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $relationships = null;
    
    /**
     * Event's Sales Dates
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EventSalesDates $sales
     */
	#[\JMS\Serializer\Annotation\SerializedName('sales')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EventSalesDates')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventSalesDates $sales = null;
    
    /**
     * Source
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Source $source
     */
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Source')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Source $source = null;
    
    /**
     * Indicate if this is a test entity, by default test entities won't appear in discovery API
     * 
     * @var ?bool $test
     */
	#[\JMS\Serializer\Annotation\SerializedName('test')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $test = null;
    
    /**
     * Type of the entity
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\EventTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EventTypeEnum>')]
    public EventTypeEnum $type;
    
	#[\JMS\Serializer\Annotation\SerializedName('units')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $units = null;
    
    /**
     * URL of a web site detail page of the entity
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * Venue
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Venue $venue
     */
	#[\JMS\Serializer\Annotation\SerializedName('venue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Venue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Venue $venue = null;
    
    /**
     * Version of the entity. Version is to avoid updated an entity with an older version
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
	public function __construct()
	{
		$this->active = null;
		$this->additionalInfos = null;
		$this->attractions = null;
		$this->classifications = null;
		$this->dates = null;
		$this->descriptions = null;
		$this->discoverable = null;
		$this->distance = null;
		$this->images = null;
		$this->infos = null;
		$this->location = null;
		$this->names = null;
		$this->place = null;
		$this->pleaseNotes = null;
		$this->priceRanges = null;
		$this->promoter = null;
		$this->publicVisibility = null;
		$this->references = null;
		$this->relationships = null;
		$this->sales = null;
		$this->source = null;
		$this->test = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\EventTypeEnum::EVENT;
		$this->units = null;
		$this->url = null;
		$this->venue = null;
		$this->version = null;
	}
}
