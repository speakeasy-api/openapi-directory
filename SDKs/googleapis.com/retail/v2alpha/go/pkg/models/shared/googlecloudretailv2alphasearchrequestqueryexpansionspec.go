// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum - The condition under which query expansion should occur. Default to Condition.DISABLED.
type GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum string

const (
	GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnumConditionUnspecified GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum = "CONDITION_UNSPECIFIED"
	GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnumDisabled             GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum = "DISABLED"
	GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnumAuto                 GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum = "AUTO"
)

func (e GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum) ToPointer() *GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum {
	return &e
}

func (e *GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONDITION_UNSPECIFIED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "AUTO":
		*e = GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum: %v", v)
	}
}

// GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec - Specification to determine under which conditions query expansion should occur.
type GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpec struct {
	// The condition under which query expansion should occur. Default to Condition.DISABLED.
	Condition *GoogleCloudRetailV2alphaSearchRequestQueryExpansionSpecConditionEnum `json:"condition,omitempty"`
	// Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results.
	PinUnexpandedResults *bool `json:"pinUnexpandedResults,omitempty"`
}
