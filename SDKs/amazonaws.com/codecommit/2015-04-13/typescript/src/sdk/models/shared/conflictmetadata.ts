/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FileModes } from "./filemodes";
import { FileSizes } from "./filesizes";
import { IsBinaryFile } from "./isbinaryfile";
import { MergeOperations } from "./mergeoperations";
import { ObjectTypes } from "./objecttypes";
import { Expose, Type } from "class-transformer";

/**
 * Information about the metadata for a conflict in a merge operation.
 */
export class ConflictMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "contentConflict" })
  contentConflict?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "fileModeConflict" })
  fileModeConflict?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "fileModes" })
  @Type(() => FileModes)
  fileModes?: FileModes;

  @SpeakeasyMetadata()
  @Expose({ name: "filePath" })
  filePath?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fileSizes" })
  @Type(() => FileSizes)
  fileSizes?: FileSizes;

  @SpeakeasyMetadata()
  @Expose({ name: "isBinaryFile" })
  @Type(() => IsBinaryFile)
  isBinaryFile?: IsBinaryFile;

  @SpeakeasyMetadata()
  @Expose({ name: "mergeOperations" })
  @Type(() => MergeOperations)
  mergeOperations?: MergeOperations;

  @SpeakeasyMetadata()
  @Expose({ name: "numberOfConflicts" })
  numberOfConflicts?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "objectTypeConflict" })
  objectTypeConflict?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "objectTypes" })
  @Type(() => ObjectTypes)
  objectTypes?: ObjectTypes;
}
