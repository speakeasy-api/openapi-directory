/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * A structure that contains information about one version of a secret.
 */
export class SecretVersionsListEntry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyIds" })
  kmsKeyIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "LastAccessedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastAccessedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "VersionId" })
  versionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VersionStages" })
  versionStages?: string[];
}
