"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestDescription = exports.RestDescriptionIcons = exports.RestDescriptionAuth = exports.RestDescriptionAuthOauth2 = exports.RestDescriptionAuthOauth2Scopes = void 0;
var utils_1 = require("../../../internal/utils");
var jsonschema_1 = require("./jsonschema");
var restmethod_1 = require("./restmethod");
var restresource_1 = require("./restresource");
var class_transformer_1 = require("class-transformer");
/**
 * The scope value.
 */
var RestDescriptionAuthOauth2Scopes = /** @class */ (function (_super) {
    __extends(RestDescriptionAuthOauth2Scopes, _super);
    function RestDescriptionAuthOauth2Scopes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], RestDescriptionAuthOauth2Scopes.prototype, "description", void 0);
    return RestDescriptionAuthOauth2Scopes;
}(utils_1.SpeakeasyBase));
exports.RestDescriptionAuthOauth2Scopes = RestDescriptionAuthOauth2Scopes;
/**
 * OAuth 2.0 authentication information.
 */
var RestDescriptionAuthOauth2 = /** @class */ (function (_super) {
    __extends(RestDescriptionAuthOauth2, _super);
    function RestDescriptionAuthOauth2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: RestDescriptionAuthOauth2Scopes }),
        (0, class_transformer_1.Expose)({ name: "scopes" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], RestDescriptionAuthOauth2Scopes);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], RestDescriptionAuthOauth2.prototype, "scopes", void 0);
    return RestDescriptionAuthOauth2;
}(utils_1.SpeakeasyBase));
exports.RestDescriptionAuthOauth2 = RestDescriptionAuthOauth2;
/**
 * Authentication information.
 */
var RestDescriptionAuth = /** @class */ (function (_super) {
    __extends(RestDescriptionAuth, _super);
    function RestDescriptionAuth() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "oauth2" }),
        (0, class_transformer_1.Type)(function () { return RestDescriptionAuthOauth2; }),
        __metadata("design:type", RestDescriptionAuthOauth2)
    ], RestDescriptionAuth.prototype, "oauth2", void 0);
    return RestDescriptionAuth;
}(utils_1.SpeakeasyBase));
exports.RestDescriptionAuth = RestDescriptionAuth;
/**
 * Links to 16x16 and 32x32 icons representing the API.
 */
var RestDescriptionIcons = /** @class */ (function (_super) {
    __extends(RestDescriptionIcons, _super);
    function RestDescriptionIcons() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "x16" }),
        __metadata("design:type", String)
    ], RestDescriptionIcons.prototype, "x16", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "x32" }),
        __metadata("design:type", String)
    ], RestDescriptionIcons.prototype, "x32", void 0);
    return RestDescriptionIcons;
}(utils_1.SpeakeasyBase));
exports.RestDescriptionIcons = RestDescriptionIcons;
/**
 * Successful response
 */
var RestDescription = /** @class */ (function (_super) {
    __extends(RestDescription, _super);
    function RestDescription() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auth" }),
        (0, class_transformer_1.Type)(function () { return RestDescriptionAuth; }),
        __metadata("design:type", RestDescriptionAuth)
    ], RestDescription.prototype, "auth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "basePath" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "basePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "baseUrl" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "baseUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "batchPath" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "batchPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "canonicalName" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "canonicalName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "discoveryVersion" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "discoveryVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "documentationLink" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "documentationLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "etag" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "etag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exponentialBackoffDefault" }),
        __metadata("design:type", Boolean)
    ], RestDescription.prototype, "exponentialBackoffDefault", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "features" }),
        __metadata("design:type", Array)
    ], RestDescription.prototype, "features", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "icons" }),
        (0, class_transformer_1.Type)(function () { return RestDescriptionIcons; }),
        __metadata("design:type", RestDescriptionIcons)
    ], RestDescription.prototype, "icons", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Array)
    ], RestDescription.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: restmethod_1.RestMethod }),
        (0, class_transformer_1.Expose)({ name: "methods" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], restmethod_1.RestMethod);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], RestDescription.prototype, "methods", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ownerDomain" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "ownerDomain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ownerName" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "ownerName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "packagePath" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "packagePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: jsonschema_1.JsonSchema }),
        (0, class_transformer_1.Expose)({ name: "parameters" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], jsonschema_1.JsonSchema);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], RestDescription.prototype, "parameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "protocol" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "protocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: restresource_1.RestResource }),
        (0, class_transformer_1.Expose)({ name: "resources" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], restresource_1.RestResource);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], RestDescription.prototype, "resources", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "revision" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "revision", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rootUrl" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "rootUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: jsonschema_1.JsonSchema }),
        (0, class_transformer_1.Expose)({ name: "schemas" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], jsonschema_1.JsonSchema);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], RestDescription.prototype, "schemas", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "servicePath" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "servicePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "version" }),
        __metadata("design:type", String)
    ], RestDescription.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "version_module" }),
        __metadata("design:type", Boolean)
    ], RestDescription.prototype, "versionModule", void 0);
    return RestDescription;
}(utils_1.SpeakeasyBase));
exports.RestDescription = RestDescription;
