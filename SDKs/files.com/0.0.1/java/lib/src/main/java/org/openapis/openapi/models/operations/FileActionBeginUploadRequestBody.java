/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class FileActionBeginUploadRequestBody {
    /**
     * Create parent directories if they do not exist?
     */
    @SpeakeasyMetadata("multipartForm:name=mkdir_parents")
    public Boolean mkdirParents;

    public FileActionBeginUploadRequestBody withMkdirParents(Boolean mkdirParents) {
        this.mkdirParents = mkdirParents;
        return this;
    }
    
    /**
     * Part if uploading a part.
     */
    @SpeakeasyMetadata("multipartForm:name=part")
    public Integer part;

    public FileActionBeginUploadRequestBody withPart(Integer part) {
        this.part = part;
        return this;
    }
    
    /**
     * How many parts to fetch?
     */
    @SpeakeasyMetadata("multipartForm:name=parts")
    public Integer parts;

    public FileActionBeginUploadRequestBody withParts(Integer parts) {
        this.parts = parts;
        return this;
    }
    
    @SpeakeasyMetadata("multipartForm:name=ref")
    public String ref;

    public FileActionBeginUploadRequestBody withRef(String ref) {
        this.ref = ref;
        return this;
    }
    
    /**
     * File byte offset to restart from.
     */
    @SpeakeasyMetadata("multipartForm:name=restart")
    public Integer restart;

    public FileActionBeginUploadRequestBody withRestart(Integer restart) {
        this.restart = restart;
        return this;
    }
    
    /**
     * Total bytes of file being uploaded (include bytes being retained if appending/restarting).
     */
    @SpeakeasyMetadata("multipartForm:name=size")
    public Integer size;

    public FileActionBeginUploadRequestBody withSize(Integer size) {
        this.size = size;
        return this;
    }
    
    /**
     * Allow file rename instead of overwrite?
     */
    @SpeakeasyMetadata("multipartForm:name=with_rename")
    public Boolean withRename;

    public FileActionBeginUploadRequestBody withWithRename(Boolean withRename) {
        this.withRename = withRename;
        return this;
    }
    
    public FileActionBeginUploadRequestBody(){}
}
