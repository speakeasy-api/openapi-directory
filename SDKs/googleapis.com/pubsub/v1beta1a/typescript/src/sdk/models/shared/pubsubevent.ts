/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PubsubMessage } from "./pubsubmessage";
import { Expose, Type } from "class-transformer";

/**
 * An event indicating a received message or truncation event.
 */
export class PubsubEvent extends SpeakeasyBase {
  /**
   * Indicates that this subscription has been deleted. (Note that pull subscribers will always receive NOT_FOUND in response in their pull request on the subscription, rather than seeing this boolean.)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  /**
   * A message data and its labels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  @Type(() => PubsubMessage)
  message?: PubsubMessage;

  /**
   * The subscription that received the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscription" })
  subscription?: string;

  /**
   * Indicates that this subscription has been truncated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "truncated" })
  truncated?: boolean;
}
