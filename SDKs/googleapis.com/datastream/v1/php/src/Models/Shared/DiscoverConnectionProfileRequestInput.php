<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DiscoverConnectionProfileRequestInput - Request message for 'discover' ConnectionProfile request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DiscoverConnectionProfileRequestInput
{
    /**
     * A set of reusable connection configurations to be used as a source or destination for a stream.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConnectionProfileInput $connectionProfile
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectionProfile')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConnectionProfileInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConnectionProfileInput $connectionProfile = null;
    
    /**
     * A reference to an existing connection profile.
     * 
     * @var ?string $connectionProfileName
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectionProfileName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $connectionProfileName = null;
    
    /**
     * Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).
     * 
     * @var ?bool $fullHierarchy
     */
	#[\JMS\Serializer\Annotation\SerializedName('fullHierarchy')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $fullHierarchy = null;
    
    /**
     * The number of hierarchy levels below the current level to be retrieved.
     * 
     * @var ?int $hierarchyDepth
     */
	#[\JMS\Serializer\Annotation\SerializedName('hierarchyDepth')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hierarchyDepth = null;
    
    /**
     * MySQL database structure
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MysqlRdbms $mysqlRdbms
     */
	#[\JMS\Serializer\Annotation\SerializedName('mysqlRdbms')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MysqlRdbms')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MysqlRdbms $mysqlRdbms = null;
    
    /**
     * Oracle database structure.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OracleRdbms $oracleRdbms
     */
	#[\JMS\Serializer\Annotation\SerializedName('oracleRdbms')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OracleRdbms')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OracleRdbms $oracleRdbms = null;
    
    /**
     * PostgreSQL database structure.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PostgresqlRdbms $postgresqlRdbms
     */
	#[\JMS\Serializer\Annotation\SerializedName('postgresqlRdbms')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PostgresqlRdbms')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostgresqlRdbms $postgresqlRdbms = null;
    
	public function __construct()
	{
		$this->connectionProfile = null;
		$this->connectionProfileName = null;
		$this->fullHierarchy = null;
		$this->hierarchyDepth = null;
		$this->mysqlRdbms = null;
		$this->oracleRdbms = null;
		$this->postgresqlRdbms = null;
	}
}
