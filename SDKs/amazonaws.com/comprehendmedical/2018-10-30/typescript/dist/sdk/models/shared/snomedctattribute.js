"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SNOMEDCTAttribute = void 0;
var utils_1 = require("../../../internal/utils");
var snomedctattributetypeenum_1 = require("./snomedctattributetypeenum");
var snomedctconcept_1 = require("./snomedctconcept");
var snomedctentitycategoryenum_1 = require("./snomedctentitycategoryenum");
var snomedctrelationshiptypeenum_1 = require("./snomedctrelationshiptypeenum");
var snomedcttrait_1 = require("./snomedcttrait");
var class_transformer_1 = require("class-transformer");
/**
 *  The extracted attributes that relate to an entity. An extracted segment of the text that is an attribute of an entity, or otherwise related to an entity, such as the dosage of a medication taken.
 */
var SNOMEDCTAttribute = /** @class */ (function (_super) {
    __extends(SNOMEDCTAttribute, _super);
    function SNOMEDCTAttribute() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "BeginOffset" }),
        __metadata("design:type", Number)
    ], SNOMEDCTAttribute.prototype, "beginOffset", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Category" }),
        __metadata("design:type", String)
    ], SNOMEDCTAttribute.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EndOffset" }),
        __metadata("design:type", Number)
    ], SNOMEDCTAttribute.prototype, "endOffset", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Id" }),
        __metadata("design:type", Number)
    ], SNOMEDCTAttribute.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RelationshipScore" }),
        __metadata("design:type", Number)
    ], SNOMEDCTAttribute.prototype, "relationshipScore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RelationshipType" }),
        __metadata("design:type", String)
    ], SNOMEDCTAttribute.prototype, "relationshipType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: snomedctconcept_1.SNOMEDCTConcept }),
        (0, class_transformer_1.Expose)({ name: "SNOMEDCTConcepts" }),
        (0, class_transformer_1.Type)(function () { return snomedctconcept_1.SNOMEDCTConcept; }),
        __metadata("design:type", Array)
    ], SNOMEDCTAttribute.prototype, "snomedctConcepts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Score" }),
        __metadata("design:type", Number)
    ], SNOMEDCTAttribute.prototype, "score", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Text" }),
        __metadata("design:type", String)
    ], SNOMEDCTAttribute.prototype, "text", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: snomedcttrait_1.SNOMEDCTTrait }),
        (0, class_transformer_1.Expose)({ name: "Traits" }),
        (0, class_transformer_1.Type)(function () { return snomedcttrait_1.SNOMEDCTTrait; }),
        __metadata("design:type", Array)
    ], SNOMEDCTAttribute.prototype, "traits", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Type" }),
        __metadata("design:type", String)
    ], SNOMEDCTAttribute.prototype, "type", void 0);
    return SNOMEDCTAttribute;
}(utils_1.SpeakeasyBase));
exports.SNOMEDCTAttribute = SNOMEDCTAttribute;
