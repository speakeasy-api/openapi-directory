// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LabOrderDocumentTypeEnum -
// Value | Notes
// ----- | -----
// `"REQ"` | requisition form                                              |
// `"ABN"` | `ABN (Advance Beneficiary Notice)`                            |
// `"R-A"` | requisition form and :abbr:`ABN (Advance Beneficiary Notice)` |
// `"RES"` | lab results                                                   |
type LabOrderDocumentTypeEnum string

const (
	LabOrderDocumentTypeEnumReq LabOrderDocumentTypeEnum = "REQ"
	LabOrderDocumentTypeEnumAbn LabOrderDocumentTypeEnum = "ABN"
	LabOrderDocumentTypeEnumRa  LabOrderDocumentTypeEnum = "R-A"
	LabOrderDocumentTypeEnumRes LabOrderDocumentTypeEnum = "RES"
)

func (e LabOrderDocumentTypeEnum) ToPointer() *LabOrderDocumentTypeEnum {
	return &e
}

func (e *LabOrderDocumentTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQ":
		fallthrough
	case "ABN":
		fallthrough
	case "R-A":
		fallthrough
	case "RES":
		*e = LabOrderDocumentTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LabOrderDocumentTypeEnum: %v", v)
	}
}

// LabOrderDocument - Created
type LabOrderDocument struct {
	Document string `json:"document"`
	ID       *int64 `json:"id,omitempty"`
	// ID of the order this document is associated with
	LabOrder int64 `json:"lab_order"`
	// Time at which the document was uploaded
	Timestamp *string `json:"timestamp,omitempty"`
	// Value | Notes
	// ----- | -----
	// `"REQ"` | requisition form                                              |
	// `"ABN"` | `ABN (Advance Beneficiary Notice)`                            |
	// `"R-A"` | requisition form and :abbr:`ABN (Advance Beneficiary Notice)` |
	// `"RES"` | lab results                                                   |
	//
	Type LabOrderDocumentTypeEnum `json:"type"`
}
