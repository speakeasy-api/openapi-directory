/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AddShippingAddressRequestBodySelectedAddresses {
    /**
     * Type of address. For example, `Residential` or `Pickup`, among others.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addressType")
    public String addressType;

    public AddShippingAddressRequestBodySelectedAddresses withAddressType(String addressType) {
        this.addressType = addressType;
        return this;
    }
    
    /**
     * City of the shipping address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;

    public AddShippingAddressRequestBodySelectedAddresses withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * Complement to the shipping address in case it applies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("complement")
    public String complement;

    public AddShippingAddressRequestBodySelectedAddresses withComplement(String complement) {
        this.complement = complement;
        return this;
    }
    
    /**
     * Three letter ISO code of the country of the shipping address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public AddShippingAddressRequestBodySelectedAddresses withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Array containing two floats with geocoordinates, first longitude, then latitude.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("geoCoordinates")
    public Double[] geoCoordinates;

    public AddShippingAddressRequestBodySelectedAddresses withGeoCoordinates(Double[] geoCoordinates) {
        this.geoCoordinates = geoCoordinates;
        return this;
    }
    
    /**
     * Neighborhood of the shipping address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("neighborhood")
    public String neighborhood;

    public AddShippingAddressRequestBodySelectedAddresses withNeighborhood(String neighborhood) {
        this.neighborhood = neighborhood;
        return this;
    }
    
    /**
     * Number of the building, house or apartment in the shipping address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;

    public AddShippingAddressRequestBodySelectedAddresses withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * Postal Code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postalCode")
    public String postalCode;

    public AddShippingAddressRequestBodySelectedAddresses withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * Name of the person who is going to receive the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receiverName")
    public String receiverName;

    public AddShippingAddressRequestBodySelectedAddresses withReceiverName(String receiverName) {
        this.receiverName = receiverName;
        return this;
    }
    
    /**
     * Complement that might help locate the shipping address more precisely in case of delivery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public AddShippingAddressRequestBodySelectedAddresses withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * State of the shipping address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public AddShippingAddressRequestBodySelectedAddresses withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Street of the shipping address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("street")
    public String street;

    public AddShippingAddressRequestBodySelectedAddresses withStreet(String street) {
        this.street = street;
        return this;
    }
    
    public AddShippingAddressRequestBodySelectedAddresses(){}
}
