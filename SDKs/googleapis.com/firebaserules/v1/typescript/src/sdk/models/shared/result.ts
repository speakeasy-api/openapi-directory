/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Possible result values from the function mock invocation.
 */
export class Result extends SpeakeasyBase {
  /**
   * A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
   */
  @SpeakeasyMetadata()
  @Expose({ name: "undefined" })
  undefined?: Record<string, any>;

  /**
   * The result is an actual value. The type of the value must match that of the type declared by the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: any;
}
