// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetLaunchTemplateDataActionEnum
type POSTGetLaunchTemplateDataActionEnum string

const (
	POSTGetLaunchTemplateDataActionEnumGetLaunchTemplateData POSTGetLaunchTemplateDataActionEnum = "GetLaunchTemplateData"
)

func (e *POSTGetLaunchTemplateDataActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetLaunchTemplateData":
		*e = POSTGetLaunchTemplateDataActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetLaunchTemplateDataActionEnum: %s", s)
	}
}

// POSTGetLaunchTemplateDataVersionEnum
type POSTGetLaunchTemplateDataVersionEnum string

const (
	POSTGetLaunchTemplateDataVersionEnumTwoThousandAndSixteen1115 POSTGetLaunchTemplateDataVersionEnum = "2016-11-15"
)

func (e *POSTGetLaunchTemplateDataVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTGetLaunchTemplateDataVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetLaunchTemplateDataVersionEnum: %s", s)
	}
}

type POSTGetLaunchTemplateDataRequest struct {
	Action            POSTGetLaunchTemplateDataActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                               `request:"mediaType=text/xml"`
	Version           POSTGetLaunchTemplateDataVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetLaunchTemplateDataResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
