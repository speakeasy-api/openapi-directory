<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetIntersectionsNearestOutputFormatRequest
{
    /**
     * The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.
     * 
     * @var ?int $maxDegree
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=maxDegree')]
    public ?int $maxDegree = null;
    
    /**
     * The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
     * 
     * @var ?int $maxDistance
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=maxDistance')]
    public ?int $maxDistance = null;
    
    /**
     * The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.
     * 
     * @var ?int $minDegree
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=minDegree')]
    public ?int $minDegree = null;
    
    /**
     * Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
     * 
     * 
     * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetIntersectionsNearestOutputFormatOutputFormatEnum $outputFormat
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=outputFormat')]
    public GetIntersectionsNearestOutputFormatOutputFormatEnum $outputFormat;
    
    /**
     * The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetIntersectionsNearestOutputFormatOutputSrsEnum $outputSRS
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=outputSRS')]
    public ?GetIntersectionsNearestOutputFormatOutputSrsEnum $outputSRS = null;
    
    /**
     * Example: -122.377,50.121  The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.
     * 
     * @var string $point
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=point')]
    public string $point;
    
	public function __construct()
	{
		$this->maxDegree = null;
		$this->maxDistance = null;
		$this->minDegree = null;
		$this->outputFormat = \OpenAPI\OpenAPI\Models\Operations\GetIntersectionsNearestOutputFormatOutputFormatEnum::JSON;
		$this->outputSRS = null;
		$this->point = "";
	}
}
