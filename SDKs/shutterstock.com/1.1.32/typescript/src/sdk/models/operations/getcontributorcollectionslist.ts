/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetContributorCollectionsListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode?: string;
}

/**
 * Sort order
 */
export enum GetContributorCollectionsListSortEnum {
  Newest = "newest",
  LastUpdated = "last_updated",
  ItemCount = "item_count",
}

export class GetContributorCollectionsListRequest extends SpeakeasyBase {
  /**
   * Contributor ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=contributor_id",
  })
  contributorId: string;

  /**
   * Sort order
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetContributorCollectionsListSortEnum;
}

export class GetContributorCollectionsListResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  collectionDataList?: shared.CollectionDataList;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
