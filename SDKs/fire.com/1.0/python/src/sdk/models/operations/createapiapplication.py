"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAPIApplicationNewAPIApplication:
    r"""Details of the new API Application"""
    
    application_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationName'), 'exclude': lambda f: f is None }})
    r"""A name for the API Application to help you identify it"""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Whether or not this API Application can be used"""  
    expiry: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiry'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date that this API Application can no longer be used."""  
    ican: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ican'), 'exclude': lambda f: f is None }})
    r"""The ICAN of one of your Fire accounts. Restrict this API Application to a certan account."""  
    number_of_payee_approvals_required: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfPayeeApprovalsRequired'), 'exclude': lambda f: f is None }})
    r"""Number of approvals required to create a payee in a batch"""  
    number_of_payment_approvals_required: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfPaymentApprovalsRequired'), 'exclude': lambda f: f is None }})
    r"""Number of approvals required to process a payment in a batch"""  
    permissions: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions'), 'exclude': lambda f: f is None }})
    r"""The list of permissions required"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAPIApplicationAPIApplication:
    r"""API Application created successfully"""
    
    application_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationId'), 'exclude': lambda f: f is None }})
    r"""The ID of the API Application"""  
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientId'), 'exclude': lambda f: f is None }})
    r"""The Client ID of the new API Application"""  
    client_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientKey'), 'exclude': lambda f: f is None }})
    r"""The Client Key of the new API Application"""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Whether or not this API Application can be used"""  
    expiry: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiry'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date that this API Application can no longer be used."""  
    ican: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ican'), 'exclude': lambda f: f is None }})
    r"""The ICAN of one of your Fire accounts. Restrict this API Application to a certan account."""  
    number_of_payee_approvals_required: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfPayeeApprovalsRequired'), 'exclude': lambda f: f is None }})
    r"""Number of approvals required to create a payee in a batch"""  
    number_of_payment_approvals_required: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfPaymentApprovalsRequired'), 'exclude': lambda f: f is None }})
    r"""Number of approvals required to process a payment in a batch"""  
    refresh_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refreshToken'), 'exclude': lambda f: f is None }})
    r"""The Refresh Token of the new API Application"""  
    

@dataclasses.dataclass
class CreateAPIApplicationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_application: Optional[CreateAPIApplicationAPIApplication] = dataclasses.field(default=None)
    r"""API Application created successfully"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    