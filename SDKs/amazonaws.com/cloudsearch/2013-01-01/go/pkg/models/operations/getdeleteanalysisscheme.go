// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteAnalysisSchemeActionEnum
type GETDeleteAnalysisSchemeActionEnum string

const (
	GETDeleteAnalysisSchemeActionEnumDeleteAnalysisScheme GETDeleteAnalysisSchemeActionEnum = "DeleteAnalysisScheme"
)

func (e GETDeleteAnalysisSchemeActionEnum) ToPointer() *GETDeleteAnalysisSchemeActionEnum {
	return &e
}

func (e *GETDeleteAnalysisSchemeActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteAnalysisScheme":
		*e = GETDeleteAnalysisSchemeActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteAnalysisSchemeActionEnum: %v", v)
	}
}

// GETDeleteAnalysisSchemeVersionEnum
type GETDeleteAnalysisSchemeVersionEnum string

const (
	GETDeleteAnalysisSchemeVersionEnumTwoThousandAndThirteen0101 GETDeleteAnalysisSchemeVersionEnum = "2013-01-01"
)

func (e GETDeleteAnalysisSchemeVersionEnum) ToPointer() *GETDeleteAnalysisSchemeVersionEnum {
	return &e
}

func (e *GETDeleteAnalysisSchemeVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-01":
		*e = GETDeleteAnalysisSchemeVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteAnalysisSchemeVersionEnum: %v", v)
	}
}

type GETDeleteAnalysisSchemeRequest struct {
	Action GETDeleteAnalysisSchemeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the analysis scheme you want to delete.
	AnalysisSchemeName string                             `queryParam:"style=form,explode=true,name=AnalysisSchemeName"`
	DomainName         string                             `queryParam:"style=form,explode=true,name=DomainName"`
	Version            GETDeleteAnalysisSchemeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm      *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteAnalysisSchemeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
