/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BuildArtifacts } from "./buildartifacts";
import { BuildPhase } from "./buildphase";
import { DebugSession } from "./debugsession";
import { ExportedEnvironmentVariable } from "./exportedenvironmentvariable";
import { LogsLocation } from "./logslocation";
import { NetworkInterface } from "./networkinterface";
import { ProjectCache } from "./projectcache";
import { ProjectEnvironment } from "./projectenvironment";
import { ProjectFileSystemLocation } from "./projectfilesystemlocation";
import { ProjectSource } from "./projectsource";
import { ProjectSourceVersion } from "./projectsourceversion";
import { StatusTypeEnum } from "./statustypeenum";
import { VpcConfig } from "./vpcconfig";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about a build.
 */
export class Build extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "artifacts" })
  @Type(() => BuildArtifacts)
  artifacts?: BuildArtifacts;

  @SpeakeasyMetadata()
  @Expose({ name: "buildBatchArn" })
  buildBatchArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "buildComplete" })
  buildComplete?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "buildNumber" })
  buildNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "buildStatus" })
  buildStatus?: StatusTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "cache" })
  @Type(() => ProjectCache)
  cache?: ProjectCache;

  @SpeakeasyMetadata()
  @Expose({ name: "currentPhase" })
  currentPhase?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "debugSession" })
  @Type(() => DebugSession)
  debugSession?: DebugSession;

  @SpeakeasyMetadata()
  @Expose({ name: "encryptionKey" })
  encryptionKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  @Type(() => ProjectEnvironment)
  environment?: ProjectEnvironment;

  @SpeakeasyMetadata({ elemType: ExportedEnvironmentVariable })
  @Expose({ name: "exportedEnvironmentVariables" })
  @Type(() => ExportedEnvironmentVariable)
  exportedEnvironmentVariables?: ExportedEnvironmentVariable[];

  @SpeakeasyMetadata({ elemType: ProjectFileSystemLocation })
  @Expose({ name: "fileSystemLocations" })
  @Type(() => ProjectFileSystemLocation)
  fileSystemLocations?: ProjectFileSystemLocation[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "initiator" })
  initiator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logs" })
  @Type(() => LogsLocation)
  logs?: LogsLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "networkInterface" })
  @Type(() => NetworkInterface)
  networkInterface?: NetworkInterface;

  @SpeakeasyMetadata({ elemType: BuildPhase })
  @Expose({ name: "phases" })
  @Type(() => BuildPhase)
  phases?: BuildPhase[];

  @SpeakeasyMetadata()
  @Expose({ name: "projectName" })
  projectName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "queuedTimeoutInMinutes" })
  queuedTimeoutInMinutes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reportArns" })
  reportArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "resolvedSourceVersion" })
  resolvedSourceVersion?: string;

  @SpeakeasyMetadata({ elemType: BuildArtifacts })
  @Expose({ name: "secondaryArtifacts" })
  @Type(() => BuildArtifacts)
  secondaryArtifacts?: BuildArtifacts[];

  @SpeakeasyMetadata({ elemType: ProjectSourceVersion })
  @Expose({ name: "secondarySourceVersions" })
  @Type(() => ProjectSourceVersion)
  secondarySourceVersions?: ProjectSourceVersion[];

  @SpeakeasyMetadata({ elemType: ProjectSource })
  @Expose({ name: "secondarySources" })
  @Type(() => ProjectSource)
  secondarySources?: ProjectSource[];

  @SpeakeasyMetadata()
  @Expose({ name: "serviceRole" })
  serviceRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => ProjectSource)
  source?: ProjectSource;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceVersion" })
  sourceVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "timeoutInMinutes" })
  timeoutInMinutes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "vpcConfig" })
  @Type(() => VpcConfig)
  vpcConfig?: VpcConfig;
}
