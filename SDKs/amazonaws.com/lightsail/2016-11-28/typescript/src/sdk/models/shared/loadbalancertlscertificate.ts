/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LoadBalancerTlsCertificateDomainValidationRecord } from "./loadbalancertlscertificatedomainvalidationrecord";
import { LoadBalancerTlsCertificateFailureReasonEnum } from "./loadbalancertlscertificatefailurereasonenum";
import { LoadBalancerTlsCertificateRenewalSummary } from "./loadbalancertlscertificaterenewalsummary";
import { LoadBalancerTlsCertificateRevocationReasonEnum } from "./loadbalancertlscertificaterevocationreasonenum";
import { LoadBalancerTlsCertificateStatusEnum } from "./loadbalancertlscertificatestatusenum";
import { ResourceLocation } from "./resourcelocation";
import { ResourceTypeEnum } from "./resourcetypeenum";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p>Describes a load balancer SSL/TLS certificate.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>
 */
export class LoadBalancerTlsCertificate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "domainName" })
  domainName?: string;

  @SpeakeasyMetadata({
    elemType: LoadBalancerTlsCertificateDomainValidationRecord,
  })
  @Expose({ name: "domainValidationRecords" })
  @Type(() => LoadBalancerTlsCertificateDomainValidationRecord)
  domainValidationRecords?: LoadBalancerTlsCertificateDomainValidationRecord[];

  @SpeakeasyMetadata()
  @Expose({ name: "failureReason" })
  failureReason?: LoadBalancerTlsCertificateFailureReasonEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "isAttached" })
  isAttached?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "issuedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  issuedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "issuer" })
  issuer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "keyAlgorithm" })
  keyAlgorithm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "loadBalancerName" })
  loadBalancerName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => ResourceLocation)
  location?: ResourceLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "notBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "renewalSummary" })
  @Type(() => LoadBalancerTlsCertificateRenewalSummary)
  renewalSummary?: LoadBalancerTlsCertificateRenewalSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceType" })
  resourceType?: ResourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "revocationReason" })
  revocationReason?: LoadBalancerTlsCertificateRevocationReasonEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "revokedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  revokedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "signatureAlgorithm" })
  signatureAlgorithm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: LoadBalancerTlsCertificateStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subjectAlternativeNames" })
  subjectAlternativeNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "supportCode" })
  supportCode?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
