/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PatchJob - A high level representation of a patch job that is either in progress or has completed. Instance details are not included in the job. To paginate through instance details, use ListPatchJobInstanceDetails. For more information about patch jobs, see [Creating patch jobs](https://cloud.google.com/compute/docs/os-patch-management/create-patch-job).
 */
public class PatchJob {
    /**
     * Time this patch job was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public PatchJob withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Description of the patch job. Length of the description is limited to 1024 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public PatchJob withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Display name for this patch job. This is not a unique identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public PatchJob withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * If this patch job is a dry run, the agent reports that it has finished without running any updates on the VM instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dryRun")
    public Boolean dryRun;
    public PatchJob withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * Duration of the patch job. After the duration ends, the patch job times out.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public String duration;
    public PatchJob withDuration(String duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * If this patch job failed, this message provides information about the failure.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;
    public PatchJob withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * A summary of the current patch state across all instances that this patch job affects. Contains counts of instances in different states. These states map to `InstancePatchState`. List patch job instance details to see the specific states of each instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceDetailsSummary")
    public PatchJobInstanceDetailsSummary instanceDetailsSummary;
    public PatchJob withInstanceDetailsSummary(PatchJobInstanceDetailsSummary instanceDetailsSummary) {
        this.instanceDetailsSummary = instanceDetailsSummary;
        return this;
    }
    
    /**
     * A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceFilter")
    public PatchInstanceFilter instanceFilter;
    public PatchJob withInstanceFilter(PatchInstanceFilter instanceFilter) {
        this.instanceFilter = instanceFilter;
        return this;
    }
    
    /**
     * Unique identifier for this patch job in the form `projects/* /patchJobs/*`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PatchJob withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patchConfig")
    public PatchConfig patchConfig;
    public PatchJob withPatchConfig(PatchConfig patchConfig) {
        this.patchConfig = patchConfig;
        return this;
    }
    
    /**
     * Output only. Name of the patch deployment that created this patch job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patchDeployment")
    public String patchDeployment;
    public PatchJob withPatchDeployment(String patchDeployment) {
        this.patchDeployment = patchDeployment;
        return this;
    }
    
    /**
     * Reflects the overall progress of the patch job in the range of 0.0 being no progress to 100.0 being complete.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentComplete")
    public Double percentComplete;
    public PatchJob withPercentComplete(Double percentComplete) {
        this.percentComplete = percentComplete;
        return this;
    }
    
    /**
     * Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rollout")
    public PatchRollout rollout;
    public PatchJob withRollout(PatchRollout rollout) {
        this.rollout = rollout;
        return this;
    }
    
    /**
     * The current state of the PatchJob.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public PatchJobStateEnum state;
    public PatchJob withState(PatchJobStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Last time this patch job was updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public PatchJob withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
