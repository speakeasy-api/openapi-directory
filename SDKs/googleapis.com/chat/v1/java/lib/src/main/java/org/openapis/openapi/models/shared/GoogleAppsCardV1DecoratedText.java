/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleAppsCardV1DecoratedText - A widget that displays text with optional decorations such as a label above or below the text, an icon in front of the text, a selection widget or a button after the text.
 */
public class GoogleAppsCardV1DecoratedText {
    /**
     * The text that appears below `text`. Always truncates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bottomLabel")
    public String bottomLabel;
    public GoogleAppsCardV1DecoratedText withBottomLabel(String bottomLabel) {
        this.bottomLabel = bottomLabel;
        return this;
    }
    
    /**
     * A text, icon, or text + icon button that users can click. To make an image a clickable button, specify an Image (not an ImageComponent) and set an `onClick` action. Currently supported in Chat apps (including [dialogs] (https://developers.google.com/chat/how-tos/dialogs) and [card messages] (https://developers.google.com/chat/api/guides/message-formats/cards)) and Google Workspace Add-ons.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("button")
    public GoogleAppsCardV1Button button;
    public GoogleAppsCardV1DecoratedText withButton(GoogleAppsCardV1Button button) {
        this.button = button;
        return this;
    }
    
    /**
     * An icon displayed in a widget on a card. Supports [built-in](https://developers.google.com/chat/api/guides/message-formats/cards#builtinicons) and [custom](https://developers.google.com/chat/api/guides/message-formats/cards#customicons) icons.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endIcon")
    public GoogleAppsCardV1Icon endIcon;
    public GoogleAppsCardV1DecoratedText withEndIcon(GoogleAppsCardV1Icon endIcon) {
        this.endIcon = endIcon;
        return this;
    }
    
    /**
     * An icon displayed in a widget on a card. Supports [built-in](https://developers.google.com/chat/api/guides/message-formats/cards#builtinicons) and [custom](https://developers.google.com/chat/api/guides/message-formats/cards#customicons) icons.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icon")
    public GoogleAppsCardV1Icon icon;
    public GoogleAppsCardV1DecoratedText withIcon(GoogleAppsCardV1Icon icon) {
        this.icon = icon;
        return this;
    }
    
    /**
     * Represents how to respond when users click an interactive element on a card, such as a button.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onClick")
    public GoogleAppsCardV1OnClick onClick;
    public GoogleAppsCardV1DecoratedText withOnClick(GoogleAppsCardV1OnClick onClick) {
        this.onClick = onClick;
        return this;
    }
    
    /**
     * An icon displayed in a widget on a card. Supports [built-in](https://developers.google.com/chat/api/guides/message-formats/cards#builtinicons) and [custom](https://developers.google.com/chat/api/guides/message-formats/cards#customicons) icons.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startIcon")
    public GoogleAppsCardV1Icon startIcon;
    public GoogleAppsCardV1DecoratedText withStartIcon(GoogleAppsCardV1Icon startIcon) {
        this.startIcon = startIcon;
        return this;
    }
    
    /**
     * Either a toggle-style switch or a checkbox inside a `decoratedText` widget. Only supported on the `decoratedText` widget.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("switchControl")
    public GoogleAppsCardV1SwitchControl switchControl;
    public GoogleAppsCardV1DecoratedText withSwitchControl(GoogleAppsCardV1SwitchControl switchControl) {
        this.switchControl = switchControl;
        return this;
    }
    
    /**
     * Required. The primary text. Supports simple formatting. See Text formatting for formatting details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public String text;
    public GoogleAppsCardV1DecoratedText withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * The text that appears above `text`. Always truncates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topLabel")
    public String topLabel;
    public GoogleAppsCardV1DecoratedText withTopLabel(String topLabel) {
        this.topLabel = topLabel;
        return this;
    }
    
    /**
     * The wrap text setting. If `true`, the text wraps and displays on multiple lines. Otherwise, the text is truncated. Only applies to `text`, not `topLabel` and `bottomLabel`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wrapText")
    public Boolean wrapText;
    public GoogleAppsCardV1DecoratedText withWrapText(Boolean wrapText) {
        this.wrapText = wrapText;
        return this;
    }
    
}
