"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import addonrequest as shared_addonrequest
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateDiskFromSnapshotRequest:
    
    availability_zone: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('availabilityZone') }})  
    disk_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('diskName') }})  
    size_in_gb: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sizeInGb') }})  
    add_ons: Optional[list[shared_addonrequest.AddOnRequest]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addOns'), 'exclude': lambda f: f is None }})  
    disk_snapshot_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('diskSnapshotName'), 'exclude': lambda f: f is None }})  
    restore_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restoreDate'), 'exclude': lambda f: f is None }})  
    source_disk_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceDiskName'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})  
    use_latest_restorable_auto_snapshot: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('useLatestRestorableAutoSnapshot'), 'exclude': lambda f: f is None }})  
    