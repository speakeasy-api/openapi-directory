"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .directory_api import DirectoryAPI
from .insights_api import InsightsAPI
from .playlist_api import PlaylistAPI
from .podcaster_api import PodcasterAPI
from .search_api import SearchAPI

SERVERS = [
    "https://listen-api.listennotes.com/api/v2",
    r"""API Production Server"""
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics."""
    directory_api: DirectoryAPI
    r"""Endpoints to fetch podcasts data"""
    insights_api: InsightsAPI
    r"""Endpoints to get insights of podcasts, e.g., audience demographics"""
    playlist_api: PlaylistAPI
    r"""Endpoints to fetch Listen Later playlists data"""
    podcaster_api: PodcasterAPI
    r"""Endpoints to improve the podcast database"""
    search_api: SearchAPI
    r"""Endpoints to search podcasts"""

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.directory_api = DirectoryAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.insights_api = InsightsAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.playlist_api = PlaylistAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.podcaster_api = PodcasterAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.search_api = SearchAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    