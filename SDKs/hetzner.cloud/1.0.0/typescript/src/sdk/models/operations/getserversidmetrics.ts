/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Type of metrics to get
 */
export enum GetServersIdMetricsTypeEnum {
  Cpu = "cpu",
  Disk = "disk",
  Network = "network",
}

export class GetServersIdMetricsRequest extends SpeakeasyBase {
  /**
   * End of period to get Metrics for (in ISO-8601 format)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=end" })
  end: string;

  /**
   * ID of the Server
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;

  /**
   * Start of period to get Metrics for (in ISO-8601 format)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=start" })
  start: string;

  /**
   * Resolution of results in seconds
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=step" })
  step?: string;

  /**
   * Type of metrics to get
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type: GetServersIdMetricsTypeEnum;
}

export class GetServersIdMetrics200ApplicationJSONMetricsTimeSeries extends SpeakeasyBase {
  /**
   * Metrics Timestamps with values
   */
  @SpeakeasyMetadata()
  @Expose({ name: "values" })
  values: any[][];
}

export class GetServersIdMetrics200ApplicationJSONMetrics extends SpeakeasyBase {
  /**
   * End of period of metrics reported (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  end: string;

  /**
   * Start of period of metrics reported (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  start: string;

  /**
   * Resolution of results in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "step" })
  step: number;

  /**
   * Hash with timeseries information, containing the name of timeseries as key
   */
  @SpeakeasyMetadata({
    elemType: GetServersIdMetrics200ApplicationJSONMetricsTimeSeries,
  })
  @Expose({ name: "time_series" })
  @Transform(
    ({ value }) => {
      const obj: Record<
        string,
        GetServersIdMetrics200ApplicationJSONMetricsTimeSeries
      > = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          GetServersIdMetrics200ApplicationJSONMetricsTimeSeries
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  timeSeries: Record<
    string,
    GetServersIdMetrics200ApplicationJSONMetricsTimeSeries
  >;
}

/**
 * The `metrics` key in the reply contains a metrics object with this structure
 */
export class GetServersIdMetrics200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "metrics" })
  @Type(() => GetServersIdMetrics200ApplicationJSONMetrics)
  metrics: GetServersIdMetrics200ApplicationJSONMetrics;
}

export class GetServersIdMetricsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The `metrics` key in the reply contains a metrics object with this structure
   */
  @SpeakeasyMetadata()
  getServersIdMetrics200ApplicationJSONObject?: GetServersIdMetrics200ApplicationJSON;
}
