"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ExportFlavorEnum(str, Enum):
    LINUX = 'Linux'
    WINDOWS = 'Windows'

class ExportPlatformEnum(str, Enum):
    CORE_ML = 'CoreML'
    TENSOR_FLOW = 'TensorFlow'
    DOCKER_FILE = 'DockerFile'
    ONNX = 'ONNX'

class ExportStatusEnum(str, Enum):
    EXPORTING = 'Exporting'
    FAILED = 'Failed'
    DONE = 'Done'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Export:
    r"""OK"""
    
    download_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('downloadUri'), 'exclude': lambda f: f is None }})  
    flavor: Optional[ExportFlavorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('flavor'), 'exclude': lambda f: f is None }})  
    newer_version_available: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newerVersionAvailable'), 'exclude': lambda f: f is None }})  
    platform: Optional[ExportPlatformEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('platform'), 'exclude': lambda f: f is None }})  
    status: Optional[ExportStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    