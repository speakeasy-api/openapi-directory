/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;

public class DashboardWebinarParticipants200ApplicationXMLParticipants {
    /**
     * Audio quality of the participant.
     */
    
    public DashboardWebinarParticipants200ApplicationXMLParticipantsAudioQualityEnum audioQuality;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withAudioQuality(DashboardWebinarParticipants200ApplicationXMLParticipantsAudioQualityEnum audioQuality) {
        this.audioQuality = audioQuality;
        return this;
    }
    
    /**
     * Participant connection type.
     */
    
    public String connectionType;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withConnectionType(String connectionType) {
        this.connectionType = connectionType;
        return this;
    }
    
    /**
     * Another identifier for the participant. Can be a number or characters, maximum length of 15 characters. 
     */
    
    public String customerKey;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withCustomerKey(String customerKey) {
        this.customerKey = customerKey;
        return this;
    }
    
    /**
     * Participant data center.
     */
    
    public String dataCenter;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withDataCenter(String dataCenter) {
        this.dataCenter = dataCenter;
        return this;
    }
    
    /**
     * 
     * The type of device using which the participant joined the webinar. The possible values for this field are:
     * * `Phone`: Participant joined via PSTN.
     * * `H.323/SIP`: Participant joined via an H.323 or SIP device.
     * * `Windows`: Participant joined via VoIP using a Windows device.
     * * `Mac`: Participant joined via VoIP using a Mac device.
     * * `iOS`: Participant joined via VoIP using an iOS device.
     * * `Android`: Participant joined via VoIP using an Android device.
     */
    
    public String device;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withDevice(String device) {
        this.device = device;
        return this;
    }
    
    /**
     * Participant domain.
     */
    
    public String domain;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withDomain(String domain) {
        this.domain = domain;
        return this;
    }
    
    /**
     * Email address of the participant.
     */
    
    public String email;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Participant hard disk ID.
     */
    
    public String harddiskId;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withHarddiskId(String harddiskId) {
        this.harddiskId = harddiskId;
        return this;
    }
    
    /**
     * Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
     */
    
    public String id;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Participant IP address.
     */
    
    public String ipAddress;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }
    
    /**
     * Participant join time.
     */
    
    public OffsetDateTime joinTime;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withJoinTime(OffsetDateTime joinTime) {
        this.joinTime = joinTime;
        return this;
    }
    
    /**
     * Possible reasons for why a participant left the Webinar.
     * 
     */
    
    public String leaveReason;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withLeaveReason(String leaveReason) {
        this.leaveReason = leaveReason;
        return this;
    }
    
    /**
     * Participant leave time.
     */
    
    public OffsetDateTime leaveTime;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withLeaveTime(OffsetDateTime leaveTime) {
        this.leaveTime = leaveTime;
        return this;
    }
    
    /**
     * Participant location.
     */
    
    public String location;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Participant MAC address.
     */
    
    public String macAddr;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withMacAddr(String macAddr) {
        this.macAddr = macAddr;
        return this;
    }
    
    /**
     * Participant microphone.
     */
    
    public String microphone;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withMicrophone(String microphone) {
        this.microphone = microphone;
        return this;
    }
    
    /**
     * Participant network type.
     */
    
    public String networkType;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withNetworkType(String networkType) {
        this.networkType = networkType;
        return this;
    }
    
    /**
     * Participant PC name.
     */
    
    public String pcName;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withPcName(String pcName) {
        this.pcName = pcName;
        return this;
    }
    
    /**
     * Participant record?
     */
    
    public Boolean recording;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withRecording(Boolean recording) {
        this.recording = recording;
        return this;
    }
    
    /**
     * Unique identifier of the registrant. This field is only returned if you entered "registrant_id" as the value of `include_fields` query parameter.
     */
    
    public String registrantId;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withRegistrantId(String registrantId) {
        this.registrantId = registrantId;
        return this;
    }
    
    /**
     * Screen share quality of the participant.
     */
    
    public DashboardWebinarParticipants200ApplicationXMLParticipantsScreenShareQualityEnum screenShareQuality;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withScreenShareQuality(DashboardWebinarParticipants200ApplicationXMLParticipantsScreenShareQualityEnum screenShareQuality) {
        this.screenShareQuality = screenShareQuality;
        return this;
    }
    
    /**
     * Did the participant share an application?
     */
    
    public Boolean shareApplication;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withShareApplication(Boolean shareApplication) {
        this.shareApplication = shareApplication;
        return this;
    }
    
    /**
     * Did the participant share their desktop?
     */
    
    public Boolean shareDesktop;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withShareDesktop(Boolean shareDesktop) {
        this.shareDesktop = shareDesktop;
        return this;
    }
    
    /**
     * Did the participant share their whiteboard?
     */
    
    public Boolean shareWhiteboard;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withShareWhiteboard(Boolean shareWhiteboard) {
        this.shareWhiteboard = shareWhiteboard;
        return this;
    }
    
    /**
     * Participant speaker.
     */
    
    public String speaker;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withSpeaker(String speaker) {
        this.speaker = speaker;
        return this;
    }
    
    /**
     * Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
     */
    
    public String userId;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * Participant display name.
     */
    
    public String userName;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
    /**
     * Participant version.
     */
    
    public String version;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withVersion(String version) {
        this.version = version;
        return this;
    }
    
    /**
     * Video quality of the participant.
     */
    
    public DashboardWebinarParticipants200ApplicationXMLParticipantsVideoQualityEnum videoQuality;
    public DashboardWebinarParticipants200ApplicationXMLParticipants withVideoQuality(DashboardWebinarParticipants200ApplicationXMLParticipantsVideoQualityEnum videoQuality) {
        this.videoQuality = videoQuality;
        return this;
    }
    
}
