// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// RtiTransactionBaseRtiTransactionBaseEmployerCore - The rti transaction bases' employer core
type RtiTransactionBaseRtiTransactionBaseEmployerCore struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

// RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum - The rti transaction bases' transaction status
type RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum string

const (
	RtiTransactionBaseRtiTransactionBaseTransactionStatusEnumNew                  RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum = "New"
	RtiTransactionBaseRtiTransactionBaseTransactionStatusEnumRequestGenerated     RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum = "RequestGenerated"
	RtiTransactionBaseRtiTransactionBaseTransactionStatusEnumCompletedWithError   RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum = "CompletedWithError"
	RtiTransactionBaseRtiTransactionBaseTransactionStatusEnumCompletedWithSuccess RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum = "CompletedWithSuccess"
	RtiTransactionBaseRtiTransactionBaseTransactionStatusEnumTimeOut              RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum = "TimeOut"
)

func (e *RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "New":
		fallthrough
	case "RequestGenerated":
		fallthrough
	case "CompletedWithError":
		fallthrough
	case "CompletedWithSuccess":
		fallthrough
	case "TimeOut":
		*e = RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum: %s", s)
	}
}

type RtiTransactionBaseRtiTransactionBase struct {
	// The rti transaction bases' employer core
	EmployerCore *RtiTransactionBaseRtiTransactionBaseEmployerCore `json:"EmployerCore,omitempty"`
	// The rti transaction bases' request data
	RequestData *string `json:"RequestData,omitempty"`
	// The rti transaction bases' response data
	ResponseData *string `json:"ResponseData,omitempty"`
	// The rti transaction bases' rti type
	RtiType *string `json:"RtiType,omitempty"`
	// The rti transaction bases' tax year
	TaxYear *int `json:"TaxYear,omitempty"`
	// The rti transaction bases' timestamp
	Timestamp *time.Time `json:"Timestamp,omitempty"`
	// The rti transaction bases' transaction status
	TransactionStatus *RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum `json:"TransactionStatus,omitempty"`
	// The rti transaction bases' transmission date
	TransmissionDate *time.Time `json:"TransmissionDate,omitempty"`
}

// RtiTransactionBase - The rti transaction base object.
type RtiTransactionBase struct {
	RtiTransactionBase *RtiTransactionBaseRtiTransactionBase `json:"RtiTransactionBase,omitempty"`
}
