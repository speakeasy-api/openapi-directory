// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConsolePortConnectionStatusEnum string

const (
	ConsolePortConnectionStatusEnumFalse ConsolePortConnectionStatusEnum = "false"
	ConsolePortConnectionStatusEnumTrue  ConsolePortConnectionStatusEnum = "true"
)

func (e *ConsolePortConnectionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "false":
		fallthrough
	case "true":
		*e = ConsolePortConnectionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsolePortConnectionStatusEnum: %s", s)
	}
}

type ConsolePort struct {
	ConnectionStatus *ConsolePortConnectionStatusEnum `json:"connection_status,omitempty"`
	CsPort           *NestedConsoleServerPort         `json:"cs_port,omitempty"`
	Device           NestedDevice                     `json:"device"`
	ID               *int64                           `json:"id,omitempty"`
	Name             string                           `json:"name"`
	Tags             []string                         `json:"tags,omitempty"`
}
