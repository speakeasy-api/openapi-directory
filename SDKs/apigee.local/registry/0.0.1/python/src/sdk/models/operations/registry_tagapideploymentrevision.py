"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apideployment as shared_apideployment
from ..shared import status as shared_status
from ..shared import tagapideploymentrevisionrequest as shared_tagapideploymentrevisionrequest
from typing import Optional


@dataclasses.dataclass
class RegistryTagAPIDeploymentRevisionRequest:
    
    api: str = dataclasses.field(metadata={'path_param': { 'field_name': 'api', 'style': 'simple', 'explode': False }})
    r"""The api id."""  
    deployment: str = dataclasses.field(metadata={'path_param': { 'field_name': 'deployment', 'style': 'simple', 'explode': False }})
    r"""The deployment id."""  
    location: str = dataclasses.field(metadata={'path_param': { 'field_name': 'location', 'style': 'simple', 'explode': False }})
    r"""The location id."""  
    project: str = dataclasses.field(metadata={'path_param': { 'field_name': 'project', 'style': 'simple', 'explode': False }})
    r"""The project id."""  
    tag_api_deployment_revision_request: shared_tagapideploymentrevisionrequest.TagAPIDeploymentRevisionRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class RegistryTagAPIDeploymentRevisionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_deployment: Optional[shared_apideployment.APIDeployment] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    status: Optional[shared_status.Status] = dataclasses.field(default=None)
    r"""Default error response"""  
    