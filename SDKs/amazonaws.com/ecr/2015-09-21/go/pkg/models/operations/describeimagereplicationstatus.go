// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeImageReplicationStatusXAmzTargetEnum
type DescribeImageReplicationStatusXAmzTargetEnum string

const (
	DescribeImageReplicationStatusXAmzTargetEnumAmazonEc2ContainerRegistryV20150921DescribeImageReplicationStatus DescribeImageReplicationStatusXAmzTargetEnum = "AmazonEC2ContainerRegistry_V20150921.DescribeImageReplicationStatus"
)

func (e *DescribeImageReplicationStatusXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerRegistry_V20150921.DescribeImageReplicationStatus":
		*e = DescribeImageReplicationStatusXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeImageReplicationStatusXAmzTargetEnum: %s", s)
	}
}

type DescribeImageReplicationStatusHeaders struct {
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeImageReplicationStatusXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeImageReplicationStatusRequest struct {
	Headers DescribeImageReplicationStatusHeaders
	Request shared.DescribeImageReplicationStatusRequest `request:"mediaType=application/json"`
}

type DescribeImageReplicationStatusResponse struct {
	ContentType string
	// Success
	DescribeImageReplicationStatusResponse *shared.DescribeImageReplicationStatusResponse
	// ImageNotFoundException
	ImageNotFoundException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// RepositoryNotFoundException
	RepositoryNotFoundException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
	// ValidationException
	ValidationException interface{}
}
