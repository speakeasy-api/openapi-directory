"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import membertype_enum as shared_membertype_enum
from ..shared import permissiontype_enum as shared_permissiontype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Permission:
    r"""Permission granted to a user, group, or resource to access a certain aspect of another user, group, or resource mailbox."""
    
    grantee_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GranteeId') }})  
    grantee_type: shared_membertype_enum.MemberTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GranteeType') }})  
    permission_values: list[shared_permissiontype_enum.PermissionTypeEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PermissionValues') }})  
    