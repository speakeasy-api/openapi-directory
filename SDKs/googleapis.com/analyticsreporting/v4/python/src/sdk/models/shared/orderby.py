"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OrderByOrderTypeEnum(str, Enum):
    r"""The order type. The default orderType is `VALUE`."""
    ORDER_TYPE_UNSPECIFIED = 'ORDER_TYPE_UNSPECIFIED'
    VALUE = 'VALUE'
    DELTA = 'DELTA'
    SMART = 'SMART'
    HISTOGRAM_BUCKET = 'HISTOGRAM_BUCKET'
    DIMENSION_AS_INTEGER = 'DIMENSION_AS_INTEGER'

class OrderBySortOrderEnum(str, Enum):
    r"""The sorting order for the field."""
    SORT_ORDER_UNSPECIFIED = 'SORT_ORDER_UNSPECIFIED'
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderBy:
    r"""Specifies the sorting options."""
    
    field_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldName'), 'exclude': lambda f: f is None }})
    r"""The field which to sort by. The default sort order is ascending. Example: `ga:browser`. Note, that you can only specify one field for sort here. For example, `ga:browser, ga:city` is not valid."""  
    order_type: Optional[OrderByOrderTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderType'), 'exclude': lambda f: f is None }})
    r"""The order type. The default orderType is `VALUE`."""  
    sort_order: Optional[OrderBySortOrderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sortOrder'), 'exclude': lambda f: f is None }})
    r"""The sorting order for the field."""  
    