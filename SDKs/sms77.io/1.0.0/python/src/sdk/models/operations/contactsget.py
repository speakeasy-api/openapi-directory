"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class ContactsGetActionEnum(str, Enum):
    r"""Determines the action to execute."""
    READ = 'read'

class ContactsGetJSONEnum(str, Enum):
    r"""Defines whether to return the response as JSON or CSV separated by semicolon."""
    ZERO = '0'
    ONE = '1'


@dataclasses.dataclass
class ContactsGetRequest:
    
    action: ContactsGetActionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'action', 'style': 'form', 'explode': True }})
    r"""Determines the action to execute."""  
    json: Optional[ContactsGetJSONEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'json', 'style': 'form', 'explode': True }})
    r"""Defines whether to return the response as JSON or CSV separated by semicolon."""  
    

@dataclasses.dataclass
class ContactsGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    contacts_get_200_application_json_string: Optional[str] = dataclasses.field(default=None)
    r"""OK (CSV)"""  
    contacts_get_200_text_csv_string: Optional[str] = dataclasses.field(default=None)
    r"""OK (CSV)"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    