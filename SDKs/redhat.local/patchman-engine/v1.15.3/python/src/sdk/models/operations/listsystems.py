"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import controllers_systemsresponse as shared_controllers_systemsresponse
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class ListSystemsSecurity:
    
    rh_identity: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'x-rh-identity' }})  
    
class ListSystemsSortEnum(str, Enum):
    r"""Sort field"""
    ID = 'id'
    DISPLAY_NAME = 'display_name'
    LAST_EVALUATION = 'last_evaluation'
    LAST_UPLOAD = 'last_upload'
    RHSA_COUNT = 'rhsa_count'
    RHBA_COUNT = 'rhba_count'
    RHEA_COUNT = 'rhea_count'
    OTHER_COUNT = 'other_count'
    STALE = 'stale'
    PACKAGES_INSTALLED = 'packages_installed'
    PACKAGES_UPDATABLE = 'packages_updatable'


@dataclasses.dataclass
class ListSystemsRequest:
    
    filter_created: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[created]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_culled_timestamp: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[culled_timestamp]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_display_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[display_name]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[id]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_insights_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[insights_id]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_last_evaluation: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[last_evaluation]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_last_upload: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[last_upload]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_other_count: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[other_count]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_packages_installed: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[packages_installed]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_packages_updatable: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[packages_updatable]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_rhba_count: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[rhba_count]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_rhea_count: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[rhea_count]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_rhsa_count: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[rhsa_count]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_stale_timestamp: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[stale_timestamp]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_stale_warning_timestamp: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[stale_warning_timestamp]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_stale: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[stale]', 'style': 'form', 'explode': True }})
    r"""Filter"""  
    filter_system_profile_sap_sids_in: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[system_profile][sap_sids][in]', 'style': 'form', 'explode': True }})
    r"""Filter systems by their SAP SIDs"""  
    filter_system_profile_sap_system: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[system_profile][sap_system]', 'style': 'form', 'explode': True }})
    r"""Filter only SAP systems"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Limit for paging, set -1 to return all"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Offset for paging"""  
    search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search', 'style': 'form', 'explode': True }})
    r"""Find matching text"""  
    sort: Optional[ListSystemsSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Sort field"""  
    tags: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tags', 'style': 'form', 'explode': True }})
    r"""Tag filter"""  
    

@dataclasses.dataclass
class ListSystemsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    controllers_systems_response: Optional[shared_controllers_systemsresponse.ControllersSystemsResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    