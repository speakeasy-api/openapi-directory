"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import country as shared_country
from ..shared import currency as shared_currency
from ..shared import uilanguage as shared_uilanguage
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UserSettingsInvoiceTemplateEnum(str, Enum):
    DEFAULT = 'Default'
    TEMPLATE1 = 'Template1'
    TEMPLATE2 = 'Template2'

class UserSettingsProfessionEnum(str, Enum):
    OTHER = 'Other'
    DESIGN_AND_CREATIVE = 'DesignAndCreative'
    SOFTWARE_DEVELOPMENT = 'SoftwareDevelopment'
    CONTENT_WRITING_AND_MARKETING = 'ContentWritingAndMarketing'
    FREELANCERS = 'Freelancers'
    CONSULTANTS = 'Consultants'
    SMES = 'Smes'
    ENTERPRISE = 'Enterprise'
    E_COMMERCE = 'ECommerce'
    INDIVIDUAL = 'Individual'

class UserSettingsReferralProgramEnum(str, Enum):
    ENABLED = 'Enabled'
    DISABLED = 'Disabled'

class UserSettingsStoreCheckoutFieldsEnum(str, Enum):
    SHOW_MINIMUM_REQUIRED_FIELDS = 'ShowMinimumRequiredFields'
    SHOW_ALL_FIELDS = 'ShowAllFields'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserSettings:
    
    accountant_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountantEmail'), 'exclude': lambda f: f is None }})  
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Address'), 'exclude': lambda f: f is None }})  
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ApiKey'), 'exclude': lambda f: f is None }})  
    api_secret: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ApiSecret'), 'exclude': lambda f: f is None }})  
    background_image: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BackgroundImage'), 'exclude': lambda f: f is None }})  
    bank: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Bank'), 'exclude': lambda f: f is None }})  
    bank_account: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BankAccount'), 'exclude': lambda f: f is None }})  
    cname: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Cname'), 'exclude': lambda f: f is None }})  
    company_registration_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompanyRegistrationNumber'), 'exclude': lambda f: f is None }})  
    country: Optional[shared_country.Country] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Country'), 'exclude': lambda f: f is None }})  
    country_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CountryId'), 'exclude': lambda f: f is None }})  
    currency: Optional[shared_currency.Currency] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Currency'), 'exclude': lambda f: f is None }})  
    currency_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrencyId'), 'exclude': lambda f: f is None }})  
    currency_symbol: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrencySymbol'), 'exclude': lambda f: f is None }})  
    default_date_format: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultDateFormat'), 'exclude': lambda f: f is None }})  
    default_due_date_in_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultDueDateInDays'), 'exclude': lambda f: f is None }})  
    do_not_track: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DoNotTrack'), 'exclude': lambda f: f is None }})  
    enable_client_portal: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EnableClientPortal'), 'exclude': lambda f: f is None }})  
    enable_predictive_invoicing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EnablePredictiveInvoicing'), 'exclude': lambda f: f is None }})  
    enable_recurring_invoicing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EnableRecurringInvoicing'), 'exclude': lambda f: f is None }})  
    has_invoice_logo: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HasInvoiceLogo'), 'exclude': lambda f: f is None }})  
    iban: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Iban'), 'exclude': lambda f: f is None }})  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    invoice_template: Optional[UserSettingsInvoiceTemplateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvoiceTemplate'), 'exclude': lambda f: f is None }})  
    invoice_template_color_hex: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvoiceTemplateColorHex'), 'exclude': lambda f: f is None }})  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PhoneNumber'), 'exclude': lambda f: f is None }})  
    profession: Optional[UserSettingsProfessionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Profession'), 'exclude': lambda f: f is None }})  
    receive_sms_notifications: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReceiveSmsNotifications'), 'exclude': lambda f: f is None }})  
    referral_program: Optional[UserSettingsReferralProgramEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReferralProgram'), 'exclude': lambda f: f is None }})  
    store_checkout_fields: Optional[UserSettingsStoreCheckoutFieldsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreCheckoutFields'), 'exclude': lambda f: f is None }})  
    store_color_hex: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreColorHex'), 'exclude': lambda f: f is None }})  
    store_currency: Optional[shared_currency.Currency] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreCurrency'), 'exclude': lambda f: f is None }})  
    store_currency_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreCurrencyId'), 'exclude': lambda f: f is None }})  
    store_custom_java_script: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreCustomJavaScript'), 'exclude': lambda f: f is None }})  
    store_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreDescription'), 'exclude': lambda f: f is None }})  
    store_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreEmail'), 'exclude': lambda f: f is None }})  
    store_language: Optional[shared_uilanguage.UILanguage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreLanguage'), 'exclude': lambda f: f is None }})  
    store_language_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreLanguageId'), 'exclude': lambda f: f is None }})  
    store_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreName'), 'exclude': lambda f: f is None }})  
    store_purchase_email_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorePurchaseEmailMessage'), 'exclude': lambda f: f is None }})  
    store_purchase_thank_you_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorePurchaseThankYouMessage'), 'exclude': lambda f: f is None }})  
    store_text_color_hex: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreTextColorHex'), 'exclude': lambda f: f is None }})  
    store_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoreUrl'), 'exclude': lambda f: f is None }})  
    subscribe_to_product_emails: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubscribeToProductEmails'), 'exclude': lambda f: f is None }})  
    swift: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Swift'), 'exclude': lambda f: f is None }})  
    terms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Terms'), 'exclude': lambda f: f is None }})  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UserId'), 'exclude': lambda f: f is None }})  
    user_signature: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UserSignature'), 'exclude': lambda f: f is None }})  
    vat_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VatNumber'), 'exclude': lambda f: f is None }})  
    years_of_experience: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('YearsOfExperience'), 'exclude': lambda f: f is None }})  
    