/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { Link } from "./link";
import { OptionalLink } from "./optionallink";
import { PickupOutput } from "./pickup";
import { Expose, Type } from "class-transformer";

/**
 * Helpful links to other pages of results
 */
export class GetPickupsResponseBodyPaginationLink extends SpeakeasyBase {
  /**
   * The link to the first page of results.  This object will _always_ have an `href` field. If there are no results, then the first page will contain an empty array of items.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first" })
  @Type(() => Link)
  first: Link;

  /**
   * The link to the final page of results.  This object will _always_ have an `href` field. If there are no results, then the final page will contain an empty array of items.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last" })
  @Type(() => Link)
  last: Link;

  /**
   * The link to the next page of results.  The `href` field will only be set when the `page` is less than `pages`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  @Type(() => OptionalLink)
  next: OptionalLink;

  /**
   * The link to the previous page of results.  The `href` field will only be set when the `page` is 2 or greater.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prev" })
  @Type(() => OptionalLink)
  prev: OptionalLink;
}

/**
 * An error response body
 */
export class GetPickupsResponseBody extends SpeakeasyBase {
  /**
   * The errors associated with the failed API call
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors: ErrorT[];

  /**
   * Helpful links to other pages of results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => GetPickupsResponseBodyPaginationLink)
  links: GetPickupsResponseBodyPaginationLink;

  /**
   * Current page of the list pickups results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page: number;

  /**
   * Total number of pages for list pickups results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pages" })
  pages: number;

  /**
   * An array of pickups associated with the user's account.
   */
  @SpeakeasyMetadata({ elemType: PickupOutput })
  @Expose({ name: "pickups" })
  @Type(() => PickupOutput)
  pickups: PickupOutput[];

  /**
   * A UUID that uniquely identifies the request id.
   *
   * @remarks
   * This can be given to the support team to help debug non-trivial issues that may occur
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;

  /**
   * The total number of pickups returned
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;
}
