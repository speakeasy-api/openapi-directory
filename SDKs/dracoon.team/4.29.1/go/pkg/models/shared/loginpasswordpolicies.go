// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// LoginPasswordPolicies - Login password policies
type LoginPasswordPolicies struct {
	// Password character rules
	CharacterRules CharacterRules `json:"characterRules"`
	// Minimum number of characters a password must contain
	MinLength int `json:"minLength"`
	// Number of passwords to archive
	//
	// (must be between `0` and `10`; `0` means that password history is disabled)
	NumberOfArchivedPasswords int `json:"numberOfArchivedPasswords"`
	// Password expiration information
	PasswordExpiration PasswordExpiration `json:"passwordExpiration"`
	// Determines whether a password must NOT contain word(s) from a dictionary
	RejectDictionaryWords bool `json:"rejectDictionaryWords"`
	// Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)
	//
	// (min. 4 character pattern)
	RejectKeyboardPatterns bool `json:"rejectKeyboardPatterns"`
	// Determines whether a password must NOT contain user info (first name, last name, email, user name)
	RejectUserInfo bool `json:"rejectUserInfo"`
	// Modification date
	UpdatedAt time.Time `json:"updatedAt"`
	// User information
	UpdatedBy UserInfo `json:"updatedBy"`
	// User lockout information
	UserLockout UserLockout `json:"userLockout"`
}
