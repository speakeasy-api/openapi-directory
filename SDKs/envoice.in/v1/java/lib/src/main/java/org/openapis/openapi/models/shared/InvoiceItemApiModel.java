/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class InvoiceItemApiModel {
    /**
     * Amount per unit
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Cost")
    public Double cost;

    public InvoiceItemApiModel withCost(Double cost) {
        this.cost = cost;
        return this;
    }
    
    /**
     * Additional description attached to the invoice item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public InvoiceItemApiModel withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Amount that goes as a discount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DiscountAmount")
    public Double discountAmount;

    public InvoiceItemApiModel withDiscountAmount(Double discountAmount) {
        this.discountAmount = discountAmount;
        return this;
    }
    
    /**
     * Discount percentage for the overall amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DiscountPercentage")
    public Double discountPercentage;

    public InvoiceItemApiModel withDiscountPercentage(Double discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }
    
    /**
     * Id of invoice item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Integer id;

    public InvoiceItemApiModel withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Quantity in total used for the work type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Quantity")
    public Double quantity;

    public InvoiceItemApiModel withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Sub-Total amount of the invoice item (Amount without tax)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubTotalAmount")
    public Double subTotalAmount;

    public InvoiceItemApiModel withSubTotalAmount(Double subTotalAmount) {
        this.subTotalAmount = subTotalAmount;
        return this;
    }
    
    /**
     * Amount that goes to the tax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxAmount")
    public Double taxAmount;

    public InvoiceItemApiModel withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * Tax applied on the item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxId")
    public Integer taxId;

    public InvoiceItemApiModel withTaxId(Integer taxId) {
        this.taxId = taxId;
        return this;
    }
    
    /**
     * Task percentage. Ex: 18%
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxPercentage")
    public Double taxPercentage;

    public InvoiceItemApiModel withTaxPercentage(Double taxPercentage) {
        this.taxPercentage = taxPercentage;
        return this;
    }
    
    /**
     * Total amount of the invoice item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalAmount")
    public Double totalAmount;

    public InvoiceItemApiModel withTotalAmount(Double totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    /**
     * Work type (Name of the service)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkTypeId")
    public Integer workTypeId;

    public InvoiceItemApiModel withWorkTypeId(Integer workTypeId) {
        this.workTypeId = workTypeId;
        return this;
    }
    
    public InvoiceItemApiModel(){}
}
