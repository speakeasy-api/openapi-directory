/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthorizerConfig } from "./authorizerconfig";
import { DomainConfigurationStatusEnum } from "./domainconfigurationstatusenum";
import { DomainTypeEnum } from "./domaintypeenum";
import { ServerCertificateSummary } from "./servercertificatesummary";
import { ServiceTypeEnum } from "./servicetypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeDomainConfigurationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authorizerConfig" })
  @Type(() => AuthorizerConfig)
  authorizerConfig?: AuthorizerConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "domainConfigurationArn" })
  domainConfigurationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "domainConfigurationName" })
  domainConfigurationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "domainConfigurationStatus" })
  domainConfigurationStatus?: DomainConfigurationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "domainName" })
  domainName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "domainType" })
  domainType?: DomainTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastStatusChangeDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastStatusChangeDate?: Date;

  @SpeakeasyMetadata({ elemType: ServerCertificateSummary })
  @Expose({ name: "serverCertificates" })
  @Type(() => ServerCertificateSummary)
  serverCertificates?: ServerCertificateSummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "serviceType" })
  serviceType?: ServiceTypeEnum;
}
