/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * MssqlInstanceSummary - Returned if the query was successful.
 */
public class MssqlInstanceSummary {
    /**
     * The address of the instance in a Windows server failover cluster, populated only if it belongs to one.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusterInstanceAddress")
    public String clusterInstanceAddress;

    public MssqlInstanceSummary withClusterInstanceAddress(String clusterInstanceAddress) {
        this.clusterInstanceAddress = clusterInstanceAddress;
        return this;
    }
    
    /**
     * SLA Domain ID assigned to instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuredSlaDomainId")
    public String configuredSlaDomainId;

    public MssqlInstanceSummary withConfiguredSlaDomainId(String configuredSlaDomainId) {
        this.configuredSlaDomainId = configuredSlaDomainId;
        return this;
    }
    
    /**
     * SLA Domain name assigned to instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuredSlaDomainName")
    public String configuredSlaDomainName;

    public MssqlInstanceSummary withConfiguredSlaDomainName(String configuredSlaDomainName) {
        this.configuredSlaDomainName = configuredSlaDomainName;
        return this;
    }
    
    /**
     * Specifies whether the SLA Domain is used for protection or retention.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuredSlaDomainType")
    public String configuredSlaDomainType;

    public MssqlInstanceSummary withConfiguredSlaDomainType(String configuredSlaDomainType) {
        this.configuredSlaDomainType = configuredSlaDomainType;
        return this;
    }
    
    /**
     * Boolean value that specifies whether or not to perform copy-only backups of the database. When true, database backups are copy-only backups. When false, database backups are full backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("copyOnly")
    public Boolean copyOnly;

    public MssqlInstanceSummary withCopyOnly(Boolean copyOnly) {
        this.copyOnly = copyOnly;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public MssqlInstanceSummary withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalTimestamp")
    public Long internalTimestamp;

    public MssqlInstanceSummary withInternalTimestamp(Long internalTimestamp) {
        this.internalTimestamp = internalTimestamp;
        return this;
    }
    
    /**
     * Boolean value that identifies a Retention Lock SLA Domain. Value is true when the SLA Domain assigned to the instance is Retention Locked and false when it is not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isRetentionLocked")
    public Boolean isRetentionLocked;

    public MssqlInstanceSummary withIsRetentionLocked(Boolean isRetentionLocked) {
        this.isRetentionLocked = isRetentionLocked;
        return this;
    }
    
    /**
     * Seconds between two log backups. A value of 0 disables log backup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logBackupFrequencyInSeconds")
    public Integer logBackupFrequencyInSeconds;

    public MssqlInstanceSummary withLogBackupFrequencyInSeconds(Integer logBackupFrequencyInSeconds) {
        this.logBackupFrequencyInSeconds = logBackupFrequencyInSeconds;
        return this;
    }
    
    /**
     * Number of hours to retain a log backup. When the value is set to -1 the Rubrik cluster retains the log backup until the database snapshots that precede the log backup have expired.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logRetentionHours")
    public Integer logRetentionHours;

    public MssqlInstanceSummary withLogRetentionHours(Integer logRetentionHours) {
        this.logRetentionHours = logRetentionHours;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public MssqlInstanceSummary withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("primaryClusterId")
    public String primaryClusterId;

    public MssqlInstanceSummary withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("protectionDate")
    public LocalDate protectionDate;

    public MssqlInstanceSummary withProtectionDate(LocalDate protectionDate) {
        this.protectionDate = protectionDate;
        return this;
    }
    
    @JsonProperty("rootProperties")
    public MssqlRootProperties rootProperties;

    public MssqlInstanceSummary withRootProperties(MssqlRootProperties rootProperties) {
        this.rootProperties = rootProperties;
        return this;
    }
    
    /**
     * A list of reasons that all the SQL Server databases in a SQL Server instance cannot be protected by the Rubrik CDM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unprotectableReasons")
    public String[] unprotectableReasons;

    public MssqlInstanceSummary withUnprotectableReasons(String[] unprotectableReasons) {
        this.unprotectableReasons = unprotectableReasons;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public MssqlInstanceSummary withVersion(String version) {
        this.version = version;
        return this;
    }
    
    public MssqlInstanceSummary(@JsonProperty("id") String id, @JsonProperty("primaryClusterId") String primaryClusterId, @JsonProperty("rootProperties") MssqlRootProperties rootProperties) {
        this.id = id;
        this.primaryClusterId = primaryClusterId;
        this.rootProperties = rootProperties;
  }
}
