/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Service to register with OSDB
 */
export class LoadServiceRequestBody extends SpeakeasyBase {
  /**
   * The URL of the resource containing the service description to load.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_description_url" })
  serviceDescriptionUrl: string;

  /**
   * Service ID to be used to uniquely identify the service. (Optional: Required for anonymous services or to override the service name in the service description.)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_moniker" })
  serviceMoniker?: string;
}

export enum LoadService200ApplicationJSONStatusEnum {
  Success = "success",
}

/**
 * loadService response
 */
export class LoadService200ApplicationJSON extends SpeakeasyBase {
  /**
   * The path of the REST API method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api" })
  api: string;

  /**
   * The name of the REST API method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method: string;

  /**
   * Confirmation message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: LoadService200ApplicationJSONStatusEnum;
}

export class LoadServiceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error response
   */
  @SpeakeasyMetadata()
  errorModel?: shared.ErrorModel;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * loadService response
   */
  @SpeakeasyMetadata()
  loadService200ApplicationJSONObject?: LoadService200ApplicationJSON;
}
