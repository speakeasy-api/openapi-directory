/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApproximateSplitRequest - A suggestion by the service to the worker to dynamically split the WorkItem.
 */
public class ApproximateSplitRequest {
    /**
     * A fraction at which to split the work item, from 0.0 (beginning of the input) to 1.0 (end of the input).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fractionConsumed")
    public Double fractionConsumed;

    public ApproximateSplitRequest withFractionConsumed(Double fractionConsumed) {
        this.fractionConsumed = fractionConsumed;
        return this;
    }
    
    /**
     * The fraction of the remainder of work to split the work item at, from 0.0 (split at the current position) to 1.0 (end of the input).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fractionOfRemainder")
    public Double fractionOfRemainder;

    public ApproximateSplitRequest withFractionOfRemainder(Double fractionOfRemainder) {
        this.fractionOfRemainder = fractionOfRemainder;
        return this;
    }
    
    /**
     * Position defines a position within a collection of data. The value can be either the end position, a key (used with ordered collections), a byte offset, or a record index.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("position")
    public Position position;

    public ApproximateSplitRequest withPosition(Position position) {
        this.position = position;
        return this;
    }
    
    public ApproximateSplitRequest(){}
}
