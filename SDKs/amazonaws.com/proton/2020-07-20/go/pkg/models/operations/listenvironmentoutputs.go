// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListEnvironmentOutputsXAmzTargetEnum
type ListEnvironmentOutputsXAmzTargetEnum string

const (
	ListEnvironmentOutputsXAmzTargetEnumAwsProton20200720ListEnvironmentOutputs ListEnvironmentOutputsXAmzTargetEnum = "AwsProton20200720.ListEnvironmentOutputs"
)

func (e ListEnvironmentOutputsXAmzTargetEnum) ToPointer() *ListEnvironmentOutputsXAmzTargetEnum {
	return &e
}

func (e *ListEnvironmentOutputsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AwsProton20200720.ListEnvironmentOutputs":
		*e = ListEnvironmentOutputsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEnvironmentOutputsXAmzTargetEnum: %v", v)
	}
}

type ListEnvironmentOutputsRequest struct {
	ListEnvironmentOutputsInput shared.ListEnvironmentOutputsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  ListEnvironmentOutputsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListEnvironmentOutputsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListEnvironmentOutputsOutput *shared.ListEnvironmentOutputsOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
