// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETSetDesiredCapacityActionEnum
type GETSetDesiredCapacityActionEnum string

const (
	GETSetDesiredCapacityActionEnumSetDesiredCapacity GETSetDesiredCapacityActionEnum = "SetDesiredCapacity"
)

func (e *GETSetDesiredCapacityActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SetDesiredCapacity":
		*e = GETSetDesiredCapacityActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSetDesiredCapacityActionEnum: %s", s)
	}
}

// GETSetDesiredCapacityVersionEnum
type GETSetDesiredCapacityVersionEnum string

const (
	GETSetDesiredCapacityVersionEnumTwoThousandAndEleven0101 GETSetDesiredCapacityVersionEnum = "2011-01-01"
)

func (e *GETSetDesiredCapacityVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = GETSetDesiredCapacityVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSetDesiredCapacityVersionEnum: %s", s)
	}
}

type GETSetDesiredCapacityQueryParams struct {
	Action GETSetDesiredCapacityActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// The desired capacity is the initial capacity of the Auto Scaling group after this operation completes and the capacity it attempts to maintain.
	DesiredCapacity int64 `queryParam:"style=form,explode=true,name=DesiredCapacity"`
	// Indicates whether Amazon EC2 Auto Scaling waits for the cooldown period to complete before initiating a scaling activity to set your Auto Scaling group to its new capacity. By default, Amazon EC2 Auto Scaling does not honor the cooldown period during manual scaling activities.
	HonorCooldown *bool                            `queryParam:"style=form,explode=true,name=HonorCooldown"`
	Version       GETSetDesiredCapacityVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETSetDesiredCapacityHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETSetDesiredCapacityRequest struct {
	QueryParams GETSetDesiredCapacityQueryParams
	Headers     GETSetDesiredCapacityHeaders
}

type GETSetDesiredCapacityResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
