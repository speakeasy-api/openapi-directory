"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import edgeoutputconfig as shared_edgeoutputconfig
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateEdgePackagingJobRequest:
    
    compilation_job_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationJobName') }})  
    edge_packaging_job_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EdgePackagingJobName') }})  
    model_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelName') }})  
    model_version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelVersion') }})  
    output_config: shared_edgeoutputconfig.EdgeOutputConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputConfig') }})  
    role_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoleArn') }})  
    resource_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceKey'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    