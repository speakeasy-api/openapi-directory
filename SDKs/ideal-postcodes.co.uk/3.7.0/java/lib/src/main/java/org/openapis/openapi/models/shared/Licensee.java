/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Licensee - Licensee object which can be defined by user
 */
public class Licensee {
    /**
     * Licensee's first, second and third line address as well as post town concatenated by commas
     */
    @JsonProperty("address")
    public String address;
    public Licensee withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * Timestamp for when the licensee was created
     */
    @JsonProperty("createdAt")
    public String createdAt;
    public Licensee withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("daily")
    public LicenseeDaily daily;
    public Licensee withDaily(LicenseeDaily daily) {
        this.daily = daily;
        return this;
    }
    
    /**
     * An immutable ID provided for every licensee. Primarily used for paginated list requests.
     * 
     */
    @JsonProperty("id")
    public String id;
    public Licensee withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Uniquely identifies a licensee for a key. 
     * 
     * Required to perform paid lookups for a specific licensee. Typically begins `sk_`.
     * 
     */
    @JsonProperty("key")
    public String key;
    public Licensee withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Licensee individual or organisation name
     */
    @JsonProperty("name")
    public String name;
    public Licensee withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Licensee's postcode
     */
    @JsonProperty("postcode")
    public String postcode;
    public Licensee withPostcode(String postcode) {
        this.postcode = postcode;
        return this;
    }
    
    /**
     * A list of allowed URLs. An empty list means that whitelisting is disabled
     */
    @JsonProperty("whitelist")
    public String[] whitelist;
    public Licensee withWhitelist(String[] whitelist) {
        this.whitelist = whitelist;
        return this;
    }
    
}
