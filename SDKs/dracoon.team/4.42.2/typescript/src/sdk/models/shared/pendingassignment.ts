/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Acceptance state:
 *
 * @remarks
 *
 * * `ACCEPTED`
 *
 * * `WAITING`
 *
 * * `DENIED`
 */
export enum PendingAssignmentStateEnum {
  Accepted = "ACCEPTED",
  Denied = "DENIED",
  Waiting = "WAITING",
}

/**
 * Pending assignment information
 */
export class PendingAssignment extends SpeakeasyBase {
  /**
   * Unique identifier for the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupId" })
  groupId: number;

  /**
   * Room ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roomId" })
  roomId: number;

  /**
   * Room name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roomName" })
  roomName: string;

  /**
   * Acceptance state:
   *
   * @remarks
   *
   * * `ACCEPTED`
   *
   * * `WAITING`
   *
   * * `DENIED`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: PendingAssignmentStateEnum;

  /**
   * Unique identifier for the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId: number;
}
