// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetInsightImpactGraphHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GetInsightImpactGraphRequestBody struct {
	// The estimated end time of the insight, in Unix time seconds. The EndTime is exclusive of the value provided. The time range between the start time and end time can't be more than six hours.
	EndTime time.Time `json:"EndTime"`
	// The insight's unique identifier. Use the GetInsightSummaries action to retrieve an InsightId.
	InsightID string `json:"InsightId"`
	// Specify the pagination token returned by a previous request to retrieve the next page of results.
	NextToken *string `json:"NextToken,omitempty"`
	// The estimated start time of the insight, in Unix time seconds. The StartTime is inclusive of the value provided and can't be more than 30 days old.
	StartTime time.Time `json:"StartTime"`
}

type GetInsightImpactGraphRequest struct {
	Headers GetInsightImpactGraphHeaders
	Request GetInsightImpactGraphRequestBody `request:"mediaType=application/json"`
}

type GetInsightImpactGraphResponse struct {
	ContentType string
	// Success
	GetInsightImpactGraphResult *shared.GetInsightImpactGraphResult
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ThrottledException
	ThrottledException interface{}
}
