/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EdgeModel } from "./edgemodel";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeDeviceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AgentVersion" })
  agentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceArn" })
  deviceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceFleetName" })
  deviceFleetName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceName" })
  deviceName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IotThingName" })
  iotThingName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestHeartbeat" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestHeartbeat?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxModels" })
  maxModels?: number;

  @SpeakeasyMetadata({ elemType: EdgeModel })
  @Expose({ name: "Models" })
  @Type(() => EdgeModel)
  models?: EdgeModel[];

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RegistrationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  registrationTime: Date;
}
