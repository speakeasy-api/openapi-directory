"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Proposal = void 0;
var utils_1 = require("../../../internal/utils");
var buyer_1 = require("./buyer");
var contactinformation_1 = require("./contactinformation");
var marketplacelabel_1 = require("./marketplacelabel");
var privatedata_1 = require("./privatedata");
var seller_1 = require("./seller");
var class_transformer_1 = require("class-transformer");
/**
 * Represents a proposal in the marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Each field in a proposal can have one of the following setting:
 *
 * @remarks
 *
 * (readonly) - It is an error to try and set this field. (buyer-readonly) - Only the seller can set this field. (seller-readonly) - Only the buyer can set this field. (updatable) - The field is updatable at all times by either buyer or the seller.
 */
var Proposal = /** @class */ (function (_super) {
    __extends(Proposal, _super);
    function Proposal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billedBuyer" }),
        (0, class_transformer_1.Type)(function () { return buyer_1.Buyer; }),
        __metadata("design:type", buyer_1.Buyer)
    ], Proposal.prototype, "billedBuyer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buyer" }),
        (0, class_transformer_1.Type)(function () { return buyer_1.Buyer; }),
        __metadata("design:type", buyer_1.Buyer)
    ], Proposal.prototype, "buyer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: contactinformation_1.ContactInformation }),
        (0, class_transformer_1.Expose)({ name: "buyerContacts" }),
        (0, class_transformer_1.Type)(function () { return contactinformation_1.ContactInformation; }),
        __metadata("design:type", Array)
    ], Proposal.prototype, "buyerContacts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buyerPrivateData" }),
        (0, class_transformer_1.Type)(function () { return privatedata_1.PrivateData; }),
        __metadata("design:type", privatedata_1.PrivateData)
    ], Proposal.prototype, "buyerPrivateData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dbmAdvertiserIds" }),
        __metadata("design:type", Array)
    ], Proposal.prototype, "dbmAdvertiserIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hasBuyerSignedOff" }),
        __metadata("design:type", Boolean)
    ], Proposal.prototype, "hasBuyerSignedOff", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hasSellerSignedOff" }),
        __metadata("design:type", Boolean)
    ], Proposal.prototype, "hasSellerSignedOff", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inventorySource" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "inventorySource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isRenegotiating" }),
        __metadata("design:type", Boolean)
    ], Proposal.prototype, "isRenegotiating", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isSetupComplete" }),
        __metadata("design:type", Boolean)
    ], Proposal.prototype, "isSetupComplete", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: marketplacelabel_1.MarketplaceLabel }),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        (0, class_transformer_1.Type)(function () { return marketplacelabel_1.MarketplaceLabel; }),
        __metadata("design:type", Array)
    ], Proposal.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastUpdaterOrCommentorRole" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "lastUpdaterOrCommentorRole", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "negotiationId" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "negotiationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originatorRole" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "originatorRole", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "privateAuctionId" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "privateAuctionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "proposalId" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "proposalId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "proposalState" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "proposalState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "revisionNumber" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "revisionNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "revisionTimeMs" }),
        __metadata("design:type", String)
    ], Proposal.prototype, "revisionTimeMs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "seller" }),
        (0, class_transformer_1.Type)(function () { return seller_1.Seller; }),
        __metadata("design:type", seller_1.Seller)
    ], Proposal.prototype, "seller", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: contactinformation_1.ContactInformation }),
        (0, class_transformer_1.Expose)({ name: "sellerContacts" }),
        (0, class_transformer_1.Type)(function () { return contactinformation_1.ContactInformation; }),
        __metadata("design:type", Array)
    ], Proposal.prototype, "sellerContacts", void 0);
    return Proposal;
}(utils_1.SpeakeasyBase));
exports.Proposal = Proposal;
