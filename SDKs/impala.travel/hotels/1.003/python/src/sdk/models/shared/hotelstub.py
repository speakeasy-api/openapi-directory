"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import address as shared_address
from ..shared import image as shared_image
from ..shared import location as shared_location
from ..shared import timerange as shared_timerange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HotelStub:
    r"""Essential information on a hotel returned as part of other resources, linking to the full resource within its `href` field."""
    
    address: shared_address.Address = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address') }})
    r"""Physical address"""  
    hotel_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hotelId') }})
    r"""Unique identifier for this hotel within the Impala platform."""  
    images: list[shared_image.Image] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('images') }})
    r"""Photos of the hotel, sorted in the recommended display order (e.g. for photo galleries) starting with the recommended hero image."""  
    location: shared_location.Location = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})
    r"""Precise location on a map (using WGS 84 longitude and latitude notation)"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the hotel."""  
    star_rating: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('starRating') }})
    r"""The star rating (or star-equivalent rating)"""  
    check_in: Optional[shared_timerange.TimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checkIn'), 'exclude': lambda f: f is None }})
    r"""A time range. Open-ended time ranges are indicated by omitting either `start` or `end` in the object."""  
    check_out: Optional[shared_timerange.TimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checkOut'), 'exclude': lambda f: f is None }})
    r"""A time range. Open-ended time ranges are indicated by omitting either `start` or `end` in the object."""  
    emails: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emails'), 'exclude': lambda f: f is None }})  
    href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('href'), 'exclude': lambda f: f is None }})
    r"""URI that allows access to the full hotel information."""  
    phone_numbers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phoneNumbers'), 'exclude': lambda f: f is None }})
    r"""The hotel's phone number(s)"""  
    timezone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timezone'), 'exclude': lambda f: f is None }})
    r"""The timezone the hotel is in - e.g AST"""  
    