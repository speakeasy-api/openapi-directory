/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETResizeClusterActionEnum {
  ResizeCluster = "ResizeCluster",
}

export enum GETResizeClusterVersionEnum {
  TwoThousandAndTwelve1201 = "2012-12-01",
}

export class GETResizeClusterRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETResizeClusterActionEnum;

  /**
   * A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to <code>false</code>, the resize type is elastic.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Classic",
  })
  classic?: boolean;

  /**
   * The unique identifier for the cluster to resize.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ClusterIdentifier",
  })
  clusterIdentifier: string;

  /**
   * The new cluster type for the specified cluster.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ClusterType",
  })
  clusterType?: string;

  /**
   * The new node type for the nodes you are adding. If not specified, the cluster's current node type is used.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NodeType",
  })
  nodeType?: string;

  /**
   * The new number of nodes for the cluster. If not specified, the cluster's current number of nodes is used.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NumberOfNodes",
  })
  numberOfNodes?: number;

  /**
   * The identifier of the reserved node.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ReservedNodeId",
  })
  reservedNodeId?: string;

  /**
   * The identifier of the target reserved node offering.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=TargetReservedNodeOfferingId",
  })
  targetReservedNodeOfferingId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETResizeClusterVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETResizeClusterResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
