// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETTestRenderTemplateActionEnum
type GETTestRenderTemplateActionEnum string

const (
	GETTestRenderTemplateActionEnumTestRenderTemplate GETTestRenderTemplateActionEnum = "TestRenderTemplate"
)

func (e GETTestRenderTemplateActionEnum) ToPointer() *GETTestRenderTemplateActionEnum {
	return &e
}

func (e *GETTestRenderTemplateActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TestRenderTemplate":
		*e = GETTestRenderTemplateActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETTestRenderTemplateActionEnum: %v", v)
	}
}

// GETTestRenderTemplateVersionEnum
type GETTestRenderTemplateVersionEnum string

const (
	GETTestRenderTemplateVersionEnumTwoThousandAndTen1201 GETTestRenderTemplateVersionEnum = "2010-12-01"
)

func (e GETTestRenderTemplateVersionEnum) ToPointer() *GETTestRenderTemplateVersionEnum {
	return &e
}

func (e *GETTestRenderTemplateVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETTestRenderTemplateVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETTestRenderTemplateVersionEnum: %v", v)
	}
}

type GETTestRenderTemplateRequest struct {
	Action GETTestRenderTemplateActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A list of replacement values to apply to the template. This parameter is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template.
	TemplateData string `queryParam:"style=form,explode=true,name=TemplateData"`
	// The name of the template that you want to render.
	TemplateName      string                           `queryParam:"style=form,explode=true,name=TemplateName"`
	Version           GETTestRenderTemplateVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETTestRenderTemplateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
