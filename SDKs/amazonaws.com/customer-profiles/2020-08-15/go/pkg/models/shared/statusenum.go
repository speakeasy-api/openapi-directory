// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StatusEnum string

const (
	StatusEnumNotStarted StatusEnum = "NOT_STARTED"
	StatusEnumInProgress StatusEnum = "IN_PROGRESS"
	StatusEnumComplete   StatusEnum = "COMPLETE"
	StatusEnumFailed     StatusEnum = "FAILED"
	StatusEnumSplit      StatusEnum = "SPLIT"
	StatusEnumRetry      StatusEnum = "RETRY"
	StatusEnumCancelled  StatusEnum = "CANCELLED"
)

func (e *StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NOT_STARTED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETE":
		fallthrough
	case "FAILED":
		fallthrough
	case "SPLIT":
		fallthrough
	case "RETRY":
		fallthrough
	case "CANCELLED":
		*e = StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusEnum: %s", s)
	}
}
