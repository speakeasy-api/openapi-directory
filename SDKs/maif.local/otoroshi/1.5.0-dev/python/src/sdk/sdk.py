"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .apikeys import Apikeys
from .auth_config import AuthConfig
from .certificates import Certificates
from .configuration import Configuration
from .data_exporter_configs import DataExporterConfigs
from .environments import Environments
from .groups import Groups
from .health import Health
from .import_ import Import
from .jwt_verifiers import JwtVerifiers
from .scripts import Scripts
from .services import Services
from .snowmonkey import Snowmonkey
from .stats import Stats
from .templates import Templates
from .validation_authorities import ValidationAuthorities

SERVERS = [
    "http://otoroshi-api.oto.tools/",
    "http://maif.local",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""Admin API of the Otoroshi reverse proxy
    https://maif.github.io/otoroshi/ - Find out more about Otoroshi
    """
    apikeys: Apikeys
    r"""Everything about Otoroshi api keys"""
    auth_config: AuthConfig
    r"""Everything about Otoroshi global auth. module config"""
    certificates: Certificates
    r"""Everything about Otoroshi SSL/TLS certificates"""
    configuration: Configuration
    r"""Everything about Otoroshi global configuration"""
    data_exporter_configs: DataExporterConfigs
    r"""Everything about Otoroshi data exporters"""
    environments: Environments
    r"""Everything about Otoroshi Environments"""
    groups: Groups
    r"""Everything about Otoroshi service groups"""
    health: Health
    r"""Everything about Otoroshi health status"""
    import_: Import
    r"""Everything about Otoroshi import/export"""
    jwt_verifiers: JwtVerifiers
    r"""Everything about Otoroshi global JWT token verifiers"""
    scripts: Scripts
    r"""Everything about Otoroshi request transformer scripts"""
    services: Services
    r"""Everything about Otoroshi service descriptors"""
    snowmonkey: Snowmonkey
    r"""Everything about Otoroshi Snow Monkey"""
    stats: Stats
    r"""Everything about Otoroshi stats"""
    templates: Templates
    r"""Everything about Otoroshi entities templates"""
    validation_authorities: ValidationAuthorities
    r"""Everything about Otoroshi validation authorities"""

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.apikeys = Apikeys(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.auth_config = AuthConfig(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.certificates = Certificates(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.configuration = Configuration(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.data_exporter_configs = DataExporterConfigs(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.environments = Environments(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.groups = Groups(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.health = Health(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.import_ = Import(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.jwt_verifiers = JwtVerifiers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.scripts = Scripts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.services = Services(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.snowmonkey = Snowmonkey(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.stats = Stats(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.templates = Templates(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.validation_authorities = ValidationAuthorities(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    