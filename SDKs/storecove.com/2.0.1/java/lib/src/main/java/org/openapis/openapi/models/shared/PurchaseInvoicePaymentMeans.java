/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PurchaseInvoicePaymentMeans {
    /**
     * The account number to which to transfer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account")public String account;
    public PurchaseInvoicePaymentMeans withAccount(String account) {
        this.account = account;
        return this;
    }
    
    /**
     * The code identifying the bank branch. May contain a BIC/SWIFT or something appropriate for the payment method, such as "NPP" for type NppPaymentMean.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branch_code")public String branchCode;
    public PurchaseInvoicePaymentMeans withBranchCode(String branchCode) {
        this.branchCode = branchCode;
        return this;
    }
    
    /**
     * The account holder name to which to transfer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("holder")public String holder;
    public PurchaseInvoicePaymentMeans withHolder(String holder) {
        this.holder = holder;
        return this;
    }
    
    /**
     * The mandate, used only for type DirectDebitPaymentMean.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandate")public String mandate;
    public PurchaseInvoicePaymentMeans withMandate(String mandate) {
        this.mandate = mandate;
        return this;
    }
    
    /**
     * The payment network. Used only for type CardPaymentType.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")public String network;
    public PurchaseInvoicePaymentMeans withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * The payment id to use when making the payment. The invoice sender will use this to match the received funds to the invoice.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_id")public String paymentId;
    public PurchaseInvoicePaymentMeans withPaymentId(String paymentId) {
        this.paymentId = paymentId;
        return this;
    }
    
    /**
     * The type of payment means. Which type are returned is determined by the &amp;pmv= query parameter. For details see documentation for that field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")public PurchaseInvoicePaymentMeansTypeEnum type;
    public PurchaseInvoicePaymentMeans withType(PurchaseInvoicePaymentMeansTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
