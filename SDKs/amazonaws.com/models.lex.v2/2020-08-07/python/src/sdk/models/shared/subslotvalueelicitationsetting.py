"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import promptspecification as shared_promptspecification
from ..shared import sampleutterance as shared_sampleutterance
from ..shared import slotdefaultvaluespecification as shared_slotdefaultvaluespecification
from ..shared import waitandcontinuespecification as shared_waitandcontinuespecification
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubSlotValueElicitationSetting:
    r"""<p>Subslot elicitation settings.</p> <p> <code>DefaultValueSpecification</code> is a list of default values for a constituent sub slot in a composite slot. Default values are used when Amazon Lex hasn't determined a value for a slot. You can specify default values from context variables, session attributes, and defined values. This is similar to <code>DefaultValueSpecification</code> for slots.</p> <p> <code>PromptSpecification</code> is the prompt that Amazon Lex uses to elicit the sub slot value from the user. This is similar to <code>PromptSpecification</code> for slots.</p>"""
    
    prompt_specification: shared_promptspecification.PromptSpecification = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('promptSpecification') }})
    r"""Specifies a list of message groups that Amazon Lex sends to a user to elicit a response."""  
    default_value_specification: Optional[shared_slotdefaultvaluespecification.SlotDefaultValueSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultValueSpecification'), 'exclude': lambda f: f is None }})
    r"""Defines a list of values that Amazon Lex should use as the default value for a slot."""  
    sample_utterances: Optional[list[shared_sampleutterance.SampleUtterance]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sampleUtterances'), 'exclude': lambda f: f is None }})  
    wait_and_continue_specification: Optional[shared_waitandcontinuespecification.WaitAndContinueSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('waitAndContinueSpecification'), 'exclude': lambda f: f is None }})
    r"""Specifies the prompts that Amazon Lex uses while a bot is waiting for customer input."""  
    