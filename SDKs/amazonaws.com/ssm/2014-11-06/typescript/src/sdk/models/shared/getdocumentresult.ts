/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttachmentContent } from "./attachmentcontent";
import { DocumentFormatEnum } from "./documentformatenum";
import { DocumentRequires } from "./documentrequires";
import { DocumentStatusEnum } from "./documentstatusenum";
import { DocumentTypeEnum } from "./documenttypeenum";
import { ReviewStatusEnum } from "./reviewstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetDocumentResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AttachmentContent })
  @Expose({ name: "AttachmentsContent" })
  @Type(() => AttachmentContent)
  attachmentsContent?: AttachmentContent[];

  @SpeakeasyMetadata()
  @Expose({ name: "Content" })
  content?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentFormat" })
  documentFormat?: DocumentFormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentType" })
  documentType?: DocumentTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentVersion" })
  documentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: DocumentRequires })
  @Expose({ name: "Requires" })
  @Type(() => DocumentRequires)
  requires?: DocumentRequires[];

  @SpeakeasyMetadata()
  @Expose({ name: "ReviewStatus" })
  reviewStatus?: ReviewStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: DocumentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusInformation" })
  statusInformation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VersionName" })
  versionName?: string;
}
