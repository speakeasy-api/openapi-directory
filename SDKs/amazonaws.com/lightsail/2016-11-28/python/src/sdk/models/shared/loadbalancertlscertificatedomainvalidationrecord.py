"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import loadbalancertlscertificatednsrecordcreationstate as shared_loadbalancertlscertificatednsrecordcreationstate
from ..shared import loadbalancertlscertificatedomainstatus_enum as shared_loadbalancertlscertificatedomainstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LoadBalancerTLSCertificateDomainValidationRecord:
    r"""Describes the validation record of each domain name in the SSL/TLS certificate."""
    
    dns_record_creation_state: Optional[shared_loadbalancertlscertificatednsrecordcreationstate.LoadBalancerTLSCertificateDNSRecordCreationState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dnsRecordCreationState'), 'exclude': lambda f: f is None }})  
    domain_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domainName'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    validation_status: Optional[shared_loadbalancertlscertificatedomainstatus_enum.LoadBalancerTLSCertificateDomainStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validationStatus'), 'exclude': lambda f: f is None }})  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})  
    