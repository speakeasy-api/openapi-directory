/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class StopLoggingResponse {
    /**
     * CloudTrailARNInvalidException
     */
    
    public Object cloudTrailARNInvalidException;

    public StopLoggingResponse withCloudTrailARNInvalidException(Object cloudTrailARNInvalidException) {
        this.cloudTrailARNInvalidException = cloudTrailARNInvalidException;
        return this;
    }
    
    /**
     * ConflictException
     */
    
    public Object conflictException;

    public StopLoggingResponse withConflictException(Object conflictException) {
        this.conflictException = conflictException;
        return this;
    }
    
    
    public String contentType;

    public StopLoggingResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InsufficientDependencyServiceAccessPermissionException
     */
    
    public Object insufficientDependencyServiceAccessPermissionException;

    public StopLoggingResponse withInsufficientDependencyServiceAccessPermissionException(Object insufficientDependencyServiceAccessPermissionException) {
        this.insufficientDependencyServiceAccessPermissionException = insufficientDependencyServiceAccessPermissionException;
        return this;
    }
    
    /**
     * InvalidHomeRegionException
     */
    
    public Object invalidHomeRegionException;

    public StopLoggingResponse withInvalidHomeRegionException(Object invalidHomeRegionException) {
        this.invalidHomeRegionException = invalidHomeRegionException;
        return this;
    }
    
    /**
     * InvalidTrailNameException
     */
    
    public Object invalidTrailNameException;

    public StopLoggingResponse withInvalidTrailNameException(Object invalidTrailNameException) {
        this.invalidTrailNameException = invalidTrailNameException;
        return this;
    }
    
    /**
     * NoManagementAccountSLRExistsException
     */
    
    public Object noManagementAccountSLRExistsException;

    public StopLoggingResponse withNoManagementAccountSLRExistsException(Object noManagementAccountSLRExistsException) {
        this.noManagementAccountSLRExistsException = noManagementAccountSLRExistsException;
        return this;
    }
    
    /**
     * NotOrganizationMasterAccountException
     */
    
    public Object notOrganizationMasterAccountException;

    public StopLoggingResponse withNotOrganizationMasterAccountException(Object notOrganizationMasterAccountException) {
        this.notOrganizationMasterAccountException = notOrganizationMasterAccountException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;

    public StopLoggingResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    
    public Integer statusCode;

    public StopLoggingResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public StopLoggingResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> stopLoggingResponse;

    public StopLoggingResponse withStopLoggingResponse(java.util.Map<String, Object> stopLoggingResponse) {
        this.stopLoggingResponse = stopLoggingResponse;
        return this;
    }
    
    /**
     * TrailNotFoundException
     */
    
    public Object trailNotFoundException;

    public StopLoggingResponse withTrailNotFoundException(Object trailNotFoundException) {
        this.trailNotFoundException = trailNotFoundException;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;

    public StopLoggingResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    public StopLoggingResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
