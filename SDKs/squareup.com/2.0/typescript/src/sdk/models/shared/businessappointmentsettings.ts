/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Money } from "./money";
import { Expose, Type } from "class-transformer";

/**
 * The service appointment settings, including where and how the service is provided.
 */
export class BusinessAppointmentSettings extends SpeakeasyBase {
  /**
   * The time unit of the service duration for bookings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alignment_time" })
  alignmentTime?: string;

  /**
   * Indicates whether a customer can choose from all available time slots and have a staff member assigned
   *
   * @remarks
   * automatically (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "any_team_member_booking_enabled" })
  anyTeamMemberBookingEnabled?: boolean;

  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancellation_fee_money" })
  @Type(() => Money)
  cancellationFeeMoney?: Money;

  /**
   * The cancellation policy adopted by the seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancellation_policy" })
  cancellationPolicy?: string;

  /**
   * The free-form text of the seller's cancellation policy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancellation_policy_text" })
  cancellationPolicyText?: string;

  /**
   * The cut-off time in seconds for allowing clients to cancel or reschedule an appointment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancellation_window_seconds" })
  cancellationWindowSeconds?: number;

  /**
   * Types of the location allowed for bookings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_types" })
  locationTypes?: string[];

  /**
   * The maximum number of daily appointments per team member or per location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_appointments_per_day_limit" })
  maxAppointmentsPerDayLimit?: number;

  /**
   * Indicates whether the daily appointment limit applies to team members or to
   *
   * @remarks
   * business locations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_appointments_per_day_limit_type" })
  maxAppointmentsPerDayLimitType?: string;

  /**
   * The maximum lead time in seconds before a service can be booked. Bookings must be created at most this far ahead of the booking's starting time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_booking_lead_time_seconds" })
  maxBookingLeadTimeSeconds?: number;

  /**
   * The minimum lead time in seconds before a service can be booked. Bookings must be created at least this far ahead of the booking's starting time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min_booking_lead_time_seconds" })
  minBookingLeadTimeSeconds?: number;

  /**
   * Indicates whether a customer can book multiple services in a single online booking.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "multiple_service_booking_enabled" })
  multipleServiceBookingEnabled?: boolean;

  /**
   * Indicates whether customers has an assigned staff member (`true`) or can select s staff member of their choice (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skip_booking_flow_staff_selection" })
  skipBookingFlowStaffSelection?: boolean;
}
