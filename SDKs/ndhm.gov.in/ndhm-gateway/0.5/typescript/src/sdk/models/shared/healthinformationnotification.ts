/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export enum HealthInformationNotificationNotificationNotifierTypeEnum {
  Hiu = "HIU",
  Hip = "HIP",
}

export class HealthInformationNotificationNotificationNotifier extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: HealthInformationNotificationNotificationNotifierTypeEnum;
}

export enum HealthInformationNotificationNotificationStatusNotificationSessionStatusEnum {
  Transferred = "TRANSFERRED",
  Failed = "FAILED",
}

export enum HealthInformationNotificationNotificationStatusNotificationStatusResponsesHiStatusEnum {
  Delivered = "DELIVERED",
  Ok = "OK",
  Errored = "ERRORED",
}

export class HealthInformationNotificationNotificationStatusNotificationStatusResponses extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "careContextReference" })
  careContextReference: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hiStatus" })
  hiStatus: HealthInformationNotificationNotificationStatusNotificationStatusResponsesHiStatusEnum;
}

export class HealthInformationNotificationNotificationStatusNotification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "hipId" })
  hipId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sessionStatus" })
  sessionStatus: HealthInformationNotificationNotificationStatusNotificationSessionStatusEnum;

  @SpeakeasyMetadata({
    elemType:
      HealthInformationNotificationNotificationStatusNotificationStatusResponses,
  })
  @Expose({ name: "statusResponses" })
  @Type(
    () =>
      HealthInformationNotificationNotificationStatusNotificationStatusResponses
  )
  statusResponses?: HealthInformationNotificationNotificationStatusNotificationStatusResponses[];
}

export class HealthInformationNotificationNotification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "consentId" })
  consentId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "doneAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  doneAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "notifier" })
  @Type(() => HealthInformationNotificationNotificationNotifier)
  notifier: HealthInformationNotificationNotificationNotifier;

  @SpeakeasyMetadata()
  @Expose({ name: "statusNotification" })
  @Type(() => HealthInformationNotificationNotificationStatusNotification)
  statusNotification: HealthInformationNotificationNotificationStatusNotification;

  @SpeakeasyMetadata()
  @Expose({ name: "transactionId" })
  transactionId: string;
}

export class HealthInformationNotification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "notification" })
  @Type(() => HealthInformationNotificationNotification)
  notification: HealthInformationNotificationNotification;

  /**
   * a nonce, unique for each HTTP request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;
}
