// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateOptionGroupActionEnum
type GETCreateOptionGroupActionEnum string

const (
	GETCreateOptionGroupActionEnumCreateOptionGroup GETCreateOptionGroupActionEnum = "CreateOptionGroup"
)

func (e *GETCreateOptionGroupActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateOptionGroup":
		*e = GETCreateOptionGroupActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateOptionGroupActionEnum: %s", s)
	}
}

// GETCreateOptionGroupVersionEnum
type GETCreateOptionGroupVersionEnum string

const (
	GETCreateOptionGroupVersionEnumTwoThousandAndThirteen0110 GETCreateOptionGroupVersionEnum = "2013-01-10"
)

func (e *GETCreateOptionGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-10":
		*e = GETCreateOptionGroupVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateOptionGroupVersionEnum: %s", s)
	}
}

type GETCreateOptionGroupRequest struct {
	Action                 GETCreateOptionGroupActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	EngineName             string                          `queryParam:"style=form,explode=true,name=EngineName"`
	MajorEngineVersion     string                          `queryParam:"style=form,explode=true,name=MajorEngineVersion"`
	OptionGroupDescription string                          `queryParam:"style=form,explode=true,name=OptionGroupDescription"`
	OptionGroupName        string                          `queryParam:"style=form,explode=true,name=OptionGroupName"`
	Version                GETCreateOptionGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm          *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateOptionGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
