/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * A broadcast service that can subscribe to content for multiple destinations.
 */
export class BroadcastService extends SpeakeasyBase {
  /**
   * The date the broadcast service was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate: Date;

  /**
   * The description of the broadcast service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The ID of the broadcast service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * The date the broadcast service was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate: Date;

  /**
   * The name of the broadcast service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}
