// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnum - URL category list size which is either 'topSites' or 'fullList'
type UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnum string

const (
	UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnumFullList UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnum = "fullList"
	UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnumTopSites UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnum = "topSites"
)

func (e UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnum) ToPointer() *UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnum {
	return &e
}

func (e *UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fullList":
		fallthrough
	case "topSites":
		*e = UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnum: %v", v)
	}
}

type UpdateNetworkContentFilteringRequestBody struct {
	// A list of URL patterns that are allowed
	AllowedURLPatterns []string `json:"allowedUrlPatterns,omitempty"`
	// A list of URL categories to block
	BlockedURLCategories []string `json:"blockedUrlCategories,omitempty"`
	// A list of URL patterns that are blocked
	BlockedURLPatterns []string `json:"blockedUrlPatterns,omitempty"`
	// URL category list size which is either 'topSites' or 'fullList'
	URLCategoryListSize *UpdateNetworkContentFilteringRequestBodyURLCategoryListSizeEnum `json:"urlCategoryListSize,omitempty"`
}

type UpdateNetworkContentFilteringRequest struct {
	RequestBody *UpdateNetworkContentFilteringRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                    `pathParam:"style=simple,explode=false,name=networkId"`
}

type UpdateNetworkContentFilteringResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkContentFiltering200ApplicationJSONObject map[string]interface{}
}
