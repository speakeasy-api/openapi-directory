/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Candidate - Information about a candidate running for elected office.
 */
public class Candidate {
    /**
     * The URL for the candidate's campaign web site.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("candidateUrl")
    public String candidateUrl;

    public Candidate withCandidateUrl(String candidateUrl) {
        this.candidateUrl = candidateUrl;
        return this;
    }
    
    /**
     * A list of known (social) media channels for this candidate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channels")
    public Channel[] channels;

    public Candidate withChannels(Channel[] channels) {
        this.channels = channels;
        return this;
    }
    
    /**
     * The email address for the candidate's campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public Candidate withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The candidate's name. If this is a joint ticket it will indicate the name of the candidate at the top of a ticket followed by a / and that name of candidate at the bottom of the ticket. e.g. "Mitt Romney / Paul Ryan"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Candidate withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The order the candidate appears on the ballot for this contest.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderOnBallot")
    public String orderOnBallot;

    public Candidate withOrderOnBallot(String orderOnBallot) {
        this.orderOnBallot = orderOnBallot;
        return this;
    }
    
    /**
     * The full name of the party the candidate is a member of.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("party")
    public String party;

    public Candidate withParty(String party) {
        this.party = party;
        return this;
    }
    
    /**
     * The voice phone number for the candidate's campaign office.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public String phone;

    public Candidate withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    /**
     * A URL for a photo of the candidate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photoUrl")
    public String photoUrl;

    public Candidate withPhotoUrl(String photoUrl) {
        this.photoUrl = photoUrl;
        return this;
    }
    
    public Candidate(){}
}
