// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CertificateStatusEnum string

const (
	CertificateStatusEnumActive            CertificateStatusEnum = "ACTIVE"
	CertificateStatusEnumInactive          CertificateStatusEnum = "INACTIVE"
	CertificateStatusEnumRevoked           CertificateStatusEnum = "REVOKED"
	CertificateStatusEnumPendingTransfer   CertificateStatusEnum = "PENDING_TRANSFER"
	CertificateStatusEnumRegisterInactive  CertificateStatusEnum = "REGISTER_INACTIVE"
	CertificateStatusEnumPendingActivation CertificateStatusEnum = "PENDING_ACTIVATION"
)

func (e *CertificateStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "REVOKED":
		fallthrough
	case "PENDING_TRANSFER":
		fallthrough
	case "REGISTER_INACTIVE":
		fallthrough
	case "PENDING_ACTIVATION":
		*e = CertificateStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CertificateStatusEnum: %s", s)
	}
}
