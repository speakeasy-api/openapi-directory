// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AnomalyDetectorStatusEnum string

const (
	AnomalyDetectorStatusEnumActive             AnomalyDetectorStatusEnum = "ACTIVE"
	AnomalyDetectorStatusEnumActivating         AnomalyDetectorStatusEnum = "ACTIVATING"
	AnomalyDetectorStatusEnumDeleting           AnomalyDetectorStatusEnum = "DELETING"
	AnomalyDetectorStatusEnumFailed             AnomalyDetectorStatusEnum = "FAILED"
	AnomalyDetectorStatusEnumInactive           AnomalyDetectorStatusEnum = "INACTIVE"
	AnomalyDetectorStatusEnumLearning           AnomalyDetectorStatusEnum = "LEARNING"
	AnomalyDetectorStatusEnumBackTestActivating AnomalyDetectorStatusEnum = "BACK_TEST_ACTIVATING"
	AnomalyDetectorStatusEnumBackTestActive     AnomalyDetectorStatusEnum = "BACK_TEST_ACTIVE"
	AnomalyDetectorStatusEnumBackTestComplete   AnomalyDetectorStatusEnum = "BACK_TEST_COMPLETE"
	AnomalyDetectorStatusEnumDeactivated        AnomalyDetectorStatusEnum = "DEACTIVATED"
	AnomalyDetectorStatusEnumDeactivating       AnomalyDetectorStatusEnum = "DEACTIVATING"
)

func (e AnomalyDetectorStatusEnum) ToPointer() *AnomalyDetectorStatusEnum {
	return &e
}

func (e *AnomalyDetectorStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "ACTIVATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "FAILED":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "LEARNING":
		fallthrough
	case "BACK_TEST_ACTIVATING":
		fallthrough
	case "BACK_TEST_ACTIVE":
		fallthrough
	case "BACK_TEST_COMPLETE":
		fallthrough
	case "DEACTIVATED":
		fallthrough
	case "DEACTIVATING":
		*e = AnomalyDetectorStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnomalyDetectorStatusEnum: %v", v)
	}
}
