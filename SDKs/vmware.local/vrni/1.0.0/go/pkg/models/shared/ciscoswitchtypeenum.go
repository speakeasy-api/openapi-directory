// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CiscoSwitchTypeEnum string

const (
	CiscoSwitchTypeEnumCatalyst3000 CiscoSwitchTypeEnum = "CATALYST_3000"
	CiscoSwitchTypeEnumCatalyst4500 CiscoSwitchTypeEnum = "CATALYST_4500"
	CiscoSwitchTypeEnumCatalyst6500 CiscoSwitchTypeEnum = "CATALYST_6500"
	CiscoSwitchTypeEnumNexus5K      CiscoSwitchTypeEnum = "NEXUS_5K"
	CiscoSwitchTypeEnumNexus7K      CiscoSwitchTypeEnum = "NEXUS_7K"
	CiscoSwitchTypeEnumNexus9K      CiscoSwitchTypeEnum = "NEXUS_9K"
)

func (e CiscoSwitchTypeEnum) ToPointer() *CiscoSwitchTypeEnum {
	return &e
}

func (e *CiscoSwitchTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CATALYST_3000":
		fallthrough
	case "CATALYST_4500":
		fallthrough
	case "CATALYST_6500":
		fallthrough
	case "NEXUS_5K":
		fallthrough
	case "NEXUS_7K":
		fallthrough
	case "NEXUS_9K":
		*e = CiscoSwitchTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CiscoSwitchTypeEnum: %v", v)
	}
}
