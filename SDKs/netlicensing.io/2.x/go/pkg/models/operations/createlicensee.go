// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateLicenseeSecurity struct {
	BasicAuth shared.SchemeBasicAuth `security:"scheme,type=http,subtype=basic"`
}

type CreateLicenseeRequestBody struct {
	// If set to 'false', the Licensee is disabled. Licensee can not obtain new Licenses, and validation is disabled
	Active bool `form:"name=active"`
	// Mark Licensee for transfer.
	MarkedForTransfer *bool   `form:"name=markedForTransfer"`
	Name              *string `form:"name=name"`
	// Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee
	Number *string `form:"name=number"`
	// 'productNumber' to assign new Licensee object
	ProductNumber string `form:"name=productNumber"`
}

type CreateLicenseeRequest struct {
	Request  *CreateLicenseeRequestBody `request:"mediaType=application/x-www-form-urlencoded"`
	Security CreateLicenseeSecurity
}

type CreateLicenseeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful request
	Netlicensing *shared.Netlicensing
}
