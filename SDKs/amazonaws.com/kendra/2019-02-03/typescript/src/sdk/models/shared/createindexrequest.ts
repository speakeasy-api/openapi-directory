/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IndexEditionEnum } from "./indexeditionenum";
import { ServerSideEncryptionConfiguration } from "./serversideencryptionconfiguration";
import { Tag } from "./tag";
import { UserContextPolicyEnum } from "./usercontextpolicyenum";
import { UserGroupResolutionConfiguration } from "./usergroupresolutionconfiguration";
import { UserTokenConfiguration } from "./usertokenconfiguration";
import { Expose, Type } from "class-transformer";

export class CreateIndexRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientToken" })
  clientToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Edition" })
  edition?: IndexEditionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerSideEncryptionConfiguration" })
  @Type(() => ServerSideEncryptionConfiguration)
  serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "UserContextPolicy" })
  userContextPolicy?: UserContextPolicyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UserGroupResolutionConfiguration" })
  @Type(() => UserGroupResolutionConfiguration)
  userGroupResolutionConfiguration?: UserGroupResolutionConfiguration;

  @SpeakeasyMetadata({ elemType: UserTokenConfiguration })
  @Expose({ name: "UserTokenConfigurations" })
  @Type(() => UserTokenConfiguration)
  userTokenConfigurations?: UserTokenConfiguration[];
}
