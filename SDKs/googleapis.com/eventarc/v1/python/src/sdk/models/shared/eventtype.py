"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filteringattribute as shared_filteringattribute
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventType:
    r"""A representation of the event type resource."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Output only. Human friendly description of what the event type is about. For example \\"Bucket created in Cloud Storage\\"."""  
    event_schema_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventSchemaUri'), 'exclude': lambda f: f is None }})
    r"""Output only. URI for the event schema. For example \\"https://github.com/googleapis/google-cloudevents/blob/master/proto/google/events/cloud/storage/v1/events.proto\\" """  
    filtering_attributes: Optional[list[shared_filteringattribute.FilteringAttribute]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filteringAttributes'), 'exclude': lambda f: f is None }})
    r"""Output only. Filtering attributes for the event type."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Output only. The full name of the event type (for example, \\"google.cloud.storage.object.v1.finalized\\"). In the form of {provider-specific-prefix}.{resource}.{version}.{verb}. Types MUST be versioned and event schemas are guaranteed to remain backward compatible within one version. Note that event type versions and API versions do not need to match."""  
    