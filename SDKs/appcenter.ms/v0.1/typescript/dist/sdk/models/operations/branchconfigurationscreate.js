"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BranchConfigurationsCreateResponse = exports.BranchConfigurationsCreate200ApplicationJSON = exports.BranchConfigurationsCreate200ApplicationJSONTriggerEnum = exports.BranchConfigurationsCreate200ApplicationJSONToolsets = exports.BranchConfigurationsCreate200ApplicationJSONToolsetsXcode = exports.BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles = exports.BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin = exports.BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript = exports.BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid = exports.BranchConfigurationsCreate200ApplicationJSONArtifactVersioning = exports.BranchConfigurationsCreate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum = exports.BranchConfigurationsCreateRequest = exports.BranchConfigurationsCreateRequestBody = exports.BranchConfigurationsCreateRequestBodyTriggerEnum = exports.BranchConfigurationsCreateRequestBodyToolsets = exports.BranchConfigurationsCreateRequestBodyToolsetsXcode = exports.BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles = exports.BranchConfigurationsCreateRequestBodyToolsetsXamarin = exports.BranchConfigurationsCreateRequestBodyToolsetsJavascript = exports.BranchConfigurationsCreateRequestBodyToolsetsAndroid = exports.BranchConfigurationsCreateRequestBodyArtifactVersioning = exports.BranchConfigurationsCreateRequestBodyArtifactVersioningBuildNumberFormatEnum = exports.BranchConfigurationsCreateSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var BranchConfigurationsCreateSecurity = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateSecurity, _super);
    function BranchConfigurationsCreateSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
        }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateSecurity.prototype, "apiToken", void 0);
    return BranchConfigurationsCreateSecurity;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateSecurity = BranchConfigurationsCreateSecurity;
var BranchConfigurationsCreateRequestBodyArtifactVersioningBuildNumberFormatEnum;
(function (BranchConfigurationsCreateRequestBodyArtifactVersioningBuildNumberFormatEnum) {
    BranchConfigurationsCreateRequestBodyArtifactVersioningBuildNumberFormatEnum["BuildId"] = "buildId";
    BranchConfigurationsCreateRequestBodyArtifactVersioningBuildNumberFormatEnum["Timestamp"] = "timestamp";
})(BranchConfigurationsCreateRequestBodyArtifactVersioningBuildNumberFormatEnum = exports.BranchConfigurationsCreateRequestBodyArtifactVersioningBuildNumberFormatEnum || (exports.BranchConfigurationsCreateRequestBodyArtifactVersioningBuildNumberFormatEnum = {}));
/**
 * The versioning configuration for artifacts built for this branch
 */
var BranchConfigurationsCreateRequestBodyArtifactVersioning = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateRequestBodyArtifactVersioning, _super);
    function BranchConfigurationsCreateRequestBodyArtifactVersioning() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildNumberFormat" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyArtifactVersioning.prototype, "buildNumberFormat", void 0);
    return BranchConfigurationsCreateRequestBodyArtifactVersioning;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateRequestBodyArtifactVersioning = BranchConfigurationsCreateRequestBodyArtifactVersioning;
/**
 * Build configuration for Android projects
 */
var BranchConfigurationsCreateRequestBodyToolsetsAndroid = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateRequestBodyToolsetsAndroid, _super);
    function BranchConfigurationsCreateRequestBodyToolsetsAndroid() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automaticSigning" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "automaticSigning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildVariant" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "buildVariant", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gradleWrapperPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "gradleWrapperPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isRoot" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "isRoot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keyAlias" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "keyAlias", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keyPassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "keyPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystoreEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "keystoreEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystoreFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "keystoreFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystorePassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "keystorePassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "module" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "module", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runLint" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "runLint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runTests" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBodyToolsetsAndroid.prototype, "runTests", void 0);
    return BranchConfigurationsCreateRequestBodyToolsetsAndroid;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateRequestBodyToolsetsAndroid = BranchConfigurationsCreateRequestBodyToolsetsAndroid;
/**
 * Build configuration when React Native, or other JavaScript tech, is part of the build steps
 */
var BranchConfigurationsCreateRequestBodyToolsetsJavascript = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateRequestBodyToolsetsJavascript, _super);
    function BranchConfigurationsCreateRequestBodyToolsetsJavascript() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "packageJsonPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsJavascript.prototype, "packageJsonPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reactNativeVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsJavascript.prototype, "reactNativeVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runTests" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBodyToolsetsJavascript.prototype, "runTests", void 0);
    return BranchConfigurationsCreateRequestBodyToolsetsJavascript;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateRequestBodyToolsetsJavascript = BranchConfigurationsCreateRequestBodyToolsetsJavascript;
/**
 * Build configuration for Xamarin projects
 */
var BranchConfigurationsCreateRequestBodyToolsetsXamarin = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateRequestBodyToolsetsXamarin, _super);
    function BranchConfigurationsCreateRequestBodyToolsetsXamarin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "args" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXamarin.prototype, "args", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "configuration" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXamarin.prototype, "configuration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isSimBuild" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBodyToolsetsXamarin.prototype, "isSimBuild", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monoVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXamarin.prototype, "monoVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p12File" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXamarin.prototype, "p12File", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p12Pwd" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXamarin.prototype, "p12Pwd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provProfile" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXamarin.prototype, "provProfile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sdkBundle" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXamarin.prototype, "sdkBundle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "slnPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXamarin.prototype, "slnPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "symlink" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXamarin.prototype, "symlink", void 0);
    return BranchConfigurationsCreateRequestBodyToolsetsXamarin;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateRequestBodyToolsetsXamarin = BranchConfigurationsCreateRequestBodyToolsetsXamarin;
/**
 * Provisioning profile fetch and store information
 */
var BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles, _super);
    function BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "fileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileName" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "fileName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetBundleIdentifier" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "targetBundleIdentifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "uploadId", void 0);
    return BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles = BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles;
/**
 * Build configuration when Xcode is part of the build steps
 */
var BranchConfigurationsCreateRequestBodyToolsetsXcode = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateRequestBodyToolsetsXcode, _super);
    function BranchConfigurationsCreateRequestBodyToolsetsXcode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles,
        }),
        (0, class_transformer_1.Expose)({ name: "appExtensionProvisioningProfileFiles" }),
        (0, class_transformer_1.Type)(function () {
            return BranchConfigurationsCreateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles;
        }),
        __metadata("design:type", Array)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "appExtensionProvisioningProfileFiles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "archiveConfiguration" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "archiveConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automaticSigning" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "automaticSigning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cartfilePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "cartfilePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "certificateEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateFileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "certificateFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "certificateFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificatePassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "certificatePassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateUploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "certificateUploadId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "forceLegacyBuildSystem" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "forceLegacyBuildSystem", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "podfilePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "podfilePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "projectOrWorkspacePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "projectOrWorkspacePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "provisioningProfileEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileFileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "provisioningProfileFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "provisioningProfileFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileUploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "provisioningProfileUploadId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "scheme" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "scheme", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetToArchive" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "targetToArchive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "teamId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "teamId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcodeProjectSha" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "xcodeProjectSha", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcodeVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBodyToolsetsXcode.prototype, "xcodeVersion", void 0);
    return BranchConfigurationsCreateRequestBodyToolsetsXcode;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateRequestBodyToolsetsXcode = BranchConfigurationsCreateRequestBodyToolsetsXcode;
/**
 * The branch build configuration for each toolset
 */
var BranchConfigurationsCreateRequestBodyToolsets = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateRequestBodyToolsets, _super);
    function BranchConfigurationsCreateRequestBodyToolsets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "android" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreateRequestBodyToolsetsAndroid; }),
        __metadata("design:type", BranchConfigurationsCreateRequestBodyToolsetsAndroid)
    ], BranchConfigurationsCreateRequestBodyToolsets.prototype, "android", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "javascript" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreateRequestBodyToolsetsJavascript; }),
        __metadata("design:type", BranchConfigurationsCreateRequestBodyToolsetsJavascript)
    ], BranchConfigurationsCreateRequestBodyToolsets.prototype, "javascript", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xamarin" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreateRequestBodyToolsetsXamarin; }),
        __metadata("design:type", BranchConfigurationsCreateRequestBodyToolsetsXamarin)
    ], BranchConfigurationsCreateRequestBodyToolsets.prototype, "xamarin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcode" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreateRequestBodyToolsetsXcode; }),
        __metadata("design:type", BranchConfigurationsCreateRequestBodyToolsetsXcode)
    ], BranchConfigurationsCreateRequestBodyToolsets.prototype, "xcode", void 0);
    return BranchConfigurationsCreateRequestBodyToolsets;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateRequestBodyToolsets = BranchConfigurationsCreateRequestBodyToolsets;
var BranchConfigurationsCreateRequestBodyTriggerEnum;
(function (BranchConfigurationsCreateRequestBodyTriggerEnum) {
    BranchConfigurationsCreateRequestBodyTriggerEnum["Continous"] = "continous";
    BranchConfigurationsCreateRequestBodyTriggerEnum["Continuous"] = "continuous";
    BranchConfigurationsCreateRequestBodyTriggerEnum["Manual"] = "manual";
})(BranchConfigurationsCreateRequestBodyTriggerEnum = exports.BranchConfigurationsCreateRequestBodyTriggerEnum || (exports.BranchConfigurationsCreateRequestBodyTriggerEnum = {}));
/**
 * The branch build configuration
 */
var BranchConfigurationsCreateRequestBody = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateRequestBody, _super);
    function BranchConfigurationsCreateRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "artifactVersioning" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreateRequestBodyArtifactVersioning; }),
        __metadata("design:type", BranchConfigurationsCreateRequestBodyArtifactVersioning)
    ], BranchConfigurationsCreateRequestBody.prototype, "artifactVersioning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "badgeIsEnabled" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBody.prototype, "badgeIsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloneFromBranch" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBody.prototype, "cloneFromBranch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "signed" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBody.prototype, "signed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "testsEnabled" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreateRequestBody.prototype, "testsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "toolsets" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreateRequestBodyToolsets; }),
        __metadata("design:type", BranchConfigurationsCreateRequestBodyToolsets)
    ], BranchConfigurationsCreateRequestBody.prototype, "toolsets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trigger" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequestBody.prototype, "trigger", void 0);
    return BranchConfigurationsCreateRequestBody;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateRequestBody = BranchConfigurationsCreateRequestBody;
var BranchConfigurationsCreateRequest = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateRequest, _super);
    function BranchConfigurationsCreateRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", BranchConfigurationsCreateRequestBody)
    ], BranchConfigurationsCreateRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=app_name",
        }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequest.prototype, "appName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=branch",
        }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequest.prototype, "branch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=owner_name",
        }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateRequest.prototype, "ownerName", void 0);
    return BranchConfigurationsCreateRequest;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateRequest = BranchConfigurationsCreateRequest;
var BranchConfigurationsCreate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum;
(function (BranchConfigurationsCreate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum) {
    BranchConfigurationsCreate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum["BuildId"] = "buildId";
    BranchConfigurationsCreate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum["Timestamp"] = "timestamp";
})(BranchConfigurationsCreate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum = exports.BranchConfigurationsCreate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum || (exports.BranchConfigurationsCreate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum = {}));
/**
 * The versioning configuration for artifacts built for this branch
 */
var BranchConfigurationsCreate200ApplicationJSONArtifactVersioning = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreate200ApplicationJSONArtifactVersioning, _super);
    function BranchConfigurationsCreate200ApplicationJSONArtifactVersioning() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildNumberFormat" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONArtifactVersioning.prototype, "buildNumberFormat", void 0);
    return BranchConfigurationsCreate200ApplicationJSONArtifactVersioning;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreate200ApplicationJSONArtifactVersioning = BranchConfigurationsCreate200ApplicationJSONArtifactVersioning;
/**
 * Build configuration for Android projects
 */
var BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid, _super);
    function BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automaticSigning" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "automaticSigning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildVariant" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "buildVariant", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gradleWrapperPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "gradleWrapperPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isRoot" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "isRoot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keyAlias" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "keyAlias", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keyPassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "keyPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystoreEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "keystoreEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystoreFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "keystoreFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystorePassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "keystorePassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "module" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "module", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runLint" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "runLint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runTests" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid.prototype, "runTests", void 0);
    return BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid = BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid;
/**
 * Build configuration when React Native, or other JavaScript tech, is part of the build steps
 */
var BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript, _super);
    function BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "packageJsonPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript.prototype, "packageJsonPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reactNativeVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript.prototype, "reactNativeVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runTests" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript.prototype, "runTests", void 0);
    return BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript = BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript;
/**
 * Build configuration for Xamarin projects
 */
var BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin, _super);
    function BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "args" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin.prototype, "args", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "configuration" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin.prototype, "configuration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isSimBuild" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin.prototype, "isSimBuild", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monoVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin.prototype, "monoVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p12File" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin.prototype, "p12File", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p12Pwd" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin.prototype, "p12Pwd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provProfile" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin.prototype, "provProfile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sdkBundle" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin.prototype, "sdkBundle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "slnPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin.prototype, "slnPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "symlink" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin.prototype, "symlink", void 0);
    return BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin = BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin;
/**
 * Provisioning profile fetch and store information
 */
var BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles, _super);
    function BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "fileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileName" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "fileName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetBundleIdentifier" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "targetBundleIdentifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "uploadId", void 0);
    return BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles = BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles;
/**
 * Build configuration when Xcode is part of the build steps
 */
var BranchConfigurationsCreate200ApplicationJSONToolsetsXcode = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreate200ApplicationJSONToolsetsXcode, _super);
    function BranchConfigurationsCreate200ApplicationJSONToolsetsXcode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles,
        }),
        (0, class_transformer_1.Expose)({ name: "appExtensionProvisioningProfileFiles" }),
        (0, class_transformer_1.Type)(function () {
            return BranchConfigurationsCreate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles;
        }),
        __metadata("design:type", Array)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "appExtensionProvisioningProfileFiles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "archiveConfiguration" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "archiveConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automaticSigning" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "automaticSigning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cartfilePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "cartfilePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "certificateEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateFileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "certificateFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "certificateFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificatePassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "certificatePassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateUploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "certificateUploadId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "forceLegacyBuildSystem" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "forceLegacyBuildSystem", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "podfilePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "podfilePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "projectOrWorkspacePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "projectOrWorkspacePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "provisioningProfileEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileFileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "provisioningProfileFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "provisioningProfileFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileUploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "provisioningProfileUploadId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "scheme" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "scheme", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetToArchive" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "targetToArchive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "teamId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "teamId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcodeProjectSha" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "xcodeProjectSha", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcodeVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSONToolsetsXcode.prototype, "xcodeVersion", void 0);
    return BranchConfigurationsCreate200ApplicationJSONToolsetsXcode;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreate200ApplicationJSONToolsetsXcode = BranchConfigurationsCreate200ApplicationJSONToolsetsXcode;
/**
 * The branch build configuration for each toolset
 */
var BranchConfigurationsCreate200ApplicationJSONToolsets = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreate200ApplicationJSONToolsets, _super);
    function BranchConfigurationsCreate200ApplicationJSONToolsets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "android" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid; }),
        __metadata("design:type", BranchConfigurationsCreate200ApplicationJSONToolsetsAndroid)
    ], BranchConfigurationsCreate200ApplicationJSONToolsets.prototype, "android", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "javascript" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript; }),
        __metadata("design:type", BranchConfigurationsCreate200ApplicationJSONToolsetsJavascript)
    ], BranchConfigurationsCreate200ApplicationJSONToolsets.prototype, "javascript", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xamarin" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin; }),
        __metadata("design:type", BranchConfigurationsCreate200ApplicationJSONToolsetsXamarin)
    ], BranchConfigurationsCreate200ApplicationJSONToolsets.prototype, "xamarin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcode" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreate200ApplicationJSONToolsetsXcode; }),
        __metadata("design:type", BranchConfigurationsCreate200ApplicationJSONToolsetsXcode)
    ], BranchConfigurationsCreate200ApplicationJSONToolsets.prototype, "xcode", void 0);
    return BranchConfigurationsCreate200ApplicationJSONToolsets;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreate200ApplicationJSONToolsets = BranchConfigurationsCreate200ApplicationJSONToolsets;
var BranchConfigurationsCreate200ApplicationJSONTriggerEnum;
(function (BranchConfigurationsCreate200ApplicationJSONTriggerEnum) {
    BranchConfigurationsCreate200ApplicationJSONTriggerEnum["Continous"] = "continous";
    BranchConfigurationsCreate200ApplicationJSONTriggerEnum["Continuous"] = "continuous";
    BranchConfigurationsCreate200ApplicationJSONTriggerEnum["Manual"] = "manual";
})(BranchConfigurationsCreate200ApplicationJSONTriggerEnum = exports.BranchConfigurationsCreate200ApplicationJSONTriggerEnum || (exports.BranchConfigurationsCreate200ApplicationJSONTriggerEnum = {}));
/**
 * The branch build configuration
 */
var BranchConfigurationsCreate200ApplicationJSON = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreate200ApplicationJSON, _super);
    function BranchConfigurationsCreate200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "artifactVersioning" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreate200ApplicationJSONArtifactVersioning; }),
        __metadata("design:type", BranchConfigurationsCreate200ApplicationJSONArtifactVersioning)
    ], BranchConfigurationsCreate200ApplicationJSON.prototype, "artifactVersioning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "badgeIsEnabled" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSON.prototype, "badgeIsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloneFromBranch" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSON.prototype, "cloneFromBranch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], BranchConfigurationsCreate200ApplicationJSON.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "signed" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSON.prototype, "signed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "testsEnabled" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsCreate200ApplicationJSON.prototype, "testsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "toolsets" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsCreate200ApplicationJSONToolsets; }),
        __metadata("design:type", BranchConfigurationsCreate200ApplicationJSONToolsets)
    ], BranchConfigurationsCreate200ApplicationJSON.prototype, "toolsets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trigger" }),
        __metadata("design:type", String)
    ], BranchConfigurationsCreate200ApplicationJSON.prototype, "trigger", void 0);
    return BranchConfigurationsCreate200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreate200ApplicationJSON = BranchConfigurationsCreate200ApplicationJSON;
var BranchConfigurationsCreateResponse = /** @class */ (function (_super) {
    __extends(BranchConfigurationsCreateResponse, _super);
    function BranchConfigurationsCreateResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], BranchConfigurationsCreateResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], BranchConfigurationsCreateResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], BranchConfigurationsCreateResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", BranchConfigurationsCreate200ApplicationJSON)
    ], BranchConfigurationsCreateResponse.prototype, "branchConfigurationsCreate200ApplicationJSONObject", void 0);
    return BranchConfigurationsCreateResponse;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsCreateResponse = BranchConfigurationsCreateResponse;
