// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListBuildsForProjectXAmzTargetEnum
type ListBuildsForProjectXAmzTargetEnum string

const (
	ListBuildsForProjectXAmzTargetEnumCodeBuild20161006ListBuildsForProject ListBuildsForProjectXAmzTargetEnum = "CodeBuild_20161006.ListBuildsForProject"
)

func (e *ListBuildsForProjectXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeBuild_20161006.ListBuildsForProject":
		*e = ListBuildsForProjectXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBuildsForProjectXAmzTargetEnum: %s", s)
	}
}

type ListBuildsForProjectRequest struct {
	ListBuildsForProjectInput shared.ListBuildsForProjectInput   `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                ListBuildsForProjectXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListBuildsForProjectResponse struct {
	ContentType string
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	ListBuildsForProjectOutput *shared.ListBuildsForProjectOutput
	StatusCode                 int
	RawResponse                *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
