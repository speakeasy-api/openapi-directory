/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CertificateStatusEnum } from "./certificatestatusenum";
import { CertificateTypeEnum } from "./certificatetypeenum";
import { ExtendedKeyUsageNameEnum } from "./extendedkeyusagenameenum";
import { KeyAlgorithmEnum } from "./keyalgorithmenum";
import { KeyUsageNameEnum } from "./keyusagenameenum";
import { RenewalEligibilityEnum } from "./renewaleligibilityenum";
import { Expose, Transform } from "class-transformer";

/**
 * This structure is returned in the response object of <a>ListCertificates</a> action.
 */
export class CertificateSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CertificateArn" })
  certificateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainName" })
  domainName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Exported" })
  exported?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExtendedKeyUsages" })
  extendedKeyUsages?: ExtendedKeyUsageNameEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "HasAdditionalSubjectAlternativeNames" })
  hasAdditionalSubjectAlternativeNames?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  importedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InUse" })
  inUse?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IssuedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  issuedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "KeyAlgorithm" })
  keyAlgorithm?: KeyAlgorithmEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "KeyUsages" })
  keyUsages?: KeyUsageNameEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "NotAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "NotBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RenewalEligibility" })
  renewalEligibility?: RenewalEligibilityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RevokedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  revokedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: CertificateStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SubjectAlternativeNameSummaries" })
  subjectAlternativeNameSummaries?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: CertificateTypeEnum;
}
