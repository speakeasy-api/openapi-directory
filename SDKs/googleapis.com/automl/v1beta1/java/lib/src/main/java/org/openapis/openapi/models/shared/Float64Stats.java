/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Float64Stats - The data statistics of a series of FLOAT64 values.
 */
public class Float64Stats {
    /**
     * Histogram buckets of the data series. Sorted by the min value of the bucket, ascendingly, and the number of the buckets is dynamically generated. The buckets are non-overlapping and completely cover whole FLOAT64 range with min of first bucket being `"-Infinity"`, and max of the last one being `"Infinity"`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("histogramBuckets")
    public HistogramBucket[] histogramBuckets;

    public Float64Stats withHistogramBuckets(HistogramBucket[] histogramBuckets) {
        this.histogramBuckets = histogramBuckets;
        return this;
    }
    
    /**
     * The mean of the series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mean")
    public Double mean;

    public Float64Stats withMean(Double mean) {
        this.mean = mean;
        return this;
    }
    
    /**
     * Ordered from 0 to k k-quantile values of the data series of n values. The value at index i is, approximately, the i*n/k-th smallest value in the series; for i = 0 and i = k these are, respectively, the min and max values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantiles")
    public Double[] quantiles;

    public Float64Stats withQuantiles(Double[] quantiles) {
        this.quantiles = quantiles;
        return this;
    }
    
    /**
     * The standard deviation of the series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("standardDeviation")
    public Double standardDeviation;

    public Float64Stats withStandardDeviation(Double standardDeviation) {
        this.standardDeviation = standardDeviation;
        return this;
    }
    
    public Float64Stats(){}
}
