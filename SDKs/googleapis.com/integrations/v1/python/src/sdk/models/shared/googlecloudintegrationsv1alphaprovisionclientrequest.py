"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudintegrationsv1alphacloudkmsconfig as shared_googlecloudintegrationsv1alphacloudkmsconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaProvisionClientRequest:
    r"""Request for the Provision rpc"""
    
    cloud_kms_config: Optional[shared_googlecloudintegrationsv1alphacloudkmsconfig.GoogleCloudIntegrationsV1alphaCloudKmsConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudKmsConfig'), 'exclude': lambda f: f is None }})
    r"""Configuration information for Client's Cloud KMS information"""  
    create_sample_workflows: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createSampleWorkflows'), 'exclude': lambda f: f is None }})
    r"""Optional. Indicates if sample workflow should be created along with provisioning"""  
    provision_gmek: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provisionGmek'), 'exclude': lambda f: f is None }})
    r"""Optional. Indicates provision with GMEK or CMEK"""  
    