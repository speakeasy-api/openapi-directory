import * as operations from "./models/operations";
import { AxiosInstance, AxiosRequestConfig } from "axios";
export declare class Servers {
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    _language: string;
    _sdkVersion: string;
    _genVersion: string;
    constructor(defaultClient: AxiosInstance, securityClient: AxiosInstance, serverURL: string, language: string, sdkVersion: string, genVersion: string);
    /**
     * Downloads a pre-generated file
     *
     * @remarks
     * A valid `fileId` is generated by the `/clients/{language}` or `/servers/{language}` POST operations.  The fileId code can be used just once, after which a new `fileId` will need to be requested.
     */
    downloadFile(req: operations.DownloadFileRequest, config?: AxiosRequestConfig): Promise<operations.DownloadFileResponse>;
    /**
     * Generates a server library
     *
     * @remarks
     * Accepts a `GeneratorInput` options map for spec location and generation options.
     */
    generateServerForLanguage(req: operations.GenerateServerForLanguageRequest, config?: AxiosRequestConfig): Promise<operations.GenerateServerForLanguageResponse>;
    /**
     * Returns options for a server framework
     */
    getServerOptions(req: operations.GetServerOptionsRequest, config?: AxiosRequestConfig): Promise<operations.GetServerOptionsResponse>;
    /**
     * Gets languages supported by the server generator
     */
    serverOptions(config?: AxiosRequestConfig): Promise<operations.ServerOptionsResponse>;
}
