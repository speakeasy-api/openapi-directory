"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportExport = exports.ImportExportSimpleAdmins = exports.ImportExportServiceGroups = exports.ImportExportServiceDescriptors = exports.ImportExportErrorTemplates = exports.ImportExportApiKeys = exports.ImportExportAdmins = void 0;
var utils_1 = require("../../../internal/utils");
var canary_1 = require("./canary");
var chaosconfig_1 = require("./chaosconfig");
var clientconfig_1 = require("./clientconfig");
var corssettings_1 = require("./corssettings");
var exposedapi_1 = require("./exposedapi");
var globalconfig_1 = require("./globalconfig");
var gzip_1 = require("./gzip");
var healthcheck_1 = require("./healthcheck");
var importexportstats_1 = require("./importexportstats");
var ipfiltering_1 = require("./ipfiltering");
var redirectionsettings_1 = require("./redirectionsettings");
var statsdconfig_1 = require("./statsdconfig");
var target_1 = require("./target");
var class_transformer_1 = require("class-transformer");
/**
 * Administrator using FIDO U2F device to access Otoroshi
 */
var ImportExportAdmins = /** @class */ (function (_super) {
    __extends(ImportExportAdmins, _super);
    function ImportExportAdmins() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdAt" }),
        __metadata("design:type", Number)
    ], ImportExportAdmins.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "label" }),
        __metadata("design:type", String)
    ], ImportExportAdmins.prototype, "label", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "password" }),
        __metadata("design:type", String)
    ], ImportExportAdmins.prototype, "password", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "registration" }),
        __metadata("design:type", Object)
    ], ImportExportAdmins.prototype, "registration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "username" }),
        __metadata("design:type", String)
    ], ImportExportAdmins.prototype, "username", void 0);
    return ImportExportAdmins;
}(utils_1.SpeakeasyBase));
exports.ImportExportAdmins = ImportExportAdmins;
/**
 * An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.
 */
var ImportExportApiKeys = /** @class */ (function (_super) {
    __extends(ImportExportApiKeys, _super);
    function ImportExportApiKeys() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authorizedEntities" }),
        __metadata("design:type", Array)
    ], ImportExportApiKeys.prototype, "authorizedEntities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientId" }),
        __metadata("design:type", String)
    ], ImportExportApiKeys.prototype, "clientId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientName" }),
        __metadata("design:type", String)
    ], ImportExportApiKeys.prototype, "clientName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientSecret" }),
        __metadata("design:type", String)
    ], ImportExportApiKeys.prototype, "clientSecret", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dailyQuota" }),
        __metadata("design:type", Number)
    ], ImportExportApiKeys.prototype, "dailyQuota", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], ImportExportApiKeys.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metadata" }),
        __metadata("design:type", Object)
    ], ImportExportApiKeys.prototype, "metadata", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monthlyQuota" }),
        __metadata("design:type", Number)
    ], ImportExportApiKeys.prototype, "monthlyQuota", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "throttlingQuota" }),
        __metadata("design:type", Number)
    ], ImportExportApiKeys.prototype, "throttlingQuota", void 0);
    return ImportExportApiKeys;
}(utils_1.SpeakeasyBase));
exports.ImportExportApiKeys = ImportExportApiKeys;
/**
 * Error templates for a service descriptor
 */
var ImportExportErrorTemplates = /** @class */ (function (_super) {
    __extends(ImportExportErrorTemplates, _super);
    function ImportExportErrorTemplates() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "messages" }),
        __metadata("design:type", Object)
    ], ImportExportErrorTemplates.prototype, "messages", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serviceId" }),
        __metadata("design:type", String)
    ], ImportExportErrorTemplates.prototype, "serviceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "template40x" }),
        __metadata("design:type", String)
    ], ImportExportErrorTemplates.prototype, "template40x", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "template50x" }),
        __metadata("design:type", String)
    ], ImportExportErrorTemplates.prototype, "template50x", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "templateBuild" }),
        __metadata("design:type", String)
    ], ImportExportErrorTemplates.prototype, "templateBuild", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "templateMaintenance" }),
        __metadata("design:type", String)
    ], ImportExportErrorTemplates.prototype, "templateMaintenance", void 0);
    return ImportExportErrorTemplates;
}(utils_1.SpeakeasyBase));
exports.ImportExportErrorTemplates = ImportExportErrorTemplates;
/**
 * An otoroshi service descriptor. Represent a forward HTTP call on a domain to another location with some optional api management mecanism
 */
var ImportExportServiceDescriptors = /** @class */ (function (_super) {
    __extends(ImportExportServiceDescriptors, _super);
    function ImportExportServiceDescriptors() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Canary" }),
        (0, class_transformer_1.Type)(function () { return canary_1.Canary; }),
        __metadata("design:type", canary_1.Canary)
    ], ImportExportServiceDescriptors.prototype, "canary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "additionalHeaders" }),
        __metadata("design:type", Object)
    ], ImportExportServiceDescriptors.prototype, "additionalHeaders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "api" }),
        (0, class_transformer_1.Type)(function () { return exposedapi_1.ExposedApi; }),
        __metadata("design:type", exposedapi_1.ExposedApi)
    ], ImportExportServiceDescriptors.prototype, "api", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authConfigRef" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "authConfigRef", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildMode" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "buildMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "chaosConfig" }),
        (0, class_transformer_1.Type)(function () { return chaosconfig_1.ChaosConfig; }),
        __metadata("design:type", chaosconfig_1.ChaosConfig)
    ], ImportExportServiceDescriptors.prototype, "chaosConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientConfig" }),
        (0, class_transformer_1.Type)(function () { return clientconfig_1.ClientConfig; }),
        __metadata("design:type", clientconfig_1.ClientConfig)
    ], ImportExportServiceDescriptors.prototype, "clientConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientValidatorRef" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "clientValidatorRef", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cors" }),
        (0, class_transformer_1.Type)(function () { return corssettings_1.CorsSettings; }),
        __metadata("design:type", corssettings_1.CorsSettings)
    ], ImportExportServiceDescriptors.prototype, "cors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "domain" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "domain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enforceSecureCommunication" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "enforceSecureCommunication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "env" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "env", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "forceHttps" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "forceHttps", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groups" }),
        __metadata("design:type", Array)
    ], ImportExportServiceDescriptors.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gzip" }),
        (0, class_transformer_1.Type)(function () { return gzip_1.Gzip; }),
        __metadata("design:type", gzip_1.Gzip)
    ], ImportExportServiceDescriptors.prototype, "gzip", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "headersVerification" }),
        __metadata("design:type", Object)
    ], ImportExportServiceDescriptors.prototype, "headersVerification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "healthCheck" }),
        (0, class_transformer_1.Type)(function () { return healthcheck_1.HealthCheck; }),
        __metadata("design:type", healthcheck_1.HealthCheck)
    ], ImportExportServiceDescriptors.prototype, "healthCheck", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipFiltering" }),
        (0, class_transformer_1.Type)(function () { return ipfiltering_1.IpFiltering; }),
        __metadata("design:type", ipfiltering_1.IpFiltering)
    ], ImportExportServiceDescriptors.prototype, "ipFiltering", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "jwtVerifier" }),
        __metadata("design:type", Object)
    ], ImportExportServiceDescriptors.prototype, "jwtVerifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "localHost" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "localHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "localScheme" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "localScheme", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintenanceMode" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "maintenanceMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "matchingHeaders" }),
        __metadata("design:type", Object)
    ], ImportExportServiceDescriptors.prototype, "matchingHeaders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "matchingRoot" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "matchingRoot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metadata" }),
        __metadata("design:type", Object)
    ], ImportExportServiceDescriptors.prototype, "metadata", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "overrideHost" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "overrideHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "privateApp" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "privateApp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "privatePatterns" }),
        __metadata("design:type", Array)
    ], ImportExportServiceDescriptors.prototype, "privatePatterns", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "publicPatterns" }),
        __metadata("design:type", Array)
    ], ImportExportServiceDescriptors.prototype, "publicPatterns", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "redirectToLocal" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "redirectToLocal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "redirection" }),
        (0, class_transformer_1.Type)(function () { return redirectionsettings_1.RedirectionSettings; }),
        __metadata("design:type", redirectionsettings_1.RedirectionSettings)
    ], ImportExportServiceDescriptors.prototype, "redirection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "root" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "root", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secComExcludedPatterns" }),
        __metadata("design:type", Array)
    ], ImportExportServiceDescriptors.prototype, "secComExcludedPatterns", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secComSettings" }),
        __metadata("design:type", Object)
    ], ImportExportServiceDescriptors.prototype, "secComSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sendOtoroshiHeadersBack" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "sendOtoroshiHeadersBack", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "statsdConfig" }),
        (0, class_transformer_1.Type)(function () { return statsdconfig_1.StatsdConfig; }),
        __metadata("design:type", statsdconfig_1.StatsdConfig)
    ], ImportExportServiceDescriptors.prototype, "statsdConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subdomain" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "subdomain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: target_1.Target }),
        (0, class_transformer_1.Expose)({ name: "targets" }),
        (0, class_transformer_1.Type)(function () { return target_1.Target; }),
        __metadata("design:type", Array)
    ], ImportExportServiceDescriptors.prototype, "targets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transformerRef" }),
        __metadata("design:type", String)
    ], ImportExportServiceDescriptors.prototype, "transformerRef", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userFacing" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "userFacing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xForwardedHeaders" }),
        __metadata("design:type", Boolean)
    ], ImportExportServiceDescriptors.prototype, "xForwardedHeaders", void 0);
    return ImportExportServiceDescriptors;
}(utils_1.SpeakeasyBase));
exports.ImportExportServiceDescriptors = ImportExportServiceDescriptors;
/**
 * An Otoroshi service group is just a group of service descriptor. It is useful to be able to define Api Keys for the whole group
 */
var ImportExportServiceGroups = /** @class */ (function (_super) {
    __extends(ImportExportServiceGroups, _super);
    function ImportExportServiceGroups() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], ImportExportServiceGroups.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ImportExportServiceGroups.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], ImportExportServiceGroups.prototype, "name", void 0);
    return ImportExportServiceGroups;
}(utils_1.SpeakeasyBase));
exports.ImportExportServiceGroups = ImportExportServiceGroups;
/**
 * Administrator using just login/password tuple to access Otoroshi
 */
var ImportExportSimpleAdmins = /** @class */ (function (_super) {
    __extends(ImportExportSimpleAdmins, _super);
    function ImportExportSimpleAdmins() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdAt" }),
        __metadata("design:type", Number)
    ], ImportExportSimpleAdmins.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "label" }),
        __metadata("design:type", String)
    ], ImportExportSimpleAdmins.prototype, "label", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "password" }),
        __metadata("design:type", String)
    ], ImportExportSimpleAdmins.prototype, "password", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "username" }),
        __metadata("design:type", String)
    ], ImportExportSimpleAdmins.prototype, "username", void 0);
    return ImportExportSimpleAdmins;
}(utils_1.SpeakeasyBase));
exports.ImportExportSimpleAdmins = ImportExportSimpleAdmins;
/**
 * The structure that can be imported to or exported from Otoroshi. It represent the memory state of Otoroshi
 */
var ImportExport = /** @class */ (function (_super) {
    __extends(ImportExport, _super);
    function ImportExport() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ImportExportAdmins }),
        (0, class_transformer_1.Expose)({ name: "admins" }),
        (0, class_transformer_1.Type)(function () { return ImportExportAdmins; }),
        __metadata("design:type", Array)
    ], ImportExport.prototype, "admins", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ImportExportApiKeys }),
        (0, class_transformer_1.Expose)({ name: "apiKeys" }),
        (0, class_transformer_1.Type)(function () { return ImportExportApiKeys; }),
        __metadata("design:type", Array)
    ], ImportExport.prototype, "apiKeys", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "appConfig" }),
        __metadata("design:type", Object)
    ], ImportExport.prototype, "appConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "config" }),
        (0, class_transformer_1.Type)(function () { return globalconfig_1.GlobalConfig; }),
        __metadata("design:type", globalconfig_1.GlobalConfig)
    ], ImportExport.prototype, "config", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "date" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ImportExport.prototype, "date", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dateRaw" }),
        __metadata("design:type", Number)
    ], ImportExport.prototype, "dateRaw", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ImportExportErrorTemplates }),
        (0, class_transformer_1.Expose)({ name: "errorTemplates" }),
        (0, class_transformer_1.Type)(function () { return ImportExportErrorTemplates; }),
        __metadata("design:type", Array)
    ], ImportExport.prototype, "errorTemplates", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "label" }),
        __metadata("design:type", String)
    ], ImportExport.prototype, "label", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ImportExportServiceDescriptors }),
        (0, class_transformer_1.Expose)({ name: "serviceDescriptors" }),
        (0, class_transformer_1.Type)(function () { return ImportExportServiceDescriptors; }),
        __metadata("design:type", Array)
    ], ImportExport.prototype, "serviceDescriptors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ImportExportServiceGroups }),
        (0, class_transformer_1.Expose)({ name: "serviceGroups" }),
        (0, class_transformer_1.Type)(function () { return ImportExportServiceGroups; }),
        __metadata("design:type", Array)
    ], ImportExport.prototype, "serviceGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ImportExportSimpleAdmins }),
        (0, class_transformer_1.Expose)({ name: "simpleAdmins" }),
        (0, class_transformer_1.Type)(function () { return ImportExportSimpleAdmins; }),
        __metadata("design:type", Array)
    ], ImportExport.prototype, "simpleAdmins", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stats" }),
        (0, class_transformer_1.Type)(function () { return importexportstats_1.ImportExportStats; }),
        __metadata("design:type", importexportstats_1.ImportExportStats)
    ], ImportExport.prototype, "stats", void 0);
    return ImportExport;
}(utils_1.SpeakeasyBase));
exports.ImportExport = ImportExport;
