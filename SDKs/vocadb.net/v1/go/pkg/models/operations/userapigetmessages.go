// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UserAPIGetMessagesPathParams struct {
	// User ID. Must be the currently logged in user (loading messages for another user is not allowed).
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// UserAPIGetMessagesInboxEnum - Type of inbox. Possible values are Nothing (load all, default), Received, Sent, Notifications.
type UserAPIGetMessagesInboxEnum string

const (
	UserAPIGetMessagesInboxEnumNothing       UserAPIGetMessagesInboxEnum = "Nothing"
	UserAPIGetMessagesInboxEnumReceived      UserAPIGetMessagesInboxEnum = "Received"
	UserAPIGetMessagesInboxEnumSent          UserAPIGetMessagesInboxEnum = "Sent"
	UserAPIGetMessagesInboxEnumNotifications UserAPIGetMessagesInboxEnum = "Notifications"
)

func (e *UserAPIGetMessagesInboxEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Received":
		fallthrough
	case "Sent":
		fallthrough
	case "Notifications":
		*e = UserAPIGetMessagesInboxEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetMessagesInboxEnum: %s", s)
	}
}

type UserAPIGetMessagesQueryParams struct {
	// Filter by id of the other user (either sender or receiver).
	AnotherUserID *int `queryParam:"style=form,explode=true,name=anotherUserId"`
	// Whether to get total number of results.
	GetTotalCount *bool `queryParam:"style=form,explode=true,name=getTotalCount"`
	// Type of inbox. Possible values are Nothing (load all, default), Received, Sent, Notifications.
	Inbox *UserAPIGetMessagesInboxEnum `queryParam:"style=form,explode=true,name=inbox"`
	// Maximum number of results to be loaded.
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Index of the first entry to be loaded.
	Start *int `queryParam:"style=form,explode=true,name=start"`
	// Whether to only load unread messages. Loading unread messages is only possible for received messages and notifications (not sent messages).
	Unread *bool `queryParam:"style=form,explode=true,name=unread"`
}

type UserAPIGetMessagesRequest struct {
	PathParams  UserAPIGetMessagesPathParams
	QueryParams UserAPIGetMessagesQueryParams
}

type UserAPIGetMessagesResponse struct {
	Body        []byte
	ContentType string
	// OK
	PartialFindResultUserMessageContract *shared.PartialFindResultUserMessageContract
	StatusCode                           int
	RawResponse                          *http.Response
}
