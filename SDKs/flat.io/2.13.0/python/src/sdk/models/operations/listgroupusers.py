"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import flaterrorresponse as shared_flaterrorresponse
from ..shared import userpublic as shared_userpublic
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class ListGroupUsersSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class ListGroupUsersSourceEnum(str, Enum):
    r"""Filter the users by their source"""
    GOOGLE_CLASSROOM = 'googleClassroom'
    MICROSOFT_GRAPH = 'microsoftGraph'
    CLEVER = 'clever'


@dataclasses.dataclass
class ListGroupUsersRequest:
    
    group: str = dataclasses.field(metadata={'path_param': { 'field_name': 'group', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of a Flat group"""  
    source: Optional[ListGroupUsersSourceEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'source', 'style': 'form', 'explode': True }})
    r"""Filter the users by their source"""  
    

@dataclasses.dataclass
class ListGroupUsersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    flat_error_response: Optional[shared_flaterrorresponse.FlatErrorResponse] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    user_publics: Optional[list[shared_userpublic.UserPublic]] = dataclasses.field(default=None)
    r"""The list of users member of the group"""  
    