<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TransactionResourceAttributesHoldInfoForeignAmount - Provides information about a value of money.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TransactionResourceAttributesHoldInfoForeignAmount
{
    /**
     * The ISO 4217 currency code.
     * 
     * 
     * 
     * @var string $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currencyCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currencyCode;
    
    /**
     * The amount of money, formatted as a string in the relevant currency.
     * 
     * For example, for an Australian dollar value of $10.56, this field will
     * be `"10.56"`. The currency symbol is not included in the string.
     * 
     * 
     * @var string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $value;
    
    /**
     * The amount of money in the smallest denomination for the currency, as a
     * 
     * 64-bit integer.  For example, for an Australian dollar value of $10.56,
     * this field will be `1056`.
     * 
     * 
     * @var int $valueInBaseUnits
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueInBaseUnits')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $valueInBaseUnits;
    
	public function __construct()
	{
		$this->currencyCode = "";
		$this->value = "";
		$this->valueInBaseUnits = 0;
	}
}
