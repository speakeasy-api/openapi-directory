// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeDataSharesForConsumerActionEnum
type POSTDescribeDataSharesForConsumerActionEnum string

const (
	POSTDescribeDataSharesForConsumerActionEnumDescribeDataSharesForConsumer POSTDescribeDataSharesForConsumerActionEnum = "DescribeDataSharesForConsumer"
)

func (e *POSTDescribeDataSharesForConsumerActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeDataSharesForConsumer":
		*e = POSTDescribeDataSharesForConsumerActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeDataSharesForConsumerActionEnum: %s", s)
	}
}

// POSTDescribeDataSharesForConsumerVersionEnum
type POSTDescribeDataSharesForConsumerVersionEnum string

const (
	POSTDescribeDataSharesForConsumerVersionEnumTwoThousandAndTwelve1201 POSTDescribeDataSharesForConsumerVersionEnum = "2012-12-01"
)

func (e *POSTDescribeDataSharesForConsumerVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = POSTDescribeDataSharesForConsumerVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeDataSharesForConsumerVersionEnum: %s", s)
	}
}

type POSTDescribeDataSharesForConsumerRequest struct {
	Action POSTDescribeDataSharesForConsumerActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxRecords        *string                                      `queryParam:"style=form,explode=true,name=MaxRecords"`
	RequestBody       []byte                                       `request:"mediaType=text/xml"`
	Version           POSTDescribeDataSharesForConsumerVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeDataSharesForConsumerResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
