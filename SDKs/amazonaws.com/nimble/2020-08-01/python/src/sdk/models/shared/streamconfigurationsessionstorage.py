"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import streamingsessionstoragemode_enum as shared_streamingsessionstoragemode_enum
from ..shared import streamingsessionstorageroot as shared_streamingsessionstorageroot
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StreamConfigurationSessionStorage:
    r"""The configuration for a streaming sessionâ€™s upload storage."""
    
    mode: list[shared_streamingsessionstoragemode_enum.StreamingSessionStorageModeEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mode') }})  
    root: Optional[shared_streamingsessionstorageroot.StreamingSessionStorageRoot] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('root'), 'exclude': lambda f: f is None }})  
    