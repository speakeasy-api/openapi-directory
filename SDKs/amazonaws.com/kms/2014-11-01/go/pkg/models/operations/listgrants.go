// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListGrantsXAmzTargetEnum
type ListGrantsXAmzTargetEnum string

const (
	ListGrantsXAmzTargetEnumTrentServiceListGrants ListGrantsXAmzTargetEnum = "TrentService.ListGrants"
)

func (e ListGrantsXAmzTargetEnum) ToPointer() *ListGrantsXAmzTargetEnum {
	return &e
}

func (e *ListGrantsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TrentService.ListGrants":
		*e = ListGrantsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListGrantsXAmzTargetEnum: %v", v)
	}
}

type ListGrantsRequest struct {
	// Pagination limit
	Limit             *string                  `queryParam:"style=form,explode=true,name=Limit"`
	ListGrantsRequest shared.ListGrantsRequest `request:"mediaType=application/json"`
	// Pagination token
	Marker            *string                  `queryParam:"style=form,explode=true,name=Marker"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListGrantsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListGrantsResponse struct {
	ContentType string
	// DependencyTimeoutException
	DependencyTimeoutException interface{}
	// InvalidArnException
	InvalidArnException interface{}
	// InvalidGrantIdException
	InvalidGrantIDException interface{}
	// InvalidMarkerException
	InvalidMarkerException interface{}
	// KMSInternalException
	KMSInternalException interface{}
	// KMSInvalidStateException
	KMSInvalidStateException interface{}
	// Success
	ListGrantsResponse *shared.ListGrantsResponse
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
}
