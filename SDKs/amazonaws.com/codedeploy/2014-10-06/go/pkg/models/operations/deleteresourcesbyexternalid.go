// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteResourcesByExternalIDXAmzTargetEnum
type DeleteResourcesByExternalIDXAmzTargetEnum string

const (
	DeleteResourcesByExternalIDXAmzTargetEnumCodeDeploy20141006DeleteResourcesByExternalID DeleteResourcesByExternalIDXAmzTargetEnum = "CodeDeploy_20141006.DeleteResourcesByExternalId"
)

func (e *DeleteResourcesByExternalIDXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeDeploy_20141006.DeleteResourcesByExternalId":
		*e = DeleteResourcesByExternalIDXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteResourcesByExternalIDXAmzTargetEnum: %s", s)
	}
}

type DeleteResourcesByExternalIDHeaders struct {
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteResourcesByExternalIDXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteResourcesByExternalIDRequest struct {
	Headers DeleteResourcesByExternalIDHeaders
	Request shared.DeleteResourcesByExternalIDInput `request:"mediaType=application/json"`
}

type DeleteResourcesByExternalIDResponse struct {
	ContentType string
	// Success
	DeleteResourcesByExternalIDOutput map[string]interface{}
	StatusCode                        int
	RawResponse                       *http.Response
}
