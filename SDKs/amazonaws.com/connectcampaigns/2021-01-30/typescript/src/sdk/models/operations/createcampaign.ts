/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The possible types of dialer config parameters
 */
export class CreateCampaignRequestBodyDialerConfig extends SpeakeasyBase {
  /**
   * Predictive Dialer config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "predictiveDialerConfig" })
  @Type(() => shared.PredictiveDialerConfig)
  predictiveDialerConfig?: shared.PredictiveDialerConfig;

  /**
   * Progressive Dialer config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "progressiveDialerConfig" })
  @Type(() => shared.ProgressiveDialerConfig)
  progressiveDialerConfig?: shared.ProgressiveDialerConfig;
}

/**
 * The configuration used for outbound calls.
 */
export class CreateCampaignRequestBodyOutboundCallConfig extends SpeakeasyBase {
  /**
   * Answering Machine Detection config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answerMachineDetectionConfig" })
  @Type(() => shared.AnswerMachineDetectionConfig)
  answerMachineDetectionConfig?: shared.AnswerMachineDetectionConfig;

  /**
   * The identifier of the contact flow for the outbound call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectContactFlowId" })
  connectContactFlowId?: string;

  /**
   * The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectQueueId" })
  connectQueueId?: string;

  /**
   * The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectSourcePhoneNumber" })
  connectSourcePhoneNumber?: string;
}

export class CreateCampaignRequestBody extends SpeakeasyBase {
  /**
   * Amazon Connect Instance Id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectInstanceId" })
  connectInstanceId: string;

  /**
   * The possible types of dialer config parameters
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dialerConfig" })
  @Type(() => CreateCampaignRequestBodyDialerConfig)
  dialerConfig: CreateCampaignRequestBodyDialerConfig;

  /**
   * The name of an Amazon Connect Campaign name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The configuration used for outbound calls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outboundCallConfig" })
  @Type(() => CreateCampaignRequestBodyOutboundCallConfig)
  outboundCallConfig: CreateCampaignRequestBodyOutboundCallConfig;

  /**
   * Tag map with key and value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}

export class CreateCampaignRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateCampaignRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateCampaignResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createCampaignResponse?: shared.CreateCampaignResponse;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ServiceQuotaExceededException
   */
  @SpeakeasyMetadata()
  serviceQuotaExceededException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
