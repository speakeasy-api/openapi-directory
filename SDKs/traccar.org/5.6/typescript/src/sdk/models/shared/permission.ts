/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * This is a permission map that contain two object indexes. It is used to link/unlink objects. Order is important. Example: { deviceId:8, geofenceId: 16 }
 */
export class Permission extends SpeakeasyBase {
  /**
   * Computed Attribute Id, can be second parameter only
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributeId" })
  attributeId?: number;

  /**
   * Calendar Id, can be second parameter only and only in combination with userId
   */
  @SpeakeasyMetadata()
  @Expose({ name: "calendarId" })
  calendarId?: number;

  /**
   * Device Id, can be first parameter or second only in combination with userId
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceId" })
  deviceId?: number;

  /**
   * Driver Id, can be second parameter only
   */
  @SpeakeasyMetadata()
  @Expose({ name: "driverId" })
  driverId?: number;

  /**
   * Geofence Id, can be second parameter only
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geofenceId" })
  geofenceId?: number;

  /**
   * Group Id, can be first parameter or second only in combination with userId
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupId" })
  groupId?: number;

  /**
   * User Id, can be second parameter only and only in combination with userId
   */
  @SpeakeasyMetadata()
  @Expose({ name: "managedUserId" })
  managedUserId?: number;

  /**
   * Notification Id, can be second parameter only
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notificationId" })
  notificationId?: number;

  /**
   * User Id, can be only first parameter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: number;
}
