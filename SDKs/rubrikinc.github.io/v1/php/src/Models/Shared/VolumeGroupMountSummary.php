<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VolumeGroupMountSummary - Returns detail information for a specified live mount.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VolumeGroupMountSummary
{
    /**
     * Indicates if the logged-in user has the authority to remove the specified mount.
     * 
     * @var ?bool $canUnmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('canUnmount')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canUnmount = null;
    
    /**
     * The unique ID of the mount.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Specifies whether the volume mount operation has successfully completed and is ready to use.
     * 
     * @var bool $isReady
     */
	#[\JMS\Serializer\Annotation\SerializedName('isReady')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isReady;
    
    /**
     * The ID of the job instance that initiated the request for the specified mount.
     * 
     * @var ?string $mountRequestId
     */
	#[\JMS\Serializer\Annotation\SerializedName('mountRequestId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mountRequestId = null;
    
    /**
     * The UTC timestamp at which the mount was created.
     * 
     * @var \DateTime $mountedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('mountedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $mountedDate;
    
    /**
     * Configuration details for each of the mounted Volumes in the Volume Group.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\VolumeMountInfo> $mountedVolumes
     */
	#[\JMS\Serializer\Annotation\SerializedName('mountedVolumes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VolumeMountInfo>')]
    public array $mountedVolumes;
    
    /**
     * The name of the Volume Group.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The link to the script that can perform bare-metal recovery for the mounted snapshot.
     * 
     * @var ?string $restoreScriptSmbPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('restoreScriptSmbPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $restoreScriptSmbPath = null;
    
    /**
     * The UTC timestamp at which the snapshot was originally taken.
     * 
     * @var \DateTime $snapshotDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapshotDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $snapshotDate;
    
    /**
     * Rubrik release version that supports volume group snappable.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VolumeGroupReleaseVersionEnum $snapshotSourceVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapshotSourceVersion')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VolumeGroupReleaseVersionEnum>')]
    public VolumeGroupReleaseVersionEnum $snapshotSourceVersion;
    
    /**
     * The ID of the Host on which the snapshot was originally taken.
     * 
     * @var string $sourceHostId
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceHostId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceHostId;
    
    /**
     * The name of the Host on which the snapshot was originally taken.
     * 
     * @var string $sourceHostName
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceHostName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceHostName;
    
    /**
     * The ID of the Volume Group from which this snapshot was created.
     * 
     * @var string $sourceVolumeGroupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceVolumeGroupId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceVolumeGroupId;
    
    /**
     * The ID of the host where the volumes are mounted.
     * 
     * @var ?string $targetHostId
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetHostId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetHostId = null;
    
    /**
     * The name of the host where the volumes are mounted.
     * 
     * @var ?string $targetHostName
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetHostName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetHostName = null;
    
    /**
     * The ID of the job instance that initiated the request to remove the specified mount.
     * 
     * @var ?string $unmountRequestId
     */
	#[\JMS\Serializer\Annotation\SerializedName('unmountRequestId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unmountRequestId = null;
    
	public function __construct()
	{
		$this->canUnmount = null;
		$this->id = "";
		$this->isReady = false;
		$this->mountRequestId = null;
		$this->mountedDate = new \DateTime();
		$this->mountedVolumes = [];
		$this->name = "";
		$this->restoreScriptSmbPath = null;
		$this->snapshotDate = new \DateTime();
		$this->snapshotSourceVersion = \OpenAPI\OpenAPI\Models\Shared\VolumeGroupReleaseVersionEnum::WITH_LAYOUT_INFO;
		$this->sourceHostId = "";
		$this->sourceHostName = "";
		$this->sourceVolumeGroupId = "";
		$this->targetHostId = null;
		$this->targetHostName = null;
		$this->unmountRequestId = null;
	}
}
