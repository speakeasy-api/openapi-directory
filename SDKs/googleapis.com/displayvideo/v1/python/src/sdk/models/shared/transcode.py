"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimensions as shared_dimensions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Transcode:
    r"""Represents information about the transcoded audio or video file."""
    
    audio_bit_rate_kbps: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audioBitRateKbps'), 'exclude': lambda f: f is None }})
    r"""The bit rate for the audio stream of the transcoded video, or the bit rate for the transcoded audio, in kilobits per second."""  
    audio_sample_rate_hz: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audioSampleRateHz'), 'exclude': lambda f: f is None }})
    r"""The sample rate for the audio stream of the transcoded video, or the sample rate for the transcoded audio, in hertz."""  
    bit_rate_kbps: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bitRateKbps'), 'exclude': lambda f: f is None }})
    r"""The transcoding bit rate of the transcoded video, in kilobits per second."""  
    dimensions: Optional[shared_dimensions.Dimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions'), 'exclude': lambda f: f is None }})
    r"""Dimensions."""  
    file_size_bytes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileSizeBytes'), 'exclude': lambda f: f is None }})
    r"""The size of the transcoded file, in bytes."""  
    frame_rate: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frameRate'), 'exclude': lambda f: f is None }})
    r"""The frame rate of the transcoded video, in frames per second."""  
    mime_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mimeType'), 'exclude': lambda f: f is None }})
    r"""The MIME type of the transcoded file."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the transcoded file."""  
    transcoded: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transcoded'), 'exclude': lambda f: f is None }})
    r"""Indicates if the transcoding was successful."""  
    