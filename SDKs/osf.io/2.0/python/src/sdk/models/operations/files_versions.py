"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from datetime import datetime
from typing import Any, Optional


@dataclasses.dataclass
class FilesVersionsRequest:
    
    file_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'file_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the file from which you want to retrieve versions."""  
    

@dataclasses.dataclass
class FilesVersionsFileVersionAttributes:
    r"""The properties of the file versions entity."""
    
    content_type: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""MIME content-type for the file (null if unavailable)."""  
    date_created: Optional[datetime] = dataclasses.field(default=None)
    r"""The date of the file version creation, as an iso8601 formatted timestamp."""  
    size: Optional[int] = dataclasses.field(default=None)
    r"""Size of the file in bytes."""  
    

@dataclasses.dataclass
class FilesVersionsFileVersionLinks:
    r"""Links to alternative representations of the file version entity."""
    
    html: Optional[str] = dataclasses.field(default=None)
    r"""A link to the html version page."""  
    self_: Optional[str] = dataclasses.field(default=None)
    r"""A link to the detail page for a file version."""  
    

@dataclasses.dataclass
class FilesVersionsFileVersion:
    
    attributes: Optional[FilesVersionsFileVersionAttributes] = dataclasses.field(default=None)
    r"""The properties of the file versions entity."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""The identifier of the file version."""  
    links: Optional[FilesVersionsFileVersionLinks] = dataclasses.field(default=None)
    r"""Links to alternative representations of the file version entity."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""The type identifier of the file versions entity (`file_versions`)."""  
    

@dataclasses.dataclass
class FilesVersionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    