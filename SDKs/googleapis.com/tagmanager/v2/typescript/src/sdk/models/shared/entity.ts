/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Client } from "./client";
import { Folder } from "./folder";
import { Tag } from "./tag";
import { Trigger } from "./trigger";
import { Variable } from "./variable";
import { Expose, Type } from "class-transformer";

/**
 * Represents how the entity has been changed in the workspace.
 */
export enum EntityChangeStatusEnum {
  ChangeStatusUnspecified = "changeStatusUnspecified",
  None = "none",
  Added = "added",
  Deleted = "deleted",
  Updated = "updated",
}

/**
 * A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.
 */
export class Entity extends SpeakeasyBase {
  /**
   * Represents how the entity has been changed in the workspace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "changeStatus" })
  changeStatus?: EntityChangeStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "client" })
  @Type(() => Client)
  client?: Client;

  /**
   * Represents a Google Tag Manager Folder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "folder" })
  @Type(() => Folder)
  folder?: Folder;

  /**
   * Represents a Google Tag Manager Tag.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  @Type(() => Tag)
  tag?: Tag;

  /**
   * Represents a Google Tag Manager Trigger
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trigger" })
  @Type(() => Trigger)
  trigger?: Trigger;

  /**
   * Represents a Google Tag Manager Variable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variable" })
  @Type(() => Variable)
  variable?: Variable;
}
