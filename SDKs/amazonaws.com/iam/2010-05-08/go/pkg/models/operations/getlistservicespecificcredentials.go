// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListServiceSpecificCredentialsActionEnum
type GETListServiceSpecificCredentialsActionEnum string

const (
	GETListServiceSpecificCredentialsActionEnumListServiceSpecificCredentials GETListServiceSpecificCredentialsActionEnum = "ListServiceSpecificCredentials"
)

func (e *GETListServiceSpecificCredentialsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListServiceSpecificCredentials":
		*e = GETListServiceSpecificCredentialsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListServiceSpecificCredentialsActionEnum: %s", s)
	}
}

// GETListServiceSpecificCredentialsVersionEnum
type GETListServiceSpecificCredentialsVersionEnum string

const (
	GETListServiceSpecificCredentialsVersionEnumTwoThousandAndTen0508 GETListServiceSpecificCredentialsVersionEnum = "2010-05-08"
)

func (e *GETListServiceSpecificCredentialsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETListServiceSpecificCredentialsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListServiceSpecificCredentialsVersionEnum: %s", s)
	}
}

type GETListServiceSpecificCredentialsRequest struct {
	Action GETListServiceSpecificCredentialsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Filters the returned results to only those for the specified Amazon Web Services service. If not specified, then Amazon Web Services returns service-specific credentials for all services.
	ServiceName *string `queryParam:"style=form,explode=true,name=ServiceName"`
	// <p>The name of the user whose service-specific credentials you want information about. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
	UserName          *string                                      `queryParam:"style=form,explode=true,name=UserName"`
	Version           GETListServiceSpecificCredentialsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListServiceSpecificCredentialsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
