<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetPlaylistByIdRequest
{
    /**
     * Get API Key on listennotes.com/api
     * 
     * @var string $xListenAPIKey
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-ListenAPI-Key')]
    public string $xListenAPIKey;
    
    /**
     * Playlist id (always 11 characters, e.g., m1pe7z60bsw).
     * 
     * You can get the podcast id from the url of a playlist, e.g.,
     * m1pe7z60bsw is the playlist id of listennotes.com/listen/podcasts-about-podcasting-m1pe7z60bsw
     * 
     * 
     * @var string $id
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=id')]
    public string $id;
    
    /**
     * For playlist items pagination.
     * 
     * It's the value of **last_timestamp_ms** from the response of last request.
     * If it's 0 or not specified, just return the latest or the oldest 20 items,
     * depending on the value of the **sort** parameter.
     * 
     * 
     * @var ?int $lastTimestampMs
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=last_timestamp_ms')]
    public ?int $lastTimestampMs = null;
    
    /**
     * How do you want to sort playlist items?
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetPlaylistByIdSortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?GetPlaylistByIdSortEnum $sort = null;
    
    /**
     * The type of this playlist, which should be either **episode_list** or **podcast_list**.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetPlaylistByIdTypeEnum $type
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=type')]
    public ?GetPlaylistByIdTypeEnum $type = null;
    
	public function __construct()
	{
		$this->xListenAPIKey = "";
		$this->id = "";
		$this->lastTimestampMs = null;
		$this->sort = null;
		$this->type = null;
	}
}
