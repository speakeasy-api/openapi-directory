<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class UALookupResponse
{
    /**
     * If the client is a web browser which underlying browser engine does it use
     * 
     * @var string $browserEngine
     */
	#[\JMS\Serializer\Annotation\SerializedName('browser-engine')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $browserEngine;
    
    /**
     * If the client is a web browser which year was this browser version released
     * 
     * @var string $browserRelease
     */
	#[\JMS\Serializer\Annotation\SerializedName('browser-release')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $browserRelease;
    
    /**
     * The device brand / manufacturer
     * 
     * @var string $deviceBrand
     */
	#[\JMS\Serializer\Annotation\SerializedName('device-brand')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deviceBrand;
    
    /**
     * The device display height in CSS 'px'
     * 
     * @var float $deviceHeightPx
     */
	#[\JMS\Serializer\Annotation\SerializedName('device-height-px')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $deviceHeightPx;
    
    /**
     * The device model
     * 
     * @var string $deviceModel
     */
	#[\JMS\Serializer\Annotation\SerializedName('device-model')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deviceModel;
    
    /**
     * The device model code
     * 
     * @var string $deviceModelCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('device-model-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deviceModelCode;
    
    /**
     * The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)
     * 
     * @var float $devicePixelRatio
     */
	#[\JMS\Serializer\Annotation\SerializedName('device-pixel-ratio')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $devicePixelRatio;
    
    /**
     * The device display PPI (pixels per inch)
     * 
     * @var float $devicePpi
     */
	#[\JMS\Serializer\Annotation\SerializedName('device-ppi')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $devicePpi;
    
    /**
     * The average device price on release in USD
     * 
     * @var float $devicePrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('device-price')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $devicePrice;
    
    /**
     * The year when this device model was released
     * 
     * @var string $deviceRelease
     */
	#[\JMS\Serializer\Annotation\SerializedName('device-release')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deviceRelease;
    
    /**
     * The device display resolution in physical pixels (e.g. 720x1280)
     * 
     * @var string $deviceResolution
     */
	#[\JMS\Serializer\Annotation\SerializedName('device-resolution')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deviceResolution;
    
    /**
     * The device display width in CSS 'px'
     * 
     * @var float $deviceWidthPx
     */
	#[\JMS\Serializer\Annotation\SerializedName('device-width-px')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $deviceWidthPx;
    
    /**
     * Is this a mobile device (e.g. a phone or tablet)
     * 
     * @var bool $isMobile
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-mobile')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isMobile;
    
    /**
     * Is this a WebView / embedded software client
     * 
     * @var bool $isWebview
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-webview')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isWebview;
    
    /**
     * The client software name
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The full operating system name
     * 
     * @var string $os
     */
	#[\JMS\Serializer\Annotation\SerializedName('os')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $os;
    
    /**
     * The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux
     * 
     * @var string $osFamily
     */
	#[\JMS\Serializer\Annotation\SerializedName('os-family')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $osFamily;
    
    /**
     * The operating system full version
     * 
     * @var string $osVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('os-version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $osVersion;
    
    /**
     * The operating system major version
     * 
     * @var string $osVersionMajor
     */
	#[\JMS\Serializer\Annotation\SerializedName('os-version-major')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $osVersionMajor;
    
    /**
     * The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
    /**
     * The user agent string
     * 
     * @var string $ua
     */
	#[\JMS\Serializer\Annotation\SerializedName('ua')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ua;
    
    /**
     * The client software full version
     * 
     * @var string $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $version;
    
    /**
     * The client software major version
     * 
     * @var string $versionMajor
     */
	#[\JMS\Serializer\Annotation\SerializedName('version-major')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $versionMajor;
    
	public function __construct()
	{
		$this->browserEngine = "";
		$this->browserRelease = "";
		$this->deviceBrand = "";
		$this->deviceHeightPx = 0;
		$this->deviceModel = "";
		$this->deviceModelCode = "";
		$this->devicePixelRatio = 0;
		$this->devicePpi = 0;
		$this->devicePrice = 0;
		$this->deviceRelease = "";
		$this->deviceResolution = "";
		$this->deviceWidthPx = 0;
		$this->isMobile = false;
		$this->isWebview = false;
		$this->name = "";
		$this->os = "";
		$this->osFamily = "";
		$this->osVersion = "";
		$this->osVersionMajor = "";
		$this->type = "";
		$this->ua = "";
		$this->version = "";
		$this->versionMajor = "";
	}
}
