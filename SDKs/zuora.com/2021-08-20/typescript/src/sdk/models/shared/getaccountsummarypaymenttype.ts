/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GETAccountSummaryPaymentInvoiceType } from "./getaccountsummarypaymentinvoicetype";
import { Expose, Transform, Type } from "class-transformer";

export class GETAccountSummaryPaymentType extends SpeakeasyBase {
  /**
   * Effective date as `yyyy-mm-dd`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "effectiveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  effectiveDate?: Date;

  /**
   * Payment ID.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Container for paid invoices for this subscription.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETAccountSummaryPaymentInvoiceType })
  @Expose({ name: "paidInvoices" })
  @Type(() => GETAccountSummaryPaymentInvoiceType)
  paidInvoices?: GETAccountSummaryPaymentInvoiceType[];

  /**
   * Payment number.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentNumber" })
  paymentNumber?: string;

  /**
   * Payment type; possible values are: `External`, `Electronic`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentType" })
  paymentType?: string;

  /**
   * Payment status. Possible values are: `Draft`, `Processing`, `Processed`, `Error`, `Voided`, `Canceled`, `Posted`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}
