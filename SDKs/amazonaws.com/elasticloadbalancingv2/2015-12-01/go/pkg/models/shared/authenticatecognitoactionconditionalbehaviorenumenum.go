// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AuthenticateCognitoActionConditionalBehaviorEnumEnum string

const (
	AuthenticateCognitoActionConditionalBehaviorEnumEnumDeny         AuthenticateCognitoActionConditionalBehaviorEnumEnum = "deny"
	AuthenticateCognitoActionConditionalBehaviorEnumEnumAllow        AuthenticateCognitoActionConditionalBehaviorEnumEnum = "allow"
	AuthenticateCognitoActionConditionalBehaviorEnumEnumAuthenticate AuthenticateCognitoActionConditionalBehaviorEnumEnum = "authenticate"
)

func (e AuthenticateCognitoActionConditionalBehaviorEnumEnum) ToPointer() *AuthenticateCognitoActionConditionalBehaviorEnumEnum {
	return &e
}

func (e *AuthenticateCognitoActionConditionalBehaviorEnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deny":
		fallthrough
	case "allow":
		fallthrough
	case "authenticate":
		*e = AuthenticateCognitoActionConditionalBehaviorEnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthenticateCognitoActionConditionalBehaviorEnumEnum: %v", v)
	}
}
