"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import automatictransitioninfolinks as shared_automatictransitioninfolinks
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutomaticTransitionInfo:
    
    account_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId') }})
    r"""The marketplace account identifier in BeezUP. This account identifier is based on your api settings."""  
    beez_up_order_status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beezUPOrderStatus') }})
    r"""BeezUP order status. Unified for all marketplaces."""  
    business_operation_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessOperationType') }})  
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})  
    marketplace_business_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketplaceBusinessCode') }})
    r"""In an marketplace technical code like CDiscount you can have several marketplaces like GO SPORT, etc. We identify them by a business code."""  
    marketplace_technical_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketplaceTechnicalCode') }})
    r"""The technical code of the marketplace."""  
    order_status_transition_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderStatusTransitionId') }})  
    links: Optional[shared_automatictransitioninfolinks.AutomaticTransitionInfoLinks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links'), 'exclude': lambda f: f is None }})  
    