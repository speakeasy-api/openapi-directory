/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The [reaction type](https://docs.github.com/enterprise-server@2.22/rest/reference/reactions#reaction-types) to add to the pull request review comment.
 */
export enum ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum {
  Plus1 = "+1",
  Minus1 = "-1",
  Laugh = "laugh",
  Confused = "confused",
  Heart = "heart",
  Hooray = "hooray",
  Rocket = "rocket",
  Eyes = "eyes",
}

export class ReactionsCreateForPullRequestReviewCommentRequestBody extends SpeakeasyBase {
  /**
   * The [reaction type](https://docs.github.com/enterprise-server@2.22/rest/reference/reactions#reaction-types) to add to the pull request review comment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content: ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum;
}

export class ReactionsCreateForPullRequestReviewCommentRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ReactionsCreateForPullRequestReviewCommentRequestBody;

  /**
   * comment_id parameter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=comment_id",
  })
  commentId: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class ReactionsCreateForPullRequestReviewCommentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Reaction exists
   */
  @SpeakeasyMetadata()
  reaction?: shared.Reaction;

  /**
   * Validation failed
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
