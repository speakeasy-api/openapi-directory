/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NASetpoint } from "./nasetpoint";
import { NAThermMeasure } from "./nathermmeasure";
import { NAThermProgram } from "./nathermprogram";
import { Expose, Type } from "class-transformer";

export class NAThermStateBody extends SpeakeasyBase {
  /**
   * It contains the current battery level in percentage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "battery_percent" })
  batteryPercent?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "battery_vp" })
  batteryVp?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_plug_seen" })
  lastPlugSeen?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_therm_seen" })
  lastThermSeen?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "measured" })
  @Type(() => NAThermMeasure)
  measured?: NAThermMeasure;

  @SpeakeasyMetadata()
  @Expose({ name: "plug_connected_boiler" })
  plugConnectedBoiler?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "rf_status" })
  rfStatus?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "setpoint" })
  @Type(() => NASetpoint)
  setpoint?: NASetpoint;

  @SpeakeasyMetadata()
  @Expose({ name: "setpoint_order" })
  @Type(() => NASetpoint)
  setpointOrder?: NASetpoint;

  @SpeakeasyMetadata()
  @Expose({ name: "therm_orientation" })
  thermOrientation?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "therm_program" })
  @Type(() => NAThermProgram)
  thermProgram?: NAThermProgram;

  @SpeakeasyMetadata({ elemType: NAThermProgram })
  @Expose({ name: "therm_program_backup" })
  @Type(() => NAThermProgram)
  thermProgramBackup?: NAThermProgram[];

  @SpeakeasyMetadata()
  @Expose({ name: "therm_program_order" })
  @Type(() => NAThermProgram)
  thermProgramOrder?: NAThermProgram;

  @SpeakeasyMetadata()
  @Expose({ name: "therm_relay_cmd" })
  thermRelayCmd?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "udp_conn" })
  udpConn?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "wifi_status" })
  wifiStatus?: number;
}
