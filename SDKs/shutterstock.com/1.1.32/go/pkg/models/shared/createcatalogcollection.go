// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateCatalogCollectionVisibilityEnum string

const (
	CreateCatalogCollectionVisibilityEnumPrivate CreateCatalogCollectionVisibilityEnum = "private"
	CreateCatalogCollectionVisibilityEnumPublic  CreateCatalogCollectionVisibilityEnum = "public"
)

func (e *CreateCatalogCollectionVisibilityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private":
		fallthrough
	case "public":
		*e = CreateCatalogCollectionVisibilityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCatalogCollectionVisibilityEnum: %s", s)
	}
}

// CreateCatalogCollection - Create a catalog collection and, optionally, add items.
type CreateCatalogCollection struct {
	Items      []CreateCatalogCollectionItem          `json:"items,omitempty"`
	Name       string                                 `json:"name"`
	Visibility *CreateCatalogCollectionVisibilityEnum `json:"visibility,omitempty"`
}
