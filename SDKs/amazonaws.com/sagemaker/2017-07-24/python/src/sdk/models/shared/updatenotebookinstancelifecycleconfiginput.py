"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import notebookinstancelifecyclehook as shared_notebookinstancelifecyclehook
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNotebookInstanceLifecycleConfigInput:
    
    notebook_instance_lifecycle_config_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NotebookInstanceLifecycleConfigName') }})  
    on_create: Optional[list[shared_notebookinstancelifecyclehook.NotebookInstanceLifecycleHook]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OnCreate'), 'exclude': lambda f: f is None }})  
    on_start: Optional[list[shared_notebookinstancelifecyclehook.NotebookInstanceLifecycleHook]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OnStart'), 'exclude': lambda f: f is None }})  
    