/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The state of the authorization rule.
 */
export enum DescribeClientVpnAuthorizationRulesResultAuthorizationRulesStatusCodeEnum {
  Authorizing = "authorizing",
  Active = "active",
  Failed = "failed",
  Revoking = "revoking",
}

/**
 * The current state of the authorization rule.
 */
export class DescribeClientVpnAuthorizationRulesResultAuthorizationRulesStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: DescribeClientVpnAuthorizationRulesResultAuthorizationRulesStatusCodeEnum;

  @SpeakeasyMetadata()
  message?: string;
}

/**
 * Information about an authorization rule.
 */
export class DescribeClientVpnAuthorizationRulesResultAuthorizationRules extends SpeakeasyBase {
  @SpeakeasyMetadata()
  accessAll?: boolean;

  @SpeakeasyMetadata()
  clientVpnEndpointId?: string;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  status?: DescribeClientVpnAuthorizationRulesResultAuthorizationRulesStatus;
}

/**
 * Success
 */
export class DescribeClientVpnAuthorizationRulesResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DescribeClientVpnAuthorizationRulesResultAuthorizationRules,
  })
  authorizationRules?: DescribeClientVpnAuthorizationRulesResultAuthorizationRules[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
