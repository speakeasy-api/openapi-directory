"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import ach_prenotification as shared_ach_prenotification
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class RetrieveAnAchPrenotificationRequest:
    
    ach_prenotification_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ach_prenotification_id', 'style': 'simple', 'explode': False }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_TWENTY_NINE = '429'

class RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnum(str, Enum):
    RATE_LIMITED_ERROR = 'rate_limited_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON13:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    retry_after: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retry_after'), 'exclude': lambda f: f is None }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnum(str, Enum):
    PRIVATE_FEATURE_ERROR = 'private_feature_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON12:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_FOUR = '404'

class RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnum(str, Enum):
    OBJECT_NOT_FOUND_ERROR = 'object_not_found_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON11:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnum(str, Enum):
    FOUR_HUNDRED = '400'

class RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnum(str, Enum):
    MALFORMED_REQUEST_ERROR = 'malformed_request_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON10:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnum(str, Enum):
    FOUR_HUNDRED = '400'

class RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnum(str, Enum):
    INVALID_PARAMETERS_ERROR = 'invalid_parameters_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON9:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    errors: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""All errors related to parsing the request parameters."""  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_NINE = '409'

class RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnum(str, Enum):
    INVALID_OPERATION_ERROR = 'invalid_operation_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON8:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_ONE = '401'

class RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnum(str, Enum):
    INVALID_API_KEY_ERROR = 'invalid_api_key_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON7:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnum(str, Enum):
    FIVE_HUNDRED = '500'

class RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnum(str, Enum):
    INTERNAL_SERVER_ERROR = 'internal_server_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON6:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnum(str, Enum):
    INSUFFICIENT_PERMISSIONS_ERROR = 'insufficient_permissions_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON5:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_TWENTY_TWO = '422'

class RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnum(str, Enum):
    IDEMPOTENCY_UNPROCESSABLE_ERROR = 'idempotency_unprocessable_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON4:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_NINE = '409'

class RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnum(str, Enum):
    IDEMPOTENCY_CONFLICT_ERROR = 'idempotency_conflict_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON3:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnum(str, Enum):
    ENVIRONMENT_MISMATCH_ERROR = 'environment_mismatch_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON2:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_FOUR = '404'

class RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnum(str, Enum):
    API_METHOD_NOT_FOUND_ERROR = 'api_method_not_found_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAnAchPrenotificationDefaultApplicationJSON1:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    

@dataclasses.dataclass
class RetrieveAnAchPrenotificationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    ach_prenotification: Optional[shared_ach_prenotification.AchPrenotification] = dataclasses.field(default=None)
    r"""ACH Prenotification"""  
    error: Optional[Any] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    