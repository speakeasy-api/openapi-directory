/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETFailoverDBClusterQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETFailoverDBClusterActionEnum action;
    public GETFailoverDBClusterQueryParams withAction(GETFailoverDBClusterActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * &lt;p&gt;A DB cluster identifier to force a failover for. This parameter isn't case-sensitive.&lt;/p&gt; &lt;p&gt;Constraints:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Must match the identifier of an existing DBCluster.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DBClusterIdentifier")
    public String dbClusterIdentifier;
    public GETFailoverDBClusterQueryParams withDBClusterIdentifier(String dbClusterIdentifier) {
        this.dbClusterIdentifier = dbClusterIdentifier;
        return this;
    }
    
    /**
     * &lt;p&gt;The name of the DB instance to promote to the primary DB instance.&lt;/p&gt; &lt;p&gt;Specify the DB instance identifier for an Aurora Replica or a Multi-AZ readable standby in the DB cluster, for example &lt;code&gt;mydbcluster-replica1&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;This setting isn't supported for RDS for MySQL Multi-AZ DB clusters.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TargetDBInstanceIdentifier")
    public String targetDBInstanceIdentifier;
    public GETFailoverDBClusterQueryParams withTargetDBInstanceIdentifier(String targetDBInstanceIdentifier) {
        this.targetDBInstanceIdentifier = targetDBInstanceIdentifier;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETFailoverDBClusterVersionEnum version;
    public GETFailoverDBClusterQueryParams withVersion(GETFailoverDBClusterVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
