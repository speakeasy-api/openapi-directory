/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrderLegacyPromotion } from "./orderlegacypromotion";
import { Price } from "./price";
import { TestOrderCustomer } from "./testordercustomer";
import { TestOrderLineItem } from "./testorderlineitem";
import { TestOrderPaymentMethod } from "./testorderpaymentmethod";
import { Expose, Type } from "class-transformer";

export class TestOrder extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "customer" })
  @Type(() => TestOrderCustomer)
  customer?: TestOrderCustomer;

  /**
   * Whether the orderinvoices service should support this order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableOrderinvoices" })
  enableOrderinvoices?: boolean;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "`content#testOrder`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Required. Line items that are ordered. At least one line item must be provided.
   */
  @SpeakeasyMetadata({ elemType: TestOrderLineItem })
  @Expose({ name: "lineItems" })
  @Type(() => TestOrderLineItem)
  lineItems?: TestOrderLineItem[];

  /**
   * Restricted. Do not use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notificationMode" })
  notificationMode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "paymentMethod" })
  @Type(() => TestOrderPaymentMethod)
  paymentMethod?: TestOrderPaymentMethod;

  /**
   * Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "predefinedDeliveryAddress" })
  predefinedDeliveryAddress?: string;

  /**
   * Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "predefinedPickupDetails" })
  predefinedPickupDetails?: string;

  /**
   * Deprecated. Ignored if provided.
   */
  @SpeakeasyMetadata({ elemType: OrderLegacyPromotion })
  @Expose({ name: "promotions" })
  @Type(() => OrderLegacyPromotion)
  promotions?: OrderLegacyPromotion[];

  @SpeakeasyMetadata()
  @Expose({ name: "shippingCost" })
  @Type(() => Price)
  shippingCost?: Price;

  @SpeakeasyMetadata()
  @Expose({ name: "shippingCostTax" })
  @Type(() => Price)
  shippingCostTax?: Price;

  /**
   * Required. The requested shipping option. Acceptable values are: - "`economy`" - "`expedited`" - "`oneDay`" - "`sameDay`" - "`standard`" - "`twoDay`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shippingOption" })
  shippingOption?: string;
}
