/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * EditorialContent - Metadata about editorial content
 */
public class EditorialContent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aspect")
    public Double aspect;
    public EditorialContent withAspect(Double aspect) {
        this.aspect = aspect;
        return this;
    }
    
    /**
     * Asset information, including size and thumbnail URLs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assets")
    public EditorialAssets assets;
    public EditorialContent withAssets(EditorialAssets assets) {
        this.assets = assets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("byline")
    public String byline;
    public EditorialContent withByline(String byline) {
        this.byline = byline;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caption")
    public String caption;
    public EditorialContent withCaption(String caption) {
        this.caption = caption;
        return this;
    }
    
    /**
     * List of categories
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categories")
    public EditorialCategory[] categories;
    public EditorialContent withCategories(EditorialCategory[] categories) {
        this.categories = categories;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date_taken")
    public LocalDate dateTaken;
    public EditorialContent withDateTaken(LocalDate dateTaken) {
        this.dateTaken = dateTaken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public EditorialContent withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonProperty("id")
    public String id;
    public EditorialContent withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keywords")
    public String[] keywords;
    public EditorialContent withKeywords(String[] keywords) {
        this.keywords = keywords;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("special_instructions")
    public String specialInstructions;
    public EditorialContent withSpecialInstructions(String specialInstructions) {
        this.specialInstructions = specialInstructions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public EditorialContent withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
