// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// RecognizeTextRequestBodySessionState - The state of the user's session with Amazon Lex V2.
type RecognizeTextRequestBodySessionState struct {
	ActiveContexts       []shared.ActiveContext `json:"activeContexts,omitempty"`
	DialogAction         *shared.DialogAction   `json:"dialogAction,omitempty"`
	Intent               *shared.Intent         `json:"intent,omitempty"`
	OriginatingRequestID *string                `json:"originatingRequestId,omitempty"`
	RuntimeHints         *shared.RuntimeHints   `json:"runtimeHints,omitempty"`
	SessionAttributes    map[string]string      `json:"sessionAttributes,omitempty"`
}

type RecognizeTextRequestBody struct {
	// <p>Request-specific information passed between the client application and Amazon Lex V2 </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>
	RequestAttributes map[string]string `json:"requestAttributes,omitempty"`
	// The state of the user's session with Amazon Lex V2.
	SessionState *RecognizeTextRequestBodySessionState `json:"sessionState,omitempty"`
	// The text that the user entered. Amazon Lex V2 interprets this text.
	Text string `json:"text"`
}

type RecognizeTextRequest struct {
	RequestBody       RecognizeTextRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The alias identifier in use for the bot that processes the request.
	BotAliasID string `pathParam:"style=simple,explode=false,name=botAliasId"`
	// The identifier of the bot that processes the request.
	BotID string `pathParam:"style=simple,explode=false,name=botId"`
	// The locale where the session is in use.
	LocaleID string `pathParam:"style=simple,explode=false,name=localeId"`
	// The identifier of the user session that is having the conversation.
	SessionID string `pathParam:"style=simple,explode=false,name=sessionId"`
}

type RecognizeTextResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// BadGatewayException
	BadGatewayException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// DependencyFailedException
	DependencyFailedException interface{}
	// InternalServerException
	InternalServerException interface{}
	// Success
	RecognizeTextResponse *shared.RecognizeTextResponse
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
