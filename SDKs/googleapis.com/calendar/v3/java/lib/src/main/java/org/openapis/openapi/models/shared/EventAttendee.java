/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EventAttendee {
    /**
     * Number of additional guests. Optional. The default is 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalGuests")
    public Integer additionalGuests;
    public EventAttendee withAdditionalGuests(Integer additionalGuests) {
        this.additionalGuests = additionalGuests;
        return this;
    }
    
    /**
     * The attendee's response comment. Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public EventAttendee withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The attendee's name, if available. Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public EventAttendee withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The attendee's email address, if available. This field must be present when adding an attendee. It must be a valid email address as per RFC5322.
     * Required when adding an attendee.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public EventAttendee withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The attendee's Profile ID, if available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public EventAttendee withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether this is an optional attendee. Optional. The default is False.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("optional")
    public Boolean optional;
    public EventAttendee withOptional(Boolean optional) {
        this.optional = optional;
        return this;
    }
    
    /**
     * Whether the attendee is the organizer of the event. Read-only. The default is False.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizer")
    public Boolean organizer;
    public EventAttendee withOrganizer(Boolean organizer) {
        this.organizer = organizer;
        return this;
    }
    
    /**
     * Whether the attendee is a resource. Can only be set when the attendee is added to the event for the first time. Subsequent modifications are ignored. Optional. The default is False.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    public Boolean resource;
    public EventAttendee withResource(Boolean resource) {
        this.resource = resource;
        return this;
    }
    
    /**
     * The attendee's response status. Possible values are:  
     * - "needsAction" - The attendee has not responded to the invitation (recommended for new events). 
     * - "declined" - The attendee has declined the invitation. 
     * - "tentative" - The attendee has tentatively accepted the invitation. 
     * - "accepted" - The attendee has accepted the invitation.  Warning: If you add an event using the values declined, tentative, or accepted, attendees with the "Add invitations to my calendar" setting set to "When I respond to invitation in email" won't see an event on their calendar unless they choose to change their invitation response in the event invitation email.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseStatus")
    public String responseStatus;
    public EventAttendee withResponseStatus(String responseStatus) {
        this.responseStatus = responseStatus;
        return this;
    }
    
    /**
     * Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    public Boolean self;
    public EventAttendee withSelf(Boolean self) {
        this.self = self;
        return this;
    }
    
}
