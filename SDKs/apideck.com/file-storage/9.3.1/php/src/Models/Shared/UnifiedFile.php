<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class UnifiedFile
{
    /**
     * The date and time when the object was created.
     * 
     * @var ?\DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * The user who created the object.
     * 
     * @var ?string $createdBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdBy = null;
    
    /**
     * Optional description of the file
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Whether the current user can download this file
     * 
     * @var ?bool $downloadable
     */
	#[\JMS\Serializer\Annotation\SerializedName('downloadable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $downloadable = null;
    
    /**
     * The third-party API ID of original entity
     * 
     * @var ?string $downstreamId
     */
	#[\JMS\Serializer\Annotation\SerializedName('downstream_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $downstreamId = null;
    
    /**
     * A unique identifier for an object.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The MIME type of the file.
     * 
     * @var ?string $mimeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('mime_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mimeType = null;
    
    /**
     * The name of the file
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('owner')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Owner')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Owner $owner = null;
    
    /**
     * The parent folders of the file, starting from the root
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\LinkedFolder> $parentFolders
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent_folders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LinkedFolder>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parentFolders = null;
    
    /**
     * Whether the list of parent folder is complete. Some connectors only return the direct parent of a file
     * 
     * @var ?bool $parentFoldersComplete
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent_folders_complete')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $parentFoldersComplete = null;
    
    /**
     * The full path of the file or folder (includes the file name)
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * The size of the file in bytes
     * 
     * @var ?int $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $size = null;
    
    /**
     * The type of resource. Could be file, folder or url
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\FileTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FileTypeEnum>')]
    public FileTypeEnum $type;
    
    /**
     * The date and time when the object was last updated.
     * 
     * @var ?\DateTime $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
    /**
     * The user who last updated the object.
     * 
     * @var ?string $updatedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedBy = null;
    
	public function __construct()
	{
		$this->createdAt = null;
		$this->createdBy = null;
		$this->description = null;
		$this->downloadable = null;
		$this->downstreamId = null;
		$this->id = "";
		$this->mimeType = null;
		$this->name = "";
		$this->owner = null;
		$this->parentFolders = null;
		$this->parentFoldersComplete = null;
		$this->path = null;
		$this->size = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\FileTypeEnum::FILE;
		$this->updatedAt = null;
		$this->updatedBy = null;
	}
}
