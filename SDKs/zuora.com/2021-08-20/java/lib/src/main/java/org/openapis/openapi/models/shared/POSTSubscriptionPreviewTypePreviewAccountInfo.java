/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * POSTSubscriptionPreviewTypePreviewAccountInfo - Container for custom fields of an Account object.
 * 
 */
public class POSTSubscriptionPreviewTypePreviewAccountInfo {
    /**
     * Value of the Class field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Class__NS")
    public String classNS;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withClassNS(String classNS) {
        this.classNS = classNS;
        return this;
    }
    
    /**
     * Value of the Customer Type field for the corresponding customer account in NetSuite. The Customer Type field is used when the customer account is created in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerType__NS")
    public POSTSubscriptionPreviewTypePreviewAccountInfoCustomerTypeNSEnum customerTypeNS;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withCustomerTypeNS(POSTSubscriptionPreviewTypePreviewAccountInfoCustomerTypeNSEnum customerTypeNS) {
        this.customerTypeNS = customerTypeNS;
        return this;
    }
    
    /**
     * Value of the Department field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Department__NS")
    public String departmentNS;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withDepartmentNS(String departmentNS) {
        this.departmentNS = departmentNS;
        return this;
    }
    
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the account's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Value of the Location field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Location__NS")
    public String locationNS;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withLocationNS(String locationNS) {
        this.locationNS = locationNS;
        return this;
    }
    
    /**
     * Value of the Subsidiary field for the corresponding customer account in NetSuite. The Subsidiary field is required if you use NetSuite OneWorld. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Subsidiary__NS")
    public String subsidiaryNS;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withSubsidiaryNS(String subsidiaryNS) {
        this.subsidiaryNS = subsidiaryNS;
        return this;
    }
    
    /**
     * Date when the account was sychronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * Specifies whether the account should be synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SynctoNetSuite__NS")
    public POSTSubscriptionPreviewTypePreviewAccountInfoSynctoNetSuiteNSEnum synctoNetSuiteNS;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withSynctoNetSuiteNS(POSTSubscriptionPreviewTypePreviewAccountInfoSynctoNetSuiteNSEnum synctoNetSuiteNS) {
        this.synctoNetSuiteNS = synctoNetSuiteNS;
        return this;
    }
    
    /**
     * The account's bill cycle day (BCD), when bill runs generate invoices for the account. Specify any day of the month (`1`-`31`, where `31` = end-of-month), or `0` for auto-set.
     * 
     */
    @JsonProperty("billCycleDay")
    public Long billCycleDay;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withBillCycleDay(Long billCycleDay) {
        this.billCycleDay = billCycleDay;
        return this;
    }
    
    /**
     * Container for bill-to contact information of this account.
     * 
     */
    @JsonProperty("billToContact")
    public POSTSubscriptionPreviewTypePreviewAccountInfoBillToContact billToContact;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withBillToContact(POSTSubscriptionPreviewTypePreviewAccountInfoBillToContact billToContact) {
        this.billToContact = billToContact;
        return this;
    }
    
    /**
     * A currency as defined in Billing Settings.
     * 
     */
    @JsonProperty("currency")
    public String currency;
    public POSTSubscriptionPreviewTypePreviewAccountInfo withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
}
