<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateVirtualClusterRequestBody
{
    /**
     * The client token of the virtual cluster.
     * 
     * @var string $clientToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $clientToken;
    
    /**
     * The information about the container provider.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateVirtualClusterRequestBodyContainerProvider $containerProvider
     */
	#[\JMS\Serializer\Annotation\SerializedName('containerProvider')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateVirtualClusterRequestBodyContainerProvider')]
    public CreateVirtualClusterRequestBodyContainerProvider $containerProvider;
    
    /**
     * The specified name of the virtual cluster.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The tags assigned to the virtual cluster.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->clientToken = "";
		$this->containerProvider = new \OpenAPI\OpenAPI\Models\Operations\CreateVirtualClusterRequestBodyContainerProvider();
		$this->name = "";
		$this->tags = null;
	}
}
