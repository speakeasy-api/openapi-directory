/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PullRequest - PullRequest represents a pull request
 */
public class PullRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_maintainer_edit")
    public Boolean allowMaintainerEdit;

    public PullRequest withAllowMaintainerEdit(Boolean allowMaintainerEdit) {
        this.allowMaintainerEdit = allowMaintainerEdit;
        return this;
    }
    
    /**
     * User represents a user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignee")
    public User assignee;

    public PullRequest withAssignee(User assignee) {
        this.assignee = assignee;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignees")
    public User[] assignees;

    public PullRequest withAssignees(User[] assignees) {
        this.assignees = assignees;
        return this;
    }
    
    /**
     * PRBranchInfo information about a branch
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("base")
    public PRBranchInfo base;

    public PullRequest withBase(PRBranchInfo base) {
        this.base = base;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body")
    public String body;

    public PullRequest withBody(String body) {
        this.body = body;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("closed_at")
    public OffsetDateTime closedAt;

    public PullRequest withClosedAt(OffsetDateTime closedAt) {
        this.closedAt = closedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments")
    public Long comments;

    public PullRequest withComments(Long comments) {
        this.comments = comments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public PullRequest withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diff_url")
    public String diffUrl;

    public PullRequest withDiffUrl(String diffUrl) {
        this.diffUrl = diffUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("due_date")
    public OffsetDateTime dueDate;

    public PullRequest withDueDate(OffsetDateTime dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * PRBranchInfo information about a branch
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("head")
    public PRBranchInfo head;

    public PullRequest withHead(PRBranchInfo head) {
        this.head = head;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_url")
    public String htmlUrl;

    public PullRequest withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public PullRequest withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_locked")
    public Boolean isLocked;

    public PullRequest withIsLocked(Boolean isLocked) {
        this.isLocked = isLocked;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public Label[] labels;

    public PullRequest withLabels(Label[] labels) {
        this.labels = labels;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merge_base")
    public String mergeBase;

    public PullRequest withMergeBase(String mergeBase) {
        this.mergeBase = mergeBase;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merge_commit_sha")
    public String mergeCommitSha;

    public PullRequest withMergeCommitSha(String mergeCommitSha) {
        this.mergeCommitSha = mergeCommitSha;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mergeable")
    public Boolean mergeable;

    public PullRequest withMergeable(Boolean mergeable) {
        this.mergeable = mergeable;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merged")
    public Boolean merged;

    public PullRequest withMerged(Boolean merged) {
        this.merged = merged;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("merged_at")
    public OffsetDateTime mergedAt;

    public PullRequest withMergedAt(OffsetDateTime mergedAt) {
        this.mergedAt = mergedAt;
        return this;
    }
    
    /**
     * User represents a user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merged_by")
    public User mergedBy;

    public PullRequest withMergedBy(User mergedBy) {
        this.mergedBy = mergedBy;
        return this;
    }
    
    /**
     * Milestone milestone is a collection of issues on one repository
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("milestone")
    public Milestone milestone;

    public PullRequest withMilestone(Milestone milestone) {
        this.milestone = milestone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public Long number;

    public PullRequest withNumber(Long number) {
        this.number = number;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patch_url")
    public String patchUrl;

    public PullRequest withPatchUrl(String patchUrl) {
        this.patchUrl = patchUrl;
        return this;
    }
    
    /**
     * StateType issue state type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public PullRequest withState(String state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public PullRequest withTitle(String title) {
        this.title = title;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;

    public PullRequest withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public PullRequest withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * User represents a user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public User user;

    public PullRequest withUser(User user) {
        this.user = user;
        return this;
    }
    
    public PullRequest(){}
}
