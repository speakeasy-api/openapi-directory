// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type QualityFilterEnum string

const (
	QualityFilterEnumNone   QualityFilterEnum = "NONE"
	QualityFilterEnumAuto   QualityFilterEnum = "AUTO"
	QualityFilterEnumLow    QualityFilterEnum = "LOW"
	QualityFilterEnumMedium QualityFilterEnum = "MEDIUM"
	QualityFilterEnumHigh   QualityFilterEnum = "HIGH"
)

func (e QualityFilterEnum) ToPointer() *QualityFilterEnum {
	return &e
}

func (e *QualityFilterEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "AUTO":
		fallthrough
	case "LOW":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "HIGH":
		*e = QualityFilterEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QualityFilterEnum: %v", v)
	}
}
