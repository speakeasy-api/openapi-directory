<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class GuaranteedOrders 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Creates a new guaranteed order. Returns the newly created guaranteed order if successful.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersCreateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersCreateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersCreateResponse
     */
	public function displayvideoGuaranteedOrdersCreate(
        \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersCreateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersCreateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersCreateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/guaranteedOrders');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "guaranteedOrderInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersCreateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersCreateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->guaranteedOrder = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GuaranteedOrder', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Edits read advertisers of a guaranteed order.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersEditGuaranteedOrderReadAccessorsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersEditGuaranteedOrderReadAccessorsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersEditGuaranteedOrderReadAccessorsResponse
     */
	public function displayvideoGuaranteedOrdersEditGuaranteedOrderReadAccessors(
        \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersEditGuaranteedOrderReadAccessorsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersEditGuaranteedOrderReadAccessorsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersEditGuaranteedOrderReadAccessorsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/guaranteedOrders/{guaranteedOrderId}:editGuaranteedOrderReadAccessors', \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersEditGuaranteedOrderReadAccessorsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "editGuaranteedOrderReadAccessorsRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersEditGuaranteedOrderReadAccessorsRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersEditGuaranteedOrderReadAccessorsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->editGuaranteedOrderReadAccessorsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\EditGuaranteedOrderReadAccessorsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Gets a guaranteed order.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersGetResponse
     */
	public function displayvideoGuaranteedOrdersGet(
        \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/guaranteedOrders/{guaranteedOrderId}', \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->guaranteedOrder = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GuaranteedOrder', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists guaranteed orders that are accessible to the current user. The order is defined by the order_by parameter. If a filter by entity_status is not specified, guaranteed orders with entity status `ENTITY_STATUS_ARCHIVED` will not be included in the results.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersListResponse
     */
	public function displayvideoGuaranteedOrdersList(
        \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/guaranteedOrders');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listGuaranteedOrdersResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListGuaranteedOrdersResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates an existing guaranteed order. Returns the updated guaranteed order if successful.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersPatchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersPatchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersPatchResponse
     */
	public function displayvideoGuaranteedOrdersPatch(
        \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersPatchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersPatchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersPatchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/guaranteedOrders/{guaranteedOrderId}', \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersPatchRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "guaranteedOrderInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersPatchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DisplayvideoGuaranteedOrdersPatchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->guaranteedOrder = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GuaranteedOrder', 'json');
            }
        }

        return $response;
    }
}