// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DomainsCountTypeEnum - Type of domain ("system"/"go"/"personal"/"dedicated"). If not specified default is "system"
type DomainsCountTypeEnum string

const (
	DomainsCountTypeEnumSystem    DomainsCountTypeEnum = "system"
	DomainsCountTypeEnumGo        DomainsCountTypeEnum = "go"
	DomainsCountTypeEnumPersonal  DomainsCountTypeEnum = "personal"
	DomainsCountTypeEnumDedicated DomainsCountTypeEnum = "dedicated"
)

func (e *DomainsCountTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "system":
		fallthrough
	case "go":
		fallthrough
	case "personal":
		fallthrough
	case "dedicated":
		*e = DomainsCountTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DomainsCountTypeEnum: %s", s)
	}
}

type DomainsCountQueryParams struct {
	// Filter domains with this anmen
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Type of domain ("system"/"go"/"personal"/"dedicated"). If not specified default is "system"
	Type *DomainsCountTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type DomainsCountRequest struct {
	QueryParams DomainsCountQueryParams
}

type DomainsCountResponse struct {
	APICoreResponsesCountResponce *shared.APICoreResponsesCountResponce
	Body                          []byte
	ContentType                   string
	StatusCode                    int
	RawResponse                   *http.Response
}
