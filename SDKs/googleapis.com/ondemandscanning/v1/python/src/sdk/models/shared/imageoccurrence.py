"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fingerprint as shared_fingerprint
from ..shared import layer as shared_layer
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImageOccurrence:
    r"""Details of the derived image portion of the DockerImage relationship. This image would be produced from a Dockerfile with FROM ."""
    
    base_resource_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('baseResourceUrl'), 'exclude': lambda f: f is None }})
    r"""Output only. This contains the base image URL for the derived image occurrence."""  
    distance: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distance'), 'exclude': lambda f: f is None }})
    r"""Output only. The number of layers by which this image differs from the associated image basis."""  
    fingerprint: Optional[shared_fingerprint.Fingerprint] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fingerprint'), 'exclude': lambda f: f is None }})
    r"""A set of properties that uniquely identify a given Docker image."""  
    layer_info: Optional[list[shared_layer.Layer]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('layerInfo'), 'exclude': lambda f: f is None }})
    r"""This contains layer-specific metadata, if populated it has length \\"distance\\" and is ordered with [distance] being the layer immediately following the base image and [1] being the final layer."""  
    