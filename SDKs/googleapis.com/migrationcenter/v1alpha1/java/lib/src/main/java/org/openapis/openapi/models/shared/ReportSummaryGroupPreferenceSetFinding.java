/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReportSummaryGroupPreferenceSetFinding - Summary Findings for a specific Group/PreferenceSet combination.
 */
public class ReportSummaryGroupPreferenceSetFinding {
    /**
     * Description for the Preference Set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ReportSummaryGroupPreferenceSetFinding withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Display Name of the Preference Set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public ReportSummaryGroupPreferenceSetFinding withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * A set of findings that applies to assets of type Virtual/Physical Machine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineFinding")
    public ReportSummaryMachineFinding machineFinding;

    public ReportSummaryGroupPreferenceSetFinding withMachineFinding(ReportSummaryMachineFinding machineFinding) {
        this.machineFinding = machineFinding;
        return this;
    }
    
    /**
     * VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machinePreferences")
    public VirtualMachinePreferences machinePreferences;

    public ReportSummaryGroupPreferenceSetFinding withMachinePreferences(VirtualMachinePreferences machinePreferences) {
        this.machinePreferences = machinePreferences;
        return this;
    }
    
    /**
     * Represents an amount of money with its currency type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monthlyCostCompute")
    public Money monthlyCostCompute;

    public ReportSummaryGroupPreferenceSetFinding withMonthlyCostCompute(Money monthlyCostCompute) {
        this.monthlyCostCompute = monthlyCostCompute;
        return this;
    }
    
    /**
     * Represents an amount of money with its currency type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monthlyCostNetworkEgress")
    public Money monthlyCostNetworkEgress;

    public ReportSummaryGroupPreferenceSetFinding withMonthlyCostNetworkEgress(Money monthlyCostNetworkEgress) {
        this.monthlyCostNetworkEgress = monthlyCostNetworkEgress;
        return this;
    }
    
    /**
     * Represents an amount of money with its currency type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monthlyCostOsLicense")
    public Money monthlyCostOsLicense;

    public ReportSummaryGroupPreferenceSetFinding withMonthlyCostOsLicense(Money monthlyCostOsLicense) {
        this.monthlyCostOsLicense = monthlyCostOsLicense;
        return this;
    }
    
    /**
     * Represents an amount of money with its currency type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monthlyCostOther")
    public Money monthlyCostOther;

    public ReportSummaryGroupPreferenceSetFinding withMonthlyCostOther(Money monthlyCostOther) {
        this.monthlyCostOther = monthlyCostOther;
        return this;
    }
    
    /**
     * Represents an amount of money with its currency type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monthlyCostStorage")
    public Money monthlyCostStorage;

    public ReportSummaryGroupPreferenceSetFinding withMonthlyCostStorage(Money monthlyCostStorage) {
        this.monthlyCostStorage = monthlyCostStorage;
        return this;
    }
    
    /**
     * Represents an amount of money with its currency type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monthlyCostTotal")
    public Money monthlyCostTotal;

    public ReportSummaryGroupPreferenceSetFinding withMonthlyCostTotal(Money monthlyCostTotal) {
        this.monthlyCostTotal = monthlyCostTotal;
        return this;
    }
    
    /**
     * Target region for this Preference Set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferredRegion")
    public String preferredRegion;

    public ReportSummaryGroupPreferenceSetFinding withPreferredRegion(String preferredRegion) {
        this.preferredRegion = preferredRegion;
        return this;
    }
    
    /**
     * Text describing the pricing track specified for this Preference Set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pricingTrack")
    public String pricingTrack;

    public ReportSummaryGroupPreferenceSetFinding withPricingTrack(String pricingTrack) {
        this.pricingTrack = pricingTrack;
        return this;
    }
    
    /**
     * Text describing the business priority specified for this Preference Set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topPriority")
    public String topPriority;

    public ReportSummaryGroupPreferenceSetFinding withTopPriority(String topPriority) {
        this.topPriority = topPriority;
        return this;
    }
    
    public ReportSummaryGroupPreferenceSetFinding(){}
}
