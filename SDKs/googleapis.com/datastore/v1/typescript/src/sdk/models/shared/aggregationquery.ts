/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Aggregation } from "./aggregation";
import { Query } from "./query";
import { Expose, Type } from "class-transformer";

/**
 * Datastore query for running an aggregation over a Query.
 */
export class AggregationQuery extends SpeakeasyBase {
  /**
   * Optional. Series of aggregations to apply over the results of the `nested_query`. Requires: * A minimum of one and maximum of five aggregations per query.
   */
  @SpeakeasyMetadata({ elemType: Aggregation })
  @Expose({ name: "aggregations" })
  @Type(() => Aggregation)
  aggregations?: Aggregation[];

  /**
   * A query for entities.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nestedQuery" })
  @Type(() => Query)
  nestedQuery?: Query;
}
