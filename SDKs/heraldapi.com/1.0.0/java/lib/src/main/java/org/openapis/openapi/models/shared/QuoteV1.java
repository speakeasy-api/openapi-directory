/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QuoteV1 - A quote declares an institution's willingness to sell an insurance policy to a customer. Active quotes contain details about a policy the customer can purchase and related prices.
 * 
 * Read more about [quotes](https://www.heraldapi.com/docs/quotes).
 */
public class QuoteV1 {
    /**
     * Describes whether bind is supported for the quote. Policies can only be created from quotes with bind_status of "ready".
     */
    @JsonProperty("bind_status")
    public QuoteV1BindStatusEnum bindStatus;

    public QuoteV1 withBindStatus(QuoteV1BindStatusEnum bindStatus) {
        this.bindStatus = bindStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coverage_values")
    public CoverageValueWriteV1[] coverageValues;

    public QuoteV1 withCoverageValues(CoverageValueWriteV1[] coverageValues) {
        this.coverageValues = coverageValues;
        return this;
    }
    
    /**
     * An array of relevant files, which can be retrieved using [`/files/{file_id}/get_temporary_link`](../reference/HeraldAPI.v1.yaml/paths/~1files~1{file_id}~1get_temporary_link/post). This array is empty if there are no relevant files.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("files")
    public FileMiniV1[] files;

    public QuoteV1 withFiles(FileMiniV1[] files) {
        this.files = files;
        return this;
    }
    
    /**
     * id for a specific quote.
     */
    @JsonProperty("id")
    public String id;

    public QuoteV1 withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies the National Association of Insurance Commissioners (NAIC) code associated with the quoted policy. The field is NULL if this information is not available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("naic_code")
    public String naicCode;

    public QuoteV1 withNaicCode(String naicCode) {
        this.naicCode = naicCode;
        return this;
    }
    
    /**
     * A hyperlink to a corresponding record in the institution\u2019s portal. This field is NULL if not available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("portal_link")
    public String portalLink;

    public QuoteV1 withPortalLink(String portalLink) {
        this.portalLink = portalLink;
        return this;
    }
    
    /**
     * These prices describe the costs associated with a quote.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prices")
    public QuotePriceV1 prices;

    public QuoteV1 withPrices(QuotePriceV1 prices) {
        this.prices = prices;
        return this;
    }
    
    @JsonProperty("product_id")
    public String productId;

    public QuoteV1 withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    /**
     * Indicates the status of a quote. See [full list of quote statuses](https://www.heraldapi.com/docs/quotes) for more detail.
     */
    @JsonProperty("status")
    public QuoteV1StatusEnum status;

    public QuoteV1 withStatus(QuoteV1StatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * This will be returned when the status is declined, referred, or unsupported. When the source is "Carrier" the status reason is from the integrated carrier. When the source is "API", the reason has been cleaned by Herald.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status_reasons")
    public StatusReason statusReasons;

    public QuoteV1 withStatusReasons(StatusReason statusReasons) {
        this.statusReasons = statusReasons;
        return this;
    }
    
    /**
     * id of the submission that created the quote.
     */
    @JsonProperty("submission_id")
    public String submissionId;

    public QuoteV1 withSubmissionId(String submissionId) {
        this.submissionId = submissionId;
        return this;
    }
    
    public QuoteV1(@JsonProperty("bind_status") QuoteV1BindStatusEnum bindStatus, @JsonProperty("id") String id, @JsonProperty("product_id") String productId, @JsonProperty("status") QuoteV1StatusEnum status, @JsonProperty("submission_id") String submissionId) {
        this.bindStatus = bindStatus;
        this.id = id;
        this.productId = productId;
        this.status = status;
        this.submissionId = submissionId;
  }
}
