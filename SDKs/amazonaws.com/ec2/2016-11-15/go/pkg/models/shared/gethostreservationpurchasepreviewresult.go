// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GetHostReservationPurchasePreviewResultCurrencyCodeEnum - The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
type GetHostReservationPurchasePreviewResultCurrencyCodeEnum string

const (
	GetHostReservationPurchasePreviewResultCurrencyCodeEnumUsd GetHostReservationPurchasePreviewResultCurrencyCodeEnum = "USD"
)

func (e GetHostReservationPurchasePreviewResultCurrencyCodeEnum) ToPointer() *GetHostReservationPurchasePreviewResultCurrencyCodeEnum {
	return &e
}

func (e *GetHostReservationPurchasePreviewResultCurrencyCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "USD":
		*e = GetHostReservationPurchasePreviewResultCurrencyCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHostReservationPurchasePreviewResultCurrencyCodeEnum: %v", v)
	}
}

// GetHostReservationPurchasePreviewResultPurchaseCurrencyCodeEnum - The currency in which the <code>UpfrontPrice</code> and <code>HourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
type GetHostReservationPurchasePreviewResultPurchaseCurrencyCodeEnum string

const (
	GetHostReservationPurchasePreviewResultPurchaseCurrencyCodeEnumUsd GetHostReservationPurchasePreviewResultPurchaseCurrencyCodeEnum = "USD"
)

func (e GetHostReservationPurchasePreviewResultPurchaseCurrencyCodeEnum) ToPointer() *GetHostReservationPurchasePreviewResultPurchaseCurrencyCodeEnum {
	return &e
}

func (e *GetHostReservationPurchasePreviewResultPurchaseCurrencyCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "USD":
		*e = GetHostReservationPurchasePreviewResultPurchaseCurrencyCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHostReservationPurchasePreviewResultPurchaseCurrencyCodeEnum: %v", v)
	}
}

// GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum - The payment option for the reservation.
type GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum string

const (
	GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnumAllUpfront     GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum = "AllUpfront"
	GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnumPartialUpfront GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum = "PartialUpfront"
	GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnumNoUpfront      GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum = "NoUpfront"
)

func (e GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum) ToPointer() *GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum {
	return &e
}

func (e *GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AllUpfront":
		fallthrough
	case "PartialUpfront":
		fallthrough
	case "NoUpfront":
		*e = GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum: %v", v)
	}
}

// GetHostReservationPurchasePreviewResultPurchase - Describes the result of the purchase.
type GetHostReservationPurchasePreviewResultPurchase struct {
	CurrencyCode      *GetHostReservationPurchasePreviewResultPurchaseCurrencyCodeEnum
	Duration          *int64
	HostIDSet         []string
	HostReservationID *string
	HourlyPrice       *string
	InstanceFamily    *string
	PaymentOption     *GetHostReservationPurchasePreviewResultPurchasePaymentOptionEnum
	UpfrontPrice      *string
}

// GetHostReservationPurchasePreviewResult - Success
type GetHostReservationPurchasePreviewResult struct {
	CurrencyCode      *GetHostReservationPurchasePreviewResultCurrencyCodeEnum
	Purchase          []GetHostReservationPurchasePreviewResultPurchase
	TotalHourlyPrice  *string
	TotalUpfrontPrice *string
}
