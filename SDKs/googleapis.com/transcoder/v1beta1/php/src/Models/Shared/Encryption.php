<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Encryption - Encryption settings.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Encryption
{
    /**
     * Configuration for AES-128 encryption.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Aes128Encryption $aes128
     */
	#[\JMS\Serializer\Annotation\SerializedName('aes128')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Aes128Encryption')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Aes128Encryption $aes128 = null;
    
    /**
     * Required. 128 bit Initialization Vector (IV) represented as lowercase hexadecimal digits.
     * 
     * @var ?string $iv
     */
	#[\JMS\Serializer\Annotation\SerializedName('iv')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iv = null;
    
    /**
     * Required. 128 bit encryption key represented as lowercase hexadecimal digits.
     * 
     * @var ?string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $key = null;
    
    /**
     * Configuration for MPEG Common Encryption (MPEG-CENC).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MpegCommonEncryption $mpegCenc
     */
	#[\JMS\Serializer\Annotation\SerializedName('mpegCenc')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MpegCommonEncryption')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MpegCommonEncryption $mpegCenc = null;
    
    /**
     * Configuration for SAMPLE-AES encryption.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SampleAesEncryption $sampleAes
     */
	#[\JMS\Serializer\Annotation\SerializedName('sampleAes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SampleAesEncryption')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SampleAesEncryption $sampleAes = null;
    
	public function __construct()
	{
		$this->aes128 = null;
		$this->iv = null;
		$this->key = null;
		$this->mpegCenc = null;
		$this->sampleAes = null;
	}
}
