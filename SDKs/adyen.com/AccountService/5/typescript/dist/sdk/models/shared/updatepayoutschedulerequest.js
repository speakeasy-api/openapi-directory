"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdatePayoutScheduleRequest = exports.UpdatePayoutScheduleRequestScheduleEnum = exports.UpdatePayoutScheduleRequestActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Direction on how to handle any payouts that have already been scheduled.
 *
 * @remarks
 * Permitted values:
 * * `CLOSE` will close the existing batch of payouts.
 * * `UPDATE` will reschedule the existing batch to the new schedule.
 * * `NOTHING` (**default**) will allow the payout to proceed.
 */
var UpdatePayoutScheduleRequestActionEnum;
(function (UpdatePayoutScheduleRequestActionEnum) {
    UpdatePayoutScheduleRequestActionEnum["Close"] = "CLOSE";
    UpdatePayoutScheduleRequestActionEnum["Nothing"] = "NOTHING";
    UpdatePayoutScheduleRequestActionEnum["Update"] = "UPDATE";
})(UpdatePayoutScheduleRequestActionEnum = exports.UpdatePayoutScheduleRequestActionEnum || (exports.UpdatePayoutScheduleRequestActionEnum = {}));
/**
 * The payout schedule to which the account is to be updated.
 *
 * @remarks
 * Permitted values: `DAILY`, `DAILY_US`, `DAILY_EU`, `DAILY_AU`, `DAILY_SG`, `WEEKLY`, `WEEKLY_ON_TUE_FRI_MIDNIGHT`, `BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT`, `MONTHLY`, `HOLD`.
 * `HOLD` will prevent scheduled payouts from happening but will still allow manual payouts to occur.
 */
var UpdatePayoutScheduleRequestScheduleEnum;
(function (UpdatePayoutScheduleRequestScheduleEnum) {
    UpdatePayoutScheduleRequestScheduleEnum["BiweeklyOn1StAnd15ThAtMidnight"] = "BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT";
    UpdatePayoutScheduleRequestScheduleEnum["Daily"] = "DAILY";
    UpdatePayoutScheduleRequestScheduleEnum["DailyAu"] = "DAILY_AU";
    UpdatePayoutScheduleRequestScheduleEnum["DailyEu"] = "DAILY_EU";
    UpdatePayoutScheduleRequestScheduleEnum["DailySg"] = "DAILY_SG";
    UpdatePayoutScheduleRequestScheduleEnum["DailyUs"] = "DAILY_US";
    UpdatePayoutScheduleRequestScheduleEnum["Hold"] = "HOLD";
    UpdatePayoutScheduleRequestScheduleEnum["Monthly"] = "MONTHLY";
    UpdatePayoutScheduleRequestScheduleEnum["Weekly"] = "WEEKLY";
    UpdatePayoutScheduleRequestScheduleEnum["WeeklyOnTueFriMidnight"] = "WEEKLY_ON_TUE_FRI_MIDNIGHT";
})(UpdatePayoutScheduleRequestScheduleEnum = exports.UpdatePayoutScheduleRequestScheduleEnum || (exports.UpdatePayoutScheduleRequestScheduleEnum = {}));
var UpdatePayoutScheduleRequest = /** @class */ (function (_super) {
    __extends(UpdatePayoutScheduleRequest, _super);
    function UpdatePayoutScheduleRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "action" }),
        __metadata("design:type", String)
    ], UpdatePayoutScheduleRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reason" }),
        __metadata("design:type", String)
    ], UpdatePayoutScheduleRequest.prototype, "reason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schedule" }),
        __metadata("design:type", String)
    ], UpdatePayoutScheduleRequest.prototype, "schedule", void 0);
    return UpdatePayoutScheduleRequest;
}(utils_1.SpeakeasyBase));
exports.UpdatePayoutScheduleRequest = UpdatePayoutScheduleRequest;
