// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// InvoiceRecurringAPIModelDayOfWeekEnum - Day when the recurrance should happen
type InvoiceRecurringAPIModelDayOfWeekEnum string

const (
	InvoiceRecurringAPIModelDayOfWeekEnumSunday    InvoiceRecurringAPIModelDayOfWeekEnum = "Sunday"
	InvoiceRecurringAPIModelDayOfWeekEnumMonday    InvoiceRecurringAPIModelDayOfWeekEnum = "Monday"
	InvoiceRecurringAPIModelDayOfWeekEnumTuesday   InvoiceRecurringAPIModelDayOfWeekEnum = "Tuesday"
	InvoiceRecurringAPIModelDayOfWeekEnumWednesday InvoiceRecurringAPIModelDayOfWeekEnum = "Wednesday"
	InvoiceRecurringAPIModelDayOfWeekEnumThursday  InvoiceRecurringAPIModelDayOfWeekEnum = "Thursday"
	InvoiceRecurringAPIModelDayOfWeekEnumFriday    InvoiceRecurringAPIModelDayOfWeekEnum = "Friday"
	InvoiceRecurringAPIModelDayOfWeekEnumSaturday  InvoiceRecurringAPIModelDayOfWeekEnum = "Saturday"
)

func (e *InvoiceRecurringAPIModelDayOfWeekEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Sunday":
		fallthrough
	case "Monday":
		fallthrough
	case "Tuesday":
		fallthrough
	case "Wednesday":
		fallthrough
	case "Thursday":
		fallthrough
	case "Friday":
		fallthrough
	case "Saturday":
		*e = InvoiceRecurringAPIModelDayOfWeekEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceRecurringAPIModelDayOfWeekEnum: %s", s)
	}
}

// InvoiceRecurringAPIModelRecurrancePatternEnum - How often the recurrance occurs
type InvoiceRecurringAPIModelRecurrancePatternEnum string

const (
	InvoiceRecurringAPIModelRecurrancePatternEnumDaily   InvoiceRecurringAPIModelRecurrancePatternEnum = "Daily"
	InvoiceRecurringAPIModelRecurrancePatternEnumWeekly  InvoiceRecurringAPIModelRecurrancePatternEnum = "Weekly"
	InvoiceRecurringAPIModelRecurrancePatternEnumMonthly InvoiceRecurringAPIModelRecurrancePatternEnum = "Monthly"
	InvoiceRecurringAPIModelRecurrancePatternEnumYearly  InvoiceRecurringAPIModelRecurrancePatternEnum = "Yearly"
)

func (e *InvoiceRecurringAPIModelRecurrancePatternEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Daily":
		fallthrough
	case "Weekly":
		fallthrough
	case "Monthly":
		fallthrough
	case "Yearly":
		*e = InvoiceRecurringAPIModelRecurrancePatternEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceRecurringAPIModelRecurrancePatternEnum: %s", s)
	}
}

// InvoiceRecurringAPIModelStatusEnum - The status of the recurrance
type InvoiceRecurringAPIModelStatusEnum string

const (
	InvoiceRecurringAPIModelStatusEnumPending   InvoiceRecurringAPIModelStatusEnum = "Pending"
	InvoiceRecurringAPIModelStatusEnumActive    InvoiceRecurringAPIModelStatusEnum = "Active"
	InvoiceRecurringAPIModelStatusEnumCancelled InvoiceRecurringAPIModelStatusEnum = "Cancelled"
	InvoiceRecurringAPIModelStatusEnumFinished  InvoiceRecurringAPIModelStatusEnum = "Finished"
)

func (e *InvoiceRecurringAPIModelStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "Active":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Finished":
		*e = InvoiceRecurringAPIModelStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceRecurringAPIModelStatusEnum: %s", s)
	}
}

// InvoiceRecurringAPIModel - Definition of invoice recurring profile
type InvoiceRecurringAPIModel struct {
	// Day of month when the recurrance should happen
	DayOfMonth *int `json:"DayOfMonth,omitempty"`
	// Day when the recurrance should happen
	DayOfWeek *InvoiceRecurringAPIModelDayOfWeekEnum `json:"DayOfWeek,omitempty"`
	// Total number of days for the client to pay the invoice after issuing it
	DueDateInDays *int `json:"DueDateInDays,omitempty"`
	// Indcate the date when the recurrance should stop
	EndOfRecurrance *time.Time `json:"EndOfRecurrance,omitempty"`
	// Month when the recurrance should happen
	Month *int `json:"Month,omitempty"`
	// How often the recurrance occurs
	RecurrancePattern *InvoiceRecurringAPIModelRecurrancePatternEnum `json:"RecurrancePattern,omitempty"`
	// Recurring every [value] RecurrancePattern
	// Ex: Recur every 1 week
	RecurranceValue *int `json:"RecurranceValue,omitempty"`
	// Indcate the date when the recurrance has started
	StartOfRecurrance *time.Time `json:"StartOfRecurrance,omitempty"`
	// The status of the recurrance
	Status *InvoiceRecurringAPIModelStatusEnum `json:"Status,omitempty"`
	// Title of the recurring profile.
	// Ex: BRAND PACKAGE - 2017-08-16 - 2018-08-16
	Title *string `json:"Title,omitempty"`
}
