/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class TestArchiveTestRunSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class TestArchiveTestRunRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * The ID of the test run
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=test_run_id",
  })
  testRunId: string;
}

/**
 * Summary single test run on Xamarin Test Cloud
 */
export class TestArchiveTestRunTestRunTestRunStatistics extends SpeakeasyBase {
  /**
   * Number of devices running the test
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devices" })
  devices?: number;

  /**
   * Number of failed devices
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicesFailed" })
  devicesFailed?: number;

  /**
   * Number of finished devices
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicesFinished" })
  devicesFinished?: number;

  /**
   * Number of failed tests
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failed" })
  failed?: number;

  /**
   * Number of passed tests
   */
  @SpeakeasyMetadata()
  @Expose({ name: "passed" })
  passed?: number;

  /**
   * The max amount of MB used during the test run
   */
  @SpeakeasyMetadata()
  @Expose({ name: "peakMemory" })
  peakMemory?: number;

  /**
   * Number of skipped tests
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skipped" })
  skipped?: number;

  /**
   * Number of tests in total
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;

  /**
   * The number of minutes of device time the test has been runnign
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalDeviceMinutes" })
  totalDeviceMinutes?: number;
}

/**
 * Summary single test run on Xamarin Test Cloud
 */
export class TestArchiveTestRunTestRun extends SpeakeasyBase {
  /**
   * The compiled version of the app binary
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appVersion" })
  appVersion?: string;

  /**
   * The date and time the test was uploaded
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date?: string;

  /**
   * Human readable explanation of the current test status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The unique id of the test upload
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The device platform targeted by the test. Possible values are 'ios' or 'android'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  platform?: string;

  /**
   * The passed/failed state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resultStatus" })
  resultStatus?: string;

  /**
   * The current status of the test run, in relation to the various phases
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runStatus" })
  runStatus?: string;

  /**
   * Deprecated. Use runStatus instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Summary single test run on Xamarin Test Cloud
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stats" })
  @Type(() => TestArchiveTestRunTestRunTestRunStatistics)
  stats?: TestArchiveTestRunTestRunTestRunStatistics;

  /**
   * Deprecated. Use resultStatus instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * The name of the test series with which this test upload is associated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "testSeries" })
  testSeries?: string;

  /**
   * The name of the test framework used to run this test
   */
  @SpeakeasyMetadata()
  @Expose({ name: "testType" })
  testType?: string;
}

export class TestArchiveTestRunResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  testRun?: TestArchiveTestRunTestRun;
}
