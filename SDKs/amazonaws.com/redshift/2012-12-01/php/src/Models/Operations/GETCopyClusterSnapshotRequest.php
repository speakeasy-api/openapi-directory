<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETCopyClusterSnapshotRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETCopyClusterSnapshotActionEnum $action;
    
    /**
     * <p>The number of days that a manual snapshot is retained. If the value is -1, the manual snapshot is retained indefinitely. </p> <p>The value must be either -1 or an integer between 1 and 3,653.</p> <p>The default value is -1.</p>
     * 
     * @var ?int $manualSnapshotRetentionPeriod
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ManualSnapshotRetentionPeriod')]
    public ?int $manualSnapshotRetentionPeriod = null;
    
    /**
     * <p>The identifier of the cluster the source snapshot was created from. This parameter is required if your IAM user or role has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier for a valid cluster.</p> </li> </ul>
     * 
     * @var ?string $sourceSnapshotClusterIdentifier
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SourceSnapshotClusterIdentifier')]
    public ?string $sourceSnapshotClusterIdentifier = null;
    
    /**
     * <p>The identifier for the source snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must be the identifier for a valid automated snapshot whose state is <code>available</code>.</p> </li> </ul>
     * 
     * @var string $sourceSnapshotIdentifier
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SourceSnapshotIdentifier')]
    public string $sourceSnapshotIdentifier;
    
    /**
     * <p>The identifier given to the new manual snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank.</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be unique for the Amazon Web Services account that is making the request.</p> </li> </ul>
     * 
     * @var string $targetSnapshotIdentifier
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TargetSnapshotIdentifier')]
    public string $targetSnapshotIdentifier;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETCopyClusterSnapshotVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETCopyClusterSnapshotActionEnum::COPY_CLUSTER_SNAPSHOT;
		$this->manualSnapshotRetentionPeriod = null;
		$this->sourceSnapshotClusterIdentifier = null;
		$this->sourceSnapshotIdentifier = "";
		$this->targetSnapshotIdentifier = "";
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETCopyClusterSnapshotVersionEnum::TWO_THOUSAND_AND_TWELVE1201;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
