"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import taskidrange as shared_taskidrange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskDependencies:
    r"""Specifies any dependencies of a task.  Any task that is explicitly specified or within a dependency range must complete before the dependant task will be scheduled."""
    
    task_id_ranges: Optional[list[shared_taskidrange.TaskIDRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskIdRanges'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the list of task ranges that must complete before this task can be scheduled."""  
    task_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskIds'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the list of task ids that must complete before this task can be scheduled."""  
    