/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attribute } from "./attribute";
import { Measurement } from "./measurement";
import { Metric } from "./metric";
import { Transform } from "./transform";
import { Expose, Type } from "class-transformer";

/**
 * Contains a property type, which can be one of <code>attribute</code>, <code>measurement</code>, <code>metric</code>, or <code>transform</code>.
 */
export class PropertyType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attribute" })
  @Type(() => Attribute)
  attribute?: Attribute;

  @SpeakeasyMetadata()
  @Expose({ name: "measurement" })
  @Type(() => Measurement)
  measurement?: Measurement;

  @SpeakeasyMetadata()
  @Expose({ name: "metric" })
  @Type(() => Metric)
  metric?: Metric;

  @SpeakeasyMetadata()
  @Expose({ name: "transform" })
  @Type(() => Transform)
  transform?: Transform;
}
