// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCategoryVideosDirectionEnum - The sort direction of the results.
type GetCategoryVideosDirectionEnum string

const (
	GetCategoryVideosDirectionEnumAsc  GetCategoryVideosDirectionEnum = "asc"
	GetCategoryVideosDirectionEnumDesc GetCategoryVideosDirectionEnum = "desc"
)

func (e *GetCategoryVideosDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetCategoryVideosDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCategoryVideosDirectionEnum: %s", s)
	}
}

// GetCategoryVideosFilterEnum - The attribute by which to filter the results.
//
// Option descriptions:
//   - `conditional_featured` - Featured (promoted) videos
type GetCategoryVideosFilterEnum string

const (
	GetCategoryVideosFilterEnumConditionalFeatured GetCategoryVideosFilterEnum = "conditional_featured"
	GetCategoryVideosFilterEnumEmbeddable          GetCategoryVideosFilterEnum = "embeddable"
)

func (e *GetCategoryVideosFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "conditional_featured":
		fallthrough
	case "embeddable":
		*e = GetCategoryVideosFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCategoryVideosFilterEnum: %s", s)
	}
}

// GetCategoryVideosSortEnum - The way to sort the results.
type GetCategoryVideosSortEnum string

const (
	GetCategoryVideosSortEnumAlphabetical GetCategoryVideosSortEnum = "alphabetical"
	GetCategoryVideosSortEnumComments     GetCategoryVideosSortEnum = "comments"
	GetCategoryVideosSortEnumDate         GetCategoryVideosSortEnum = "date"
	GetCategoryVideosSortEnumDuration     GetCategoryVideosSortEnum = "duration"
	GetCategoryVideosSortEnumFeatured     GetCategoryVideosSortEnum = "featured"
	GetCategoryVideosSortEnumLikes        GetCategoryVideosSortEnum = "likes"
	GetCategoryVideosSortEnumPlays        GetCategoryVideosSortEnum = "plays"
	GetCategoryVideosSortEnumRelevant     GetCategoryVideosSortEnum = "relevant"
)

func (e *GetCategoryVideosSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "comments":
		fallthrough
	case "date":
		fallthrough
	case "duration":
		fallthrough
	case "featured":
		fallthrough
	case "likes":
		fallthrough
	case "plays":
		fallthrough
	case "relevant":
		*e = GetCategoryVideosSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCategoryVideosSortEnum: %s", s)
	}
}

type GetCategoryVideosRequest struct {
	// The name of the category.
	Category string `pathParam:"style=simple,explode=false,name=category"`
	// The sort direction of the results.
	Direction *GetCategoryVideosDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	//
	// Option descriptions:
	//  * `conditional_featured` - Featured (promoted) videos
	//
	Filter *GetCategoryVideosFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// Whether to filter the results by embeddable videos (`true`) or non-embeddable videos (`false`). Required only if **filter** is `embeddable`.
	FilterEmbeddable *bool `queryParam:"style=form,explode=true,name=filter_embeddable"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetCategoryVideosSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetCategoryVideosResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// No such category exists.
	LegacyError *shared.LegacyError
	// The videos were returned.
	Videos []shared.Video
}
