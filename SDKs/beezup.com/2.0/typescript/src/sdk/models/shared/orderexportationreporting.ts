/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrderExportationReportingProcessingStatusEnum } from "./orderexportationreportingprocessingstatusenum";
import { SourceTypeEnum } from "./sourcetypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Represent the reporting of the Order report exportations
 */
export class OrderExportationReporting extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "abortionUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  abortionUtcDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "beginUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  beginUtcDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "blobNameUri" })
  blobNameUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "endUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endUtcDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "enqueuedUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  enqueuedUtcDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "executionUUID" })
  executionUUID: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expirationUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expirationUtcDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "failureUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  failureUtcDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress: string;

  /**
   * Raw representation of the JSON
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jsonCriteria" })
  jsonCriteria?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateUtcDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "orderCount" })
  orderCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "processingStatus" })
  processingStatus: OrderExportationReportingProcessingStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "remainingOrderCount" })
  remainingOrderCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "resumedUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  resumedUtcDate?: Date;

  /**
   * Indicates the origin of the operation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceType" })
  sourceType: SourceTypeEnum;

  /**
   * The user identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceUserId" })
  sourceUserId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceUserName" })
  sourceUserName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "suspendedUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  suspendedUtcDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "timeoutDuration" })
  timeoutDuration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "warningMessage" })
  warningMessage?: string;
}
