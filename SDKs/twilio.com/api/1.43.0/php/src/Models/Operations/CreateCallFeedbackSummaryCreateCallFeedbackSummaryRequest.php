<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateCallFeedbackSummaryCreateCallFeedbackSummaryRequest
{
    /**
     * Only include feedback given on or before this date. Format is `YYYY-MM-DD` and specified in UTC.
     * 
     * @var \DateTime $endDate
     */
	#[SpeakeasyMetadata('form:name=EndDate,dateTimeFormat=Y-m-d')]
    public \DateTime $endDate;
    
    /**
     * Whether to also include Feedback resources from all subaccounts. `true` includes feedback from all subaccounts and `false`, the default, includes feedback from only the specified account.
     * 
     * @var ?bool $includeSubaccounts
     */
	#[SpeakeasyMetadata('form:name=IncludeSubaccounts')]
    public ?bool $includeSubaccounts = null;
    
    /**
     * Only include feedback given on or after this date. Format is `YYYY-MM-DD` and specified in UTC.
     * 
     * @var \DateTime $startDate
     */
	#[SpeakeasyMetadata('form:name=StartDate,dateTimeFormat=Y-m-d')]
    public \DateTime $startDate;
    
    /**
     * The URL that we will request when the feedback summary is complete.
     * 
     * @var ?string $statusCallback
     */
	#[SpeakeasyMetadata('form:name=StatusCallback')]
    public ?string $statusCallback = null;
    
    /**
     * The HTTP method (`GET` or `POST`) we use to make the request to the `StatusCallback` URL.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateCallFeedbackSummaryCreateCallFeedbackSummaryRequestStatusCallbackMethodEnum $statusCallbackMethod
     */
	#[SpeakeasyMetadata('form:name=StatusCallbackMethod')]
    public ?CreateCallFeedbackSummaryCreateCallFeedbackSummaryRequestStatusCallbackMethodEnum $statusCallbackMethod = null;
    
	public function __construct()
	{
		$this->endDate = new \DateTime();
		$this->includeSubaccounts = null;
		$this->startDate = new \DateTime();
		$this->statusCallback = null;
		$this->statusCallbackMethod = null;
	}
}
