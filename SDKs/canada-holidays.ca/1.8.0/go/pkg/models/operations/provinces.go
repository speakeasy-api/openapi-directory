// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProvincesOptionalEnum - A boolean parameter. If false or 0 (default), will return only legislated holidays. If true or 1, will return optional holidays from Alberta and BC.
type ProvincesOptionalEnum string

const (
	ProvincesOptionalEnumOne   ProvincesOptionalEnum = "1"
	ProvincesOptionalEnumZero  ProvincesOptionalEnum = "0"
	ProvincesOptionalEnumTrue  ProvincesOptionalEnum = "true"
	ProvincesOptionalEnumFalse ProvincesOptionalEnum = "false"
)

func (e *ProvincesOptionalEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "0":
		fallthrough
	case "true":
		fallthrough
	case "false":
		*e = ProvincesOptionalEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProvincesOptionalEnum: %s", s)
	}
}

type ProvincesRequest struct {
	// A boolean parameter. If false or 0 (default), will return only legislated holidays. If true or 1, will return optional holidays from Alberta and BC.
	Optional *ProvincesOptionalEnum `queryParam:"style=form,explode=true,name=optional"`
	// A calendar year
	Year *int64 `queryParam:"style=form,explode=true,name=year"`
}

// Provinces200ApplicationJSON - OK
type Provinces200ApplicationJSON struct {
	Provinces []shared.Province `json:"provinces,omitempty"`
}

type ProvincesResponse struct {
	ContentType string
	// OK
	Provinces200ApplicationJSONObject *Provinces200ApplicationJSON
	StatusCode                        int
	RawResponse                       *http.Response
}
