<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateInventoryTaskRequest - The request payload containing the version, feedType, and optional filterCriteria.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateInventoryTaskRequest
{
    /**
     * The feed type associated with the inventory task you are about to create. Use a <strong>feedType</strong> that is available for your API. Presently, only one feed type is available:<ul><li><code>LMS_ACTIVE_INVENTORY_REPORT</code></li></ul><br/>See <a href="/api-docs/sell/static/feed/lms-feeds-quick-reference.html#merchant-data-reports-download-feed-types" target="_blank">Report download feed types</a> for more information.
     * 
     * @var ?string $feedType
     */
	#[\JMS\Serializer\Annotation\SerializedName('feedType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $feedType = null;
    
    /**
     * The container for the filter fields. This container is used to set the filter criteria for the order report. A seller can retrieve listings for a specified format.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryFilterCriteria $filterCriteria
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterCriteria')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryFilterCriteria')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryFilterCriteria $filterCriteria = null;
    
    /**
     * The schemaVersion/version number of the file format (use the schema version of the API to which you are programming):<ul><li><a href="/api-docs/sell/static/feed/lms-feeds-quick-reference.html#Version" target="_blank">Version Details / Schema Version</a></li><li><a href="/api-docs/sell/static/feed/fx-feeds-quick-reference.html#schema" target="_blank">Seller Hub feed schema version</a></li></ul>
     * 
     * @var ?string $schemaVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('schemaVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schemaVersion = null;
    
	public function __construct()
	{
		$this->feedType = null;
		$this->filterCriteria = null;
		$this->schemaVersion = null;
	}
}
