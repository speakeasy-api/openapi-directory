<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PromotionReportDetail - This type defines the fields in a promotion-level report.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PromotionReportDetail
{
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $averageItemDiscount
     */
	#[\JMS\Serializer\Annotation\SerializedName('averageItemDiscount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $averageItemDiscount = null;
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $averageItemRevenue
     */
	#[\JMS\Serializer\Annotation\SerializedName('averageItemRevenue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $averageItemRevenue = null;
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $averageOrderDiscount
     */
	#[\JMS\Serializer\Annotation\SerializedName('averageOrderDiscount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $averageOrderDiscount = null;
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $averageOrderRevenue
     */
	#[\JMS\Serializer\Annotation\SerializedName('averageOrderRevenue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $averageOrderRevenue = null;
    
    /**
     * The <i>average order size</i> is the average number of items that each order contained in a promotion. This value is calculated as follows:  <br><br><b>itemsSoldQuantity</b> / <b>numberOfOrdersSold</b> = <b>averageOrderSize</b> 
     * 
     * @var ?string $averageOrderSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('averageOrderSize')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $averageOrderSize = null;
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $baseSale
     */
	#[\JMS\Serializer\Annotation\SerializedName('baseSale')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $baseSale = null;
    
    /**
     * This is the quantity of items purchased in a threshold promotion where the threshold <i>has been met</i> and the discount was applied. <br><br>For example, suppose you're running a "Buy 1, get 1 at 50%" promotion on $5 socks. One buyer purchases two pairs of socks, so they pay $7.50 for both pairs (rather than the full price of $10). Your number of items sold (<b>itemsSoldQuantity</b>) would be 2 and you number of orders sold (<b>numberOfOrdersSold</b>) would be 1.
     * 
     * @var ?int $itemsSoldQuantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemsSoldQuantity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $itemsSoldQuantity = null;
    
    /**
     * This is the number of orders sold in a threshold promotion where the threshold <i>has been met</i> and the discount was applied. <br><br>For example, suppose you're running a "Buy 1, get 1 at 50%" promotion on $5 socks. One buyer purchases two pairs of socks, so they pay $7.50 for both pairs (rather than the full price of $10). Your <b>numberOfOrdersSold</b> would be 1 and your <b>itemsSoldQuantity</b> would be 2.
     * 
     * @var ?int $numberOfOrdersSold
     */
	#[\JMS\Serializer\Annotation\SerializedName('numberOfOrdersSold')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numberOfOrdersSold = null;
    
    /**
     * The <i>percentage sales lift</i> is the total dollar amount gained due to promotions. This value is calculated as follows:  <br><br> <b>promotionSale</b> / <b>totalSale</b> =  <b>percentageSalesLift</b> 
     * 
     * @var ?string $percentageSalesLift
     */
	#[\JMS\Serializer\Annotation\SerializedName('percentageSalesLift')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $percentageSalesLift = null;
    
    /**
     * The URI of the promotion report.
     * 
     * @var ?string $promotionHref
     */
	#[\JMS\Serializer\Annotation\SerializedName('promotionHref')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $promotionHref = null;
    
    /**
     * A unique eBay-assigned ID for the promotion that's generated when the promotion is created.
     * 
     * @var ?string $promotionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('promotionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $promotionId = null;
    
    /**
     * The unique eBay-assigned ID of the promotion report that is generated when the report is created.
     * 
     * @var ?string $promotionReportId
     */
	#[\JMS\Serializer\Annotation\SerializedName('promotionReportId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $promotionReportId = null;
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $promotionSale
     */
	#[\JMS\Serializer\Annotation\SerializedName('promotionSale')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $promotionSale = null;
    
    /**
     * Indicates the type of the promotion, either <code>CODED_COUPON</code>, <code>MARKDOWN_SALE</code>, <code>ORDER_DISCOUNT</code>, or <code>VOLUME_DISCOUNT</code>. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionTypeEnum'>eBay API documentation</a>
     * 
     * @var ?string $promotionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('promotionType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $promotionType = null;
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $totalDiscount
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalDiscount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $totalDiscount = null;
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $totalSale
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalSale')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $totalSale = null;
    
	public function __construct()
	{
		$this->averageItemDiscount = null;
		$this->averageItemRevenue = null;
		$this->averageOrderDiscount = null;
		$this->averageOrderRevenue = null;
		$this->averageOrderSize = null;
		$this->baseSale = null;
		$this->itemsSoldQuantity = null;
		$this->numberOfOrdersSold = null;
		$this->percentageSalesLift = null;
		$this->promotionHref = null;
		$this->promotionId = null;
		$this->promotionReportId = null;
		$this->promotionSale = null;
		$this->promotionType = null;
		$this->totalDiscount = null;
		$this->totalSale = null;
	}
}
