/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Indicates the status of the adjustment's transfer to an external accounting system, such as NetSuite.
 *
 * @remarks
 *
 */
export enum ProxyGetInvoiceItemAdjustmentTransferredToAccountingEnum {
  Processing = "Processing",
  Yes = "Yes",
  No = "No",
  Error = "Error",
  Ignore = "Ignore",
}

/**
 * Container for custom fields of an Invoice Item Adjustment object.
 *
 * @remarks
 *
 */
export class ProxyGetInvoiceItemAdjustment extends SpeakeasyBase {
  /**
   *  The ID of the account that owns the invoice.
   *
   * @remarks
   * **Values**: inherited from `Account.ID` for the invoice owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountId" })
  accountId?: string;

  /**
   *  The accounting code for the invoice item. Accounting codes group transactions that contain similar accounting attributes.
   *
   * @remarks
   * **Character limit**: 100 **Values**: inherited from `InvoiceItem.AccountingCode`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountingCode" })
  accountingCode?: string;

  /**
   *  The date when the invoice item adjustment is applied, in `yyyy-mm-dd` format. This date must be the same as the invoice's date or later.
   *
   * @remarks
   * **Character limit**: 29
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AdjustmentDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  adjustmentDate?: Date;

  /**
   *  A unique string to identify an individual invoice item adjustment.
   *
   * @remarks
   * **Character limit**: 255 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AdjustmentNumber" })
  adjustmentNumber?: string;

  /**
   *  The amount of the invoice item adjustment. The value of Amount must be positive. Use the required parameter Type to either credit or charge (debit) this amount on the invoice. **Character limit**: 16 **Values**: a valid currency amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Amount" })
  amount?: number;

  /**
   *  The ID of the Zuora user who canceled the invoice item adjustment. Zuora generates this read-only field only if the adjustment is canceled.
   *
   * @remarks
   * **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CancelledById" })
  cancelledById?: string;

  /**
   *  The date when the invoice item adjustment is canceled. Zuora generates this read-only field if this adjustment is canceled.
   *
   * @remarks
   * **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CancelledDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  cancelledDate?: Date;

  /**
   *  Use this field to record comments about the invoice item adjustment.
   *
   * @remarks
   * **Character limit**: 255 **Values**: a string of 255 characters or fewer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  /**
   *  The user ID of the person who created the invoice item.
   *
   * @remarks
   * **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedById" })
  createdById?: string;

  /**
   *  The date the invoice item was created.
   *
   * @remarks
   * **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  /**
   *  The name of the account that owns the associated invoice.
   *
   * @remarks
   *
   * **Character limit**: 50
   *
   * **Values**: inherited from `Account.Name`
   *
   * **Note**: This value changes if `Account.Name` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceItemAdjustment` do not change when `Account.Name` is updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CustomerName" })
  customerName?: string;

  /**
   *  The unique account number of the customer's account.
   *
   * @remarks
   *
   * **Character limit**: 50
   *
   * **Values**: inherited from `Account.AccountNumber`
   *
   * **Note**: This value changes if `Account.AccountNumber` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceItemAdjustment` do not change when `Account.AccountNumber` is updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CustomerNumber" })
  customerNumber?: string;

  /**
   * Object identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  /**
   *  The ID of the invoice associated with the adjustment. The adjustment invoice item is in this invoice. This field is optional if you specify a value for the `InvoiceNumber` field.
   *
   * @remarks
   * **Character limit**: 3 **Values**: a valid invoice ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceId" })
  invoiceId?: string;

  /**
   * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceItemAdjustment.IntegrationId__NS" })
  invoiceItemAdjustmentIntegrationIdNS?: string;

  /**
   * Status of the invoice item adjustment's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceItemAdjustment.IntegrationStatus__NS" })
  invoiceItemAdjustmentIntegrationStatusNS?: string;

  /**
   * Date when the invoice item adjustment was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceItemAdjustment.SyncDate__NS" })
  invoiceItemAdjustmentSyncDateNS?: string;

  /**
   *  The name of the invoice item's charge. This field is required in the Query call, but is inherited in other calls.
   *
   * @remarks
   * **Character limit**: 255 **Values**: inherited from `InvoiceItem.ChargeName`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceItemName" })
  invoiceItemName?: string;

  /**
   *  The unique identification number for the invoice that contains the invoice item. This field is optional if you specify a value for the `InvoiceId` field.
   *
   * @remarks
   * **Character limit**: 32 **Values**: a valid invoice number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceNumber" })
  invoiceNumber?: string;

  /**
   *  A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.
   *
   * @remarks
   * **Character limit**: 32 **V****alues**: a valid reason code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ReasonCode" })
  reasonCode?: string;

  /**
   *  A code to reference an object external to Zuora. For example, you can use this field to reference a case number in an external system.
   *
   * @remarks
   * **Character limit**: 60 **Values**: a string of 60 characters or fewer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ReferenceId" })
  referenceId?: string;

  /**
   *  The end date of the service period associated with the invoice item. Service ends one second before the date in this value.
   *
   * @remarks
   *
   * **Character limit**: 29
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ServiceEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceEndDate?: Date;

  /**
   *  The start date of the service period associated with the invoice item. Service ends one second before the date in this value.
   *
   * @remarks
   *
   * **Character limit**: 29
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ServiceStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceStartDate?: Date;

  /**
   *  The ID of the item specified in the SourceType field.
   *
   * @remarks
   * **Character limit**: 32 **Values**: a valid invoice item ID or taxation item ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SourceId" })
  sourceId?: string;

  /**
   *  The type of adjustment.
   *
   * @remarks
   * **Character limit**: 13 **Values**: InvoiceDetail, Tax
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SourceType" })
  sourceType?: string;

  /**
   *  The status of the invoice item adjustment. This field is required in the Query call, but is automatically generated in other calls.
   *
   * @remarks
   * **Character limit**: 9 **Values**: Canceled, Processed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;

  /**
   * Indicates the status of the adjustment's transfer to an external accounting system, such as NetSuite.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TransferredToAccounting" })
  transferredToAccounting?: ProxyGetInvoiceItemAdjustmentTransferredToAccountingEnum;

  /**
   *  The ID of the user who last updated the invoice item.
   *
   * @remarks
   * **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedById" })
  updatedById?: string;

  /**
   *  The date when the invoice item was last updated.
   *
   * @remarks
   * **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedDate?: Date;
}
