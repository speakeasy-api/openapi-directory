<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListNotificationsRequest
{
    /**
     * The kind of action which triggers the notification. Valid choices are **connect** (only for delivery receipts), **download**, **upload**, **delete**, or **all** 
     * 
     * 
     * **Note** The **all** action matches notifications set to "all", not all notifications. For example, notifications set to trigger only on delete are not included if you filter for action=all
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListNotificationsActionEnum $action
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=action')]
    public ?ListNotificationsActionEnum $action = null;
    
    /**
     * Access token required to make the API call.
     * 
     * @var string $evAccessToken
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=ev-access-token')]
    public string $evAccessToken;
    
    /**
     * API Key required to make the API call. 
     * 
     * @var string $evApiKey
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=ev-api-key')]
    public string $evApiKey;
    
    /**
     * Related records to include in the response. Valid options are **ownerUser**, **resource**, **share**
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListNotificationsIncludeEnum $include
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=include')]
    public ?ListNotificationsIncludeEnum $include = null;
    
    /**
     * Number of notification records to return. Can be used for pagination.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Starting notification record in the result set. Can be used for pagination.
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * What order the list of matches should be in. Valid sort fields are **resourcename**, **date**, **action** and **type**. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.
     * 
     * 
     * You can chose multiple options for the sort by separating them with commmas, such as "type,-date" to sort by type, then most recent.
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * Type of notification include in the list. Valid options are **file**, **folder**, **send_receipt**, **share_receipt**, **file_drop**
     * 
     * 
     * If this parameter is not used, only **file** and **folder** type notifications are included in the list.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListNotificationsTypeEnum $type
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=type')]
    public ?ListNotificationsTypeEnum $type = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->evAccessToken = "";
		$this->evApiKey = "";
		$this->include = null;
		$this->limit = null;
		$this->offset = null;
		$this->sort = null;
		$this->type = null;
	}
}
