/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleIdentityAccesscontextmanagerV1BasicLevel - `BasicLevel` is an `AccessLevel` using a set of recommended features.
 */
public class GoogleIdentityAccesscontextmanagerV1BasicLevel {
    /**
     * How the `conditions` list should be combined to determine if a request is granted this `AccessLevel`. If AND is used, each `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. If OR is used, at least one `Condition` in `conditions` must be satisfied for the `AccessLevel` to be applied. Default behavior is AND.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("combiningFunction")
    public GoogleIdentityAccesscontextmanagerV1BasicLevelCombiningFunctionEnum combiningFunction;

    public GoogleIdentityAccesscontextmanagerV1BasicLevel withCombiningFunction(GoogleIdentityAccesscontextmanagerV1BasicLevelCombiningFunctionEnum combiningFunction) {
        this.combiningFunction = combiningFunction;
        return this;
    }
    
    /**
     * Required. A list of requirements for the `AccessLevel` to be granted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditions")
    public GoogleIdentityAccesscontextmanagerV1Condition[] conditions;

    public GoogleIdentityAccesscontextmanagerV1BasicLevel withConditions(GoogleIdentityAccesscontextmanagerV1Condition[] conditions) {
        this.conditions = conditions;
        return this;
    }
    
    public GoogleIdentityAccesscontextmanagerV1BasicLevel(){}
}
