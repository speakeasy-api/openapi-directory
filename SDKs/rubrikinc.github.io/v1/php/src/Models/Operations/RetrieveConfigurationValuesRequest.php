<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class RetrieveConfigurationValuesRequest
{
    /**
     * Limit the number of matches returned.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * The name of the configuration option. Applies a filter to the configuration updates for the specified option.
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?string $name = null;
    
    /**
     * The configuration namespace. Applies a filter to the configuration updates for the specified namespace.
     * 
     * @var string $namespace
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=namespace')]
    public string $namespace;
    
    /**
     * The name of the node that require configuration values. Applies a filter specific to the name of node. When no node_id is specified, the filter shows both local and cluster-wide configurations.
     * 
     * @var ?string $nodeId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=node_id')]
    public ?string $nodeId = null;
    
    /**
     * Ignore these many matches in the beginning.
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * The timestamp for which to retrieve configuration values.
     * 
     * @var \DateTime $onDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=on_date,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public \DateTime $onDate;
    
	public function __construct()
	{
		$this->limit = null;
		$this->name = null;
		$this->namespace = "";
		$this->nodeId = null;
		$this->offset = null;
		$this->onDate = new \DateTime();
	}
}
