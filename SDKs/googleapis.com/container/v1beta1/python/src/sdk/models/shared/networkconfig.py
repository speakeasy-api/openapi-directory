"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import defaultsnatstatus as shared_defaultsnatstatus
from ..shared import dnsconfig as shared_dnsconfig
from ..shared import gatewayapiconfig as shared_gatewayapiconfig
from ..shared import serviceexternalipsconfig as shared_serviceexternalipsconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NetworkConfigDatapathProviderEnum(str, Enum):
    r"""The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation."""
    DATAPATH_PROVIDER_UNSPECIFIED = 'DATAPATH_PROVIDER_UNSPECIFIED'
    LEGACY_DATAPATH = 'LEGACY_DATAPATH'
    ADVANCED_DATAPATH = 'ADVANCED_DATAPATH'

class NetworkConfigPrivateIpv6GoogleAccessEnum(str, Enum):
    r"""The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)"""
    PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED = 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED'
    PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED = 'PRIVATE_IPV6_GOOGLE_ACCESS_DISABLED'
    PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE = 'PRIVATE_IPV6_GOOGLE_ACCESS_TO_GOOGLE'
    PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL = 'PRIVATE_IPV6_GOOGLE_ACCESS_BIDIRECTIONAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkConfig:
    r"""NetworkConfig reports the relative names of network & subnetwork."""
    
    datapath_provider: Optional[NetworkConfigDatapathProviderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datapathProvider'), 'exclude': lambda f: f is None }})
    r"""The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation."""  
    default_snat_status: Optional[shared_defaultsnatstatus.DefaultSnatStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultSnatStatus'), 'exclude': lambda f: f is None }})
    r"""DefaultSnatStatus contains the desired state of whether default sNAT should be disabled on the cluster."""  
    dns_config: Optional[shared_dnsconfig.DNSConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dnsConfig'), 'exclude': lambda f: f is None }})
    r"""DNSConfig contains the desired set of options for configuring clusterDNS."""  
    enable_intra_node_visibility: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableIntraNodeVisibility'), 'exclude': lambda f: f is None }})
    r"""Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network."""  
    enable_l4ilb_subsetting: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableL4ilbSubsetting'), 'exclude': lambda f: f is None }})
    r"""Whether L4ILB Subsetting is enabled for this cluster."""  
    gateway_api_config: Optional[shared_gatewayapiconfig.GatewayAPIConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gatewayApiConfig'), 'exclude': lambda f: f is None }})
    r"""GatewayAPIConfig contains the desired config of Gateway API on this cluster."""  
    network: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('network'), 'exclude': lambda f: f is None }})
    r"""Output only. The relative name of the Google Compute Engine network(https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. Example: projects/my-project/global/networks/my-network"""  
    private_ipv6_google_access: Optional[NetworkConfigPrivateIpv6GoogleAccessEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privateIpv6GoogleAccess'), 'exclude': lambda f: f is None }})
    r"""The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services (all access will be via IPv4)"""  
    service_external_ips_config: Optional[shared_serviceexternalipsconfig.ServiceExternalIPsConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceExternalIpsConfig'), 'exclude': lambda f: f is None }})
    r"""Config to block services with externalIPs field."""  
    subnetwork: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subnetwork'), 'exclude': lambda f: f is None }})
    r"""Output only. The relative name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the cluster is connected. Example: projects/my-project/regions/us-central1/subnetworks/my-subnet"""  
    