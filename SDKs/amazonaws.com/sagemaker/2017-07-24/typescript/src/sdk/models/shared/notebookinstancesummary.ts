/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstanceTypeEnum } from "./instancetypeenum";
import { NotebookInstanceStatusEnum } from "./notebookinstancestatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Provides summary information for an SageMaker notebook instance.
 */
export class NotebookInstanceSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalCodeRepositories" })
  additionalCodeRepositories?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultCodeRepository" })
  defaultCodeRepository?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceType" })
  instanceType?: InstanceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "NotebookInstanceArn" })
  notebookInstanceArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotebookInstanceLifecycleConfigName" })
  notebookInstanceLifecycleConfigName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotebookInstanceName" })
  notebookInstanceName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotebookInstanceStatus" })
  notebookInstanceStatus?: NotebookInstanceStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Url" })
  url?: string;
}
