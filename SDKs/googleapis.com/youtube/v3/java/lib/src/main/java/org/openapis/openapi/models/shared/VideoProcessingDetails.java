/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VideoProcessingDetails - Describes processing status and progress and availability of some other Video resource parts.
 */
public class VideoProcessingDetails {
    /**
     * This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("editorSuggestionsAvailability")
    public String editorSuggestionsAvailability;
    public VideoProcessingDetails withEditorSuggestionsAvailability(String editorSuggestionsAvailability) {
        this.editorSuggestionsAvailability = editorSuggestionsAvailability;
        return this;
    }
    
    /**
     * This value indicates whether file details are available for the uploaded video. You can retrieve a video's file details by requesting the fileDetails part in your videos.list() request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileDetailsAvailability")
    public String fileDetailsAvailability;
    public VideoProcessingDetails withFileDetailsAvailability(String fileDetailsAvailability) {
        this.fileDetailsAvailability = fileDetailsAvailability;
        return this;
    }
    
    /**
     * The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property's value is failed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingFailureReason")
    public VideoProcessingDetailsProcessingFailureReasonEnum processingFailureReason;
    public VideoProcessingDetails withProcessingFailureReason(VideoProcessingDetailsProcessingFailureReasonEnum processingFailureReason) {
        this.processingFailureReason = processingFailureReason;
        return this;
    }
    
    /**
     * This value indicates whether the video processing engine has generated suggestions that might improve YouTube's ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingIssuesAvailability")
    public String processingIssuesAvailability;
    public VideoProcessingDetails withProcessingIssuesAvailability(String processingIssuesAvailability) {
        this.processingIssuesAvailability = processingIssuesAvailability;
        return this;
    }
    
    /**
     * Video processing progress and completion time estimate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingProgress")
    public VideoProcessingDetailsProcessingProgress processingProgress;
    public VideoProcessingDetails withProcessingProgress(VideoProcessingDetailsProcessingProgress processingProgress) {
        this.processingProgress = processingProgress;
        return this;
    }
    
    /**
     * The video's processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingStatus")
    public VideoProcessingDetailsProcessingStatusEnum processingStatus;
    public VideoProcessingDetails withProcessingStatus(VideoProcessingDetailsProcessingStatusEnum processingStatus) {
        this.processingStatus = processingStatus;
        return this;
    }
    
    /**
     * This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video's metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagSuggestionsAvailability")
    public String tagSuggestionsAvailability;
    public VideoProcessingDetails withTagSuggestionsAvailability(String tagSuggestionsAvailability) {
        this.tagSuggestionsAvailability = tagSuggestionsAvailability;
        return this;
    }
    
    /**
     * This value indicates whether thumbnail images have been generated for the video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnailsAvailability")
    public String thumbnailsAvailability;
    public VideoProcessingDetails withThumbnailsAvailability(String thumbnailsAvailability) {
        this.thumbnailsAvailability = thumbnailsAvailability;
        return this;
    }
    
}
