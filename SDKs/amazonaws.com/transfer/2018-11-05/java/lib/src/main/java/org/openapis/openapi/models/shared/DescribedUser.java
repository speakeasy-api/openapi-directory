/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DescribedUser - Describes the properties of a user that was specified.
 */
public class DescribedUser {
    @JsonProperty("Arn")
    public String arn;
    public DescribedUser withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeDirectory")
    public String homeDirectory;
    public DescribedUser withHomeDirectory(String homeDirectory) {
        this.homeDirectory = homeDirectory;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeDirectoryMappings")
    public HomeDirectoryMapEntry[] homeDirectoryMappings;
    public DescribedUser withHomeDirectoryMappings(HomeDirectoryMapEntry[] homeDirectoryMappings) {
        this.homeDirectoryMappings = homeDirectoryMappings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeDirectoryType")
    public HomeDirectoryTypeEnum homeDirectoryType;
    public DescribedUser withHomeDirectoryType(HomeDirectoryTypeEnum homeDirectoryType) {
        this.homeDirectoryType = homeDirectoryType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Policy")
    public String policy;
    public DescribedUser withPolicy(String policy) {
        this.policy = policy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PosixProfile")
    public PosixProfile posixProfile;
    public DescribedUser withPosixProfile(PosixProfile posixProfile) {
        this.posixProfile = posixProfile;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Role")
    public String role;
    public DescribedUser withRole(String role) {
        this.role = role;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SshPublicKeys")
    public SshPublicKey[] sshPublicKeys;
    public DescribedUser withSshPublicKeys(SshPublicKey[] sshPublicKeys) {
        this.sshPublicKeys = sshPublicKeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public DescribedUser withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserName")
    public String userName;
    public DescribedUser withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
}
