"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ErrorTypeEnum(str, Enum):
    r"""Identifies the type of error."""
    INVALID_REQUEST = 'invalid-request'
    INVALID_APPLICATION = 'invalid-application'
    INVALID_FEED_CONNECTION = 'invalid-feed-connection'
    DUPLICATE_STATEMENT = 'duplicate-statement'
    INVALID_END_BALANCE = 'invalid-end-balance'
    INVALID_START_AND_END_DATE = 'invalid-start-and-end-date'
    INVALID_START_DATE = 'invalid-start-date'
    INTERNAL_ERROR = 'internal-error'
    FEED_ALREADY_CONNECTED_IN_CURRENT_ORGANISATION = 'feed-already-connected-in-current-organisation'
    INVALID_END_DATE = 'invalid-end-date'
    STATEMENT_NOT_FOUND = 'statement-not-found'
    FEED_CONNECTED_IN_DIFFERENT_ORGANISATION = 'feed-connected-in-different-organisation'
    FEED_ALREADY_CONNECTED_IN_DIFFERENT_ORGANISATION = 'feed-already-connected-in-different-organisation'
    BANK_FEED_NOT_FOUND = 'bank-feed-not-found'
    INVALID_COUNTRY_SPECIFIED = 'invalid-country-specified'
    INVALID_ORGANISATION_BANK_FEEDS = 'invalid-organisation-bank-feeds'
    INVALID_ORGANISATION_MULTI_CURRENCY = 'invalid-organisation-multi-currency'
    INVALID_FEED_CONNECTION_FOR_ORGANISATION = 'invalid-feed-connection-for-organisation'
    INVALID_USER_ROLE = 'invalid-user-role'
    ACCOUNT_NOT_VALID = 'account-not-valid'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Error:
    r"""On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json."""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Human readable detailed error description."""  
    status: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The numeric HTTP Status Code, e.g. 404"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Human readable high level error description."""  
    type: Optional[ErrorTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Identifies the type of error."""  
    