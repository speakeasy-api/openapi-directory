<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RoleAssignment - Defines an assignment of a role.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RoleAssignment
{
    /**
     * The unique ID of the entity this role is assigned toâ€”either the `user_id` of a user, the `group_id` of a group, or the `uniqueId` of a service account as defined in [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts).
     * 
     * @var ?string $assignedTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignedTo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $assignedTo = null;
    
    /**
     * Output only. The type of the assignee (`USER` or `GROUP`).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RoleAssignmentAssigneeTypeEnum $assigneeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('assigneeType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RoleAssignmentAssigneeTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RoleAssignmentAssigneeTypeEnum $assigneeType = null;
    
    /**
     * ETag of the resource.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * The type of the API resource. This is always `admin#directory#roleAssignment`.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to.
     * 
     * @var ?string $orgUnitId
     */
	#[\JMS\Serializer\Annotation\SerializedName('orgUnitId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $orgUnitId = null;
    
    /**
     * ID of this roleAssignment.
     * 
     * @var ?string $roleAssignmentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('roleAssignmentId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $roleAssignmentId = null;
    
    /**
     * The ID of the role that is assigned.
     * 
     * @var ?string $roleId
     */
	#[\JMS\Serializer\Annotation\SerializedName('roleId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $roleId = null;
    
    /**
     * The scope in which this role is assigned.
     * 
     * @var ?string $scopeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('scopeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scopeType = null;
    
	public function __construct()
	{
		$this->assignedTo = null;
		$this->assigneeType = null;
		$this->etag = null;
		$this->kind = null;
		$this->orgUnitId = null;
		$this->roleAssignmentId = null;
		$this->roleId = null;
		$this->scopeType = null;
	}
}
