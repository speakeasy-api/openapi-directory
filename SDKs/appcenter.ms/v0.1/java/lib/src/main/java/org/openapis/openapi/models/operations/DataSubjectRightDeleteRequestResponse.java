/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class DataSubjectRightDeleteRequestResponse {
    
    public String contentType;
    public DataSubjectRightDeleteRequestResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Data subject right delete request has been accepted.
     */
    
    public DataSubjectRightDeleteRequest202ApplicationJSON dataSubjectRightDeleteRequest202ApplicationJSONObject;
    public DataSubjectRightDeleteRequestResponse withDataSubjectRightDeleteRequest202ApplicationJSONObject(DataSubjectRightDeleteRequest202ApplicationJSON dataSubjectRightDeleteRequest202ApplicationJSONObject) {
        this.dataSubjectRightDeleteRequest202ApplicationJSONObject = dataSubjectRightDeleteRequest202ApplicationJSONObject;
        return this;
    }
    
    /**
     * Error code with reason
     */
    
    public DataSubjectRightDeleteRequestDefaultApplicationJSON dataSubjectRightDeleteRequestDefaultApplicationJSONObject;
    public DataSubjectRightDeleteRequestResponse withDataSubjectRightDeleteRequestDefaultApplicationJSONObject(DataSubjectRightDeleteRequestDefaultApplicationJSON dataSubjectRightDeleteRequestDefaultApplicationJSONObject) {
        this.dataSubjectRightDeleteRequestDefaultApplicationJSONObject = dataSubjectRightDeleteRequestDefaultApplicationJSONObject;
        return this;
    }
    
    
    public java.util.Map<String, String[]> headers;
    public DataSubjectRightDeleteRequestResponse withHeaders(java.util.Map<String, String[]> headers) {
        this.headers = headers;
        return this;
    }
    
    
    public Integer statusCode;
    public DataSubjectRightDeleteRequestResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public DataSubjectRightDeleteRequestResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
}
