"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimensionproperties as shared_dimensionproperties
from ..shared import rowdata as shared_rowdata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GridData:
    r"""Data in the grid, as well as metadata about the dimensions."""
    
    column_metadata: Optional[list[shared_dimensionproperties.DimensionProperties]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columnMetadata'), 'exclude': lambda f: f is None }})
    r"""Metadata about the requested columns in the grid, starting with the column in start_column."""  
    row_data: Optional[list[shared_rowdata.RowData]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowData'), 'exclude': lambda f: f is None }})
    r"""The data in the grid, one entry per row, starting with the row in startRow. The values in RowData will correspond to columns starting at start_column."""  
    row_metadata: Optional[list[shared_dimensionproperties.DimensionProperties]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowMetadata'), 'exclude': lambda f: f is None }})
    r"""Metadata about the requested rows in the grid, starting with the row in start_row."""  
    start_column: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startColumn'), 'exclude': lambda f: f is None }})
    r"""The first column this GridData refers to, zero-based."""  
    start_row: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startRow'), 'exclude': lambda f: f is None }})
    r"""The first row this GridData refers to, zero-based."""  
    