/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccessTypeEnum } from "./accesstypeenum";
import { EnvironmentAccessModel } from "./environmentaccessmodel";
import { EnvironmentAccessTypeEnum } from "./environmentaccesstypeenum";
import { ProductModel } from "./productmodel";
import { Expose, Type } from "class-transformer";

/**
 * When everything is ok, the permission group data returned.
 */
export class PermissionGroupModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accessType" })
  accessType?: AccessTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "canCreateOrUpdateConfig" })
  canCreateOrUpdateConfig?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canCreateOrUpdateEnvironment" })
  canCreateOrUpdateEnvironment?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canCreateOrUpdateSegments" })
  canCreateOrUpdateSegments?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canCreateOrUpdateSetting" })
  canCreateOrUpdateSetting?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canCreateOrUpdateTag" })
  canCreateOrUpdateTag?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canDeleteConfig" })
  canDeleteConfig?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canDeleteEnvironment" })
  canDeleteEnvironment?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canDeleteSegments" })
  canDeleteSegments?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canDeleteSetting" })
  canDeleteSetting?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canDeleteTag" })
  canDeleteTag?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canManageIntegrations" })
  canManageIntegrations?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canManageMembers" })
  canManageMembers?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canManageProductPreferences" })
  canManageProductPreferences?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canManageWebhook" })
  canManageWebhook?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canRotateSdkKey" })
  canRotateSDKKey?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canTagSetting" })
  canTagSetting?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canUseExportImport" })
  canUseExportImport?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canViewProductAuditLog" })
  canViewProductAuditLog?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canViewProductStatistics" })
  canViewProductStatistics?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canViewSdkKey" })
  canViewSDKKey?: boolean;

  @SpeakeasyMetadata({ elemType: EnvironmentAccessModel })
  @Expose({ name: "environmentAccesses" })
  @Type(() => EnvironmentAccessModel)
  environmentAccesses?: EnvironmentAccessModel[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "newEnvironmentAccessType" })
  newEnvironmentAccessType?: EnvironmentAccessTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "permissionGroupId" })
  permissionGroupId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "product" })
  @Type(() => ProductModel)
  product?: ProductModel;
}
