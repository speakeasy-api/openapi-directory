/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PricePerBuyer } from "./priceperbuyer";
import { Expose, Type } from "class-transformer";

export class DealTermsNonGuaranteedAuctionTerms extends SpeakeasyBase {
  /**
   * True if open auction buyers are allowed to compete with invited buyers in this private auction (buyer-readonly).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoOptimizePrivateAuction" })
  autoOptimizePrivateAuction?: boolean;

  /**
   * Reserve price for the specified buyer.
   */
  @SpeakeasyMetadata({ elemType: PricePerBuyer })
  @Expose({ name: "reservePricePerBuyers" })
  @Type(() => PricePerBuyer)
  reservePricePerBuyers?: PricePerBuyer[];
}
