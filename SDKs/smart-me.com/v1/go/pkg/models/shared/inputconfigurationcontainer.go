// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InputConfigurationContainerTypeEnum - The Type of the output
type InputConfigurationContainerTypeEnum string

const (
	InputConfigurationContainerTypeEnumTariffInput  InputConfigurationContainerTypeEnum = "TariffInput"
	InputConfigurationContainerTypeEnumDigitalInput InputConfigurationContainerTypeEnum = "DigitalInput"
)

func (e *InputConfigurationContainerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TariffInput":
		fallthrough
	case "DigitalInput":
		*e = InputConfigurationContainerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InputConfigurationContainerTypeEnum: %s", s)
	}
}

// InputConfigurationContainer - Configuration for the input of a meter (digital inputs)
type InputConfigurationContainer struct {
	// The Name of the Input
	Name *string `json:"Name,omitempty"`
	// The number of the Input. (1 for Input 1)
	Number *int `json:"Number,omitempty"`
	// The visualization text for an OFF action
	OffText *string `json:"OffText,omitempty"`
	// The visualization text for an ON action
	OnText *string `json:"OnText,omitempty"`
	// The Type of the output
	Type *InputConfigurationContainerTypeEnum `json:"Type,omitempty"`
}
