// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetManyRecurringPaymentsRequest struct {
	RequestBody []byte `request:"mediaType=text/plain"`
	// true / false
	IsActive *string `queryParam:"style=form,explode=true,name=is_active"`
	Limit    *string `queryParam:"style=form,explode=true,name=limit"`
	Offset   *string `queryParam:"style=form,explode=true,name=offset"`
	// "WAITING_PAY" / "PAID" /  "PARTIALLY_PAID" / "EXPIRED"
	Status             *string `queryParam:"style=form,explode=true,name=status"`
	SubscriptionPlanID *string `queryParam:"style=form,explode=true,name=subscription_plan_id"`
	XAPIKey            *string `header:"style=simple,explode=false,name=x-api-key"`
}

type GetManyRecurringPayments200ApplicationJSONResultSubscriber struct {
	Email        *string `json:"email,omitempty"`
	SubPartnerID *string `json:"sub_partner_id,omitempty"`
}

type GetManyRecurringPayments200ApplicationJSONResult struct {
	CreatedAt          *string                                                     `json:"created_at,omitempty"`
	ExpireDate         *string                                                     `json:"expire_date,omitempty"`
	ID                 *string                                                     `json:"id,omitempty"`
	IsActive           *bool                                                       `json:"is_active,omitempty"`
	Status             *string                                                     `json:"status,omitempty"`
	Subscriber         *GetManyRecurringPayments200ApplicationJSONResultSubscriber `json:"subscriber,omitempty"`
	SubscriptionPlanID *string                                                     `json:"subscription_plan_id,omitempty"`
	UpdatedAt          *string                                                     `json:"updated_at,omitempty"`
}

// GetManyRecurringPayments200ApplicationJSON - 200
type GetManyRecurringPayments200ApplicationJSON struct {
	Count  *float64                                           `json:"count,omitempty"`
	Result []GetManyRecurringPayments200ApplicationJSONResult `json:"result,omitempty"`
}

type GetManyRecurringPaymentsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// 200
	GetManyRecurringPayments200ApplicationJSONObject *GetManyRecurringPayments200ApplicationJSON
}
