// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type JobMonitoringInfo struct {
	// Amount of data to transfer in bytes.
	DataToTransfer *int64 `json:"dataToTransfer,omitempty"`
	// The amount of data transferred as part of the job in bytes.
	DataTransferred *int64 `json:"dataTransferred,omitempty"`
	// The number of seconds since the job started to active jobs. The number of seconds the job ran for completed jobs.
	Duration *int64 `json:"duration,omitempty"`
	// End time of the job. Leave this value empty for queued and running jobs.
	EndTime *time.Time `json:"endTime,omitempty"`
	// Description of error information for the job.
	ErrorInfo *string `json:"errorInfo,omitempty"`
	// The event series id associated with the job.
	EventSeriesID string `json:"eventSeriesId"`
	// A Boolean value that determines whether or not the job associated with the event is a first full snapshot backup.
	IsFirstFullSnapshot *bool `json:"isFirstFullSnapshot,omitempty"`
	// A boolean value indication if the job is a log related job.
	IsLogTask bool `json:"isLogTask"`
	// A boolean value indication if the job is a an on demand job.
	IsOnDemand bool `json:"isOnDemand"`
	// Monitoring state of the job used for monitoring tabs.
	JobMonitoringState JobMonitoringStateEnum `json:"jobMonitoringState"`
	// Monitoring status of the job break down.
	JobStatus JobMonitoringStatusEnum `json:"jobStatus"`
	// Task type.
	JobType JobMonitoringTaskTypeEnum `json:"jobType"`
	// Time of the last successful job of the same job type. The return value is None if no successful jobs are present.
	LastSuccessfulJobTime *time.Time `json:"lastSuccessfulJobTime,omitempty"`
	// The time the status for the job has been updated.
	LastUpdatedTime time.Time `json:"lastUpdatedTime"`
	// Id of the location of the object.
	LocationID *string `json:"locationId,omitempty"`
	// Location Name.
	LocationName *string `json:"locationName,omitempty"`
	// The maximum number of times the job will run in case of a failure.
	MaximumAttemptsForJob *int `json:"maximumAttemptsForJob,omitempty"`
	// Expected start time of the next job of the same job type. The return value is None if no new job is scheduled.
	NextJobTime *time.Time `json:"nextJobTime,omitempty"`
	// Id of the node the job is running on.
	NodeID *string `json:"nodeId,omitempty"`
	// The managed id of the object.
	ObjectID string `json:"objectId"`
	// The object size in bytes.
	ObjectLogicalSize *int64 `json:"objectLogicalSize,omitempty"`
	// The name of the object in the job.
	ObjectName *string `json:"objectName,omitempty"`
	// Object types that are reported on.
	ObjectType *ReportableObjectTypeEnum `json:"objectType,omitempty"`
	// The number of times the job has retired.
	RetryCount *int `json:"retryCount,omitempty"`
	// Monitoring retry status of the job (default is NotRetried).
	RetryStatus JobMonitoringRetryStatusEnum `json:"retryStatus"`
	// Sla Domain Id.
	SLADomainID *string `json:"slaDomainId,omitempty"`
	// Sla Domain name.
	SLADomainName *string `json:"slaDomainName,omitempty"`
	// For replication jobs, this stores the source cluster name. Leave this value empty for other jobs.
	SourceClusterName *string `json:"sourceClusterName,omitempty"`
	// Start time for running or completed jobs. It is the scheduled start time for Queued jobs.
	StartTime time.Time `json:"startTime"`
	// The throughput for running or completed jobs (measured in bytes/s). When no running or completed jobs exist no value is provided.
	Throughput *int64 `json:"throughput,omitempty"`
	// The number of warning events in the event series associated with the job.
	WarningCount *int `json:"warningCount,omitempty"`
}
