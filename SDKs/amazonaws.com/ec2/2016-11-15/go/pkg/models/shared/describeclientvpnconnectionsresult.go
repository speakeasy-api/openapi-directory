// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum - The state of the client connection.
type DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum string

const (
	DescribeClientVpnConnectionsResultConnectionsStatusCodeEnumActive            DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum = "active"
	DescribeClientVpnConnectionsResultConnectionsStatusCodeEnumFailedToTerminate DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum = "failed-to-terminate"
	DescribeClientVpnConnectionsResultConnectionsStatusCodeEnumTerminating       DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum = "terminating"
	DescribeClientVpnConnectionsResultConnectionsStatusCodeEnumTerminated        DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum = "terminated"
)

func (e DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum) ToPointer() *DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum {
	return &e
}

func (e *DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "failed-to-terminate":
		fallthrough
	case "terminating":
		fallthrough
	case "terminated":
		*e = DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum: %v", v)
	}
}

// DescribeClientVpnConnectionsResultConnectionsStatus - The current state of the client connection.
type DescribeClientVpnConnectionsResultConnectionsStatus struct {
	Code    *DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum
	Message *string
}

// DescribeClientVpnConnectionsResultConnections - Describes a client connection.
type DescribeClientVpnConnectionsResultConnections struct {
	ClientIP                  *string
	ClientVpnEndpointID       *string
	CommonName                *string
	ConnectionEndTime         *string
	ConnectionEstablishedTime *string
	ConnectionID              *string
	EgressBytes               *string
	EgressPackets             *string
	IngressBytes              *string
	IngressPackets            *string
	PostureComplianceStatuses []string
	Status                    *DescribeClientVpnConnectionsResultConnectionsStatus
	Timestamp                 *string
	Username                  *string
}

// DescribeClientVpnConnectionsResult - Success
type DescribeClientVpnConnectionsResult struct {
	Connections []DescribeClientVpnConnectionsResultConnections
	NextToken   *string
}
