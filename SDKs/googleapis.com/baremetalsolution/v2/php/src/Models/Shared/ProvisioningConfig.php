<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ProvisioningConfig - A provisioning configuration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ProvisioningConfig
{
    /**
     * Output only. URI to Cloud Console UI view of this provisioning config.
     * 
     * @var ?string $cloudConsoleUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloudConsoleUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cloudConsoleUri = null;
    
    /**
     * Optional. The user-defined identifier of the provisioning config.
     * 
     * @var ?string $customId
     */
	#[\JMS\Serializer\Annotation\SerializedName('customId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customId = null;
    
    /**
     * Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * A service account to enable customers to access instance credentials upon handover.
     * 
     * @var ?string $handoverServiceAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('handoverServiceAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $handoverServiceAccount = null;
    
    /**
     * Instances to be created.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InstanceConfig> $instances
     */
	#[\JMS\Serializer\Annotation\SerializedName('instances')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\InstanceConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $instances = null;
    
    /**
     * Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.
     * 
     * @var ?string $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $location = null;
    
    /**
     * Output only. The system-generated name of the provisioning config. This follows the UUID format.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Networks to be created.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NetworkConfig> $networks
     */
	#[\JMS\Serializer\Annotation\SerializedName('networks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NetworkConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $networks = null;
    
    /**
     * Output only. State of ProvisioningConfig.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProvisioningConfigStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProvisioningConfigStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProvisioningConfigStateEnum $state = null;
    
    /**
     * Optional status messages associated with the FAILED state.
     * 
     * @var ?string $statusMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('statusMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statusMessage = null;
    
    /**
     * A generated ticket id to track provisioning request.
     * 
     * @var ?string $ticketId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ticketId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ticketId = null;
    
    /**
     * Output only. Last update timestamp.
     * 
     * @var ?string $updateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateTime = null;
    
    /**
     * Volumes to be created.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\VolumeConfig> $volumes
     */
	#[\JMS\Serializer\Annotation\SerializedName('volumes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VolumeConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $volumes = null;
    
    /**
     * If true, VPC SC is enabled for the cluster.
     * 
     * @var ?bool $vpcScEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('vpcScEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $vpcScEnabled = null;
    
	public function __construct()
	{
		$this->cloudConsoleUri = null;
		$this->customId = null;
		$this->email = null;
		$this->handoverServiceAccount = null;
		$this->instances = null;
		$this->location = null;
		$this->name = null;
		$this->networks = null;
		$this->state = null;
		$this->statusMessage = null;
		$this->ticketId = null;
		$this->updateTime = null;
		$this->volumes = null;
		$this->vpcScEnabled = null;
	}
}
