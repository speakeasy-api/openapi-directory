/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TestOrderAddress } from "./testorderaddress";
import { TestOrderPickupDetailsPickupPerson } from "./testorderpickupdetailspickupperson";
import { Expose, Type } from "class-transformer";

export class TestOrderPickupDetails extends SpeakeasyBase {
  /**
   * Required. Code of the location defined by provider or merchant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationCode" })
  locationCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pickupLocationAddress" })
  @Type(() => TestOrderAddress)
  pickupLocationAddress?: TestOrderAddress;

  /**
   * Pickup location type. Acceptable values are: - "`locker`" - "`store`" - "`curbside`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupLocationType" })
  pickupLocationType?: string;

  /**
   * Required. all pickup persons set by users.
   */
  @SpeakeasyMetadata({ elemType: TestOrderPickupDetailsPickupPerson })
  @Expose({ name: "pickupPersons" })
  @Type(() => TestOrderPickupDetailsPickupPerson)
  pickupPersons?: TestOrderPickupDetailsPickupPerson[];
}
