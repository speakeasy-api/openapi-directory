// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateSlackChannelConfigurationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum - <p>The case severity for a support case that you want to receive notifications.</p> <p>If you specify <code>high</code> or <code>all</code>, at least one of the following parameters must be <code>true</code>:</p> <ul> <li> <p> <code>notifyOnAddCorrespondenceToCase</code> </p> </li> <li> <p> <code>notifyOnCreateOrReopenCase</code> </p> </li> <li> <p> <code>notifyOnResolveCase</code> </p> </li> </ul> <p>If you specify <code>none</code>, any of the following parameters that you specify in your request must be <code>false</code>:</p> <ul> <li> <p> <code>notifyOnAddCorrespondenceToCase</code> </p> </li> <li> <p> <code>notifyOnCreateOrReopenCase</code> </p> </li> <li> <p> <code>notifyOnResolveCase</code> </p> </li> </ul> <note> <p>If you don't specify these parameters in your request, the Amazon Web Services Support App uses the current values by default.</p> </note>
type UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum string

const (
	UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnumNone UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum = "none"
	UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnumAll  UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum = "all"
	UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnumHigh UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum = "high"
)

func (e *UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "all":
		fallthrough
	case "high":
		*e = UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum: %s", s)
	}
}

type UpdateSlackChannelConfigurationRequestBody struct {
	// The channel ID in Slack. This ID identifies a channel within a Slack workspace.
	ChannelID string `json:"channelId"`
	// The Slack channel name that you want to update.
	ChannelName *string `json:"channelName,omitempty"`
	// The Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations on Amazon Web Services. For more information, see <a href="https://docs.aws.amazon.com/awssupport/latest/user/support-app-permissions.html">Managing access to the Amazon Web Services Support App</a> in the <i>Amazon Web Services Support User Guide</i>.
	ChannelRoleArn *string `json:"channelRoleArn,omitempty"`
	// Whether you want to get notified when a support case has a new correspondence.
	NotifyOnAddCorrespondenceToCase *bool `json:"notifyOnAddCorrespondenceToCase,omitempty"`
	// <p>The case severity for a support case that you want to receive notifications.</p> <p>If you specify <code>high</code> or <code>all</code>, at least one of the following parameters must be <code>true</code>:</p> <ul> <li> <p> <code>notifyOnAddCorrespondenceToCase</code> </p> </li> <li> <p> <code>notifyOnCreateOrReopenCase</code> </p> </li> <li> <p> <code>notifyOnResolveCase</code> </p> </li> </ul> <p>If you specify <code>none</code>, any of the following parameters that you specify in your request must be <code>false</code>:</p> <ul> <li> <p> <code>notifyOnAddCorrespondenceToCase</code> </p> </li> <li> <p> <code>notifyOnCreateOrReopenCase</code> </p> </li> <li> <p> <code>notifyOnResolveCase</code> </p> </li> </ul> <note> <p>If you don't specify these parameters in your request, the Amazon Web Services Support App uses the current values by default.</p> </note>
	NotifyOnCaseSeverity *UpdateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum `json:"notifyOnCaseSeverity,omitempty"`
	// Whether you want to get notified when a support case is created or reopened.
	NotifyOnCreateOrReopenCase *bool `json:"notifyOnCreateOrReopenCase,omitempty"`
	// Whether you want to get notified when a support case is resolved.
	NotifyOnResolveCase *bool `json:"notifyOnResolveCase,omitempty"`
	// The team ID in Slack. This ID uniquely identifies a Slack workspace, such as <code>T012ABCDEFG</code>.
	TeamID string `json:"teamId"`
}

type UpdateSlackChannelConfigurationRequest struct {
	Headers UpdateSlackChannelConfigurationHeaders
	Request UpdateSlackChannelConfigurationRequestBody `request:"mediaType=application/json"`
}

type UpdateSlackChannelConfigurationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateSlackChannelConfigurationResult *shared.UpdateSlackChannelConfigurationResult
	// ValidationException
	ValidationException interface{}
}
