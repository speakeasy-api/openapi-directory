"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class Ramps:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_ramp_by_ramp_number(self, request: operations.GETRampByRampNumberRequest) -> operations.GETRampByRampNumberResponse:
        r"""Retrieve a ramp
        **Note**: This operation is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
        
        Retrieves the latest definition of a specified ramp.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GETRampByRampNumberRequest, base_url, '/v1/ramps/{rampNumber}', request)
        
        headers = utils.get_headers(request)
        
        client = self._client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GETRampByRampNumberResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GETRampByRampNumberResponseType])
                res.get_ramp_by_ramp_number_response_type = out

        return res

    def get_ramp_metrics_by_order_number(self, request: operations.GETRampMetricsByOrderNumberRequest) -> operations.GETRampMetricsByOrderNumberResponse:
        r"""List ramp metrics by order number
        **Note**: This operation is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
        
        Retrieves key ramp metrics about a specified order, including the following metrics:
        
        * TCB, TCV in the Ramp level
        * TCB, TCV in the Interval level
        * TCB, TCV, Quantity, and MRR in Interval Metrics
        * Delta TCB, Delta TCV, Delta Quantity, and Delta MRR in Interval Delta Metrics
        
        See [Key metrics for Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/F_Key_metrics_for_Ramps) for more information.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GETRampMetricsByOrderNumberRequest, base_url, '/v1/orders/{orderNumber}/ramp-metrics', request)
        
        headers = utils.get_headers(request)
        
        client = self._client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GETRampMetricsByOrderNumberResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GETRampMetricsByOrderNumberResponseType])
                res.get_ramp_metrics_by_order_number_response_type = out

        return res

    def get_ramp_metrics_by_ramp_number(self, request: operations.GETRampMetricsByRampNumberRequest) -> operations.GETRampMetricsByRampNumberResponse:
        r"""List all ramp metrics of a ramp
        **Note**: This operation is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
        
        Retrieves key metrics about a specified ramp, including the following metrics:
        
        * TCB, TCV in the Ramp level
        * TCB, TCV in the Interval level
        * TCB, TCV, Quantity, and MRR in Interval Metrics
        * Delta TCB, Delta TCV, Delta Quantity, and Delta MRR in Interval Delta Metrics
        
        See [Key metrics for Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/F_Key_metrics_for_Ramps) for more information.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GETRampMetricsByRampNumberRequest, base_url, '/v1/ramps/{rampNumber}/ramp-metrics', request)
        
        headers = utils.get_headers(request)
        
        client = self._client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GETRampMetricsByRampNumberResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GETRampMetricsByRampNumberResponseType])
                res.get_ramp_metrics_by_ramp_number_response_type = out

        return res

    def get_ramp_metrics_by_subscription_key(self, request: operations.GETRampMetricsBySubscriptionKeyRequest) -> operations.GETRampMetricsBySubscriptionKeyResponse:
        r"""List ramp metrics by subscription key
        **Note**: This operation is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
        
        Retrieves key ramp metrics about a specified subscription, including the following metrics:
        
        * TCB, TCV in the Ramp level
        * TCB, TCV in the Interval level
        * TCB, TCV, Quantity, and MRR in Interval Metrics
        * Delta TCB, Delta TCV, Delta Quantity, and Delta MRR in Interval Delta Metrics
        
        See [Key metrics for Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/F_Key_metrics_for_Ramps) for more information.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GETRampMetricsBySubscriptionKeyRequest, base_url, '/v1/subscriptions/{subscriptionKey}/ramp-metrics', request)
        
        headers = utils.get_headers(request)
        
        client = self._client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GETRampMetricsBySubscriptionKeyResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GETRampMetricsBySubscriptionKeyResponseType])
                res.get_ramp_metrics_by_subscription_key_response_type = out

        return res

    def get_ramps_by_subscription_key(self, request: operations.GETRampsBySubscriptionKeyRequest) -> operations.GETRampsBySubscriptionKeyResponse:
        r"""Retrieve a ramp by subscription key
        **Note**: This operation is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
        
         Retrieves the definition of the ramp associated with a specified subscription.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GETRampsBySubscriptionKeyRequest, base_url, '/v1/subscriptions/{subscriptionKey}/ramps', request)
        
        headers = utils.get_headers(request)
        
        client = self._client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GETRampsBySubscriptionKeyResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GETRampsBySubscriptionKeyResponseType])
                res.get_ramps_by_subscription_key_response_type = out

        return res

    