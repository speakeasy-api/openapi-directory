// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SynonymEntitySourceTypeEnum - The type of the entity for which the synonym is being created (usually a table or a sequence).
type SynonymEntitySourceTypeEnum string

const (
	SynonymEntitySourceTypeEnumDatabaseEntityTypeUnspecified     SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_UNSPECIFIED"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeSchema          SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_SCHEMA"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeTable           SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_TABLE"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeColumn          SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_COLUMN"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeConstraint      SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_CONSTRAINT"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeIndex           SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_INDEX"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeTrigger         SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_TRIGGER"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeView            SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_VIEW"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeSequence        SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_SEQUENCE"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeStoredProcedure SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_STORED_PROCEDURE"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeFunction        SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_FUNCTION"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeSynonym         SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_SYNONYM"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeDatabasePackage SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeUdt             SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_UDT"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeMaterialView    SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_MATERIAL_VIEW"
	SynonymEntitySourceTypeEnumDatabaseEntityTypeDatabase        SynonymEntitySourceTypeEnum = "DATABASE_ENTITY_TYPE_DATABASE"
)

func (e *SynonymEntitySourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DATABASE_ENTITY_TYPE_UNSPECIFIED":
		fallthrough
	case "DATABASE_ENTITY_TYPE_SCHEMA":
		fallthrough
	case "DATABASE_ENTITY_TYPE_TABLE":
		fallthrough
	case "DATABASE_ENTITY_TYPE_COLUMN":
		fallthrough
	case "DATABASE_ENTITY_TYPE_CONSTRAINT":
		fallthrough
	case "DATABASE_ENTITY_TYPE_INDEX":
		fallthrough
	case "DATABASE_ENTITY_TYPE_TRIGGER":
		fallthrough
	case "DATABASE_ENTITY_TYPE_VIEW":
		fallthrough
	case "DATABASE_ENTITY_TYPE_SEQUENCE":
		fallthrough
	case "DATABASE_ENTITY_TYPE_STORED_PROCEDURE":
		fallthrough
	case "DATABASE_ENTITY_TYPE_FUNCTION":
		fallthrough
	case "DATABASE_ENTITY_TYPE_SYNONYM":
		fallthrough
	case "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE":
		fallthrough
	case "DATABASE_ENTITY_TYPE_UDT":
		fallthrough
	case "DATABASE_ENTITY_TYPE_MATERIAL_VIEW":
		fallthrough
	case "DATABASE_ENTITY_TYPE_DATABASE":
		*e = SynonymEntitySourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SynonymEntitySourceTypeEnum: %s", s)
	}
}

// SynonymEntity - Synonym's parent is a schema.
type SynonymEntity struct {
	// Custom engine specific features.
	CustomFeatures map[string]interface{} `json:"customFeatures,omitempty"`
	// The name of the entity for which the synonym is being created (the source).
	SourceEntity *string `json:"sourceEntity,omitempty"`
	// The type of the entity for which the synonym is being created (usually a table or a sequence).
	SourceType *SynonymEntitySourceTypeEnum `json:"sourceType,omitempty"`
}
