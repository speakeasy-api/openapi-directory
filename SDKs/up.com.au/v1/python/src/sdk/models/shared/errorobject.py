"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ErrorObjectSource:
    r"""If applicable, location in the request that this error relates to. This
    may be a parameter in the query string, or a an attribute in the
    request body.
    """
    
    parameter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameter'), 'exclude': lambda f: f is None }})
    r"""If this error relates to a query parameter, the name of the
    parameter.
    """  
    pointer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pointer'), 'exclude': lambda f: f is None }})
    r"""If this error relates to an attribute in the request body, a
    rfc-6901 JSON pointer to the attribute.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ErrorObject:
    r"""Provides information about an error processing a request."""
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})
    r"""A detailed description of this error. This should be considered unique
    to individual occurrences of an error and subject to change. It is
    useful for debugging purposes.
    """  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The HTTP status code associated with this error. This can also be
    obtained from the response headers. The status indicates the broad type
    of error according to HTTP semantics.
    """  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""A short description of this error. This should be stable across
    multiple occurrences of this type of error and typically expands on the
    reason for the status code.
    """  
    source: Optional[ErrorObjectSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""If applicable, location in the request that this error relates to. This
    may be a parameter in the query string, or a an attribute in the
    request body.
    """  
    