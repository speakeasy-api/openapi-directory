/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The attack vector of the payload triggering this XSS.
 */
export enum XssAttackVectorEnum {
  AttackVectorUnspecified = "ATTACK_VECTOR_UNSPECIFIED",
  LocalStorage = "LOCAL_STORAGE",
  SessionStorage = "SESSION_STORAGE",
  WindowName = "WINDOW_NAME",
  Referrer = "REFERRER",
  FormInput = "FORM_INPUT",
  Cookie = "COOKIE",
  PostMessage = "POST_MESSAGE",
  GetParameters = "GET_PARAMETERS",
  UrlFragment = "URL_FRAGMENT",
  HtmlComment = "HTML_COMMENT",
  PostParameters = "POST_PARAMETERS",
  Protocol = "PROTOCOL",
  StoredXss = "STORED_XSS",
  SameOrigin = "SAME_ORIGIN",
  UserControllableUrl = "USER_CONTROLLABLE_URL",
}

/**
 * Information reported for an XSS.
 */
export class Xss extends SpeakeasyBase {
  /**
   * The attack vector of the payload triggering this XSS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attackVector" })
  attackVector?: XssAttackVectorEnum;

  /**
   * An error message generated by a javascript breakage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  /**
   * Stack traces leading to the point where the XSS occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stackTraces" })
  stackTraces?: string[];

  /**
   * The reproduction url for the seeding POST request of a Stored XSS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storedXssSeedingUrl" })
  storedXssSeedingUrl?: string;
}
