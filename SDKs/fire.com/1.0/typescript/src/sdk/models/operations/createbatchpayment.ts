/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The type of the batch - can be one of the listed 3
 */
export enum CreateBatchPaymentNewBatchTypeEnum {
  BankTransfer = "BANK_TRANSFER",
  InternalTransfer = "INTERNAL_TRANSFER",
}

/**
 * Details of the batch payment
 */
export class CreateBatchPaymentNewBatch extends SpeakeasyBase {
  /**
   * An optional name you give to the batch at creation time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "batchName" })
  batchName?: string;

  /**
   * An optional POST URL that all events for this batch will be sent to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callbackUrl" })
  callbackUrl?: string;

  /**
   * GBP or EUR
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * An optional job number you can give to the batch to help link it to your own system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobNumber" })
  jobNumber?: string;

  /**
   * The type of the batch - can be one of the listed 3
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CreateBatchPaymentNewBatchTypeEnum;
}

/**
 * Batch created successfully
 */
export class CreateBatchPaymentNewBatchResponse extends SpeakeasyBase {
  /**
   * A UUID for this item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "batchUuid" })
  batchUuid?: string;
}

export class CreateBatchPaymentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Batch created successfully
   */
  @SpeakeasyMetadata()
  newBatchResponse?: CreateBatchPaymentNewBatchResponse;
}
