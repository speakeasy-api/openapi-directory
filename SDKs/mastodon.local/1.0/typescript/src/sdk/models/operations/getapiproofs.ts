/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetApiProofsRequest extends SpeakeasyBase {
  /**
   * The identity provider to be looked up. Currently only supports keybase (case-sensitive)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=provider",
  })
  provider?: string;

  /**
   * The username on the selected identity provider
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=username",
  })
  username?: string;
}

export class GetApiProofsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Not Found
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  identityProof?: shared.IdentityProof;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
