/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The sort direction of the results.
 */
export enum GetChannelVideosDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * The attribute by which to filter the results.
 */
export enum GetChannelVideosFilterEnum {
  Embeddable = "embeddable",
}

/**
 * The way to sort the results.
 */
export enum GetChannelVideosSortEnum {
  Added = "added",
  Alphabetical = "alphabetical",
  Comments = "comments",
  Date = "date",
  Default = "default",
  Duration = "duration",
  Likes = "likes",
  Manual = "manual",
  ModifiedTime = "modified_time",
  Plays = "plays",
}

export class GetChannelVideosRequest extends SpeakeasyBase {
  /**
   * The ID of the channel.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=channel_id",
  })
  channelId: number;

  /**
   * The page that contains the video URI.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=containing_uri",
  })
  containingUri?: string;

  /**
   * The sort direction of the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: GetChannelVideosDirectionEnum;

  /**
   * The attribute by which to filter the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: GetChannelVideosFilterEnum;

  /**
   * Whether to filter the results by embeddable videos (`true`) or non-embeddable videos (`false`). Required only if **filter** is `embeddable`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter_embeddable",
  })
  filterEmbeddable?: boolean;

  /**
   * The page number of the results to show.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of items to show on each page of results, up to a maximum of 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The search query to use to filter the results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query?: string;

  /**
   * The way to sort the results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetChannelVideosSortEnum;
}

export class GetChannelVideosResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The **sort** field is `default`, but the **direction** field has a value.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;

  /**
   * The videos were returned.
   */
  @SpeakeasyMetadata({ elemType: shared.Video })
  videos?: shared.Video[];
}
