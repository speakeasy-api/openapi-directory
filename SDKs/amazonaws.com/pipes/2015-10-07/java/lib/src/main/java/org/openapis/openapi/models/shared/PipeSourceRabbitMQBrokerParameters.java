/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PipeSourceRabbitMQBrokerParameters - The parameters for using a Rabbit MQ broker as a source.
 */
public class PipeSourceRabbitMQBrokerParameters {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BatchSize")
    public Long batchSize;

    public PipeSourceRabbitMQBrokerParameters withBatchSize(Long batchSize) {
        this.batchSize = batchSize;
        return this;
    }
    
    @JsonProperty("Credentials")
    public MQBrokerAccessCredentials credentials;

    public PipeSourceRabbitMQBrokerParameters withCredentials(MQBrokerAccessCredentials credentials) {
        this.credentials = credentials;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaximumBatchingWindowInSeconds")
    public Long maximumBatchingWindowInSeconds;

    public PipeSourceRabbitMQBrokerParameters withMaximumBatchingWindowInSeconds(Long maximumBatchingWindowInSeconds) {
        this.maximumBatchingWindowInSeconds = maximumBatchingWindowInSeconds;
        return this;
    }
    
    @JsonProperty("QueueName")
    public String queueName;

    public PipeSourceRabbitMQBrokerParameters withQueueName(String queueName) {
        this.queueName = queueName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VirtualHost")
    public String virtualHost;

    public PipeSourceRabbitMQBrokerParameters withVirtualHost(String virtualHost) {
        this.virtualHost = virtualHost;
        return this;
    }
    
    public PipeSourceRabbitMQBrokerParameters(@JsonProperty("Credentials") MQBrokerAccessCredentials credentials, @JsonProperty("QueueName") String queueName) {
        this.credentials = credentials;
        this.queueName = queueName;
  }
}
