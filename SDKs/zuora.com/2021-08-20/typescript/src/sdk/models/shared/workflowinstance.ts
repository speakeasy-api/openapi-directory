/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Describes the current state of this workflow instance:
 *
 * @remarks
 *   - Queued: The workflow is in queue for being processed.
 *   - Processing: The workflow is in process.
 *
 */
export enum WorkflowInstanceStatusEnum {
  Queued = "Queued",
  Processing = "Processing",
}

/**
 * A instance workflow object.
 */
export class WorkflowInstance extends SpeakeasyBase {
  /**
   * The date and time when the workflow is created, in the `YYYY-MM-DD HH:MM:SS` format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt?: string;

  /**
   * The unique ID of the workflow.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * The run number of this workflow instance
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The identifier of the workflow template that is used to create this instance.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originalWorkflowId" })
  originalWorkflowId?: number;

  /**
   * Describes the current state of this workflow instance:
   *
   * @remarks
   *   - Queued: The workflow is in queue for being processed.
   *   - Processing: The workflow is in process.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: WorkflowInstanceStatusEnum;

  /**
   * The date and time the last time when the workflow is updated, in the `YYYY-MM-DD HH:MM:SS` format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  updatedAt?: string;
}
