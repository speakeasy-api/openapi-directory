"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import facetitem as shared_facetitem
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CarSearchFacets:
    
    base_exterior_color: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('base_exterior_color'), 'exclude': lambda f: f is None }})  
    base_interior_color: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('base_interior_color'), 'exclude': lambda f: f is None }})  
    body_subtype: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('body_subtype'), 'exclude': lambda f: f is None }})  
    body_type: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('body_type'), 'exclude': lambda f: f is None }})  
    car_type: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('car_type'), 'exclude': lambda f: f is None }})  
    carfax_1_owner: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carfax_1_owner'), 'exclude': lambda f: f is None }})  
    carfax_clean_title: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carfax_clean_title'), 'exclude': lambda f: f is None }})  
    city: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city'), 'exclude': lambda f: f is None }})  
    cylinders: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cylinders'), 'exclude': lambda f: f is None }})  
    data_source: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_source'), 'exclude': lambda f: f is None }})  
    dealer_id: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dealer_id'), 'exclude': lambda f: f is None }})  
    dealer_type: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dealer_type'), 'exclude': lambda f: f is None }})  
    doors: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doors'), 'exclude': lambda f: f is None }})  
    drivetrain: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drivetrain'), 'exclude': lambda f: f is None }})  
    engine: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engine'), 'exclude': lambda f: f is None }})  
    engine_aspiration: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engine_aspiration'), 'exclude': lambda f: f is None }})  
    engine_block: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engine_block'), 'exclude': lambda f: f is None }})  
    engine_size: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engine_size'), 'exclude': lambda f: f is None }})  
    exterior_color: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exterior_color'), 'exclude': lambda f: f is None }})  
    fuel_type: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fuel_type'), 'exclude': lambda f: f is None }})  
    interior_color: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interior_color'), 'exclude': lambda f: f is None }})  
    make: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('make'), 'exclude': lambda f: f is None }})  
    model: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is None }})  
    seller_name: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seller_name'), 'exclude': lambda f: f is None }})  
    seller_name_o: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seller_name_o'), 'exclude': lambda f: f is None }})  
    seller_type: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seller_type'), 'exclude': lambda f: f is None }})  
    source: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})  
    state: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})  
    transmission: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transmission'), 'exclude': lambda f: f is None }})  
    trim: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trim'), 'exclude': lambda f: f is None }})  
    trim_o: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trim_o'), 'exclude': lambda f: f is None }})  
    trim_r: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trim_r'), 'exclude': lambda f: f is None }})  
    vehicle_type: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vehicle_type'), 'exclude': lambda f: f is None }})  
    year: Optional[list[shared_facetitem.FacetItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('year'), 'exclude': lambda f: f is None }})  
    