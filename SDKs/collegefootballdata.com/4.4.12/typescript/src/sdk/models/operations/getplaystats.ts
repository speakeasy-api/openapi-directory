/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetPlayStatsRequest extends SpeakeasyBase {
  /**
   * athleteId filter (from /roster endpoint)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=athleteId",
  })
  athleteId?: number;

  /**
   * conference abbreviation filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=conference",
  })
  conference?: string;

  /**
   * gameId filter (from /games endpoint)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=gameId",
  })
  gameId?: number;

  /**
   * regular, postseason, or both
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=seasonType",
  })
  seasonType?: string;

  /**
   * statTypeId filter (from /play/stat/types endpoint)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=statTypeId",
  })
  statTypeId?: number;

  /**
   * Team filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=team" })
  team?: string;

  /**
   * Week filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=week" })
  week?: number;

  /**
   * Year filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year?: number;
}

export class GetPlayStatsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * successful operation
   */
  @SpeakeasyMetadata({ elemType: shared.PlayStat })
  playStats?: shared.PlayStat[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
