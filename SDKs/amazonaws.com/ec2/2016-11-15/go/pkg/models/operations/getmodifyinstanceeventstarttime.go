// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GETModifyInstanceEventStartTimeActionEnum
type GETModifyInstanceEventStartTimeActionEnum string

const (
	GETModifyInstanceEventStartTimeActionEnumModifyInstanceEventStartTime GETModifyInstanceEventStartTimeActionEnum = "ModifyInstanceEventStartTime"
)

func (e *GETModifyInstanceEventStartTimeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyInstanceEventStartTime":
		*e = GETModifyInstanceEventStartTimeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyInstanceEventStartTimeActionEnum: %s", s)
	}
}

// GETModifyInstanceEventStartTimeVersionEnum
type GETModifyInstanceEventStartTimeVersionEnum string

const (
	GETModifyInstanceEventStartTimeVersionEnumTwoThousandAndSixteen1115 GETModifyInstanceEventStartTimeVersionEnum = "2016-11-15"
)

func (e *GETModifyInstanceEventStartTimeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETModifyInstanceEventStartTimeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyInstanceEventStartTimeVersionEnum: %s", s)
	}
}

type GETModifyInstanceEventStartTimeRequest struct {
	Action GETModifyInstanceEventStartTimeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the event whose date and time you are modifying.
	InstanceEventID string `queryParam:"style=form,explode=true,name=InstanceEventId"`
	// The ID of the instance with the scheduled event.
	InstanceID string `queryParam:"style=form,explode=true,name=InstanceId"`
	// The new date and time when the event will take place.
	NotBefore         time.Time                                  `queryParam:"style=form,explode=true,name=NotBefore"`
	Version           GETModifyInstanceEventStartTimeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyInstanceEventStartTimeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
