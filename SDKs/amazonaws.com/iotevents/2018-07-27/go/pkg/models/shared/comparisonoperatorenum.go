// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ComparisonOperatorEnum string

const (
	ComparisonOperatorEnumGreater        ComparisonOperatorEnum = "GREATER"
	ComparisonOperatorEnumGreaterOrEqual ComparisonOperatorEnum = "GREATER_OR_EQUAL"
	ComparisonOperatorEnumLess           ComparisonOperatorEnum = "LESS"
	ComparisonOperatorEnumLessOrEqual    ComparisonOperatorEnum = "LESS_OR_EQUAL"
	ComparisonOperatorEnumEqual          ComparisonOperatorEnum = "EQUAL"
	ComparisonOperatorEnumNotEqual       ComparisonOperatorEnum = "NOT_EQUAL"
)

func (e ComparisonOperatorEnum) ToPointer() *ComparisonOperatorEnum {
	return &e
}

func (e *ComparisonOperatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GREATER":
		fallthrough
	case "GREATER_OR_EQUAL":
		fallthrough
	case "LESS":
		fallthrough
	case "LESS_OR_EQUAL":
		fallthrough
	case "EQUAL":
		fallthrough
	case "NOT_EQUAL":
		*e = ComparisonOperatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ComparisonOperatorEnum: %v", v)
	}
}
