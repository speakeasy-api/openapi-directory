"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import group_mapping as shared_group_mapping
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestBodyGroups:
    
    group_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_description') }})
    r"""Description of the IdP group."""  
    group_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_id') }})
    r"""ID of the IdP group."""  
    group_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_name') }})
    r"""Name of the IdP group."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestBody:
    
    groups: Optional[list[TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestBodyGroups]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groups'), 'exclude': lambda f: f is None }})
    r"""The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove."""  
    

@dataclasses.dataclass
class TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequest:
    
    org: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org', 'style': 'simple', 'explode': False }})
    r"""The organization name. The name is not case sensitive."""  
    request_body: TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    team_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'team_slug', 'style': 'simple', 'explode': False }})
    r"""The slug of the team name."""  
    

@dataclasses.dataclass
class TeamsCreateOrUpdateIdpGroupConnectionsInOrgResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    group_mapping: Optional[shared_group_mapping.GroupMapping] = dataclasses.field(default=None)
    r"""Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    