/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetAllContentTypesRequest extends SpeakeasyBase {
  /**
   * Builder ID specified in the settings of the CMS app.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=builderId",
  })
  builderId: string;
}

/**
 * Object with data about a specific Content Type tab.
 */
export class GetAllContentTypes200ApplicationJSONContentTypesConfigurationSchemaSets extends SpeakeasyBase {
  /**
   * Custom configurations of the Content Type tab. Varies depending on the Content Type schema defined in the FastStore project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configurations" })
  configurations?: Record<string, any>[];

  /**
   * Name of the Content Type tab.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with data of a specific Content Type.
 */
export class GetAllContentTypes200ApplicationJSONContentTypes extends SpeakeasyBase {
  /**
   * Array with data of the `configurationSchemaSets` tabs specified in the FastStore project.
   */
  @SpeakeasyMetadata({
    elemType:
      GetAllContentTypes200ApplicationJSONContentTypesConfigurationSchemaSets,
  })
  @Expose({ name: "configurationSchemaSets" })
  @Type(
    () =>
      GetAllContentTypes200ApplicationJSONContentTypesConfigurationSchemaSets
  )
  configurationSchemaSets?: GetAllContentTypes200ApplicationJSONContentTypesConfigurationSchemaSets[];

  /**
   * Content Type identifier specified in the FastStore project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Content Type name specified in the FastStore project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * OK
 */
export class GetAllContentTypes200ApplicationJSON extends SpeakeasyBase {
  /**
   * Array with data of each Content Type.
   */
  @SpeakeasyMetadata({
    elemType: GetAllContentTypes200ApplicationJSONContentTypes,
  })
  @Expose({ name: "contentTypes" })
  @Type(() => GetAllContentTypes200ApplicationJSONContentTypes)
  contentTypes?: GetAllContentTypes200ApplicationJSONContentTypes[];
}

export class GetAllContentTypesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getAllContentTypes200ApplicationJSONObject?: GetAllContentTypes200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
