<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MetricStructuredName - Identifies a metric, by describing the source which generated the metric.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MetricStructuredName
{
    /**
     * Zero or more labeled fields which identify the part of the job this metric is associated with, such as the name of a step or collection. For example, built-in counters associated with steps will have context['step'] = . Counters associated with PCollections in the SDK will have context['pcollection'] = .
     * 
     * @var ?array<string, string> $context
     */
	#[\JMS\Serializer\Annotation\SerializedName('context')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $context = null;
    
    /**
     * Worker-defined metric name.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Origin (namespace) of metric name. May be blank for user-define metrics; will be "dataflow" for metrics defined by the Dataflow service or SDK.
     * 
     * @var ?string $origin
     */
	#[\JMS\Serializer\Annotation\SerializedName('origin')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $origin = null;
    
	public function __construct()
	{
		$this->context = null;
		$this->name = null;
		$this->origin = null;
	}
}
