/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 *  The notification that informs a user of an update in Audit Manager. For example, this includes the notification that's sent when a control set is delegated for review.
 */
export class Notification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assessmentId" })
  assessmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentName" })
  assessmentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "controlSetId" })
  controlSetId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "controlSetName" })
  controlSetName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  eventTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;
}
