/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OriginApprovalRuleTemplate } from "./originapprovalruletemplate";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Returns information about an approval rule.
 */
export class ApprovalRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "approvalRuleContent" })
  approvalRuleContent?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "approvalRuleId" })
  approvalRuleId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "approvalRuleName" })
  approvalRuleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedUser" })
  lastModifiedUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "originApprovalRuleTemplate" })
  @Type(() => OriginApprovalRuleTemplate)
  originApprovalRuleTemplate?: OriginApprovalRuleTemplate;

  @SpeakeasyMetadata()
  @Expose({ name: "ruleContentSha256" })
  ruleContentSha256?: string;
}
