"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import conditionalformatrule as shared_conditionalformatrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateConditionalFormatRuleResponse:
    r"""The result of updating a conditional format rule."""
    
    new_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newIndex'), 'exclude': lambda f: f is None }})
    r"""The index of the new rule."""  
    new_rule: Optional[shared_conditionalformatrule.ConditionalFormatRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newRule'), 'exclude': lambda f: f is None }})
    r"""A rule describing a conditional format."""  
    old_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oldIndex'), 'exclude': lambda f: f is None }})
    r"""The old index of the rule. Not set if a rule was replaced (because it is the same as new_index)."""  
    old_rule: Optional[shared_conditionalformatrule.ConditionalFormatRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oldRule'), 'exclude': lambda f: f is None }})
    r"""A rule describing a conditional format."""  
    