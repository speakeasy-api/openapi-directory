/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SharedPodcast } from "./sharedpodcast";
import { Expose, Type } from "class-transformer";

/**
 * Representation of a podcast episode returned in a list
 */
export class PodcastEpisodeIndex extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "class_name" })
  className: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Podcast episode image url or podcast image url
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image_url" })
  imageUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  /**
   * The podcast that the resource belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "podcast" })
  @Type(() => SharedPodcast)
  podcast: SharedPodcast;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type_of" })
  typeOf: string;
}
