/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddressFamilyEnum } from "./addressfamilyenum";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 * Information about a private virtual interface.
 */
export class NewPrivateVirtualInterface extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "addressFamily" })
  addressFamily?: AddressFamilyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "amazonAddress" })
  amazonAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "asn" })
  asn: number;

  @SpeakeasyMetadata()
  @Expose({ name: "authKey" })
  authKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "customerAddress" })
  customerAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "directConnectGatewayId" })
  directConnectGatewayId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enableSiteLink" })
  enableSiteLink?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "mtu" })
  mtu?: number;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "virtualGatewayId" })
  virtualGatewayId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualInterfaceName" })
  virtualInterfaceName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vlan" })
  vlan: number;
}
