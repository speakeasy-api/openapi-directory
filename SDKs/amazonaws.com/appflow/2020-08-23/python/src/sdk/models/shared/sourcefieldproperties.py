"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceFieldProperties:
    r"""The properties that can be applied to a field when the connector is being used as a source."""
    
    is_queryable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isQueryable'), 'exclude': lambda f: f is None }})  
    is_retrievable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isRetrievable'), 'exclude': lambda f: f is None }})  
    is_timestamp_field_for_incremental_queries: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isTimestampFieldForIncrementalQueries'), 'exclude': lambda f: f is None }})  
    