// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExportFlavorEnum string

const (
	ExportFlavorEnumLinux   ExportFlavorEnum = "Linux"
	ExportFlavorEnumWindows ExportFlavorEnum = "Windows"
)

func (e *ExportFlavorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Linux":
		fallthrough
	case "Windows":
		*e = ExportFlavorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportFlavorEnum: %s", s)
	}
}

type ExportPlatformEnum string

const (
	ExportPlatformEnumCoreMl     ExportPlatformEnum = "CoreML"
	ExportPlatformEnumTensorFlow ExportPlatformEnum = "TensorFlow"
	ExportPlatformEnumDockerFile ExportPlatformEnum = "DockerFile"
	ExportPlatformEnumOnnx       ExportPlatformEnum = "ONNX"
)

func (e *ExportPlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CoreML":
		fallthrough
	case "TensorFlow":
		fallthrough
	case "DockerFile":
		fallthrough
	case "ONNX":
		*e = ExportPlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportPlatformEnum: %s", s)
	}
}

type ExportStatusEnum string

const (
	ExportStatusEnumExporting ExportStatusEnum = "Exporting"
	ExportStatusEnumFailed    ExportStatusEnum = "Failed"
	ExportStatusEnumDone      ExportStatusEnum = "Done"
)

func (e *ExportStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Exporting":
		fallthrough
	case "Failed":
		fallthrough
	case "Done":
		*e = ExportStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportStatusEnum: %s", s)
	}
}

// Export - OK
type Export struct {
	DownloadURI           *string             `json:"downloadUri,omitempty"`
	Flavor                *ExportFlavorEnum   `json:"flavor,omitempty"`
	NewerVersionAvailable *bool               `json:"newerVersionAvailable,omitempty"`
	Platform              *ExportPlatformEnum `json:"platform,omitempty"`
	Status                *ExportStatusEnum   `json:"status,omitempty"`
}
