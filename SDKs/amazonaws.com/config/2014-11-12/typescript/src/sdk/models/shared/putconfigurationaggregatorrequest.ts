/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountAggregationSource } from "./accountaggregationsource";
import { OrganizationAggregationSource } from "./organizationaggregationsource";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class PutConfigurationAggregatorRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AccountAggregationSource })
  @Expose({ name: "AccountAggregationSources" })
  @Type(() => AccountAggregationSource)
  accountAggregationSources?: AccountAggregationSource[];

  @SpeakeasyMetadata()
  @Expose({ name: "ConfigurationAggregatorName" })
  configurationAggregatorName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OrganizationAggregationSource" })
  @Type(() => OrganizationAggregationSource)
  organizationAggregationSource?: OrganizationAggregationSource;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
