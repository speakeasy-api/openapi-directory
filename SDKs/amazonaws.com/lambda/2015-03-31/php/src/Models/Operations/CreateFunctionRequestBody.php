<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateFunctionRequestBody
{
    /**
     * The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is <code>x86_64</code>.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ArchitectureEnum> $architectures
     */
	#[\JMS\Serializer\Annotation\SerializedName('Architectures')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\ArchitectureEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $architectures = null;
    
    /**
     * The code for the Lambda function. You can either specify an object in Amazon S3, upload a .zip file archive deployment package directly, or specify the URI of a container image.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyCode $code
     */
	#[\JMS\Serializer\Annotation\SerializedName('Code')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyCode')]
    public CreateFunctionRequestBodyCode $code;
    
    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
     * 
     * @var ?string $codeSigningConfigArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('CodeSigningConfigArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $codeSigningConfigArn = null;
    
    /**
     * The <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq">dead-letter queue</a> for failed asynchronous invocations.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyDeadLetterConfig $deadLetterConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('DeadLetterConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyDeadLetterConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFunctionRequestBodyDeadLetterConfig $deadLetterConfig = null;
    
    /**
     * A description of the function.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * A function's environment variable settings. You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyEnvironment $environment
     */
	#[\JMS\Serializer\Annotation\SerializedName('Environment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyEnvironment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFunctionRequestBodyEnvironment $environment = null;
    
    /**
     * The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but it can be any whole number between 512 and 10,240 MB.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyEphemeralStorage $ephemeralStorage
     */
	#[\JMS\Serializer\Annotation\SerializedName('EphemeralStorage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyEphemeralStorage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFunctionRequestBodyEphemeralStorage $ephemeralStorage = null;
    
    /**
     * Connection settings for an Amazon EFS file system.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FileSystemConfig> $fileSystemConfigs
     */
	#[\JMS\Serializer\Annotation\SerializedName('FileSystemConfigs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FileSystemConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fileSystemConfigs = null;
    
    /**
     * <p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
     * 
     * @var string $functionName
     */
	#[\JMS\Serializer\Annotation\SerializedName('FunctionName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $functionName;
    
    /**
     * The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html">Lambda programming model</a>.
     * 
     * @var ?string $handler
     */
	#[\JMS\Serializer\Annotation\SerializedName('Handler')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $handler = null;
    
    /**
     * Configuration values that override the container image Dockerfile settings. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms">Container image settings</a>.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyImageConfig $imageConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('ImageConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyImageConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFunctionRequestBodyImageConfig $imageConfig = null;
    
    /**
     * The ARN of the Key Management Service (KMS) customer managed key that's used to encrypt your function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption">environment variables</a>. When <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html">Lambda SnapStart</a> is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
     * 
     * @var ?string $kmsKeyArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('KMSKeyArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kmsKeyArn = null;
    
    /**
     * A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function's execution environment. Specify each layer by its ARN, including the version.
     * 
     * @var ?array<string> $layers
     */
	#[\JMS\Serializer\Annotation\SerializedName('Layers')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $layers = null;
    
    /**
     * The amount of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console">memory available to the function</a> at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
     * 
     * @var ?int $memorySize
     */
	#[\JMS\Serializer\Annotation\SerializedName('MemorySize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memorySize = null;
    
    /**
     * The type of deployment package. Set to <code>Image</code> for container image and set to <code>Zip</code> for .zip file archive.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyPackageTypeEnum $packageType
     */
	#[\JMS\Serializer\Annotation\SerializedName('PackageType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyPackageTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFunctionRequestBodyPackageTypeEnum $packageType = null;
    
    /**
     * Set to true to publish the first version of the function during creation.
     * 
     * @var ?bool $publish
     */
	#[\JMS\Serializer\Annotation\SerializedName('Publish')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $publish = null;
    
    /**
     * The Amazon Resource Name (ARN) of the function's execution role.
     * 
     * @var string $role
     */
	#[\JMS\Serializer\Annotation\SerializedName('Role')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $role;
    
    /**
     * <p>The identifier of the function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>. Runtime is required if the deployment package is a .zip file archive.</p> <p>The following list includes deprecated runtimes. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy">Runtime deprecation policy</a>.</p>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyRuntimeEnum $runtime
     */
	#[\JMS\Serializer\Annotation\SerializedName('Runtime')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyRuntimeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFunctionRequestBodyRuntimeEnum $runtime = null;
    
    /**
     * <p>The function's Lambda SnapStart setting. Set <code>ApplyOn</code> to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version.</p> <p>SnapStart is supported with the <code>java11</code> runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html">Improving startup performance with Lambda SnapStart</a>.</p>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodySnapStart $snapStart
     */
	#[\JMS\Serializer\Annotation\SerializedName('SnapStart')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodySnapStart')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFunctionRequestBodySnapStart $snapStart = null;
    
    /**
     * A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/tagging.html">tags</a> to apply to the function.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html">Lambda execution environment</a>.
     * 
     * @var ?int $timeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('Timeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $timeout = null;
    
    /**
     * The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html">X-Ray</a> tracing configuration. To sample and record incoming requests, set <code>Mode</code> to <code>Active</code>.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyTracingConfig $tracingConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('TracingConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyTracingConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFunctionRequestBodyTracingConfig $tracingConfig = null;
    
    /**
     * The VPC security groups and subnets that are attached to a Lambda function. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html">Configuring a Lambda function to access resources in a VPC</a>.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyVpcConfig $vpcConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('VpcConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyVpcConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFunctionRequestBodyVpcConfig $vpcConfig = null;
    
	public function __construct()
	{
		$this->architectures = null;
		$this->code = new \OpenAPI\OpenAPI\Models\Operations\CreateFunctionRequestBodyCode();
		$this->codeSigningConfigArn = null;
		$this->deadLetterConfig = null;
		$this->description = null;
		$this->environment = null;
		$this->ephemeralStorage = null;
		$this->fileSystemConfigs = null;
		$this->functionName = "";
		$this->handler = null;
		$this->imageConfig = null;
		$this->kmsKeyArn = null;
		$this->layers = null;
		$this->memorySize = null;
		$this->packageType = null;
		$this->publish = null;
		$this->role = "";
		$this->runtime = null;
		$this->snapStart = null;
		$this->tags = null;
		$this->timeout = null;
		$this->tracingConfig = null;
		$this->vpcConfig = null;
	}
}
