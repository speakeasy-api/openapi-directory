// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type AppGetApplicationAPIUsageSecurity struct {
	Oauth2 shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

type AppGetApplicationAPIUsagePathParams struct {
	// ID of the application to get usage statistics.
	ApplicationID int `pathParam:"style=simple,explode=false,name=applicationId"`
}

type AppGetApplicationAPIUsageQueryParams struct {
	// End time for query. Goes to now if not specified.
	End *time.Time `queryParam:"style=form,explode=true,name=end"`
	// Start time for query. Goes to 24 hours ago if not specified.
	Start *time.Time `queryParam:"style=form,explode=true,name=start"`
}

type AppGetApplicationAPIUsageRequest struct {
	PathParams  AppGetApplicationAPIUsagePathParams
	QueryParams AppGetApplicationAPIUsageQueryParams
	Security    AppGetApplicationAPIUsageSecurity
}

// AppGetApplicationAPIUsage200Wildcard - Look at the Response property for more information about the nature of this response
type AppGetApplicationAPIUsage200Wildcard struct {
	DetailedErrorTrace *string
	ErrorCode          *int
	ErrorStatus        *string
	Message            *string
	MessageData        map[string]string
	Response           *shared.ApplicationsAPIUsage
	ThrottleSeconds    *int
}

type AppGetApplicationAPIUsageResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
