/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetNetworkSmDeviceSecurityCenters200ApplicationJSON {
    /**
     * The name of the Antivirus.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("antiVirusName")
    public String antiVirusName;
    public GetNetworkSmDeviceSecurityCenters200ApplicationJSON withAntiVirusName(String antiVirusName) {
        this.antiVirusName = antiVirusName;
        return this;
    }
    
    /**
     * The name of the Firewall.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fireWallName")
    public String fireWallName;
    public GetNetworkSmDeviceSecurityCenters200ApplicationJSON withFireWallName(String fireWallName) {
        this.fireWallName = fireWallName;
        return this;
    }
    
    /**
     * Boolean indicating if the device has Antivirus.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasAntiVirus")
    public Boolean hasAntiVirus;
    public GetNetworkSmDeviceSecurityCenters200ApplicationJSON withHasAntiVirus(Boolean hasAntiVirus) {
        this.hasAntiVirus = hasAntiVirus;
        return this;
    }
    
    /**
     * Boolean indicating if the device has a Firewall installed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasFireWallInstalled")
    public Boolean hasFireWallInstalled;
    public GetNetworkSmDeviceSecurityCenters200ApplicationJSON withHasFireWallInstalled(Boolean hasFireWallInstalled) {
        this.hasFireWallInstalled = hasFireWallInstalled;
        return this;
    }
    
    /**
     * The Meraki identifier for the security center record.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GetNetworkSmDeviceSecurityCenters200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Boolean indicating if the device has auto login disabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isAutoLoginDisabled")
    public Boolean isAutoLoginDisabled;
    public GetNetworkSmDeviceSecurityCenters200ApplicationJSON withIsAutoLoginDisabled(Boolean isAutoLoginDisabled) {
        this.isAutoLoginDisabled = isAutoLoginDisabled;
        return this;
    }
    
    /**
     * Boolean indicating if the device has disk encryption.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDiskEncrypted")
    public Boolean isDiskEncrypted;
    public GetNetworkSmDeviceSecurityCenters200ApplicationJSON withIsDiskEncrypted(Boolean isDiskEncrypted) {
        this.isDiskEncrypted = isDiskEncrypted;
        return this;
    }
    
    /**
     * Boolean indicating if the device has a Firewall enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isFireWallEnabled")
    public Boolean isFireWallEnabled;
    public GetNetworkSmDeviceSecurityCenters200ApplicationJSON withIsFireWallEnabled(Boolean isFireWallEnabled) {
        this.isFireWallEnabled = isFireWallEnabled;
        return this;
    }
    
    /**
     * Boolean indicating if the device is rooted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isRooted")
    public Boolean isRooted;
    public GetNetworkSmDeviceSecurityCenters200ApplicationJSON withIsRooted(Boolean isRooted) {
        this.isRooted = isRooted;
        return this;
    }
    
    /**
     * A comma seperated list of procs running on the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runningProcs")
    public String runningProcs;
    public GetNetworkSmDeviceSecurityCenters200ApplicationJSON withRunningProcs(String runningProcs) {
        this.runningProcs = runningProcs;
        return this;
    }
    
}
