// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceHealthStateEnum string

const (
	InstanceHealthStateEnumInitial     InstanceHealthStateEnum = "initial"
	InstanceHealthStateEnumHealthy     InstanceHealthStateEnum = "healthy"
	InstanceHealthStateEnumUnhealthy   InstanceHealthStateEnum = "unhealthy"
	InstanceHealthStateEnumUnused      InstanceHealthStateEnum = "unused"
	InstanceHealthStateEnumDraining    InstanceHealthStateEnum = "draining"
	InstanceHealthStateEnumUnavailable InstanceHealthStateEnum = "unavailable"
)

func (e InstanceHealthStateEnum) ToPointer() *InstanceHealthStateEnum {
	return &e
}

func (e *InstanceHealthStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initial":
		fallthrough
	case "healthy":
		fallthrough
	case "unhealthy":
		fallthrough
	case "unused":
		fallthrough
	case "draining":
		fallthrough
	case "unavailable":
		*e = InstanceHealthStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceHealthStateEnum: %v", v)
	}
}
