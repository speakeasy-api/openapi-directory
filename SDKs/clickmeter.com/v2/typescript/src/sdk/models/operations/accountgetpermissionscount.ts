/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Can be "datapoint" or "group"
 */
export enum AccountGetPermissionsCountEntityTypeEnum {
  Datapoint = "datapoint",
  Group = "group",
}

/**
 * Can be "w" or "r"
 */
export enum AccountGetPermissionsCountTypeEnum {
  R = "r",
  W = "w",
}

export class AccountGetPermissionsCountRequest extends SpeakeasyBase {
  /**
   * Optional id of the datapoint/group entity to filter by
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=entityId",
  })
  entityId?: number;

  /**
   * Can be "datapoint" or "group"
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=entityType",
  })
  entityType?: AccountGetPermissionsCountEntityTypeEnum;

  /**
   * Id of the guest
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=guestId",
  })
  guestId: number;

  /**
   * Can be "w" or "r"
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: AccountGetPermissionsCountTypeEnum;
}

export class AccountGetPermissionsCountResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  apiCoreResponsesCountResponce?: shared.ApiCoreResponsesCountResponce;

  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
