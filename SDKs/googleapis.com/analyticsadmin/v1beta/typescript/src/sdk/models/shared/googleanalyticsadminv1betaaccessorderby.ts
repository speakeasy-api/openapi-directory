/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleAnalyticsAdminV1betaAccessOrderByDimensionOrderBy } from "./googleanalyticsadminv1betaaccessorderbydimensionorderby";
import { GoogleAnalyticsAdminV1betaAccessOrderByMetricOrderBy } from "./googleanalyticsadminv1betaaccessorderbymetricorderby";
import { Expose, Type } from "class-transformer";

/**
 * Order bys define how rows will be sorted in the response. For example, ordering rows by descending access count is one ordering, and ordering rows by the country string is a different ordering.
 */
export class GoogleAnalyticsAdminV1betaAccessOrderBy extends SpeakeasyBase {
  /**
   * If true, sorts by descending order. If false or unspecified, sorts in ascending order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "desc" })
  desc?: boolean;

  /**
   * Sorts by dimension values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dimension" })
  @Type(() => GoogleAnalyticsAdminV1betaAccessOrderByDimensionOrderBy)
  dimension?: GoogleAnalyticsAdminV1betaAccessOrderByDimensionOrderBy;

  /**
   * Sorts by metric values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metric" })
  @Type(() => GoogleAnalyticsAdminV1betaAccessOrderByMetricOrderBy)
  metric?: GoogleAnalyticsAdminV1betaAccessOrderByMetricOrderBy;
}
