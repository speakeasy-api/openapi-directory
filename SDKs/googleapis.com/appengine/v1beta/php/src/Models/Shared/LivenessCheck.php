<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LivenessCheck - Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LivenessCheck
{
    /**
     * Interval between health checks.
     * 
     * @var ?string $checkInterval
     */
	#[\JMS\Serializer\Annotation\SerializedName('checkInterval')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $checkInterval = null;
    
    /**
     * Number of consecutive failed checks required before considering the VM unhealthy.
     * 
     * @var ?int $failureThreshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('failureThreshold')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $failureThreshold = null;
    
    /**
     * Host header to send when performing a HTTP Liveness check. Example: "myapp.appspot.com"
     * 
     * @var ?string $host
     */
	#[\JMS\Serializer\Annotation\SerializedName('host')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $host = null;
    
    /**
     * The initial delay before starting to execute the checks.
     * 
     * @var ?string $initialDelay
     */
	#[\JMS\Serializer\Annotation\SerializedName('initialDelay')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $initialDelay = null;
    
    /**
     * The request path.
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * Number of consecutive successful checks required before considering the VM healthy.
     * 
     * @var ?int $successThreshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('successThreshold')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $successThreshold = null;
    
    /**
     * Time before the check is considered failed.
     * 
     * @var ?string $timeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeout')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timeout = null;
    
	public function __construct()
	{
		$this->checkInterval = null;
		$this->failureThreshold = null;
		$this->host = null;
		$this->initialDelay = null;
		$this->path = null;
		$this->successThreshold = null;
		$this->timeout = null;
	}
}
