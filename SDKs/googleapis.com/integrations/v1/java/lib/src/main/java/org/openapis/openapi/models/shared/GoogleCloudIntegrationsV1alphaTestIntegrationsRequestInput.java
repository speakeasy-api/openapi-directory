/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput - The request for testing an integration.
 */
public class GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput {
    /**
     * Required. This is used to identify the client on whose behalf the event will be executed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;

    public GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Optional. custom deadline of the rpc
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deadlineSecondsTime")
    public String deadlineSecondsTime;

    public GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput withDeadlineSecondsTime(String deadlineSecondsTime) {
        this.deadlineSecondsTime = deadlineSecondsTime;
        return this;
    }
    
    /**
     * Optional. Input parameters used during integration execution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputParameters")
    public java.util.Map<String, GoogleCloudIntegrationsV1alphaValueType> inputParameters;

    public GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput withInputParameters(java.util.Map<String, GoogleCloudIntegrationsV1alphaValueType> inputParameters) {
        this.inputParameters = inputParameters;
        return this;
    }
    
    /**
     * The integration version definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integrationVersion")
    public GoogleCloudIntegrationsV1alphaIntegrationVersionInput integrationVersion;

    public GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput withIntegrationVersion(GoogleCloudIntegrationsV1alphaIntegrationVersionInput integrationVersion) {
        this.integrationVersion = integrationVersion;
        return this;
    }
    
    /**
     * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public EnterpriseCrmFrontendsEventbusProtoEventParameters parameters;

    public GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput withParameters(EnterpriseCrmFrontendsEventbusProtoEventParameters parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * Optional. Can be specified in the event request, otherwise false (default). If true, enables tasks with condition "test_mode = true". If false, disables tasks with condition "test_mode = true" if global test mode (set by platform) is also false EventBusConfig.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testMode")
    public Boolean testMode;

    public GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput withTestMode(Boolean testMode) {
        this.testMode = testMode;
        return this;
    }
    
    /**
     * Required. The trigger id of the integration trigger config. If both trigger_id and client_id is present, the integration is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerId")
    public String triggerId;

    public GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput withTriggerId(String triggerId) {
        this.triggerId = triggerId;
        return this;
    }
    
    public GoogleCloudIntegrationsV1alphaTestIntegrationsRequestInput(){}
}
