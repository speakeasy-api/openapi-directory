// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EntityTypeEnum string

const (
	EntityTypeEnumPerson         EntityTypeEnum = "PERSON"
	EntityTypeEnumLocation       EntityTypeEnum = "LOCATION"
	EntityTypeEnumOrganization   EntityTypeEnum = "ORGANIZATION"
	EntityTypeEnumCommercialItem EntityTypeEnum = "COMMERCIAL_ITEM"
	EntityTypeEnumEvent          EntityTypeEnum = "EVENT"
	EntityTypeEnumDate           EntityTypeEnum = "DATE"
	EntityTypeEnumQuantity       EntityTypeEnum = "QUANTITY"
	EntityTypeEnumTitle          EntityTypeEnum = "TITLE"
	EntityTypeEnumOther          EntityTypeEnum = "OTHER"
)

func (e *EntityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PERSON":
		fallthrough
	case "LOCATION":
		fallthrough
	case "ORGANIZATION":
		fallthrough
	case "COMMERCIAL_ITEM":
		fallthrough
	case "EVENT":
		fallthrough
	case "DATE":
		fallthrough
	case "QUANTITY":
		fallthrough
	case "TITLE":
		fallthrough
	case "OTHER":
		*e = EntityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityTypeEnum: %s", s)
	}
}
