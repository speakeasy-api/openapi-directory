/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InterconnectDiagnosticsARPEntry } from "./interconnectdiagnosticsarpentry";
import { InterconnectDiagnosticsLinkStatus } from "./interconnectdiagnosticslinkstatus";
import { Expose, Type } from "class-transformer";

/**
 * The aggregation type of the bundle interface.
 */
export enum InterconnectDiagnosticsBundleAggregationTypeEnum {
  BundleAggregationTypeLacp = "BUNDLE_AGGREGATION_TYPE_LACP",
  BundleAggregationTypeStatic = "BUNDLE_AGGREGATION_TYPE_STATIC",
}

/**
 * The operational status of the bundle interface.
 */
export enum InterconnectDiagnosticsBundleOperationalStatusEnum {
  BundleOperationalStatusDown = "BUNDLE_OPERATIONAL_STATUS_DOWN",
  BundleOperationalStatusUp = "BUNDLE_OPERATIONAL_STATUS_UP",
}

/**
 * Diagnostics information about interconnect, contains detailed and current technical information about Google's side of the connection.
 */
export class InterconnectDiagnostics extends SpeakeasyBase {
  /**
   * A list of InterconnectDiagnostics.ARPEntry objects, describing individual neighbors currently seen by the Google router in the ARP cache for the Interconnect. This will be empty when the Interconnect is not bundled.
   */
  @SpeakeasyMetadata({ elemType: InterconnectDiagnosticsARPEntry })
  @Expose({ name: "arpCaches" })
  @Type(() => InterconnectDiagnosticsARPEntry)
  arpCaches?: InterconnectDiagnosticsARPEntry[];

  /**
   * The aggregation type of the bundle interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bundleAggregationType" })
  bundleAggregationType?: InterconnectDiagnosticsBundleAggregationTypeEnum;

  /**
   * The operational status of the bundle interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bundleOperationalStatus" })
  bundleOperationalStatus?: InterconnectDiagnosticsBundleOperationalStatusEnum;

  /**
   * A list of InterconnectDiagnostics.LinkStatus objects, describing the status for each link on the Interconnect.
   */
  @SpeakeasyMetadata({ elemType: InterconnectDiagnosticsLinkStatus })
  @Expose({ name: "links" })
  @Type(() => InterconnectDiagnosticsLinkStatus)
  links?: InterconnectDiagnosticsLinkStatus[];

  /**
   * The MAC address of the Interconnect's bundle interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "macAddress" })
  macAddress?: string;
}
