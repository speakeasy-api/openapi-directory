<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CatalogTax - A tax applicable to an item.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CatalogTax
{
    /**
     * If `true`, the fee applies to custom amounts entered into the Square Point of Sale
     * 
     * app that are not associated with a particular `CatalogItem`.
     * 
     * @var ?bool $appliesToCustomAmounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('applies_to_custom_amounts')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $appliesToCustomAmounts = null;
    
    /**
     * Whether the tax is calculated based on a payment's subtotal or total.
     * 
     * @var ?string $calculationPhase
     */
	#[\JMS\Serializer\Annotation\SerializedName('calculation_phase')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $calculationPhase = null;
    
    /**
     * A Boolean flag to indicate whether the tax is displayed as enabled (`true`) in the Square Point of Sale app or not (`false`).
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * Whether the tax is `ADDITIVE` or `INCLUSIVE`.
     * 
     * @var ?string $inclusionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('inclusion_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $inclusionType = null;
    
    /**
     * The tax's name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The percentage of the tax in decimal form, using a `'.'` as the decimal separator and without a `'%'` sign.
     * 
     * A value of `7.5` corresponds to 7.5%.
     * 
     * @var ?string $percentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('percentage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $percentage = null;
    
	public function __construct()
	{
		$this->appliesToCustomAmounts = null;
		$this->calculationPhase = null;
		$this->enabled = null;
		$this->inclusionType = null;
		$this->name = null;
		$this->percentage = null;
	}
}
