"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DealPausingInfoPauseRoleEnum(str, Enum):
    r"""The party that first paused the deal; unspecified for active deals."""
    BUYER_SELLER_ROLE_UNSPECIFIED = 'BUYER_SELLER_ROLE_UNSPECIFIED'
    BUYER = 'BUYER'
    SELLER = 'SELLER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DealPausingInfo:
    r"""Information related to deal pausing."""
    
    pause_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pauseReason'), 'exclude': lambda f: f is None }})
    r"""The reason for the pausing of the deal; empty for active deals."""  
    pause_role: Optional[DealPausingInfoPauseRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pauseRole'), 'exclude': lambda f: f is None }})
    r"""The party that first paused the deal; unspecified for active deals."""  
    pausing_consented: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pausingConsented'), 'exclude': lambda f: f is None }})
    r"""Whether pausing is consented between buyer and seller for the deal."""  
    