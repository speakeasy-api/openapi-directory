/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StringMatcher } from "./stringmatcher";
import { StructMatcher } from "./structmatcher";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the way to match a Node. The match follows AND semantics.
 */
export class NodeMatcher extends SpeakeasyBase {
  /**
   * Specifies the way to match a string. [#next-free-field: 7]
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nodeId" })
  @Type(() => StringMatcher)
  nodeId?: StringMatcher;

  /**
   * Specifies match criteria on the node metadata.
   */
  @SpeakeasyMetadata({ elemType: StructMatcher })
  @Expose({ name: "nodeMetadatas" })
  @Type(() => StructMatcher)
  nodeMetadatas?: StructMatcher[];
}
