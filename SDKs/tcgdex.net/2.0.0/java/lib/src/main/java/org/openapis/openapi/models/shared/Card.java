/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Card - successful operation
 */
public class Card {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("abilities")
    public CardAbilities[] abilities;
    public Card withAbilities(CardAbilities[] abilities) {
        this.abilities = abilities;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attacks")
    public CardAttacks[] attacks;
    public Card withAttacks(CardAttacks[] attacks) {
        this.attacks = attacks;
        return this;
    }
    
    @JsonProperty("category")
    public String category;
    public Card withCategory(String category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Card withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dexId")
    public Double[] dexId;
    public Card withDexId(Double[] dexId) {
        this.dexId = dexId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("energyType")
    public String energyType;
    public Card withEnergyType(String energyType) {
        this.energyType = energyType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("evolveFrom")
    public String evolveFrom;
    public Card withEvolveFrom(String evolveFrom) {
        this.evolveFrom = evolveFrom;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hp")
    public Double hp;
    public Card withHp(Double hp) {
        this.hp = hp;
        return this;
    }
    
    @JsonProperty("id")
    public String id;
    public Card withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("illustrator")
    public String illustrator;
    public Card withIllustrator(String illustrator) {
        this.illustrator = illustrator;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public String image;
    public Card withImage(String image) {
        this.image = image;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("item")
    public CardItem item;
    public Card withItem(CardItem item) {
        this.item = item;
        return this;
    }
    
    @JsonProperty("legal")
    public CardLegal legal;
    public Card withLegal(CardLegal legal) {
        this.legal = legal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("level")
    public Double level;
    public Card withLevel(Double level) {
        this.level = level;
        return this;
    }
    
    @JsonProperty("localId")
    public String localId;
    public Card withLocalId(String localId) {
        this.localId = localId;
        return this;
    }
    
    @JsonProperty("name")
    public String name;
    public Card withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("rarity")
    public String rarity;
    public Card withRarity(String rarity) {
        this.rarity = rarity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regulationMark")
    public String regulationMark;
    public Card withRegulationMark(String regulationMark) {
        this.regulationMark = regulationMark;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resistances")
    public WeakRes[][] resistances;
    public Card withResistances(WeakRes[][] resistances) {
        this.resistances = resistances;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retreat")
    public Double retreat;
    public Card withRetreat(Double retreat) {
        this.retreat = retreat;
        return this;
    }
    
    @JsonProperty("set")
    public SetResume set;
    public Card withSet(SetResume set) {
        this.set = set;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stage")
    public String stage;
    public Card withStage(String stage) {
        this.stage = stage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suffix")
    public String suffix;
    public Card withSuffix(String suffix) {
        this.suffix = suffix;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trainerType")
    public String trainerType;
    public Card withTrainerType(String trainerType) {
        this.trainerType = trainerType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("types")
    public String[] types;
    public Card withTypes(String[] types) {
        this.types = types;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variants")
    public CardVariants variants;
    public Card withVariants(CardVariants variants) {
        this.variants = variants;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weaknesses")
    public WeakRes[][] weaknesses;
    public Card withWeaknesses(WeakRes[][] weaknesses) {
        this.weaknesses = weaknesses;
        return this;
    }
    
}
