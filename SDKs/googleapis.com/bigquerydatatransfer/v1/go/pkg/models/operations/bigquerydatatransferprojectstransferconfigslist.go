// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type BigquerydatatransferProjectsTransferConfigsListSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type BigquerydatatransferProjectsTransferConfigsListSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type BigquerydatatransferProjectsTransferConfigsListSecurityOption3 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type BigquerydatatransferProjectsTransferConfigsListSecurity struct {
	Option1 *BigquerydatatransferProjectsTransferConfigsListSecurityOption1 `security:"option"`
	Option2 *BigquerydatatransferProjectsTransferConfigsListSecurityOption2 `security:"option"`
	Option3 *BigquerydatatransferProjectsTransferConfigsListSecurityOption3 `security:"option"`
}

type BigquerydatatransferProjectsTransferConfigsListPathParams struct {
	// Required. The BigQuery project id for which transfer configs should be returned: `projects/{project_id}` or `projects/{project_id}/locations/{location_id}`
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
}

type BigquerydatatransferProjectsTransferConfigsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// When specified, only configurations of requested data sources are returned.
	DataSourceIds []string `queryParam:"style=form,explode=true,name=dataSourceIds"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Page size. The default page size is the maximum value of 1000 results.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Pagination token, which can be used to request a specific page of `ListTransfersRequest` list results. For multiple-page results, `ListTransfersResponse` outputs a `next_page` token, which can be used as the `page_token` value to request the next page of list results.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type BigquerydatatransferProjectsTransferConfigsListRequest struct {
	PathParams  BigquerydatatransferProjectsTransferConfigsListPathParams
	QueryParams BigquerydatatransferProjectsTransferConfigsListQueryParams
	Security    BigquerydatatransferProjectsTransferConfigsListSecurity
}

type BigquerydatatransferProjectsTransferConfigsListResponse struct {
	ContentType string
	// Successful response
	ListTransferConfigsResponse *shared.ListTransferConfigsResponse
	StatusCode                  int
	RawResponse                 *http.Response
}
