// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type NodesDraftRegistrationsSubjectsPathParams struct {
	// The unique identifier of the draft registration.
	DraftID string `pathParam:"style=simple,explode=false,name=draft_id"`
}

type NodesDraftRegistrationsSubjectsRequest struct {
	PathParams NodesDraftRegistrationsSubjectsPathParams
}

// NodesDraftRegistrationsSubjectsSubjectAttributes - The attributes of the Subject.
type NodesDraftRegistrationsSubjectsSubjectAttributes struct {
	// The name for the taxonomy used to name subjects (`bepress`)
	TaxonomyName *string
	// The name for the subject (`Arts and Humanities`)
	Text *string
}

// NodesDraftRegistrationsSubjectsSubjectEmbedsParentDataAttributes - The attributes of the Subject.
type NodesDraftRegistrationsSubjectsSubjectEmbedsParentDataAttributes struct {
	// The name for the taxonmy used to name subjects (`bepress`)
	TaxonomyName *string
	// The name for the subject (`Arts and Humanities`)
	Text *string
}

// NodesDraftRegistrationsSubjectsSubjectEmbedsParentDataRelationships - Links to other entities or entity collections that have a relationship to the file entity.
type NodesDraftRegistrationsSubjectsSubjectEmbedsParentDataRelationships struct {
	// A link to the children for this Subject.
	Children *string
	// A link to the parent for this Subject.
	Parent *string
}

type NodesDraftRegistrationsSubjectsSubjectEmbedsParentData struct {
	// The attributes of the Subject.
	Attributes *NodesDraftRegistrationsSubjectsSubjectEmbedsParentDataAttributes
	// A JSON object containing the embedded information.
	Data map[string]interface{}
	// The unique identifier of the Subject.
	ID *string
	// Links to other entities or entity collections that have a relationship to the file entity.
	Relationships *NodesDraftRegistrationsSubjectsSubjectEmbedsParentDataRelationships
	// The type identifier of the Subject (`subject`).
	Type *string
}

// NodesDraftRegistrationsSubjectsSubjectEmbedsParent - The parent of the Subject.
type NodesDraftRegistrationsSubjectsSubjectEmbedsParent struct {
	Data *NodesDraftRegistrationsSubjectsSubjectEmbedsParentData
}

// NodesDraftRegistrationsSubjectsSubjectEmbeds - The parent is always embedded in the Subject response.
type NodesDraftRegistrationsSubjectsSubjectEmbeds struct {
	// The parent of the Subject.
	Parent *NodesDraftRegistrationsSubjectsSubjectEmbedsParent
}

// NodesDraftRegistrationsSubjectsSubjectLinks - URLs to alternative representations of the Subject entity.
type NodesDraftRegistrationsSubjectsSubjectLinks struct {
	// A link to the detail page for a Subject.
	Self *string
}

// NodesDraftRegistrationsSubjectsSubjectRelationships - Links to other entities or entity collections that have a relationship to the file entity.
type NodesDraftRegistrationsSubjectsSubjectRelationships struct {
	// A link to the children for this Subject.
	Children *string
	// A link to the parent for this Subject.
	Parent *string
}

// NodesDraftRegistrationsSubjectsSubject - OK
type NodesDraftRegistrationsSubjectsSubject struct {
	// The attributes of the Subject.
	Attributes *NodesDraftRegistrationsSubjectsSubjectAttributes
	// The parent is always embedded in the Subject response.
	Embeds *NodesDraftRegistrationsSubjectsSubjectEmbeds
	// The unique identifier of the Subject.
	ID *string
	// URLs to alternative representations of the Subject entity.
	Links *NodesDraftRegistrationsSubjectsSubjectLinks
	// Links to other entities or entity collections that have a relationship to the file entity.
	Relationships *NodesDraftRegistrationsSubjectsSubjectRelationships
	// The type identifier of the Subject (`subject`).
	Type *string
}

type NodesDraftRegistrationsSubjectsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
