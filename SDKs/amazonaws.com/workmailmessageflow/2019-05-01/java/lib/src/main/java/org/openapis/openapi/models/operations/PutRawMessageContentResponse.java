/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class PutRawMessageContentResponse {
    
    public String contentType;

    public PutRawMessageContentResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InvalidContentLocation
     */
    
    public Object invalidContentLocation;

    public PutRawMessageContentResponse withInvalidContentLocation(Object invalidContentLocation) {
        this.invalidContentLocation = invalidContentLocation;
        return this;
    }
    
    /**
     * MessageFrozen
     */
    
    public Object messageFrozen;

    public PutRawMessageContentResponse withMessageFrozen(Object messageFrozen) {
        this.messageFrozen = messageFrozen;
        return this;
    }
    
    /**
     * MessageRejected
     */
    
    public Object messageRejected;

    public PutRawMessageContentResponse withMessageRejected(Object messageRejected) {
        this.messageRejected = messageRejected;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> putRawMessageContentResponse;

    public PutRawMessageContentResponse withPutRawMessageContentResponse(java.util.Map<String, Object> putRawMessageContentResponse) {
        this.putRawMessageContentResponse = putRawMessageContentResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;

    public PutRawMessageContentResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    
    public Integer statusCode;

    public PutRawMessageContentResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public PutRawMessageContentResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public PutRawMessageContentResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
