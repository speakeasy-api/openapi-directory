/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FormAttributes } from "./formattributes";
import { Expose, Type } from "class-transformer";

/**
 * Type is share.
 */
export enum FormRelationshipsShareDataTypeEnum {
  Share = "share",
}

export class FormRelationshipsShareData extends SpeakeasyBase {
  /**
   * ID of the share.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Type is share.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: FormRelationshipsShareDataTypeEnum;
}

export class FormRelationshipsShare extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => FormRelationshipsShareData)
  data?: FormRelationshipsShareData;
}

/**
 * Share relationship data of the form.
 */
export class FormRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "share" })
  @Type(() => FormRelationshipsShare)
  share?: FormRelationshipsShare;
}

/**
 * Regular form object.
 */
export class Form extends SpeakeasyBase {
  /**
   * Attributes of the form including it's included fields and css styles
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => FormAttributes)
  attributes?: FormAttributes;

  /**
   * ID of the form.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Share relationship data of the form.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => FormRelationships)
  relationships?: FormRelationships;

  /**
   * Type is "form".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
