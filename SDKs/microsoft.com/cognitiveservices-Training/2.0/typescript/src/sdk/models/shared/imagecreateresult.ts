/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Image } from "./image";
import { Expose, Type } from "class-transformer";

export enum ImageCreateResultStatusEnum {
  Ok = "OK",
  OKDuplicate = "OKDuplicate",
  ErrorSource = "ErrorSource",
  ErrorImageFormat = "ErrorImageFormat",
  ErrorImageSize = "ErrorImageSize",
  ErrorStorage = "ErrorStorage",
  ErrorLimitExceed = "ErrorLimitExceed",
  ErrorTagLimitExceed = "ErrorTagLimitExceed",
  ErrorRegionLimitExceed = "ErrorRegionLimitExceed",
  ErrorUnknown = "ErrorUnknown",
}

export class ImageCreateResult extends SpeakeasyBase {
  /**
   * Image model to be sent as JSON
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => Image)
  image?: Image;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceUrl" })
  sourceUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ImageCreateResultStatusEnum;
}
