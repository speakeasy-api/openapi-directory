/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Filter - &lt;p&gt;For Resolver list operations (&lt;a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html"&gt;ListResolverEndpoints&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html"&gt;ListResolverRules&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html"&gt;ListResolverRuleAssociations&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html"&gt;ListResolverQueryLogConfigs&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html"&gt;ListResolverQueryLogConfigAssociations&lt;/a&gt;), and &lt;a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverDnssecConfigs.html"&gt;ListResolverDnssecConfigs&lt;/a&gt;), an optional specification to return a subset of objects.&lt;/p&gt; &lt;p&gt;To filter objects, such as Resolver endpoints or Resolver rules, you specify &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Values&lt;/code&gt;. For example, to list only inbound Resolver endpoints, specify &lt;code&gt;Direction&lt;/code&gt; for &lt;code&gt;Name&lt;/code&gt; and specify &lt;code&gt;INBOUND&lt;/code&gt; for &lt;code&gt;Values&lt;/code&gt;. &lt;/p&gt;
 */
public class Filter {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public Filter withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Values")
    public String[] values;
    public Filter withValues(String[] values) {
        this.values = values;
        return this;
    }
    
}
