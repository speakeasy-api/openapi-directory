/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class DeclineHandshakeResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;

    public DeclineHandshakeResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    /**
     * ConcurrentModificationException
     */
    
    public Object concurrentModificationException;

    public DeclineHandshakeResponse withConcurrentModificationException(Object concurrentModificationException) {
        this.concurrentModificationException = concurrentModificationException;
        return this;
    }
    
    
    public String contentType;

    public DeclineHandshakeResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.DeclineHandshakeResponse declineHandshakeResponse;

    public DeclineHandshakeResponse withDeclineHandshakeResponse(org.openapis.openapi.models.shared.DeclineHandshakeResponse declineHandshakeResponse) {
        this.declineHandshakeResponse = declineHandshakeResponse;
        return this;
    }
    
    /**
     * HandshakeAlreadyInStateException
     */
    
    public Object handshakeAlreadyInStateException;

    public DeclineHandshakeResponse withHandshakeAlreadyInStateException(Object handshakeAlreadyInStateException) {
        this.handshakeAlreadyInStateException = handshakeAlreadyInStateException;
        return this;
    }
    
    /**
     * HandshakeNotFoundException
     */
    
    public Object handshakeNotFoundException;

    public DeclineHandshakeResponse withHandshakeNotFoundException(Object handshakeNotFoundException) {
        this.handshakeNotFoundException = handshakeNotFoundException;
        return this;
    }
    
    /**
     * InvalidHandshakeTransitionException
     */
    
    public Object invalidHandshakeTransitionException;

    public DeclineHandshakeResponse withInvalidHandshakeTransitionException(Object invalidHandshakeTransitionException) {
        this.invalidHandshakeTransitionException = invalidHandshakeTransitionException;
        return this;
    }
    
    /**
     * InvalidInputException
     */
    
    public Object invalidInputException;

    public DeclineHandshakeResponse withInvalidInputException(Object invalidInputException) {
        this.invalidInputException = invalidInputException;
        return this;
    }
    
    /**
     * ServiceException
     */
    
    public Object serviceException;

    public DeclineHandshakeResponse withServiceException(Object serviceException) {
        this.serviceException = serviceException;
        return this;
    }
    
    
    public Integer statusCode;

    public DeclineHandshakeResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public DeclineHandshakeResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TooManyRequestsException
     */
    
    public Object tooManyRequestsException;

    public DeclineHandshakeResponse withTooManyRequestsException(Object tooManyRequestsException) {
        this.tooManyRequestsException = tooManyRequestsException;
        return this;
    }
    
    public DeclineHandshakeResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
