"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import entity as shared_entity
from ..shared import unmappedattribute as shared_unmappedattribute
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DetectEntitiesV2Response:
    r"""Success"""
    
    entities: list[shared_entity.Entity] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Entities') }})  
    model_version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelVersion') }})  
    pagination_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PaginationToken'), 'exclude': lambda f: f is None }})  
    unmapped_attributes: Optional[list[shared_unmappedattribute.UnmappedAttribute]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnmappedAttributes'), 'exclude': lambda f: f is None }})  
    