<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListViolationEventsRequest
{
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
    /**
     *  The criteria for a behavior. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListViolationEventsBehaviorCriteriaTypeEnum $behaviorCriteriaType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=behaviorCriteriaType')]
    public ?ListViolationEventsBehaviorCriteriaTypeEnum $behaviorCriteriaType = null;
    
    /**
     * The end time for the alerts to be listed.
     * 
     * @var \DateTime $endTime
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=endTime,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public \DateTime $endTime;
    
    /**
     *  A list of all suppressed alerts. 
     * 
     * @var ?bool $listSuppressedAlerts
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=listSuppressedAlerts')]
    public ?bool $listSuppressedAlerts = null;
    
    /**
     * The maximum number of results to return at one time.
     * 
     * @var ?int $maxResults
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=maxResults')]
    public ?int $maxResults = null;
    
    /**
     * The token for the next set of results.
     * 
     * @var ?string $nextToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=nextToken')]
    public ?string $nextToken = null;
    
    /**
     * A filter to limit results to those alerts generated by the specified security profile.
     * 
     * @var ?string $securityProfileName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=securityProfileName')]
    public ?string $securityProfileName = null;
    
    /**
     * The start time for the alerts to be listed.
     * 
     * @var \DateTime $startTime
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=startTime,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public \DateTime $startTime;
    
    /**
     * A filter to limit results to those alerts caused by the specified thing.
     * 
     * @var ?string $thingName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=thingName')]
    public ?string $thingName = null;
    
    /**
     * The verification state of the violation (detect alarm).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListViolationEventsVerificationStateEnum $verificationState
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=verificationState')]
    public ?ListViolationEventsVerificationStateEnum $verificationState = null;
    
	public function __construct()
	{
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
		$this->behaviorCriteriaType = null;
		$this->endTime = new \DateTime();
		$this->listSuppressedAlerts = null;
		$this->maxResults = null;
		$this->nextToken = null;
		$this->securityProfileName = null;
		$this->startTime = new \DateTime();
		$this->thingName = null;
		$this->verificationState = null;
	}
}
