/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DataGuardGroupMember {
    /**
     * Unique name of the member Oracle database.
     */
    @JsonProperty("dbUniqueName")
    public String dbUniqueName;

    public DataGuardGroupMember withDbUniqueName(String dbUniqueName) {
        this.dbUniqueName = dbUniqueName;
        return this;
    }
    
    /**
     * Rubrik ID of the RAC on which this database is hosted. This field is empty when the database is not hosted on a RAC environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("racId")
    public String racId;

    public DataGuardGroupMember withRacId(String racId) {
        this.racId = racId;
        return this;
    }
    
    /**
     * Cluster name assigned to the Oracle RAC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("racName")
    public String racName;

    public DataGuardGroupMember withRacName(String racName) {
        this.racName = racName;
        return this;
    }
    
    /**
     * Current role of the member Oracle database.
     */
    @JsonProperty("role")
    public String role;

    public DataGuardGroupMember withRole(String role) {
        this.role = role;
        return this;
    }
    
    /**
     * Rubrik ID of the standalone Oracle host on which this database is hosted. This field is empty when the database is not hosted on a standalone system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("standaloneHostId")
    public String standaloneHostId;

    public DataGuardGroupMember withStandaloneHostId(String standaloneHostId) {
        this.standaloneHostId = standaloneHostId;
        return this;
    }
    
    /**
     * Name of the standalone Oracle database host.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("standaloneHostName")
    public String standaloneHostName;

    public DataGuardGroupMember withStandaloneHostName(String standaloneHostName) {
        this.standaloneHostName = standaloneHostName;
        return this;
    }
    
    public DataGuardGroupMember(@JsonProperty("dbUniqueName") String dbUniqueName, @JsonProperty("role") String role) {
        this.dbUniqueName = dbUniqueName;
        this.role = role;
  }
}
