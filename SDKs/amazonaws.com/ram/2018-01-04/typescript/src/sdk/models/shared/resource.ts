/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceRegionScopeEnum } from "./resourceregionscopeenum";
import { ResourceStatusEnum } from "./resourcestatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Describes a resource associated with a resource share in RAM.
 */
export class Resource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceGroupArn" })
  resourceGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceRegionScope" })
  resourceRegionScope?: ResourceRegionScopeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceShareArn" })
  resourceShareArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ResourceStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
