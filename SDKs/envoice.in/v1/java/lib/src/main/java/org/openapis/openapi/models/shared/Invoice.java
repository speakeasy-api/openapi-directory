/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Invoice {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessToken")
    public String accessToken;
    public Invoice withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Activities")
    public Activity[] activities;
    public Invoice withActivities(Activity[] activities) {
        this.activities = activities;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Attachments")
    public InvoiceAttachment[] attachments;
    public Invoice withAttachments(InvoiceAttachment[] attachments) {
        this.attachments = attachments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClientId")
    public Integer clientId;
    public Invoice withClientId(Integer clientId) {
        this.clientId = clientId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClonedFromId")
    public Integer clonedFromId;
    public Invoice withClonedFromId(Integer clonedFromId) {
        this.clonedFromId = clonedFromId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrencyId")
    public Integer currencyId;
    public Invoice withCurrencyId(Integer currencyId) {
        this.currencyId = currencyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DiscountAmount")
    public Double discountAmount;
    public Invoice withDiscountAmount(Double discountAmount) {
        this.discountAmount = discountAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("Duedate")
    public OffsetDateTime duedate;
    public Invoice withDuedate(OffsetDateTime duedate) {
        this.duedate = duedate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnablePartialPayments")
    public Boolean enablePartialPayments;
    public Invoice withEnablePartialPayments(Boolean enablePartialPayments) {
        this.enablePartialPayments = enablePartialPayments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EstimationId")
    public Integer estimationId;
    public Invoice withEstimationId(Integer estimationId) {
        this.estimationId = estimationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Integer id;
    public Invoice withId(Integer id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceCategoryId")
    public Integer invoiceCategoryId;
    public Invoice withInvoiceCategoryId(Integer invoiceCategoryId) {
        this.invoiceCategoryId = invoiceCategoryId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsDigitallySigned")
    public Boolean isDigitallySigned;
    public Invoice withIsDigitallySigned(Boolean isDigitallySigned) {
        this.isDigitallySigned = isDigitallySigned;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("IssuedOn")
    public OffsetDateTime issuedOn;
    public Invoice withIssuedOn(OffsetDateTime issuedOn) {
        this.issuedOn = issuedOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Items")
    public InvoiceItem[] items;
    public Invoice withItems(InvoiceItem[] items) {
        this.items = items;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Notes")
    public String notes;
    public Invoice withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Number")
    public String number;
    public Invoice withNumber(String number) {
        this.number = number;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OrderId")
    public Integer orderId;
    public Invoice withOrderId(Integer orderId) {
        this.orderId = orderId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentGateways")
    public PaymentGatewayForInvoice[] paymentGateways;
    public Invoice withPaymentGateways(PaymentGatewayForInvoice[] paymentGateways) {
        this.paymentGateways = paymentGateways;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentLinkId")
    public Integer paymentLinkId;
    public Invoice withPaymentLinkId(Integer paymentLinkId) {
        this.paymentLinkId = paymentLinkId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Payments")
    public Payment[] payments;
    public Invoice withPayments(Payment[] payments) {
        this.payments = payments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PoNumber")
    public String poNumber;
    public Invoice withPoNumber(String poNumber) {
        this.poNumber = poNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecurringProfileId")
    public Integer recurringProfileId;
    public Invoice withRecurringProfileId(Integer recurringProfileId) {
        this.recurringProfileId = recurringProfileId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShouldSendReminders")
    public Boolean shouldSendReminders;
    public Invoice withShouldSendReminders(Boolean shouldSendReminders) {
        this.shouldSendReminders = shouldSendReminders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public InvoiceStatusEnum status;
    public Invoice withStatus(InvoiceStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubTotalAmount")
    public Double subTotalAmount;
    public Invoice withSubTotalAmount(Double subTotalAmount) {
        this.subTotalAmount = subTotalAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxAmount")
    public Double taxAmount;
    public Invoice withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Terms")
    public String terms;
    public Invoice withTerms(String terms) {
        this.terms = terms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalAmount")
    public Double totalAmount;
    public Invoice withTotalAmount(Double totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserId")
    public Integer userId;
    public Invoice withUserId(Integer userId) {
        this.userId = userId;
        return this;
    }
    
}
