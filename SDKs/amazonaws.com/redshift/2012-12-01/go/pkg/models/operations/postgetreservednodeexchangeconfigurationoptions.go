// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetReservedNodeExchangeConfigurationOptionsActionEnum
type POSTGetReservedNodeExchangeConfigurationOptionsActionEnum string

const (
	POSTGetReservedNodeExchangeConfigurationOptionsActionEnumGetReservedNodeExchangeConfigurationOptions POSTGetReservedNodeExchangeConfigurationOptionsActionEnum = "GetReservedNodeExchangeConfigurationOptions"
)

func (e *POSTGetReservedNodeExchangeConfigurationOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetReservedNodeExchangeConfigurationOptions":
		*e = POSTGetReservedNodeExchangeConfigurationOptionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetReservedNodeExchangeConfigurationOptionsActionEnum: %s", s)
	}
}

// POSTGetReservedNodeExchangeConfigurationOptionsVersionEnum
type POSTGetReservedNodeExchangeConfigurationOptionsVersionEnum string

const (
	POSTGetReservedNodeExchangeConfigurationOptionsVersionEnumTwoThousandAndTwelve1201 POSTGetReservedNodeExchangeConfigurationOptionsVersionEnum = "2012-12-01"
)

func (e *POSTGetReservedNodeExchangeConfigurationOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = POSTGetReservedNodeExchangeConfigurationOptionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetReservedNodeExchangeConfigurationOptionsVersionEnum: %s", s)
	}
}

type POSTGetReservedNodeExchangeConfigurationOptionsQueryParams struct {
	Action POSTGetReservedNodeExchangeConfigurationOptionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxRecords *string                                                    `queryParam:"style=form,explode=true,name=MaxRecords"`
	Version    POSTGetReservedNodeExchangeConfigurationOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTGetReservedNodeExchangeConfigurationOptionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetReservedNodeExchangeConfigurationOptionsRequest struct {
	QueryParams POSTGetReservedNodeExchangeConfigurationOptionsQueryParams
	Headers     POSTGetReservedNodeExchangeConfigurationOptionsHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTGetReservedNodeExchangeConfigurationOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
