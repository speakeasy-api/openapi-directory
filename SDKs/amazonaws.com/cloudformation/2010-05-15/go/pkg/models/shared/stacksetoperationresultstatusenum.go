// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StackSetOperationResultStatusEnum string

const (
	StackSetOperationResultStatusEnumPending   StackSetOperationResultStatusEnum = "PENDING"
	StackSetOperationResultStatusEnumRunning   StackSetOperationResultStatusEnum = "RUNNING"
	StackSetOperationResultStatusEnumSucceeded StackSetOperationResultStatusEnum = "SUCCEEDED"
	StackSetOperationResultStatusEnumFailed    StackSetOperationResultStatusEnum = "FAILED"
	StackSetOperationResultStatusEnumCancelled StackSetOperationResultStatusEnum = "CANCELLED"
)

func (e StackSetOperationResultStatusEnum) ToPointer() *StackSetOperationResultStatusEnum {
	return &e
}

func (e *StackSetOperationResultStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLED":
		*e = StackSetOperationResultStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StackSetOperationResultStatusEnum: %v", v)
	}
}
