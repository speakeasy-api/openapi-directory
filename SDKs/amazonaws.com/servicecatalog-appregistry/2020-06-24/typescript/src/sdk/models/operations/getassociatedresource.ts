/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The type of resource associated with the application.
 */
export enum GetAssociatedResourceResourceTypeEnum {
  CfnStack = "CFN_STACK",
  ResourceTagValue = "RESOURCE_TAG_VALUE",
}

export class GetAssociatedResourceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   *  The name, ID, or ARN of the application.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=application",
  })
  application: string;

  /**
   * The name or ID of the resource associated with the application.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=resource",
  })
  resource: string;

  /**
   * The type of resource associated with the application.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=resourceType",
  })
  resourceType: GetAssociatedResourceResourceTypeEnum;
}

export class GetAssociatedResourceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getAssociatedResourceResponse?: shared.GetAssociatedResourceResponse;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
