/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETEventTriggersRequest {
    /**
     * `Bearer {token}` for a valid OAuth token.
     * 
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Authorization")
    public String authorization;
    public GETEventTriggersRequest withAuthorization(String authorization) {
        this.authorization = authorization;
        return this;
    }
    
    /**
     * An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
     * 
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Zuora-Entity-Ids")
    public String zuoraEntityIds;
    public GETEventTriggersRequest withZuoraEntityIds(String zuoraEntityIds) {
        this.zuoraEntityIds = zuoraEntityIds;
        return this;
    }
    
    /**
     * A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
     * 
     * The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
     * 
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Zuora-Track-Id")
    public String zuoraTrackId;
    public GETEventTriggersRequest withZuoraTrackId(String zuoraTrackId) {
        this.zuoraTrackId = zuoraTrackId;
        return this;
    }
    
    /**
     * The status of the event trigger.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=active")
    public String active;
    public GETEventTriggersRequest withActive(String active) {
        this.active = active;
        return this;
    }
    
    /**
     * The Zuora object that trigger condition is defined upon. Should be specified in the pattern: ^[A-Z][\\w\\-]*$
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=baseObject")
    public String baseObject;
    public GETEventTriggersRequest withBaseObject(String baseObject) {
        this.baseObject = baseObject;
        return this;
    }
    
    /**
     * The event type name. Should be specified in the pattern: ^[A-Za-z]{1,}[\w\-]*$
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=eventTypeName")
    public String eventTypeName;
    public GETEventTriggersRequest withEventTypeName(String eventTypeName) {
        this.eventTypeName = eventTypeName;
        return this;
    }
    
    /**
     * The maximum number of data records to be returned. Default to 10 if absent.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public GETEventTriggersRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The first index of the query result. Default to 0 if absent, and the minimum is 0.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start")
    public Long start;
    public GETEventTriggersRequest withStart(Long start) {
        this.start = start;
        return this;
    }
    
}
