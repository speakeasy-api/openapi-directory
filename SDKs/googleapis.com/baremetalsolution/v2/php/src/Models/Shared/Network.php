<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Network - A Network.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Network
{
    /**
     * The cidr of the Network.
     * 
     * @var ?string $cidr
     */
	#[\JMS\Serializer\Annotation\SerializedName('cidr')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cidr = null;
    
    /**
     * Output only. Gateway ip address.
     * 
     * @var ?string $gatewayIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('gatewayIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gatewayIp = null;
    
    /**
     * An identifier for the `Network`, generated by the backend.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * IP address configured.
     * 
     * @var ?string $ipAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipAddress = null;
    
    /**
     * Whether network uses standard frames or jumbo ones.
     * 
     * @var ?bool $jumboFramesEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('jumboFramesEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $jumboFramesEnabled = null;
    
    /**
     * Labels as key value pairs.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * List of physical interfaces.
     * 
     * @var ?array<string> $macAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('macAddress')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $macAddress = null;
    
    /**
     * Input only. List of mount points to attach the network to.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NetworkMountPoint> $mountPoints
     */
	#[\JMS\Serializer\Annotation\SerializedName('mountPoints')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NetworkMountPoint>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $mountPoints = null;
    
    /**
     * Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Output only. Pod name.
     * 
     * @var ?string $pod
     */
	#[\JMS\Serializer\Annotation\SerializedName('pod')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pod = null;
    
    /**
     * List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NetworkAddressReservation> $reservations
     */
	#[\JMS\Serializer\Annotation\SerializedName('reservations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NetworkAddressReservation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $reservations = null;
    
    /**
     * IP range for reserved for services (e.g. NFS).
     * 
     * @var ?string $servicesCidr
     */
	#[\JMS\Serializer\Annotation\SerializedName('servicesCidr')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $servicesCidr = null;
    
    /**
     * The Network state.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NetworkStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkStateEnum $state = null;
    
    /**
     * The type of this network.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NetworkTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkTypeEnum $type = null;
    
    /**
     * The vlan id of the Network.
     * 
     * @var ?string $vlanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('vlanId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vlanId = null;
    
    /**
     * A network VRF.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Vrf $vrf
     */
	#[\JMS\Serializer\Annotation\SerializedName('vrf')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Vrf')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Vrf $vrf = null;
    
	public function __construct()
	{
		$this->cidr = null;
		$this->gatewayIp = null;
		$this->id = null;
		$this->ipAddress = null;
		$this->jumboFramesEnabled = null;
		$this->labels = null;
		$this->macAddress = null;
		$this->mountPoints = null;
		$this->name = null;
		$this->pod = null;
		$this->reservations = null;
		$this->servicesCidr = null;
		$this->state = null;
		$this->type = null;
		$this->vlanId = null;
		$this->vrf = null;
	}
}
