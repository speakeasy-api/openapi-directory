<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetCommitteesRequest
{
    /**
     * 
     * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
     * 
     * 
     * @var string $apiKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=api_key')]
    public string $apiKey;
    
    /**
     * 
     * A unique identifier assigned to each candidate registered with the FEC.
     * If a person runs for several offices, that person will have separate candidate IDs for each office.
     * First character indicates office - [P]residential, [H]ouse, [S]enate].
     * Second character is the last digit of the two-year period the ID was created.
     * Third and fourth is the candidate state. Presidential IDs don't have state.
     * Fifth and sixth is the district when the candidate first ran. This does not change if the
     * candidate/member's district changes during re-districting. Presidential IDs don't have districts.
     * The rest is sequence.
     * 
     * 
     * @var ?array<string> $candidateId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=candidate_id')]
    public ?array $candidateId = null;
    
    /**
     * 
     * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
     * 
     * 
     * @var ?array<string> $committeeId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_id')]
    public ?array $committeeId = null;
    
    /**
     * The one-letter type code of the organization:
     * 
     *         - C communication cost
     *         - D delegate
     *         - E electioneering communication
     *         - H House
     *         - I independent expenditure filer (not a committee)
     *         - N PAC - nonqualified
     *         - O independent expenditure-only (super PACs)
     *         - P presidential
     *         - Q PAC - qualified
     *         - S Senate
     *         - U single candidate independent expenditure
     *         - V PAC with non-contribution account, nonqualified
     *         - W PAC with non-contribution account, qualified
     *         - X party, nonqualified
     *         - Y party, qualified
     *         - Z national party non-federal account
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetCommitteesCommitteeTypeEnum> $committeeType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_type')]
    public ?array $committeeType = null;
    
    /**
     * 
     * A two year election cycle that the committee was active- (after original registration
     * date but before expiration date in Form 1s) The cycle begins with
     * an odd year and is named for its ending, even year.
     * 
     * 
     * @var ?array<int> $cycle
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=cycle')]
    public ?array $cycle = null;
    
    /**
     * The one-letter designation code of the organization:
     * 
     *          - A authorized by a candidate
     *          - J joint fundraising committee
     *          - P principal campaign committee of a candidate
     *          - U unauthorized
     *          - B lobbyist/registrant PAC
     *          - D leadership PAC
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetCommitteesDesignationEnum> $designation
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=designation')]
    public ?array $designation = null;
    
    /**
     * The one-letter 
     * 
     *     code of the filing frequency:
     *          - A Administratively terminated
     *          - D Debt
     *          - M Monthly filer
     *          - Q Quarterly filer
     *          - T Terminated
     *          - W Waived
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetCommitteesFilingFrequencyEnum> $filingFrequency
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filing_frequency')]
    public ?array $filingFrequency = null;
    
    /**
     * Filter for committees whose first Form 1 was received on or before this date.
     * 
     * @var ?\DateTime $maxFirstF1Date
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_first_f1_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $maxFirstF1Date = null;
    
    /**
     * Filter for committees whose first filing was received on or before this date.
     * 
     * @var ?\DateTime $maxFirstFileDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_first_file_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $maxFirstFileDate = null;
    
    /**
     * Filter for committees whose latest Form 1 was received on or before this date.
     * 
     * @var ?\DateTime $maxLastF1Date
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_last_f1_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $maxLastF1Date = null;
    
    /**
     * Filter for committees whose first Form 1 was received on or after this date.
     * 
     * @var ?\DateTime $minFirstF1Date
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_first_f1_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $minFirstF1Date = null;
    
    /**
     * Filter for committees whose first filing was received on or after this date.
     * 
     * @var ?\DateTime $minFirstFileDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_first_file_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $minFirstFileDate = null;
    
    /**
     * Filter for committees whose latest Form 1 was received on or after this date.
     * 
     * @var ?\DateTime $minLastF1Date
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_last_f1_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $minLastF1Date = null;
    
    /**
     * The one-letter code for the kind for organization:
     * 
     *         - C corporation
     *         - L labor organization
     *         - M membership organization
     *         - T trade association
     *         - V cooperative
     *         - W corporation without capital stock
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetCommitteesOrganizationTypeEnum> $organizationType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=organization_type')]
    public ?array $organizationType = null;
    
    /**
     * For paginating through results, starting at page 1
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
     * 
     * @var ?array<string> $party
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=party')]
    public ?array $party = null;
    
    /**
     * The number of results returned per page. Defaults to 20.
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
     * 
     * @var ?array<string> $q
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q')]
    public ?array $q = null;
    
    /**
     * Provide a field to sort by. Use `-` for descending order.
     * 
     * 
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * Hide null values on sorted column(s).
     * 
     * @var ?bool $sortHideNull
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_hide_null')]
    public ?bool $sortHideNull = null;
    
    /**
     * Toggle that filters out all rows having sort column that is non-null
     * 
     * @var ?bool $sortNullOnly
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_null_only')]
    public ?bool $sortNullOnly = null;
    
    /**
     * Toggle that sorts null values last
     * 
     * @var ?bool $sortNullsLast
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_nulls_last')]
    public ?bool $sortNullsLast = null;
    
    /**
     * 
     * A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. This is a filter for Leadership PAC sponsor.
     * 
     * 
     * @var ?array<string> $sponsorCandidateId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sponsor_candidate_id')]
    public ?array $sponsorCandidateId = null;
    
    /**
     * US state or territory
     * 
     * @var ?array<string> $state
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state')]
    public ?array $state = null;
    
    /**
     * Name of the Committee's treasurer. If multiple treasurers for the committee, the most recent treasurer will be shown.
     * 
     * @var ?array<string> $treasurerName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=treasurer_name')]
    public ?array $treasurerName = null;
    
    /**
     * A year that the committee was activeâ€” (after original registration date     or filing but before expiration date)
     * 
     * @var ?array<int> $year
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=year')]
    public ?array $year = null;
    
	public function __construct()
	{
		$this->apiKey = "";
		$this->candidateId = null;
		$this->committeeId = null;
		$this->committeeType = null;
		$this->cycle = null;
		$this->designation = null;
		$this->filingFrequency = null;
		$this->maxFirstF1Date = null;
		$this->maxFirstFileDate = null;
		$this->maxLastF1Date = null;
		$this->minFirstF1Date = null;
		$this->minFirstFileDate = null;
		$this->minLastF1Date = null;
		$this->organizationType = null;
		$this->page = null;
		$this->party = null;
		$this->perPage = null;
		$this->q = null;
		$this->sort = null;
		$this->sortHideNull = null;
		$this->sortNullOnly = null;
		$this->sortNullsLast = null;
		$this->sponsorCandidateId = null;
		$this->state = null;
		$this->treasurerName = null;
		$this->year = null;
	}
}
