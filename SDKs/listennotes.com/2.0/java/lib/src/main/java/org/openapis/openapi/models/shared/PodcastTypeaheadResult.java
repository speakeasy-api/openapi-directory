/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PodcastTypeaheadResult {
    /**
     * Whether this podcast contains explicit language.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("explicit_content")
    public Boolean explicitContent;

    public PodcastTypeaheadResult withExplicitContent(Boolean explicitContent) {
        this.explicitContent = explicitContent;
        return this;
    }
    
    /**
     * Podcast id, which can be used to further fetch detailed podcast metadata via `GET /podcasts/{id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public PodcastTypeaheadResult withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Image url for this podcast's artwork. If you are using PRO/ENTERPRISE plan, then it's
     * a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**,
     * low resolution image (300x300).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public String image;

    public PodcastTypeaheadResult withImage(String image) {
        this.image = image;
        return this;
    }
    
    /**
     * Highlighted segment of this podcast's publisher name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publisher_highlighted")
    public String publisherHighlighted;

    public PodcastTypeaheadResult withPublisherHighlighted(String publisherHighlighted) {
        this.publisherHighlighted = publisherHighlighted;
        return this;
    }
    
    /**
     * Plain text of this podcast's publisher name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publisher_original")
    public String publisherOriginal;

    public PodcastTypeaheadResult withPublisherOriginal(String publisherOriginal) {
        this.publisherOriginal = publisherOriginal;
        return this;
    }
    
    /**
     * Thumbnail image url for this podcast's artwork (300x300).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnail")
    public String thumbnail;

    public PodcastTypeaheadResult withThumbnail(String thumbnail) {
        this.thumbnail = thumbnail;
        return this;
    }
    
    /**
     * Highlighted segment of podcast name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title_highlighted")
    public String titleHighlighted;

    public PodcastTypeaheadResult withTitleHighlighted(String titleHighlighted) {
        this.titleHighlighted = titleHighlighted;
        return this;
    }
    
    /**
     * Plain text of podcast name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title_original")
    public String titleOriginal;

    public PodcastTypeaheadResult withTitleOriginal(String titleOriginal) {
        this.titleOriginal = titleOriginal;
        return this;
    }
    
    public PodcastTypeaheadResult(){}
}
