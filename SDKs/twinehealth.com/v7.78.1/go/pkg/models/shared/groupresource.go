// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GroupResourceAttributes struct {
	// A description of the group
	Bio *string `json:"bio,omitempty"`
	// The name of the group
	Name string `json:"name"`
}

type GroupResourceLinks struct {
	Self string `json:"self"`
}

type GroupResourceTypeEnum string

const (
	GroupResourceTypeEnumGroup GroupResourceTypeEnum = "group"
)

func (e *GroupResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "group":
		*e = GroupResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupResourceTypeEnum: %s", s)
	}
}

type GroupResource struct {
	Attributes GroupResourceAttributes `json:"attributes"`
	ID         string                  `json:"id"`
	Links      *GroupResourceLinks     `json:"links,omitempty"`
	Type       GroupResourceTypeEnum   `json:"type"`
}

type GroupResourceInput struct {
	Attributes GroupResourceAttributes `json:"attributes"`
	ID         string                  `json:"id"`
	Type       GroupResourceTypeEnum   `json:"type"`
}
