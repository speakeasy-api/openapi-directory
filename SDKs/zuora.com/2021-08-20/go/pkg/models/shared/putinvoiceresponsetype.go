// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// PutInvoiceResponseTypeStatusEnum - The status of the invoice.
type PutInvoiceResponseTypeStatusEnum string

const (
	PutInvoiceResponseTypeStatusEnumDraft    PutInvoiceResponseTypeStatusEnum = "Draft"
	PutInvoiceResponseTypeStatusEnumPosted   PutInvoiceResponseTypeStatusEnum = "Posted"
	PutInvoiceResponseTypeStatusEnumCanceled PutInvoiceResponseTypeStatusEnum = "Canceled"
	PutInvoiceResponseTypeStatusEnumError    PutInvoiceResponseTypeStatusEnum = "Error"
)

func (e *PutInvoiceResponseTypeStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Draft":
		fallthrough
	case "Posted":
		fallthrough
	case "Canceled":
		fallthrough
	case "Error":
		*e = PutInvoiceResponseTypeStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutInvoiceResponseTypeStatusEnum: %s", s)
	}
}

// PutInvoiceResponseTypeTransferredToAccountingEnum - Whether the invoice was transferred to an external accounting system.
type PutInvoiceResponseTypeTransferredToAccountingEnum string

const (
	PutInvoiceResponseTypeTransferredToAccountingEnumProcessing PutInvoiceResponseTypeTransferredToAccountingEnum = "Processing"
	PutInvoiceResponseTypeTransferredToAccountingEnumYes        PutInvoiceResponseTypeTransferredToAccountingEnum = "Yes"
	PutInvoiceResponseTypeTransferredToAccountingEnumError      PutInvoiceResponseTypeTransferredToAccountingEnum = "Error"
	PutInvoiceResponseTypeTransferredToAccountingEnumIgnore     PutInvoiceResponseTypeTransferredToAccountingEnum = "Ignore"
)

func (e *PutInvoiceResponseTypeTransferredToAccountingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Processing":
		fallthrough
	case "Yes":
		fallthrough
	case "Error":
		fallthrough
	case "Ignore":
		*e = PutInvoiceResponseTypeTransferredToAccountingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutInvoiceResponseTypeTransferredToAccountingEnum: %s", s)
	}
}

// PutInvoiceResponseType - Container for custom fields of an Invoice object.
type PutInvoiceResponseType struct {
	// ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	IntegrationIDNS *string `json:"IntegrationId__NS,omitempty"`
	// Status of the invoice's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	IntegrationStatusNS *string `json:"IntegrationStatus__NS,omitempty"`
	// Date when the invoice was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	SyncDateNS *string `json:"SyncDate__NS,omitempty"`
	// The ID of the customer account associated with the invoice.
	//
	AccountID *string `json:"accountId,omitempty"`
	// The total amount of the invoice.
	//
	Amount *float64 `json:"amount,omitempty"`
	// Whether invoices are automatically picked up for processing in the corresponding payment run.
	//
	AutoPay *bool `json:"autoPay,omitempty"`
	// The balance of the invoice.
	//
	Balance *float64 `json:"balance,omitempty"`
	// The ID of the Zuora user who cancelled the invoice.
	//
	CancelledByID *string `json:"cancelledById,omitempty"`
	// The date and time when the invoice was cancelled, in `yyyy-mm-dd hh:mm:ss` format.
	//
	CancelledOn *time.Time `json:"cancelledOn,omitempty"`
	// Comments about the invoice.
	//
	Comment *string `json:"comment,omitempty"`
	// The ID of the Zuora user who created the invoice.
	//
	CreatedByID *string `json:"createdById,omitempty"`
	// The date and time when the invoice was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.
	//
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// **Note:** This filed is only available if you have the Credit Balance feature enabled and the Invoice Settlement feature disabled.
	//
	// The currency amount of the adjustment applied to the customer's credit balance.
	//
	CreditBalanceAdjustmentAmount *float64 `json:"creditBalanceAdjustmentAmount,omitempty"`
	// A currency defined in the web-based UI administrative settings.
	//
	Currency *string `json:"currency,omitempty"`
	// The date by which the payment for this invoice is due.
	//
	DueDate *types.Date `json:"dueDate,omitempty"`
	// The unique ID of the invoice.
	//
	ID *string `json:"id,omitempty"`
	// The date on which to generate the invoice.
	//
	InvoiceDate *types.Date `json:"invoiceDate,omitempty"`
	// The unique identification number of the invoice.
	//
	Number *string `json:"number,omitempty"`
	// The ID of the Zuora user who posted the invoice.
	//
	PostedByID *string `json:"postedById,omitempty"`
	// The date and time when the invoice was posted, in `yyyy-mm-dd hh:mm:ss` format.
	//
	PostedOn *time.Time `json:"postedOn,omitempty"`
	// The status of the invoice.
	//
	Status *PutInvoiceResponseTypeStatusEnum `json:"status,omitempty"`
	// Returns `true` if the request was processed successfully.
	//
	Success *bool `json:"success,omitempty"`
	// The target date for the invoice, in `yyyy-mm-dd` format. For example, 2017-07-20.
	//
	TargetDate *types.Date `json:"targetDate,omitempty"`
	// The amount of taxation.
	//
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// The total amount of taxes or VAT, for which the customer has an exemption.
	//
	TotalTaxExemptAmount *float64 `json:"totalTaxExemptAmount,omitempty"`
	// Whether the invoice was transferred to an external accounting system.
	//
	TransferredToAccounting *PutInvoiceResponseTypeTransferredToAccountingEnum `json:"transferredToAccounting,omitempty"`
	// The ID of the Zuora user who last updated the invoice.
	//
	UpdatedByID *string `json:"updatedById,omitempty"`
	// The date and time when the invoice was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-02 15:36:10.
	//
	UpdatedDate *time.Time `json:"updatedDate,omitempty"`
}
