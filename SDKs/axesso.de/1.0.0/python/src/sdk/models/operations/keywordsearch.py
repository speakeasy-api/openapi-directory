"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import keywordsearchresponse as shared_keywordsearchresponse
from typing import Optional


@dataclasses.dataclass
class KeywordSearchRequest:
    
    domain_code: str = dataclasses.field(metadata={'query_param': { 'field_name': 'domainCode', 'style': 'form', 'explode': True }})
    r"""domain for the search"""  
    keyword: str = dataclasses.field(metadata={'query_param': { 'field_name': 'keyword', 'style': 'form', 'explode': True }})
    r"""keyword to search"""  
    number_of_products: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'numberOfProducts', 'style': 'form', 'explode': True }})
    r"""number of the results (max 20)"""  
    sort_by: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sortBy', 'style': 'form', 'explode': True }})
    r"""sort option"""  
    

@dataclasses.dataclass
class KeywordSearchResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    keyword_search_response: Optional[shared_keywordsearchresponse.KeywordSearchResponse] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    