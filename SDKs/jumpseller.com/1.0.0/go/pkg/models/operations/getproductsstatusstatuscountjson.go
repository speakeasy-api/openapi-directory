// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetProductsStatusStatusCountJSONStatusEnum - Status of the Product used as filter
type GetProductsStatusStatusCountJSONStatusEnum string

const (
	GetProductsStatusStatusCountJSONStatusEnumAvailable    GetProductsStatusStatusCountJSONStatusEnum = "available"
	GetProductsStatusStatusCountJSONStatusEnumNotAvailable GetProductsStatusStatusCountJSONStatusEnum = "not-available"
	GetProductsStatusStatusCountJSONStatusEnumDisabled     GetProductsStatusStatusCountJSONStatusEnum = "disabled"
)

func (e *GetProductsStatusStatusCountJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "available":
		fallthrough
	case "not-available":
		fallthrough
	case "disabled":
		*e = GetProductsStatusStatusCountJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProductsStatusStatusCountJSONStatusEnum: %s", s)
	}
}

type GetProductsStatusStatusCountJSONPathParams struct {
	// Status of the Product used as filter
	Status GetProductsStatusStatusCountJSONStatusEnum `pathParam:"style=simple,explode=false,name=status"`
}

type GetProductsStatusStatusCountJSONQueryParams struct {
	// API OAuth token.
	Authtoken string `queryParam:"style=form,explode=true,name=authtoken"`
	// Locale code of the translation
	Locale *string `queryParam:"style=form,explode=true,name=locale"`
	// API OAuth login.
	Login string `queryParam:"style=form,explode=true,name=login"`
}

type GetProductsStatusStatusCountJSONRequest struct {
	PathParams  GetProductsStatusStatusCountJSONPathParams
	QueryParams GetProductsStatusStatusCountJSONQueryParams
}

type GetProductsStatusStatusCountJSONResponse struct {
	ContentType string
	// OK
	Count       *shared.Count
	StatusCode  int
	RawResponse *http.Response
	// Status Invalid.
	StatusInvalid *shared.StatusInvalid
}
