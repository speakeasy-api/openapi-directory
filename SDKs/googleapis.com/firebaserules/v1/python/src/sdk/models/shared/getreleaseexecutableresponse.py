"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GetReleaseExecutableResponseExecutableVersionEnum(str, Enum):
    r"""The Rules runtime version of the executable."""
    RELEASE_EXECUTABLE_VERSION_UNSPECIFIED = 'RELEASE_EXECUTABLE_VERSION_UNSPECIFIED'
    FIREBASE_RULES_EXECUTABLE_V1 = 'FIREBASE_RULES_EXECUTABLE_V1'
    FIREBASE_RULES_EXECUTABLE_V2 = 'FIREBASE_RULES_EXECUTABLE_V2'

class GetReleaseExecutableResponseLanguageEnum(str, Enum):
    r"""`Language` used to generate the executable bytes."""
    LANGUAGE_UNSPECIFIED = 'LANGUAGE_UNSPECIFIED'
    FIREBASE_RULES = 'FIREBASE_RULES'
    EVENT_FLOW_TRIGGERS = 'EVENT_FLOW_TRIGGERS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetReleaseExecutableResponse:
    r"""The response for FirebaseRulesService.GetReleaseExecutable"""
    
    executable: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executable'), 'exclude': lambda f: f is None }})
    r"""Executable view of the `Ruleset` referenced by the `Release`."""  
    executable_version: Optional[GetReleaseExecutableResponseExecutableVersionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executableVersion'), 'exclude': lambda f: f is None }})
    r"""The Rules runtime version of the executable."""  
    language: Optional[GetReleaseExecutableResponseLanguageEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('language'), 'exclude': lambda f: f is None }})
    r"""`Language` used to generate the executable bytes."""  
    ruleset_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rulesetName'), 'exclude': lambda f: f is None }})
    r"""`Ruleset` name associated with the `Release` executable."""  
    sync_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('syncTime'), 'exclude': lambda f: f is None }})
    r"""Optional, indicates the freshness of the result. The response is guaranteed to be the latest within an interval up to the sync_time (inclusive)."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Timestamp for the most recent `Release.update_time`."""  
    