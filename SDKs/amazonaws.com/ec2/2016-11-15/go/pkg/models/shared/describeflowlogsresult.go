// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum - The format for the flow log.
type DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum string

const (
	DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnumPlainText DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum = "plain-text"
	DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnumParquet   DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum = "parquet"
)

func (e DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum) ToPointer() *DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum {
	return &e
}

func (e *DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "plain-text":
		fallthrough
	case "parquet":
		*e = DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum: %v", v)
	}
}

// DescribeFlowLogsResultFlowLogsDestinationOptions - The destination options.
type DescribeFlowLogsResultFlowLogsDestinationOptions struct {
	FileFormat               *DescribeFlowLogsResultFlowLogsDestinationOptionsFileFormatEnum
	HiveCompatiblePartitions *bool
	PerHourPartition         *bool
}

// DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum - The type of destination for the flow log data.
type DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum string

const (
	DescribeFlowLogsResultFlowLogsLogDestinationTypeEnumCloudWatchLogs      DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum = "cloud-watch-logs"
	DescribeFlowLogsResultFlowLogsLogDestinationTypeEnumS3                  DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum = "s3"
	DescribeFlowLogsResultFlowLogsLogDestinationTypeEnumKinesisDataFirehose DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum = "kinesis-data-firehose"
)

func (e DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum) ToPointer() *DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum {
	return &e
}

func (e *DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cloud-watch-logs":
		fallthrough
	case "s3":
		fallthrough
	case "kinesis-data-firehose":
		*e = DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum: %v", v)
	}
}

// DescribeFlowLogsResultFlowLogsTags - Describes a tag.
type DescribeFlowLogsResultFlowLogsTags struct {
	Key   *string
	Value *string
}

// DescribeFlowLogsResultFlowLogsTrafficTypeEnum - The type of traffic captured for the flow log.
type DescribeFlowLogsResultFlowLogsTrafficTypeEnum string

const (
	DescribeFlowLogsResultFlowLogsTrafficTypeEnumAccept DescribeFlowLogsResultFlowLogsTrafficTypeEnum = "ACCEPT"
	DescribeFlowLogsResultFlowLogsTrafficTypeEnumReject DescribeFlowLogsResultFlowLogsTrafficTypeEnum = "REJECT"
	DescribeFlowLogsResultFlowLogsTrafficTypeEnumAll    DescribeFlowLogsResultFlowLogsTrafficTypeEnum = "ALL"
)

func (e DescribeFlowLogsResultFlowLogsTrafficTypeEnum) ToPointer() *DescribeFlowLogsResultFlowLogsTrafficTypeEnum {
	return &e
}

func (e *DescribeFlowLogsResultFlowLogsTrafficTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCEPT":
		fallthrough
	case "REJECT":
		fallthrough
	case "ALL":
		*e = DescribeFlowLogsResultFlowLogsTrafficTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeFlowLogsResultFlowLogsTrafficTypeEnum: %v", v)
	}
}

// DescribeFlowLogsResultFlowLogs - Describes a flow log.
type DescribeFlowLogsResultFlowLogs struct {
	CreationTime             *time.Time
	DeliverCrossAccountRole  *string
	DeliverLogsErrorMessage  *string
	DeliverLogsPermissionArn *string
	DeliverLogsStatus        *string
	DestinationOptions       *DescribeFlowLogsResultFlowLogsDestinationOptions
	FlowLogID                *string
	FlowLogStatus            *string
	LogDestination           *string
	LogDestinationType       *DescribeFlowLogsResultFlowLogsLogDestinationTypeEnum
	LogFormat                *string
	LogGroupName             *string
	MaxAggregationInterval   *int64
	ResourceID               *string
	Tags                     []DescribeFlowLogsResultFlowLogsTags
	TrafficType              *DescribeFlowLogsResultFlowLogsTrafficTypeEnum
}

// DescribeFlowLogsResult - Success
type DescribeFlowLogsResult struct {
	FlowLogs  []DescribeFlowLogsResultFlowLogs
	NextToken *string
}
