// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAttachClassicLinkVpcActionEnum
type GETAttachClassicLinkVpcActionEnum string

const (
	GETAttachClassicLinkVpcActionEnumAttachClassicLinkVpc GETAttachClassicLinkVpcActionEnum = "AttachClassicLinkVpc"
)

func (e *GETAttachClassicLinkVpcActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AttachClassicLinkVpc":
		*e = GETAttachClassicLinkVpcActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAttachClassicLinkVpcActionEnum: %s", s)
	}
}

// GETAttachClassicLinkVpcVersionEnum
type GETAttachClassicLinkVpcVersionEnum string

const (
	GETAttachClassicLinkVpcVersionEnumTwoThousandAndSixteen1115 GETAttachClassicLinkVpcVersionEnum = "2016-11-15"
)

func (e *GETAttachClassicLinkVpcVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETAttachClassicLinkVpcVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAttachClassicLinkVpcVersionEnum: %s", s)
	}
}

type GETAttachClassicLinkVpcQueryParams struct {
	Action GETAttachClassicLinkVpcActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.
	InstanceID string `queryParam:"style=form,explode=true,name=InstanceId"`
	// The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC.
	SecurityGroupID []string                           `queryParam:"style=form,explode=true,name=SecurityGroupId"`
	Version         GETAttachClassicLinkVpcVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The ID of a ClassicLink-enabled VPC.
	VpcID string `queryParam:"style=form,explode=true,name=VpcId"`
}

type GETAttachClassicLinkVpcHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAttachClassicLinkVpcRequest struct {
	QueryParams GETAttachClassicLinkVpcQueryParams
	Headers     GETAttachClassicLinkVpcHeaders
}

type GETAttachClassicLinkVpcResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
