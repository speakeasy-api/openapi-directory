// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutOrganizationConfigRuleXAmzTargetEnum
type PutOrganizationConfigRuleXAmzTargetEnum string

const (
	PutOrganizationConfigRuleXAmzTargetEnumStarlingDoveServicePutOrganizationConfigRule PutOrganizationConfigRuleXAmzTargetEnum = "StarlingDoveService.PutOrganizationConfigRule"
)

func (e PutOrganizationConfigRuleXAmzTargetEnum) ToPointer() *PutOrganizationConfigRuleXAmzTargetEnum {
	return &e
}

func (e *PutOrganizationConfigRuleXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "StarlingDoveService.PutOrganizationConfigRule":
		*e = PutOrganizationConfigRuleXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutOrganizationConfigRuleXAmzTargetEnum: %v", v)
	}
}

type PutOrganizationConfigRuleRequest struct {
	PutOrganizationConfigRuleRequest shared.PutOrganizationConfigRuleRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       PutOrganizationConfigRuleXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutOrganizationConfigRuleResponse struct {
	ContentType string
	// InsufficientPermissionsException
	InsufficientPermissionsException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// MaxNumberOfOrganizationConfigRulesExceededException
	MaxNumberOfOrganizationConfigRulesExceededException interface{}
	// NoAvailableOrganizationException
	NoAvailableOrganizationException interface{}
	// OrganizationAccessDeniedException
	OrganizationAccessDeniedException interface{}
	// OrganizationAllFeaturesNotEnabledException
	OrganizationAllFeaturesNotEnabledException interface{}
	// Success
	PutOrganizationConfigRuleResponse *shared.PutOrganizationConfigRuleResponse
	StatusCode                        int
	RawResponse                       *http.Response
	// ResourceInUseException
	ResourceInUseException interface{}
	// ValidationException
	ValidationException interface{}
}
