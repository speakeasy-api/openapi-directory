/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudAssuredworkloadsV1ViolationRemediation } from "./googlecloudassuredworkloadsv1violationremediation";
import { Expose, Type } from "class-transformer";

/**
 * Output only. State of the violation
 */
export enum GoogleCloudAssuredworkloadsV1ViolationStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Resolved = "RESOLVED",
  Unresolved = "UNRESOLVED",
  Exception = "EXCEPTION",
}

/**
 * Workload monitoring Violation. Next Id: 22
 */
export class GoogleCloudAssuredworkloadsV1Violation extends SpeakeasyBase {
  /**
   * A boolean that indicates if the violation is acknowledged
   */
  @SpeakeasyMetadata()
  @Expose({ name: "acknowledged" })
  acknowledged?: boolean;

  /**
   * Optional. Timestamp when this violation was acknowledged last. This will be absent when acknowledged field is marked as false.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "acknowledgementTime" })
  acknowledgementTime?: string;

  /**
   * Output only. Immutable. Audit Log Link for violated resource Format: https://console.cloud.google.com/logs/query;query={logName}{protoPayload.resourceName}{timeRange}{folder}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auditLogLink" })
  auditLogLink?: string;

  /**
   * Output only. Time of the event which triggered the Violation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beginTime" })
  beginTime?: string;

  /**
   * Output only. Category under which this violation is mapped. e.g. Location, Service Usage, Access, Encryption, etc.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: string;

  /**
   * Output only. Description for the Violation. e.g. OrgPolicy gcp.resourceLocations has non compliant value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Output only. Immutable. Audit Log link to find business justification provided for violation exception. Format: https://console.cloud.google.com/logs/query;query={logName}{protoPayload.resourceName}{protoPayload.methodName}{timeRange}{organization}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exceptionAuditLogLink" })
  exceptionAuditLogLink?: string;

  /**
   * Output only. Immutable. Name of the Violation. Format: organizations/{organization}/locations/{location}/workloads/{workload_id}/violations/{violations_id}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. Immutable. Name of the OrgPolicy which was modified with non-compliant change and resulted this violation. Format: projects/{project_number}/policies/{constraint_name} folders/{folder_id}/policies/{constraint_name} organizations/{organization_id}/policies/{constraint_name}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nonCompliantOrgPolicy" })
  nonCompliantOrgPolicy?: string;

  /**
   * Output only. Immutable. The org-policy-constraint that was incorrectly changed, which resulted in this violation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orgPolicyConstraint" })
  orgPolicyConstraint?: string;

  /**
   * Represents remediation guidance to resolve compliance violation for AssuredWorkload
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remediation" })
  @Type(() => GoogleCloudAssuredworkloadsV1ViolationRemediation)
  remediation?: GoogleCloudAssuredworkloadsV1ViolationRemediation;

  /**
   * Output only. Time of the event which fixed the Violation. If the violation is ACTIVE this will be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resolveTime" })
  resolveTime?: string;

  /**
   * Output only. State of the violation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: GoogleCloudAssuredworkloadsV1ViolationStateEnum;

  /**
   * Output only. The last time when the Violation record was updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
