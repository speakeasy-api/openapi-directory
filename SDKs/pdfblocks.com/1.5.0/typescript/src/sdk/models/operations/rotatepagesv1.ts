/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The angle of rotation of the pages. Positive angles rotate the pages clockwise. Negative angles rotate the pages counter-clockwise.
 */
export enum RotatePagesV1RequestBodyAngleEnum {
  Zero = "0",
  Ninety = "90",
  OneHundredAndEighty = "180",
  TwoHundredAndSeventy = "270",
  Minus90 = "-90",
  Minus180 = "-180",
  Minus270 = "-270",
}

export class RotatePagesV1RequestBodyFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

export class RotatePagesV1RequestBody extends SpeakeasyBase {
  /**
   * The angle of rotation of the pages. Positive angles rotate the pages clockwise. Negative angles rotate the pages counter-clockwise.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=angle" })
  angle: RotatePagesV1RequestBodyAngleEnum;

  /**
   * The input PDF document
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file: RotatePagesV1RequestBodyFile;

  /**
   * The first page of the range to rotate in the PDF document. If empty, it defaults to the first page of the document.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=first_page" })
  firstPage?: number;

  /**
   * The last page of the range to rotate in the PDF document. If empty, it defaults to the last page of the document.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=last_page" })
  lastPage?: number;
}

/**
 * Error
 */
export class RotatePagesV14XXApplicationProblemPlusJson extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  errors?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class RotatePagesV1Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The document was processed succesfully.
   */
  @SpeakeasyMetadata()
  rotatePagesV1200ApplicationPdfBinaryString?: Uint8Array;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  rotatePagesV14XXApplicationProblemPlusJsonObject?: RotatePagesV14XXApplicationProblemPlusJson;
}
