// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SortKeyTypeEnum string

const (
	SortKeyTypeEnumServiceNamespaceAscending       SortKeyTypeEnum = "SERVICE_NAMESPACE_ASCENDING"
	SortKeyTypeEnumServiceNamespaceDescending      SortKeyTypeEnum = "SERVICE_NAMESPACE_DESCENDING"
	SortKeyTypeEnumLastAuthenticatedTimeAscending  SortKeyTypeEnum = "LAST_AUTHENTICATED_TIME_ASCENDING"
	SortKeyTypeEnumLastAuthenticatedTimeDescending SortKeyTypeEnum = "LAST_AUTHENTICATED_TIME_DESCENDING"
)

func (e SortKeyTypeEnum) ToPointer() *SortKeyTypeEnum {
	return &e
}

func (e *SortKeyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SERVICE_NAMESPACE_ASCENDING":
		fallthrough
	case "SERVICE_NAMESPACE_DESCENDING":
		fallthrough
	case "LAST_AUTHENTICATED_TIME_ASCENDING":
		fallthrough
	case "LAST_AUTHENTICATED_TIME_DESCENDING":
		*e = SortKeyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SortKeyTypeEnum: %v", v)
	}
}
