"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import basekpiresult as shared_basekpiresult
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CampaignDateRangeKpiResponse:
    r"""Provides the results of a query that retrieved the data for a standard metric that applies to a campaign, and provides information about that query."""
    
    application_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ApplicationId') }})  
    campaign_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CampaignId') }})  
    end_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    kpi_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KpiName') }})  
    kpi_result: shared_basekpiresult.BaseKpiResult = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KpiResult') }})  
    start_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})  
    