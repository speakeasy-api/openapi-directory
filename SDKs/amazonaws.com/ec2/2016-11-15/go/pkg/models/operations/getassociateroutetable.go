// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAssociateRouteTableActionEnum
type GETAssociateRouteTableActionEnum string

const (
	GETAssociateRouteTableActionEnumAssociateRouteTable GETAssociateRouteTableActionEnum = "AssociateRouteTable"
)

func (e *GETAssociateRouteTableActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AssociateRouteTable":
		*e = GETAssociateRouteTableActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssociateRouteTableActionEnum: %s", s)
	}
}

// GETAssociateRouteTableVersionEnum
type GETAssociateRouteTableVersionEnum string

const (
	GETAssociateRouteTableVersionEnumTwoThousandAndSixteen1115 GETAssociateRouteTableVersionEnum = "2016-11-15"
)

func (e *GETAssociateRouteTableVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETAssociateRouteTableVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssociateRouteTableVersionEnum: %s", s)
	}
}

type GETAssociateRouteTableRequest struct {
	Action GETAssociateRouteTableActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the internet gateway or virtual private gateway.
	GatewayID *string `queryParam:"style=form,explode=true,name=GatewayId"`
	// The ID of the route table.
	RouteTableID string `queryParam:"style=form,explode=true,name=RouteTableId"`
	// The ID of the subnet.
	SubnetID          *string                           `queryParam:"style=form,explode=true,name=SubnetId"`
	Version           GETAssociateRouteTableVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAssociateRouteTableResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
