/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateIncomingPhoneNumberLocalServerList = [
  "https://api.twilio.com",
] as const;

export class CreateIncomingPhoneNumberLocalSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.
 */
export enum CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequestSmsFallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`.
 */
export enum CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequestSmsMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`.
 */
export enum CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequestStatusCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.
 */
export enum CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequestVoiceFallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`.
 */
export enum CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequestVoiceMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

export class CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequest extends SpeakeasyBase {
  /**
   * The SID of the Address resource we should associate with the new phone number. Some regions require addresses to meet local regulations.
   */
  @SpeakeasyMetadata({ data: "form, name=AddressSid" })
  addressSid?: string;

  /**
   * The API version to use for incoming calls made to the new phone number. The default is `2010-04-01`.
   */
  @SpeakeasyMetadata({ data: "form, name=ApiVersion" })
  apiVersion?: string;

  /**
   * The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
   */
  @SpeakeasyMetadata({ data: "form, name=BundleSid" })
  bundleSid?: string;

  /**
   * The SID of the emergency address configuration to use for emergency calling from the new phone number.
   */
  @SpeakeasyMetadata({ data: "form, name=EmergencyAddressSid" })
  emergencyAddressSid?: string;

  @SpeakeasyMetadata({ data: "form, name=EmergencyStatus" })
  emergencyStatus?: shared.IncomingPhoneNumberLocalEnumEmergencyStatusEnum;

  /**
   * A descriptive string that you created to describe the new phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * The SID of the Identity resource that we should associate with the new phone number. Some regions require an identity to meet local regulations.
   */
  @SpeakeasyMetadata({ data: "form, name=IdentitySid" })
  identitySid?: string;

  /**
   * The phone number to purchase specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.  E.164 phone numbers consist of a + followed by the country code and subscriber number without punctuation characters. For example, +14155551234.
   */
  @SpeakeasyMetadata({ data: "form, name=PhoneNumber" })
  phoneNumber: string;

  /**
   * The SID of the application that should handle SMS messages sent to the new phone number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
   */
  @SpeakeasyMetadata({ data: "form, name=SmsApplicationSid" })
  smsApplicationSid?: string;

  /**
   * The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=SmsFallbackMethod" })
  smsFallbackMethod?: CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequestSmsFallbackMethodEnum;

  /**
   * The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
   */
  @SpeakeasyMetadata({ data: "form, name=SmsFallbackUrl" })
  smsFallbackUrl?: string;

  /**
   * The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=SmsMethod" })
  smsMethod?: CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequestSmsMethodEnum;

  /**
   * The URL we should call when the new phone number receives an incoming SMS message.
   */
  @SpeakeasyMetadata({ data: "form, name=SmsUrl" })
  smsUrl?: string;

  /**
   * The URL we should call using the `status_callback_method` to send status information to your application.
   */
  @SpeakeasyMetadata({ data: "form, name=StatusCallback" })
  statusCallback?: string;

  /**
   * The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=StatusCallbackMethod" })
  statusCallbackMethod?: CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequestStatusCallbackMethodEnum;

  /**
   * The SID of the Trunk we should use to handle calls to the new phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
   */
  @SpeakeasyMetadata({ data: "form, name=TrunkSid" })
  trunkSid?: string;

  /**
   * The SID of the application we should use to handle calls to the new phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceApplicationSid" })
  voiceApplicationSid?: string;

  /**
   * Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceCallerIdLookup" })
  voiceCallerIdLookup?: boolean;

  /**
   * The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceFallbackMethod" })
  voiceFallbackMethod?: CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequestVoiceFallbackMethodEnum;

  /**
   * The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceFallbackUrl" })
  voiceFallbackUrl?: string;

  /**
   * The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceMethod" })
  voiceMethod?: CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequestVoiceMethodEnum;

  @SpeakeasyMetadata({ data: "form, name=VoiceReceiveMode" })
  voiceReceiveMode?: shared.IncomingPhoneNumberLocalEnumVoiceReceiveModeEnum;

  /**
   * The URL that we should call to answer a call to the new phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceUrl" })
  voiceUrl?: string;
}

export class CreateIncomingPhoneNumberLocalRequest extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=AccountSid",
  })
  accountSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateIncomingPhoneNumberLocalCreateIncomingPhoneNumberLocalRequest;
}

export class CreateIncomingPhoneNumberLocalResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  apiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocal?: shared.ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberLocal;
}
