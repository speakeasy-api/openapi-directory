"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errorapikeynotfound as shared_errorapikeynotfound
from ..shared import secretinfo as shared_secretinfo
from ..shared import secretmgmtlinks as shared_secretmgmtlinks
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class RetrieveAPISecretsSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class RetrieveAPISecretsRequest:
    
    api_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'api_key', 'style': 'simple', 'explode': False }})
    r"""The API key to manage secrets for"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAPISecrets401ApplicationJSON:
    r"""Credentials are missing or invalid"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""More detail regarding this error, including the expected value"""  
    instance: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instance'), 'exclude': lambda f: f is None }})
    r"""Internal Trace ID"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Description of the error"""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""URL for further information"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAPISecrets200ApplicationJSONEmbedded:
    r"""The single `secrets` key returns an array of API secrets"""
    
    secrets: Optional[list[shared_secretinfo.SecretInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secrets'), 'exclude': lambda f: f is None }})
    r"""Array of API secrets"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAPISecrets200ApplicationJSON:
    r"""The list of your current API secrets"""
    
    embedded: Optional[RetrieveAPISecrets200ApplicationJSONEmbedded] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('_embedded'), 'exclude': lambda f: f is None }})
    r"""The single `secrets` key returns an array of API secrets"""  
    links: Optional[shared_secretmgmtlinks.SecretMgmtLinks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('_links'), 'exclude': lambda f: f is None }})
    r"""Links related to this resource"""  
    

@dataclasses.dataclass
class RetrieveAPISecretsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_api_key_not_found: Optional[shared_errorapikeynotfound.ErrorAPIKeyNotFound] = dataclasses.field(default=None)
    r"""Item not found"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    retrieve_api_secrets_200_application_json_object: Optional[RetrieveAPISecrets200ApplicationJSON] = dataclasses.field(default=None)
    r"""The list of your current API secrets"""  
    retrieve_api_secrets_401_application_json_object: Optional[RetrieveAPISecrets401ApplicationJSON] = dataclasses.field(default=None)
    r"""Credentials are missing or invalid"""  
    