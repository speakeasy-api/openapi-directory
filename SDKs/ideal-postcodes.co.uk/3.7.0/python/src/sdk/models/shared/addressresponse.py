"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any

class AddressResponseCodeEnum(str, Enum):
    TWO_THOUSAND = '2000'

class AddressResponseMessageEnum(str, Enum):
    SUCCESS = 'Success'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddressResponseResult:
    
    hits: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hits') }})
    r"""List of matching addresses"""  
    limit: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('limit') }})  
    page: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page') }})  
    total: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddressResponse:
    r"""Success"""
    
    code: AddressResponseCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: AddressResponseMessageEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    result: AddressResponseResult = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result') }})  
    