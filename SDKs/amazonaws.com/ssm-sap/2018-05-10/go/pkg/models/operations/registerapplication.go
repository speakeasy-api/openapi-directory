// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterApplicationRequestBodyApplicationTypeEnum - The type of the application.
type RegisterApplicationRequestBodyApplicationTypeEnum string

const (
	RegisterApplicationRequestBodyApplicationTypeEnumHana RegisterApplicationRequestBodyApplicationTypeEnum = "HANA"
)

func (e RegisterApplicationRequestBodyApplicationTypeEnum) ToPointer() *RegisterApplicationRequestBodyApplicationTypeEnum {
	return &e
}

func (e *RegisterApplicationRequestBodyApplicationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HANA":
		*e = RegisterApplicationRequestBodyApplicationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterApplicationRequestBodyApplicationTypeEnum: %v", v)
	}
}

type RegisterApplicationRequestBody struct {
	// The ID of the application.
	ApplicationID string `json:"ApplicationId"`
	// The type of the application.
	ApplicationType RegisterApplicationRequestBodyApplicationTypeEnum `json:"ApplicationType"`
	// The credentials of the SAP application.
	Credentials []shared.ApplicationCredential `json:"Credentials"`
	// The Amazon EC2 instances on which your SAP application is running.
	Instances []string `json:"Instances"`
	// The SAP instance number of the application.
	SapInstanceNumber *string `json:"SapInstanceNumber,omitempty"`
	// The System ID of the application.
	Sid *string `json:"Sid,omitempty"`
	// The tags to be attached to the SAP application.
	Tags map[string]string `json:"Tags,omitempty"`
}

type RegisterApplicationRequest struct {
	RequestBody       RegisterApplicationRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type RegisterApplicationResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// Success
	RegisterApplicationOutput *shared.RegisterApplicationOutput
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
