// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DfareportingBillingProfilesListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// DfareportingBillingProfilesListSortFieldEnum - Field by which to sort the list.
type DfareportingBillingProfilesListSortFieldEnum string

const (
	DfareportingBillingProfilesListSortFieldEnumID   DfareportingBillingProfilesListSortFieldEnum = "ID"
	DfareportingBillingProfilesListSortFieldEnumName DfareportingBillingProfilesListSortFieldEnum = "NAME"
)

func (e DfareportingBillingProfilesListSortFieldEnum) ToPointer() *DfareportingBillingProfilesListSortFieldEnum {
	return &e
}

func (e *DfareportingBillingProfilesListSortFieldEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ID":
		fallthrough
	case "NAME":
		*e = DfareportingBillingProfilesListSortFieldEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingBillingProfilesListSortFieldEnum: %v", v)
	}
}

// DfareportingBillingProfilesListSortOrderEnum - Order of sorted results.
type DfareportingBillingProfilesListSortOrderEnum string

const (
	DfareportingBillingProfilesListSortOrderEnumAscending  DfareportingBillingProfilesListSortOrderEnum = "ASCENDING"
	DfareportingBillingProfilesListSortOrderEnumDescending DfareportingBillingProfilesListSortOrderEnum = "DESCENDING"
)

func (e DfareportingBillingProfilesListSortOrderEnum) ToPointer() *DfareportingBillingProfilesListSortOrderEnum {
	return &e
}

func (e *DfareportingBillingProfilesListSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = DfareportingBillingProfilesListSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingBillingProfilesListSortOrderEnum: %v", v)
	}
}

type DfareportingBillingProfilesListStatusEnum string

const (
	DfareportingBillingProfilesListStatusEnumUnderReview DfareportingBillingProfilesListStatusEnum = "UNDER_REVIEW"
	DfareportingBillingProfilesListStatusEnumActive      DfareportingBillingProfilesListStatusEnum = "ACTIVE"
	DfareportingBillingProfilesListStatusEnumArchived    DfareportingBillingProfilesListStatusEnum = "ARCHIVED"
)

func (e DfareportingBillingProfilesListStatusEnum) ToPointer() *DfareportingBillingProfilesListStatusEnum {
	return &e
}

func (e *DfareportingBillingProfilesListStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNDER_REVIEW":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "ARCHIVED":
		*e = DfareportingBillingProfilesListStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingBillingProfilesListStatusEnum: %v", v)
	}
}

type DfareportingBillingProfilesListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Select only billing profile with currency.
	CurrencyCode *string `queryParam:"style=form,explode=true,name=currency_code"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Select only billing profile with these IDs.
	Ids []string `queryParam:"style=form,explode=true,name=ids"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Maximum number of results to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// Allows searching for billing profiles by name. Wildcards (*) are allowed. For example, "profile*2020" will return objects with names like "profile June 2020", "profile April 2020", or simply "profile 2020". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of "profile" will match objects with name "my profile", "profile 2021", or simply "profile".
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Select only billing profile which is suggested for the currency_code & subaccount_id using the Billing Suggestion API.
	OnlySuggestion *bool `queryParam:"style=form,explode=true,name=onlySuggestion"`
	// Value of the nextPageToken from the previous result page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// User profile ID associated with this request.
	ProfileID string `pathParam:"style=simple,explode=false,name=profileId"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Field by which to sort the list.
	SortField *DfareportingBillingProfilesListSortFieldEnum `queryParam:"style=form,explode=true,name=sortField"`
	// Order of sorted results.
	SortOrder *DfareportingBillingProfilesListSortOrderEnum `queryParam:"style=form,explode=true,name=sortOrder"`
	// Select only billing profile with the specified status.
	Status []DfareportingBillingProfilesListStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Select only billing profile with the specified subaccount.When only_suggestion is true, only a single subaccount_id is supported.
	SubaccountIds []string `queryParam:"style=form,explode=true,name=subaccountIds"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DfareportingBillingProfilesListResponse struct {
	// Successful response
	BillingProfilesListResponse *shared.BillingProfilesListResponse
	ContentType                 string
	StatusCode                  int
	RawResponse                 *http.Response
}
