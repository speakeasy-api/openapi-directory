"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum(str, Enum):
    KNOWLEDGE_TYPE_UNSPECIFIED = 'KNOWLEDGE_TYPE_UNSPECIFIED'
    FAQ = 'FAQ'
    EXTRACTIVE_QA = 'EXTRACTIVE_QA'
    ARTICLE_SUGGESTION = 'ARTICLE_SUGGESTION'
    AGENT_FACING_SMART_REPLY = 'AGENT_FACING_SMART_REPLY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2ImportDocumentTemplate:
    r"""The template used for importing documents."""
    
    knowledge_types: Optional[list[GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('knowledgeTypes'), 'exclude': lambda f: f is None }})
    r"""Required. The knowledge type of document content."""  
    metadata: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes."""  
    mime_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mimeType'), 'exclude': lambda f: f is None }})
    r"""Required. The MIME type of the document."""  
    