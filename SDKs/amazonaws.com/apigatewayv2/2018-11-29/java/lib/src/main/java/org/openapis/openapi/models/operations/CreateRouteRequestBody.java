/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateRouteRequestBody {
    /**
     * Specifies whether an API key is required for the route. Supported only for WebSocket APIs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiKeyRequired")
    public Boolean apiKeyRequired;

    public CreateRouteRequestBody withApiKeyRequired(Boolean apiKeyRequired) {
        this.apiKeyRequired = apiKeyRequired;
        return this;
    }
    
    /**
     * A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationScopes")
    public String[] authorizationScopes;

    public CreateRouteRequestBody withAuthorizationScopes(String[] authorizationScopes) {
        this.authorizationScopes = authorizationScopes;
        return this;
    }
    
    /**
     * The authorization type. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer. For HTTP APIs, valid values are NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationType")
    public CreateRouteRequestBodyAuthorizationTypeEnum authorizationType;

    public CreateRouteRequestBody withAuthorizationType(CreateRouteRequestBodyAuthorizationTypeEnum authorizationType) {
        this.authorizationType = authorizationType;
        return this;
    }
    
    /**
     * The identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizerId")
    public String authorizerId;

    public CreateRouteRequestBody withAuthorizerId(String authorizerId) {
        this.authorizerId = authorizerId;
        return this;
    }
    
    /**
     * An expression used to extract information at runtime. See &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions"&gt;Selection Expressions&lt;/a&gt; for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modelSelectionExpression")
    public String modelSelectionExpression;

    public CreateRouteRequestBody withModelSelectionExpression(String modelSelectionExpression) {
        this.modelSelectionExpression = modelSelectionExpression;
        return this;
    }
    
    /**
     * A string with a length between [1-64].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationName")
    public String operationName;

    public CreateRouteRequestBody withOperationName(String operationName) {
        this.operationName = operationName;
        return this;
    }
    
    /**
     * The route models.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestModels")
    public java.util.Map<String, String> requestModels;

    public CreateRouteRequestBody withRequestModels(java.util.Map<String, String> requestModels) {
        this.requestModels = requestModels;
        return this;
    }
    
    /**
     * The route parameters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestParameters")
    public java.util.Map<String, org.openapis.openapi.models.shared.ParameterConstraints> requestParameters;

    public CreateRouteRequestBody withRequestParameters(java.util.Map<String, org.openapis.openapi.models.shared.ParameterConstraints> requestParameters) {
        this.requestParameters = requestParameters;
        return this;
    }
    
    /**
     * After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions"&gt;Selection Expressions&lt;/a&gt; for a list of expressions and each expression's associated selection key type.
     */
    @JsonProperty("routeKey")
    public String routeKey;

    public CreateRouteRequestBody withRouteKey(String routeKey) {
        this.routeKey = routeKey;
        return this;
    }
    
    /**
     * An expression used to extract information at runtime. See &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions"&gt;Selection Expressions&lt;/a&gt; for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("routeResponseSelectionExpression")
    public String routeResponseSelectionExpression;

    public CreateRouteRequestBody withRouteResponseSelectionExpression(String routeResponseSelectionExpression) {
        this.routeResponseSelectionExpression = routeResponseSelectionExpression;
        return this;
    }
    
    /**
     * A string with a length between [1-128].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target")
    public String target;

    public CreateRouteRequestBody withTarget(String target) {
        this.target = target;
        return this;
    }
    
    public CreateRouteRequestBody(@JsonProperty("routeKey") String routeKey) {
        this.routeKey = routeKey;
  }
}
