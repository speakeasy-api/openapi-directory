// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateOrderRequestBodyPaymentOptionEnum - The payment option.
type CreateOrderRequestBodyPaymentOptionEnum string

const (
	CreateOrderRequestBodyPaymentOptionEnumAllUpfront     CreateOrderRequestBodyPaymentOptionEnum = "ALL_UPFRONT"
	CreateOrderRequestBodyPaymentOptionEnumNoUpfront      CreateOrderRequestBodyPaymentOptionEnum = "NO_UPFRONT"
	CreateOrderRequestBodyPaymentOptionEnumPartialUpfront CreateOrderRequestBodyPaymentOptionEnum = "PARTIAL_UPFRONT"
)

func (e CreateOrderRequestBodyPaymentOptionEnum) ToPointer() *CreateOrderRequestBodyPaymentOptionEnum {
	return &e
}

func (e *CreateOrderRequestBodyPaymentOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALL_UPFRONT":
		fallthrough
	case "NO_UPFRONT":
		fallthrough
	case "PARTIAL_UPFRONT":
		*e = CreateOrderRequestBodyPaymentOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrderRequestBodyPaymentOptionEnum: %v", v)
	}
}

// CreateOrderRequestBodyPaymentTermEnum - The payment terms.
type CreateOrderRequestBodyPaymentTermEnum string

const (
	CreateOrderRequestBodyPaymentTermEnumThreeYears CreateOrderRequestBodyPaymentTermEnum = "THREE_YEARS"
	CreateOrderRequestBodyPaymentTermEnumOneYear    CreateOrderRequestBodyPaymentTermEnum = "ONE_YEAR"
)

func (e CreateOrderRequestBodyPaymentTermEnum) ToPointer() *CreateOrderRequestBodyPaymentTermEnum {
	return &e
}

func (e *CreateOrderRequestBodyPaymentTermEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "THREE_YEARS":
		fallthrough
	case "ONE_YEAR":
		*e = CreateOrderRequestBodyPaymentTermEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrderRequestBodyPaymentTermEnum: %v", v)
	}
}

type CreateOrderRequestBody struct {
	// The line items that make up the order.
	LineItems []shared.LineItemRequest `json:"LineItems"`
	//  The ID or the Amazon Resource Name (ARN) of the Outpost.
	OutpostIdentifier string `json:"OutpostIdentifier"`
	// The payment option.
	PaymentOption CreateOrderRequestBodyPaymentOptionEnum `json:"PaymentOption"`
	// The payment terms.
	PaymentTerm *CreateOrderRequestBodyPaymentTermEnum `json:"PaymentTerm,omitempty"`
}

type CreateOrderRequest struct {
	RequestBody       CreateOrderRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateOrderResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateOrderOutput *shared.CreateOrderOutput
	// InternalServerException
	InternalServerException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ValidationException
	ValidationException interface{}
}
