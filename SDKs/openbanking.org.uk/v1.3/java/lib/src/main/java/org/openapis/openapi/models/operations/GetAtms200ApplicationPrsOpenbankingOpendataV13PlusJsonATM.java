/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM {
    /**
     * ATM terminal device identification for the acquirer and the issuer
     */
    @JsonProperty("ATMID")
    public String atmid;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withAtmid(String atmid) {
        this.atmid = atmid;
        return this;
    }
    
    /**
     * Information about ATM services
     */
    @JsonProperty("ATMServices")
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMATMServicesEnum[] atmServices;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withATMServices(GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMATMServicesEnum[] atmServices) {
        this.atmServices = atmServices;
        return this;
    }
    
    /**
     * Information about the accessibility
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessibilityTypes")
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMAccessibilityTypesEnum[] accessibilityTypes;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withAccessibilityTypes(GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMAccessibilityTypesEnum[] accessibilityTypes) {
        this.accessibilityTypes = accessibilityTypes;
        return this;
    }
    
    /**
     * ATM Service Description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalATMServices")
    public String[] additionalATMServices;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withAdditionalATMServices(String[] additionalATMServices) {
        this.additionalATMServices = additionalATMServices;
        return this;
    }
    
    /**
     * Postal Address
     */
    @JsonProperty("Address")
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMAddress address;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withAddress(GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * Unique and unambiguous identification of a retail branch of a financial institution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BranchIdentification")
    public String branchIdentification;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withBranchIdentification(String branchIdentification) {
        this.branchIdentification = branchIdentification;
        return this;
    }
    
    /**
     * Defines currency type available for dispense
     */
    @JsonProperty("Currency")
    public String[] currency;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withCurrency(String[] currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Geographic Coordinates
     */
    @JsonProperty("GeographicLocation")
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMGeographicLocation geographicLocation;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withGeographicLocation(GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMGeographicLocation geographicLocation) {
        this.geographicLocation = geographicLocation;
        return this;
    }
    
    /**
     * Indicates the environment of the ATM
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LocationCategory")
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMLocationCategoryEnum locationCategory;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withLocationCategory(GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMLocationCategoryEnum locationCategory) {
        this.locationCategory = locationCategory;
        return this;
    }
    
    /**
     * Minimum currency denominations usually available
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MinimumValueDispensed")
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMMinimumValueDispensedEnum minimumValueDispensed;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withMinimumValueDispensed(GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMMinimumValueDispensedEnum minimumValueDispensed) {
        this.minimumValueDispensed = minimumValueDispensed;
        return this;
    }
    
    /**
     * Organisation
     */
    @JsonProperty("Organisation")
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMOrganisation organisation;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withOrganisation(GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMOrganisation organisation) {
        this.organisation = organisation;
        return this;
    }
    
    /**
     * Site identifying code, where ATM is located
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SiteID")
    public String siteID;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withSiteID(String siteID) {
        this.siteID = siteID;
        return this;
    }
    
    /**
     * Site identifying name, where ATM is located
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SiteName")
    public String siteName;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withSiteName(String siteName) {
        this.siteName = siteName;
        return this;
    }
    
    /**
     * Languages that the ATM supports
     */
    @JsonProperty("SupportedLanguages")
    public String[] supportedLanguages;
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM withSupportedLanguages(String[] supportedLanguages) {
        this.supportedLanguages = supportedLanguages;
        return this;
    }
    
}
