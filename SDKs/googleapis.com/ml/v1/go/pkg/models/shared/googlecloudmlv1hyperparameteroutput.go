// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudMlV1HyperparameterOutputStateEnum - Output only. The detailed state of the trial.
type GoogleCloudMlV1HyperparameterOutputStateEnum string

const (
	GoogleCloudMlV1HyperparameterOutputStateEnumStateUnspecified GoogleCloudMlV1HyperparameterOutputStateEnum = "STATE_UNSPECIFIED"
	GoogleCloudMlV1HyperparameterOutputStateEnumQueued           GoogleCloudMlV1HyperparameterOutputStateEnum = "QUEUED"
	GoogleCloudMlV1HyperparameterOutputStateEnumPreparing        GoogleCloudMlV1HyperparameterOutputStateEnum = "PREPARING"
	GoogleCloudMlV1HyperparameterOutputStateEnumRunning          GoogleCloudMlV1HyperparameterOutputStateEnum = "RUNNING"
	GoogleCloudMlV1HyperparameterOutputStateEnumSucceeded        GoogleCloudMlV1HyperparameterOutputStateEnum = "SUCCEEDED"
	GoogleCloudMlV1HyperparameterOutputStateEnumFailed           GoogleCloudMlV1HyperparameterOutputStateEnum = "FAILED"
	GoogleCloudMlV1HyperparameterOutputStateEnumCancelling       GoogleCloudMlV1HyperparameterOutputStateEnum = "CANCELLING"
	GoogleCloudMlV1HyperparameterOutputStateEnumCancelled        GoogleCloudMlV1HyperparameterOutputStateEnum = "CANCELLED"
)

func (e *GoogleCloudMlV1HyperparameterOutputStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "QUEUED":
		fallthrough
	case "PREPARING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		*e = GoogleCloudMlV1HyperparameterOutputStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudMlV1HyperparameterOutputStateEnum: %s", s)
	}
}

// GoogleCloudMlV1HyperparameterOutput - Represents the result of a single hyperparameter tuning trial from a training job. The TrainingOutput object that is returned on successful completion of a training job with hyperparameter tuning includes a list of HyperparameterOutput objects, one for each successful trial.
type GoogleCloudMlV1HyperparameterOutput struct {
	// All recorded object metrics for this trial. This field is not currently populated.
	AllMetrics []GoogleCloudMlV1HyperparameterOutputHyperparameterMetric `json:"allMetrics,omitempty"`
	// Represents output related to a built-in algorithm Job.
	BuiltInAlgorithmOutput *GoogleCloudMlV1BuiltInAlgorithmOutput `json:"builtInAlgorithmOutput,omitempty"`
	// Output only. End time for the trial.
	EndTime *string `json:"endTime,omitempty"`
	// An observed value of a metric.
	FinalMetric *GoogleCloudMlV1HyperparameterOutputHyperparameterMetric `json:"finalMetric,omitempty"`
	// The hyperparameters given to this trial.
	Hyperparameters map[string]string `json:"hyperparameters,omitempty"`
	// True if the trial is stopped early.
	IsTrialStoppedEarly *bool `json:"isTrialStoppedEarly,omitempty"`
	// Output only. Start time for the trial.
	StartTime *string `json:"startTime,omitempty"`
	// Output only. The detailed state of the trial.
	State *GoogleCloudMlV1HyperparameterOutputStateEnum `json:"state,omitempty"`
	// The trial id for these results.
	TrialID *string `json:"trialId,omitempty"`
	// URIs for accessing [interactive shells](https://cloud.google.com/ai-platform/training/docs/monitor-debug-interactive-shell) (one URI for each training node). Only available if this trial is part of a hyperparameter tuning job and the job's training_input.enable_web_access is `true`. The keys are names of each node in the training job; for example, `master-replica-0` for the master node, `worker-replica-0` for the first worker, and `ps-replica-0` for the first parameter server. The values are the URIs for each node's interactive shell.
	WebAccessUris map[string]string `json:"webAccessUris,omitempty"`
}
