"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import postjournalentryitemtype as shared_postjournalentryitemtype
from ..shared import postjournalentrysegmenttype as shared_postjournalentrysegmenttype
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class POSTJournalEntryTypeTransferredToAccountingEnum(str, Enum):
    r"""Status shows whether the journal entry has been transferred to an accounting system."""
    NO = 'No'
    PROCESSING = 'Processing'
    YES = 'Yes'
    ERROR = 'Error'
    IGNORE = 'Ignore'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class POSTJournalEntryType:
    r"""Container for custom fields of a Journal Entry object."""
    
    accounting_period_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountingPeriodName') }})
    r"""Name of the accounting period. The open-ended accounting period is named `Open-Ended`."""  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})
    r"""The type of currency used. Currency must be active."""  
    journal_entry_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('journalEntryDate'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""Date of the journal entry."""  
    journal_entry_items: list[shared_postjournalentryitemtype.POSTJournalEntryItemType] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('journalEntryItems') }})
    r"""Key name that represents the list of journal entry items."""  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""The number associated with the revenue event.
    
    Character limit: 2,000
    """  
    segments: Optional[list[shared_postjournalentrysegmenttype.POSTJournalEntrySegmentType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segments'), 'exclude': lambda f: f is None }})
    r"""List of segments that apply to the summary journal entry."""  
    transferred_to_accounting: Optional[POSTJournalEntryTypeTransferredToAccountingEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferredToAccounting'), 'exclude': lambda f: f is None }})
    r"""Status shows whether the journal entry has been transferred to an accounting system."""  
    