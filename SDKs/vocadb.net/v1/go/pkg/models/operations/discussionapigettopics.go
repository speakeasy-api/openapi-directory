// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DiscussionAPIGetTopicsFieldsEnum
type DiscussionAPIGetTopicsFieldsEnum string

const (
	DiscussionAPIGetTopicsFieldsEnumNone         DiscussionAPIGetTopicsFieldsEnum = "None"
	DiscussionAPIGetTopicsFieldsEnumComments     DiscussionAPIGetTopicsFieldsEnum = "Comments"
	DiscussionAPIGetTopicsFieldsEnumCommentCount DiscussionAPIGetTopicsFieldsEnum = "CommentCount"
	DiscussionAPIGetTopicsFieldsEnumContent      DiscussionAPIGetTopicsFieldsEnum = "Content"
	DiscussionAPIGetTopicsFieldsEnumLastComment  DiscussionAPIGetTopicsFieldsEnum = "LastComment"
	DiscussionAPIGetTopicsFieldsEnumAll          DiscussionAPIGetTopicsFieldsEnum = "All"
)

func (e *DiscussionAPIGetTopicsFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "Comments":
		fallthrough
	case "CommentCount":
		fallthrough
	case "Content":
		fallthrough
	case "LastComment":
		fallthrough
	case "All":
		*e = DiscussionAPIGetTopicsFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DiscussionAPIGetTopicsFieldsEnum: %s", s)
	}
}

// DiscussionAPIGetTopicsSortEnum
type DiscussionAPIGetTopicsSortEnum string

const (
	DiscussionAPIGetTopicsSortEnumNone            DiscussionAPIGetTopicsSortEnum = "None"
	DiscussionAPIGetTopicsSortEnumName            DiscussionAPIGetTopicsSortEnum = "Name"
	DiscussionAPIGetTopicsSortEnumDateCreated     DiscussionAPIGetTopicsSortEnum = "DateCreated"
	DiscussionAPIGetTopicsSortEnumLastCommentDate DiscussionAPIGetTopicsSortEnum = "LastCommentDate"
)

func (e *DiscussionAPIGetTopicsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "Name":
		fallthrough
	case "DateCreated":
		fallthrough
	case "LastCommentDate":
		*e = DiscussionAPIGetTopicsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DiscussionAPIGetTopicsSortEnum: %s", s)
	}
}

type DiscussionAPIGetTopicsQueryParams struct {
	Fields        *DiscussionAPIGetTopicsFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	FolderID      *int                              `queryParam:"style=form,explode=true,name=folderId"`
	GetTotalCount *bool                             `queryParam:"style=form,explode=true,name=getTotalCount"`
	MaxResults    *int                              `queryParam:"style=form,explode=true,name=maxResults"`
	Sort          *DiscussionAPIGetTopicsSortEnum   `queryParam:"style=form,explode=true,name=sort"`
	Start         *int                              `queryParam:"style=form,explode=true,name=start"`
}

type DiscussionAPIGetTopicsRequest struct {
	QueryParams DiscussionAPIGetTopicsQueryParams
}

type DiscussionAPIGetTopicsResponse struct {
	Body        []byte
	ContentType string
	// OK
	PartialFindResultDiscussionTopicContract *shared.PartialFindResultDiscussionTopicContract
	StatusCode                               int
	RawResponse                              *http.Response
}
