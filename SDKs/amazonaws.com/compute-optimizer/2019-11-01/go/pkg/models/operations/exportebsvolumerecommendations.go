// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ExportEBSVolumeRecommendationsXAmzTargetEnum
type ExportEBSVolumeRecommendationsXAmzTargetEnum string

const (
	ExportEBSVolumeRecommendationsXAmzTargetEnumComputeOptimizerServiceExportEbsVolumeRecommendations ExportEBSVolumeRecommendationsXAmzTargetEnum = "ComputeOptimizerService.ExportEBSVolumeRecommendations"
)

func (e ExportEBSVolumeRecommendationsXAmzTargetEnum) ToPointer() *ExportEBSVolumeRecommendationsXAmzTargetEnum {
	return &e
}

func (e *ExportEBSVolumeRecommendationsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ComputeOptimizerService.ExportEBSVolumeRecommendations":
		*e = ExportEBSVolumeRecommendationsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportEBSVolumeRecommendationsXAmzTargetEnum: %v", v)
	}
}

type ExportEBSVolumeRecommendationsRequest struct {
	ExportEBSVolumeRecommendationsRequest shared.ExportEBSVolumeRecommendationsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            ExportEBSVolumeRecommendationsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ExportEBSVolumeRecommendationsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	ExportEBSVolumeRecommendationsResponse *shared.ExportEBSVolumeRecommendationsResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// MissingAuthenticationToken
	MissingAuthenticationToken interface{}
	// OptInRequiredException
	OptInRequiredException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
