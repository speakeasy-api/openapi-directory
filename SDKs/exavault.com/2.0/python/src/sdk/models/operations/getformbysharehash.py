"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import formresponse as shared_formresponse
from enum import Enum
from typing import Optional

class GetFormByShareHashIncludeEnum(str, Enum):
    r"""Related record types to include in the response. Valid option is **share**"""
    SHARE = 'share'


@dataclasses.dataclass
class GetFormByShareHashRequest:
    
    ev_access_token: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-access-token', 'style': 'simple', 'explode': False }})
    r"""Access Token required to make the API call."""  
    ev_api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-api-key', 'style': 'simple', 'explode': False }})
    r"""API key required to make the API call."""  
    share_hash: str = dataclasses.field(metadata={'query_param': { 'field_name': 'shareHash', 'style': 'form', 'explode': True }})
    r"""Share hash to retrieve the form for."""  
    include: Optional[GetFormByShareHashIncludeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include', 'style': 'form', 'explode': True }})
    r"""Related record types to include in the response. Valid option is **share**"""  
    

@dataclasses.dataclass
class GetFormByShareHashResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    form_response: Optional[shared_formresponse.FormResponse] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    