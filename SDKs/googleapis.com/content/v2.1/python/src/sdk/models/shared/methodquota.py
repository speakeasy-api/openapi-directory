"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MethodQuota:
    r"""The quota information per method in the Content API. Includes only methods with current usage greater than zero for your account."""
    
    method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""The method name, for example `products.list`. Method name does not contain version because quota can be shared between different API versions of the same method."""  
    quota_limit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quotaLimit'), 'exclude': lambda f: f is None }})
    r"""The current quota limit per day, meaning the maximum number of calls for the method."""  
    quota_usage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quotaUsage'), 'exclude': lambda f: f is None }})
    r"""The current quota usage, meaning the number of calls already made to the method."""  
    