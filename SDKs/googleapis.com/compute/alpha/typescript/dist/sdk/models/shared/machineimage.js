"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MachineImage = exports.MachineImageStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var customerencryptionkey_1 = require("./customerencryptionkey");
var instanceproperties_1 = require("./instanceproperties");
var saveddisk_1 = require("./saveddisk");
var sourcediskencryptionkey_1 = require("./sourcediskencryptionkey");
var sourceinstanceproperties_1 = require("./sourceinstanceproperties");
var class_transformer_1 = require("class-transformer");
/**
 * [Output Only] The status of the machine image. One of the following values: INVALID, CREATING, READY, DELETING, and UPLOADING.
 */
var MachineImageStatusEnum;
(function (MachineImageStatusEnum) {
    MachineImageStatusEnum["Creating"] = "CREATING";
    MachineImageStatusEnum["Deleting"] = "DELETING";
    MachineImageStatusEnum["Invalid"] = "INVALID";
    MachineImageStatusEnum["Ready"] = "READY";
    MachineImageStatusEnum["Uploading"] = "UPLOADING";
})(MachineImageStatusEnum = exports.MachineImageStatusEnum || (exports.MachineImageStatusEnum = {}));
/**
 * Represents a machine image resource. A machine image is a Compute Engine resource that stores all the configuration, metadata, permissions, and data from one or more disks required to create a Virtual machine (VM) instance. For more information, see Machine images.
 */
var MachineImage = /** @class */ (function (_super) {
    __extends(MachineImage, _super);
    function MachineImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], MachineImage.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], MachineImage.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "guestFlush" }),
        __metadata("design:type", Boolean)
    ], MachineImage.prototype, "guestFlush", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], MachineImage.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "instanceProperties" }),
        (0, class_transformer_1.Type)(function () { return instanceproperties_1.InstanceProperties; }),
        __metadata("design:type", instanceproperties_1.InstanceProperties)
    ], MachineImage.prototype, "instanceProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], MachineImage.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "machineImageEncryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], MachineImage.prototype, "machineImageEncryptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], MachineImage.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "satisfiesPzs" }),
        __metadata("design:type", Boolean)
    ], MachineImage.prototype, "satisfiesPzs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: saveddisk_1.SavedDisk }),
        (0, class_transformer_1.Expose)({ name: "savedDisks" }),
        (0, class_transformer_1.Type)(function () { return saveddisk_1.SavedDisk; }),
        __metadata("design:type", Array)
    ], MachineImage.prototype, "savedDisks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], MachineImage.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLinkWithId" }),
        __metadata("design:type", String)
    ], MachineImage.prototype, "selfLinkWithId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sourcediskencryptionkey_1.SourceDiskEncryptionKey }),
        (0, class_transformer_1.Expose)({ name: "sourceDiskEncryptionKeys" }),
        (0, class_transformer_1.Type)(function () { return sourcediskencryptionkey_1.SourceDiskEncryptionKey; }),
        __metadata("design:type", Array)
    ], MachineImage.prototype, "sourceDiskEncryptionKeys", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceInstance" }),
        __metadata("design:type", String)
    ], MachineImage.prototype, "sourceInstance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceInstanceProperties" }),
        (0, class_transformer_1.Type)(function () { return sourceinstanceproperties_1.SourceInstanceProperties; }),
        __metadata("design:type", sourceinstanceproperties_1.SourceInstanceProperties)
    ], MachineImage.prototype, "sourceInstanceProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], MachineImage.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageLocations" }),
        __metadata("design:type", Array)
    ], MachineImage.prototype, "storageLocations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "totalStorageBytes" }),
        __metadata("design:type", String)
    ], MachineImage.prototype, "totalStorageBytes", void 0);
    return MachineImage;
}(utils_1.SpeakeasyBase));
exports.MachineImage = MachineImage;
