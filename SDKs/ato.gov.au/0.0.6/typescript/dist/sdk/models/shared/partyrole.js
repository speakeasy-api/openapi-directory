"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PartyRole = exports.PartyRoleInput = exports.PartyRoleRelationshipTypeEnum = exports.PartyRoleRelatedPartyRoleTypeEnum = exports.PartyRolePartyRoleTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The party's role type.
 */
var PartyRolePartyRoleTypeEnum;
(function (PartyRolePartyRoleTypeEnum) {
    PartyRolePartyRoleTypeEnum["Director"] = "Director";
    PartyRolePartyRoleTypeEnum["Employee"] = "Employee";
    PartyRolePartyRoleTypeEnum["Member"] = "Member";
    PartyRolePartyRoleTypeEnum["Partner"] = "Partner";
    PartyRolePartyRoleTypeEnum["Trustee"] = "Trustee";
})(PartyRolePartyRoleTypeEnum = exports.PartyRolePartyRoleTypeEnum || (exports.PartyRolePartyRoleTypeEnum = {}));
/**
 * The related party's role type.
 */
var PartyRoleRelatedPartyRoleTypeEnum;
(function (PartyRoleRelatedPartyRoleTypeEnum) {
    PartyRoleRelatedPartyRoleTypeEnum["Association"] = "Association";
    PartyRoleRelatedPartyRoleTypeEnum["Company"] = "Company";
    PartyRoleRelatedPartyRoleTypeEnum["Employer"] = "Employer";
    PartyRoleRelatedPartyRoleTypeEnum["Organisation"] = "Organisation";
    PartyRoleRelatedPartyRoleTypeEnum["Partnership"] = "Partnership";
    PartyRoleRelatedPartyRoleTypeEnum["Trust"] = "Trust";
})(PartyRoleRelatedPartyRoleTypeEnum = exports.PartyRoleRelatedPartyRoleTypeEnum || (exports.PartyRoleRelatedPartyRoleTypeEnum = {}));
/**
 * The relationship type.
 */
var PartyRoleRelationshipTypeEnum;
(function (PartyRoleRelationshipTypeEnum) {
    PartyRoleRelationshipTypeEnum["Directorship"] = "Directorship";
    PartyRoleRelationshipTypeEnum["Employment"] = "Employment";
    PartyRoleRelationshipTypeEnum["Membership"] = "Membership";
    PartyRoleRelationshipTypeEnum["Partnership"] = "Partnership";
    PartyRoleRelationshipTypeEnum["Trusteeship"] = "Trusteeship";
})(PartyRoleRelationshipTypeEnum = exports.PartyRoleRelationshipTypeEnum || (exports.PartyRoleRelationshipTypeEnum = {}));
/**
 * The Party Role resource.
 */
var PartyRoleInput = /** @class */ (function (_super) {
    __extends(PartyRoleInput, _super);
    function PartyRoleInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "partyRoleType" }),
        __metadata("design:type", String)
    ], PartyRoleInput.prototype, "partyRoleType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "relatedPartyId" }),
        __metadata("design:type", String)
    ], PartyRoleInput.prototype, "relatedPartyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "relatedPartyRoleType" }),
        __metadata("design:type", String)
    ], PartyRoleInput.prototype, "relatedPartyRoleType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "relationshipType" }),
        __metadata("design:type", String)
    ], PartyRoleInput.prototype, "relationshipType", void 0);
    return PartyRoleInput;
}(utils_1.SpeakeasyBase));
exports.PartyRoleInput = PartyRoleInput;
/**
 * The Party Role resource.
 */
var PartyRole = /** @class */ (function (_super) {
    __extends(PartyRole, _super);
    function PartyRole() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fromDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], PartyRole.prototype, "fromDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], PartyRole.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "partyRoleType" }),
        __metadata("design:type", String)
    ], PartyRole.prototype, "partyRoleType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "relatedPartyId" }),
        __metadata("design:type", String)
    ], PartyRole.prototype, "relatedPartyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "relatedPartyRoleType" }),
        __metadata("design:type", String)
    ], PartyRole.prototype, "relatedPartyRoleType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "relationshipType" }),
        __metadata("design:type", String)
    ], PartyRole.prototype, "relationshipType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "toDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], PartyRole.prototype, "toDate", void 0);
    return PartyRole;
}(utils_1.SpeakeasyBase));
exports.PartyRole = PartyRole;
