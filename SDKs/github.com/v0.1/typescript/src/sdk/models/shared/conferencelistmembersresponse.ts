/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Response message
 */
export enum ConferenceListMembersResponseMessageEnum {
  ConferenceListMembersExecuted = "Conference ListMembers Executed",
  ConferenceNameParameterMustBePresent = "ConferenceName Parameter must be present",
  ConferenceListMembersFailedToParseResult = "Conference ListMembers Failed to parse result",
  ConferenceListMembersFailedConferenceNotFound = "Conference ListMembers Failed -- Conference not found",
}

/**
 * Response
 */
export class ConferenceListMembersResponse extends SpeakeasyBase {
  /**
   * List of established conferences
   */
  @SpeakeasyMetadata()
  @Expose({ name: "List" })
  list: Record<string, any>;

  /**
   * Response message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message: ConferenceListMembersResponseMessageEnum;

  /**
   * Whether the request was successful or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Success" })
  success: boolean;
}
