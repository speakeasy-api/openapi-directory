// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CommandInvocationStatusEnum string

const (
	CommandInvocationStatusEnumPending    CommandInvocationStatusEnum = "Pending"
	CommandInvocationStatusEnumInProgress CommandInvocationStatusEnum = "InProgress"
	CommandInvocationStatusEnumDelayed    CommandInvocationStatusEnum = "Delayed"
	CommandInvocationStatusEnumSuccess    CommandInvocationStatusEnum = "Success"
	CommandInvocationStatusEnumCancelled  CommandInvocationStatusEnum = "Cancelled"
	CommandInvocationStatusEnumTimedOut   CommandInvocationStatusEnum = "TimedOut"
	CommandInvocationStatusEnumFailed     CommandInvocationStatusEnum = "Failed"
	CommandInvocationStatusEnumCancelling CommandInvocationStatusEnum = "Cancelling"
)

func (e CommandInvocationStatusEnum) ToPointer() *CommandInvocationStatusEnum {
	return &e
}

func (e *CommandInvocationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "InProgress":
		fallthrough
	case "Delayed":
		fallthrough
	case "Success":
		fallthrough
	case "Cancelled":
		fallthrough
	case "TimedOut":
		fallthrough
	case "Failed":
		fallthrough
	case "Cancelling":
		*e = CommandInvocationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CommandInvocationStatusEnum: %v", v)
	}
}
