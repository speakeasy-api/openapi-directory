// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InstanceMessageCodeEnum - A code that correspond to one type of user-facing message.
type InstanceMessageCodeEnum string

const (
	InstanceMessageCodeEnumCodeUnspecified            InstanceMessageCodeEnum = "CODE_UNSPECIFIED"
	InstanceMessageCodeEnumZoneDistributionUnbalanced InstanceMessageCodeEnum = "ZONE_DISTRIBUTION_UNBALANCED"
)

func (e *InstanceMessageCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CODE_UNSPECIFIED":
		fallthrough
	case "ZONE_DISTRIBUTION_UNBALANCED":
		*e = InstanceMessageCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceMessageCodeEnum: %s", s)
	}
}

type InstanceMessage struct {
	// A code that correspond to one type of user-facing message.
	Code *InstanceMessageCodeEnum `json:"code,omitempty"`
	// Message on memcached instance which will be exposed to users.
	Message *string `json:"message,omitempty"`
}
