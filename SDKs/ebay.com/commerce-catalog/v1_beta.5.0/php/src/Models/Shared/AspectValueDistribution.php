<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AspectValueDistribution - This type contains information about one value of a specified aspect. This value serves as a product refinement.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AspectValueDistribution
{
    /**
     * The localized value of the category aspect identified by <b>refinement.aspectDistributions.localizedAspectName</b>.
     * 
     * @var ?string $localizedAspectValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('localizedAspectValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $localizedAspectValue = null;
    
    /**
     * The number of times the value of <b>localizedAspectValue</b> has been used for eBay product listings. By comparing this quantity to the <b>matchCount</b> for other values of the same aspect, you can present a histogram of the values to sellers, who can use that information to select which aspect value is most appropriate for their product. You can then include the user-selected value in the the <b>search</b> call's <b>aspect_filter</b> parameter to refine your search.
     * 
     * @var ?int $matchCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('matchCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $matchCount = null;
    
    /**
     * A HATEOAS reference that further refines the search with this particular <b>localizedAspectValue</b>.
     * 
     * @var ?string $refinementHref
     */
	#[\JMS\Serializer\Annotation\SerializedName('refinementHref')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $refinementHref = null;
    
	public function __construct()
	{
		$this->localizedAspectValue = null;
		$this->matchCount = null;
		$this->refinementHref = null;
	}
}
