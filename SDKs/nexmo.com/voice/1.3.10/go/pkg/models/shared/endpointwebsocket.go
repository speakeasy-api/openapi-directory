// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EndpointWebsocketContentTypeEnum string

const (
	EndpointWebsocketContentTypeEnumAudioL16RateEqual8000  EndpointWebsocketContentTypeEnum = "audio/l16;rate=8000"
	EndpointWebsocketContentTypeEnumAudioL16RateEqual16000 EndpointWebsocketContentTypeEnum = "audio/l16;rate=16000"
)

func (e EndpointWebsocketContentTypeEnum) ToPointer() *EndpointWebsocketContentTypeEnum {
	return &e
}

func (e *EndpointWebsocketContentTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "audio/l16;rate=8000":
		fallthrough
	case "audio/l16;rate=16000":
		*e = EndpointWebsocketContentTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EndpointWebsocketContentTypeEnum: %v", v)
	}
}

// EndpointWebsocketHeaders - Details of the Websocket you want to connect to
type EndpointWebsocketHeaders struct {
	// This is an example header. You can provide any headers you may need
	CustomerID *string `json:"customer_id,omitempty"`
}

// EndpointWebsocket - Connect to a Websocket
type EndpointWebsocket struct {
	ContentType EndpointWebsocketContentTypeEnum `json:"content-type"`
	// Details of the Websocket you want to connect to
	Headers *EndpointWebsocketHeaders `json:"headers,omitempty"`
	// The type of connection. Must be `websocket`
	Type string  `json:"type"`
	URI  *string `json:"uri,omitempty"`
}
