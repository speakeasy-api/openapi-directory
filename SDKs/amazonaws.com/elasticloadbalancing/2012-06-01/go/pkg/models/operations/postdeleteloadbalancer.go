// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDeleteLoadBalancerActionEnum
type POSTDeleteLoadBalancerActionEnum string

const (
	POSTDeleteLoadBalancerActionEnumDeleteLoadBalancer POSTDeleteLoadBalancerActionEnum = "DeleteLoadBalancer"
)

func (e *POSTDeleteLoadBalancerActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteLoadBalancer":
		*e = POSTDeleteLoadBalancerActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteLoadBalancerActionEnum: %s", s)
	}
}

// POSTDeleteLoadBalancerVersionEnum
type POSTDeleteLoadBalancerVersionEnum string

const (
	POSTDeleteLoadBalancerVersionEnumTwoThousandAndTwelve0601 POSTDeleteLoadBalancerVersionEnum = "2012-06-01"
)

func (e *POSTDeleteLoadBalancerVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-06-01":
		*e = POSTDeleteLoadBalancerVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteLoadBalancerVersionEnum: %s", s)
	}
}

type POSTDeleteLoadBalancerQueryParams struct {
	Action  POSTDeleteLoadBalancerActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDeleteLoadBalancerVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDeleteLoadBalancerHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDeleteLoadBalancerRequest struct {
	QueryParams POSTDeleteLoadBalancerQueryParams
	Headers     POSTDeleteLoadBalancerHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDeleteLoadBalancerResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
