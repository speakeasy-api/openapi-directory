// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETSetSecurityGroupsActionEnum
type GETSetSecurityGroupsActionEnum string

const (
	GETSetSecurityGroupsActionEnumSetSecurityGroups GETSetSecurityGroupsActionEnum = "SetSecurityGroups"
)

func (e *GETSetSecurityGroupsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SetSecurityGroups":
		*e = GETSetSecurityGroupsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSetSecurityGroupsActionEnum: %s", s)
	}
}

// GETSetSecurityGroupsVersionEnum
type GETSetSecurityGroupsVersionEnum string

const (
	GETSetSecurityGroupsVersionEnumTwoThousandAndFifteen1201 GETSetSecurityGroupsVersionEnum = "2015-12-01"
)

func (e *GETSetSecurityGroupsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-12-01":
		*e = GETSetSecurityGroupsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSetSecurityGroupsVersionEnum: %s", s)
	}
}

type GETSetSecurityGroupsQueryParams struct {
	Action GETSetSecurityGroupsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The Amazon Resource Name (ARN) of the load balancer.
	LoadBalancerArn string `queryParam:"style=form,explode=true,name=LoadBalancerArn"`
	// The IDs of the security groups.
	SecurityGroups []string                        `queryParam:"style=form,explode=true,name=SecurityGroups"`
	Version        GETSetSecurityGroupsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETSetSecurityGroupsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETSetSecurityGroupsRequest struct {
	QueryParams GETSetSecurityGroupsQueryParams
	Headers     GETSetSecurityGroupsHeaders
}

type GETSetSecurityGroupsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
