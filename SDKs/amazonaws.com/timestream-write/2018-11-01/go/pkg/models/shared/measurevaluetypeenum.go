// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MeasureValueTypeEnum string

const (
	MeasureValueTypeEnumDouble    MeasureValueTypeEnum = "DOUBLE"
	MeasureValueTypeEnumBigint    MeasureValueTypeEnum = "BIGINT"
	MeasureValueTypeEnumVarchar   MeasureValueTypeEnum = "VARCHAR"
	MeasureValueTypeEnumBoolean   MeasureValueTypeEnum = "BOOLEAN"
	MeasureValueTypeEnumTimestamp MeasureValueTypeEnum = "TIMESTAMP"
	MeasureValueTypeEnumMulti     MeasureValueTypeEnum = "MULTI"
)

func (e MeasureValueTypeEnum) ToPointer() *MeasureValueTypeEnum {
	return &e
}

func (e *MeasureValueTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DOUBLE":
		fallthrough
	case "BIGINT":
		fallthrough
	case "VARCHAR":
		fallthrough
	case "BOOLEAN":
		fallthrough
	case "TIMESTAMP":
		fallthrough
	case "MULTI":
		*e = MeasureValueTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MeasureValueTypeEnum: %v", v)
	}
}
