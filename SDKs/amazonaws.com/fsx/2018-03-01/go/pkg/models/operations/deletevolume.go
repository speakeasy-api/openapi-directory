// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteVolumeXAmzTargetEnum
type DeleteVolumeXAmzTargetEnum string

const (
	DeleteVolumeXAmzTargetEnumAwsSimbaAPIServiceV20180301DeleteVolume DeleteVolumeXAmzTargetEnum = "AWSSimbaAPIService_v20180301.DeleteVolume"
)

func (e *DeleteVolumeXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSSimbaAPIService_v20180301.DeleteVolume":
		*e = DeleteVolumeXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteVolumeXAmzTargetEnum: %s", s)
	}
}

type DeleteVolumeHeaders struct {
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteVolumeXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteVolumeRequest struct {
	Headers DeleteVolumeHeaders
	Request shared.DeleteVolumeRequest `request:"mediaType=application/json"`
}

type DeleteVolumeResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// Success
	DeleteVolumeResponse *shared.DeleteVolumeResponse
	// IncompatibleParameterError
	IncompatibleParameterError interface{}
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
	// VolumeNotFound
	VolumeNotFound interface{}
}
