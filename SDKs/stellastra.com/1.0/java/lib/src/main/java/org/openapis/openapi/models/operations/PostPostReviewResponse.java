/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class PostPostReviewResponse {
    
    public String contentType;
    public PostPostReviewResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    
    public Integer statusCode;
    public PostPostReviewResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public PostPostReviewResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * A response code of 200 means the request was succesful, and the user has been sent an email confirming their review.
     */
    
    public PostPostReview200ApplicationJSON postPostReview200ApplicationJSONObject;
    public PostPostReviewResponse withPostPostReview200ApplicationJSONObject(PostPostReview200ApplicationJSON postPostReview200ApplicationJSONObject) {
        this.postPostReview200ApplicationJSONObject = postPostReview200ApplicationJSONObject;
        return this;
    }
    
    /**
     * A status code of 400 is returned when a required parameter is mising, such as 'rating' or 'user_email'.
     */
    
    public PostPostReview400ApplicationJSON postPostReview400ApplicationJSONObject;
    public PostPostReviewResponse withPostPostReview400ApplicationJSONObject(PostPostReview400ApplicationJSON postPostReview400ApplicationJSONObject) {
        this.postPostReview400ApplicationJSONObject = postPostReview400ApplicationJSONObject;
        return this;
    }
    
    /**
     * This can appear because the authorization header is missing or malformed, or because the auth email and key pair is not authorized.
     */
    
    public PostPostReview401ApplicationJSON postPostReview401ApplicationJSONObject;
    public PostPostReviewResponse withPostPostReview401ApplicationJSONObject(PostPostReview401ApplicationJSON postPostReview401ApplicationJSONObject) {
        this.postPostReview401ApplicationJSONObject = postPostReview401ApplicationJSONObject;
        return this;
    }
    
    /**
     * The 403 response can have many detailed response messages related to the user's email address validation
     */
    
    public PostPostReview403ApplicationJSON postPostReview403ApplicationJSONObject;
    public PostPostReviewResponse withPostPostReview403ApplicationJSONObject(PostPostReview403ApplicationJSON postPostReview403ApplicationJSONObject) {
        this.postPostReview403ApplicationJSONObject = postPostReview403ApplicationJSONObject;
        return this;
    }
    
}
