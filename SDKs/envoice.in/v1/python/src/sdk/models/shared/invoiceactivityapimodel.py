"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InvoiceActivityAPIModelTypeEnum(str, Enum):
    r"""Type of the activity"""
    CREATED = 'Created'
    DRAFT = 'Draft'
    CLONED = 'Cloned'
    SENT_VIA_EMAIL = 'SentViaEmail'
    SENT_VIA_SMS = 'SentViaSms'
    SENT_REMINDER_VIA_EMAIL = 'SentReminderViaEmail'
    SENT_REMINDER_VIA_SMS = 'SentReminderViaSms'
    OPENED = 'Opened'
    VIEWED = 'Viewed'
    REJECTED = 'Rejected'
    UPDATED = 'Updated'
    PAID = 'Paid'
    UNPAID = 'Unpaid'
    OVERDUE = 'Overdue'
    NEW_MANUAL_PAYMENT = 'NewManualPayment'
    NEW_PAYMENT_WITH_PAYPAL = 'NewPaymentWithPaypal'
    NEW_PAYMENT_WITH_STRIPE = 'NewPaymentWithStripe'
    NEW_PAYMENT_WITH_PAYONEER = 'NewPaymentWithPayoneer'
    SENT_TO_ACCOUNTANT = 'SentToAccountant'
    DOWNLOADED_AS_PDF = 'DownloadedAsPdf'
    MARK_AS_PAID_BY_THE_CLIENT = 'MarkAsPaidByTheClient'
    OPENED_ATTACHMENT = 'OpenedAttachment'
    NEW_PAYMENT_WITH_SQUARE = 'NewPaymentWithSquare'
    NEW_PAYMENT_WITH_KLIK_AND_PAY = 'NewPaymentWithKlikAndPay'
    NEW_PAYMENT_WITH_RAZORPAY = 'NewPaymentWithRazorpay'
    NEW_PAYMENT_WITH_WEPAY = 'NewPaymentWithWepay'
    NEW_PAYMENT_WITH_HALKBANK = 'NewPaymentWithHalkbank'
    CHANGE_STATUS = 'ChangeStatus'
    ORDER_UPDATED = 'OrderUpdated'
    ORDER_CREATED = 'OrderCreated'
    NEW_PAYMENT_WITH_TWO_CHECKOUT = 'NewPaymentWithTwoCheckout'
    NEW_PAYMENT_WITH_PAYMENT_WALL = 'NewPaymentWithPaymentWall'
    NEW_PAYMENT_WITH_BAMBORA_EU = 'NewPaymentWithBamboraEU'
    NEW_PAYMENT_WITH_BAMBORA_NA = 'NewPaymentWithBamboraNA'
    VOID = 'Void'
    NEW_PAYMENT_WITH_NLB = 'NewPaymentWithNlb'
    NEW_PAYMENT_WITH_AUTHORIZE_NET = 'NewPaymentWithAuthorizeNet'
    NEW_PAYMENT_WITH_BRAINTREE = 'NewPaymentWithBraintree'
    ESTIMATION_CREATED = 'EstimationCreated'
    ESTIMATION_DRAFT = 'EstimationDraft'
    ESTIMATION_CLONED = 'EstimationCloned'
    ESTIMATION_SENT_VIA_EMAIL = 'EstimationSentViaEmail'
    ESTIMATION_OPENED = 'EstimationOpened'
    ESTIMATION_VIEWED = 'EstimationViewed'
    ESTIMATION_ACCEPTED = 'EstimationAccepted'
    ESTIMATION_REJECTED = 'EstimationRejected'
    ESTIMATION_UPDATED = 'EstimationUpdated'
    ESTIMATION_DOWNLOADED_AS_PDF = 'EstimationDownloadedAsPdf'
    INVOICE_DIGITALLY_SIGNED = 'InvoiceDigitallySigned'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InvoiceActivityAPIModel:
    
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})
    r"""Id of invoice activity"""  
    invoice_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvoiceNumber'), 'exclude': lambda f: f is None }})
    r"""Indicates to which invoice this activity refers to"""  
    link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Link'), 'exclude': lambda f: f is None }})
    r"""Url which point out to a certain activity action. Ex: Click to view the payment"""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message'), 'exclude': lambda f: f is None }})
    r"""Message associated with the activity"""  
    type: Optional[InvoiceActivityAPIModelTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})
    r"""Type of the activity"""  
    