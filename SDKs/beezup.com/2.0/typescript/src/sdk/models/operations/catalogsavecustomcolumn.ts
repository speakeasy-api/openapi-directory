/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CatalogSaveCustomColumnRequest extends SpeakeasyBase {
  /**
   * The custom column identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=columnId",
  })
  columnId: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  createCustomColumnRequest: shared.CreateCustomColumnRequest;

  /**
   * Your store identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=storeId",
  })
  storeId: string;
}

export class CatalogSaveCustomColumnResponse extends SpeakeasyBase {
  /**
   * Occurs when a catalog custom column id is already used by a catalog column.
   *
   * @remarks
   * When the catalog custom column count limit has been reached.
   */
  @SpeakeasyMetadata()
  beezUPCommonErrorResponseMessage?: shared.BeezUPCommonErrorResponseMessage;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A catalog importation is already in progress!
   */
  @SpeakeasyMetadata()
  importAlreadyInProgressResponse?: shared.ImportAlreadyInProgressResponse;
}
