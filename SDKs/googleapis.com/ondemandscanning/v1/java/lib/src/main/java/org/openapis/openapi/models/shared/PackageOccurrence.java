/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PackageOccurrence - Details on how a particular software package was installed on a system.
 */
public class PackageOccurrence {
    /**
     * Output only. The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("architecture")
    public PackageOccurrenceArchitectureEnum architecture;

    public PackageOccurrence withArchitecture(PackageOccurrenceArchitectureEnum architecture) {
        this.architecture = architecture;
        return this;
    }
    
    /**
     * Output only. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package. The cpe_uri will be blank for language packages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpeUri")
    public String cpeUri;

    public PackageOccurrence withCpeUri(String cpeUri) {
        this.cpeUri = cpeUri;
        return this;
    }
    
    /**
     * License information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("license")
    public License license;

    public PackageOccurrence withLicense(License license) {
        this.license = license;
        return this;
    }
    
    /**
     * All of the places within the filesystem versions of this package have been found.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public Location[] location;

    public PackageOccurrence withLocation(Location[] location) {
        this.location = location;
        return this;
    }
    
    /**
     * Required. Output only. The name of the installed package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public PackageOccurrence withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageType")
    public String packageType;

    public PackageOccurrence withPackageType(String packageType) {
        this.packageType = packageType;
        return this;
    }
    
    /**
     * Version contains structured information about the version of a package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public Version version;

    public PackageOccurrence withVersion(Version version) {
        this.version = version;
        return this;
    }
    
    public PackageOccurrence(){}
}
