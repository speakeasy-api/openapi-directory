<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudRecaptchaenterpriseV1KeyInput - A key used to identify and configure applications (web and/or mobile) that use reCAPTCHA Enterprise.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudRecaptchaenterpriseV1KeyInput
{
    /**
     * Settings specific to keys that can be used by Android apps.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1AndroidKeySettings $androidSettings
     */
	#[\JMS\Serializer\Annotation\SerializedName('androidSettings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1AndroidKeySettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRecaptchaenterpriseV1AndroidKeySettings $androidSettings = null;
    
    /**
     * Human-readable display name of this key. Modifiable by user.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Settings specific to keys that can be used by iOS apps.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1IOSKeySettings $iosSettings
     */
	#[\JMS\Serializer\Annotation\SerializedName('iosSettings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1IOSKeySettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRecaptchaenterpriseV1IOSKeySettings $iosSettings = null;
    
    /**
     * See Creating and managing labels.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * The resource name for the Key in the format "projects/{project}/keys/{key}".
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Options for user acceptance testing.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1TestingOptions $testingOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('testingOptions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1TestingOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRecaptchaenterpriseV1TestingOptions $testingOptions = null;
    
    /**
     * Settings specific to keys that can be used for WAF (Web Application Firewall).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1WafSettings $wafSettings
     */
	#[\JMS\Serializer\Annotation\SerializedName('wafSettings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1WafSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRecaptchaenterpriseV1WafSettings $wafSettings = null;
    
    /**
     * Settings specific to keys that can be used by websites.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1WebKeySettings $webSettings
     */
	#[\JMS\Serializer\Annotation\SerializedName('webSettings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1WebKeySettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRecaptchaenterpriseV1WebKeySettings $webSettings = null;
    
	public function __construct()
	{
		$this->androidSettings = null;
		$this->displayName = null;
		$this->iosSettings = null;
		$this->labels = null;
		$this->name = null;
		$this->testingOptions = null;
		$this->wafSettings = null;
		$this->webSettings = null;
	}
}
