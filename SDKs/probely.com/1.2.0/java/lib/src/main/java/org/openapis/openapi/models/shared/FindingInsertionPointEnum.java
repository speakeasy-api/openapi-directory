/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * FindingInsertionPointEnum - An insertion point is the place in the HTTP request where the
 * malicious payload is injected to exploit the vulnerability.
 *   * cookie - Payload injected into the value of an HTTP cookie
 *   * header - Payload injected into the header of an HTTP request
 *   * parameter - Payload injected into the value of a query string
 *   parameter
 *   * arbitrary_url_param - Payload injected into the value of an
 *   arbitrarily added query string parameter
 *   * url_filename - Payload injected into the URL filename part
 *   * url_folder - Payload injected into the URL folder part
 *   * multipart_parameter - Payload is inserted into the value of a
 *   parameter attribute within a multi-part message body (such as
 *   the name of an uploaded file).
 *   * &lt;empty&gt; - No payload to inject.
 * 
 */
public enum FindingInsertionPointEnum {
    COOKIE("cookie"),
    HEADER("header"),
    PARAMETER("parameter"),
    ARBITRARY_URL_PARAM_NAME("arbitrary_url_param_name"),
    URL_PATH_FOLDER("url_path_folder"),
    UNKNOWN("");

    @JsonValue
    public final String value;

    private FindingInsertionPointEnum(String value) {
        this.value = value;
    }
}
