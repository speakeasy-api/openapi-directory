/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetHostHierarchyChildrenRequest {
    /**
     * Filter by ID of effective SLA domain.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=effective_sla_domain_id")
    public String effectiveSlaDomainId;

    public GetHostHierarchyChildrenRequest withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * Search object by export point.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=export_point")
    public String exportPoint;

    public GetHostHierarchyChildrenRequest withExportPoint(String exportPoint) {
        this.exportPoint = exportPoint;
        return this;
    }
    
    /**
     * ID of the parent host hierarchy object. To get top-level nodes, use **root** as the ID.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    public String id;

    public GetHostHierarchyChildrenRequest withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Limit the number of matches returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public GetHostHierarchyChildrenRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Search object by object name.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;

    public GetHostHierarchyChildrenRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Filter by node object type.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=object_type")
    public GetHostHierarchyChildrenObjectTypeEnum objectType;

    public GetHostHierarchyChildrenRequest withObjectType(GetHostHierarchyChildrenObjectTypeEnum objectType) {
        this.objectType = objectType;
        return this;
    }
    
    /**
     * Number of matches to ignore from the beginning of the results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public GetHostHierarchyChildrenRequest withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Filter the summary information based on the operating system type. Accepted values are 'Windows', 'UnixLike', 'ANY', 'NONE'.
     * Use **_NONE_** to only return information for hosts templates that do not have operating system type set.
     * Use **_ANY_** to only return information for hosts that have operating system type set.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=operating_system_type")
    public GetHostHierarchyChildrenOperatingSystemTypeEnum operatingSystemType;

    public GetHostHierarchyChildrenRequest withOperatingSystemType(GetHostHierarchyChildrenOperatingSystemTypeEnum operatingSystemType) {
        this.operatingSystemType = operatingSystemType;
        return this;
    }
    
    /**
     * Filter by primary cluster ID, or **local**.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_cluster_id")
    public String primaryClusterId;

    public GetHostHierarchyChildrenRequest withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * Limit a response to the results that have the specified SLA Domain assignment type.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sla_assignment")
    public GetHostHierarchyChildrenSLAAssignmentEnum slaAssignment;

    public GetHostHierarchyChildrenRequest withSlaAssignment(GetHostHierarchyChildrenSLAAssignmentEnum slaAssignment) {
        this.slaAssignment = slaAssignment;
        return this;
    }
    
    /**
     * Attribute to sort the results on.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public GetHostHierarchyChildrenSortByEnum sortBy;

    public GetHostHierarchyChildrenRequest withSortBy(GetHostHierarchyChildrenSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Order for sorting the results, either ascending or descending.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public GetHostHierarchyChildrenSortOrderEnum sortOrder;

    public GetHostHierarchyChildrenRequest withSortOrder(GetHostHierarchyChildrenSortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    /**
     * Filter by fileset template ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=template_id")
    public String templateId;

    public GetHostHierarchyChildrenRequest withTemplateId(String templateId) {
        this.templateId = templateId;
        return this;
    }
    
    /**
     * Filter by NAS vendor.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=vendor_type")
    public GetHostHierarchyChildrenVendorTypeEnum vendorType;

    public GetHostHierarchyChildrenRequest withVendorType(GetHostHierarchyChildrenVendorTypeEnum vendorType) {
        this.vendorType = vendorType;
        return this;
    }
    
    public GetHostHierarchyChildrenRequest(@JsonProperty("id") String id) {
        this.id = id;
  }
}
