// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaskSchedulingPolicyNodeFillTypeEnum - Gets or sets how tasks should be distributed across compute nodes
type TaskSchedulingPolicyNodeFillTypeEnum string

const (
	TaskSchedulingPolicyNodeFillTypeEnumSpread   TaskSchedulingPolicyNodeFillTypeEnum = "spread"
	TaskSchedulingPolicyNodeFillTypeEnumPack     TaskSchedulingPolicyNodeFillTypeEnum = "pack"
	TaskSchedulingPolicyNodeFillTypeEnumUnmapped TaskSchedulingPolicyNodeFillTypeEnum = "unmapped"
)

func (e TaskSchedulingPolicyNodeFillTypeEnum) ToPointer() *TaskSchedulingPolicyNodeFillTypeEnum {
	return &e
}

func (e *TaskSchedulingPolicyNodeFillTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "spread":
		fallthrough
	case "pack":
		fallthrough
	case "unmapped":
		*e = TaskSchedulingPolicyNodeFillTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskSchedulingPolicyNodeFillTypeEnum: %v", v)
	}
}

// TaskSchedulingPolicy - Specifies how tasks should be distributed across compute nodes.
type TaskSchedulingPolicy struct {
	// Gets or sets how tasks should be distributed across compute nodes
	NodeFillType TaskSchedulingPolicyNodeFillTypeEnum `json:"nodeFillType"`
}
