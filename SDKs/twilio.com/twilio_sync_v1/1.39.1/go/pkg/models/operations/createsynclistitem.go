// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateSyncListItemServerList = []string{
	"https://sync.twilio.com",
}

type CreateSyncListItemSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type CreateSyncListItemPathParams struct {
	// The SID of the Sync List to add the new List Item to. Can be the Sync List resource's `sid` or its `unique_name`.
	ListSid string `pathParam:"style=simple,explode=false,name=ListSid"`
	// The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) to create the new List Item in.
	ServiceSid string `pathParam:"style=simple,explode=false,name=ServiceSid"`
}

type CreateSyncListItemCreateSyncListItemRequest struct {
	// How long, [in seconds](https://www.twilio.com/docs/sync/limits#sync-payload-limits), before the List Item's parent Sync List expires (time-to-live) and is deleted.
	CollectionTTL *int64 `form:"name=CollectionTtl"`
	// A JSON string that represents an arbitrary, schema-less object that the List Item stores. Can be up to 16 KiB in length.
	Data interface{} `form:"name=Data"`
	// How long, [in seconds](https://www.twilio.com/docs/sync/limits#sync-payload-limits), before the List Item expires (time-to-live) and is deleted.
	ItemTTL *int64 `form:"name=ItemTtl"`
	// An alias for `item_ttl`. If both parameters are provided, this value is ignored.
	TTL *int64 `form:"name=Ttl"`
}

type CreateSyncListItemRequest struct {
	PathParams CreateSyncListItemPathParams
	Request    *CreateSyncListItemCreateSyncListItemRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   CreateSyncListItemSecurity
	ServerURL  *string
}

type CreateSyncListItemResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	SyncV1ServiceSyncListSyncListItem *shared.SyncV1ServiceSyncListSyncListItem
}
