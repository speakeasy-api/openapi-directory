// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VersionFileStatusEnum - Output only. The current status of a particular file in the specified version. The value will be either `pending upload` or `uploaded`.
type VersionFileStatusEnum string

const (
	VersionFileStatusEnumStatusUnspecified VersionFileStatusEnum = "STATUS_UNSPECIFIED"
	VersionFileStatusEnumExpected          VersionFileStatusEnum = "EXPECTED"
	VersionFileStatusEnumActive            VersionFileStatusEnum = "ACTIVE"
)

func (e VersionFileStatusEnum) ToPointer() *VersionFileStatusEnum {
	return &e
}

func (e *VersionFileStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATUS_UNSPECIFIED":
		fallthrough
	case "EXPECTED":
		fallthrough
	case "ACTIVE":
		*e = VersionFileStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VersionFileStatusEnum: %v", v)
	}
}

// VersionFile - A static content file that is part of a version.
type VersionFile struct {
	// The SHA256 content hash of the file.
	Hash *string `json:"hash,omitempty"`
	// The URI at which the file's content should display.
	Path *string `json:"path,omitempty"`
	// Output only. The current status of a particular file in the specified version. The value will be either `pending upload` or `uploaded`.
	Status *VersionFileStatusEnum `json:"status,omitempty"`
}
