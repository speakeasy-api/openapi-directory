/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetV2PaymentsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class GetV2PaymentsRequest extends SpeakeasyBase {
  /**
   * The timestamp for the beginning of the reporting period, in RFC 3339 format.
   *
   * @remarks
   * Inclusive. Default: The current time minus one year.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=begin_time",
  })
  beginTime?: string;

  /**
   * The brand of the payment card (for example, VISA).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=card_brand",
  })
  cardBrand?: string;

  /**
   * A pagination cursor returned by a previous call to this endpoint.
   *
   * @remarks
   * Provide this cursor to retrieve the next set of results for the original query.
   *
   * For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cursor",
  })
  cursor?: string;

  /**
   * The timestamp for the end of the reporting period, in RFC 3339 format.
   *
   * @remarks
   *
   * Default: The current time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=end_time",
  })
  endTime?: string;

  /**
   * The last four digits of a payment card.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=last_4",
  })
  last4?: string;

  /**
   * The maximum number of results to be returned in a single page.
   *
   * @remarks
   * It is possible to receive fewer results than the specified limit on a given page.
   *
   * The default value of 100 is also the maximum allowed value. If the provided value is
   * greater than 100, it is ignored and the default value is used instead.
   *
   * Default: `100`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Limit results to the location supplied. By default, results are returned
   *
   * @remarks
   * for the default (main) location associated with the seller.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=location_id",
  })
  locationId?: string;

  /**
   * The order in which results are listed:
   *
   * @remarks
   * - `ASC` - Oldest to newest.
   * - `DESC` - Newest to oldest (default).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_order",
  })
  sortOrder?: string;

  /**
   * The exact amount in the `total_money` for a payment.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=total" })
  total?: number;
}

export class GetV2PaymentsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listPaymentsResponse?: shared.ListPaymentsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
