"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metricvalue as shared_metricvalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Group:
    r"""One level of grouped data in the results."""
    
    keys: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Keys'), 'exclude': lambda f: f is None }})  
    metrics: Optional[dict[str, shared_metricvalue.MetricValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Metrics'), 'exclude': lambda f: f is None }})  
    