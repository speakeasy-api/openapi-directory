// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCompleteLifecycleActionActionEnum
type GETCompleteLifecycleActionActionEnum string

const (
	GETCompleteLifecycleActionActionEnumCompleteLifecycleAction GETCompleteLifecycleActionActionEnum = "CompleteLifecycleAction"
)

func (e GETCompleteLifecycleActionActionEnum) ToPointer() *GETCompleteLifecycleActionActionEnum {
	return &e
}

func (e *GETCompleteLifecycleActionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CompleteLifecycleAction":
		*e = GETCompleteLifecycleActionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCompleteLifecycleActionActionEnum: %v", v)
	}
}

// GETCompleteLifecycleActionVersionEnum
type GETCompleteLifecycleActionVersionEnum string

const (
	GETCompleteLifecycleActionVersionEnumTwoThousandAndEleven0101 GETCompleteLifecycleActionVersionEnum = "2011-01-01"
)

func (e GETCompleteLifecycleActionVersionEnum) ToPointer() *GETCompleteLifecycleActionVersionEnum {
	return &e
}

func (e *GETCompleteLifecycleActionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-01-01":
		*e = GETCompleteLifecycleActionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCompleteLifecycleActionVersionEnum: %v", v)
	}
}

type GETCompleteLifecycleActionRequest struct {
	Action GETCompleteLifecycleActionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// The ID of the instance.
	InstanceID *string `queryParam:"style=form,explode=true,name=InstanceId"`
	// The action for the group to take. You can specify either <code>CONTINUE</code> or <code>ABANDON</code>.
	LifecycleActionResult string `queryParam:"style=form,explode=true,name=LifecycleActionResult"`
	// A universally unique identifier (UUID) that identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target you specified when you created the lifecycle hook.
	LifecycleActionToken *string `queryParam:"style=form,explode=true,name=LifecycleActionToken"`
	// The name of the lifecycle hook.
	LifecycleHookName string                                `queryParam:"style=form,explode=true,name=LifecycleHookName"`
	Version           GETCompleteLifecycleActionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCompleteLifecycleActionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
