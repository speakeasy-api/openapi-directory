/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Controls the rule for dimension value ordering.
 */
export enum DimensionOrderByOrderTypeEnum {
  OrderTypeUnspecified = "ORDER_TYPE_UNSPECIFIED",
  Alphanumeric = "ALPHANUMERIC",
  CaseInsensitiveAlphanumeric = "CASE_INSENSITIVE_ALPHANUMERIC",
  Numeric = "NUMERIC",
}

/**
 * Sorts by dimension values.
 */
export class DimensionOrderBy extends SpeakeasyBase {
  /**
   * A dimension name in the request to order by.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dimensionName" })
  dimensionName?: string;

  /**
   * Controls the rule for dimension value ordering.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderType" })
  orderType?: DimensionOrderByOrderTypeEnum;
}
