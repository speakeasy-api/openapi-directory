// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeDBClusterSnapshotAttributesActionEnum
type GETDescribeDBClusterSnapshotAttributesActionEnum string

const (
	GETDescribeDBClusterSnapshotAttributesActionEnumDescribeDbClusterSnapshotAttributes GETDescribeDBClusterSnapshotAttributesActionEnum = "DescribeDBClusterSnapshotAttributes"
)

func (e *GETDescribeDBClusterSnapshotAttributesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeDBClusterSnapshotAttributes":
		*e = GETDescribeDBClusterSnapshotAttributesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDBClusterSnapshotAttributesActionEnum: %s", s)
	}
}

// GETDescribeDBClusterSnapshotAttributesVersionEnum
type GETDescribeDBClusterSnapshotAttributesVersionEnum string

const (
	GETDescribeDBClusterSnapshotAttributesVersionEnumTwoThousandAndFourteen1031 GETDescribeDBClusterSnapshotAttributesVersionEnum = "2014-10-31"
)

func (e *GETDescribeDBClusterSnapshotAttributesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = GETDescribeDBClusterSnapshotAttributesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDBClusterSnapshotAttributesVersionEnum: %s", s)
	}
}

type GETDescribeDBClusterSnapshotAttributesQueryParams struct {
	Action GETDescribeDBClusterSnapshotAttributesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The identifier for the DB cluster snapshot to describe the attributes for.
	DBClusterSnapshotIdentifier string                                            `queryParam:"style=form,explode=true,name=DBClusterSnapshotIdentifier"`
	Version                     GETDescribeDBClusterSnapshotAttributesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeDBClusterSnapshotAttributesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeDBClusterSnapshotAttributesRequest struct {
	QueryParams GETDescribeDBClusterSnapshotAttributesQueryParams
	Headers     GETDescribeDBClusterSnapshotAttributesHeaders
}

type GETDescribeDBClusterSnapshotAttributesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
