"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegistrationsForksListResponse = exports.RegistrationsForksListRegistration = exports.RegistrationsForksListRegistrationRelationships = exports.RegistrationsForksListRegistrationLinks = exports.RegistrationsForksListRegistrationAttributes = exports.RegistrationsForksListRegistrationAttributesCategoryEnum = exports.RegistrationsForksListRequest = void 0;
var utils_1 = require("../../../internal/utils");
var RegistrationsForksListRequest = /** @class */ (function (_super) {
    __extends(RegistrationsForksListRequest, _super);
    function RegistrationsForksListRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=registration_id",
        }),
        __metadata("design:type", String)
    ], RegistrationsForksListRequest.prototype, "registrationId", void 0);
    return RegistrationsForksListRequest;
}(utils_1.SpeakeasyBase));
exports.RegistrationsForksListRequest = RegistrationsForksListRequest;
/**
 * The category of the registered node.
 */
var RegistrationsForksListRegistrationAttributesCategoryEnum;
(function (RegistrationsForksListRegistrationAttributesCategoryEnum) {
    RegistrationsForksListRegistrationAttributesCategoryEnum["Analysis"] = "analysis";
    RegistrationsForksListRegistrationAttributesCategoryEnum["Communication"] = "communication";
    RegistrationsForksListRegistrationAttributesCategoryEnum["Data"] = "data";
    RegistrationsForksListRegistrationAttributesCategoryEnum["Hypothesis"] = "hypothesis";
    RegistrationsForksListRegistrationAttributesCategoryEnum["Instrumentation"] = "instrumentation";
    RegistrationsForksListRegistrationAttributesCategoryEnum["MethodsAndMeasures"] = "methods and measures";
    RegistrationsForksListRegistrationAttributesCategoryEnum["Procedure"] = "procedure";
    RegistrationsForksListRegistrationAttributesCategoryEnum["Project"] = "project";
    RegistrationsForksListRegistrationAttributesCategoryEnum["Software"] = "software";
    RegistrationsForksListRegistrationAttributesCategoryEnum["Other"] = "other";
})(RegistrationsForksListRegistrationAttributesCategoryEnum = exports.RegistrationsForksListRegistrationAttributesCategoryEnum || (exports.RegistrationsForksListRegistrationAttributesCategoryEnum = {}));
/**
 * The properties of the registration entity.
 */
var RegistrationsForksListRegistrationAttributes = /** @class */ (function (_super) {
    __extends(RegistrationsForksListRegistrationAttributes, _super);
    function RegistrationsForksListRegistrationAttributes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationAttributes.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsForksListRegistrationAttributes.prototype, "collection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsForksListRegistrationAttributes.prototype, "currentUserCanComment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], RegistrationsForksListRegistrationAttributes.prototype, "currentUserPermissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], RegistrationsForksListRegistrationAttributes.prototype, "dateCreated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], RegistrationsForksListRegistrationAttributes.prototype, "dateModified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], RegistrationsForksListRegistrationAttributes.prototype, "dateRegistered", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], RegistrationsForksListRegistrationAttributes.prototype, "dateWithdrawn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationAttributes.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], RegistrationsForksListRegistrationAttributes.prototype, "embargoEndDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsForksListRegistrationAttributes.prototype, "fork", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationAttributes.prototype, "nodeLicense", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsForksListRegistrationAttributes.prototype, "pendingEmbargoApproval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsForksListRegistrationAttributes.prototype, "pendingRegistrationApproval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsForksListRegistrationAttributes.prototype, "pendingWithdrawal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsForksListRegistrationAttributes.prototype, "preprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsForksListRegistrationAttributes.prototype, "public", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationAttributes.prototype, "registeredMeta", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsForksListRegistrationAttributes.prototype, "registration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationAttributes.prototype, "registrationSupplement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], RegistrationsForksListRegistrationAttributes.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationAttributes.prototype, "templateFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationAttributes.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationAttributes.prototype, "withdrawalJustification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsForksListRegistrationAttributes.prototype, "withdrawn", void 0);
    return RegistrationsForksListRegistrationAttributes;
}(utils_1.SpeakeasyBase));
exports.RegistrationsForksListRegistrationAttributes = RegistrationsForksListRegistrationAttributes;
/**
 * URLs to alternative representations of the registrations entity.
 */
var RegistrationsForksListRegistrationLinks = /** @class */ (function (_super) {
    __extends(RegistrationsForksListRegistrationLinks, _super);
    function RegistrationsForksListRegistrationLinks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationLinks.prototype, "html", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationLinks.prototype, "self", void 0);
    return RegistrationsForksListRegistrationLinks;
}(utils_1.SpeakeasyBase));
exports.RegistrationsForksListRegistrationLinks = RegistrationsForksListRegistrationLinks;
/**
 * URLs to other entities or entity collections that have a relationship to the registration entity.
 */
var RegistrationsForksListRegistrationRelationships = /** @class */ (function (_super) {
    __extends(RegistrationsForksListRegistrationRelationships, _super);
    function RegistrationsForksListRegistrationRelationships() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "affiliatedInstitutions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "children", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "citation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "comments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "contributors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "files", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "forks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "identifiers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "linkedNodes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "logs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "nodeLinks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "parent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "registeredBy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "registeredFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "registrationSchema", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "root", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "viewOnlyLinks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistrationRelationships.prototype, "wikis", void 0);
    return RegistrationsForksListRegistrationRelationships;
}(utils_1.SpeakeasyBase));
exports.RegistrationsForksListRegistrationRelationships = RegistrationsForksListRegistrationRelationships;
var RegistrationsForksListRegistration = /** @class */ (function (_super) {
    __extends(RegistrationsForksListRegistration, _super);
    function RegistrationsForksListRegistration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", RegistrationsForksListRegistrationAttributes)
    ], RegistrationsForksListRegistration.prototype, "attributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistration.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", RegistrationsForksListRegistrationLinks)
    ], RegistrationsForksListRegistration.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", RegistrationsForksListRegistrationRelationships)
    ], RegistrationsForksListRegistration.prototype, "relationships", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListRegistration.prototype, "type", void 0);
    return RegistrationsForksListRegistration;
}(utils_1.SpeakeasyBase));
exports.RegistrationsForksListRegistration = RegistrationsForksListRegistration;
var RegistrationsForksListResponse = /** @class */ (function (_super) {
    __extends(RegistrationsForksListResponse, _super);
    function RegistrationsForksListResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], RegistrationsForksListResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsForksListResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RegistrationsForksListResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegistrationsForksListResponse.prototype, "rawResponse", void 0);
    return RegistrationsForksListResponse;
}(utils_1.SpeakeasyBase));
exports.RegistrationsForksListResponse = RegistrationsForksListResponse;
