/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Translation - A single translation response.
 */
public class Translation {
    /**
     * The ISO-639 language code of source text in the initial request, detected automatically, if no source language was passed within the initial request. If the source language was passed, auto-detection of the language does not occur and this field is empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("detectedLanguageCode")
    public String detectedLanguageCode;
    public Translation withDetectedLanguageCode(String detectedLanguageCode) {
        this.detectedLanguageCode = detectedLanguageCode;
        return this;
    }
    
    /**
     * Configures which glossary is used for a specific target language and defines options for applying that glossary.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("glossaryConfig")
    public TranslateTextGlossaryConfig glossaryConfig;
    public Translation withGlossaryConfig(TranslateTextGlossaryConfig glossaryConfig) {
        this.glossaryConfig = glossaryConfig;
        return this;
    }
    
    /**
     * Only present when `model` is present in the request. `model` here is normalized to have project number. For example: If the `model` requested in TranslationTextRequest is `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("model")
    public String model;
    public Translation withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * Text translated into the target language. If an error occurs during translation, this field might be excluded from the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("translatedText")
    public String translatedText;
    public Translation withTranslatedText(String translatedText) {
        this.translatedText = translatedText;
        return this;
    }
    
}
