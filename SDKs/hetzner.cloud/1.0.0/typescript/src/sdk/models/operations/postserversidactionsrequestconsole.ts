/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostServersIdActionsRequestConsoleRequest extends SpeakeasyBase {
  /**
   * ID of the Server
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

/**
 * Error message for the Action if error occurred, otherwise null
 */
export class PostServersIdActionsRequestConsole201ApplicationJSONActionError extends SpeakeasyBase {
  /**
   * Fixed machine readable code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  /**
   * Humanized error message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class PostServersIdActionsRequestConsole201ApplicationJSONActionResources extends SpeakeasyBase {
  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Type of resource referenced
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

/**
 * Status of the Action
 */
export enum PostServersIdActionsRequestConsole201ApplicationJSONActionStatusEnum {
  Success = "success",
  Running = "running",
  Error = "error",
}

export class PostServersIdActionsRequestConsole201ApplicationJSONAction extends SpeakeasyBase {
  /**
   * Command executed in the Action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "command" })
  command: string;

  /**
   * Error message for the Action if error occurred, otherwise null
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => PostServersIdActionsRequestConsole201ApplicationJSONActionError)
  error: PostServersIdActionsRequestConsole201ApplicationJSONActionError;

  /**
   * Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finished" })
  finished: string;

  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Progress of Action in percent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "progress" })
  progress: number;

  /**
   * Resources the Action relates to
   */
  @SpeakeasyMetadata({
    elemType:
      PostServersIdActionsRequestConsole201ApplicationJSONActionResources,
  })
  @Expose({ name: "resources" })
  @Type(
    () => PostServersIdActionsRequestConsole201ApplicationJSONActionResources
  )
  resources: PostServersIdActionsRequestConsole201ApplicationJSONActionResources[];

  /**
   * Point in time when the Action was started (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "started" })
  started: string;

  /**
   * Status of the Action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: PostServersIdActionsRequestConsole201ApplicationJSONActionStatusEnum;
}

/**
 * The `action` key in the reply contains an Action object with this structure
 */
export class PostServersIdActionsRequestConsole201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  @Type(() => PostServersIdActionsRequestConsole201ApplicationJSONAction)
  action: PostServersIdActionsRequestConsole201ApplicationJSONAction;

  /**
   * VNC password to use for this connection (this password only works in combination with a wss_url with valid token)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password: string;

  /**
   * URL of websocket proxy to use; this includes a token which is valid for a limited time only
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wss_url" })
  wssUrl: string;
}

export class PostServersIdActionsRequestConsoleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The `action` key in the reply contains an Action object with this structure
   */
  @SpeakeasyMetadata()
  postServersIdActionsRequestConsole201ApplicationJSONObject?: PostServersIdActionsRequestConsole201ApplicationJSON;
}
