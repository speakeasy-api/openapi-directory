<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetNotificationsRequest
{
    /**
     * Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.
     * 
     * @var ?string $cursor
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=cursor')]
    public ?string $cursor = null;
    
    /**
     * If set, return records where the specified field is equal to the supplied value. Valid fields are `path`, `user_id` or `group_id`.
     * 
     * @var ?array<string, mixed> $filter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter')]
    public ?array $filter = null;
    
    /**
     * If set, return records where the specified field is prefixed by the supplied value. Valid fields are `path`.
     * 
     * @var ?array<string, mixed> $filterPrefix
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter_prefix')]
    public ?array $filterPrefix = null;
    
    /**
     * If set, return records where the specified field is equal to the supplied value.
     * 
     * @var ?string $groupId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=group_id')]
    public ?string $groupId = null;
    
    /**
     * If `include_ancestors` is `true` and `path` is specified, include notifications for any parent paths. Ignored if `path` is not specified.
     * 
     * @var ?bool $includeAncestors
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=include_ancestors')]
    public ?bool $includeAncestors = null;
    
    /**
     * Show notifications for this Path.
     * 
     * @var ?string $path
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=path')]
    public ?string $path = null;
    
    /**
     * Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[path]=desc`). Valid fields are `path`, `user_id` or `group_id`.
     * 
     * @var ?array<string, mixed> $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_by')]
    public ?array $sortBy = null;
    
    /**
     * DEPRECATED: Show notifications for this User ID. Use `filter[user_id]` instead.
     * 
     * @var ?int $userId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=user_id')]
    public ?int $userId = null;
    
	public function __construct()
	{
		$this->cursor = null;
		$this->filter = null;
		$this->filterPrefix = null;
		$this->groupId = null;
		$this->includeAncestors = null;
		$this->path = null;
		$this->perPage = null;
		$this->sortBy = null;
		$this->userId = null;
	}
}
