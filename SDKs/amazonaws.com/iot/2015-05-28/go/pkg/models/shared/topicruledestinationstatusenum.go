// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TopicRuleDestinationStatusEnum string

const (
	TopicRuleDestinationStatusEnumEnabled    TopicRuleDestinationStatusEnum = "ENABLED"
	TopicRuleDestinationStatusEnumInProgress TopicRuleDestinationStatusEnum = "IN_PROGRESS"
	TopicRuleDestinationStatusEnumDisabled   TopicRuleDestinationStatusEnum = "DISABLED"
	TopicRuleDestinationStatusEnumError      TopicRuleDestinationStatusEnum = "ERROR"
	TopicRuleDestinationStatusEnumDeleting   TopicRuleDestinationStatusEnum = "DELETING"
)

func (e *TopicRuleDestinationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENABLED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "DISABLED":
		fallthrough
	case "ERROR":
		fallthrough
	case "DELETING":
		*e = TopicRuleDestinationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TopicRuleDestinationStatusEnum: %s", s)
	}
}
