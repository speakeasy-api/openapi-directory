// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// SeasonCurrentFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type SeasonCurrentFormatEnum string

const (
	SeasonCurrentFormatEnumXML  SeasonCurrentFormatEnum = "XML"
	SeasonCurrentFormatEnumJSON SeasonCurrentFormatEnum = "JSON"
)

func (e SeasonCurrentFormatEnum) ToPointer() *SeasonCurrentFormatEnum {
	return &e
}

func (e *SeasonCurrentFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = SeasonCurrentFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SeasonCurrentFormatEnum: %v", v)
	}
}

type SeasonCurrentRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format SeasonCurrentFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type SeasonCurrentResponse struct {
	ContentType                            string
	SeasonCurrent200ApplicationJSONInteger *int64
	StatusCode                             int
	RawResponse                            *http.Response
}
