"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum(str, Enum):
    r"""Whether the card authorization should be approved or declined."""
    APPROVE = 'approve'
    DECLINE = 'decline'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionARealTimeDecisionParametersCardAuthorization:
    r"""If the Real-Time Decision relates to a card authorization attempt, this object contains your response to the authorization."""
    
    decision: ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decision') }})
    r"""Whether the card authorization should be approved or declined."""  
    
class ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum(str, Enum):
    r"""Whether your application was able to deliver the one-time passcode."""
    SUCCESS = 'success'
    FAILURE = 'failure'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionARealTimeDecisionParametersDigitalWalletAuthentication:
    r"""If the Real-Time Decision relates to a digital wallet authentication attempt, this object contains your response to the authentication."""
    
    result: ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result') }})
    r"""Whether your application was able to deliver the one-time passcode."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionARealTimeDecisionParametersDigitalWalletTokenApproval:
    r"""If your application approves the provisioning attempt, this contains metadata about the digital wallet token that will be generated."""
    
    card_profile_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_profile_id') }})
    r"""The identifier of the Card Profile to assign to the Digital Wallet token."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""An email address that can be used to verify the cardholder via one-time passcode."""  
    phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone'), 'exclude': lambda f: f is None }})
    r"""A phone number that can be used to verify the cardholder via one-time passcode over SMS."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionARealTimeDecisionParametersDigitalWalletTokenDecline:
    r"""If your application declines the provisioning attempt, this contains details about the decline."""
    
    reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason'), 'exclude': lambda f: f is None }})
    r"""Why the tokenization attempt was declined. This is for logging purposes only and is not displayed to the end-user."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionARealTimeDecisionParametersDigitalWalletToken:
    r"""If the Real-Time Decision relates to a digital wallet token provisioning attempt, this object contains your response to the attempt."""
    
    approval: Optional[ActionARealTimeDecisionParametersDigitalWalletTokenApproval] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approval'), 'exclude': lambda f: f is None }})
    r"""If your application approves the provisioning attempt, this contains metadata about the digital wallet token that will be generated."""  
    decline: Optional[ActionARealTimeDecisionParametersDigitalWalletTokenDecline] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decline'), 'exclude': lambda f: f is None }})
    r"""If your application declines the provisioning attempt, this contains details about the decline."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionARealTimeDecisionParameters:
    
    card_authorization: Optional[ActionARealTimeDecisionParametersCardAuthorization] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_authorization'), 'exclude': lambda f: f is None }})
    r"""If the Real-Time Decision relates to a card authorization attempt, this object contains your response to the authorization."""  
    digital_wallet_authentication: Optional[ActionARealTimeDecisionParametersDigitalWalletAuthentication] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('digital_wallet_authentication'), 'exclude': lambda f: f is None }})
    r"""If the Real-Time Decision relates to a digital wallet authentication attempt, this object contains your response to the authentication."""  
    digital_wallet_token: Optional[ActionARealTimeDecisionParametersDigitalWalletToken] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('digital_wallet_token'), 'exclude': lambda f: f is None }})
    r"""If the Real-Time Decision relates to a digital wallet token provisioning attempt, this object contains your response to the attempt."""  
    