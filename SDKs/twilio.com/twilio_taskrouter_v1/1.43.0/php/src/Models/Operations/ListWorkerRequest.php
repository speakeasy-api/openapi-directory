<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListWorkerRequest
{
    /**
     * The `activity_name` of the Worker resources to read.
     * 
     * @var ?string $activityName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ActivityName')]
    public ?string $activityName = null;
    
    /**
     * The `activity_sid` of the Worker resources to read.
     * 
     * @var ?string $activitySid
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ActivitySid')]
    public ?string $activitySid = null;
    
    /**
     * Whether to return only Worker resources that are available or unavailable. Can be `true`, `1`, or `yes` to return Worker resources that are available, and `false`, or any value returns the Worker resources that are not available.
     * 
     * @var ?string $available
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Available')]
    public ?string $available = null;
    
    /**
     * The `friendly_name` of the Worker resources to read.
     * 
     * @var ?string $friendlyName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=FriendlyName')]
    public ?string $friendlyName = null;
    
    /**
     * Sorting parameter for Workers
     * 
     * @var ?string $ordering
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Ordering')]
    public ?string $ordering = null;
    
    /**
     * The page index. This value is simply for client state.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Page')]
    public ?int $page = null;
    
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageSize')]
    public ?int $pageSize = null;
    
    /**
     * The page token. This is provided by the API.
     * 
     * @var ?string $pageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageToken')]
    public ?string $pageToken = null;
    
    /**
     * Filter by Workers that would match an expression on a TaskQueue. This is helpful for debugging which Workers would match a potential queue.
     * 
     * @var ?string $targetWorkersExpression
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TargetWorkersExpression')]
    public ?string $targetWorkersExpression = null;
    
    /**
     * The `friendly_name` of the TaskQueue that the Workers to read are eligible for.
     * 
     * @var ?string $taskQueueName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TaskQueueName')]
    public ?string $taskQueueName = null;
    
    /**
     * The SID of the TaskQueue that the Workers to read are eligible for.
     * 
     * @var ?string $taskQueueSid
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TaskQueueSid')]
    public ?string $taskQueueSid = null;
    
    /**
     * The SID of the Workspace with the Workers to read.
     * 
     * @var string $workspaceSid
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=WorkspaceSid')]
    public string $workspaceSid;
    
	public function __construct()
	{
		$this->activityName = null;
		$this->activitySid = null;
		$this->available = null;
		$this->friendlyName = null;
		$this->ordering = null;
		$this->page = null;
		$this->pageSize = null;
		$this->pageToken = null;
		$this->targetWorkersExpression = null;
		$this->taskQueueName = null;
		$this->taskQueueSid = null;
		$this->workspaceSid = "";
	}
}
