// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateVirtualClusterRequestBodyContainerProvider - The information about the container provider.
type CreateVirtualClusterRequestBodyContainerProvider struct {
	ID   *string                           `json:"id,omitempty"`
	Info *shared.ContainerInfo             `json:"info,omitempty"`
	Type *shared.ContainerProviderTypeEnum `json:"type,omitempty"`
}

type CreateVirtualClusterRequestBody struct {
	// The client token of the virtual cluster.
	ClientToken string `json:"clientToken"`
	// The information about the container provider.
	ContainerProvider CreateVirtualClusterRequestBodyContainerProvider `json:"containerProvider"`
	// The specified name of the virtual cluster.
	Name string `json:"name"`
	// The tags assigned to the virtual cluster.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateVirtualClusterRequest struct {
	RequestBody       CreateVirtualClusterRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateVirtualClusterResponse struct {
	ContentType string
	// Success
	CreateVirtualClusterResponse *shared.CreateVirtualClusterResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
