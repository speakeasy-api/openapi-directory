/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DashboardFilter - A filter to reduce the amount of data charted in relevant widgets.
 */
public class DashboardFilter {
    /**
     * The specified filter type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filterType")
    public DashboardFilterFilterTypeEnum filterType;

    public DashboardFilter withFilterType(DashboardFilterFilterTypeEnum filterType) {
        this.filterType = filterType;
        return this;
    }
    
    /**
     * Required. The key for the label
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labelKey")
    public String labelKey;

    public DashboardFilter withLabelKey(String labelKey) {
        this.labelKey = labelKey;
        return this;
    }
    
    /**
     * A variable-length string value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stringValue")
    public String stringValue;

    public DashboardFilter withStringValue(String stringValue) {
        this.stringValue = stringValue;
        return this;
    }
    
    /**
     * The placeholder text that can be referenced in a filter string or MQL query. If omitted, the dashboard filter will be applied to all relevant widgets in the dashboard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("templateVariable")
    public String templateVariable;

    public DashboardFilter withTemplateVariable(String templateVariable) {
        this.templateVariable = templateVariable;
        return this;
    }
    
    public DashboardFilter(){}
}
