<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlement - A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlement
{
    /**
     * The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum>')]
    public InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum $currency;
    
	#[\JMS\Serializer\Annotation\SerializedName('merchant_category_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantCategoryCode;
    
	#[\JMS\Serializer\Annotation\SerializedName('merchant_city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantCity;
    
	#[\JMS\Serializer\Annotation\SerializedName('merchant_country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantCountry;
    
	#[\JMS\Serializer\Annotation\SerializedName('merchant_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantName;
    
	#[\JMS\Serializer\Annotation\SerializedName('merchant_state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantState;
    
    /**
     * The identifier of the Pending Transaction associated with this Transaction.
     * 
     * @var string $pendingTransactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('pending_transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $pendingTransactionId;
    
    /**
     * The amount in the minor unit of the transaction's presentment currency.
     * 
     * @var int $presentmentAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('presentment_amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $presentmentAmount;
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency.
     * 
     * @var string $presentmentCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('presentment_currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $presentmentCurrency;
    
    /**
     * A constant representing the object's type. For this resource it will always be `card_settlement`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum>')]
    public InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum $type;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->currency = \OpenAPI\OpenAPI\Models\Shared\InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum::CAD;
		$this->merchantCategoryCode = "";
		$this->merchantCity = "";
		$this->merchantCountry = "";
		$this->merchantName = "";
		$this->merchantState = "";
		$this->pendingTransactionId = "";
		$this->presentmentAmount = 0;
		$this->presentmentCurrency = "";
		$this->type = \OpenAPI\OpenAPI\Models\Shared\InboundWireTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum::CARD_SETTLEMENT;
	}
}
