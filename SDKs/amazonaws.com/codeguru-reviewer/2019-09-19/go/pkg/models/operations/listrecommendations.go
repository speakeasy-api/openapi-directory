// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListRecommendationsPathParams struct {
	// The Amazon Resource Name (ARN) of the <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_CodeReview.html">CodeReview</a> object.
	CodeReviewArn string `pathParam:"style=simple,explode=false,name=CodeReviewArn"`
}

type ListRecommendationsQueryParams struct {
	// The maximum number of results that are returned per call. The default is 100.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

type ListRecommendationsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListRecommendationsRequest struct {
	PathParams  ListRecommendationsPathParams
	QueryParams ListRecommendationsQueryParams
	Headers     ListRecommendationsHeaders
}

type ListRecommendationsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListRecommendationsResponse *shared.ListRecommendationsResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
