// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type OrgInvitationsRejectSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type OrgInvitationsRejectRequest struct {
	// allow empty body for custom http-client lib
	RequestBody map[string]interface{} `request:"mediaType=application/json"`
	// The app invitation token that was sent to the user
	InvitationToken string `pathParam:"style=simple,explode=false,name=invitation_token"`
}

type OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum string

const (
	OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnumBadRequest          OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnumConflict            OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "Conflict"
	OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnumNotAcceptable       OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnumNotFound            OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "NotFound"
	OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnumInternalServerError OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnumUnauthorized        OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnumTooManyRequests     OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum) ToPointer() *OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type OrgInvitationsRejectDefaultApplicationJSONError struct {
	Code    OrgInvitationsRejectDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                  `json:"message"`
}

// OrgInvitationsRejectDefaultApplicationJSON - Error
type OrgInvitationsRejectDefaultApplicationJSON struct {
	Error OrgInvitationsRejectDefaultApplicationJSONError `json:"error"`
}

type OrgInvitationsRejectResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	OrgInvitationsRejectDefaultApplicationJSONObject *OrgInvitationsRejectDefaultApplicationJSON
}
