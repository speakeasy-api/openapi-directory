"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetSitesSiteIDSubsitesOutputFormatResponse = exports.GetSitesSiteIDSubsitesOutputFormatRequest = exports.GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum = exports.GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum = exports.GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
 */
var GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum;
(function (GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum) {
    GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum["Any"] = "any";
    GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum["AccessPoint"] = "accessPoint";
    GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum["FrontDoorPoint"] = "frontDoorPoint";
    GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum["ParcelPoint"] = "parcelPoint";
    GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum["RooftopPoint"] = "rooftopPoint";
    GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum["RoutingPoint"] = "routingPoint";
})(GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum = exports.GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum || (exports.GetSitesSiteIDSubsitesOutputFormatLocationDescriptorEnum = {}));
/**
 * Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
 *
 * @remarks
 *
 * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
 */
var GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum;
(function (GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum) {
    GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum["Json"] = "json";
    GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum["Geojson"] = "geojson";
    GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum["Xhtml"] = "xhtml";
    GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum["Kml"] = "kml";
    GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum["Gml"] = "gml";
    GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum["Csv"] = "csv";
    GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum["Shpz"] = "shpz";
})(GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum = exports.GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum || (exports.GetSitesSiteIDSubsitesOutputFormatOutputFormatEnum = {}));
/**
 * The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
 */
var GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum;
(function (GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum) {
    GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum["FourThousandThreeHundredAndTwentySix"] = "4326";
    GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum["FourThousandTwoHundredAndSixtyNine"] = "4269";
    GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum["ThreeThousandAndFive"] = "3005";
    GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum["TwentySixThousandNineHundredAndSeven"] = "26907";
    GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum["TwentySixThousandNineHundredAndEight"] = "26908";
    GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum["TwentySixThousandNineHundredAndNine"] = "26909";
    GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum["TwentySixThousandNineHundredAndTen"] = "26910";
    GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum["TwentySixThousandNineHundredAndEleven"] = "26911";
})(GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum = exports.GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum || (exports.GetSitesSiteIDSubsitesOutputFormatOutputSrsEnum = {}));
var GetSitesSiteIDSubsitesOutputFormatRequest = /** @class */ (function (_super) {
    __extends(GetSitesSiteIDSubsitesOutputFormatRequest, _super);
    function GetSitesSiteIDSubsitesOutputFormatRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=brief" }),
        __metadata("design:type", Boolean)
    ], GetSitesSiteIDSubsitesOutputFormatRequest.prototype, "brief", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=locationDescriptor",
        }),
        __metadata("design:type", String)
    ], GetSitesSiteIDSubsitesOutputFormatRequest.prototype, "locationDescriptor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=outputFormat",
        }),
        __metadata("design:type", String)
    ], GetSitesSiteIDSubsitesOutputFormatRequest.prototype, "outputFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=outputSRS",
        }),
        __metadata("design:type", String)
    ], GetSitesSiteIDSubsitesOutputFormatRequest.prototype, "outputSRS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=setBack",
        }),
        __metadata("design:type", Number)
    ], GetSitesSiteIDSubsitesOutputFormatRequest.prototype, "setBack", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=siteID",
        }),
        __metadata("design:type", String)
    ], GetSitesSiteIDSubsitesOutputFormatRequest.prototype, "siteID", void 0);
    return GetSitesSiteIDSubsitesOutputFormatRequest;
}(utils_1.SpeakeasyBase));
exports.GetSitesSiteIDSubsitesOutputFormatRequest = GetSitesSiteIDSubsitesOutputFormatRequest;
var GetSitesSiteIDSubsitesOutputFormatResponse = /** @class */ (function (_super) {
    __extends(GetSitesSiteIDSubsitesOutputFormatResponse, _super);
    function GetSitesSiteIDSubsitesOutputFormatResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetSitesSiteIDSubsitesOutputFormatResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetSitesSiteIDSubsitesOutputFormatResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetSitesSiteIDSubsitesOutputFormatResponse.prototype, "rawResponse", void 0);
    return GetSitesSiteIDSubsitesOutputFormatResponse;
}(utils_1.SpeakeasyBase));
exports.GetSitesSiteIDSubsitesOutputFormatResponse = GetSitesSiteIDSubsitesOutputFormatResponse;
