// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteSSHPublicKeyXAmzTargetEnum
type DeleteSSHPublicKeyXAmzTargetEnum string

const (
	DeleteSSHPublicKeyXAmzTargetEnumTransferServiceDeleteSSHPublicKey DeleteSSHPublicKeyXAmzTargetEnum = "TransferService.DeleteSshPublicKey"
)

func (e DeleteSSHPublicKeyXAmzTargetEnum) ToPointer() *DeleteSSHPublicKeyXAmzTargetEnum {
	return &e
}

func (e *DeleteSSHPublicKeyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TransferService.DeleteSshPublicKey":
		*e = DeleteSSHPublicKeyXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteSSHPublicKeyXAmzTargetEnum: %v", v)
	}
}

type DeleteSSHPublicKeyRequest struct {
	DeleteSSHPublicKeyRequest shared.DeleteSSHPublicKeyRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                DeleteSSHPublicKeyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteSSHPublicKeyResponse struct {
	ContentType string
	// InternalServiceError
	InternalServiceError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
