// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetTrackCollectionListSecurity struct {
	CustomerAccessCode string `security:"scheme,type=oauth2,name=Authorization"`
}

type GetTrackCollectionListEmbedEnum string

const (
	GetTrackCollectionListEmbedEnumShareCode GetTrackCollectionListEmbedEnum = "share_code"
	GetTrackCollectionListEmbedEnumShareURL  GetTrackCollectionListEmbedEnum = "share_url"
)

func (e GetTrackCollectionListEmbedEnum) ToPointer() *GetTrackCollectionListEmbedEnum {
	return &e
}

func (e *GetTrackCollectionListEmbedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "share_code":
		fallthrough
	case "share_url":
		*e = GetTrackCollectionListEmbedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTrackCollectionListEmbedEnum: %v", v)
	}
}

type GetTrackCollectionListRequest struct {
	// Which sharing information to include in the response, such as a URL to the collection
	Embed []GetTrackCollectionListEmbedEnum `queryParam:"style=form,explode=true,name=embed"`
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of results per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
}

type GetTrackCollectionListResponse struct {
	// OK
	CollectionDataList *shared.CollectionDataList
	ContentType        string
	StatusCode         int
	RawResponse        *http.Response
}
