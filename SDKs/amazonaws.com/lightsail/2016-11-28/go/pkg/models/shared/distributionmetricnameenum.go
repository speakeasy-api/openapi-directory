// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DistributionMetricNameEnum string

const (
	DistributionMetricNameEnumRequests         DistributionMetricNameEnum = "Requests"
	DistributionMetricNameEnumBytesDownloaded  DistributionMetricNameEnum = "BytesDownloaded"
	DistributionMetricNameEnumBytesUploaded    DistributionMetricNameEnum = "BytesUploaded"
	DistributionMetricNameEnumTotalErrorRate   DistributionMetricNameEnum = "TotalErrorRate"
	DistributionMetricNameEnumHttp4xxErrorRate DistributionMetricNameEnum = "Http4xxErrorRate"
	DistributionMetricNameEnumHttp5xxErrorRate DistributionMetricNameEnum = "Http5xxErrorRate"
)

func (e DistributionMetricNameEnum) ToPointer() *DistributionMetricNameEnum {
	return &e
}

func (e *DistributionMetricNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Requests":
		fallthrough
	case "BytesDownloaded":
		fallthrough
	case "BytesUploaded":
		fallthrough
	case "TotalErrorRate":
		fallthrough
	case "Http4xxErrorRate":
		fallthrough
	case "Http5xxErrorRate":
		*e = DistributionMetricNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionMetricNameEnum: %v", v)
	}
}
