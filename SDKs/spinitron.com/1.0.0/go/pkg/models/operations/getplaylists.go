// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetPlaylistsRequest struct {
	// Amount of items to return
	Count *int64 `queryParam:"style=form,explode=true,name=count"`
	// The ending datetime. Maximum 1 hour in future.
	//
	End *time.Time `queryParam:"style=form,explode=true,name=end"`
	// Allows to select extra fields
	Expand []string `queryParam:"style=form,explode=true,name=expand"`
	// Allows to select only needed fields
	Fields []string `queryParam:"style=form,explode=true,name=fields"`
	// Offset, used together with count
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Filter by persona
	PersonaID *int64 `queryParam:"style=form,explode=true,name=persona_id"`
	// Filter by show
	ShowID *int64 `queryParam:"style=form,explode=true,name=show_id"`
	// The datetime starting from items must be returned. Maximum 1 hour in future.
	//
	Start *time.Time `queryParam:"style=form,explode=true,name=start"`
}

type GetPlaylists200ApplicationXMLLinks struct {
	Self *shared.Link
}

// GetPlaylists200ApplicationXML - The playlists
type GetPlaylists200ApplicationXML struct {
	Links *GetPlaylists200ApplicationXMLLinks
	Meta  *shared.Pagination
	Items []shared.Playlist
}

type GetPlaylists200ApplicationJSONLinks struct {
	Self *shared.Link `json:"self,omitempty"`
}

// GetPlaylists200ApplicationJSON - The playlists
type GetPlaylists200ApplicationJSON struct {
	Links *GetPlaylists200ApplicationJSONLinks `json:"_links,omitempty"`
	Meta  *shared.Pagination                   `json:"_meta,omitempty"`
	Items []shared.Playlist                    `json:"items,omitempty"`
}

type GetPlaylistsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The playlists
	GetPlaylists200ApplicationJSONObject *GetPlaylists200ApplicationJSON
}
