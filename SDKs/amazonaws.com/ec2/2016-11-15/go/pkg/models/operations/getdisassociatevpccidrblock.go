// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDisassociateVpcCidrBlockActionEnum
type GETDisassociateVpcCidrBlockActionEnum string

const (
	GETDisassociateVpcCidrBlockActionEnumDisassociateVpcCidrBlock GETDisassociateVpcCidrBlockActionEnum = "DisassociateVpcCidrBlock"
)

func (e GETDisassociateVpcCidrBlockActionEnum) ToPointer() *GETDisassociateVpcCidrBlockActionEnum {
	return &e
}

func (e *GETDisassociateVpcCidrBlockActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DisassociateVpcCidrBlock":
		*e = GETDisassociateVpcCidrBlockActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisassociateVpcCidrBlockActionEnum: %v", v)
	}
}

// GETDisassociateVpcCidrBlockVersionEnum
type GETDisassociateVpcCidrBlockVersionEnum string

const (
	GETDisassociateVpcCidrBlockVersionEnumTwoThousandAndSixteen1115 GETDisassociateVpcCidrBlockVersionEnum = "2016-11-15"
)

func (e GETDisassociateVpcCidrBlockVersionEnum) ToPointer() *GETDisassociateVpcCidrBlockVersionEnum {
	return &e
}

func (e *GETDisassociateVpcCidrBlockVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDisassociateVpcCidrBlockVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisassociateVpcCidrBlockVersionEnum: %v", v)
	}
}

type GETDisassociateVpcCidrBlockRequest struct {
	Action GETDisassociateVpcCidrBlockActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The association ID for the CIDR block.
	AssociationID     string                                 `queryParam:"style=form,explode=true,name=AssociationId"`
	Version           GETDisassociateVpcCidrBlockVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDisassociateVpcCidrBlockResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
