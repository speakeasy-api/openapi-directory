"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import netlicensing as shared_netlicensing
from typing import Optional


@dataclasses.dataclass
class DeleteTokenSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class DeleteTokenRequest:
    
    token_number: str = dataclasses.field(metadata={'path_param': { 'field_name': 'tokenNumber', 'style': 'simple', 'explode': False }})
    r"""Token number"""  
    

@dataclasses.dataclass
class DeleteTokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    netlicensing: Optional[shared_netlicensing.Netlicensing] = dataclasses.field(default=None)
    r"""Successful request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    