// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectedPlayerSeasonStatsByTeamFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ProjectedPlayerSeasonStatsByTeamFormatEnum string

const (
	ProjectedPlayerSeasonStatsByTeamFormatEnumXML  ProjectedPlayerSeasonStatsByTeamFormatEnum = "XML"
	ProjectedPlayerSeasonStatsByTeamFormatEnumJSON ProjectedPlayerSeasonStatsByTeamFormatEnum = "JSON"
)

func (e ProjectedPlayerSeasonStatsByTeamFormatEnum) ToPointer() *ProjectedPlayerSeasonStatsByTeamFormatEnum {
	return &e
}

func (e *ProjectedPlayerSeasonStatsByTeamFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = ProjectedPlayerSeasonStatsByTeamFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectedPlayerSeasonStatsByTeamFormatEnum: %v", v)
	}
}

type ProjectedPlayerSeasonStatsByTeamRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ProjectedPlayerSeasonStatsByTeamFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2019</code>, etc.
	Season string `pathParam:"style=simple,explode=false,name=season"`
	// The abbreviation of the requested team.
	// <br>Examples: <code>MIA</code>, <code>PHI</code>.
	Team string `pathParam:"style=simple,explode=false,name=team"`
}

type ProjectedPlayerSeasonStatsByTeamResponse struct {
	ContentType             string
	PlayerSeasonProjections []shared.PlayerSeasonProjection
	StatusCode              int
	RawResponse             *http.Response
}
