/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Visibility of a runner group. You can select all organizations or select individual organization.
 */
export enum EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequestBodyVisibilityEnum {
  Selected = "selected",
  All = "all",
}

export class EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequestBody extends SpeakeasyBase {
  /**
   * Whether the runner group can be used by `public` repositories.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allows_public_repositories" })
  allowsPublicRepositories?: boolean;

  /**
   * Name of the runner group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restricted_to_workflows" })
  restrictedToWorkflows?: boolean;

  /**
   * List of runner IDs to add to the runner group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runners" })
  runners?: number[];

  /**
   * List of organization IDs that can access the runner group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selected_organization_ids" })
  selectedOrganizationIds?: number[];

  /**
   * List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selected_workflows" })
  selectedWorkflows?: string[];

  /**
   * Visibility of a runner group. You can select all organizations or select individual organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequestBodyVisibilityEnum;
}

export class EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequestBody;

  /**
   * The slug version of the enterprise name. You can also substitute this value with the enterprise id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=enterprise",
  })
  enterprise: string;
}

export class EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  runnerGroupsEnterprise?: shared.RunnerGroupsEnterprise;
}
