"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2humanagentassistantconfigsuggestionfeatureconfig as shared_googleclouddialogflowv2humanagentassistantconfigsuggestionfeatureconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig:
    r"""Detail human agent assistant config."""
    
    feature_configs: Optional[list[shared_googleclouddialogflowv2humanagentassistantconfigsuggestionfeatureconfig.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('featureConfigs'), 'exclude': lambda f: f is None }})
    r"""Configuration of different suggestion features. One feature can have only one config."""  
    group_suggestion_responses: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupSuggestionResponses'), 'exclude': lambda f: f is None }})
    r"""If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If `group_suggestion_responses` set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse."""  
    