"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class GETAccountingCodeItemWithoutSuccessTypeCategoryEnum(str, Enum):
    r"""The category associated with the accounting code."""
    ASSETS = 'Assets'
    LIABILITIES = 'Liabilities'
    EQUITY = 'Equity'
    REVENUE = 'Revenue'
    EXPENSES = 'Expenses'

class GETAccountingCodeItemWithoutSuccessTypeStatusEnum(str, Enum):
    r"""The accounting code status."""
    ACTIVE = 'Active'
    INACTIVE = 'Inactive'

class GETAccountingCodeItemWithoutSuccessTypeTypeEnum(str, Enum):
    r"""Accounting code type.
    
    Note that `On-Account Receivable` is only available if you enable the Invoice Settlement feature.
    """
    ACCOUNTS_RECEIVABLE = 'AccountsReceivable'
    ON_ACCOUNT_RECEIVABLE = 'On-Account Receivable'
    CASH = 'Cash'
    OTHER_ASSETS = 'OtherAssets'
    CUSTOMER_CASH_ON_ACCOUNT = 'CustomerCashOnAccount'
    DEFERRED_REVENUE = 'DeferredRevenue'
    SALES_TAX_PAYABLE = 'SalesTaxPayable'
    OTHER_LIABILITIES = 'OtherLiabilities'
    SALES_REVENUE = 'SalesRevenue'
    SALES_DISCOUNTS = 'SalesDiscounts'
    OTHER_REVENUE = 'OtherRevenue'
    OTHER_EQUITY = 'OtherEquity'
    BAD_DEBT = 'BadDebt'
    OTHER_EXPENSES = 'OtherExpenses'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETAccountingCodeItemWithoutSuccessType:
    r"""Container for custom fields of an Accounting Code object."""
    
    category: Optional[GETAccountingCodeItemWithoutSuccessTypeCategoryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category'), 'exclude': lambda f: f is None }})
    r"""The category associated with the accounting code."""  
    created_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdBy'), 'exclude': lambda f: f is None }})
    r"""The ID of the user who created the accounting code."""  
    created_on: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdOn'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date and time when the accounting code was created."""  
    gl_account_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('glAccountName'), 'exclude': lambda f: f is None }})
    r"""Name of the account in your general ledger.
    
    Field only available if you have Zuora Finance enabled.
    """  
    gl_account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('glAccountNumber'), 'exclude': lambda f: f is None }})
    r"""Account number in your general ledger.
    
    Field only available if you have Zuora Finance enabled.
    """  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID of the accounting code."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the accounting code."""  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""Any optional notes for the accounting code."""  
    status: Optional[GETAccountingCodeItemWithoutSuccessTypeStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The accounting code status."""  
    type: Optional[GETAccountingCodeItemWithoutSuccessTypeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Accounting code type.
    
    Note that `On-Account Receivable` is only available if you enable the Invoice Settlement feature.
    """  
    updated_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updatedBy'), 'exclude': lambda f: f is None }})
    r"""The ID of the user who last updated the accounting code."""  
    updated_on: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updatedOn'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date and time when the accounting code was last updated."""  
    