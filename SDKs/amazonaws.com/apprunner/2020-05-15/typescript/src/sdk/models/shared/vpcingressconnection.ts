/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IngressVpcConfiguration } from "./ingressvpcconfiguration";
import { VpcIngressConnectionStatusEnum } from "./vpcingressconnectionstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The App Runner resource that specifies an App Runner endpoint for incoming traffic. It establishes a connection between a VPC interface endpoint and a App Runner service, to make your App Runner service accessible from only within an Amazon VPC.
 */
export class VpcIngressConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccountId" })
  accountId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DeletedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deletedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainName" })
  domainName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IngressVpcConfiguration" })
  @Type(() => IngressVpcConfiguration)
  ingressVpcConfiguration?: IngressVpcConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceArn" })
  serviceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: VpcIngressConnectionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcIngressConnectionArn" })
  vpcIngressConnectionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcIngressConnectionName" })
  vpcIngressConnectionName?: string;
}
