// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type OrgInvitationsListPendingSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type OrgInvitationsListPendingPathParams struct {
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
}

type OrgInvitationsListPendingRequest struct {
	PathParams OrgInvitationsListPendingPathParams
	Security   OrgInvitationsListPendingSecurity
}

type OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum string

const (
	OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnumBadRequest          OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnumConflict            OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum = "Conflict"
	OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnumNotAcceptable       OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnumNotFound            OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum = "NotFound"
	OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnumInternalServerError OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnumUnauthorized        OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnumTooManyRequests     OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type OrgInvitationsListPendingDefaultApplicationJSONError struct {
	Code    OrgInvitationsListPendingDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                       `json:"message"`
}

// OrgInvitationsListPendingDefaultApplicationJSON - Error
type OrgInvitationsListPendingDefaultApplicationJSON struct {
	Error OrgInvitationsListPendingDefaultApplicationJSONError `json:"error"`
}

type OrgInvitationsListPending200ApplicationJSON struct {
	// The email address of the invited user
	Email string `json:"email"`
	// The unique ID (UUID) of the invitation
	ID string `json:"id"`
	// The role assigned to the invited user
	Role string `json:"role"`
}

type OrgInvitationsListPendingResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	OrgInvitationsListPending200ApplicationJSONObjects []OrgInvitationsListPending200ApplicationJSON
	// Error
	OrgInvitationsListPendingDefaultApplicationJSONObject *OrgInvitationsListPendingDefaultApplicationJSON
}
