"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import importfile as shared_importfile
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TemplateContentsInterpreterEnum(str, Enum):
    r"""Which interpreter (python or jinja) should be used during expansion."""
    UNKNOWN_INTERPRETER = 'UNKNOWN_INTERPRETER'
    PYTHON = 'PYTHON'
    JINJA = 'JINJA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TemplateContents:
    r"""Files that make up the template contents of a template type."""
    
    imports: Optional[list[shared_importfile.ImportFile]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imports'), 'exclude': lambda f: f is None }})
    r"""Import files referenced by the main template."""  
    interpreter: Optional[TemplateContentsInterpreterEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interpreter'), 'exclude': lambda f: f is None }})
    r"""Which interpreter (python or jinja) should be used during expansion."""  
    main_template: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mainTemplate'), 'exclude': lambda f: f is None }})
    r"""The filename of the mainTemplate"""  
    schema: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schema'), 'exclude': lambda f: f is None }})
    r"""The contents of the template schema."""  
    template: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('template'), 'exclude': lambda f: f is None }})
    r"""The contents of the main template file."""  
    