/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance - Compliance data for an OS policy resource.
 */
public class OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance {
    /**
     * The compliance state of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("complianceState")
    public OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum complianceState;
    public OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance withComplianceState(OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum complianceState) {
        this.complianceState = complianceState;
        return this;
    }
    
    /**
     * A reason for the resource to be in the given compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. The following values are supported when `compliance_state == UNKNOWN` * `execution-errors`: Errors were encountered by the agent while executing the resource and the compliance state couldn't be determined. * `execution-skipped-by-agent`: Resource execution was skipped by the agent because errors were encountered while executing prior resources in the OS policy. * `os-policy-execution-attempt-failed`: The execution of the OS policy containing this resource failed and the compliance state couldn't be determined.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("complianceStateReason")
    public String complianceStateReason;
    public OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance withComplianceStateReason(String complianceStateReason) {
        this.complianceStateReason = complianceStateReason;
        return this;
    }
    
    /**
     * Ordered list of configuration completed by the agent for the OS policy resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configSteps")
    public OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep[] configSteps;
    public OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance withConfigSteps(OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep[] configSteps) {
        this.configSteps = configSteps;
        return this;
    }
    
    /**
     * ExecResource specific output.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("execResourceOutput")
    public OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput execResourceOutput;
    public OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance withExecResourceOutput(OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput execResourceOutput) {
        this.execResourceOutput = execResourceOutput;
        return this;
    }
    
    /**
     * The ID of the OS policy resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osPolicyResourceId")
    public String osPolicyResourceId;
    public OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance withOsPolicyResourceId(String osPolicyResourceId) {
        this.osPolicyResourceId = osPolicyResourceId;
        return this;
    }
    
}
