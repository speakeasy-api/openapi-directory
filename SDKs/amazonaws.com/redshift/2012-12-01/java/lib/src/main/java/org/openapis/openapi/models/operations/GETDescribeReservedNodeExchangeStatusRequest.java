/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDescribeReservedNodeExchangeStatusRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETDescribeReservedNodeExchangeStatusActionEnum action;

    public GETDescribeReservedNodeExchangeStatusRequest withAction(GETDescribeReservedNodeExchangeStatusActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * An optional pagination token provided by a previous &lt;code&gt;DescribeReservedNodeExchangeStatus&lt;/code&gt; request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the &lt;code&gt;MaxRecords&lt;/code&gt; parameter. You can retrieve the next set of response records by providing the returned marker value in the &lt;code&gt;Marker&lt;/code&gt; parameter and retrying the request.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Marker")
    public String marker;

    public GETDescribeReservedNodeExchangeStatusRequest withMarker(String marker) {
        this.marker = marker;
        return this;
    }
    
    /**
     * The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified &lt;code&gt;MaxRecords&lt;/code&gt; value, a value is returned in a &lt;code&gt;Marker&lt;/code&gt; field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxRecords")
    public Long maxRecords;

    public GETDescribeReservedNodeExchangeStatusRequest withMaxRecords(Long maxRecords) {
        this.maxRecords = maxRecords;
        return this;
    }
    
    /**
     * The identifier of the reserved-node exchange request.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ReservedNodeExchangeRequestId")
    public String reservedNodeExchangeRequestId;

    public GETDescribeReservedNodeExchangeStatusRequest withReservedNodeExchangeRequestId(String reservedNodeExchangeRequestId) {
        this.reservedNodeExchangeRequestId = reservedNodeExchangeRequestId;
        return this;
    }
    
    /**
     * The identifier of the source reserved node in a reserved-node exchange request.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ReservedNodeId")
    public String reservedNodeId;

    public GETDescribeReservedNodeExchangeStatusRequest withReservedNodeId(String reservedNodeId) {
        this.reservedNodeId = reservedNodeId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETDescribeReservedNodeExchangeStatusVersionEnum version;

    public GETDescribeReservedNodeExchangeStatusRequest withVersion(GETDescribeReservedNodeExchangeStatusVersionEnum version) {
        this.version = version;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;

    public GETDescribeReservedNodeExchangeStatusRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;

    public GETDescribeReservedNodeExchangeStatusRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;

    public GETDescribeReservedNodeExchangeStatusRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;

    public GETDescribeReservedNodeExchangeStatusRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;

    public GETDescribeReservedNodeExchangeStatusRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;

    public GETDescribeReservedNodeExchangeStatusRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;

    public GETDescribeReservedNodeExchangeStatusRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
    public GETDescribeReservedNodeExchangeStatusRequest(@JsonProperty("Action") GETDescribeReservedNodeExchangeStatusActionEnum action, @JsonProperty("Version") GETDescribeReservedNodeExchangeStatusVersionEnum version) {
        this.action = action;
        this.version = version;
  }
}
