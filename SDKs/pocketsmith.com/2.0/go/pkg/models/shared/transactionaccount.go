// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TransactionAccountTypeEnum - The type of the transaction account.
type TransactionAccountTypeEnum string

const (
	TransactionAccountTypeEnumBank           TransactionAccountTypeEnum = "bank"
	TransactionAccountTypeEnumCredits        TransactionAccountTypeEnum = "credits"
	TransactionAccountTypeEnumCash           TransactionAccountTypeEnum = "cash"
	TransactionAccountTypeEnumStocks         TransactionAccountTypeEnum = "stocks"
	TransactionAccountTypeEnumMortgage       TransactionAccountTypeEnum = "mortgage"
	TransactionAccountTypeEnumLoans          TransactionAccountTypeEnum = "loans"
	TransactionAccountTypeEnumVehicle        TransactionAccountTypeEnum = "vehicle"
	TransactionAccountTypeEnumProperty       TransactionAccountTypeEnum = "property"
	TransactionAccountTypeEnumInsurance      TransactionAccountTypeEnum = "insurance"
	TransactionAccountTypeEnumOtherLiability TransactionAccountTypeEnum = "other_liability"
)

func (e *TransactionAccountTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "bank":
		fallthrough
	case "credits":
		fallthrough
	case "cash":
		fallthrough
	case "stocks":
		fallthrough
	case "mortgage":
		fallthrough
	case "loans":
		fallthrough
	case "vehicle":
		fallthrough
	case "property":
		fallthrough
	case "insurance":
		fallthrough
	case "other_liability":
		*e = TransactionAccountTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransactionAccountTypeEnum: %s", s)
	}
}

// TransactionAccount - Success
type TransactionAccount struct {
	CreatedAt *string `json:"created_at,omitempty"`
	// The currency that the account is in. This is determined by the account that the transaction account belongs to.
	CurrencyCode       *string  `json:"currency_code,omitempty"`
	CurrentBalance     *float64 `json:"current_balance,omitempty"`
	CurrentBalanceDate *string  `json:"current_balance_date,omitempty"`
	// The exchange rate between the transaction account's currency and the user's base currency, when different. If the currencies are the same, null is returned.
	CurrentBalanceExchangeRate *float64 `json:"current_balance_exchange_rate,omitempty"`
	// The current balance of the transaction account in the user's base currency.
	CurrentBalanceInBaseCurrency *float64     `json:"current_balance_in_base_currency,omitempty"`
	ID                           *int64       `json:"id,omitempty"`
	Institution                  *Institution `json:"institution,omitempty"`
	Name                         *string      `json:"name,omitempty"`
	Number                       *string      `json:"number,omitempty"`
	// The current safe balance, if safe balance is activated and available for the transaction account. If safe balance is not available, then null is returned.
	SafeBalance *float64 `json:"safe_balance,omitempty"`
	// The current safe balance in the user's base currency, if safe balance is activated and available for the transaction account. If safe balance is not available, then null is returned.
	SafeBalanceInBaseCurrency *float64 `json:"safe_balance_in_base_currency,omitempty"`
	StartingBalance           *float64 `json:"starting_balance,omitempty"`
	StartingBalanceDate       *string  `json:"starting_balance_date,omitempty"`
	// The type of the transaction account.
	Type      *TransactionAccountTypeEnum `json:"type,omitempty"`
	UpdatedAt *string                     `json:"updated_at,omitempty"`
}
