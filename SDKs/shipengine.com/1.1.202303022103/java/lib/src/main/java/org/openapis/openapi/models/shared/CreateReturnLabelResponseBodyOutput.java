/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CreateReturnLabelResponseBodyOutput - A label represents the physical sticker that you affix to a package to ship it.  ShipEngine makes it easy for you to [create labels](https://www.shipengine.com/docs/labels/create-a-label/) and then download them in PDF, PNG, or ZPL format so you can print them.
 * 
 */
public class CreateReturnLabelResponseBodyOutput {
    /**
     * Additional information some carriers may provide by which to identify a given label in their system. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alternative_identifiers")
    public AlternativeIdentifier[] alternativeIdentifiers;
    public CreateReturnLabelResponseBodyOutput withAlternativeIdentifiers(AlternativeIdentifier[] alternativeIdentifiers) {
        this.alternativeIdentifiers = alternativeIdentifiers;
        return this;
    }
    
    /**
     * If this label was created as part of a [batch](https://www.shipengine.com/docs/labels/bulk/), then this is the unique ID of that batch.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("batch_id")
    public String batchId;
    public CreateReturnLabelResponseBodyOutput withBatchId(String batchId) {
        this.batchId = batchId;
        return this;
    }
    
    /**
     * The [shipping carrier](https://www.shipengine.com/docs/carriers/setup/) who will ship the package, such as `fedex`, `dhl_express`, `stamps_com`, etc.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_code")
    public String carrierCode;
    public CreateReturnLabelResponseBodyOutput withCarrierCode(String carrierCode) {
        this.carrierCode = carrierCode;
        return this;
    }
    
    /**
     * The unique ID of the [carrier account](https://www.shipengine.com/docs/carriers/setup/) that was used to create this label
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_id")
    public String carrierId;
    public CreateReturnLabelResponseBodyOutput withCarrierId(String carrierId) {
        this.carrierId = carrierId;
        return this;
    }
    
    /**
     * The label charge event.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("charge_event")
    public LabelChargeEventEnum chargeEvent;
    public CreateReturnLabelResponseBodyOutput withChargeEvent(LabelChargeEventEnum chargeEvent) {
        this.chargeEvent = chargeEvent;
        return this;
    }
    
    /**
     * The date and time that the label was created in ShipEngine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public CreateReturnLabelResponseBodyOutput withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The display format that the label should be shown in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_scheme")
    public CreateReturnLabelResponseBodyDisplaySchemeEnum displayScheme;
    public CreateReturnLabelResponseBodyOutput withDisplayScheme(CreateReturnLabelResponseBodyDisplaySchemeEnum displayScheme) {
        this.displayScheme = displayScheme;
        return this;
    }
    
    /**
     * The link to download the customs form (a.k.a. commercial invoice) for this shipment, if any.  Forms are in PDF format. This field is null if the shipment does not require a customs form, or if the carrier does not support it.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("form_download")
    public CreateReturnLabelResponseBodyOptionalLink formDownload;
    public CreateReturnLabelResponseBodyOutput withFormDownload(CreateReturnLabelResponseBodyOptionalLink formDownload) {
        this.formDownload = formDownload;
        return this;
    }
    
    /**
     * The link to submit an insurance claim for the shipment.  This field is null if the shipment is not insured or if the insurance provider does not support online claim submission.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("insurance_claim")
    public CreateReturnLabelResponseBodyOptionalLink insuranceClaim;
    public CreateReturnLabelResponseBodyOutput withInsuranceClaim(CreateReturnLabelResponseBodyOptionalLink insuranceClaim) {
        this.insuranceClaim = insuranceClaim;
        return this;
    }
    
    /**
     * The insurance cost for this package.  Add this to the `shipment_cost` field to get the total cost.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("insurance_cost")
    public CreateReturnLabelResponseBodyMonetaryValue insuranceCost;
    public CreateReturnLabelResponseBodyOutput withInsuranceCost(CreateReturnLabelResponseBodyMonetaryValue insuranceCost) {
        this.insuranceCost = insuranceCost;
        return this;
    }
    
    /**
     * Indicates whether this is an international shipment.  That is, the originating country and destination country are different.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_international")
    public Boolean isInternational;
    public CreateReturnLabelResponseBodyOutput withIsInternational(Boolean isInternational) {
        this.isInternational = isInternational;
        return this;
    }
    
    /**
     * Indicates whether this is a return label.  You may also want to set the `rma_number` so you know what is being returned.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_return_label")
    public Boolean isReturnLabel;
    public CreateReturnLabelResponseBodyOutput withIsReturnLabel(Boolean isReturnLabel) {
        this.isReturnLabel = isReturnLabel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_download")
    public CreateReturnLabelResponseBodyLabelDownload labelDownload;
    public CreateReturnLabelResponseBodyOutput withLabelDownload(CreateReturnLabelResponseBodyLabelDownload labelDownload) {
        this.labelDownload = labelDownload;
        return this;
    }
    
    /**
     * The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_format")
    public CreateReturnLabelResponseBodyLabelFormatEnum labelFormat;
    public CreateReturnLabelResponseBodyOutput withLabelFormat(CreateReturnLabelResponseBodyLabelFormatEnum labelFormat) {
        this.labelFormat = labelFormat;
        return this;
    }
    
    /**
     * A string that uniquely identifies the label. This ID is generated by ShipEngine when the label is created.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_id")
    public String labelId;
    public CreateReturnLabelResponseBodyOutput withLabelId(String labelId) {
        this.labelId = labelId;
        return this;
    }
    
    /**
     * The label image resource that was used to create a custom label image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_image_id")
    public String labelImageId;
    public CreateReturnLabelResponseBodyOutput withLabelImageId(String labelImageId) {
        this.labelImageId = labelImageId;
        return this;
    }
    
    /**
     * The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5" x 11") is only supported for `pdf` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_layout")
    public CreateReturnLabelResponseBodyLabelLayoutEnum labelLayout;
    public CreateReturnLabelResponseBodyOutput withLabelLayout(CreateReturnLabelResponseBodyLabelLayoutEnum labelLayout) {
        this.labelLayout = labelLayout;
        return this;
    }
    
    /**
     * The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("package_code")
    public String packageCode;
    public CreateReturnLabelResponseBodyOutput withPackageCode(String packageCode) {
        this.packageCode = packageCode;
        return this;
    }
    
    /**
     * The label's package(s).
     * 
     * &gt; **Note:** Some carriers only allow one package per label.  If you attempt to create a multi-package label for a carrier that doesn't allow it, an error will be returned.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packages")
    public Package[] packages;
    public CreateReturnLabelResponseBodyOutput withPackages(Package[] packages) {
        this.packages = packages;
        return this;
    }
    
    /**
     * An optional Return Merchandise Authorization number.  This field is useful for return labels.  You can set it to any string value.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rma_number")
    public String rmaNumber;
    public CreateReturnLabelResponseBodyOutput withRmaNumber(String rmaNumber) {
        this.rmaNumber = rmaNumber;
        return this;
    }
    
    /**
     * The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service_code")
    public String serviceCode;
    public CreateReturnLabelResponseBodyOutput withServiceCode(String serviceCode) {
        this.serviceCode = serviceCode;
        return this;
    }
    
    /**
     * The date that the package was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ship_date")
    public OffsetDateTime shipDate;
    public CreateReturnLabelResponseBodyOutput withShipDate(OffsetDateTime shipDate) {
        this.shipDate = shipDate;
        return this;
    }
    
    /**
     * The cost of shipping, delivery confirmation, and other carrier charges.  This amount **does not** include insurance costs.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipment_cost")
    public CreateReturnLabelResponseBodyMonetaryValue shipmentCost;
    public CreateReturnLabelResponseBodyOutput withShipmentCost(CreateReturnLabelResponseBodyMonetaryValue shipmentCost) {
        this.shipmentCost = shipmentCost;
        return this;
    }
    
    /**
     * The shipment that this label is for.  ShipEngine can create a shipment for you automatically when you [create a label](https://www.shipengine.com/docs/labels/create-a-label/), or you can [create your own shipment](https://www.shipengine.com/docs/shipping/create-a-shipment/) and then [use it to print a label](https://www.shipengine.com/docs/labels/create-from-shipment/)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipment_id")
    public String shipmentId;
    public CreateReturnLabelResponseBodyOutput withShipmentId(String shipmentId) {
        this.shipmentId = shipmentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public CreateReturnLabelResponseBodyLabelStatusEnum status;
    public CreateReturnLabelResponseBodyOutput withStatus(CreateReturnLabelResponseBodyLabelStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Indicates whether the shipment is trackable, in which case the `tracking_status` field will reflect the current status and each package will have a `tracking_number`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackable")
    public Boolean trackable;
    public CreateReturnLabelResponseBodyOutput withTrackable(Boolean trackable) {
        this.trackable = trackable;
        return this;
    }
    
    /**
     * The tracking number for the package. Tracking number formats vary across carriers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracking_number")
    public String trackingNumber;
    public CreateReturnLabelResponseBodyOutput withTrackingNumber(String trackingNumber) {
        this.trackingNumber = trackingNumber;
        return this;
    }
    
    /**
     * The current status of the package, such as `in_transit` or `delivered`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracking_status")
    public CreateReturnLabelResponseBodyTrackingStatusEnum trackingStatus;
    public CreateReturnLabelResponseBodyOutput withTrackingStatus(CreateReturnLabelResponseBodyTrackingStatusEnum trackingStatus) {
        this.trackingStatus = trackingStatus;
        return this;
    }
    
    /**
     * Indicates whether the label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voided")
    public Boolean voided;
    public CreateReturnLabelResponseBodyOutput withVoided(Boolean voided) {
        this.voided = voided;
        return this;
    }
    
    /**
     * The date and time that the label was [voided](https://www.shipengine.com/docs/labels/voiding/), or `null` if the label has not been voided
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("voided_at")
    public OffsetDateTime voidedAt;
    public CreateReturnLabelResponseBodyOutput withVoidedAt(OffsetDateTime voidedAt) {
        this.voidedAt = voidedAt;
        return this;
    }
    
}
