<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TimelineCommitCommentedEvent - Timeline Commit Commented Event
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TimelineCommitCommentedEvent
{
    /**
     * $comments
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CommitComment> $comments
     */
	#[\JMS\Serializer\Annotation\SerializedName('comments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CommitComment>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $comments = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('commit_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commitId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('event')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $event = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nodeId = null;
    
	public function __construct()
	{
		$this->comments = null;
		$this->commitId = null;
		$this->event = null;
		$this->nodeId = null;
	}
}
