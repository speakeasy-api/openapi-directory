"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListPastMeetingFilesSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListPastMeetingFilesRequest:
    
    meeting_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'meetingId', 'style': 'simple', 'explode': False }})
    r"""The meeting ID in **long** format. The data type of this field is \\"long\\"(represented as int64 in JSON).
    
    While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
    """  
    

@dataclasses.dataclass
class ListPastMeetingFiles200ApplicationXMLInMeetingFiles:
    
    download_url: Optional[str] = dataclasses.field(default=None)
    r"""URL to download the file."""  
    file_name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the file."""  
    file_size: Optional[int] = dataclasses.field(default=None)
    r"""Size of the file in bytes."""  
    

@dataclasses.dataclass
class ListPastMeetingFiles200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Files retrieved successfully.
    """
    
    in_meeting_files: Optional[list[ListPastMeetingFiles200ApplicationXMLInMeetingFiles]] = dataclasses.field(default=None)  
    total_records: Optional[int] = dataclasses.field(default=None)
    r"""The total number of files found."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPastMeetingFiles200ApplicationJSONInMeetingFiles:
    
    download_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download_url'), 'exclude': lambda f: f is None }})
    r"""URL to download the file."""  
    file_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_name'), 'exclude': lambda f: f is None }})
    r"""Name of the file."""  
    file_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_size'), 'exclude': lambda f: f is None }})
    r"""Size of the file in bytes."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPastMeetingFiles200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Files retrieved successfully.
    """
    
    in_meeting_files: Optional[list[ListPastMeetingFiles200ApplicationJSONInMeetingFiles]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('in_meeting_files'), 'exclude': lambda f: f is None }})  
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""The total number of files found."""  
    

@dataclasses.dataclass
class ListPastMeetingFilesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_past_meeting_files_200_application_json_object: Optional[ListPastMeetingFiles200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK**<br>
    Files retrieved successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    