/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * DebitMemoFromChargeType - Container for custom fields of a Debit Memo object.
 * 
 */
public class DebitMemoFromChargeType {
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public DebitMemoFromChargeType withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the debit memo's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public DebitMemoFromChargeType withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Date when the debit memo was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public DebitMemoFromChargeType withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * The ID of the account associated with the debit memo.
     * 
     * **Note**: When creating debit memos from product rate plan charges, you must specify `accountNumber`, `accountId`, or both in the request body. If both fields are specified, they must correspond to the same account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public DebitMemoFromChargeType withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The Number of the account associated with the debit memo.
     * 
     * **Note**: When creating debit memos from product rate plan charges, you must specify `accountNumber`, `accountId`, or both in the request body. If both fields are specified, they must correspond to the same account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public DebitMemoFromChargeType withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * Whether debit memos are automatically picked up for processing in the corresponding payment run. 
     * 
     * By default, debit memos are automatically picked up for processing in the corresponding payment run.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoPay")
    public Boolean autoPay;
    public DebitMemoFromChargeType withAutoPay(Boolean autoPay) {
        this.autoPay = autoPay;
        return this;
    }
    
    /**
     * Whether to automatically post the debit memo after it is created. 
     * 
     * Setting this field to `true`, you do not need to separately call the [Post a debit memo](https://www.zuora.com/developer/api-reference/#operation/PUT_PostDebitMemo) operation to post the debit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoPost")
    public Boolean autoPost;
    public DebitMemoFromChargeType withAutoPost(Boolean autoPost) {
        this.autoPost = autoPost;
        return this;
    }
    
    /**
     * Container for product rate plan charges. The maximum number of items is 1,000.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("charges")
    public DebitMemoFromChargeDetailType[] charges;
    public DebitMemoFromChargeType withCharges(DebitMemoFromChargeDetailType[] charges) {
        this.charges = charges;
        return this;
    }
    
    /**
     * Comments about the debit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public DebitMemoFromChargeType withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The date by which the payment for the debit memo is due, in `yyyy-mm-dd` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("dueDate")
    public LocalDate dueDate;
    public DebitMemoFromChargeType withDueDate(LocalDate dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * The date when the debit memo takes effect.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("effectiveDate")
    public LocalDate effectiveDate;
    public DebitMemoFromChargeType withEffectiveDate(LocalDate effectiveDate) {
        this.effectiveDate = effectiveDate;
        return this;
    }
    
    /**
     * A code identifying the reason for the transaction. The value must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reasonCode")
    public String reasonCode;
    public DebitMemoFromChargeType withReasonCode(String reasonCode) {
        this.reasonCode = reasonCode;
        return this;
    }
    
}
