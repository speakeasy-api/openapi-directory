/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LoyaltyEventAccumulatePoints } from "./loyaltyeventaccumulatepoints";
import { Expose, Type } from "class-transformer";

/**
 * A request to accumulate points for a purchase.
 */
export class AccumulateLoyaltyPointsRequest extends SpeakeasyBase {
  /**
   * Provides metadata when the event `type` is `ACCUMULATE_POINTS`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accumulate_points" })
  @Type(() => LoyaltyEventAccumulatePoints)
  accumulatePoints: LoyaltyEventAccumulatePoints;

  /**
   * A unique string that identifies the `AccumulateLoyaltyPoints` request.
   *
   * @remarks
   * Keys can be any valid string but must be unique for every request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idempotency_key" })
  idempotencyKey: string;

  /**
   * The [location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) where the purchase was made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId: string;
}
