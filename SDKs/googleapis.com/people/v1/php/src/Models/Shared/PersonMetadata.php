<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PersonMetadata - The metadata about a person.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PersonMetadata
{
    /**
     * Output only. True if the person resource has been deleted. Populated only for `people.connections.list` and `otherContacts.list` sync requests.
     * 
     * @var ?bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleted = null;
    
    /**
     * Output only. Resource names of people linked to this resource.
     * 
     * @var ?array<string> $linkedPeopleResourceNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('linkedPeopleResourceNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $linkedPeopleResourceNames = null;
    
    /**
     * Output only. **DEPRECATED** (Please use `person.metadata.sources.profileMetadata.objectType` instead) The type of the person object.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PersonMetadataObjectTypeEnum $objectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PersonMetadataObjectTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonMetadataObjectTypeEnum $objectType = null;
    
    /**
     * Output only. Any former resource names this person has had. Populated only for `people.connections.list` requests that include a sync token. The resource name may change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or profile URL.
     * 
     * @var ?array<string> $previousResourceNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('previousResourceNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $previousResourceNames = null;
    
    /**
     * The sources of data for the person.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Source> $sources
     */
	#[\JMS\Serializer\Annotation\SerializedName('sources')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Source>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sources = null;
    
	public function __construct()
	{
		$this->deleted = null;
		$this->linkedPeopleResourceNames = null;
		$this->objectType = null;
		$this->previousResourceNames = null;
		$this->sources = null;
	}
}
