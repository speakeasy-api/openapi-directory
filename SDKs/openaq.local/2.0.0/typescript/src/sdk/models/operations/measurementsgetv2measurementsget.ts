/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * An enumeration.
 */
export enum MeasurementsGetV2MeasurementsGetOrderByMeasOrderEnum {
  City = "city",
  Country = "country",
  Location = "location",
  Datetime = "datetime",
}

/**
 * An enumeration.
 */
export enum MeasurementsGetV2MeasurementsGetSortSortEnum {
  Asc = "asc",
  Desc = "desc",
}

export class MeasurementsGetV2MeasurementsGetRequest extends SpeakeasyBase {
  /**
   *
   * @remarks
   *         Limit results by a certain city or cities.
   *         (ex. ?city=Chicago or ?city=Chicago&city=Boston)
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=city" })
  city?: string[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=coordinates",
  })
  coordinates?: string;

  /**
   *
   * @remarks
   *         Limit results by a certain country using two letter country code.
   *         (ex. ?country=US or ?country=US&country=MX)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country",
  })
  country?: string[];

  /**
   *
   * @remarks
   *         Limit results by a certain country using two letter country code.
   *         (ex. /US)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country_id",
  })
  countryId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_from",
  })
  dateFrom?: any;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_to",
  })
  dateTo?: any;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=entity",
  })
  entity?: shared.EntityTypesEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=format",
  })
  format?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=has_geo",
  })
  hasGeo?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_fields",
  })
  includeFields?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=isAnalysis",
  })
  isAnalysis?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=isMobile",
  })
  isMobile?: boolean;

  /**
   * Change the number of results returned.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=location",
  })
  location?: any[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=location_id",
  })
  locationId?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_by",
  })
  orderBy?: MeasurementsGetV2MeasurementsGetOrderByMeasOrderEnum;

  /**
   * Paginate through results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameter",
  })
  parameter?: any[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameter_id",
  })
  parameterId?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=project",
  })
  project?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=radius",
  })
  radius?: number;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sensorType",
  })
  sensorType?: shared.SensorTypesEnum;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: MeasurementsGetV2MeasurementsGetSortSortEnum;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=unit" })
  unit?: string[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=value_from",
  })
  valueFrom?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=value_to",
  })
  valueTo?: number;
}

export class MeasurementsGetV2MeasurementsGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Validation Error
   */
  @SpeakeasyMetadata()
  httpValidationError?: shared.HTTPValidationError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful Response
   */
  @SpeakeasyMetadata()
  measurementsGetV2MeasurementsGet200ApplicationJSONAny?: any;
}
