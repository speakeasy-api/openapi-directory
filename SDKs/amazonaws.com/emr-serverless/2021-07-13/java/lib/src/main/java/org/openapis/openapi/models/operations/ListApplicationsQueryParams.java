/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListApplicationsQueryParams {
    /**
     * The maximum number of applications that can be listed.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;
    public ListApplicationsQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The token for the next set of application results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=nextToken")
    public String nextToken;
    public ListApplicationsQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * An optional filter for application states. Note that if this filter contains multiple states, the resulting list will be grouped by the state.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=states")
    public org.openapis.openapi.models.shared.ApplicationStateEnum[] states;
    public ListApplicationsQueryParams withStates(org.openapis.openapi.models.shared.ApplicationStateEnum[] states) {
        this.states = states;
        return this;
    }
    
}
