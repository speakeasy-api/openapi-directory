/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DeleteUsersRequest {
    /**
     * Conversation channels delete mode.
     * Conversation channel is any channel which only has two members one of which is the user being deleted.
     * 
     * * null or empty string - doesn't delete any conversation channels
     * * soft - marks all conversation channels as deleted (same effect as Delete Channels with 'hard' option disabled)
     * * hard - deletes channel and all its data completely including messages (same effect as Delete Channels with 'hard' option enabled)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversations")
    public DeleteUsersRequestDeleteConversationsEnum conversations;
    public DeleteUsersRequest withConversations(DeleteUsersRequestDeleteConversationsEnum conversations) {
        this.conversations = conversations;
        return this;
    }
    
    /**
     * Message delete mode.
     * 
     * * null or empty string - doesn't delete user messages
     * * soft - marks all user messages as deleted without removing any related message data
     * * pruning - marks all user messages as deleted, nullifies message information and removes some message data such as reactions and flags
     * * hard - deletes messages completely with all related information
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messages")
    public DeleteUsersRequestDeleteMessagesEnum messages;
    public DeleteUsersRequest withMessages(DeleteUsersRequestDeleteMessagesEnum messages) {
        this.messages = messages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_channel_owner_id")
    public String newChannelOwnerId;
    public DeleteUsersRequest withNewChannelOwnerId(String newChannelOwnerId) {
        this.newChannelOwnerId = newChannelOwnerId;
        return this;
    }
    
    /**
     * User delete mode.
     * 
     * * soft - marks user as deleted and retains all user data
     * * pruning - marks user as deleted and nullifies user information
     * * hard - deletes user completely. Requires 'hard' option for messages and conversations as well
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public DeleteUsersRequestDeleteUserEnum user;
    public DeleteUsersRequest withUser(DeleteUsersRequestDeleteUserEnum user) {
        this.user = user;
        return this;
    }
    
    /**
     * IDs of users to delete
     */
    @JsonProperty("user_ids")
    public String[] userIds;
    public DeleteUsersRequest withUserIds(String[] userIds) {
        this.userIds = userIds;
        return this;
    }
    
}
