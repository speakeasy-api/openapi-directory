"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import attributevalue as shared_attributevalue
from ..shared import consumedcapacity as shared_consumedcapacity
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetItemOutput:
    r"""Represents the output of a <code>GetItem</code> operation."""
    
    consumed_capacity: Optional[shared_consumedcapacity.ConsumedCapacity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConsumedCapacity'), 'exclude': lambda f: f is None }})  
    item: Optional[dict[str, shared_attributevalue.AttributeValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Item'), 'exclude': lambda f: f is None }})  
    