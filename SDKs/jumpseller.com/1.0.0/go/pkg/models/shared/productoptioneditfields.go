// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProductOptionEditFieldsOptionTypeEnum - Type of the product option
type ProductOptionEditFieldsOptionTypeEnum string

const (
	ProductOptionEditFieldsOptionTypeEnumOption ProductOptionEditFieldsOptionTypeEnum = "option"
	ProductOptionEditFieldsOptionTypeEnumInput  ProductOptionEditFieldsOptionTypeEnum = "input"
	ProductOptionEditFieldsOptionTypeEnumText   ProductOptionEditFieldsOptionTypeEnum = "text"
	ProductOptionEditFieldsOptionTypeEnumFile   ProductOptionEditFieldsOptionTypeEnum = "file"
)

func (e ProductOptionEditFieldsOptionTypeEnum) ToPointer() *ProductOptionEditFieldsOptionTypeEnum {
	return &e
}

func (e *ProductOptionEditFieldsOptionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "option":
		fallthrough
	case "input":
		fallthrough
	case "text":
		fallthrough
	case "file":
		*e = ProductOptionEditFieldsOptionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductOptionEditFieldsOptionTypeEnum: %v", v)
	}
}

type ProductOptionEditFields struct {
	// Name of the product option
	Name *string `json:"name,omitempty"`
	// Type of the product option
	OptionType *ProductOptionEditFieldsOptionTypeEnum `json:"option_type,omitempty"`
	// Position of the product option
	Position *int `json:"position,omitempty"`
}
