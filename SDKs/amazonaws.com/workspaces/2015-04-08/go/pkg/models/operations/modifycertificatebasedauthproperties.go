// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ModifyCertificateBasedAuthPropertiesXAmzTargetEnum
type ModifyCertificateBasedAuthPropertiesXAmzTargetEnum string

const (
	ModifyCertificateBasedAuthPropertiesXAmzTargetEnumWorkspacesServiceModifyCertificateBasedAuthProperties ModifyCertificateBasedAuthPropertiesXAmzTargetEnum = "WorkspacesService.ModifyCertificateBasedAuthProperties"
)

func (e *ModifyCertificateBasedAuthPropertiesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkspacesService.ModifyCertificateBasedAuthProperties":
		*e = ModifyCertificateBasedAuthPropertiesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyCertificateBasedAuthPropertiesXAmzTargetEnum: %s", s)
	}
}

type ModifyCertificateBasedAuthPropertiesHeaders struct {
	XAmzAlgorithm     *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ModifyCertificateBasedAuthPropertiesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ModifyCertificateBasedAuthPropertiesRequest struct {
	Headers ModifyCertificateBasedAuthPropertiesHeaders
	Request shared.ModifyCertificateBasedAuthPropertiesRequest `request:"mediaType=application/json"`
}

type ModifyCertificateBasedAuthPropertiesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// Success
	ModifyCertificateBasedAuthPropertiesResult map[string]interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
