/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateSinglePaymentIntentSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

export class CreateSinglePaymentIntentRequestBodyInvestmentInstructions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "investment_product_id" })
  investmentProductId: string;

  /**
   * Require if `value` is not available. Must be in correct pattern (eg: 25, 332.34, 1050.0025). For `funds`, upto 4 decimal places. For `equities`, `bonds` and `etf`, 0 decimal places allowed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: string;

  /**
   * Require if `quantity` is not available. Must be in correct pattern (upto 2 decimal places, eg: 25, 332.3, 1050.25).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export enum CreateSinglePaymentIntentRequestBodyPaymentTypeEnum {
  Card = "card",
  ElectronicFundTransfer = "electronic_fund_transfer",
}

export enum CreateSinglePaymentIntentRequestBodyPurposeEnum {
  Cash = "cash",
  Invest = "invest",
}

export enum CreateSinglePaymentIntentRequestBodyServiceProviderEnum {
  Stripe = "stripe",
  Truelayer = "truelayer",
  None = "none",
}

/**
 * Parameters based on prerequisites of the selected provider
 */
export class CreateSinglePaymentIntentRequestBodyServiceProviderParams extends SpeakeasyBase {
  /**
   * Bank account ID of Investor (mandatory only if service_provider="truelayer")
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bank_account_id" })
  bankAccountId?: string;
}

export class CreateSinglePaymentIntentRequestBody extends SpeakeasyBase {
  /**
   * Amount as a numeral string with two decimal points. (ex: 1500.00). Minimum allowed amount is 1.00
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: string;

  /**
   * must be a currency configured for the Pot
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * mandatory only if purpose:"invest" and pot does not have a portfolio template attached (e.g. An execution-only or direct-to-consumer wealth manager).
   */
  @SpeakeasyMetadata({
    elemType: CreateSinglePaymentIntentRequestBodyInvestmentInstructions,
  })
  @Expose({ name: "investment_instructions" })
  @Type(() => CreateSinglePaymentIntentRequestBodyInvestmentInstructions)
  investmentInstructions?: CreateSinglePaymentIntentRequestBodyInvestmentInstructions[];

  @SpeakeasyMetadata()
  @Expose({ name: "payment_type" })
  paymentType: CreateSinglePaymentIntentRequestBodyPaymentTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "purpose" })
  purpose: CreateSinglePaymentIntentRequestBodyPurposeEnum;

  /**
   * Unique request id to ensure idempotency. (ex: UUID)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "service_provider" })
  serviceProvider: CreateSinglePaymentIntentRequestBodyServiceProviderEnum;

  /**
   * Parameters based on prerequisites of the selected provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_provider_params" })
  @Type(() => CreateSinglePaymentIntentRequestBodyServiceProviderParams)
  serviceProviderParams?: CreateSinglePaymentIntentRequestBodyServiceProviderParams;
}

export class CreateSinglePaymentIntentRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateSinglePaymentIntentRequestBody;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class CreateSinglePaymentIntent500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class CreateSinglePaymentIntent429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Current status of the original request
 */
export enum CreateSinglePaymentIntent409ApplicationJSONStatusEnum {
  Processing = "PROCESSING",
  Complete = "COMPLETE",
}

/**
 * Duplicate request
 */
export class CreateSinglePaymentIntent409ApplicationJSON extends SpeakeasyBase {
  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * Stringified original response body if status is `COMPLETE`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: Record<string, any>;

  /**
   * Current status of the original request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CreateSinglePaymentIntent409ApplicationJSONStatusEnum;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class CreateSinglePaymentIntent403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class CreateSinglePaymentIntent401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class CreateSinglePaymentIntent400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class CreateSinglePaymentIntent201ApplicationJSONInvestmentInstructions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "investment_product_id" })
  investmentProductId: string;

  /**
   * Require if `value` is not available. Must be in correct pattern (eg: 25, 332.34, 1050.0025). For `funds`, upto 4 decimal places. For `equities`, `bonds` and `etf`, 0 decimal places allowed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: string;

  /**
   * Require if `quantity` is not available. Must be in correct pattern (upto 2 decimal places, eg: 25, 332.3, 1050.25).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export enum CreateSinglePaymentIntent201ApplicationJSONPaymentTypeEnum {
  Card = "card",
  ElectronicFundTransfer = "electronic_fund_transfer",
}

export enum CreateSinglePaymentIntent201ApplicationJSONPurposeEnum {
  Cash = "cash",
  Invest = "invest",
}

export enum CreateSinglePaymentIntent201ApplicationJSONServiceProviderEnum {
  Stripe = "stripe",
  Truelayer = "truelayer",
  None = "none",
}

/**
 * Parameters based on prerequisites of the selected provider
 */
export class CreateSinglePaymentIntent201ApplicationJSONServiceProviderParams extends SpeakeasyBase {
  /**
   * Bank account ID of Investor (include if service_provider="truelayer")
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bank_account_id" })
  bankAccountId?: string;

  /**
   * Client secret (include if service_provider="stripe")
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_secret" })
  clientSecret?: string;

  /**
   * URL for Hosted Payment Page (include if service_provider="truelayer")
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hpp_url" })
  hppUrl?: string;

  /**
   * Payment intent ID (include if service_provider="truelayer" or service_provider="stripe")
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_intent_id" })
  paymentIntentId?: string;

  /**
   * Publishable key (include if service_provider="stripe")
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publishable_key" })
  publishableKey?: string;
}

export enum CreateSinglePaymentIntent201ApplicationJSONStatusEnum {
  PendingConfirmation = "pending_confirmation",
  Processing = "processing",
  Succeeded = "succeeded",
}

/**
 * Resource created
 */
export class CreateSinglePaymentIntent201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: string;

  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  /**
   * mandatory only if purpose:"invest" and pot does not have a portfolio template attached (e.g. An execution-only or direct-to-consumer wealth manager)
   */
  @SpeakeasyMetadata({
    elemType: CreateSinglePaymentIntent201ApplicationJSONInvestmentInstructions,
  })
  @Expose({ name: "investment_instructions" })
  @Type(() => CreateSinglePaymentIntent201ApplicationJSONInvestmentInstructions)
  investmentInstructions?: CreateSinglePaymentIntent201ApplicationJSONInvestmentInstructions[];

  @SpeakeasyMetadata()
  @Expose({ name: "payment_type" })
  paymentType: CreateSinglePaymentIntent201ApplicationJSONPaymentTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "purpose" })
  purpose: CreateSinglePaymentIntent201ApplicationJSONPurposeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "service_provider" })
  serviceProvider: CreateSinglePaymentIntent201ApplicationJSONServiceProviderEnum;

  /**
   * Parameters based on prerequisites of the selected provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_provider_params" })
  @Type(() => CreateSinglePaymentIntent201ApplicationJSONServiceProviderParams)
  serviceProviderParams?: CreateSinglePaymentIntent201ApplicationJSONServiceProviderParams;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CreateSinglePaymentIntent201ApplicationJSONStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId: string;
}

export class CreateSinglePaymentIntentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Resource created
   */
  @SpeakeasyMetadata()
  createSinglePaymentIntent201ApplicationJSONObject?: CreateSinglePaymentIntent201ApplicationJSON;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  createSinglePaymentIntent400ApplicationJSONObject?: CreateSinglePaymentIntent400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  createSinglePaymentIntent401ApplicationJSONObject?: CreateSinglePaymentIntent401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  createSinglePaymentIntent403ApplicationJSONObject?: CreateSinglePaymentIntent403ApplicationJSON;

  /**
   * Duplicate request
   */
  @SpeakeasyMetadata()
  createSinglePaymentIntent409ApplicationJSONObject?: CreateSinglePaymentIntent409ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  createSinglePaymentIntent429ApplicationJSONObject?: CreateSinglePaymentIntent429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  createSinglePaymentIntent500ApplicationJSONObject?: CreateSinglePaymentIntent500ApplicationJSON;
}
