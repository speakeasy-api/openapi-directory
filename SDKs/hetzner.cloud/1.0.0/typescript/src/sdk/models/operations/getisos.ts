/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetIsosRequest extends SpeakeasyBase {
  /**
   * Can be used to filter ISOs by their name. The response will only contain the ISO matching the specified name.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;
}

/**
 * Type of the ISO
 */
export enum GetIsos200ApplicationJSONIsosTypeEnum {
  Public = "public",
  Private = "private",
}

export class GetIsos200ApplicationJSONIsos extends SpeakeasyBase {
  /**
   * ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deprecated" })
  deprecated: string;

  /**
   * Description of the ISO
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Unique identifier of the ISO. Only set for public ISOs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Type of the ISO
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetIsos200ApplicationJSONIsosTypeEnum;
}

export class GetIsos200ApplicationJSONMetaPagination extends SpeakeasyBase {
  /**
   * ID of the last page available. Can be null if the current page is the last one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_page" })
  lastPage: number;

  /**
   * ID of the next page. Can be null if the current page is the last one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page" })
  nextPage: number;

  /**
   * Current page number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page: number;

  /**
   * Maximum number of items shown per page in the response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "per_page" })
  perPage: number;

  /**
   * ID of the previous page. Can be null if the current page is the first one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous_page" })
  previousPage: number;

  /**
   * The total number of entries that exist in the database for this query. Nullable if unknown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_entries" })
  totalEntries: number;
}

export class GetIsos200ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => GetIsos200ApplicationJSONMetaPagination)
  pagination: GetIsos200ApplicationJSONMetaPagination;
}

/**
 * The `isos` key in the reply contains an array of iso objects with this structure
 */
export class GetIsos200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetIsos200ApplicationJSONIsos })
  @Expose({ name: "isos" })
  @Type(() => GetIsos200ApplicationJSONIsos)
  isos: GetIsos200ApplicationJSONIsos[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => GetIsos200ApplicationJSONMeta)
  meta?: GetIsos200ApplicationJSONMeta;
}

export class GetIsosResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The `isos` key in the reply contains an array of iso objects with this structure
   */
  @SpeakeasyMetadata()
  getIsos200ApplicationJSONObject?: GetIsos200ApplicationJSON;
}
