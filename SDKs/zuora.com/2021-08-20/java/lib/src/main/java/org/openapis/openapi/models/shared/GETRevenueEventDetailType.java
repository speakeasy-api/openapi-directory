/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GETRevenueEventDetailType - Container for custom fields of a Revenue Event object.
 * 
 */
public class GETRevenueEventDetailType {
    /**
     * An account ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public GETRevenueEventDetailType withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The date when the record was created in YYYY-MM-DD HH:MM:SS format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdOn")
    public OffsetDateTime createdOn;
    public GETRevenueEventDetailType withCreatedOn(OffsetDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }
    
    /**
     * The type of currency used.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public GETRevenueEventDetailType withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings &gt; Finance &gt; Configure Revenue Event Types** in the Zuora UI.
     * 
     * Note that `Credit Memo Posted` and `Debit Memo Posted` are only available if you enable the Invoice Settlement feature.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventType")
    public GETRevenueEventDetailTypeEventTypeEnum eventType;
    public GETRevenueEventDetailType withEventType(GETRevenueEventDetailTypeEventTypeEnum eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * Additional information about this record.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public GETRevenueEventDetailType withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The revenue event number created when a revenue event occurs.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;
    public GETRevenueEventDetailType withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * The end date of a recognition period in YYYY-MM-DD format. 
     * 
     * The maximum difference of the recognitionStart and recognitionEnd date fields is equal to 250 multiplied by the length of an accounting period.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("recognitionEnd")
    public LocalDate recognitionEnd;
    public GETRevenueEventDetailType withRecognitionEnd(LocalDate recognitionEnd) {
        this.recognitionEnd = recognitionEnd;
        return this;
    }
    
    /**
     * The start date of a recognition period in YYYY-MM-DD format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("recognitionStart")
    public LocalDate recognitionStart;
    public GETRevenueEventDetailType withRecognitionStart(LocalDate recognitionStart) {
        this.recognitionStart = recognitionStart;
        return this;
    }
    
    /**
     * Revenue items are listed in ascending order by the accounting period start date.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revenueItems")
    public GETRevenueItemType[] revenueItems;
    public GETRevenueEventDetailType withRevenueItems(GETRevenueItemType[] revenueItems) {
        this.revenueItems = revenueItems;
        return this;
    }
    
    /**
     * The original subscription charge ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionChargeId")
    public String subscriptionChargeId;
    public GETRevenueEventDetailType withSubscriptionChargeId(String subscriptionChargeId) {
        this.subscriptionChargeId = subscriptionChargeId;
        return this;
    }
    
    /**
     * The original subscription ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionId")
    public String subscriptionId;
    public GETRevenueEventDetailType withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public GETRevenueEventDetailType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
}
