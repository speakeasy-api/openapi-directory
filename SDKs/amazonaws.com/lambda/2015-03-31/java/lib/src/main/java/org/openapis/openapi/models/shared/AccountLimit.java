/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountLimit - Limits that are related to concurrency and storage. All file and storage sizes are in bytes.
 */
public class AccountLimit {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CodeSizeUnzipped")
    public Long codeSizeUnzipped;
    public AccountLimit withCodeSizeUnzipped(Long codeSizeUnzipped) {
        this.codeSizeUnzipped = codeSizeUnzipped;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CodeSizeZipped")
    public Long codeSizeZipped;
    public AccountLimit withCodeSizeZipped(Long codeSizeZipped) {
        this.codeSizeZipped = codeSizeZipped;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConcurrentExecutions")
    public Long concurrentExecutions;
    public AccountLimit withConcurrentExecutions(Long concurrentExecutions) {
        this.concurrentExecutions = concurrentExecutions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalCodeSize")
    public Long totalCodeSize;
    public AccountLimit withTotalCodeSize(Long totalCodeSize) {
        this.totalCodeSize = totalCodeSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UnreservedConcurrentExecutions")
    public Long unreservedConcurrentExecutions;
    public AccountLimit withUnreservedConcurrentExecutions(Long unreservedConcurrentExecutions) {
        this.unreservedConcurrentExecutions = unreservedConcurrentExecutions;
        return this;
    }
    
}
