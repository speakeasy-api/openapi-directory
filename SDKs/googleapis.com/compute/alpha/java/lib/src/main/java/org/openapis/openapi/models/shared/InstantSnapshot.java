/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InstantSnapshot - Represents a InstantSnapshot resource. You can use instant snapshots to create disk rollback points quickly..
 */
public class InstantSnapshot {
    /**
     * [Output Only] The architecture of the instant snapshot. Valid values are ARM64 or X86_64.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("architecture")
    public InstantSnapshotArchitectureEnum architecture;
    public InstantSnapshot withArchitecture(InstantSnapshotArchitectureEnum architecture) {
        this.architecture = architecture;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public InstantSnapshot withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public InstantSnapshot withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output Only] Size of the source disk, specified in GB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskSizeGb")
    public String diskSizeGb;
    public InstantSnapshot withDiskSizeGb(String diskSizeGb) {
        this.diskSizeGb = diskSizeGb;
        return this;
    }
    
    /**
     * Whether to attempt an application consistent instant snapshot by informing the OS to prepare for the snapshot process.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("guestFlush")
    public Boolean guestFlush;
    public InstantSnapshot withGuestFlush(Boolean guestFlush) {
        this.guestFlush = guestFlush;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public InstantSnapshot withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#instantSnapshot for InstantSnapshot resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public InstantSnapshot withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * A fingerprint for the labels being applied to this InstantSnapshot, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a InstantSnapshot.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labelFingerprint")
    public String labelFingerprint;
    public InstantSnapshot withLabelFingerprint(String labelFingerprint) {
        this.labelFingerprint = labelFingerprint;
        return this;
    }
    
    /**
     * Labels to apply to this InstantSnapshot. These can be later modified by the setLabels method. Label values may be empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public InstantSnapshot withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public InstantSnapshot withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * [Output Only] URL of the region where the instant snapshot resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;
    public InstantSnapshot withRegion(String region) {
        this.region = region;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceStatus")
    public InstantSnapshotResourceStatus resourceStatus;
    public InstantSnapshot withResourceStatus(InstantSnapshotResourceStatus resourceStatus) {
        this.resourceStatus = resourceStatus;
        return this;
    }
    
    /**
     * [Output Only] Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;
    public InstantSnapshot withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public InstantSnapshot withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource's resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;
    public InstantSnapshot withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    /**
     * URL of the source disk used to create this instant snapshot. Note that the source disk must be in the same zone/region as the instant snapshot to be created. This can be a full or valid partial URL. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - https://www.googleapis.com/compute/v1/projects/project/regions/region /disks/disk - projects/project/zones/zone/disks/disk - projects/project/regions/region/disks/disk - zones/zone/disks/disk - regions/region/disks/disk 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceDisk")
    public String sourceDisk;
    public InstantSnapshot withSourceDisk(String sourceDisk) {
        this.sourceDisk = sourceDisk;
        return this;
    }
    
    /**
     * [Output Only] The ID value of the disk used to create this InstantSnapshot. This value may be used to determine whether the InstantSnapshot was taken from the current or a previous instance of a given disk name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceDiskId")
    public String sourceDiskId;
    public InstantSnapshot withSourceDiskId(String sourceDiskId) {
        this.sourceDiskId = sourceDiskId;
        return this;
    }
    
    /**
     * [Output Only] The status of the instantSnapshot. This can be CREATING, DELETING, FAILED, or READY.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public InstantSnapshotStatusEnum status;
    public InstantSnapshot withStatus(InstantSnapshotStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * [Output Only] URL of the zone where the instant snapshot resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;
    public InstantSnapshot withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
}
