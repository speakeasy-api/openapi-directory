"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepricingProductReport = exports.RepricingProductReportTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var date_1 = require("./date");
var inapplicabilitydetails_1 = require("./inapplicabilitydetails");
var priceamount_1 = require("./priceamount");
var repricingproductreportbuyboxwinningproductstats_1 = require("./repricingproductreportbuyboxwinningproductstats");
var class_transformer_1 = require("class-transformer");
/**
 * Type of the rule.
 */
var RepricingProductReportTypeEnum;
(function (RepricingProductReportTypeEnum) {
    RepricingProductReportTypeEnum["RepricingRuleTypeUnspecified"] = "REPRICING_RULE_TYPE_UNSPECIFIED";
    RepricingProductReportTypeEnum["TypeStatsBased"] = "TYPE_STATS_BASED";
    RepricingProductReportTypeEnum["TypeCogsBased"] = "TYPE_COGS_BASED";
    RepricingProductReportTypeEnum["TypeSalesVolumeBased"] = "TYPE_SALES_VOLUME_BASED";
    RepricingProductReportTypeEnum["TypeCompetitivePrice"] = "TYPE_COMPETITIVE_PRICE";
})(RepricingProductReportTypeEnum = exports.RepricingProductReportTypeEnum || (exports.RepricingProductReportTypeEnum = {}));
/**
 * Resource that represents a daily Repricing product report. Each report contains stats for a single type of Repricing rule for a single product on a given day. If there are multiple rules of the same type for the product on that day, the report lists all the rules by rule ids, combines the stats, and paginates the results by date. To retrieve the stats of a particular rule, provide the rule_id in the request.
 */
var RepricingProductReport = /** @class */ (function (_super) {
    __extends(RepricingProductReport, _super);
    function RepricingProductReport() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "applicationCount" }),
        __metadata("design:type", String)
    ], RepricingProductReport.prototype, "applicationCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buyboxWinningProductStats" }),
        (0, class_transformer_1.Type)(function () { return repricingproductreportbuyboxwinningproductstats_1.RepricingProductReportBuyboxWinningProductStats; }),
        __metadata("design:type", repricingproductreportbuyboxwinningproductstats_1.RepricingProductReportBuyboxWinningProductStats)
    ], RepricingProductReport.prototype, "buyboxWinningProductStats", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "date" }),
        (0, class_transformer_1.Type)(function () { return date_1.Date; }),
        __metadata("design:type", date_1.Date)
    ], RepricingProductReport.prototype, "date", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "highWatermark" }),
        (0, class_transformer_1.Type)(function () { return priceamount_1.PriceAmount; }),
        __metadata("design:type", priceamount_1.PriceAmount)
    ], RepricingProductReport.prototype, "highWatermark", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: inapplicabilitydetails_1.InapplicabilityDetails }),
        (0, class_transformer_1.Expose)({ name: "inapplicabilityDetails" }),
        (0, class_transformer_1.Type)(function () { return inapplicabilitydetails_1.InapplicabilityDetails; }),
        __metadata("design:type", Array)
    ], RepricingProductReport.prototype, "inapplicabilityDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lowWatermark" }),
        (0, class_transformer_1.Type)(function () { return priceamount_1.PriceAmount; }),
        __metadata("design:type", priceamount_1.PriceAmount)
    ], RepricingProductReport.prototype, "lowWatermark", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "orderItemCount" }),
        __metadata("design:type", Number)
    ], RepricingProductReport.prototype, "orderItemCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ruleIds" }),
        __metadata("design:type", Array)
    ], RepricingProductReport.prototype, "ruleIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "totalGmv" }),
        (0, class_transformer_1.Type)(function () { return priceamount_1.PriceAmount; }),
        __metadata("design:type", priceamount_1.PriceAmount)
    ], RepricingProductReport.prototype, "totalGmv", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], RepricingProductReport.prototype, "type", void 0);
    return RepricingProductReport;
}(utils_1.SpeakeasyBase));
exports.RepricingProductReport = RepricingProductReport;
