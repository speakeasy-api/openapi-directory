// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// ListAnnotationStoresRequestBodyFilter - A filter for annotation stores.
type ListAnnotationStoresRequestBodyFilter struct {
	Status *shared.StoreStatusEnum `json:"status,omitempty"`
}

type ListAnnotationStoresRequestBody struct {
	// A filter for annotation stores.
	Filter *ListAnnotationStoresRequestBodyFilter `json:"filter,omitempty"`
	// IDs of stores to list.
	Ids []string `json:"ids,omitempty"`
}

type ListAnnotationStoresRequest struct {
	RequestBody       ListAnnotationStoresRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The maximum number of stores to return in one page of results.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// Specify the pagination token from a previous request to retrieve the next page of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListAnnotationStoresResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListAnnotationStoresResponse *shared.ListAnnotationStoresResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
