/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An object with information about the individual creating the tag.
 */
export class GitCreateTagRequestBodyTagger extends SpeakeasyBase {
  /**
   * When this object was tagged. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  /**
   * The email of the author of the tag
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * The name of the author of the tag
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

/**
 * The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.
 */
export enum GitCreateTagRequestBodyTypeEnum {
  Commit = "commit",
  Tree = "tree",
  Blob = "blob",
}

export class GitCreateTagRequestBody extends SpeakeasyBase {
  /**
   * The tag message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * The SHA of the git object this is tagging.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "object" })
  object: string;

  /**
   * The tag's name. This is typically a version (e.g., "v0.0.1").
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  tag: string;

  /**
   * An object with information about the individual creating the tag.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tagger" })
  @Type(() => GitCreateTagRequestBodyTagger)
  tagger?: GitCreateTagRequestBodyTagger;

  /**
   * The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GitCreateTagRequestBodyTypeEnum;
}

export class GitCreateTagRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: GitCreateTagRequestBody;

  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class GitCreateTagResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  gitTag?: shared.GitTag;

  /**
   * Validation failed
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
