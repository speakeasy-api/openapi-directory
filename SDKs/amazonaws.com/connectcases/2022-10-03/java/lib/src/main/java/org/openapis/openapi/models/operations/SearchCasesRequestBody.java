/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SearchCasesRequestBody {
    /**
     * The list of field identifiers to be returned as part of the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    public org.openapis.openapi.models.shared.FieldIdentifier[] fields;

    public SearchCasesRequestBody withFields(org.openapis.openapi.models.shared.FieldIdentifier[] fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * A filter for cases. Only one value can be provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filter")
    public SearchCasesRequestBodyFilter filter;

    public SearchCasesRequestBody withFilter(SearchCasesRequestBodyFilter filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * The maximum number of cases to return. The current maximum supported value is 25. This is also the default value when no other value is provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxResults")
    public Long maxResults;

    public SearchCasesRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextToken")
    public String nextToken;

    public SearchCasesRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * A word or phrase used to perform a quick search.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchTerm")
    public String searchTerm;

    public SearchCasesRequestBody withSearchTerm(String searchTerm) {
        this.searchTerm = searchTerm;
        return this;
    }
    
    /**
     * A list of sorts where each sort specifies a field and their sort order to be applied to the results. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sorts")
    public org.openapis.openapi.models.shared.Sort[] sorts;

    public SearchCasesRequestBody withSorts(org.openapis.openapi.models.shared.Sort[] sorts) {
        this.sorts = sorts;
        return this;
    }
    
    public SearchCasesRequestBody(){}
}
