"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class UserSafeScoringAccumulatedValueV1ScoringsIndividualRequest:
    
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'endDate', 'style': 'form', 'explode': True }})  
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'startDate', 'style': 'form', 'explode': True }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserSafeScoringAccumulatedValueV1ScoringsIndividual200ApplicationJSONResult:
    
    acceleration_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccelerationScore'), 'exclude': lambda f: f is None }})  
    app_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AppId'), 'exclude': lambda f: f is None }})  
    braking_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BrakingScore'), 'exclude': lambda f: f is None }})  
    company_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompanyId'), 'exclude': lambda f: f is None }})  
    cornering_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CorneringScore'), 'exclude': lambda f: f is None }})  
    device_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeviceToken'), 'exclude': lambda f: f is None }})  
    distracted_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DistractedScore'), 'exclude': lambda f: f is None }})  
    instance_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceId'), 'exclude': lambda f: f is None }})  
    overall_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OverallScore'), 'exclude': lambda f: f is None }})  
    speeding_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpeedingScore'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserSafeScoringAccumulatedValueV1ScoringsIndividual200ApplicationJSON:
    r"""Success"""
    
    errors: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Errors'), 'exclude': lambda f: f is None }})  
    result: Optional[UserSafeScoringAccumulatedValueV1ScoringsIndividual200ApplicationJSONResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Result'), 'exclude': lambda f: f is None }})  
    status: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Title'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class UserSafeScoringAccumulatedValueV1ScoringsIndividualResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    user_safe_scoring_accumulated_value_v1_scorings_individual_200_application_json_object: Optional[UserSafeScoringAccumulatedValueV1ScoringsIndividual200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    