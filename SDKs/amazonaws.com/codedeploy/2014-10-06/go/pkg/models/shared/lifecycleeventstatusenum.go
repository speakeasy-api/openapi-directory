// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LifecycleEventStatusEnum string

const (
	LifecycleEventStatusEnumPending    LifecycleEventStatusEnum = "Pending"
	LifecycleEventStatusEnumInProgress LifecycleEventStatusEnum = "InProgress"
	LifecycleEventStatusEnumSucceeded  LifecycleEventStatusEnum = "Succeeded"
	LifecycleEventStatusEnumFailed     LifecycleEventStatusEnum = "Failed"
	LifecycleEventStatusEnumSkipped    LifecycleEventStatusEnum = "Skipped"
	LifecycleEventStatusEnumUnknown    LifecycleEventStatusEnum = "Unknown"
)

func (e LifecycleEventStatusEnum) ToPointer() *LifecycleEventStatusEnum {
	return &e
}

func (e *LifecycleEventStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "InProgress":
		fallthrough
	case "Succeeded":
		fallthrough
	case "Failed":
		fallthrough
	case "Skipped":
		fallthrough
	case "Unknown":
		*e = LifecycleEventStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LifecycleEventStatusEnum: %v", v)
	}
}
