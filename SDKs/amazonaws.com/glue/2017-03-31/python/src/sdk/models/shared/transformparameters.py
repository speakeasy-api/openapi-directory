"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import findmatchesparameters as shared_findmatchesparameters
from ..shared import transformtype_enum as shared_transformtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransformParameters:
    r"""The algorithm-specific parameters that are associated with the machine learning transform."""
    
    transform_type: shared_transformtype_enum.TransformTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TransformType') }})  
    find_matches_parameters: Optional[shared_findmatchesparameters.FindMatchesParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FindMatchesParameters'), 'exclude': lambda f: f is None }})  
    