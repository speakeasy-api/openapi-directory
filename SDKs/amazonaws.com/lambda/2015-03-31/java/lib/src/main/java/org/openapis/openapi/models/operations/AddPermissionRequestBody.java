/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AddPermissionRequestBody {
    /**
     * The action that the principal can use on the function. For example, &lt;code&gt;lambda:InvokeFunction&lt;/code&gt; or &lt;code&gt;lambda:GetFunction&lt;/code&gt;.
     */
    @JsonProperty("Action")
    public String action;

    public AddPermissionRequestBody withAction(String action) {
        this.action = action;
        return this;
    }
    
    /**
     * For Alexa Smart Home functions, a token that the invoker must supply.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EventSourceToken")
    public String eventSourceToken;

    public AddPermissionRequestBody withEventSourceToken(String eventSourceToken) {
        this.eventSourceToken = eventSourceToken;
        return this;
    }
    
    /**
     * The type of authentication that your function URL uses. Set to &lt;code&gt;AWS_IAM&lt;/code&gt; if you want to restrict access to authenticated users only. Set to &lt;code&gt;NONE&lt;/code&gt; if you want to bypass IAM authentication to create a public endpoint. For more information, see &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html"&gt;Security and auth model for Lambda function URLs&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FunctionUrlAuthType")
    public AddPermissionRequestBodyFunctionUrlAuthTypeEnum functionUrlAuthType;

    public AddPermissionRequestBody withFunctionUrlAuthType(AddPermissionRequestBodyFunctionUrlAuthTypeEnum functionUrlAuthType) {
        this.functionUrlAuthType = functionUrlAuthType;
        return this;
    }
    
    /**
     * The Amazon Web Service or Amazon Web Services account that invokes the function. If you specify a service, use &lt;code&gt;SourceArn&lt;/code&gt; or &lt;code&gt;SourceAccount&lt;/code&gt; to limit who can invoke the function through that service.
     */
    @JsonProperty("Principal")
    public String principal;

    public AddPermissionRequestBody withPrincipal(String principal) {
        this.principal = principal;
        return this;
    }
    
    /**
     * The identifier for your organization in Organizations. Use this to grant permissions to all the Amazon Web Services accounts under this organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PrincipalOrgID")
    public String principalOrgID;

    public AddPermissionRequestBody withPrincipalOrgID(String principalOrgID) {
        this.principalOrgID = principalOrgID;
        return this;
    }
    
    /**
     * Update the policy only if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RevisionId")
    public String revisionId;

    public AddPermissionRequestBody withRevisionId(String revisionId) {
        this.revisionId = revisionId;
        return this;
    }
    
    /**
     * For Amazon Web Service, the ID of the Amazon Web Services account that owns the resource. Use this together with &lt;code&gt;SourceArn&lt;/code&gt; to ensure that the specified account owns the resource. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceAccount")
    public String sourceAccount;

    public AddPermissionRequestBody withSourceAccount(String sourceAccount) {
        this.sourceAccount = sourceAccount;
        return this;
    }
    
    /**
     * &lt;p&gt;For Amazon Web Services, the ARN of the Amazon Web Services resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.&lt;/p&gt; &lt;p&gt;Note that Lambda configures the comparison using the &lt;code&gt;StringLike&lt;/code&gt; operator.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceArn")
    public String sourceArn;

    public AddPermissionRequestBody withSourceArn(String sourceArn) {
        this.sourceArn = sourceArn;
        return this;
    }
    
    /**
     * A statement identifier that differentiates the statement from others in the same policy.
     */
    @JsonProperty("StatementId")
    public String statementId;

    public AddPermissionRequestBody withStatementId(String statementId) {
        this.statementId = statementId;
        return this;
    }
    
    public AddPermissionRequestBody(@JsonProperty("Action") String action, @JsonProperty("Principal") String principal, @JsonProperty("StatementId") String statementId) {
        this.action = action;
        this.principal = principal;
        this.statementId = statementId;
  }
}
