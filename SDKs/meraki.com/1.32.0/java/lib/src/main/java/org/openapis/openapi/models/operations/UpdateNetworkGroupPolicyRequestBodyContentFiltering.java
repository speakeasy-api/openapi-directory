/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateNetworkGroupPolicyRequestBodyContentFiltering - The content filtering settings for your group policy
 */
public class UpdateNetworkGroupPolicyRequestBodyContentFiltering {
    /**
     * Settings for allowed URL patterns
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedUrlPatterns")
    public UpdateNetworkGroupPolicyRequestBodyContentFilteringAllowedUrlPatterns allowedUrlPatterns;

    public UpdateNetworkGroupPolicyRequestBodyContentFiltering withAllowedUrlPatterns(UpdateNetworkGroupPolicyRequestBodyContentFilteringAllowedUrlPatterns allowedUrlPatterns) {
        this.allowedUrlPatterns = allowedUrlPatterns;
        return this;
    }
    
    /**
     * Settings for blocked URL categories
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blockedUrlCategories")
    public UpdateNetworkGroupPolicyRequestBodyContentFilteringBlockedUrlCategories blockedUrlCategories;

    public UpdateNetworkGroupPolicyRequestBodyContentFiltering withBlockedUrlCategories(UpdateNetworkGroupPolicyRequestBodyContentFilteringBlockedUrlCategories blockedUrlCategories) {
        this.blockedUrlCategories = blockedUrlCategories;
        return this;
    }
    
    /**
     * Settings for blocked URL patterns
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blockedUrlPatterns")
    public UpdateNetworkGroupPolicyRequestBodyContentFilteringBlockedUrlPatterns blockedUrlPatterns;

    public UpdateNetworkGroupPolicyRequestBodyContentFiltering withBlockedUrlPatterns(UpdateNetworkGroupPolicyRequestBodyContentFilteringBlockedUrlPatterns blockedUrlPatterns) {
        this.blockedUrlPatterns = blockedUrlPatterns;
        return this;
    }
    
    public UpdateNetworkGroupPolicyRequestBodyContentFiltering(){}
}
