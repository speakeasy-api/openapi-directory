/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class DetailedErrorResponseErrorDetailedMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "break" })
  break?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "employee" })
  employee?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "end_time" })
  endTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "error_msg" })
  errorMsg?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  startTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;
}

export class DetailedErrorResponseError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: number;

  @SpeakeasyMetadata({ elemType: DetailedErrorResponseErrorDetailedMessage })
  @Expose({ name: "detailed_message" })
  @Type(() => DetailedErrorResponseErrorDetailedMessage)
  detailedMessage?: DetailedErrorResponseErrorDetailedMessage[];

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

/**
 * Invalid request
 */
export class DetailedErrorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => DetailedErrorResponseError)
  error: DetailedErrorResponseError;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success: boolean;
}
