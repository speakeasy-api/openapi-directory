/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CatalogTarget } from "./catalogtarget";
import { DeltaTarget } from "./deltatarget";
import { DynamoDBTarget } from "./dynamodbtarget";
import { JdbcTarget } from "./jdbctarget";
import { MongoDBTarget } from "./mongodbtarget";
import { S3Target } from "./s3target";
import { Expose, Type } from "class-transformer";

/**
 * Specifies data stores to crawl.
 */
export class CrawlerTargets extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CatalogTarget })
  @Expose({ name: "CatalogTargets" })
  @Type(() => CatalogTarget)
  catalogTargets?: CatalogTarget[];

  @SpeakeasyMetadata({ elemType: DeltaTarget })
  @Expose({ name: "DeltaTargets" })
  @Type(() => DeltaTarget)
  deltaTargets?: DeltaTarget[];

  @SpeakeasyMetadata({ elemType: DynamoDBTarget })
  @Expose({ name: "DynamoDBTargets" })
  @Type(() => DynamoDBTarget)
  dynamoDBTargets?: DynamoDBTarget[];

  @SpeakeasyMetadata({ elemType: JdbcTarget })
  @Expose({ name: "JdbcTargets" })
  @Type(() => JdbcTarget)
  jdbcTargets?: JdbcTarget[];

  @SpeakeasyMetadata({ elemType: MongoDBTarget })
  @Expose({ name: "MongoDBTargets" })
  @Type(() => MongoDBTarget)
  mongoDBTargets?: MongoDBTarget[];

  @SpeakeasyMetadata({ elemType: S3Target })
  @Expose({ name: "S3Targets" })
  @Type(() => S3Target)
  s3Targets?: S3Target[];
}
