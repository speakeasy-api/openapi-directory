// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListComponentsScopeEnum - <p>The scope of the components to list.</p> <p>Default: <code>PRIVATE</code> </p>
type ListComponentsScopeEnum string

const (
	ListComponentsScopeEnumPrivate ListComponentsScopeEnum = "PRIVATE"
	ListComponentsScopeEnumPublic  ListComponentsScopeEnum = "PUBLIC"
)

func (e ListComponentsScopeEnum) ToPointer() *ListComponentsScopeEnum {
	return &e
}

func (e *ListComponentsScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRIVATE":
		fallthrough
	case "PUBLIC":
		*e = ListComponentsScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListComponentsScopeEnum: %v", v)
	}
}

type ListComponentsRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The maximum number of results to be returned per paginated request.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The token to be used for the next set of paginated results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// <p>The scope of the components to list.</p> <p>Default: <code>PRIVATE</code> </p>
	Scope *ListComponentsScopeEnum `queryParam:"style=form,explode=true,name=scope"`
}

type ListComponentsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListComponentsResponse *shared.ListComponentsResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
