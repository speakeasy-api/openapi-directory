// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateTargetGroupRequestBodyConfig - Describes the configuration of a target group. Lambda functions don't support target group configuration.
type CreateTargetGroupRequestBodyConfig struct {
	HealthCheck     *shared.HealthCheckConfig              `json:"healthCheck,omitempty"`
	IPAddressType   *shared.IPAddressTypeEnum              `json:"ipAddressType,omitempty"`
	Port            *int64                                 `json:"port,omitempty"`
	Protocol        *shared.TargetGroupProtocolEnum        `json:"protocol,omitempty"`
	ProtocolVersion *shared.TargetGroupProtocolVersionEnum `json:"protocolVersion,omitempty"`
	VpcIdentifier   *string                                `json:"vpcIdentifier,omitempty"`
}

// CreateTargetGroupRequestBodyTypeEnum - The type of target group.
type CreateTargetGroupRequestBodyTypeEnum string

const (
	CreateTargetGroupRequestBodyTypeEnumIP       CreateTargetGroupRequestBodyTypeEnum = "IP"
	CreateTargetGroupRequestBodyTypeEnumLambda   CreateTargetGroupRequestBodyTypeEnum = "LAMBDA"
	CreateTargetGroupRequestBodyTypeEnumInstance CreateTargetGroupRequestBodyTypeEnum = "INSTANCE"
	CreateTargetGroupRequestBodyTypeEnumAlb      CreateTargetGroupRequestBodyTypeEnum = "ALB"
)

func (e CreateTargetGroupRequestBodyTypeEnum) ToPointer() *CreateTargetGroupRequestBodyTypeEnum {
	return &e
}

func (e *CreateTargetGroupRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IP":
		fallthrough
	case "LAMBDA":
		fallthrough
	case "INSTANCE":
		fallthrough
	case "ALB":
		*e = CreateTargetGroupRequestBodyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTargetGroupRequestBodyTypeEnum: %v", v)
	}
}

type CreateTargetGroupRequestBody struct {
	// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren't identical, the retry fails.
	ClientToken *string `json:"clientToken,omitempty"`
	// Describes the configuration of a target group. Lambda functions don't support target group configuration.
	Config *CreateTargetGroupRequestBodyConfig `json:"config,omitempty"`
	// The name of the target group. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	Name string `json:"name"`
	// The tags for the target group.
	Tags map[string]string `json:"tags,omitempty"`
	// The type of target group.
	Type CreateTargetGroupRequestBodyTypeEnum `json:"type"`
}

type CreateTargetGroupRequest struct {
	RequestBody       CreateTargetGroupRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateTargetGroupResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateTargetGroupResponse *shared.CreateTargetGroupResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
