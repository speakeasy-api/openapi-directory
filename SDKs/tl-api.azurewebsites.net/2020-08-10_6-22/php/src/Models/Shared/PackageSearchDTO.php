<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PackageSearchDTO - The PackageSearchDTO Class.
 * 
 * Contains relevant fields of PackageSearch DTO by masking actual Package entity's fields in application.
 *                
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PackageSearchDTO
{
    /**
     * Active Status 
     * 
     * @var ?bool $activeStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('activeStatus')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $activeStatus = null;
    
    /**
     * sum of addon fees.
     * 
     * incoming values for this filed will ignore.
     *             
     * 
     * @var ?float $addonFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('addonFee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $addonFee = null;
    
    /**
     * Boolean value to indicate wheather package is available in all the gyms.
     * 
     *             
     * 
     * @var ?bool $applyForAllGyms
     */
	#[\JMS\Serializer\Annotation\SerializedName('applyForAllGyms')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $applyForAllGyms = null;
    
    /**
     * Range of period a member is bound to the contract if he/she choose this package.
     * 
     *             
     * 
     * @var ?int $bindingPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('bindingPeriod')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $bindingPeriod = null;
    
    /**
     * Package created DateTime.
     * 
     *             
     * 
     * @var ?\DateTime $createdDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdDate = null;
    
    /**
     * Package created user.
     * 
     *             
     * 
     * @var ?string $createdUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdUser')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdUser = null;
    
    /**
     * Common descriptions about package.If there are more instructions can be stored as comma separated values.
     * 
     *             
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * What are the facilities, features available for package.ex:- wifi, ACm etc.Can be stored as comma seperated values.
     * 
     *             
     * 
     * @var ?string $features
     */
	#[\JMS\Serializer\Annotation\SerializedName('features')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $features = null;
    
    /**
     * No of months gym member can come without payments.
     * 
     *             
     * 
     * @var ?int $freeMonths
     */
	#[\JMS\Serializer\Annotation\SerializedName('freeMonths')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $freeMonths = null;
    
    /**
     * Boolean value to indicate member can remove already added addons if he choose this package.
     * 
     *             
     * 
     * @var ?bool $memberCanRemoveAddOns
     */
	#[\JMS\Serializer\Annotation\SerializedName('memberCanRemoveAddOns')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $memberCanRemoveAddOns = null;
    
    /**
     * Package last modified DateTime.
     * 
     *             
     * 
     * @var ?\DateTime $modifiedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $modifiedDate = null;
    
    /**
     * Package last modified user.
     * 
     *             
     * 
     * @var ?string $modifiedUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiedUser')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $modifiedUser = null;
    
    /**
     * Monthly installment fee if package is not fixed visit.
     * 
     * addition of the servicefee and addon fees divided by binding period.
     *             
     * 
     * @var ?float $monthlyFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('monthlyFee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $monthlyFee = null;
    
    /**
     * No of visits for fixed package 
     * 
     * @var ?int $numberOfVisits
     */
	#[\JMS\Serializer\Annotation\SerializedName('numberOfVisits')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numberOfVisits = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('packageId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $packageId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('packageName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $packageName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('packageNumber')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $packageNumber = null;
    
    /**
     * Package type can be either fixed visit or unlimited.
     * 
     *             
     * 
     * @var ?string $packageType
     */
	#[\JMS\Serializer\Annotation\SerializedName('packageType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $packageType = null;
    
    /**
     * Registartion fee for the package at a gym.
     * 
     *             
     * 
     * @var ?float $registrationFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('registrationFee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $registrationFee = null;
    
    /**
     * total Service charge of the package for entire period.
     * 
     *             
     * 
     * @var ?float $serviceFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceFee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $serviceFee = null;
    
    /**
     * Comma separated string values in case of need of maintain some labels kind of stuff relevant to the package.
     * 
     *             
     * 
     * @var ?string $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tags = null;
    
    /**
     * total number of recode for particular search 
     * 
     * @var ?int $totalCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalCount = null;
    
    /**
     * total price for the package including Addon fees, service fee and registration fee.
     * 
     * incoming values for this field will ignore.
     *             
     * 
     * @var ?float $totalPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalPrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $totalPrice = null;
    
	public function __construct()
	{
		$this->activeStatus = null;
		$this->addonFee = null;
		$this->applyForAllGyms = null;
		$this->bindingPeriod = null;
		$this->createdDate = null;
		$this->createdUser = null;
		$this->description = null;
		$this->features = null;
		$this->freeMonths = null;
		$this->memberCanRemoveAddOns = null;
		$this->modifiedDate = null;
		$this->modifiedUser = null;
		$this->monthlyFee = null;
		$this->numberOfVisits = null;
		$this->packageId = null;
		$this->packageName = null;
		$this->packageNumber = null;
		$this->packageType = null;
		$this->registrationFee = null;
		$this->serviceFee = null;
		$this->tags = null;
		$this->totalCount = null;
		$this->totalPrice = null;
	}
}
