"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .announcements import Announcements
from .areacodes import Areacodes
from .billing import Billing
from .calls import Calls
from .charges import Charges
from .contacts import Contacts
from .customers import Customers
from .echo import Echo
from .faxes import Faxes
from .global_ import Global
from .hosted import Hosted
from .mobile import Mobile
from .numbers import Numbers
from .partners import Partners
from .porting import Porting
from .sip import Sip
from .sms import Sms
from .support import Support
from .topups import Topups
from sdk.models import shared

SERVERS = [
    "https://api.surevoip.co.uk",
    r"""Production SureVoIP API (live data)"""
    "https://sandbox.surevoip.co.uk",
    r"""Sandbox SureVoIP API (data is 24 hours behind production)"""
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""# Introduction
    Welcome to the SureVoIP RESTful hypermedia API (sometimes known as a VoIP REST API, Telecom REST API, SIP API, Hypermedia API or just VoIP API.)
    
    The SureVoIP API is a way for you to automate your interaction with the SureVoIP platforms. With the API, you can create your own scripts, applications or mashups which can:
    * List calls
    * create customers
    * search numbers
    * provision numbers
    * send SMS texts
    * create outbound calls
    * schedule announcements
    * schedule call hangups with an announcement
    * subscribe to events/alerts
    * track calls
    * retrieve invoices
    * grab your SIP details
    * check your IP address
    * be 100% self-sufficient
    * and much more!
    https://www.surevoip.co.uk/support/wiki/api_documentation - SureVoIP API Wiki
    """
    announcements: Announcements
    r"""Announcements that can be played during or before a call"""
    areacodes: Areacodes
    r"""Areacodes of numbers that SureVoIP can supply"""
    billing: Billing
    r"""Billing details and invoices"""
    calls: Calls
    r"""Create phone calls via an API"""
    charges: Charges
    r"""Create a charge for a customer"""
    contacts: Contacts
    r"""Create, List, Updated and Delete Contacts"""
    customers: Customers
    r"""Create, List, Updated and Delete Customers"""
    echo: Echo
    r"""Echo back your payload"""
    faxes: Faxes
    r"""Send faxes - Not in service"""
    global_: Global
    hosted: Hosted
    r"""Create, List, Updated and Delete Hosted VoIP Customers"""
    mobile: Mobile
    r"""Create, List, Updated and Delete SIMs"""
    numbers: Numbers
    r"""Create, List, Updated and Delete Numbers (DDIs)"""
    partners: Partners
    r"""Create, List, Updated and Delete Partners and their customers"""
    porting: Porting
    r"""Create, List, Updated and Delete Number Porting requests"""
    sip: Sip
    r"""List SIP details"""
    sms: Sms
    r"""Send SMS (text messages)"""
    support: Support
    r"""List support details"""
    topups: Topups
    r"""Create call credit topups for customers"""

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 security: shared.Security = None,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param security: The security details required for authentication
        :type security: shared.Security
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = utils.configure_security_client(self._client, security)
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.announcements = Announcements(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.areacodes = Areacodes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.billing = Billing(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.calls = Calls(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.charges = Charges(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.contacts = Contacts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.customers = Customers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.echo = Echo(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.faxes = Faxes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.global_ = Global(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.hosted = Hosted(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.mobile = Mobile(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.numbers = Numbers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.partners = Partners(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.porting = Porting(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sip = Sip(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sms = Sms(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.support = Support(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.topups = Topups(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    