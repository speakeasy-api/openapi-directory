<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OBStatement2 - Provides further details on a statement resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OBStatement2
{
    /**
     * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     * 
     * @var string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountId;
    
    /**
     * Date and time at which the statement period starts.All dates in the JSON payloads are represented in ISO 8601 date-time format.
     * 
     * All date-time fields in responses must include the timezone.An example is below:
     * 2017-04-05T10:43:07+00:00
     * 
     * @var \DateTime $creationDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreationDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $creationDateTime;
    
    /**
     * Date and time at which the statement period starts.All dates in the JSON payloads are represented in ISO 8601 date-time format.
     * 
     * All date-time fields in responses must include the timezone.An example is below:
     * 2017-04-05T10:43:07+00:00
     * 
     * @var \DateTime $endDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('EndDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $endDateTime;
    
    /**
     * Date and time at which the statement period starts.All dates in the JSON payloads are represented in ISO 8601 date-time format.
     * 
     * All date-time fields in responses must include the timezone.An example is below:
     * 2017-04-05T10:43:07+00:00
     * 
     * @var \DateTime $startDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('StartDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $startDateTime;
    
    /**
     * Unique identifier for the statement resource within an servicing institution. This identifier is both unique and immutable.
     * 
     * @var ?string $statementId
     */
	#[\JMS\Serializer\Annotation\SerializedName('StatementId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statementId = null;
    
    /**
     * Unique reference for the statement. This reference may be optionally populated if available.
     * 
     * @var ?string $statementReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('StatementReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statementReference = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OBExternalStatementType1CodeEnum>')]
    public OBExternalStatementType1CodeEnum $type;
    
	public function __construct()
	{
		$this->accountId = "";
		$this->creationDateTime = new \DateTime();
		$this->endDateTime = new \DateTime();
		$this->startDateTime = new \DateTime();
		$this->statementId = null;
		$this->statementReference = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\OBExternalStatementType1CodeEnum::ACCOUNT_CLOSURE;
	}
}
