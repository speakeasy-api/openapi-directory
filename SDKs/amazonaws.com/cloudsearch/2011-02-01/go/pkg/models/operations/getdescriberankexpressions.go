// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeRankExpressionsActionEnum
type GETDescribeRankExpressionsActionEnum string

const (
	GETDescribeRankExpressionsActionEnumDescribeRankExpressions GETDescribeRankExpressionsActionEnum = "DescribeRankExpressions"
)

func (e *GETDescribeRankExpressionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeRankExpressions":
		*e = GETDescribeRankExpressionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeRankExpressionsActionEnum: %s", s)
	}
}

// GETDescribeRankExpressionsVersionEnum
type GETDescribeRankExpressionsVersionEnum string

const (
	GETDescribeRankExpressionsVersionEnumTwoThousandAndEleven0201 GETDescribeRankExpressionsVersionEnum = "2011-02-01"
)

func (e *GETDescribeRankExpressionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-02-01":
		*e = GETDescribeRankExpressionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeRankExpressionsVersionEnum: %s", s)
	}
}

type GETDescribeRankExpressionsRequest struct {
	Action     GETDescribeRankExpressionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	DomainName string                               `queryParam:"style=form,explode=true,name=DomainName"`
	// Limits the <code>DescribeRankExpressions</code> response to the specified fields.
	RankNames         []string                              `queryParam:"style=form,explode=true,name=RankNames"`
	Version           GETDescribeRankExpressionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeRankExpressionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
