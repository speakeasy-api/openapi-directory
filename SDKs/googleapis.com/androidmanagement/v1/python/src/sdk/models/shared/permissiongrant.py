"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PermissionGrantPolicyEnum(str, Enum):
    r"""The policy for granting the permission."""
    PERMISSION_POLICY_UNSPECIFIED = 'PERMISSION_POLICY_UNSPECIFIED'
    PROMPT = 'PROMPT'
    GRANT = 'GRANT'
    DENY = 'DENY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PermissionGrant:
    r"""Configuration for an Android permission and its grant state."""
    
    permission: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permission'), 'exclude': lambda f: f is None }})
    r"""The Android permission or group, e.g. android.permission.READ_CALENDAR or android.permission_group.CALENDAR."""  
    policy: Optional[PermissionGrantPolicyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policy'), 'exclude': lambda f: f is None }})
    r"""The policy for granting the permission."""  
    