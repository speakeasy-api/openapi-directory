// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum - The ways user posts this event.
type EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum string

const (
	EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnumUnspecified          EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum = "UNSPECIFIED"
	EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnumPost                 EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum = "POST"
	EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnumPostToQueue          EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum = "POST_TO_QUEUE"
	EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnumSchedule             EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum = "SCHEDULE"
	EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnumPostByEventConfigID  EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum = "POST_BY_EVENT_CONFIG_ID"
	EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnumPostWithEventDetails EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum = "POST_WITH_EVENT_DETAILS"
)

func (e EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum) ToPointer() *EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum {
	return &e
}

func (e *EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED":
		fallthrough
	case "POST":
		fallthrough
	case "POST_TO_QUEUE":
		fallthrough
	case "SCHEDULE":
		fallthrough
	case "POST_BY_EVENT_CONFIG_ID":
		fallthrough
	case "POST_WITH_EVENT_DETAILS":
		*e = EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum: %v", v)
	}
}

// EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum - Which Google product the execution_info belongs to. If not set, the execution_info belongs to Integration Platform by default.
type EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum string

const (
	EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnumUnspecifiedProduct EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum = "UNSPECIFIED_PRODUCT"
	EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnumIP                 EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum = "IP"
	EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnumApigee             EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum = "APIGEE"
	EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnumSecurity           EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum = "SECURITY"
)

func (e EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum) ToPointer() *EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum {
	return &e
}

func (e *EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED_PRODUCT":
		fallthrough
	case "IP":
		fallthrough
	case "APIGEE":
		fallthrough
	case "SECURITY":
		*e = EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum: %v", v)
	}
}

// EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo - Contains all the execution details for a workflow instance. Next available id: 24
type EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo struct {
	// The event data user sends as request.
	ClientID *string `json:"clientId,omitempty"`
	// Auto-generated.
	CreateTime *string `json:"createTime,omitempty"`
	// Registered ids for errors, as "oneof" enums. Each task or logical grouping of tasks may share the same enum.
	ErrorCode *CrmlogErrorCode `json:"errorCode,omitempty"`
	// Errors, warnings, and informationals associated with the workflow/task. The order in which the errors were added by the workflow/task is maintained.
	Errors []EnterpriseCrmEventbusProtoErrorDetail `json:"errors,omitempty"`
	// Contains the details of the execution info of this event: this includes the tasks execution details plus the event execution statistics. Next available id: 10
	EventExecutionDetails *EnterpriseCrmFrontendsEventbusProtoEventExecutionDetails `json:"eventExecutionDetails,omitempty"`
	// Auto-generated primary key.
	EventExecutionInfoID *string `json:"eventExecutionInfoId,omitempty"`
	// Message that helps aggregate all sub-executions triggered by one execution and keeps track of child-parent relationships.
	ExecutionTraceInfo *EnterpriseCrmEventbusProtoExecutionTraceInfo `json:"executionTraceInfo,omitempty"`
	// Auto-generated.
	LastModifiedTime *string `json:"lastModifiedTime,omitempty"`
	// The ways user posts this event.
	PostMethod *EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum `json:"postMethod,omitempty"`
	// Which Google product the execution_info belongs to. If not set, the execution_info belongs to Integration Platform by default.
	Product *EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum `json:"product,omitempty"`
	// Optional. This is used to de-dup incoming request.
	RequestID *string `json:"requestId,omitempty"`
	// LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
	RequestParams *EnterpriseCrmFrontendsEventbusProtoEventParameters `json:"requestParams,omitempty"`
	// LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
	ResponseParams *EnterpriseCrmFrontendsEventbusProtoEventParameters `json:"responseParams,omitempty"`
	// Workflow snapshot number.
	SnapshotNumber *string `json:"snapshotNumber,omitempty"`
	// Tenant this event is created. Used to reschedule the event to correct tenant.
	Tenant *string `json:"tenant,omitempty"`
	// The trigger id of the workflow trigger config. If both trigger_id and client_id is present, the workflow is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks.
	TriggerID *string `json:"triggerId,omitempty"`
	// Required. Pointer to the workflow it is executing.
	WorkflowID *string `json:"workflowId,omitempty"`
	// Name of the workflow.
	WorkflowName *string `json:"workflowName,omitempty"`
	// Time interval in seconds to schedule retry of workflow in manifold when workflow is already running
	WorkflowRetryBackoffIntervalSeconds *string `json:"workflowRetryBackoffIntervalSeconds,omitempty"`
}
