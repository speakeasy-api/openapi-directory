/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * An object representing a Kubernetes label change for a managed node group.
 */
export class UpdateNodegroupConfigRequestBodyLabels extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "addOrUpdateLabels" })
  addOrUpdateLabels?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "removeLabels" })
  removeLabels?: string[];
}

/**
 * An object representing the scaling configuration details for the Auto Scaling group that is associated with your node group. When creating a node group, you must specify all or none of the properties. When updating a node group, you can specify any or none of the properties.
 */
export class UpdateNodegroupConfigRequestBodyScalingConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "desiredSize" })
  desiredSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxSize" })
  maxSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "minSize" })
  minSize?: number;
}

/**
 * An object representing the details of an update to a taints payload. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html">Node taints on managed node groups</a>.
 */
export class UpdateNodegroupConfigRequestBodyTaints extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Taint })
  @Expose({ name: "addOrUpdateTaints" })
  @Type(() => shared.Taint)
  addOrUpdateTaints?: shared.Taint[];

  @SpeakeasyMetadata({ elemType: shared.Taint })
  @Expose({ name: "removeTaints" })
  @Type(() => shared.Taint)
  removeTaints?: shared.Taint[];
}

/**
 * The node group update configuration.
 */
export class UpdateNodegroupConfigRequestBodyUpdateConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "maxUnavailable" })
  maxUnavailable?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxUnavailablePercentage" })
  maxUnavailablePercentage?: number;
}

export class UpdateNodegroupConfigRequestBody extends SpeakeasyBase {
  /**
   * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientRequestToken" })
  clientRequestToken?: string;

  /**
   * An object representing a Kubernetes label change for a managed node group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  @Type(() => UpdateNodegroupConfigRequestBodyLabels)
  labels?: UpdateNodegroupConfigRequestBodyLabels;

  /**
   * An object representing the scaling configuration details for the Auto Scaling group that is associated with your node group. When creating a node group, you must specify all or none of the properties. When updating a node group, you can specify any or none of the properties.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scalingConfig" })
  @Type(() => UpdateNodegroupConfigRequestBodyScalingConfig)
  scalingConfig?: UpdateNodegroupConfigRequestBodyScalingConfig;

  /**
   * An object representing the details of an update to a taints payload. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html">Node taints on managed node groups</a>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taints" })
  @Type(() => UpdateNodegroupConfigRequestBodyTaints)
  taints?: UpdateNodegroupConfigRequestBodyTaints;

  /**
   * The node group update configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateConfig" })
  @Type(() => UpdateNodegroupConfigRequestBodyUpdateConfig)
  updateConfig?: UpdateNodegroupConfigRequestBodyUpdateConfig;
}

export class UpdateNodegroupConfigRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateNodegroupConfigRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The name of the Amazon EKS cluster that the managed node group resides in.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=name",
  })
  name: string;

  /**
   * The name of the managed node group to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=nodegroupName",
  })
  nodegroupName: string;
}

export class UpdateNodegroupConfigResponse extends SpeakeasyBase {
  /**
   * ClientException
   */
  @SpeakeasyMetadata()
  clientException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InvalidParameterException
   */
  @SpeakeasyMetadata()
  invalidParameterException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  /**
   * ResourceInUseException
   */
  @SpeakeasyMetadata()
  resourceInUseException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ServerException
   */
  @SpeakeasyMetadata()
  serverException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateNodegroupConfigResponse?: shared.UpdateNodegroupConfigResponse;
}
