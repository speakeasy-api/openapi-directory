"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionTransactionSourceInternalSource = exports.TransactionTransactionSourceInternalSourceReasonEnum = exports.TransactionTransactionSourceInternalSourceCurrencyEnum = exports.TransactionTransactionSourceInterestPayment = exports.TransactionTransactionSourceInterestPaymentCurrencyEnum = exports.TransactionTransactionSourceInboundWireTransfer = exports.TransactionTransactionSourceInboundWireReversal = exports.TransactionTransactionSourceInboundWireDrawdownPaymentReversal = exports.TransactionTransactionSourceInboundWireDrawdownPayment = exports.TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation = exports.TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = exports.TransactionTransactionSourceInboundInternationalACHTransfer = exports.TransactionTransactionSourceInboundCheck = exports.TransactionTransactionSourceInboundCheckCurrencyEnum = exports.TransactionTransactionSourceInboundACHTransfer = exports.TransactionTransactionSourceEmpyrealCashDeposit = exports.TransactionTransactionSourceDisputeResolution = exports.TransactionTransactionSourceDisputeResolutionCurrencyEnum = exports.TransactionTransactionSourceCheckTransferStopPaymentRequest = exports.TransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum = exports.TransactionTransactionSourceCheckTransferReturn = exports.TransactionTransactionSourceCheckTransferRejection = exports.TransactionTransactionSourceCheckTransferIntention = exports.TransactionTransactionSourceCheckTransferIntentionCurrencyEnum = exports.TransactionTransactionSourceCheckDepositReturn = exports.TransactionTransactionSourceCheckDepositReturnReturnReasonEnum = exports.TransactionTransactionSourceCheckDepositReturnCurrencyEnum = exports.TransactionTransactionSourceCheckDepositAcceptance = exports.TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = exports.TransactionTransactionSourceCategoryEnum = exports.TransactionTransactionSourceCardSettlement = exports.TransactionTransactionSourceCardSettlementTypeEnum = exports.TransactionTransactionSourceCardSettlementCurrencyEnum = exports.TransactionTransactionSourceDeprecatedCardSettlement = exports.TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = exports.TransactionTransactionSourceDeprecatedCardRefund = exports.TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = exports.TransactionTransactionSourceCardRefund = exports.TransactionTransactionSourceCardRefundTypeEnum = exports.TransactionTransactionSourceCardRefundCurrencyEnum = exports.TransactionTransactionSourceCardDisputeAcceptance = exports.TransactionTransactionSourceACHTransferReturn = exports.TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = exports.TransactionTransactionSourceACHTransferRejection = exports.TransactionTransactionSourceACHTransferIntention = exports.TransactionTransactionSourceACHCheckConversionReturn = exports.TransactionTransactionSourceACHCheckConversion = exports.TransactionTransactionSourceAccountTransferIntention = exports.TransactionTransactionSourceAccountTransferIntentionCurrencyEnum = exports.TransactionCurrencyEnum = void 0;
exports.Transaction = exports.TransactionTypeEnum = exports.TransactionTransactionSource = exports.TransactionTransactionSourceWireTransferRejection = exports.TransactionTransactionSourceWireTransferIntention = exports.TransactionTransactionSourceWireDrawdownPaymentRejection = exports.TransactionTransactionSourceWireDrawdownPaymentIntention = exports.TransactionTransactionSourceSampleFunds = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.
 */
var TransactionCurrencyEnum;
(function (TransactionCurrencyEnum) {
    TransactionCurrencyEnum["Cad"] = "CAD";
    TransactionCurrencyEnum["Chf"] = "CHF";
    TransactionCurrencyEnum["Eur"] = "EUR";
    TransactionCurrencyEnum["Gbp"] = "GBP";
    TransactionCurrencyEnum["Jpy"] = "JPY";
    TransactionCurrencyEnum["Usd"] = "USD";
})(TransactionCurrencyEnum = exports.TransactionCurrencyEnum || (exports.TransactionCurrencyEnum = {}));
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
 */
var TransactionTransactionSourceAccountTransferIntentionCurrencyEnum;
(function (TransactionTransactionSourceAccountTransferIntentionCurrencyEnum) {
    TransactionTransactionSourceAccountTransferIntentionCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceAccountTransferIntentionCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceAccountTransferIntentionCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceAccountTransferIntentionCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceAccountTransferIntentionCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceAccountTransferIntentionCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceAccountTransferIntentionCurrencyEnum = exports.TransactionTransactionSourceAccountTransferIntentionCurrencyEnum || (exports.TransactionTransactionSourceAccountTransferIntentionCurrencyEnum = {}));
/**
 * A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.
 */
var TransactionTransactionSourceAccountTransferIntention = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceAccountTransferIntention, _super);
    function TransactionTransactionSourceAccountTransferIntention() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceAccountTransferIntention.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceAccountTransferIntention.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceAccountTransferIntention.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destination_account_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceAccountTransferIntention.prototype, "destinationAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "source_account_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceAccountTransferIntention.prototype, "sourceAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceAccountTransferIntention.prototype, "transferId", void 0);
    return TransactionTransactionSourceAccountTransferIntention;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceAccountTransferIntention = TransactionTransactionSourceAccountTransferIntention;
/**
 * A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.
 */
var TransactionTransactionSourceACHCheckConversion = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceACHCheckConversion, _super);
    function TransactionTransactionSourceACHCheckConversion() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceACHCheckConversion.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "file_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceACHCheckConversion.prototype, "fileId", void 0);
    return TransactionTransactionSourceACHCheckConversion;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceACHCheckConversion = TransactionTransactionSourceACHCheckConversion;
/**
 * A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.
 */
var TransactionTransactionSourceACHCheckConversionReturn = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceACHCheckConversionReturn, _super);
    function TransactionTransactionSourceACHCheckConversionReturn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceACHCheckConversionReturn.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "return_reason_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceACHCheckConversionReturn.prototype, "returnReasonCode", void 0);
    return TransactionTransactionSourceACHCheckConversionReturn;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceACHCheckConversionReturn = TransactionTransactionSourceACHCheckConversionReturn;
/**
 * A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.
 */
var TransactionTransactionSourceACHTransferIntention = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceACHTransferIntention, _super);
    function TransactionTransactionSourceACHTransferIntention() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceACHTransferIntention.prototype, "accountNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceACHTransferIntention.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routing_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceACHTransferIntention.prototype, "routingNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "statement_descriptor" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceACHTransferIntention.prototype, "statementDescriptor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceACHTransferIntention.prototype, "transferId", void 0);
    return TransactionTransactionSourceACHTransferIntention;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceACHTransferIntention = TransactionTransactionSourceACHTransferIntention;
/**
 * A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.
 */
var TransactionTransactionSourceACHTransferRejection = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceACHTransferRejection, _super);
    function TransactionTransactionSourceACHTransferRejection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceACHTransferRejection.prototype, "transferId", void 0);
    return TransactionTransactionSourceACHTransferRejection;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceACHTransferRejection = TransactionTransactionSourceACHTransferRejection;
/**
 * Why the ACH Transfer was returned.
 */
var TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum;
(function (TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum) {
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["InsufficientFund"] = "insufficient_fund";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["NoAccount"] = "no_account";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["AccountClosed"] = "account_closed";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["InvalidAccountNumberStructure"] = "invalid_account_number_structure";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["AccountFrozenEntryReturnedPerOfacInstruction"] = "account_frozen_entry_returned_per_ofac_instruction";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["CreditEntryRefusedByReceiver"] = "credit_entry_refused_by_receiver";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["UnauthorizedDebitToConsumerAccountUsingCorporateSecCode"] = "unauthorized_debit_to_consumer_account_using_corporate_sec_code";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["CorporateCustomerAdvisedNotAuthorized"] = "corporate_customer_advised_not_authorized";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["PaymentStopped"] = "payment_stopped";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["NonTransactionAccount"] = "non_transaction_account";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["UncollectedFunds"] = "uncollected_funds";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["RoutingNumberCheckDigitError"] = "routing_number_check_digit_error";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["CustomerAdvisedUnauthorizedImproperIneligibleOrIncomplete"] = "customer_advised_unauthorized_improper_ineligible_or_incomplete";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["AmountFieldError"] = "amount_field_error";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["AuthorizationRevokedByCustomer"] = "authorization_revoked_by_customer";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["InvalidAchRoutingNumber"] = "invalid_ach_routing_number";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["FileRecordEditCriteria"] = "file_record_edit_criteria";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["EnrInvalidIndividualName"] = "enr_invalid_individual_name";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["ReturnedPerOdfiRequest"] = "returned_per_odfi_request";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["AddendaError"] = "addenda_error";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["LimitedParticipationDfi"] = "limited_participation_dfi";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["IncorrectlyCodedOutboundInternationalPayment"] = "incorrectly_coded_outbound_international_payment";
    TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum["Other"] = "other";
})(TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = exports.TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum || (exports.TransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = {}));
/**
 * A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.
 */
var TransactionTransactionSourceACHTransferReturn = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceACHTransferReturn, _super);
    function TransactionTransactionSourceACHTransferReturn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceACHTransferReturn.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "return_reason_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceACHTransferReturn.prototype, "returnReasonCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceACHTransferReturn.prototype, "transactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceACHTransferReturn.prototype, "transferId", void 0);
    return TransactionTransactionSourceACHTransferReturn;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceACHTransferReturn = TransactionTransactionSourceACHTransferReturn;
/**
 * A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.
 */
var TransactionTransactionSourceCardDisputeAcceptance = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceCardDisputeAcceptance, _super);
    function TransactionTransactionSourceCardDisputeAcceptance() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accepted_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceCardDisputeAcceptance.prototype, "acceptedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "card_dispute_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardDisputeAcceptance.prototype, "cardDisputeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardDisputeAcceptance.prototype, "transactionId", void 0);
    return TransactionTransactionSourceCardDisputeAcceptance;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceCardDisputeAcceptance = TransactionTransactionSourceCardDisputeAcceptance;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
 */
var TransactionTransactionSourceCardRefundCurrencyEnum;
(function (TransactionTransactionSourceCardRefundCurrencyEnum) {
    TransactionTransactionSourceCardRefundCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceCardRefundCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceCardRefundCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceCardRefundCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceCardRefundCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceCardRefundCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceCardRefundCurrencyEnum = exports.TransactionTransactionSourceCardRefundCurrencyEnum || (exports.TransactionTransactionSourceCardRefundCurrencyEnum = {}));
/**
 * A constant representing the object's type. For this resource it will always be `card_refund`.
 */
var TransactionTransactionSourceCardRefundTypeEnum;
(function (TransactionTransactionSourceCardRefundTypeEnum) {
    TransactionTransactionSourceCardRefundTypeEnum["CardRefund"] = "card_refund";
})(TransactionTransactionSourceCardRefundTypeEnum = exports.TransactionTransactionSourceCardRefundTypeEnum || (exports.TransactionTransactionSourceCardRefundTypeEnum = {}));
/**
 * A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.
 */
var TransactionTransactionSourceCardRefund = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceCardRefund, _super);
    function TransactionTransactionSourceCardRefund() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceCardRefund.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "card_settlement_transaction_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardRefund.prototype, "cardSettlementTransactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardRefund.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardRefund.prototype, "type", void 0);
    return TransactionTransactionSourceCardRefund;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceCardRefund = TransactionTransactionSourceCardRefund;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.
 */
var TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum;
(function (TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum) {
    TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = exports.TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum || (exports.TransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = {}));
/**
 * A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.
 */
var TransactionTransactionSourceDeprecatedCardRefund = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceDeprecatedCardRefund, _super);
    function TransactionTransactionSourceDeprecatedCardRefund() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceDeprecatedCardRefund.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardRefund.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_acceptor_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardRefund.prototype, "merchantAcceptorId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_category_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardRefund.prototype, "merchantCategoryCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_city" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardRefund.prototype, "merchantCity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_country" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardRefund.prototype, "merchantCountry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_descriptor" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardRefund.prototype, "merchantDescriptor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_state" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardRefund.prototype, "merchantState", void 0);
    return TransactionTransactionSourceDeprecatedCardRefund;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceDeprecatedCardRefund = TransactionTransactionSourceDeprecatedCardRefund;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.
 */
var TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum;
(function (TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum) {
    TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = exports.TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum || (exports.TransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = {}));
/**
 * A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.
 */
var TransactionTransactionSourceDeprecatedCardSettlement = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceDeprecatedCardSettlement, _super);
    function TransactionTransactionSourceDeprecatedCardSettlement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceDeprecatedCardSettlement.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardSettlement.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_acceptor_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardSettlement.prototype, "merchantAcceptorId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_category_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardSettlement.prototype, "merchantCategoryCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_city" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardSettlement.prototype, "merchantCity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_country" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardSettlement.prototype, "merchantCountry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_descriptor" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardSettlement.prototype, "merchantDescriptor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_state" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDeprecatedCardSettlement.prototype, "merchantState", void 0);
    return TransactionTransactionSourceDeprecatedCardSettlement;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceDeprecatedCardSettlement = TransactionTransactionSourceDeprecatedCardSettlement;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.
 */
var TransactionTransactionSourceCardSettlementCurrencyEnum;
(function (TransactionTransactionSourceCardSettlementCurrencyEnum) {
    TransactionTransactionSourceCardSettlementCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceCardSettlementCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceCardSettlementCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceCardSettlementCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceCardSettlementCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceCardSettlementCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceCardSettlementCurrencyEnum = exports.TransactionTransactionSourceCardSettlementCurrencyEnum || (exports.TransactionTransactionSourceCardSettlementCurrencyEnum = {}));
/**
 * A constant representing the object's type. For this resource it will always be `card_settlement`.
 */
var TransactionTransactionSourceCardSettlementTypeEnum;
(function (TransactionTransactionSourceCardSettlementTypeEnum) {
    TransactionTransactionSourceCardSettlementTypeEnum["CardSettlement"] = "card_settlement";
})(TransactionTransactionSourceCardSettlementTypeEnum = exports.TransactionTransactionSourceCardSettlementTypeEnum || (exports.TransactionTransactionSourceCardSettlementTypeEnum = {}));
/**
 * A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.
 */
var TransactionTransactionSourceCardSettlement = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceCardSettlement, _super);
    function TransactionTransactionSourceCardSettlement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceCardSettlement.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardSettlement.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_category_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardSettlement.prototype, "merchantCategoryCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_city" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardSettlement.prototype, "merchantCity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_country" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardSettlement.prototype, "merchantCountry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardSettlement.prototype, "merchantName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_state" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardSettlement.prototype, "merchantState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pending_transaction_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardSettlement.prototype, "pendingTransactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "presentment_amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceCardSettlement.prototype, "presentmentAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "presentment_currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardSettlement.prototype, "presentmentCurrency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCardSettlement.prototype, "type", void 0);
    return TransactionTransactionSourceCardSettlement;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceCardSettlement = TransactionTransactionSourceCardSettlement;
/**
 * The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
 */
var TransactionTransactionSourceCategoryEnum;
(function (TransactionTransactionSourceCategoryEnum) {
    TransactionTransactionSourceCategoryEnum["AccountTransferIntention"] = "account_transfer_intention";
    TransactionTransactionSourceCategoryEnum["AchCheckConversionReturn"] = "ach_check_conversion_return";
    TransactionTransactionSourceCategoryEnum["AchCheckConversion"] = "ach_check_conversion";
    TransactionTransactionSourceCategoryEnum["AchTransferIntention"] = "ach_transfer_intention";
    TransactionTransactionSourceCategoryEnum["AchTransferRejection"] = "ach_transfer_rejection";
    TransactionTransactionSourceCategoryEnum["AchTransferReturn"] = "ach_transfer_return";
    TransactionTransactionSourceCategoryEnum["CardDisputeAcceptance"] = "card_dispute_acceptance";
    TransactionTransactionSourceCategoryEnum["CardRefund"] = "card_refund";
    TransactionTransactionSourceCategoryEnum["CardSettlement"] = "card_settlement";
    TransactionTransactionSourceCategoryEnum["CheckDepositAcceptance"] = "check_deposit_acceptance";
    TransactionTransactionSourceCategoryEnum["CheckDepositReturn"] = "check_deposit_return";
    TransactionTransactionSourceCategoryEnum["CheckTransferIntention"] = "check_transfer_intention";
    TransactionTransactionSourceCategoryEnum["CheckTransferReturn"] = "check_transfer_return";
    TransactionTransactionSourceCategoryEnum["CheckTransferRejection"] = "check_transfer_rejection";
    TransactionTransactionSourceCategoryEnum["CheckTransferStopPaymentRequest"] = "check_transfer_stop_payment_request";
    TransactionTransactionSourceCategoryEnum["DisputeResolution"] = "dispute_resolution";
    TransactionTransactionSourceCategoryEnum["EmpyrealCashDeposit"] = "empyreal_cash_deposit";
    TransactionTransactionSourceCategoryEnum["InboundAchTransfer"] = "inbound_ach_transfer";
    TransactionTransactionSourceCategoryEnum["InboundAchTransferReturnIntention"] = "inbound_ach_transfer_return_intention";
    TransactionTransactionSourceCategoryEnum["InboundCheck"] = "inbound_check";
    TransactionTransactionSourceCategoryEnum["InboundInternationalAchTransfer"] = "inbound_international_ach_transfer";
    TransactionTransactionSourceCategoryEnum["InboundRealTimePaymentsTransferConfirmation"] = "inbound_real_time_payments_transfer_confirmation";
    TransactionTransactionSourceCategoryEnum["InboundWireDrawdownPaymentReversal"] = "inbound_wire_drawdown_payment_reversal";
    TransactionTransactionSourceCategoryEnum["InboundWireDrawdownPayment"] = "inbound_wire_drawdown_payment";
    TransactionTransactionSourceCategoryEnum["InboundWireReversal"] = "inbound_wire_reversal";
    TransactionTransactionSourceCategoryEnum["InboundWireTransfer"] = "inbound_wire_transfer";
    TransactionTransactionSourceCategoryEnum["InterestPayment"] = "interest_payment";
    TransactionTransactionSourceCategoryEnum["InternalGeneralLedgerTransaction"] = "internal_general_ledger_transaction";
    TransactionTransactionSourceCategoryEnum["InternalSource"] = "internal_source";
    TransactionTransactionSourceCategoryEnum["CardRouteRefund"] = "card_route_refund";
    TransactionTransactionSourceCategoryEnum["CardRouteSettlement"] = "card_route_settlement";
    TransactionTransactionSourceCategoryEnum["RealTimePaymentsTransferAcknowledgement"] = "real_time_payments_transfer_acknowledgement";
    TransactionTransactionSourceCategoryEnum["SampleFunds"] = "sample_funds";
    TransactionTransactionSourceCategoryEnum["WireDrawdownPaymentIntention"] = "wire_drawdown_payment_intention";
    TransactionTransactionSourceCategoryEnum["WireDrawdownPaymentRejection"] = "wire_drawdown_payment_rejection";
    TransactionTransactionSourceCategoryEnum["WireTransferIntention"] = "wire_transfer_intention";
    TransactionTransactionSourceCategoryEnum["WireTransferRejection"] = "wire_transfer_rejection";
    TransactionTransactionSourceCategoryEnum["Other"] = "other";
})(TransactionTransactionSourceCategoryEnum = exports.TransactionTransactionSourceCategoryEnum || (exports.TransactionTransactionSourceCategoryEnum = {}));
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
 */
var TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum;
(function (TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum) {
    TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = exports.TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum || (exports.TransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = {}));
/**
 * A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.
 */
var TransactionTransactionSourceCheckDepositAcceptance = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceCheckDepositAcceptance, _super);
    function TransactionTransactionSourceCheckDepositAcceptance() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckDepositAcceptance.prototype, "accountNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceCheckDepositAcceptance.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auxiliary_on_us" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckDepositAcceptance.prototype, "auxiliaryOnUs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_deposit_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckDepositAcceptance.prototype, "checkDepositId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckDepositAcceptance.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routing_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckDepositAcceptance.prototype, "routingNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serial_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckDepositAcceptance.prototype, "serialNumber", void 0);
    return TransactionTransactionSourceCheckDepositAcceptance;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceCheckDepositAcceptance = TransactionTransactionSourceCheckDepositAcceptance;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
 */
var TransactionTransactionSourceCheckDepositReturnCurrencyEnum;
(function (TransactionTransactionSourceCheckDepositReturnCurrencyEnum) {
    TransactionTransactionSourceCheckDepositReturnCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceCheckDepositReturnCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceCheckDepositReturnCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceCheckDepositReturnCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceCheckDepositReturnCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceCheckDepositReturnCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceCheckDepositReturnCurrencyEnum = exports.TransactionTransactionSourceCheckDepositReturnCurrencyEnum || (exports.TransactionTransactionSourceCheckDepositReturnCurrencyEnum = {}));
var TransactionTransactionSourceCheckDepositReturnReturnReasonEnum;
(function (TransactionTransactionSourceCheckDepositReturnReturnReasonEnum) {
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["AchConversionNotSupported"] = "ach_conversion_not_supported";
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["ClosedAccount"] = "closed_account";
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["DuplicateSubmission"] = "duplicate_submission";
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["InsufficientFunds"] = "insufficient_funds";
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["NoAccount"] = "no_account";
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["NotAuthorized"] = "not_authorized";
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["StaleDated"] = "stale_dated";
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["StopPayment"] = "stop_payment";
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["UnknownReason"] = "unknown_reason";
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["UnmatchedDetails"] = "unmatched_details";
    TransactionTransactionSourceCheckDepositReturnReturnReasonEnum["UnreadableImage"] = "unreadable_image";
})(TransactionTransactionSourceCheckDepositReturnReturnReasonEnum = exports.TransactionTransactionSourceCheckDepositReturnReturnReasonEnum || (exports.TransactionTransactionSourceCheckDepositReturnReturnReasonEnum = {}));
/**
 * A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.
 */
var TransactionTransactionSourceCheckDepositReturn = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceCheckDepositReturn, _super);
    function TransactionTransactionSourceCheckDepositReturn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceCheckDepositReturn.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_deposit_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckDepositReturn.prototype, "checkDepositId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckDepositReturn.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "return_reason" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckDepositReturn.prototype, "returnReason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "returned_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceCheckDepositReturn.prototype, "returnedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckDepositReturn.prototype, "transactionId", void 0);
    return TransactionTransactionSourceCheckDepositReturn;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceCheckDepositReturn = TransactionTransactionSourceCheckDepositReturn;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.
 */
var TransactionTransactionSourceCheckTransferIntentionCurrencyEnum;
(function (TransactionTransactionSourceCheckTransferIntentionCurrencyEnum) {
    TransactionTransactionSourceCheckTransferIntentionCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceCheckTransferIntentionCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceCheckTransferIntentionCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceCheckTransferIntentionCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceCheckTransferIntentionCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceCheckTransferIntentionCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceCheckTransferIntentionCurrencyEnum = exports.TransactionTransactionSourceCheckTransferIntentionCurrencyEnum || (exports.TransactionTransactionSourceCheckTransferIntentionCurrencyEnum = {}));
/**
 * A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.
 */
var TransactionTransactionSourceCheckTransferIntention = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceCheckTransferIntention, _super);
    function TransactionTransactionSourceCheckTransferIntention() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_city" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferIntention.prototype, "addressCity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_line1" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferIntention.prototype, "addressLine1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_line2" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferIntention.prototype, "addressLine2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_state" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferIntention.prototype, "addressState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_zip" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferIntention.prototype, "addressZip", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceCheckTransferIntention.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferIntention.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recipient_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferIntention.prototype, "recipientName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferIntention.prototype, "transferId", void 0);
    return TransactionTransactionSourceCheckTransferIntention;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceCheckTransferIntention = TransactionTransactionSourceCheckTransferIntention;
/**
 * A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.
 */
var TransactionTransactionSourceCheckTransferRejection = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceCheckTransferRejection, _super);
    function TransactionTransactionSourceCheckTransferRejection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferRejection.prototype, "transferId", void 0);
    return TransactionTransactionSourceCheckTransferRejection;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceCheckTransferRejection = TransactionTransactionSourceCheckTransferRejection;
/**
 * A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.
 */
var TransactionTransactionSourceCheckTransferReturn = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceCheckTransferReturn, _super);
    function TransactionTransactionSourceCheckTransferReturn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "file_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferReturn.prototype, "fileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferReturn.prototype, "transferId", void 0);
    return TransactionTransactionSourceCheckTransferReturn;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceCheckTransferReturn = TransactionTransactionSourceCheckTransferReturn;
/**
 * A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.
 */
var TransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum;
(function (TransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum) {
    TransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum["CheckTransferStopPaymentRequest"] = "check_transfer_stop_payment_request";
})(TransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum = exports.TransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum || (exports.TransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum = {}));
/**
 * A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.
 */
var TransactionTransactionSourceCheckTransferStopPaymentRequest = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceCheckTransferStopPaymentRequest, _super);
    function TransactionTransactionSourceCheckTransferStopPaymentRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "requested_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceCheckTransferStopPaymentRequest.prototype, "requestedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferStopPaymentRequest.prototype, "transactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferStopPaymentRequest.prototype, "transferId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceCheckTransferStopPaymentRequest.prototype, "type", void 0);
    return TransactionTransactionSourceCheckTransferStopPaymentRequest;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceCheckTransferStopPaymentRequest = TransactionTransactionSourceCheckTransferStopPaymentRequest;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
 */
var TransactionTransactionSourceDisputeResolutionCurrencyEnum;
(function (TransactionTransactionSourceDisputeResolutionCurrencyEnum) {
    TransactionTransactionSourceDisputeResolutionCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceDisputeResolutionCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceDisputeResolutionCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceDisputeResolutionCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceDisputeResolutionCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceDisputeResolutionCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceDisputeResolutionCurrencyEnum = exports.TransactionTransactionSourceDisputeResolutionCurrencyEnum || (exports.TransactionTransactionSourceDisputeResolutionCurrencyEnum = {}));
/**
 * A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.
 */
var TransactionTransactionSourceDisputeResolution = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceDisputeResolution, _super);
    function TransactionTransactionSourceDisputeResolution() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceDisputeResolution.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDisputeResolution.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disputed_transaction_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceDisputeResolution.prototype, "disputedTransactionId", void 0);
    return TransactionTransactionSourceDisputeResolution;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceDisputeResolution = TransactionTransactionSourceDisputeResolution;
/**
 * A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.
 */
var TransactionTransactionSourceEmpyrealCashDeposit = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceEmpyrealCashDeposit, _super);
    function TransactionTransactionSourceEmpyrealCashDeposit() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceEmpyrealCashDeposit.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bag_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceEmpyrealCashDeposit.prototype, "bagId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deposit_date" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceEmpyrealCashDeposit.prototype, "depositDate", void 0);
    return TransactionTransactionSourceEmpyrealCashDeposit;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceEmpyrealCashDeposit = TransactionTransactionSourceEmpyrealCashDeposit;
/**
 * A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.
 */
var TransactionTransactionSourceInboundACHTransfer = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceInboundACHTransfer, _super);
    function TransactionTransactionSourceInboundACHTransfer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInboundACHTransfer.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_company_descriptive_date" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundACHTransfer.prototype, "originatorCompanyDescriptiveDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_company_discretionary_data" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundACHTransfer.prototype, "originatorCompanyDiscretionaryData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_company_entry_description" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundACHTransfer.prototype, "originatorCompanyEntryDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_company_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundACHTransfer.prototype, "originatorCompanyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_company_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundACHTransfer.prototype, "originatorCompanyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiver_id_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundACHTransfer.prototype, "receiverIdNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiver_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundACHTransfer.prototype, "receiverName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trace_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundACHTransfer.prototype, "traceNumber", void 0);
    return TransactionTransactionSourceInboundACHTransfer;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceInboundACHTransfer = TransactionTransactionSourceInboundACHTransfer;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
 */
var TransactionTransactionSourceInboundCheckCurrencyEnum;
(function (TransactionTransactionSourceInboundCheckCurrencyEnum) {
    TransactionTransactionSourceInboundCheckCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceInboundCheckCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceInboundCheckCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceInboundCheckCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceInboundCheckCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceInboundCheckCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceInboundCheckCurrencyEnum = exports.TransactionTransactionSourceInboundCheckCurrencyEnum || (exports.TransactionTransactionSourceInboundCheckCurrencyEnum = {}));
/**
 * A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.
 */
var TransactionTransactionSourceInboundCheck = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceInboundCheck, _super);
    function TransactionTransactionSourceInboundCheck() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInboundCheck.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_front_image_file_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundCheck.prototype, "checkFrontImageFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundCheck.prototype, "checkNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_rear_image_file_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundCheck.prototype, "checkRearImageFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundCheck.prototype, "currency", void 0);
    return TransactionTransactionSourceInboundCheck;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceInboundCheck = TransactionTransactionSourceInboundCheck;
/**
 * A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.
 */
var TransactionTransactionSourceInboundInternationalACHTransfer = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceInboundInternationalACHTransfer, _super);
    function TransactionTransactionSourceInboundInternationalACHTransfer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destination_country_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "destinationCountryCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destination_currency_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "destinationCurrencyCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "foreign_exchange_indicator" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "foreignExchangeIndicator", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "foreign_exchange_reference" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "foreignExchangeReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "foreign_exchange_reference_indicator" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "foreignExchangeReferenceIndicator", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "foreign_payment_amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "foreignPaymentAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "foreign_trace_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "foreignTraceNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "international_transaction_type_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "internationalTransactionTypeCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originating_currency_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatingCurrencyCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({
            name: "originating_depository_financial_institution_branch_country",
        }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatingDepositoryFinancialInstitutionBranchCountry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originating_depository_financial_institution_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatingDepositoryFinancialInstitutionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originating_depository_financial_institution_id_qualifier" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatingDepositoryFinancialInstitutionIdQualifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originating_depository_financial_institution_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatingDepositoryFinancialInstitutionName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_city" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatorCity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_company_entry_description" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatorCompanyEntryDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_country" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatorCountry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_identification" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatorIdentification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatorName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_postal_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatorPostalCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_state_or_province" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatorStateOrProvince", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_street_address" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "originatorStreetAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "payment_related_information" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "paymentRelatedInformation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "payment_related_information2" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "paymentRelatedInformation2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiver_city" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receiverCity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiver_country" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receiverCountry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiver_identification_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receiverIdentificationNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiver_postal_code" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receiverPostalCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiver_state_or_province" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receiverStateOrProvince", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiver_street_address" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receiverStreetAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiving_company_or_individual_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receivingCompanyOrIndividualName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiving_depository_financial_institution_country" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receivingDepositoryFinancialInstitutionCountry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiving_depository_financial_institution_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receivingDepositoryFinancialInstitutionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiving_depository_financial_institution_id_qualifier" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receivingDepositoryFinancialInstitutionIdQualifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiving_depository_financial_institution_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "receivingDepositoryFinancialInstitutionName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trace_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundInternationalACHTransfer.prototype, "traceNumber", void 0);
    return TransactionTransactionSourceInboundInternationalACHTransfer;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceInboundInternationalACHTransfer = TransactionTransactionSourceInboundInternationalACHTransfer;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be "USD" for a Real Time Payments transfer.
 */
var TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum;
(function (TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum) {
    TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = exports.TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum || (exports.TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = {}));
/**
 * A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.
 */
var TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation, _super);
    function TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creditor_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation.prototype, "creditorName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "debtor_account_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation.prototype, "debtorAccountNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "debtor_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation.prototype, "debtorName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "debtor_routing_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation.prototype, "debtorRoutingNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "remittance_information" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation.prototype, "remittanceInformation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_identification" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation.prototype, "transactionIdentification", void 0);
    return TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation = TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation;
/**
 * A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.
 */
var TransactionTransactionSourceInboundWireDrawdownPayment = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceInboundWireDrawdownPayment, _super);
    function TransactionTransactionSourceInboundWireDrawdownPayment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beneficiary_address_line1" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "beneficiaryAddressLine1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beneficiary_address_line2" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "beneficiaryAddressLine2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beneficiary_address_line3" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "beneficiaryAddressLine3", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beneficiary_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "beneficiaryName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beneficiary_reference" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "beneficiaryReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_message_accountability_data" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "inputMessageAccountabilityData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_address_line1" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "originatorAddressLine1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_address_line2" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "originatorAddressLine2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_address_line3" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "originatorAddressLine3", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "originatorName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_to_beneficiary_information" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPayment.prototype, "originatorToBeneficiaryInformation", void 0);
    return TransactionTransactionSourceInboundWireDrawdownPayment;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceInboundWireDrawdownPayment = TransactionTransactionSourceInboundWireDrawdownPayment;
/**
 * A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.
 */
var TransactionTransactionSourceInboundWireDrawdownPaymentReversal = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceInboundWireDrawdownPaymentReversal, _super);
    function TransactionTransactionSourceInboundWireDrawdownPaymentReversal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInboundWireDrawdownPaymentReversal.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPaymentReversal.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_cycle_date" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceInboundWireDrawdownPaymentReversal.prototype, "inputCycleDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_message_accountability_data" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPaymentReversal.prototype, "inputMessageAccountabilityData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_sequence_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPaymentReversal.prototype, "inputSequenceNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_source" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPaymentReversal.prototype, "inputSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previous_message_input_cycle_date" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceInboundWireDrawdownPaymentReversal.prototype, "previousMessageInputCycleDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previous_message_input_message_accountability_data" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPaymentReversal.prototype, "previousMessageInputMessageAccountabilityData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previous_message_input_sequence_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPaymentReversal.prototype, "previousMessageInputSequenceNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previous_message_input_source" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireDrawdownPaymentReversal.prototype, "previousMessageInputSource", void 0);
    return TransactionTransactionSourceInboundWireDrawdownPaymentReversal;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceInboundWireDrawdownPaymentReversal = TransactionTransactionSourceInboundWireDrawdownPaymentReversal;
/**
 * A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.
 */
var TransactionTransactionSourceInboundWireReversal = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceInboundWireReversal, _super);
    function TransactionTransactionSourceInboundWireReversal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({
            name: "financial_institution_to_financial_institution_information",
        }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "financialInstitutionToFinancialInstitutionInformation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_cycle_date" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "inputCycleDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_message_accountability_data" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "inputMessageAccountabilityData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_sequence_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "inputSequenceNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_source" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "inputSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previous_message_input_cycle_date" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "previousMessageInputCycleDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previous_message_input_message_accountability_data" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "previousMessageInputMessageAccountabilityData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previous_message_input_sequence_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "previousMessageInputSequenceNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previous_message_input_source" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "previousMessageInputSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "receiver_financial_institution_information" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireReversal.prototype, "receiverFinancialInstitutionInformation", void 0);
    return TransactionTransactionSourceInboundWireReversal;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceInboundWireReversal = TransactionTransactionSourceInboundWireReversal;
/**
 * A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.
 */
var TransactionTransactionSourceInboundWireTransfer = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceInboundWireTransfer, _super);
    function TransactionTransactionSourceInboundWireTransfer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beneficiary_address_line1" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "beneficiaryAddressLine1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beneficiary_address_line2" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "beneficiaryAddressLine2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beneficiary_address_line3" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "beneficiaryAddressLine3", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beneficiary_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "beneficiaryName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beneficiary_reference" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "beneficiaryReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_message_accountability_data" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "inputMessageAccountabilityData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_address_line1" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "originatorAddressLine1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_address_line2" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "originatorAddressLine2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_address_line3" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "originatorAddressLine3", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_name" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "originatorName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_to_beneficiary_information" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "originatorToBeneficiaryInformation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_to_beneficiary_information_line1" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "originatorToBeneficiaryInformationLine1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_to_beneficiary_information_line2" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "originatorToBeneficiaryInformationLine2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_to_beneficiary_information_line3" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "originatorToBeneficiaryInformationLine3", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator_to_beneficiary_information_line4" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInboundWireTransfer.prototype, "originatorToBeneficiaryInformationLine4", void 0);
    return TransactionTransactionSourceInboundWireTransfer;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceInboundWireTransfer = TransactionTransactionSourceInboundWireTransfer;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
 */
var TransactionTransactionSourceInterestPaymentCurrencyEnum;
(function (TransactionTransactionSourceInterestPaymentCurrencyEnum) {
    TransactionTransactionSourceInterestPaymentCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceInterestPaymentCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceInterestPaymentCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceInterestPaymentCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceInterestPaymentCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceInterestPaymentCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceInterestPaymentCurrencyEnum = exports.TransactionTransactionSourceInterestPaymentCurrencyEnum || (exports.TransactionTransactionSourceInterestPaymentCurrencyEnum = {}));
/**
 * A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.
 */
var TransactionTransactionSourceInterestPayment = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceInterestPayment, _super);
    function TransactionTransactionSourceInterestPayment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accrued_on_account_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInterestPayment.prototype, "accruedOnAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInterestPayment.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInterestPayment.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "period_end" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceInterestPayment.prototype, "periodEnd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "period_start" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionTransactionSourceInterestPayment.prototype, "periodStart", void 0);
    return TransactionTransactionSourceInterestPayment;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceInterestPayment = TransactionTransactionSourceInterestPayment;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
 */
var TransactionTransactionSourceInternalSourceCurrencyEnum;
(function (TransactionTransactionSourceInternalSourceCurrencyEnum) {
    TransactionTransactionSourceInternalSourceCurrencyEnum["Cad"] = "CAD";
    TransactionTransactionSourceInternalSourceCurrencyEnum["Chf"] = "CHF";
    TransactionTransactionSourceInternalSourceCurrencyEnum["Eur"] = "EUR";
    TransactionTransactionSourceInternalSourceCurrencyEnum["Gbp"] = "GBP";
    TransactionTransactionSourceInternalSourceCurrencyEnum["Jpy"] = "JPY";
    TransactionTransactionSourceInternalSourceCurrencyEnum["Usd"] = "USD";
})(TransactionTransactionSourceInternalSourceCurrencyEnum = exports.TransactionTransactionSourceInternalSourceCurrencyEnum || (exports.TransactionTransactionSourceInternalSourceCurrencyEnum = {}));
var TransactionTransactionSourceInternalSourceReasonEnum;
(function (TransactionTransactionSourceInternalSourceReasonEnum) {
    TransactionTransactionSourceInternalSourceReasonEnum["BankMigration"] = "bank_migration";
    TransactionTransactionSourceInternalSourceReasonEnum["Cashback"] = "cashback";
    TransactionTransactionSourceInternalSourceReasonEnum["EmpyrealAdjustment"] = "empyreal_adjustment";
    TransactionTransactionSourceInternalSourceReasonEnum["Error"] = "error";
    TransactionTransactionSourceInternalSourceReasonEnum["ErrorCorrection"] = "error_correction";
    TransactionTransactionSourceInternalSourceReasonEnum["Fees"] = "fees";
    TransactionTransactionSourceInternalSourceReasonEnum["Interest"] = "interest";
    TransactionTransactionSourceInternalSourceReasonEnum["SampleFunds"] = "sample_funds";
    TransactionTransactionSourceInternalSourceReasonEnum["SampleFundsReturn"] = "sample_funds_return";
})(TransactionTransactionSourceInternalSourceReasonEnum = exports.TransactionTransactionSourceInternalSourceReasonEnum || (exports.TransactionTransactionSourceInternalSourceReasonEnum = {}));
/**
 * A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.
 */
var TransactionTransactionSourceInternalSource = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceInternalSource, _super);
    function TransactionTransactionSourceInternalSource() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceInternalSource.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInternalSource.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reason" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceInternalSource.prototype, "reason", void 0);
    return TransactionTransactionSourceInternalSource;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceInternalSource = TransactionTransactionSourceInternalSource;
/**
 * A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.
 */
var TransactionTransactionSourceSampleFunds = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceSampleFunds, _super);
    function TransactionTransactionSourceSampleFunds() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originator" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceSampleFunds.prototype, "originator", void 0);
    return TransactionTransactionSourceSampleFunds;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceSampleFunds = TransactionTransactionSourceSampleFunds;
/**
 * A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.
 */
var TransactionTransactionSourceWireDrawdownPaymentIntention = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceWireDrawdownPaymentIntention, _super);
    function TransactionTransactionSourceWireDrawdownPaymentIntention() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceWireDrawdownPaymentIntention.prototype, "accountNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceWireDrawdownPaymentIntention.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message_to_recipient" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceWireDrawdownPaymentIntention.prototype, "messageToRecipient", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routing_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceWireDrawdownPaymentIntention.prototype, "routingNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceWireDrawdownPaymentIntention.prototype, "transferId", void 0);
    return TransactionTransactionSourceWireDrawdownPaymentIntention;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceWireDrawdownPaymentIntention = TransactionTransactionSourceWireDrawdownPaymentIntention;
/**
 * A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.
 */
var TransactionTransactionSourceWireDrawdownPaymentRejection = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceWireDrawdownPaymentRejection, _super);
    function TransactionTransactionSourceWireDrawdownPaymentRejection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceWireDrawdownPaymentRejection.prototype, "transferId", void 0);
    return TransactionTransactionSourceWireDrawdownPaymentRejection;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceWireDrawdownPaymentRejection = TransactionTransactionSourceWireDrawdownPaymentRejection;
/**
 * A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.
 */
var TransactionTransactionSourceWireTransferIntention = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceWireTransferIntention, _super);
    function TransactionTransactionSourceWireTransferIntention() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceWireTransferIntention.prototype, "accountNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionTransactionSourceWireTransferIntention.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message_to_recipient" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceWireTransferIntention.prototype, "messageToRecipient", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routing_number" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceWireTransferIntention.prototype, "routingNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceWireTransferIntention.prototype, "transferId", void 0);
    return TransactionTransactionSourceWireTransferIntention;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceWireTransferIntention = TransactionTransactionSourceWireTransferIntention;
/**
 * A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.
 */
var TransactionTransactionSourceWireTransferRejection = /** @class */ (function (_super) {
    __extends(TransactionTransactionSourceWireTransferRejection, _super);
    function TransactionTransactionSourceWireTransferRejection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], TransactionTransactionSourceWireTransferRejection.prototype, "transferId", void 0);
    return TransactionTransactionSourceWireTransferRejection;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSourceWireTransferRejection = TransactionTransactionSourceWireTransferRejection;
/**
 * This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
 */
var TransactionTransactionSource = /** @class */ (function (_super) {
    __extends(TransactionTransactionSource, _super);
    function TransactionTransactionSource() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_transfer_intention" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceAccountTransferIntention; }),
        __metadata("design:type", TransactionTransactionSourceAccountTransferIntention)
    ], TransactionTransactionSource.prototype, "accountTransferIntention", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ach_check_conversion" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceACHCheckConversion; }),
        __metadata("design:type", TransactionTransactionSourceACHCheckConversion)
    ], TransactionTransactionSource.prototype, "achCheckConversion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ach_check_conversion_return" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceACHCheckConversionReturn; }),
        __metadata("design:type", TransactionTransactionSourceACHCheckConversionReturn)
    ], TransactionTransactionSource.prototype, "achCheckConversionReturn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ach_transfer_intention" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceACHTransferIntention; }),
        __metadata("design:type", TransactionTransactionSourceACHTransferIntention)
    ], TransactionTransactionSource.prototype, "achTransferIntention", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ach_transfer_rejection" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceACHTransferRejection; }),
        __metadata("design:type", TransactionTransactionSourceACHTransferRejection)
    ], TransactionTransactionSource.prototype, "achTransferRejection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ach_transfer_return" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceACHTransferReturn; }),
        __metadata("design:type", TransactionTransactionSourceACHTransferReturn)
    ], TransactionTransactionSource.prototype, "achTransferReturn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "card_dispute_acceptance" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceCardDisputeAcceptance; }),
        __metadata("design:type", TransactionTransactionSourceCardDisputeAcceptance)
    ], TransactionTransactionSource.prototype, "cardDisputeAcceptance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "card_refund" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceCardRefund; }),
        __metadata("design:type", TransactionTransactionSourceCardRefund)
    ], TransactionTransactionSource.prototype, "cardRefund", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "card_route_refund" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceDeprecatedCardRefund; }),
        __metadata("design:type", TransactionTransactionSourceDeprecatedCardRefund)
    ], TransactionTransactionSource.prototype, "cardRouteRefund", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "card_route_settlement" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceDeprecatedCardSettlement; }),
        __metadata("design:type", TransactionTransactionSourceDeprecatedCardSettlement)
    ], TransactionTransactionSource.prototype, "cardRouteSettlement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "card_settlement" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceCardSettlement; }),
        __metadata("design:type", TransactionTransactionSourceCardSettlement)
    ], TransactionTransactionSource.prototype, "cardSettlement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "category" }),
        __metadata("design:type", String)
    ], TransactionTransactionSource.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_deposit_acceptance" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceCheckDepositAcceptance; }),
        __metadata("design:type", TransactionTransactionSourceCheckDepositAcceptance)
    ], TransactionTransactionSource.prototype, "checkDepositAcceptance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_deposit_return" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceCheckDepositReturn; }),
        __metadata("design:type", TransactionTransactionSourceCheckDepositReturn)
    ], TransactionTransactionSource.prototype, "checkDepositReturn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_transfer_intention" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceCheckTransferIntention; }),
        __metadata("design:type", TransactionTransactionSourceCheckTransferIntention)
    ], TransactionTransactionSource.prototype, "checkTransferIntention", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_transfer_rejection" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceCheckTransferRejection; }),
        __metadata("design:type", TransactionTransactionSourceCheckTransferRejection)
    ], TransactionTransactionSource.prototype, "checkTransferRejection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_transfer_return" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceCheckTransferReturn; }),
        __metadata("design:type", TransactionTransactionSourceCheckTransferReturn)
    ], TransactionTransactionSource.prototype, "checkTransferReturn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_transfer_stop_payment_request" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceCheckTransferStopPaymentRequest; }),
        __metadata("design:type", TransactionTransactionSourceCheckTransferStopPaymentRequest)
    ], TransactionTransactionSource.prototype, "checkTransferStopPaymentRequest", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dispute_resolution" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceDisputeResolution; }),
        __metadata("design:type", TransactionTransactionSourceDisputeResolution)
    ], TransactionTransactionSource.prototype, "disputeResolution", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "empyreal_cash_deposit" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceEmpyrealCashDeposit; }),
        __metadata("design:type", TransactionTransactionSourceEmpyrealCashDeposit)
    ], TransactionTransactionSource.prototype, "empyrealCashDeposit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inbound_ach_transfer" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceInboundACHTransfer; }),
        __metadata("design:type", TransactionTransactionSourceInboundACHTransfer)
    ], TransactionTransactionSource.prototype, "inboundAchTransfer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inbound_check" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceInboundCheck; }),
        __metadata("design:type", TransactionTransactionSourceInboundCheck)
    ], TransactionTransactionSource.prototype, "inboundCheck", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inbound_international_ach_transfer" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceInboundInternationalACHTransfer; }),
        __metadata("design:type", TransactionTransactionSourceInboundInternationalACHTransfer)
    ], TransactionTransactionSource.prototype, "inboundInternationalAchTransfer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inbound_real_time_payments_transfer_confirmation" }),
        (0, class_transformer_1.Type)(function () {
            return TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation;
        }),
        __metadata("design:type", TransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation)
    ], TransactionTransactionSource.prototype, "inboundRealTimePaymentsTransferConfirmation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inbound_wire_drawdown_payment" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceInboundWireDrawdownPayment; }),
        __metadata("design:type", TransactionTransactionSourceInboundWireDrawdownPayment)
    ], TransactionTransactionSource.prototype, "inboundWireDrawdownPayment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inbound_wire_drawdown_payment_reversal" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceInboundWireDrawdownPaymentReversal; }),
        __metadata("design:type", TransactionTransactionSourceInboundWireDrawdownPaymentReversal)
    ], TransactionTransactionSource.prototype, "inboundWireDrawdownPaymentReversal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inbound_wire_reversal" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceInboundWireReversal; }),
        __metadata("design:type", TransactionTransactionSourceInboundWireReversal)
    ], TransactionTransactionSource.prototype, "inboundWireReversal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inbound_wire_transfer" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceInboundWireTransfer; }),
        __metadata("design:type", TransactionTransactionSourceInboundWireTransfer)
    ], TransactionTransactionSource.prototype, "inboundWireTransfer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "interest_payment" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceInterestPayment; }),
        __metadata("design:type", TransactionTransactionSourceInterestPayment)
    ], TransactionTransactionSource.prototype, "interestPayment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "internal_source" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceInternalSource; }),
        __metadata("design:type", TransactionTransactionSourceInternalSource)
    ], TransactionTransactionSource.prototype, "internalSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sample_funds" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceSampleFunds; }),
        __metadata("design:type", TransactionTransactionSourceSampleFunds)
    ], TransactionTransactionSource.prototype, "sampleFunds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "wire_drawdown_payment_intention" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceWireDrawdownPaymentIntention; }),
        __metadata("design:type", TransactionTransactionSourceWireDrawdownPaymentIntention)
    ], TransactionTransactionSource.prototype, "wireDrawdownPaymentIntention", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "wire_drawdown_payment_rejection" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceWireDrawdownPaymentRejection; }),
        __metadata("design:type", TransactionTransactionSourceWireDrawdownPaymentRejection)
    ], TransactionTransactionSource.prototype, "wireDrawdownPaymentRejection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "wire_transfer_intention" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceWireTransferIntention; }),
        __metadata("design:type", TransactionTransactionSourceWireTransferIntention)
    ], TransactionTransactionSource.prototype, "wireTransferIntention", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "wire_transfer_rejection" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSourceWireTransferRejection; }),
        __metadata("design:type", TransactionTransactionSourceWireTransferRejection)
    ], TransactionTransactionSource.prototype, "wireTransferRejection", void 0);
    return TransactionTransactionSource;
}(utils_1.SpeakeasyBase));
exports.TransactionTransactionSource = TransactionTransactionSource;
/**
 * A constant representing the object's type. For this resource it will always be `transaction`.
 */
var TransactionTypeEnum;
(function (TransactionTypeEnum) {
    TransactionTypeEnum["Transaction"] = "transaction";
})(TransactionTypeEnum = exports.TransactionTypeEnum || (exports.TransactionTypeEnum = {}));
/**
 * Transactions are the immutable additions and removals of money from your bank account. They're the equivalent of line items on your bank statement.
 */
var Transaction = /** @class */ (function (_super) {
    __extends(Transaction, _super);
    function Transaction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_id" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], Transaction.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Transaction.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "route_id" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "routeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "route_type" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "routeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "source" }),
        (0, class_transformer_1.Type)(function () { return TransactionTransactionSource; }),
        __metadata("design:type", TransactionTransactionSource)
    ], Transaction.prototype, "source", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "type", void 0);
    return Transaction;
}(utils_1.SpeakeasyBase));
exports.Transaction = Transaction;
