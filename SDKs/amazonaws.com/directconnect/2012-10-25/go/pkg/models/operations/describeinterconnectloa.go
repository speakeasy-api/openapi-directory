// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeInterconnectLoaXAmzTargetEnum
type DescribeInterconnectLoaXAmzTargetEnum string

const (
	DescribeInterconnectLoaXAmzTargetEnumOvertureServiceDescribeInterconnectLoa DescribeInterconnectLoaXAmzTargetEnum = "OvertureService.DescribeInterconnectLoa"
)

func (e *DescribeInterconnectLoaXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OvertureService.DescribeInterconnectLoa":
		*e = DescribeInterconnectLoaXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeInterconnectLoaXAmzTargetEnum: %s", s)
	}
}

type DescribeInterconnectLoaRequest struct {
	DescribeInterconnectLoaRequest shared.DescribeInterconnectLoaRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     DescribeInterconnectLoaXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeInterconnectLoaResponse struct {
	ContentType string
	// Success
	DescribeInterconnectLoaResponse *shared.DescribeInterconnectLoaResponse
	// DirectConnectClientException
	DirectConnectClientException interface{}
	// DirectConnectServerException
	DirectConnectServerException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
}
