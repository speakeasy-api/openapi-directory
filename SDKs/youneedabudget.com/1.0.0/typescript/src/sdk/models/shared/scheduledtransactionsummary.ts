/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The scheduled transaction flag
 */
export enum ScheduledTransactionSummaryFlagColorEnum {
  Red = "red",
  Orange = "orange",
  Yellow = "yellow",
  Green = "green",
  Blue = "blue",
  Purple = "purple",
  Null = "null",
}

export enum ScheduledTransactionSummaryFrequencyEnum {
  Never = "never",
  Daily = "daily",
  Weekly = "weekly",
  EveryOtherWeek = "everyOtherWeek",
  TwiceAMonth = "twiceAMonth",
  Every4Weeks = "every4Weeks",
  Monthly = "monthly",
  EveryOtherMonth = "everyOtherMonth",
  Every3Months = "every3Months",
  Every4Months = "every4Months",
  TwiceAYear = "twiceAYear",
  Yearly = "yearly",
  EveryOtherYear = "everyOtherYear",
}

export class ScheduledTransactionSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId: string;

  /**
   * The scheduled transaction amount in milliunits format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "category_id" })
  categoryId?: string;

  /**
   * The first date for which the Scheduled Transaction was scheduled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_first" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateFirst: Date;

  /**
   * The next date for which the Scheduled Transaction is scheduled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_next" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateNext: Date;

  /**
   * Whether or not the scheduled transaction has been deleted.  Deleted scheduled transactions will only be included in delta requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted: boolean;

  /**
   * The scheduled transaction flag
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flag_color" })
  flagColor?: ScheduledTransactionSummaryFlagColorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "frequency" })
  frequency: ScheduledTransactionSummaryFrequencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo" })
  memo?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_id" })
  payeeId?: string;

  /**
   * If a transfer, the account_id which the scheduled transaction transfers to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transfer_account_id" })
  transferAccountId?: string;
}
