// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetResourcesXAmzTargetEnum
type GetResourcesXAmzTargetEnum string

const (
	GetResourcesXAmzTargetEnumResourceGroupsTaggingApi20170126GetResources GetResourcesXAmzTargetEnum = "ResourceGroupsTaggingAPI_20170126.GetResources"
)

func (e *GetResourcesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ResourceGroupsTaggingAPI_20170126.GetResources":
		*e = GetResourcesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetResourcesXAmzTargetEnum: %s", s)
	}
}

type GetResourcesRequest struct {
	GetResourcesInput shared.GetResourcesInput `request:"mediaType=application/json"`
	// Pagination token
	PaginationToken *string `queryParam:"style=form,explode=true,name=PaginationToken"`
	// Pagination limit
	ResourcesPerPage  *string                    `queryParam:"style=form,explode=true,name=ResourcesPerPage"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetResourcesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetResourcesResponse struct {
	ContentType string
	// Success
	GetResourcesOutput *shared.GetResourcesOutput
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// PaginationTokenExpiredException
	PaginationTokenExpiredException interface{}
	StatusCode                      int
	RawResponse                     *http.Response
	// ThrottledException
	ThrottledException interface{}
}
