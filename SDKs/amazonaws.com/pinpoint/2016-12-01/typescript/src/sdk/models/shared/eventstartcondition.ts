/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventFilter } from "./eventfilter";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the settings for an event that causes a journey activity to start.
 */
export class EventStartCondition extends SpeakeasyBase {
  /**
   * Specifies the settings for an event that causes a campaign to be sent or a journey activity to be performed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EventFilter" })
  @Type(() => EventFilter)
  eventFilter?: EventFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "SegmentId" })
  segmentId?: string;
}
