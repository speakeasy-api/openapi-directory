// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FailureTypeEnum string

const (
	FailureTypeEnumJobFailed           FailureTypeEnum = "JobFailed"
	FailureTypeEnumConfigurationError  FailureTypeEnum = "ConfigurationError"
	FailureTypeEnumPermissionError     FailureTypeEnum = "PermissionError"
	FailureTypeEnumRevisionOutOfSync   FailureTypeEnum = "RevisionOutOfSync"
	FailureTypeEnumRevisionUnavailable FailureTypeEnum = "RevisionUnavailable"
	FailureTypeEnumSystemUnavailable   FailureTypeEnum = "SystemUnavailable"
)

func (e FailureTypeEnum) ToPointer() *FailureTypeEnum {
	return &e
}

func (e *FailureTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "JobFailed":
		fallthrough
	case "ConfigurationError":
		fallthrough
	case "PermissionError":
		fallthrough
	case "RevisionOutOfSync":
		fallthrough
	case "RevisionUnavailable":
		fallthrough
	case "SystemUnavailable":
		*e = FailureTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FailureTypeEnum: %v", v)
	}
}
