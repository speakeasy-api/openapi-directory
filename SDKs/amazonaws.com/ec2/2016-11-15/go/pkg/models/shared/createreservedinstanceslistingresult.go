// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum - The states of the listed Reserved Instances.
type CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum string

const (
	CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnumAvailable CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum = "available"
	CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnumSold      CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum = "sold"
	CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnumCancelled CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum = "cancelled"
	CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnumPending   CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum = "pending"
)

func (e CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum) ToPointer() *CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum {
	return &e
}

func (e *CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "available":
		fallthrough
	case "sold":
		fallthrough
	case "cancelled":
		fallthrough
	case "pending":
		*e = CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum: %v", v)
	}
}

// CreateReservedInstancesListingResultReservedInstancesListingsInstanceCounts - Describes a Reserved Instance listing state.
type CreateReservedInstancesListingResultReservedInstancesListingsInstanceCounts struct {
	InstanceCount *int64
	State         *CreateReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum
}

// CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum - The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.
type CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum string

const (
	CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnumUsd CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum = "USD"
)

func (e CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum) ToPointer() *CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum {
	return &e
}

func (e *CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "USD":
		*e = CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum: %v", v)
	}
}

// CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedules - Describes the price for a Reserved Instance.
type CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedules struct {
	Active       *bool
	CurrencyCode *CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum
	Price        *float64
	Term         *int64
}

// CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum - The status of the Reserved Instance listing.
type CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum string

const (
	CreateReservedInstancesListingResultReservedInstancesListingsStatusEnumActive    CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum = "active"
	CreateReservedInstancesListingResultReservedInstancesListingsStatusEnumPending   CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum = "pending"
	CreateReservedInstancesListingResultReservedInstancesListingsStatusEnumCancelled CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum = "cancelled"
	CreateReservedInstancesListingResultReservedInstancesListingsStatusEnumClosed    CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum = "closed"
)

func (e CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum) ToPointer() *CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum {
	return &e
}

func (e *CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "pending":
		fallthrough
	case "cancelled":
		fallthrough
	case "closed":
		*e = CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum: %v", v)
	}
}

// CreateReservedInstancesListingResultReservedInstancesListingsTags - Describes a tag.
type CreateReservedInstancesListingResultReservedInstancesListingsTags struct {
	Key   *string
	Value *string
}

// CreateReservedInstancesListingResultReservedInstancesListings - Describes a Reserved Instance listing.
type CreateReservedInstancesListingResultReservedInstancesListings struct {
	ClientToken                *string
	CreateDate                 *time.Time
	InstanceCounts             []CreateReservedInstancesListingResultReservedInstancesListingsInstanceCounts
	PriceSchedules             []CreateReservedInstancesListingResultReservedInstancesListingsPriceSchedules
	ReservedInstancesID        *string
	ReservedInstancesListingID *string
	Status                     *CreateReservedInstancesListingResultReservedInstancesListingsStatusEnum
	StatusMessage              *string
	Tags                       []CreateReservedInstancesListingResultReservedInstancesListingsTags
	UpdateDate                 *time.Time
}

// CreateReservedInstancesListingResult - Contains the output of CreateReservedInstancesListing.
type CreateReservedInstancesListingResult struct {
	ReservedInstancesListings []CreateReservedInstancesListingResultReservedInstancesListings
}
