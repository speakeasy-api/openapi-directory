"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import supportedhardwaretype_enum as shared_supportedhardwaretype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Outpost:
    r"""Information about an Outpost."""
    
    availability_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AvailabilityZone'), 'exclude': lambda f: f is None }})
    r"""The Availability Zone."""  
    availability_zone_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AvailabilityZoneId'), 'exclude': lambda f: f is None }})
    r"""The ID of the Availability Zone."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""The description of the Outpost."""  
    life_cycle_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LifeCycleStatus'), 'exclude': lambda f: f is None }})
    r"""The life cycle status."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""The name of the Outpost."""  
    outpost_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutpostArn'), 'exclude': lambda f: f is None }})
    r"""The Amazon Resource Name (ARN) of the Outpost."""  
    outpost_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutpostId'), 'exclude': lambda f: f is None }})  
    owner_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OwnerId'), 'exclude': lambda f: f is None }})
    r"""The Amazon Web Services account ID of the Outpost owner."""  
    site_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SiteArn'), 'exclude': lambda f: f is None }})
    r"""The Amazon Resource Name (ARN) of the site."""  
    site_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SiteId'), 'exclude': lambda f: f is None }})
    r"""The ID of the site."""  
    supported_hardware_type: Optional[shared_supportedhardwaretype_enum.SupportedHardwareTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SupportedHardwareType'), 'exclude': lambda f: f is None }})  
    tags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    