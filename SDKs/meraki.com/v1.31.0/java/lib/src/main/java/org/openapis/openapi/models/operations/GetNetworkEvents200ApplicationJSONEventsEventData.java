/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetNetworkEvents200ApplicationJSONEventsEventData - An object containing more data related to the event.
 */
public class GetNetworkEvents200ApplicationJSONEventsEventData {
    /**
     * The association ID of the client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aid")
    public String aid;
    public GetNetworkEvents200ApplicationJSONEventsEventData withAid(String aid) {
        this.aid = aid;
        return this;
    }
    
    /**
     * The radio channel the client is connecting to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channel")
    public String channel;
    public GetNetworkEvents200ApplicationJSONEventsEventData withChannel(String channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * The client's IP address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_ip")
    public String clientIp;
    public GetNetworkEvents200ApplicationJSONEventsEventData withClientIp(String clientIp) {
        this.clientIp = clientIp;
        return this;
    }
    
    /**
     * The client's MAC address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_mac")
    public String clientMac;
    public GetNetworkEvents200ApplicationJSONEventsEventData withClientMac(String clientMac) {
        this.clientMac = clientMac;
        return this;
    }
    
    /**
     * The radio band number the client is trying to connect to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("radio")
    public String radio;
    public GetNetworkEvents200ApplicationJSONEventsEventData withRadio(String radio) {
        this.radio = radio;
        return this;
    }
    
    /**
     * The current received signal strength indication (RSSI) of the client connected to an AP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rssi")
    public String rssi;
    public GetNetworkEvents200ApplicationJSONEventsEventData withRssi(String rssi) {
        this.rssi = rssi;
        return this;
    }
    
    /**
     * The virtual access point (VAP) number the client is connecting to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vap")
    public String vap;
    public GetNetworkEvents200ApplicationJSONEventsEventData withVap(String vap) {
        this.vap = vap;
        return this;
    }
    
}
