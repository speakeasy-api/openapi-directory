<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PrivateEnvironmentConfigInput - The configuration information for configuring a Private IP Cloud Composer environment.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PrivateEnvironmentConfigInput
{
    /**
     * Optional. When specified, the environment will use Private Service Connect instead of VPC peerings to connect to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP address from this subnetwork.
     * 
     * @var ?string $cloudComposerConnectionSubnetwork
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloudComposerConnectionSubnetwork')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cloudComposerConnectionSubnetwork = null;
    
    /**
     * Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     * @var ?string $cloudComposerNetworkIpv4CidrBlock
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloudComposerNetworkIpv4CidrBlock')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cloudComposerNetworkIpv4CidrBlock = null;
    
    /**
     * Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from `web_server_ipv4_cidr_block`.
     * 
     * @var ?string $cloudSqlIpv4CidrBlock
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloudSqlIpv4CidrBlock')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cloudSqlIpv4CidrBlock = null;
    
    /**
     * Optional. If `true`, a Private IP Cloud Composer environment is created. If this field is set to true, `IPAllocationPolicy.use_ip_aliases` must be set to true for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     * @var ?bool $enablePrivateEnvironment
     */
	#[\JMS\Serializer\Annotation\SerializedName('enablePrivateEnvironment')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enablePrivateEnvironment = null;
    
    /**
     * Optional. When enabled, IPs from public (non-RFC1918) ranges can be used for `IPAllocationPolicy.cluster_ipv4_cidr_block` and `IPAllocationPolicy.service_ipv4_cidr_block`.
     * 
     * @var ?bool $enablePrivatelyUsedPublicIps
     */
	#[\JMS\Serializer\Annotation\SerializedName('enablePrivatelyUsedPublicIps')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enablePrivatelyUsedPublicIps = null;
    
    /**
     * Configuration options for networking connections in the Composer 2 environment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkingConfig $networkingConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkingConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NetworkingConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkingConfig $networkingConfig = null;
    
    /**
     * Configuration options for the private GKE cluster in a Cloud Composer environment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PrivateClusterConfigInput $privateClusterConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('privateClusterConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PrivateClusterConfigInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PrivateClusterConfigInput $privateClusterConfig = null;
    
    /**
     * Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from `private_cluster_config.master_ipv4_cidr_block` and `cloud_sql_ipv4_cidr_block`. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     * @var ?string $webServerIpv4CidrBlock
     */
	#[\JMS\Serializer\Annotation\SerializedName('webServerIpv4CidrBlock')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $webServerIpv4CidrBlock = null;
    
	public function __construct()
	{
		$this->cloudComposerConnectionSubnetwork = null;
		$this->cloudComposerNetworkIpv4CidrBlock = null;
		$this->cloudSqlIpv4CidrBlock = null;
		$this->enablePrivateEnvironment = null;
		$this->enablePrivatelyUsedPublicIps = null;
		$this->networkingConfig = null;
		$this->privateClusterConfig = null;
		$this->webServerIpv4CidrBlock = null;
	}
}
