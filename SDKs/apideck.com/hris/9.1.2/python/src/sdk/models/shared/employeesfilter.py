"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class EmployeesFilterEmploymentStatusEnum(str, Enum):
    r"""Employment status to filter on"""
    ACTIVE = 'active'
    INACTIVE = 'inactive'
    TERMINATED = 'terminated'
    OTHER = 'other'


@dataclasses.dataclass
class EmployeesFilter:
    r"""Apply filters"""
    
    company_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'company_id' }})
    r"""Company ID to filter on"""  
    department_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'department_id' }})
    r"""ID of the department to filter on"""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'email' }})
    r"""Email to filter on"""  
    employee_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'employee_number' }})
    r"""Employee number to filter on"""  
    employment_status: Optional[EmployeesFilterEmploymentStatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'employment_status' }})
    r"""Employment status to filter on"""  
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'first_name' }})
    r"""First Name to filter on"""  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'last_name' }})
    r"""Last Name to filter on"""  
    manager_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'manager_id' }})
    r"""Manager id to filter on"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'title' }})
    r"""Job title to filter on"""  
    