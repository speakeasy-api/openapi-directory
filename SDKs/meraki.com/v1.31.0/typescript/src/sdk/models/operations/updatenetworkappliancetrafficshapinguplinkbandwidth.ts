/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The bandwidth settings for the 'cellular' uplink
 */
export class UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimitsCellular extends SpeakeasyBase {
  /**
   * The maximum download limit (integer, in Kbps). null indicates no limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitDown" })
  limitDown?: number;

  /**
   * The maximum upload limit (integer, in Kbps). null indicates no limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitUp" })
  limitUp?: number;
}

/**
 * The bandwidth settings for the 'wan1' uplink
 */
export class UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimitsWan1 extends SpeakeasyBase {
  /**
   * The maximum download limit (integer, in Kbps). null indicates no limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitDown" })
  limitDown?: number;

  /**
   * The maximum upload limit (integer, in Kbps). null indicates no limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitUp" })
  limitUp?: number;
}

/**
 * The bandwidth settings for the 'wan2' uplink
 */
export class UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimitsWan2 extends SpeakeasyBase {
  /**
   * The maximum download limit (integer, in Kbps). null indicates no limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitDown" })
  limitDown?: number;

  /**
   * The maximum upload limit (integer, in Kbps). null indicates no limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitUp" })
  limitUp?: number;
}

/**
 * A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)
 */
export class UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimits extends SpeakeasyBase {
  /**
   * The bandwidth settings for the 'cellular' uplink
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cellular" })
  @Type(
    () =>
      UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimitsCellular
  )
  cellular?: UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimitsCellular;

  /**
   * The bandwidth settings for the 'wan1' uplink
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wan1" })
  @Type(
    () =>
      UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimitsWan1
  )
  wan1?: UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimitsWan1;

  /**
   * The bandwidth settings for the 'wan2' uplink
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wan2" })
  @Type(
    () =>
      UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimitsWan2
  )
  wan2?: UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimitsWan2;
}

export class UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBody extends SpeakeasyBase {
  /**
   * A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bandwidthLimits" })
  @Type(
    () =>
      UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimits
  )
  bandwidthLimits?: UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBodyBandwidthLimits;
}

export class UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateNetworkApplianceTrafficShapingUplinkBandwidthRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class UpdateNetworkApplianceTrafficShapingUplinkBandwidthResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONObject?: Record<
    string,
    any
  >;
}
