// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailSecurity struct {
	Oauth2Legacy      *shared.SchemeOauth2Legacy      `security:"scheme,type=oauth2"`
	PrivateAppsLegacy *shared.SchemePrivateAppsLegacy `security:"scheme,type=apiKey,subtype=header"`
}

type PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailPathParams struct {
	// The id of the marketing event
	ExternalEventID string `pathParam:"style=simple,explode=false,name=externalEventId"`
	// The new subscriber state for the HubSpot contacts and the specified marketing event. For example: 'register', 'attend' or 'cancel'.
	SubscriberState string `pathParam:"style=simple,explode=false,name=subscriberState"`
}

type PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailQueryParams struct {
	// The account id associated with the marketing event
	ExternalAccountID *string `queryParam:"style=form,explode=true,name=externalAccountId"`
}

type PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailRequest struct {
	PathParams  PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailPathParams
	QueryParams PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailQueryParams
	// The details of the contacts to subscribe to the event. Parameters of join and left time if state is Attended.
	Request  shared.BatchInputMarketingEventEmailSubscriber `request:"mediaType=application/json"`
	Security PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailSecurity
}

type PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailResponse struct {
	// successful operation
	BatchResponseSubscriberEmailResponse *shared.BatchResponseSubscriberEmailResponse
	Body                                 []byte
	ContentType                          string
	StatusCode                           int
	RawResponse                          *http.Response
}
