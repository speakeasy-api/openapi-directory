/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.function.Function;
import java.util.stream.Collectors;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

/**
 * Enterprise Administration
 */
public class EnterpriseAdmin {
	
    /**
	 * ENTERPRISE_ADMIN_ADD_AUTHORIZED_SSH_KEY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_ADD_AUTHORIZED_SSH_KEY_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
    /**
	 * ENTERPRISE_ADMIN_CREATE_ENTERPRISE_SERVER_LICENSE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_CREATE_ENTERPRISE_SERVER_LICENSE_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
    /**
	 * ENTERPRISE_ADMIN_ENABLE_OR_DISABLE_MAINTENANCE_MODE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_ENABLE_OR_DISABLE_MAINTENANCE_MODE_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
    /**
	 * ENTERPRISE_ADMIN_GET_ALL_AUTHORIZED_SSH_KEYS_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_GET_ALL_AUTHORIZED_SSH_KEYS_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
    /**
	 * ENTERPRISE_ADMIN_GET_CONFIGURATION_STATUS_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_GET_CONFIGURATION_STATUS_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
    /**
	 * ENTERPRISE_ADMIN_GET_MAINTENANCE_STATUS_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_GET_MAINTENANCE_STATUS_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
    /**
	 * ENTERPRISE_ADMIN_GET_SETTINGS_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_GET_SETTINGS_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
    /**
	 * ENTERPRISE_ADMIN_REMOVE_AUTHORIZED_SSH_KEY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_REMOVE_AUTHORIZED_SSH_KEY_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
    /**
	 * ENTERPRISE_ADMIN_SET_SETTINGS_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_SET_SETTINGS_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
    /**
	 * ENTERPRISE_ADMIN_START_CONFIGURATION_PROCESS_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_START_CONFIGURATION_PROCESS_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
    /**
	 * ENTERPRISE_ADMIN_UPGRADE_LICENSE_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] ENTERPRISE_ADMIN_UPGRADE_LICENSE_SERVERS = {
        "https://{protocol}://{hostname}",
    };
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public EnterpriseAdmin(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Add an authorized SSH key
     * **Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#add-an-authorized-ssh-key - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminAddAuthorizedSshKeyResponse enterpriseAdminAddAuthorizedSshKey(org.openapis.openapi.models.operations.EnterpriseAdminAddAuthorizedSshKeyRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_ADD_AUTHORIZED_SSH_KEY_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/settings/authorized-keys");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminAddAuthorizedSshKeyResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminAddAuthorizedSshKeyResponse() {{
            sshKeys = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.SshKey[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.SshKey[].class);
                res.sshKeys = out;
            }
        }

        return res;
    }

    /**
     * Add custom labels to a self-hosted runner for an enterprise
     * Add custom labels to a self-hosted runner configured in an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#add-custom-labels-to-a-self-hosted-runner-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseResponse enterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners/{runner_id}/labels", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseResponse() {{
            enterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterprise200ApplicationJSONObject = null;
            basicError = null;
            validationErrorSimple = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterprise200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterprise200ApplicationJSON.class);
                res.enterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterprise200ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }
        else if (httpRes.statusCode() == 422) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ValidationErrorSimple out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ValidationErrorSimple.class);
                res.validationErrorSimple = out;
            }
        }

        return res;
    }

    /**
     * Add organization access to a self-hosted runner group in an enterprise
     * Adds an organization to the list of selected organizations that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see "[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise)."
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#add-organization-access-to-a-self-hosted-runner-group-in-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse enterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations/{org_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminAddOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Add a self-hosted runner to a group for an enterprise
     * Adds a self-hosted runner to a runner group configured in an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise`
     * scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#add-a-self-hosted-runner-to-a-group-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminAddSelfHostedRunnerToGroupForEnterpriseResponse enterpriseAdminAddSelfHostedRunnerToGroupForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminAddSelfHostedRunnerToGroupForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminAddSelfHostedRunnerToGroupForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners/{runner_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminAddSelfHostedRunnerToGroupForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminAddSelfHostedRunnerToGroupForEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Create a GitHub license
     * When you boot a GitHub instance for the first time, you can use the following endpoint to upload a license.
     * 
     * Note that you need to `POST` to [`/setup/api/configure`](https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#start-a-configuration-process) to start the actual configuration process.
     * 
     * When using this endpoint, your GitHub instance must have a password set. This can be accomplished two ways:
     * 
     * 1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.
     * 2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.
     * 
     * **Note:** The request body for this operation must be submitted as `multipart/form-data` data. You can can reference the license file by prefixing the filename with the `@` symbol using `curl`. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#-F).
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#create-a-github-enterprise-server-license - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminCreateEnterpriseServerLicenseResponse enterpriseAdminCreateEnterpriseServerLicense(org.openapis.openapi.models.operations.EnterpriseAdminCreateEnterpriseServerLicenseRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_CREATE_ENTERPRISE_SERVER_LICENSE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/start");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "multipart");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminCreateEnterpriseServerLicenseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminCreateEnterpriseServerLicenseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202) {
        }

        return res;
    }

    /**
     * Create a global webhook
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#create-a-global-webhook - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminCreateGlobalWebhookResponse enterpriseAdminCreateGlobalWebhook(org.openapis.openapi.models.operations.EnterpriseAdminCreateGlobalWebhookRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/admin/hooks");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminCreateGlobalWebhookResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminCreateGlobalWebhookResponse() {{
            globalHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GlobalHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GlobalHook.class);
                res.globalHook = out;
            }
        }

        return res;
    }

    /**
     * Create an impersonation OAuth token
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#create-an-impersonation-oauth-token - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminCreateImpersonationOAuthTokenResponse enterpriseAdminCreateImpersonationOAuthToken(org.openapis.openapi.models.operations.EnterpriseAdminCreateImpersonationOAuthTokenRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminCreateImpersonationOAuthTokenPathParams.class, baseUrl, "/admin/users/{username}/authorizations", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminCreateImpersonationOAuthTokenResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminCreateImpersonationOAuthTokenResponse() {{
            authorization = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200 || httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Authorization out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Authorization.class);
                res.authorization = out;
            }
        }

        return res;
    }

    /**
     * Create an organization
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#create-an-organization - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminCreateOrgResponse enterpriseAdminCreateOrg(org.openapis.openapi.models.operations.EnterpriseAdminCreateOrgRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/admin/organizations");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminCreateOrgResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminCreateOrgResponse() {{
            organizationSimple = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.OrganizationSimple out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.OrganizationSimple.class);
                res.organizationSimple = out;
            }
        }

        return res;
    }

    /**
     * Create a pre-receive environment
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#create-a-pre-receive-environment - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminCreatePreReceiveEnvironmentResponse enterpriseAdminCreatePreReceiveEnvironment(org.openapis.openapi.models.operations.EnterpriseAdminCreatePreReceiveEnvironmentRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/admin/pre-receive-environments");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminCreatePreReceiveEnvironmentResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminCreatePreReceiveEnvironmentResponse() {{
            preReceiveEnvironment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PreReceiveEnvironment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PreReceiveEnvironment.class);
                res.preReceiveEnvironment = out;
            }
        }

        return res;
    }

    /**
     * Create a pre-receive hook
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#create-a-pre-receive-hook - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminCreatePreReceiveHookResponse enterpriseAdminCreatePreReceiveHook(org.openapis.openapi.models.operations.EnterpriseAdminCreatePreReceiveHookRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/admin/pre-receive-hooks");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminCreatePreReceiveHookResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminCreatePreReceiveHookResponse() {{
            preReceiveHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PreReceiveHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PreReceiveHook.class);
                res.preReceiveHook = out;
            }
        }

        return res;
    }

    /**
     * Create a registration token for an enterprise
     * Returns a token that you can pass to the `config` script. The token expires after one hour.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * 
     * #### Example using registration token
     * 
     * Configure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.
     * 
     * ```
     * ./config.sh --url https://github.com/enterprises/octo-enterprise --token TOKEN
     * ```
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#create-a-registration-token-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminCreateRegistrationTokenForEnterpriseResponse enterpriseAdminCreateRegistrationTokenForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminCreateRegistrationTokenForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminCreateRegistrationTokenForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners/registration-token", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminCreateRegistrationTokenForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminCreateRegistrationTokenForEnterpriseResponse() {{
            authenticationToken = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.AuthenticationToken out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.AuthenticationToken.class);
                res.authenticationToken = out;
            }
        }

        return res;
    }

    /**
     * Create a remove token for an enterprise
     * Returns a token that you can pass to the `config` script to remove a self-hosted runner from an enterprise. The token expires after one hour.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * 
     * #### Example using remove token
     * 
     * To remove your self-hosted runner from an enterprise, replace `TOKEN` with the remove token provided by this
     * endpoint.
     * 
     * ```
     * ./config.sh remove --token TOKEN
     * ```
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#create-a-remove-token-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminCreateRemoveTokenForEnterpriseResponse enterpriseAdminCreateRemoveTokenForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminCreateRemoveTokenForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminCreateRemoveTokenForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners/remove-token", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminCreateRemoveTokenForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminCreateRemoveTokenForEnterpriseResponse() {{
            authenticationToken = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.AuthenticationToken out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.AuthenticationToken.class);
                res.authenticationToken = out;
            }
        }

        return res;
    }

    /**
     * Create a self-hosted runner group for an enterprise
     * Creates a new self-hosted runner group for an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#create-self-hosted-runner-group-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseResponse enterpriseAdminCreateSelfHostedRunnerGroupForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminCreateSelfHostedRunnerGroupForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminCreateSelfHostedRunnerGroupForEnterpriseResponse() {{
            runnerGroupsEnterprise = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RunnerGroupsEnterprise out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RunnerGroupsEnterprise.class);
                res.runnerGroupsEnterprise = out;
            }
        }

        return res;
    }

    /**
     * Create a user
     * If an external authentication mechanism is used, the login name should match the login name in the external system. If you are using LDAP authentication, you should also [update the LDAP mapping](https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user) for the user.
     * 
     * The login name will be normalized to only contain alphanumeric characters or single hyphens. For example, if you send `"octo_cat"` as the login, a user named `"octo-cat"` will be created.
     * 
     * If the login name or email address is already associated with an account, the server will return a `422` response.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#create-a-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminCreateUserResponse enterpriseAdminCreateUser(org.openapis.openapi.models.operations.EnterpriseAdminCreateUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/admin/users");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminCreateUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminCreateUserResponse() {{
            simpleUser = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.SimpleUser out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.SimpleUser.class);
                res.simpleUser = out;
            }
        }

        return res;
    }

    /**
     * Delete a global webhook
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#delete-a-global-webhook - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeleteGlobalWebhookResponse enterpriseAdminDeleteGlobalWebhook(org.openapis.openapi.models.operations.EnterpriseAdminDeleteGlobalWebhookRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeleteGlobalWebhookPathParams.class, baseUrl, "/admin/hooks/{hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeleteGlobalWebhookResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeleteGlobalWebhookResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete an impersonation OAuth token
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#delete-an-impersonation-oauth-token - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeleteImpersonationOAuthTokenResponse enterpriseAdminDeleteImpersonationOAuthToken(org.openapis.openapi.models.operations.EnterpriseAdminDeleteImpersonationOAuthTokenRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeleteImpersonationOAuthTokenPathParams.class, baseUrl, "/admin/users/{username}/authorizations", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeleteImpersonationOAuthTokenResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeleteImpersonationOAuthTokenResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete a personal access token
     * Deletes a personal access token. Returns a `403 - Forbidden` status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#delete-a-personal-access-token - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeletePersonalAccessTokenResponse enterpriseAdminDeletePersonalAccessToken(org.openapis.openapi.models.operations.EnterpriseAdminDeletePersonalAccessTokenRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeletePersonalAccessTokenPathParams.class, baseUrl, "/admin/tokens/{token_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeletePersonalAccessTokenResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeletePersonalAccessTokenResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete a pre-receive environment
     * If you attempt to delete an environment that cannot be deleted, you will receive a `422 Unprocessable Entity` response.
     * 
     * The possible error messages are:
     * 
     * *   _Cannot modify or delete the default environment_
     * *   _Cannot delete environment that has hooks_
     * *   _Cannot delete environment when download is in progress_
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#delete-a-pre-receive-environment - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveEnvironmentResponse enterpriseAdminDeletePreReceiveEnvironment(org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveEnvironmentRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveEnvironmentPathParams.class, baseUrl, "/admin/pre-receive-environments/{pre_receive_environment_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveEnvironmentResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveEnvironmentResponse() {{
            enterpriseAdminDeletePreReceiveEnvironment422ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }
        else if (httpRes.statusCode() == 422) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveEnvironment422ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveEnvironment422ApplicationJSON.class);
                res.enterpriseAdminDeletePreReceiveEnvironment422ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Delete a pre-receive hook
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#delete-a-pre-receive-hook - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveHookResponse enterpriseAdminDeletePreReceiveHook(org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveHookRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveHookPathParams.class, baseUrl, "/admin/pre-receive-hooks/{pre_receive_hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveHookResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeletePreReceiveHookResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete a public key
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#delete-a-public-key - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeletePublicKeyResponse enterpriseAdminDeletePublicKey(org.openapis.openapi.models.operations.EnterpriseAdminDeletePublicKeyRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeletePublicKeyPathParams.class, baseUrl, "/admin/keys/{key_ids}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeletePublicKeyResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeletePublicKeyResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete a SCIM group from an enterprise
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     *  Deletes a SCIM group from an enterprise.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#delete-a-scim-group-from-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeleteScimGroupFromEnterpriseResponse enterpriseAdminDeleteScimGroupFromEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminDeleteScimGroupFromEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeleteScimGroupFromEnterprisePathParams.class, baseUrl, "/scim/v2/Groups/{scim_group_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeleteScimGroupFromEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeleteScimGroupFromEnterpriseResponse() {{
            scimError = null;
            scimError = null;
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204 || httpRes.statusCode() == 401 || httpRes.statusCode() == 403) {
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * Delete a self-hosted runner from an enterprise
     * Forces the removal of a self-hosted runner from an enterprise. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#delete-self-hosted-runner-from-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeleteSelfHostedRunnerFromEnterpriseResponse enterpriseAdminDeleteSelfHostedRunnerFromEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminDeleteSelfHostedRunnerFromEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeleteSelfHostedRunnerFromEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners/{runner_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeleteSelfHostedRunnerFromEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeleteSelfHostedRunnerFromEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete a self-hosted runner group from an enterprise
     * Deletes a self-hosted runner group for an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#delete-a-self-hosted-runner-group-from-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeleteSelfHostedRunnerGroupFromEnterpriseResponse enterpriseAdminDeleteSelfHostedRunnerGroupFromEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminDeleteSelfHostedRunnerGroupFromEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeleteSelfHostedRunnerGroupFromEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeleteSelfHostedRunnerGroupFromEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeleteSelfHostedRunnerGroupFromEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete a user
     * Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#suspend-a-user) is often a better option.
     * 
     * You can delete any user account except your own.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#delete-a-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeleteUserResponse enterpriseAdminDeleteUser(org.openapis.openapi.models.operations.EnterpriseAdminDeleteUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeleteUserPathParams.class, baseUrl, "/admin/users/{username}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeleteUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeleteUserResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Delete a SCIM user from an enterprise
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Permanently suspends a SCIM user from an enterprise, removes all data for the user, obfuscates the login, email, and display name of the user, removes all external-identity SCIM attributes, and deletes the emails, avatar, PATs, SSH keys, OAuth authorizations credentials, GPG keys, and SAML mappings for the user. You will not be able to undo this action.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#delete-a-scim-user-from-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDeleteUserFromEnterpriseResponse enterpriseAdminDeleteUserFromEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminDeleteUserFromEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDeleteUserFromEnterprisePathParams.class, baseUrl, "/scim/v2/Users/{scim_user_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDeleteUserFromEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDeleteUserFromEnterpriseResponse() {{
            scimError = null;
            scimError = null;
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204 || httpRes.statusCode() == 401 || httpRes.statusCode() == 403) {
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * Demote a site administrator
     * You can demote any user account except your own.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#demote-a-site-administrator - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDemoteSiteAdministratorResponse enterpriseAdminDemoteSiteAdministrator(org.openapis.openapi.models.operations.EnterpriseAdminDemoteSiteAdministratorRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDemoteSiteAdministratorPathParams.class, baseUrl, "/users/{username}/site_admin", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDemoteSiteAdministratorResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDemoteSiteAdministratorResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Disable a selected organization for GitHub Actions in an enterprise
     * Removes an organization from the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise)."
     * 
     * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#disable-a-selected-organization-for-github-actions-in-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminDisableSelectedOrganizationGithubActionsEnterpriseResponse enterpriseAdminDisableSelectedOrganizationGithubActionsEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminDisableSelectedOrganizationGithubActionsEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminDisableSelectedOrganizationGithubActionsEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/permissions/organizations/{org_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminDisableSelectedOrganizationGithubActionsEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminDisableSelectedOrganizationGithubActionsEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Enable or disable maintenance mode
     * **Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#enable-or-disable-maintenance-mode - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminEnableOrDisableMaintenanceModeResponse enterpriseAdminEnableOrDisableMaintenanceMode(org.openapis.openapi.models.operations.EnterpriseAdminEnableOrDisableMaintenanceModeRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_ENABLE_OR_DISABLE_MAINTENANCE_MODE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/maintenance");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminEnableOrDisableMaintenanceModeResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminEnableOrDisableMaintenanceModeResponse() {{
            maintenanceStatus = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.MaintenanceStatus out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.MaintenanceStatus.class);
                res.maintenanceStatus = out;
            }
        }

        return res;
    }

    /**
     * Enable a selected organization for GitHub Actions in an enterprise
     * Adds an organization to the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise)."
     * 
     * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#enable-a-selected-organization-for-github-actions-in-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterpriseResponse enterpriseAdminEnableSelectedOrganizationGithubActionsEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/permissions/organizations/{org_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminEnableSelectedOrganizationGithubActionsEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Get all authorized SSH keys
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-all-authorized-ssh-keys - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetAllAuthorizedSshKeysResponse enterpriseAdminGetAllAuthorizedSshKeys(org.openapis.openapi.models.operations.EnterpriseAdminGetAllAuthorizedSshKeysRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_GET_ALL_AUTHORIZED_SSH_KEYS_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/settings/authorized-keys");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetAllAuthorizedSshKeysResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetAllAuthorizedSshKeysResponse() {{
            sshKeys = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.SshKey[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.SshKey[].class);
                res.sshKeys = out;
            }
        }

        return res;
    }

    /**
     * Get all statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetAllStatsResponse enterpriseAdminGetAllStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/all");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetAllStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetAllStatsResponse() {{
            enterpriseOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseOverview.class);
                res.enterpriseOverview = out;
            }
        }

        return res;
    }

    /**
     * Get allowed actions for an enterprise
     * Gets the selected actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise)."
     * 
     * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#get-allowed-actions-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetAllowedActionsEnterpriseResponse enterpriseAdminGetAllowedActionsEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminGetAllowedActionsEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetAllowedActionsEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/permissions/selected-actions", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetAllowedActionsEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetAllowedActionsEnterpriseResponse() {{
            selectedActions = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.SelectedActions out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.SelectedActions.class);
                res.selectedActions = out;
            }
        }

        return res;
    }

    /**
     * Get the global announcement banner
     * Gets the current message and expiration date of the global announcement banner in your enterprise.
     * https://docs.github.com/enterprise-server@3.8/rest/enterprise-admin/announcement#get-the-global-announcement-banner - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetAnnouncementResponse enterpriseAdminGetAnnouncement() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/announcement");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetAnnouncementResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetAnnouncementResponse() {{
            announcement = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Announcement out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Announcement.class);
                res.announcement = out;
            }
        }

        return res;
    }

    /**
     * Get the audit log for an enterprise
     * Gets the audit log for an enterprise. To use this endpoint, you must be an enterprise admin, and you must use an access token with the `read:audit_log` scope.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-the-audit-log-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetAuditLogResponse enterpriseAdminGetAuditLog(org.openapis.openapi.models.operations.EnterpriseAdminGetAuditLogRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetAuditLogPathParams.class, baseUrl, "/enterprises/{enterprise}/audit-log", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminGetAuditLogQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetAuditLogResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetAuditLogResponse() {{
            auditLogEvents = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.AuditLogEvent[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.AuditLogEvent[].class);
                res.auditLogEvents = out;
            }
        }

        return res;
    }

    /**
     * Get comment statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-comment-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetCommentStatsResponse enterpriseAdminGetCommentStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/comments");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetCommentStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetCommentStatsResponse() {{
            enterpriseCommentOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseCommentOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseCommentOverview.class);
                res.enterpriseCommentOverview = out;
            }
        }

        return res;
    }

    /**
     * Get the configuration status
     * This endpoint allows you to check the status of the most recent configuration process:
     * 
     * Note that you may need to wait several seconds after you start a process before you can check its status.
     * 
     * The different statuses are:
     * 
     * | Status        | Description                       |
     * | ------------- | --------------------------------- |
     * | `PENDING`     | The job has not started yet       |
     * | `CONFIGURING` | The job is running                |
     * | `DONE`        | The job has finished correctly    |
     * | `FAILED`      | The job has finished unexpectedly |
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-the-configuration-status - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetConfigurationStatusResponse enterpriseAdminGetConfigurationStatus(org.openapis.openapi.models.operations.EnterpriseAdminGetConfigurationStatusRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_GET_CONFIGURATION_STATUS_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/configcheck");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetConfigurationStatusResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetConfigurationStatusResponse() {{
            configurationStatus = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ConfigurationStatus out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ConfigurationStatus.class);
                res.configurationStatus = out;
            }
        }

        return res;
    }

    /**
     * Get the download status for a pre-receive environment
     * In addition to seeing the download status at the "[Get a pre-receive environment](#get-a-pre-receive-environment)" endpoint, there is also this separate endpoint for just the download status.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-the-download-status-for-a-pre-receive-environment - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetDownloadStatusForPreReceiveEnvironmentResponse enterpriseAdminGetDownloadStatusForPreReceiveEnvironment(org.openapis.openapi.models.operations.EnterpriseAdminGetDownloadStatusForPreReceiveEnvironmentRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetDownloadStatusForPreReceiveEnvironmentPathParams.class, baseUrl, "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetDownloadStatusForPreReceiveEnvironmentResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetDownloadStatusForPreReceiveEnvironmentResponse() {{
            preReceiveEnvironmentDownloadStatus = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PreReceiveEnvironmentDownloadStatus out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PreReceiveEnvironmentDownloadStatus.class);
                res.preReceiveEnvironmentDownloadStatus = out;
            }
        }

        return res;
    }

    /**
     * Get gist statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-gist-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetGistStatsResponse enterpriseAdminGetGistStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/gists");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetGistStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetGistStatsResponse() {{
            enterpriseGistOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseGistOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseGistOverview.class);
                res.enterpriseGistOverview = out;
            }
        }

        return res;
    }

    /**
     * Get GitHub Actions permissions for an enterprise
     * Gets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise.
     * 
     * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#get-github-actions-permissions-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetGithubActionsPermissionsEnterpriseResponse enterpriseAdminGetGithubActionsPermissionsEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminGetGithubActionsPermissionsEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetGithubActionsPermissionsEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/permissions", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetGithubActionsPermissionsEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetGithubActionsPermissionsEnterpriseResponse() {{
            actionsEnterprisePermissions = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ActionsEnterprisePermissions out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ActionsEnterprisePermissions.class);
                res.actionsEnterprisePermissions = out;
            }
        }

        return res;
    }

    /**
     * Get a global webhook
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-a-global-webhook - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetGlobalWebhookResponse enterpriseAdminGetGlobalWebhook(org.openapis.openapi.models.operations.EnterpriseAdminGetGlobalWebhookRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetGlobalWebhookPathParams.class, baseUrl, "/admin/hooks/{hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetGlobalWebhookResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetGlobalWebhookResponse() {{
            globalHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GlobalHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GlobalHook.class);
                res.globalHook = out;
            }
        }

        return res;
    }

    /**
     * Get hooks statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-hooks-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetHooksStatsResponse enterpriseAdminGetHooksStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/hooks");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetHooksStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetHooksStatsResponse() {{
            enterpriseHookOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseHookOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseHookOverview.class);
                res.enterpriseHookOverview = out;
            }
        }

        return res;
    }

    /**
     * Get issue statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-issues-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetIssueStatsResponse enterpriseAdminGetIssueStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/issues");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetIssueStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetIssueStatsResponse() {{
            enterpriseIssueOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseIssueOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseIssueOverview.class);
                res.enterpriseIssueOverview = out;
            }
        }

        return res;
    }

    /**
     * Get license information
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-license-information - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetLicenseInformationResponse enterpriseAdminGetLicenseInformation() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/settings/license");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetLicenseInformationResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetLicenseInformationResponse() {{
            licenseInfo = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.LicenseInfo out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.LicenseInfo.class);
                res.licenseInfo = out;
            }
        }

        return res;
    }

    /**
     * Get the maintenance status
     * Check your installation's maintenance status:
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-the-maintenance-status - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetMaintenanceStatusResponse enterpriseAdminGetMaintenanceStatus(org.openapis.openapi.models.operations.EnterpriseAdminGetMaintenanceStatusRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_GET_MAINTENANCE_STATUS_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/maintenance");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetMaintenanceStatusResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetMaintenanceStatusResponse() {{
            maintenanceStatus = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.MaintenanceStatus out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.MaintenanceStatus.class);
                res.maintenanceStatus = out;
            }
        }

        return res;
    }

    /**
     * Get milestone statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-milestone-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetMilestoneStatsResponse enterpriseAdminGetMilestoneStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/milestones");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetMilestoneStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetMilestoneStatsResponse() {{
            enterpriseMilestoneOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseMilestoneOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseMilestoneOverview.class);
                res.enterpriseMilestoneOverview = out;
            }
        }

        return res;
    }

    /**
     * Get organization statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-organization-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetOrgStatsResponse enterpriseAdminGetOrgStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/orgs");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetOrgStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetOrgStatsResponse() {{
            enterpriseOrganizationOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseOrganizationOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseOrganizationOverview.class);
                res.enterpriseOrganizationOverview = out;
            }
        }

        return res;
    }

    /**
     * Get pages statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-pages-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetPagesStatsResponse enterpriseAdminGetPagesStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/pages");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetPagesStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetPagesStatsResponse() {{
            enterprisePageOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterprisePageOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterprisePageOverview.class);
                res.enterprisePageOverview = out;
            }
        }

        return res;
    }

    /**
     * Get a pre-receive environment
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-a-pre-receive-environment - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveEnvironmentResponse enterpriseAdminGetPreReceiveEnvironment(org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveEnvironmentRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveEnvironmentPathParams.class, baseUrl, "/admin/pre-receive-environments/{pre_receive_environment_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveEnvironmentResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveEnvironmentResponse() {{
            preReceiveEnvironment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PreReceiveEnvironment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PreReceiveEnvironment.class);
                res.preReceiveEnvironment = out;
            }
        }

        return res;
    }

    /**
     * Get a pre-receive hook
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-a-pre-receive-hook - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookResponse enterpriseAdminGetPreReceiveHook(org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookPathParams.class, baseUrl, "/admin/pre-receive-hooks/{pre_receive_hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookResponse() {{
            preReceiveHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PreReceiveHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PreReceiveHook.class);
                res.preReceiveHook = out;
            }
        }

        return res;
    }

    /**
     * Get a pre-receive hook for an organization
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-an-organization - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookForOrgResponse enterpriseAdminGetPreReceiveHookForOrg(org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookForOrgRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookForOrgPathParams.class, baseUrl, "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookForOrgResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookForOrgResponse() {{
            orgPreReceiveHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.OrgPreReceiveHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.OrgPreReceiveHook.class);
                res.orgPreReceiveHook = out;
            }
        }

        return res;
    }

    /**
     * Get a pre-receive hook for a repository
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-a-repository - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookForRepoResponse enterpriseAdminGetPreReceiveHookForRepo(org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookForRepoRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookForRepoPathParams.class, baseUrl, "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookForRepoResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetPreReceiveHookForRepoResponse() {{
            repositoryPreReceiveHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RepositoryPreReceiveHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RepositoryPreReceiveHook.class);
                res.repositoryPreReceiveHook = out;
            }
        }

        return res;
    }

    /**
     * Get SCIM provisioning information for an enterprise group
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Gets information about a SCIM group.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-scim-provisioning-information-for-an-enterprise-group - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseGroupResponse enterpriseAdminGetProvisioningInformationForEnterpriseGroup(org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseGroupRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseGroupPathParams.class, baseUrl, "/scim/v2/Groups/{scim_group_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseGroupQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseGroupResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseGroupResponse() {{
            scimEnterpriseGroupResponse = null;
            scimError = null;
            scimError = null;
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimEnterpriseGroupResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimEnterpriseGroupResponse.class);
                res.scimEnterpriseGroupResponse = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 403) {
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * Get SCIM provisioning information for an enterprise user
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Gets information about a SCIM user.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-scim-provisioning-information-for-an-enterprise-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseUserResponse enterpriseAdminGetProvisioningInformationForEnterpriseUser(org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseUserPathParams.class, baseUrl, "/scim/v2/Users/{scim_user_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetProvisioningInformationForEnterpriseUserResponse() {{
            scimEnterpriseUserResponse = null;
            scimError = null;
            scimError = null;
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimEnterpriseUserResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimEnterpriseUserResponse.class);
                res.scimEnterpriseUserResponse = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 403) {
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * Get pull request statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-pull-requests-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetPullRequestStatsResponse enterpriseAdminGetPullRequestStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/pulls");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetPullRequestStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetPullRequestStatsResponse() {{
            enterprisePullRequestOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterprisePullRequestOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterprisePullRequestOverview.class);
                res.enterprisePullRequestOverview = out;
            }
        }

        return res;
    }

    /**
     * Get repository statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-repository-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetRepoStatsResponse enterpriseAdminGetRepoStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/repos");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetRepoStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetRepoStatsResponse() {{
            enterpriseRepositoryOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseRepositoryOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseRepositoryOverview.class);
                res.enterpriseRepositoryOverview = out;
            }
        }

        return res;
    }

    /**
     * Get a self-hosted runner for an enterprise
     * Gets a specific self-hosted runner configured in an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#get-a-self-hosted-runner-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetSelfHostedRunnerForEnterpriseResponse enterpriseAdminGetSelfHostedRunnerForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminGetSelfHostedRunnerForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetSelfHostedRunnerForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners/{runner_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetSelfHostedRunnerForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetSelfHostedRunnerForEnterpriseResponse() {{
            runner = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Runner out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Runner.class);
                res.runner = out;
            }
        }

        return res;
    }

    /**
     * Get a self-hosted runner group for an enterprise
     * Gets a specific self-hosted runner group for an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#get-a-self-hosted-runner-group-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetSelfHostedRunnerGroupForEnterpriseResponse enterpriseAdminGetSelfHostedRunnerGroupForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminGetSelfHostedRunnerGroupForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminGetSelfHostedRunnerGroupForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetSelfHostedRunnerGroupForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetSelfHostedRunnerGroupForEnterpriseResponse() {{
            runnerGroupsEnterprise = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RunnerGroupsEnterprise out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RunnerGroupsEnterprise.class);
                res.runnerGroupsEnterprise = out;
            }
        }

        return res;
    }

    /**
     * Get settings
     * Gets the settings for your instance. To change settings, see the [Set settings endpoint](https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#set-settings).
     * 
     * **Note:** You cannot retrieve the management console password with the Enterprise administration API.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-settings - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetSettingsResponse enterpriseAdminGetSettings(org.openapis.openapi.models.operations.EnterpriseAdminGetSettingsRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_GET_SETTINGS_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/settings");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetSettingsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetSettingsResponse() {{
            enterpriseSettings = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseSettings out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseSettings.class);
                res.enterpriseSettings = out;
            }
        }

        return res;
    }

    /**
     * Get users statistics
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-users-statistics - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminGetUserStatsResponse enterpriseAdminGetUserStats() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/stats/users");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminGetUserStatsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminGetUserStatsResponse() {{
            enterpriseUserOverview = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseUserOverview out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseUserOverview.class);
                res.enterpriseUserOverview = out;
            }
        }

        return res;
    }

    /**
     * List global webhooks
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#list-global-webhooks - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListGlobalWebhooksResponse enterpriseAdminListGlobalWebhooks(org.openapis.openapi.models.operations.EnterpriseAdminListGlobalWebhooksRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/admin/hooks");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListGlobalWebhooksQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListGlobalWebhooksResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListGlobalWebhooksResponse() {{
            globalHooks = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GlobalHook[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GlobalHook[].class);
                res.globalHooks = out;
            }
        }

        return res;
    }

    /**
     * List labels for a self-hosted runner for an enterprise
     * Lists all labels for a self-hosted runner configured in an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#list-labels-for-a-self-hosted-runner-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListLabelsForSelfHostedRunnerForEnterpriseResponse enterpriseAdminListLabelsForSelfHostedRunnerForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminListLabelsForSelfHostedRunnerForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminListLabelsForSelfHostedRunnerForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners/{runner_id}/labels", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListLabelsForSelfHostedRunnerForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListLabelsForSelfHostedRunnerForEnterpriseResponse() {{
            enterpriseAdminListLabelsForSelfHostedRunnerForEnterprise200ApplicationJSONObject = null;
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminListLabelsForSelfHostedRunnerForEnterprise200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminListLabelsForSelfHostedRunnerForEnterprise200ApplicationJSON.class);
                res.enterpriseAdminListLabelsForSelfHostedRunnerForEnterprise200ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * List organization access to a self-hosted runner group in an enterprise
     * Lists the organizations with access to a self-hosted runner group.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#list-organization-access-to-a-self-hosted-runner-group-in-a-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse enterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterpriseQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse() {{
            enterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprise200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprise200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprise200ApplicationJSON.class);
                res.enterpriseAdminListOrgAccessToSelfHostedRunnerGroupInEnterprise200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * List personal access tokens
     * Lists personal access tokens for all users, including admin users.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#list-personal-access-tokens - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListPersonalAccessTokensResponse enterpriseAdminListPersonalAccessTokens(org.openapis.openapi.models.operations.EnterpriseAdminListPersonalAccessTokensRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/admin/tokens");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListPersonalAccessTokensQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListPersonalAccessTokensResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListPersonalAccessTokensResponse() {{
            authorizations = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Authorization[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Authorization[].class);
                res.authorizations = out;
            }
        }

        return res;
    }

    /**
     * List pre-receive environments
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#list-pre-receive-environments - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveEnvironmentsResponse enterpriseAdminListPreReceiveEnvironments(org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveEnvironmentsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/admin/pre-receive-environments");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveEnvironmentsQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveEnvironmentsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveEnvironmentsResponse() {{
            preReceiveEnvironments = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PreReceiveEnvironment[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PreReceiveEnvironment[].class);
                res.preReceiveEnvironments = out;
            }
        }

        return res;
    }

    /**
     * List pre-receive hooks
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#list-pre-receive-hooks - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksResponse enterpriseAdminListPreReceiveHooks(org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/admin/pre-receive-hooks");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksResponse() {{
            preReceiveHooks = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PreReceiveHook[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PreReceiveHook[].class);
                res.preReceiveHooks = out;
            }
        }

        return res;
    }

    /**
     * List pre-receive hooks for an organization
     * List all pre-receive hooks that are enabled or testing for this organization as well as any disabled hooks that can be configured at the organization level. Globally disabled pre-receive hooks that do not allow downstream configuration are not listed.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#list-pre-receive-hooks-for-an-organization - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForOrgResponse enterpriseAdminListPreReceiveHooksForOrg(org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForOrgRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForOrgPathParams.class, baseUrl, "/orgs/{org}/pre-receive-hooks", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForOrgQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForOrgResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForOrgResponse() {{
            orgPreReceiveHooks = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.OrgPreReceiveHook[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.OrgPreReceiveHook[].class);
                res.orgPreReceiveHooks = out;
            }
        }

        return res;
    }

    /**
     * List pre-receive hooks for a repository
     * List all pre-receive hooks that are enabled or testing for this repository as well as any disabled hooks that are allowed to be enabled at the repository level. Pre-receive hooks that are disabled at a higher level and are not configurable will not be listed.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#list-pre-receive-hooks-for-a-repository - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForRepoResponse enterpriseAdminListPreReceiveHooksForRepo(org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForRepoRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForRepoPathParams.class, baseUrl, "/repos/{owner}/{repo}/pre-receive-hooks", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForRepoQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForRepoResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListPreReceiveHooksForRepoResponse() {{
            repositoryPreReceiveHooks = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RepositoryPreReceiveHook[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RepositoryPreReceiveHook[].class);
                res.repositoryPreReceiveHooks = out;
            }
        }

        return res;
    }

    /**
     * List provisioned SCIM groups for an enterprise
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Lists provisioned SCIM groups in an enterprise.
     * 
     * You can improve query search time by using the `excludedAttributes` query parameter with a value of `members` to exclude members from the response.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#list-provisioned-scim-groups-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListProvisionedGroupsEnterpriseResponse enterpriseAdminListProvisionedGroupsEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminListProvisionedGroupsEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/scim/v2/Groups");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListProvisionedGroupsEnterpriseQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListProvisionedGroupsEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListProvisionedGroupsEnterpriseResponse() {{
            scimEnterpriseGroupList = null;
            scimError = null;
            scimError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimEnterpriseGroupList out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimEnterpriseGroupList.class);
                res.scimEnterpriseGroupList = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 403) {
        }

        return res;
    }

    /**
     * List SCIM provisioned identities for an enterprise
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Lists provisioned SCIM enterprise members.
     * 
     * When a user with a SCIM-provisioned external identity is removed from an enterprise through a `patch` with `active` flag set to `false`, the account's metadata is preserved to allow the user to re-join the enterprise in the future. However, the user's account will be suspended and the user will not be able to sign-in. In order to permanently suspend the users account with no ability to re-join the enterprise in the future, use the `delete` request. Users that were not permanently deleted will be visible in the returned results.
     * 
     * You can improve query search time by using the `excludedAttributes` query parameter with a value of `groups` to exclude groups from the response.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#list-scim-provisioned-identities-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListProvisionedIdentitiesEnterpriseResponse enterpriseAdminListProvisionedIdentitiesEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminListProvisionedIdentitiesEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/scim/v2/Users");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListProvisionedIdentitiesEnterpriseQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListProvisionedIdentitiesEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListProvisionedIdentitiesEnterpriseResponse() {{
            scimEnterpriseUserList = null;
            scimError = null;
            scimError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimEnterpriseUserList out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimEnterpriseUserList.class);
                res.scimEnterpriseUserList = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 403) {
        }

        return res;
    }

    /**
     * List public keys
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#list-public-keys - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListPublicKeysResponse enterpriseAdminListPublicKeys(org.openapis.openapi.models.operations.EnterpriseAdminListPublicKeysRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/admin/keys");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListPublicKeysQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListPublicKeysResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListPublicKeysResponse() {{
            publicKeyFulls = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PublicKeyFull[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PublicKeyFull[].class);
                res.publicKeyFulls = out;
            }
        }

        return res;
    }

    /**
     * List runner applications for an enterprise
     * Lists binaries for the runner application that you can download and run.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#list-runner-applications-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListRunnerApplicationsForEnterpriseResponse enterpriseAdminListRunnerApplicationsForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminListRunnerApplicationsForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminListRunnerApplicationsForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners/downloads", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListRunnerApplicationsForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListRunnerApplicationsForEnterpriseResponse() {{
            runnerApplications = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RunnerApplication[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RunnerApplication[].class);
                res.runnerApplications = out;
            }
        }

        return res;
    }

    /**
     * List selected organizations enabled for GitHub Actions in an enterprise
     * Lists the organizations that are selected to have GitHub Actions enabled in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise)."
     * 
     * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#list-selected-organizations-enabled-for-github-actions-in-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseResponse enterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/permissions/organizations", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterpriseResponse() {{
            enterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise200ApplicationJSON.class);
                res.enterpriseAdminListSelectedOrganizationsEnabledGithubActionsEnterprise200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * List self-hosted runner groups for an enterprise
     * Lists all self-hosted runner groups for an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#list-self-hosted-runner-groups-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnerGroupsForEnterpriseResponse enterpriseAdminListSelfHostedRunnerGroupsForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnerGroupsForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnerGroupsForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnerGroupsForEnterpriseQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnerGroupsForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnerGroupsForEnterpriseResponse() {{
            enterpriseAdminListSelfHostedRunnerGroupsForEnterprise200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnerGroupsForEnterprise200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnerGroupsForEnterprise200ApplicationJSON.class);
                res.enterpriseAdminListSelfHostedRunnerGroupsForEnterprise200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * List self-hosted runners for an enterprise
     * Lists all self-hosted runners configured for an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#list-self-hosted-runners-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersForEnterpriseResponse enterpriseAdminListSelfHostedRunnersForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersForEnterpriseQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersForEnterpriseResponse() {{
            enterpriseAdminListSelfHostedRunnersForEnterprise200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersForEnterprise200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersForEnterprise200ApplicationJSON.class);
                res.enterpriseAdminListSelfHostedRunnersForEnterprise200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * List self-hosted runners in a group for an enterprise
     * Lists the self-hosted runners that are in a specific enterprise group.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#list-self-hosted-runners-in-a-group-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersInGroupForEnterpriseResponse enterpriseAdminListSelfHostedRunnersInGroupForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersInGroupForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersInGroupForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersInGroupForEnterpriseQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersInGroupForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersInGroupForEnterpriseResponse() {{
            enterpriseAdminListSelfHostedRunnersInGroupForEnterprise200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersInGroupForEnterprise200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminListSelfHostedRunnersInGroupForEnterprise200ApplicationJSON.class);
                res.enterpriseAdminListSelfHostedRunnersInGroupForEnterprise200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Ping a global webhook
     * This will trigger a [ping event](https://docs.github.com/enterprise-server@3.8/webhooks/#ping-event) to be sent to the webhook.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#ping-a-global-webhook - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminPingGlobalWebhookResponse enterpriseAdminPingGlobalWebhook(org.openapis.openapi.models.operations.EnterpriseAdminPingGlobalWebhookRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminPingGlobalWebhookPathParams.class, baseUrl, "/admin/hooks/{hook_id}/pings", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminPingGlobalWebhookResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminPingGlobalWebhookResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Promote a user to be a site administrator
     * Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@3.8/rest/overview/resources-in-the-rest-api#http-verbs)."
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#promote-a-user-to-be-a-site-administrator - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminPromoteUserToBeSiteAdministratorResponse enterpriseAdminPromoteUserToBeSiteAdministrator(org.openapis.openapi.models.operations.EnterpriseAdminPromoteUserToBeSiteAdministratorRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminPromoteUserToBeSiteAdministratorPathParams.class, baseUrl, "/users/{username}/site_admin", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminPromoteUserToBeSiteAdministratorResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminPromoteUserToBeSiteAdministratorResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Provision a SCIM enterprise group
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Creates a SCIM group for an enterprise.
     * 
     * If members are included as part of the group provisioning payload, they will be created as external group members. It is up to a provider to store a mapping between the `externalId` and `id` of each user.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#provision-a-scim-enterprise-group - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminProvisionEnterpriseGroupResponse enterpriseAdminProvisionEnterpriseGroup(org.openapis.openapi.models.operations.EnterpriseAdminProvisionEnterpriseGroupRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/scim/v2/Groups");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminProvisionEnterpriseGroupResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminProvisionEnterpriseGroupResponse() {{
            scimEnterpriseGroupResponse = null;
            scimError = null;
            scimError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimEnterpriseGroupResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimEnterpriseGroupResponse.class);
                res.scimEnterpriseGroupResponse = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 409) {
        }

        return res;
    }

    /**
     * Provision a SCIM enterprise user
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Creates an external identity for a new SCIM enterprise user.
     * 
     * SCIM does not authenticate users, it only provisions them. The authentication of users is done by SAML. However, when SCIM is enabled, all users need to be provisioned through SCIM before a user can sign in through SAML. The matching of a user to a SCIM provisioned user is done when the SAML assertion is consumed. The user will be matched on SAML response `NameID` to SCIM `userName`.
     * 
     * When converting existing enterprise to use SCIM, the user handle (`userName`) from the SCIM payload will be used to match the provisioned user to an already existing user in the enterprise. Since the new identity record is created for newly provisioned users the matching for those records is done using a user's handle. Currently the matching will be performed to all of the users no matter if they were SAML JIT provisioned or created as local users.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#provision-a-scim-enterprise-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminProvisionEnterpriseUserResponse enterpriseAdminProvisionEnterpriseUser(org.openapis.openapi.models.operations.EnterpriseAdminProvisionEnterpriseUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/scim/v2/Users");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminProvisionEnterpriseUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminProvisionEnterpriseUserResponse() {{
            scimEnterpriseUserResponse = null;
            scimError = null;
            scimError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimEnterpriseUserResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimEnterpriseUserResponse.class);
                res.scimEnterpriseUserResponse = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 409) {
        }

        return res;
    }

    /**
     * Remove all custom labels from a self-hosted runner for an enterprise
     * Remove all custom labels from a self-hosted runner configured in an
     * enterprise. Returns the remaining read-only labels from the runner.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#remove-all-custom-labels-from-a-self-hosted-runner-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminRemoveAllCustomLabelsFromSelfHostedRunnerForEnterpriseResponse enterpriseAdminRemoveAllCustomLabelsFromSelfHostedRunnerForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminRemoveAllCustomLabelsFromSelfHostedRunnerForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminRemoveAllCustomLabelsFromSelfHostedRunnerForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners/{runner_id}/labels", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminRemoveAllCustomLabelsFromSelfHostedRunnerForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminRemoveAllCustomLabelsFromSelfHostedRunnerForEnterpriseResponse() {{
            enterpriseAdminRemoveAllCustomLabelsFromSelfHostedRunnerForEnterprise200ApplicationJSONObject = null;
            basicError = null;
            validationErrorSimple = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminRemoveAllCustomLabelsFromSelfHostedRunnerForEnterprise200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminRemoveAllCustomLabelsFromSelfHostedRunnerForEnterprise200ApplicationJSON.class);
                res.enterpriseAdminRemoveAllCustomLabelsFromSelfHostedRunnerForEnterprise200ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }
        else if (httpRes.statusCode() == 422) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ValidationErrorSimple out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ValidationErrorSimple.class);
                res.validationErrorSimple = out;
            }
        }

        return res;
    }

    /**
     * Remove the global announcement banner
     * Removes the global announcement banner in your enterprise.
     * https://docs.github.com/enterprise-server@3.8/rest/enterprise-admin/announcement#remove-the-global-announcement-banner - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminRemoveAnnouncementResponse enterpriseAdminRemoveAnnouncement() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/announcement");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminRemoveAnnouncementResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminRemoveAnnouncementResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Remove an authorized SSH key
     * **Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#remove-an-authorized-ssh-key - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminRemoveAuthorizedSshKeyResponse enterpriseAdminRemoveAuthorizedSshKey(org.openapis.openapi.models.operations.EnterpriseAdminRemoveAuthorizedSshKeyRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_REMOVE_AUTHORIZED_SSH_KEY_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/settings/authorized-keys");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminRemoveAuthorizedSshKeyResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminRemoveAuthorizedSshKeyResponse() {{
            sshKeys = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.SshKey[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.SshKey[].class);
                res.sshKeys = out;
            }
        }

        return res;
    }

    /**
     * Remove a custom label from a self-hosted runner for an enterprise
     * Remove a custom label from a self-hosted runner configured
     * in an enterprise. Returns the remaining labels from the runner.
     * 
     * This endpoint returns a `404 Not Found` status if the custom label is not
     * present on the runner.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#remove-a-custom-label-from-a-self-hosted-runner-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminRemoveCustomLabelFromSelfHostedRunnerForEnterpriseResponse enterpriseAdminRemoveCustomLabelFromSelfHostedRunnerForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminRemoveCustomLabelFromSelfHostedRunnerForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminRemoveCustomLabelFromSelfHostedRunnerForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminRemoveCustomLabelFromSelfHostedRunnerForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminRemoveCustomLabelFromSelfHostedRunnerForEnterpriseResponse() {{
            enterpriseAdminRemoveCustomLabelFromSelfHostedRunnerForEnterprise200ApplicationJSONObject = null;
            basicError = null;
            validationErrorSimple = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminRemoveCustomLabelFromSelfHostedRunnerForEnterprise200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminRemoveCustomLabelFromSelfHostedRunnerForEnterprise200ApplicationJSON.class);
                res.enterpriseAdminRemoveCustomLabelFromSelfHostedRunnerForEnterprise200ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }
        else if (httpRes.statusCode() == 422) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ValidationErrorSimple out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ValidationErrorSimple.class);
                res.validationErrorSimple = out;
            }
        }

        return res;
    }

    /**
     * Remove organization access to a self-hosted runner group in an enterprise
     * Removes an organization from the list of selected organizations that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see "[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise)."
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#remove-organization-access-to-a-self-hosted-runner-group-in-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse enterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations/{org_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminRemoveOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Remove pre-receive hook enforcement for an organization
     * Removes any overrides for this hook at the org level for this org.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-an-organization - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminRemovePreReceiveHookEnforcementForOrgResponse enterpriseAdminRemovePreReceiveHookEnforcementForOrg(org.openapis.openapi.models.operations.EnterpriseAdminRemovePreReceiveHookEnforcementForOrgRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminRemovePreReceiveHookEnforcementForOrgPathParams.class, baseUrl, "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminRemovePreReceiveHookEnforcementForOrgResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminRemovePreReceiveHookEnforcementForOrgResponse() {{
            orgPreReceiveHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.OrgPreReceiveHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.OrgPreReceiveHook.class);
                res.orgPreReceiveHook = out;
            }
        }

        return res;
    }

    /**
     * Remove pre-receive hook enforcement for a repository
     * Deletes any overridden enforcement on this repository for the specified hook.
     * 
     * Responds with effective values inherited from owner and/or global level.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-a-repository - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminRemovePreReceiveHookEnforcementForRepoResponse enterpriseAdminRemovePreReceiveHookEnforcementForRepo(org.openapis.openapi.models.operations.EnterpriseAdminRemovePreReceiveHookEnforcementForRepoRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminRemovePreReceiveHookEnforcementForRepoPathParams.class, baseUrl, "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminRemovePreReceiveHookEnforcementForRepoResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminRemovePreReceiveHookEnforcementForRepoResponse() {{
            repositoryPreReceiveHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RepositoryPreReceiveHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RepositoryPreReceiveHook.class);
                res.repositoryPreReceiveHook = out;
            }
        }

        return res;
    }

    /**
     * Remove a self-hosted runner from a group for an enterprise
     * Removes a self-hosted runner from a group configured in an enterprise. The runner is then returned to the default group.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#remove-a-self-hosted-runner-from-a-group-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterpriseResponse enterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners/{runner_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminRemoveSelfHostedRunnerFromGroupForEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Set allowed actions for an enterprise
     * Sets the actions that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise)."
     * 
     * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#set-allowed-actions-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSetAllowedActionsEnterpriseResponse enterpriseAdminSetAllowedActionsEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminSetAllowedActionsEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSetAllowedActionsEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/permissions/selected-actions", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSetAllowedActionsEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSetAllowedActionsEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Set the global announcement banner
     * Sets the message and expiration time for the global announcement banner in your enterprise.
     * https://docs.github.com/enterprise-server@3.8/rest/enterprise-admin/announcement#set-the-global-announcement-banner - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSetAnnouncementResponse enterpriseAdminSetAnnouncement(org.openapis.openapi.models.operations.EnterpriseAdminSetAnnouncementRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/enterprise/announcement");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSetAnnouncementResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSetAnnouncementResponse() {{
            announcement = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Announcement out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Announcement.class);
                res.announcement = out;
            }
        }

        return res;
    }

    /**
     * Set custom labels for a self-hosted runner for an enterprise
     * Remove all previous custom labels and set the new custom labels for a specific
     * self-hosted runner configured in an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#set-custom-labels-for-a-self-hosted-runner-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSetCustomLabelsForSelfHostedRunnerForEnterpriseResponse enterpriseAdminSetCustomLabelsForSelfHostedRunnerForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminSetCustomLabelsForSelfHostedRunnerForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSetCustomLabelsForSelfHostedRunnerForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runners/{runner_id}/labels", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSetCustomLabelsForSelfHostedRunnerForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSetCustomLabelsForSelfHostedRunnerForEnterpriseResponse() {{
            enterpriseAdminSetCustomLabelsForSelfHostedRunnerForEnterprise200ApplicationJSONObject = null;
            basicError = null;
            validationErrorSimple = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminSetCustomLabelsForSelfHostedRunnerForEnterprise200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminSetCustomLabelsForSelfHostedRunnerForEnterprise200ApplicationJSON.class);
                res.enterpriseAdminSetCustomLabelsForSelfHostedRunnerForEnterprise200ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }
        else if (httpRes.statusCode() == 422) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ValidationErrorSimple out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ValidationErrorSimple.class);
                res.validationErrorSimple = out;
            }
        }

        return res;
    }

    /**
     * Set GitHub Actions permissions for an enterprise
     * Sets the GitHub Actions permissions policy for organizations and allowed actions in an enterprise.
     * 
     * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#set-github-actions-permissions-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSetGithubActionsPermissionsEnterpriseResponse enterpriseAdminSetGithubActionsPermissionsEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSetGithubActionsPermissionsEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/permissions", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSetGithubActionsPermissionsEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSetGithubActionsPermissionsEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Set SCIM information for a provisioned enterprise group
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Replaces an existing provisioned group\u2019s information.
     * 
     * You must provide all the information required for the group as if you were provisioning it for the first time. Any existing group information that you don't provide will be removed, including group membership. If you want to only update a specific attribute, use the [Update an attribute for a SCIM enterprise group](#update-an-attribute-for-a-scim-enterprise-group) endpoint instead.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#set-scim-information-for-a-provisioned-enterprise-group - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSetInformationForProvisionedEnterpriseGroupResponse enterpriseAdminSetInformationForProvisionedEnterpriseGroup(org.openapis.openapi.models.operations.EnterpriseAdminSetInformationForProvisionedEnterpriseGroupRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSetInformationForProvisionedEnterpriseGroupPathParams.class, baseUrl, "/scim/v2/Groups/{scim_group_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSetInformationForProvisionedEnterpriseGroupResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSetInformationForProvisionedEnterpriseGroupResponse() {{
            scimEnterpriseGroupResponse = null;
            scimError = null;
            scimError = null;
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimEnterpriseGroupResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimEnterpriseGroupResponse.class);
                res.scimEnterpriseGroupResponse = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 409) {
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * Set SCIM information for a provisioned enterprise user
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Replaces an existing provisioned user's information.
     * 
     * You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](#update-an-attribute-for-a-scim-enterprise-user) endpoint instead.
     * 
     * **Warning:** Setting `active: false` will suspend a user and obfuscate the user handle and user email. Since the implementation is a generic SCIM implementation and does not differentiate yet between different IdP providers, for Okta, the user GDPR data will not be purged and the credentials will not be removed.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#set-scim-information-for-a-provisioned-enterprise-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSetInformationForProvisionedEnterpriseUserResponse enterpriseAdminSetInformationForProvisionedEnterpriseUser(org.openapis.openapi.models.operations.EnterpriseAdminSetInformationForProvisionedEnterpriseUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSetInformationForProvisionedEnterpriseUserPathParams.class, baseUrl, "/scim/v2/Users/{scim_user_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSetInformationForProvisionedEnterpriseUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSetInformationForProvisionedEnterpriseUserResponse() {{
            scimEnterpriseUserResponse = null;
            scimError = null;
            scimError = null;
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimEnterpriseUserResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimEnterpriseUserResponse.class);
                res.scimEnterpriseUserResponse = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 409) {
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * Set organization access for a self-hosted runner group in an enterprise
     * Replaces the list of organizations that have access to a self-hosted runner configured in an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#set-organization-access-to-a-self-hosted-runner-group-in-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse enterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSetOrgAccessToSelfHostedRunnerGroupInEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Set selected organizations enabled for GitHub Actions in an enterprise
     * Replaces the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see "[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise)."
     * 
     * You must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#set-selected-organizations-enabled-for-github-actions-in-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseResponse enterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/permissions/organizations", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSetSelectedOrganizationsEnabledGithubActionsEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Set self-hosted runners in a group for an enterprise
     * Replaces the list of self-hosted runners that are part of an enterprise runner group.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#set-self-hosted-runners-in-a-group-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseResponse enterpriseAdminSetSelfHostedRunnersInGroupForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSetSelfHostedRunnersInGroupForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSetSelfHostedRunnersInGroupForEnterpriseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Set settings
     * Applies settings on your instance. For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#get-settings).
     * 
     * **Notes:**
     * 
     * - The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).
     * - You cannot set the management console password with the Enterprise administration API. Use the `ghe-set-password` utility to change the management console password. For more information, see "[Command-line utilities](https://docs.github.com/enterprise-server@3.8/admin/configuration/configuring-your-enterprise/command-line-utilities#ghe-set-password)."
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#set-settings - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSetSettingsResponse enterpriseAdminSetSettings(org.openapis.openapi.models.operations.EnterpriseAdminSetSettingsRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_SET_SETTINGS_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/settings");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "form");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSetSettingsResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSetSettingsResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Start a configuration process
     * This endpoint allows you to start a configuration process at any time for your updated settings to take effect:
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#start-a-configuration-process - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminStartConfigurationProcessResponse enterpriseAdminStartConfigurationProcess(org.openapis.openapi.models.operations.EnterpriseAdminStartConfigurationProcessRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_START_CONFIGURATION_PROCESS_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/configure");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminStartConfigurationProcessResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminStartConfigurationProcessResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202) {
        }

        return res;
    }

    /**
     * Start a pre-receive environment download
     * Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.
     * 
     * If a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.
     * 
     * The possible error messages are:
     * 
     * * _Cannot modify or delete the default environment_
     * * _Can not start a new download when a download is in progress_
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#start-a-pre-receive-environment-download - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminStartPreReceiveEnvironmentDownloadResponse enterpriseAdminStartPreReceiveEnvironmentDownload(org.openapis.openapi.models.operations.EnterpriseAdminStartPreReceiveEnvironmentDownloadRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminStartPreReceiveEnvironmentDownloadPathParams.class, baseUrl, "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminStartPreReceiveEnvironmentDownloadResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminStartPreReceiveEnvironmentDownloadResponse() {{
            preReceiveEnvironmentDownloadStatus = null;
            enterpriseAdminStartPreReceiveEnvironmentDownload422ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PreReceiveEnvironmentDownloadStatus out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PreReceiveEnvironmentDownloadStatus.class);
                res.preReceiveEnvironmentDownloadStatus = out;
            }
        }
        else if (httpRes.statusCode() == 422) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminStartPreReceiveEnvironmentDownload422ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminStartPreReceiveEnvironmentDownload422ApplicationJSON.class);
                res.enterpriseAdminStartPreReceiveEnvironmentDownload422ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Suspend a user
     * If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://docs.github.com/enterprise-server@3.8/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.
     * 
     * You can suspend any user account except your own.
     * 
     * Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@3.8/rest/overview/resources-in-the-rest-api#http-verbs)."
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#suspend-a-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSuspendUserResponse enterpriseAdminSuspendUser(org.openapis.openapi.models.operations.EnterpriseAdminSuspendUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSuspendUserPathParams.class, baseUrl, "/users/{username}/suspended", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSuspendUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSuspendUserResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Sync LDAP mapping for a team
     * Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-team - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForTeamResponse enterpriseAdminSyncLdapMappingForTeam(org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForTeamRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForTeamPathParams.class, baseUrl, "/admin/ldap/teams/{team_id}/sync", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForTeamResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForTeamResponse() {{
            enterpriseAdminSyncLdapMappingForTeam201ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForTeam201ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForTeam201ApplicationJSON.class);
                res.enterpriseAdminSyncLdapMappingForTeam201ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Sync LDAP mapping for a user
     * Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForUserResponse enterpriseAdminSyncLdapMappingForUser(org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForUserPathParams.class, baseUrl, "/admin/ldap/users/{username}/sync", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForUserResponse() {{
            enterpriseAdminSyncLdapMappingForUser201ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForUser201ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminSyncLdapMappingForUser201ApplicationJSON.class);
                res.enterpriseAdminSyncLdapMappingForUser201ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Unsuspend a user
     * If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://docs.github.com/enterprise-server@3.8/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap), this API is disabled and will return a `403` response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#unsuspend-a-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUnsuspendUserResponse enterpriseAdminUnsuspendUser(org.openapis.openapi.models.operations.EnterpriseAdminUnsuspendUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUnsuspendUserPathParams.class, baseUrl, "/users/{username}/suspended", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUnsuspendUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUnsuspendUserResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }

        return res;
    }

    /**
     * Update an attribute for a SCIM enterprise group
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Update a provisioned group\u2019s individual attributes.
     * 
     * To change a group\u2019s values, you must provide a specific Operations JSON format that contains at least one of the add, remove, or replace operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).  Update can also be used to add group memberships.
     * 
     * Group memberships can be sent one at a time or in batches for faster performance. **Note**: The memberships are referenced through a local user `id`, and the user will need to be created before they are referenced here.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-an-attribute-for-a-scim-enterprise-group - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdateAttributeForEnterpriseGroupResponse enterpriseAdminUpdateAttributeForEnterpriseGroup(org.openapis.openapi.models.operations.EnterpriseAdminUpdateAttributeForEnterpriseGroupRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdateAttributeForEnterpriseGroupPathParams.class, baseUrl, "/scim/v2/Groups/{scim_group_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdateAttributeForEnterpriseGroupResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdateAttributeForEnterpriseGroupResponse() {{
            scimEnterpriseGroupResponse = null;
            scimError = null;
            scimError = null;
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimEnterpriseGroupResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimEnterpriseGroupResponse.class);
                res.scimEnterpriseGroupResponse = out;
            }
        }
        else if (httpRes.statusCode() == 204 || httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 409) {
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * Update an attribute for a SCIM enterprise user
     * **Note:** The SCIM API endpoints for enterprise accounts are currently in *private* beta and are subject to change.
     * 
     * Update a provisioned user's individual attributes.
     * 
     * To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).
     * 
     * **Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `"path": "emails[type eq \"work\"]"` will not work.
     * 
     * **Warning:** Setting `active: false` will suspend a user and obfuscate the user handle and user email. Since the implementation is a generic SCIM implementation and does not differentiate yet between different IdP providers, for Okta, the user GDPR data will not be purged and the credentials will not be removed.
     * ```
     * {
     *   "Operations":[{
     *     "op":"replace",
     *     "value":{
     *       "active":false
     *     }
     *   }]
     * }
     * ```
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-an-attribute-for-a-scim-enterprise-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdateAttributeForEnterpriseUserResponse enterpriseAdminUpdateAttributeForEnterpriseUser(org.openapis.openapi.models.operations.EnterpriseAdminUpdateAttributeForEnterpriseUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdateAttributeForEnterpriseUserPathParams.class, baseUrl, "/scim/v2/Users/{scim_user_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdateAttributeForEnterpriseUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdateAttributeForEnterpriseUserResponse() {{
            scimEnterpriseUserResponse = null;
            scimError = null;
            scimError = null;
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimEnterpriseUserResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimEnterpriseUserResponse.class);
                res.scimEnterpriseUserResponse = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 429 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/scim+json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ScimError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ScimError.class);
                res.scimError = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 409) {
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * Update a global webhook
     * Parameters that are not provided will be overwritten with the default value or removed if no default exists.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-a-global-webhook - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdateGlobalWebhookResponse enterpriseAdminUpdateGlobalWebhook(org.openapis.openapi.models.operations.EnterpriseAdminUpdateGlobalWebhookRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdateGlobalWebhookPathParams.class, baseUrl, "/admin/hooks/{hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdateGlobalWebhookResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdateGlobalWebhookResponse() {{
            globalHook2 = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GlobalHook2 out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GlobalHook2.class);
                res.globalHook2 = out;
            }
        }

        return res;
    }

    /**
     * Update LDAP mapping for a team
     * Updates the [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. [LDAP synchronization](https://docs.github.com/enterprise-server@3.8/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap#enabling-ldap-sync) must be enabled to map LDAP entries to a team. Use the [Create a team](https://docs.github.com/enterprise-server@3.8/rest/reference/teams/#create-a-team) endpoint to create a team with LDAP mapping.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdateLdapMappingForTeamResponse enterpriseAdminUpdateLdapMappingForTeam(org.openapis.openapi.models.operations.EnterpriseAdminUpdateLdapMappingForTeamRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdateLdapMappingForTeamPathParams.class, baseUrl, "/admin/ldap/teams/{team_id}/mapping", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdateLdapMappingForTeamResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdateLdapMappingForTeamResponse() {{
            ldapMappingTeam = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.LdapMappingTeam out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.LdapMappingTeam.class);
                res.ldapMappingTeam = out;
            }
        }

        return res;
    }

    /**
     * Update LDAP mapping for a user
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdateLdapMappingForUserResponse enterpriseAdminUpdateLdapMappingForUser(org.openapis.openapi.models.operations.EnterpriseAdminUpdateLdapMappingForUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdateLdapMappingForUserPathParams.class, baseUrl, "/admin/ldap/users/{username}/mapping", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdateLdapMappingForUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdateLdapMappingForUserResponse() {{
            ldapMappingUser = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.LdapMappingUser out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.LdapMappingUser.class);
                res.ldapMappingUser = out;
            }
        }

        return res;
    }

    /**
     * Update an organization name
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-an-organization-name - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdateOrgNameResponse enterpriseAdminUpdateOrgName(org.openapis.openapi.models.operations.EnterpriseAdminUpdateOrgNameRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdateOrgNamePathParams.class, baseUrl, "/admin/organizations/{org}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdateOrgNameResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdateOrgNameResponse() {{
            enterpriseAdminUpdateOrgName202ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminUpdateOrgName202ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminUpdateOrgName202ApplicationJSON.class);
                res.enterpriseAdminUpdateOrgName202ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Update a pre-receive environment
     * You cannot modify the default environment. If you attempt to modify the default environment, you will receive a `422 Unprocessable Entity` response.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-a-pre-receive-environment - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveEnvironmentResponse enterpriseAdminUpdatePreReceiveEnvironment(org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveEnvironmentRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveEnvironmentPathParams.class, baseUrl, "/admin/pre-receive-environments/{pre_receive_environment_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveEnvironmentResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveEnvironmentResponse() {{
            preReceiveEnvironment = null;
            enterpriseAdminUpdatePreReceiveEnvironment422ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PreReceiveEnvironment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PreReceiveEnvironment.class);
                res.preReceiveEnvironment = out;
            }
        }
        else if (httpRes.statusCode() == 422) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveEnvironment422ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveEnvironment422ApplicationJSON.class);
                res.enterpriseAdminUpdatePreReceiveEnvironment422ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Update a pre-receive hook
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-a-pre-receive-hook - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookResponse enterpriseAdminUpdatePreReceiveHook(org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookPathParams.class, baseUrl, "/admin/pre-receive-hooks/{pre_receive_hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookResponse() {{
            preReceiveHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PreReceiveHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PreReceiveHook.class);
                res.preReceiveHook = out;
            }
        }

        return res;
    }

    /**
     * Update pre-receive hook enforcement for an organization
     * For pre-receive hooks which are allowed to be configured at the org level, you can set `enforcement` and `allow_downstream_configuration`
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-an-organization - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgResponse enterpriseAdminUpdatePreReceiveHookEnforcementForOrg(org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgPathParams.class, baseUrl, "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgResponse() {{
            orgPreReceiveHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.OrgPreReceiveHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.OrgPreReceiveHook.class);
                res.orgPreReceiveHook = out;
            }
        }

        return res;
    }

    /**
     * Update pre-receive hook enforcement for a repository
     * For pre-receive hooks which are allowed to be configured at the repo level, you can set `enforcement`
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-a-repository - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoResponse enterpriseAdminUpdatePreReceiveHookEnforcementForRepo(org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoPathParams.class, baseUrl, "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoResponse() {{
            repositoryPreReceiveHook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RepositoryPreReceiveHook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RepositoryPreReceiveHook.class);
                res.repositoryPreReceiveHook = out;
            }
        }

        return res;
    }

    /**
     * Update a self-hosted runner group for an enterprise
     * Updates the `name` and `visibility` of a self-hosted runner group in an enterprise.
     * 
     * You must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.
     * https://docs.github.com/enterprise-server@3.8/rest/reference/actions#update-a-self-hosted-runner-group-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseResponse enterpriseAdminUpdateSelfHostedRunnerGroupForEnterprise(org.openapis.openapi.models.operations.EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdateSelfHostedRunnerGroupForEnterpriseResponse() {{
            runnerGroupsEnterprise = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RunnerGroupsEnterprise out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RunnerGroupsEnterprise.class);
                res.runnerGroupsEnterprise = out;
            }
        }

        return res;
    }

    /**
     * Update the username for a user
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-the-username-for-a-user - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpdateUsernameForUserResponse enterpriseAdminUpdateUsernameForUser(org.openapis.openapi.models.operations.EnterpriseAdminUpdateUsernameForUserRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.EnterpriseAdminUpdateUsernameForUserPathParams.class, baseUrl, "/admin/users/{username}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpdateUsernameForUserResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpdateUsernameForUserResponse() {{
            enterpriseAdminUpdateUsernameForUser202ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.EnterpriseAdminUpdateUsernameForUser202ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.EnterpriseAdminUpdateUsernameForUser202ApplicationJSON.class);
                res.enterpriseAdminUpdateUsernameForUser202ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Upgrade a license
     * This API upgrades your license and also triggers the configuration process.
     * 
     * **Note:** The request body for this operation must be submitted as `multipart/form-data` data. You can can reference the license file by prefixing the filename with the `@` symbol using `curl`. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#-F).
     * https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#upgrade-a-license - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.EnterpriseAdminUpgradeLicenseResponse enterpriseAdminUpgradeLicense(org.openapis.openapi.models.operations.EnterpriseAdminUpgradeLicenseRequest request) throws Exception {
        String baseUrl = ENTERPRISE_ADMIN_UPGRADE_LICENSE_SERVERS[0];
        if (request.serverURL != null && !request.serverURL.isBlank()) {
            baseUrl = request.serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/api/upgrade");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "multipart");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.EnterpriseAdminUpgradeLicenseResponse res = new org.openapis.openapi.models.operations.EnterpriseAdminUpgradeLicenseResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202) {
        }

        return res;
    }

    /**
     * Get code security and analysis features for an enterprise
     * Gets code security and analysis settings for the specified enterprise.
     * To use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.
     * https://docs.github.com/enterprise-server@3.8/rest/enterprise-admin#get-code-security-analysis-features-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.SecretScanningGetSecurityAnalysisSettingsForEnterpriseResponse secretScanningGetSecurityAnalysisSettingsForEnterprise(org.openapis.openapi.models.operations.SecretScanningGetSecurityAnalysisSettingsForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.SecretScanningGetSecurityAnalysisSettingsForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/code_security_and_analysis", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.SecretScanningGetSecurityAnalysisSettingsForEnterpriseResponse res = new org.openapis.openapi.models.operations.SecretScanningGetSecurityAnalysisSettingsForEnterpriseResponse() {{
            enterpriseSecurityAnalysisSettings = null;
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.EnterpriseSecurityAnalysisSettings out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.EnterpriseSecurityAnalysisSettings.class);
                res.enterpriseSecurityAnalysisSettings = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * Update code security and analysis features for an enterprise
     * Updates the settings for advanced security, secret scanning, and push protection for new repositories in an enterprise.
     * To use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.
     * https://docs.github.com/enterprise-server@3.8/rest/enterprise-admin#update-code-security-and-analysis-features-for-an-enterprise - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.SecretScanningPatchSecurityAnalysisSettingsForEnterpriseResponse secretScanningPatchSecurityAnalysisSettingsForEnterprise(org.openapis.openapi.models.operations.SecretScanningPatchSecurityAnalysisSettingsForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.SecretScanningPatchSecurityAnalysisSettingsForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/code_security_and_analysis", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.SecretScanningPatchSecurityAnalysisSettingsForEnterpriseResponse res = new org.openapis.openapi.models.operations.SecretScanningPatchSecurityAnalysisSettingsForEnterpriseResponse() {{
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204 || httpRes.statusCode() == 422) {
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }

    /**
     * Enable or disable a security feature
     * Enables or disables the specified security feature for all repositories in an enterprise.
     * 
     * To use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.
     * https://docs.github.com/enterprise-server@3.8/rest/enterprise-admin#enable-or-disable-a-security-feature - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.SecretScanningPostSecurityProductEnablementForEnterpriseResponse secretScanningPostSecurityProductEnablementForEnterprise(org.openapis.openapi.models.operations.SecretScanningPostSecurityProductEnablementForEnterpriseRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.SecretScanningPostSecurityProductEnablementForEnterprisePathParams.class, baseUrl, "/enterprises/{enterprise}/{security_product}/{enablement}", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.SecretScanningPostSecurityProductEnablementForEnterpriseResponse res = new org.openapis.openapi.models.operations.SecretScanningPostSecurityProductEnablementForEnterpriseResponse() {{
            basicError = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204 || httpRes.statusCode() == 422) {
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BasicError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BasicError.class);
                res.basicError = out;
            }
        }

        return res;
    }
}