/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The type of bank account associated with the ACH payment.
 */
export enum ProxyGetPaymentMethodSnapshotAchAccountTypeEnum {
  BusinessChecking = "BusinessChecking",
  Checking = "Checking",
  Saving = "Saving",
}

/**
 * Specifies the type of direct debit transfer. The value of this field is dependent on the country of the user.
 *
 * @remarks
 *
 * Possible Values:
 *
 *
 * * `AutomatischIncasso` (NL)
 *
 * * `LastschriftDE` (Germany)
 *
 * * `LastschriftAT` (Austria)
 *
 * * `DemandeDePrelevement` (FR)
 *
 * * `DirectDebitUK` (UK)
 *
 * * `Domicil` (Belgium)
 *
 * * `LastschriftCH` (CH)
 *
 * * `RID` (Italy)
 *
 * * `OrdenDeDomiciliacion` (Spain)
 * * `Autogiro` (Sweden)
 * * `Betalingsservice` (Denmark)
 *
 */
export enum ProxyGetPaymentMethodSnapshotBankTransferTypeEnum {
  AutomatischIncasso = "AutomatischIncasso",
  LastschriftDE = "LastschriftDE",
  LastschriftAT = "LastschriftAT",
  DemandeDePrelevement = "DemandeDePrelevement",
  DirectDebitUK = "DirectDebitUK",
  Domicil = "Domicil",
  LastschriftCH = "LastschriftCH",
  Rid = "RID",
  OrdenDeDomiciliacion = "OrdenDeDomiciliacion",
  Autogiro = "Autogiro",
  Betalingsservice = "Betalingsservice",
}

/**
 * The type of credit card or debit card.
 */
export enum ProxyGetPaymentMethodSnapshotCreditCardTypeEnum {
  AmericanExpress = "AmericanExpress",
  Discover = "Discover",
  MasterCard = "MasterCard",
  Visa = "Visa",
}

/**
 * Indicates if the customer has an existing mandate or a new mandate. Only applicable to direct debit payment methods.
 */
export enum ProxyGetPaymentMethodSnapshotExistingMandateEnum {
  Yes = "Yes",
  No = "No",
}

/**
 * Specifies the status of the payment method.
 */
export enum ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum {
  Active = "Active",
  Closed = "Closed",
}

/**
 * Specifies the PayPal gateway: PayFlow Pro (Express Checkout) or Adaptive Payments.
 */
export enum ProxyGetPaymentMethodSnapshotPaypalTypeEnum {
  ExpressCheckout = "ExpressCheckout",
  AdaptivePayments = "AdaptivePayments",
}

/**
 * The type of payment method.
 */
export enum ProxyGetPaymentMethodSnapshotTypeEnum {
  Ach = "ACH",
  ApplePay = "ApplePay",
  BankTransfer = "BankTransfer",
  Cash = "Cash",
  Check = "Check",
  CreditCard = "CreditCard",
  CreditCardReferenceTransaction = "CreditCardReferenceTransaction",
  DebitCard = "DebitCard",
  Other = "Other",
  PayPal = "PayPal",
  WireTransfer = "WireTransfer",
}

export class ProxyGetPaymentMethodSnapshot extends SpeakeasyBase {
  /**
   * The ID of the customer account associated with this payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountId" })
  accountId?: string;

  /**
   * The nine-digit routing number or ABA number used by banks. Applicable to ACH payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AchAbaCode" })
  achAbaCode?: string;

  /**
   * The name of the account holder, which can be either a person or a company. Applicable to ACH payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AchAccountName" })
  achAccountName?: string;

  /**
   * This is a masked displayable version of the ACH account number, used for security purposes. For example: `XXXXXXXXX54321`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AchAccountNumberMask" })
  achAccountNumberMask?: string;

  /**
   * The type of bank account associated with the ACH payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AchAccountType" })
  achAccountType?: ProxyGetPaymentMethodSnapshotAchAccountTypeEnum;

  /**
   * The name of the bank where the ACH payment account is held.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AchBankName" })
  achBankName?: string;

  /**
   * The branch code of the bank used for direct debit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankBranchCode" })
  bankBranchCode?: string;

  /**
   * The check digit in the international bank account number, which confirms the validity of the account. Applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankCheckDigit" })
  bankCheckDigit?: string;

  /**
   * The city of the direct debit bank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankCity" })
  bankCity?: string;

  /**
   * The sort code or number that identifies the bank. This is also known as the sort code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankCode" })
  bankCode?: string;

  /**
   * The first six digits of the payment method's number, such as the credit card number or account number. Banks use this number to identify a payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankIdentificationNumber" })
  bankIdentificationNumber?: string;

  /**
   * The name of the direct debit bank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankName" })
  bankName?: string;

  /**
   * The zip code or postal code of the direct debit bank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankPostalCode" })
  bankPostalCode?: string;

  /**
   * The name of the street of the direct debit bank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankStreetName" })
  bankStreetName?: string;

  /**
   * The number of the direct debit bank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankStreetNumber" })
  bankStreetNumber?: string;

  /**
   * The name on the direct debit bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankTransferAccountName" })
  bankTransferAccountName?: string;

  /**
   * This is a masked displayable version of the bank account number, used for security purposes. For example: `XXXXXXXXX54321`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankTransferAccountNumberMask" })
  bankTransferAccountNumberMask?: string;

  /**
   * The type of the customer's bank account. Applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankTransferAccountType" })
  bankTransferAccountType?: string;

  /**
   * Specifies the type of direct debit transfer. The value of this field is dependent on the country of the user.
   *
   * @remarks
   *
   * Possible Values:
   *
   *
   * * `AutomatischIncasso` (NL)
   *
   * * `LastschriftDE` (Germany)
   *
   * * `LastschriftAT` (Austria)
   *
   * * `DemandeDePrelevement` (FR)
   *
   * * `DirectDebitUK` (UK)
   *
   * * `Domicil` (Belgium)
   *
   * * `LastschriftCH` (CH)
   *
   * * `RID` (Italy)
   *
   * * `OrdenDeDomiciliacion` (Spain)
   * * `Autogiro` (Sweden)
   * * `Betalingsservice` (Denmark)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankTransferType" })
  bankTransferType?: ProxyGetPaymentMethodSnapshotBankTransferTypeEnum;

  /**
   * The business identification code for Swiss direct payment methods that use the Global Collect payment gateway. Only applicable to direct debit payments in Switzerland with Global Collect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BusinessIdentificationCode" })
  businessIdentificationCode?: string;

  /**
   * The city of the customer's address. Applicable to debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "City" })
  city?: string;

  /**
   * The name of the company.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CompanyName" })
  companyName?: string;

  /**
   * The two-letter country code of the customer's address. Applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Country" })
  country?: string;

  /**
   * The first line of the card holder's address, which is often a street address or business name. Applicable to credit card and direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardAddress1" })
  creditCardAddress1?: string;

  /**
   * The second line of the card holder's address. Applicable to credit card and direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardAddress2" })
  creditCardAddress2?: string;

  /**
   * The city of the card holder's address. Applicable to credit card and direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardCity" })
  creditCardCity?: string;

  /**
   * The country of the card holder's address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardCountry" })
  creditCardCountry?: string;

  /**
   * The expiration month of the credit card or debit card. Applicable to credit card and direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardExpirationMonth" })
  creditCardExpirationMonth?: number;

  /**
   * The expiration month of the credit card or debit card. Applicable to credit card and direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardExpirationYear" })
  creditCardExpirationYear?: number;

  /**
   * The full name of the card holder. Applicable to credit card and direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardHolderName" })
  creditCardHolderName?: string;

  /**
   * A masked version of the credit or debit card number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardMaskNumber" })
  creditCardMaskNumber?: string;

  /**
   * The billing address's zip code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardPostalCode" })
  creditCardPostalCode?: string;

  /**
   * The billing address's state. Applicable if `CreditCardCountry` is either Canada or the US.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardState" })
  creditCardState?: string;

  /**
   * The type of credit card or debit card.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreditCardType" })
  creditCardType?: ProxyGetPaymentMethodSnapshotCreditCardTypeEnum;

  /**
   * The session ID of the user when the `PaymentMethod` was created or updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DeviceSessionId" })
  deviceSessionId?: string;

  /**
   * An email address for the payment method in addition to the bill to contact email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Email" })
  email?: string;

  /**
   * Indicates if the customer has an existing mandate or a new mandate. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ExistingMandate" })
  existingMandate?: ProxyGetPaymentMethodSnapshotExistingMandateEnum;

  /**
   * The customer's first name. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FirstName" })
  firstName?: string;

  /**
   * The International Bank Account Number. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IBAN" })
  iban?: string;

  /**
   * The IP address of the user when the payment method was created or updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IPAddress" })
  ipAddress?: string;

  /**
   * Object identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  /**
   * The unique identity number of the customer account.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IdentityNumber" })
  identityNumber?: string;

  /**
   * Whether the customer account is a company.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsCompany" })
  isCompany?: boolean;

  /**
   * The date of the last failed attempt to collect payment with this payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastFailedSaleTransactionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastFailedSaleTransactionDate?: Date;

  /**
   * The customer's last name. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastName" })
  lastName?: string;

  /**
   * The date of the most recent transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastTransactionDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastTransactionDateTime?: Date;

  /**
   * The status of the most recent transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastTransactionStatus" })
  lastTransactionStatus?: string;

  /**
   * The date when the mandate was created, in `yyyy-mm-dd` format. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MandateCreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  mandateCreationDate?: Date;

  /**
   * The ID of the mandate. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MandateID" })
  mandateID?: string;

  /**
   * Indicates if  the mandate was received. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MandateReceived" })
  mandateReceived?: string;

  /**
   * The date when the mandate was last updated, in `yyyy-mm-dd` format. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MandateUpdateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  mandateUpdateDate?: Date;

  /**
   * The number of allowable consecutive failures Zuora attempts with the payment method before stopping.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaxConsecutivePaymentFailures" })
  maxConsecutivePaymentFailures?: number;

  /**
   * The name of the payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * The number of consecutive failed payment for the payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NumConsecutiveFailures" })
  numConsecutiveFailures?: number;

  /**
   * Object identifier of the payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentMethodId" })
  paymentMethodId?: string;

  /**
   * Specifies the status of the payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentMethodStatus" })
  paymentMethodStatus?: ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum;

  /**
   * The retry interval setting, which prevents making a payment attempt if the last failed attempt was within the last specified number of hours.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentRetryWindow" })
  paymentRetryWindow?: number;

  /**
   * The PayPal billing agreement ID, which is a contract between two PayPal accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaypalBaid" })
  paypalBaid?: string;

  /**
   * The email address associated with the account holder's PayPal account or of the PayPal account of the person paying for the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaypalEmail" })
  paypalEmail?: string;

  /**
   * PayPal's Adaptive Payments API key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaypalPreapprovalKey" })
  paypalPreapprovalKey?: string;

  /**
   * Specifies the PayPal gateway: PayFlow Pro (Express Checkout) or Adaptive Payments.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaypalType" })
  paypalType?: ProxyGetPaymentMethodSnapshotPaypalTypeEnum;

  /**
   * The phone number that the account holder registered with the bank. This field is used for credit card validation when passing to a gateway.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Phone" })
  phone?: string;

  /**
   * The zip code of the customer's address. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PostalCode" })
  postalCode?: string;

  /**
   * A gateway unique identifier that replaces sensitive payment method data. Applicable to CC Reference Transaction payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SecondTokenId" })
  secondTokenId?: string;

  /**
   * The state of the customer's address. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: string;

  /**
   * The street name of the customer's address. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StreetName" })
  streetName?: string;

  /**
   * The street number of the customer's address. Only applicable to direct debit payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StreetNumber" })
  streetNumber?: string;

  /**
   * A gateway unique identifier that replaces sensitive payment method data or represents a gateway's unique customer profile. Applicable to CC Reference Transaction payment methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TokenId" })
  tokenId?: string;

  /**
   * The number of error payments that used this payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TotalNumberOfErrorPayments" })
  totalNumberOfErrorPayments?: number;

  /**
   * The number of successful payments that used this payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TotalNumberOfProcessedPayments" })
  totalNumberOfProcessedPayments?: number;

  /**
   * The type of payment method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: ProxyGetPaymentMethodSnapshotTypeEnum;

  /**
   * Determines whether to use the default retry rules configured in the Zuora Payments settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UseDefaultRetryRule" })
  useDefaultRetryRule?: boolean;
}
