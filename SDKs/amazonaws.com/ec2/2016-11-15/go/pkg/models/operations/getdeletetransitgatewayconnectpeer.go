// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteTransitGatewayConnectPeerActionEnum
type GETDeleteTransitGatewayConnectPeerActionEnum string

const (
	GETDeleteTransitGatewayConnectPeerActionEnumDeleteTransitGatewayConnectPeer GETDeleteTransitGatewayConnectPeerActionEnum = "DeleteTransitGatewayConnectPeer"
)

func (e *GETDeleteTransitGatewayConnectPeerActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteTransitGatewayConnectPeer":
		*e = GETDeleteTransitGatewayConnectPeerActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTransitGatewayConnectPeerActionEnum: %s", s)
	}
}

// GETDeleteTransitGatewayConnectPeerVersionEnum
type GETDeleteTransitGatewayConnectPeerVersionEnum string

const (
	GETDeleteTransitGatewayConnectPeerVersionEnumTwoThousandAndSixteen1115 GETDeleteTransitGatewayConnectPeerVersionEnum = "2016-11-15"
)

func (e *GETDeleteTransitGatewayConnectPeerVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteTransitGatewayConnectPeerVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTransitGatewayConnectPeerVersionEnum: %s", s)
	}
}

type GETDeleteTransitGatewayConnectPeerQueryParams struct {
	Action GETDeleteTransitGatewayConnectPeerActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the Connect peer.
	TransitGatewayConnectPeerID string                                        `queryParam:"style=form,explode=true,name=TransitGatewayConnectPeerId"`
	Version                     GETDeleteTransitGatewayConnectPeerVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteTransitGatewayConnectPeerHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteTransitGatewayConnectPeerRequest struct {
	QueryParams GETDeleteTransitGatewayConnectPeerQueryParams
	Headers     GETDeleteTransitGatewayConnectPeerHeaders
}

type GETDeleteTransitGatewayConnectPeerResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
