/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Defines the service name to use when configuring an authentication resource in your Amplify project.
 */
export enum UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnum {
  UserPoolOnly = "USER_POOL_ONLY",
  IdentityPoolAndUserPool = "IDENTITY_POOL_AND_USER_POOL",
}

/**
 * Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.
 */
export class UpdateBackendAuthRequestBodyResourceConfigIdentityPoolConfigs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "UnauthenticatedLogin" })
  unauthenticatedLogin?: boolean;
}

/**
 * Defines the service name to use when configuring an authentication resource in your Amplify project.
 */
export enum UpdateBackendAuthRequestBodyResourceConfigServiceEnum {
  Cognito = "COGNITO",
}

/**
 * <b>(DEPRECATED)</b> Describes which mode to use (either SMS or email) to deliver messages to app users that want to recover their password.
 */
export enum UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum {
  Email = "EMAIL",
  Sms = "SMS",
}

/**
 * <b>(DEPRECATED)</b> The configuration for the email sent when an app user forgets their password.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordEmailSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EmailMessage" })
  emailMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EmailSubject" })
  emailSubject?: string;
}

/**
 * <b>(DEPRECATED)</b> The configuration for the SMS message sent when an Amplify app user forgets their password.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordSmsSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "SmsMessage" })
  smsMessage?: string;
}

/**
 * <b>(DEPRECATED)</b> Describes the forgot password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPassword extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DeliveryMethod" })
  deliveryMethod?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EmailSettings" })
  @Type(
    () =>
      UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordEmailSettings
  )
  emailSettings?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordEmailSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "SmsSettings" })
  @Type(
    () =>
      UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordSmsSettings
  )
  smsSettings?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordSmsSettings;
}

/**
 * The settings of your MFA configuration for the backend of your Amplify project.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfaSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "MfaTypes" })
  mfaTypes?: shared.MfaTypesElementEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "SmsMessage" })
  smsMessage?: string;
}

/**
 * Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfa extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "MFAMode" })
  mfaMode?: shared.MFAModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Settings" })
  @Type(
    () => UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfaSettings
  )
  settings?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfaSettings;
}

/**
 * The OAuth grant type to allow app users to authenticate from your Amplify app.
 */
export enum UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum {
  Code = "CODE",
  Implicit = "IMPLICIT",
}

/**
 * Describes third-party social federation configurations for allowing your users to sign in with OAuth.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthSocialProviderSettings extends SpeakeasyBase {
  /**
   * Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Facebook" })
  @Type(() => shared.BackendAuthSocialProviderConfig)
  facebook?: shared.BackendAuthSocialProviderConfig;

  /**
   * Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Google" })
  @Type(() => shared.BackendAuthSocialProviderConfig)
  google?: shared.BackendAuthSocialProviderConfig;

  /**
   * Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LoginWithAmazon" })
  @Type(() => shared.BackendAuthSocialProviderConfig)
  loginWithAmazon?: shared.BackendAuthSocialProviderConfig;

  /**
   * Describes Apple social federation configurations for allowing your app users to sign in using OAuth.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SignInWithApple" })
  @Type(() => shared.BackendAuthAppleProviderConfig)
  signInWithApple?: shared.BackendAuthAppleProviderConfig;
}

/**
 * Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuth extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DomainPrefix" })
  domainPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OAuthGrantType" })
  oAuthGrantType?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "OAuthScopes" })
  oAuthScopes?: shared.OAuthScopesElementEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "RedirectSignInURIs" })
  redirectSignInURIs?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "RedirectSignOutURIs" })
  redirectSignOutURIs?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SocialProviderSettings" })
  @Type(
    () =>
      UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthSocialProviderSettings
  )
  socialProviderSettings?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthSocialProviderSettings;
}

/**
 * Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsPasswordPolicy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalConstraints" })
  additionalConstraints?: shared.AdditionalConstraintsElementEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "MinimumLength" })
  minimumLength?: number;
}

/**
 * The type of verification message to send.
 */
export enum UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum {
  Email = "EMAIL",
  Sms = "SMS",
}

/**
 * The settings for the email message.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageEmailSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EmailMessage" })
  emailMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EmailSubject" })
  emailSubject?: string;
}

/**
 * The settings for the SMS message.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageSmsSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "SmsMessage" })
  smsMessage?: string;
}

/**
 * Describes the email or SMS verification message for your Amazon Cognito user pool, configured as a part of your Amplify project.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DeliveryMethod" })
  deliveryMethod: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EmailSettings" })
  @Type(
    () =>
      UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageEmailSettings
  )
  emailSettings?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageEmailSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "SmsSettings" })
  @Type(
    () =>
      UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageSmsSettings
  )
  smsSettings?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageSmsSettings;
}

/**
 * Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.
 */
export class UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ForgotPassword" })
  @Type(
    () =>
      UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPassword
  )
  forgotPassword?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPassword;

  @SpeakeasyMetadata()
  @Expose({ name: "Mfa" })
  @Type(() => UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfa)
  mfa?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfa;

  @SpeakeasyMetadata()
  @Expose({ name: "OAuth" })
  @Type(() => UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuth)
  oAuth?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuth;

  @SpeakeasyMetadata()
  @Expose({ name: "PasswordPolicy" })
  @Type(
    () =>
      UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsPasswordPolicy
  )
  passwordPolicy?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsPasswordPolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "VerificationMessage" })
  @Type(
    () =>
      UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessage
  )
  verificationMessage?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessage;
}

/**
 * Defines the resource configuration when updating an authentication resource in your Amplify project.
 */
export class UpdateBackendAuthRequestBodyResourceConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AuthResources" })
  authResources?: UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "IdentityPoolConfigs" })
  @Type(() => UpdateBackendAuthRequestBodyResourceConfigIdentityPoolConfigs)
  identityPoolConfigs?: UpdateBackendAuthRequestBodyResourceConfigIdentityPoolConfigs;

  @SpeakeasyMetadata()
  @Expose({ name: "Service" })
  service?: UpdateBackendAuthRequestBodyResourceConfigServiceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UserPoolConfigs" })
  @Type(() => UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigs)
  userPoolConfigs?: UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigs;
}

export class UpdateBackendAuthRequestBody extends SpeakeasyBase {
  /**
   * Defines the resource configuration when updating an authentication resource in your Amplify project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceConfig" })
  @Type(() => UpdateBackendAuthRequestBodyResourceConfig)
  resourceConfig: UpdateBackendAuthRequestBodyResourceConfig;

  /**
   * The name of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceName" })
  resourceName: string;
}

export class UpdateBackendAuthRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateBackendAuthRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The app ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=appId",
  })
  appId: string;

  /**
   * The name of the backend environment.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=backendEnvironmentName",
  })
  backendEnvironmentName: string;
}

export class UpdateBackendAuthResponse extends SpeakeasyBase {
  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * GatewayTimeoutException
   */
  @SpeakeasyMetadata()
  gatewayTimeoutException?: any;

  /**
   * NotFoundException
   */
  @SpeakeasyMetadata()
  notFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * TooManyRequestsException
   */
  @SpeakeasyMetadata()
  tooManyRequestsException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateBackendAuthResponse?: shared.UpdateBackendAuthResponse;
}
