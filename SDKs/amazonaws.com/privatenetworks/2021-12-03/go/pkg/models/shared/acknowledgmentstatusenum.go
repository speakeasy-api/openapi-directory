// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AcknowledgmentStatusEnum string

const (
	AcknowledgmentStatusEnumAcknowledging  AcknowledgmentStatusEnum = "ACKNOWLEDGING"
	AcknowledgmentStatusEnumAcknowledged   AcknowledgmentStatusEnum = "ACKNOWLEDGED"
	AcknowledgmentStatusEnumUnacknowledged AcknowledgmentStatusEnum = "UNACKNOWLEDGED"
)

func (e AcknowledgmentStatusEnum) ToPointer() *AcknowledgmentStatusEnum {
	return &e
}

func (e *AcknowledgmentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACKNOWLEDGING":
		fallthrough
	case "ACKNOWLEDGED":
		fallthrough
	case "UNACKNOWLEDGED":
		*e = AcknowledgmentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AcknowledgmentStatusEnum: %v", v)
	}
}
