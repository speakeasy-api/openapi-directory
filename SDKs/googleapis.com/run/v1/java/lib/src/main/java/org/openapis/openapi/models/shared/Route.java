/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Route - Route is responsible for configuring ingress over a collection of Revisions. Some of the Revisions a Route distributes traffic over may be specified by referencing the Configuration responsible for creating them; in these cases the Route is additionally responsible for monitoring the Configuration for "latest ready" revision changes, and smoothly rolling out latest revisions. Cloud Run currently supports referencing a single Configuration to automatically deploy the "latest ready" Revision from that Configuration.
 */
public class Route {
    /**
     * The API version for this call such as "serving.knative.dev/v1".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiVersion")
    public String apiVersion;

    public Route withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }
    
    /**
     * The kind of this resource, in this case always "Route".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Route withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public ObjectMeta metadata;

    public Route withMetadata(ObjectMeta metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * RouteSpec holds the desired state of the Route (from the client).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spec")
    public RouteSpec spec;

    public Route withSpec(RouteSpec spec) {
        this.spec = spec;
        return this;
    }
    
    /**
     * RouteStatus communicates the observed state of the Route (from the controller).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public RouteStatus status;

    public Route withStatus(RouteStatus status) {
        this.status = status;
        return this;
    }
    
    public Route(){}
}
