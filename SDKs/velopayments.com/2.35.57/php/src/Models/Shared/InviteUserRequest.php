<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InviteUserRequest - Details of User to invite
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InviteUserRequest
{
    /**
     * the email address of the invited user
     * 
     * @var string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $email;
    
    /**
     * The payorId or payeeId or null if the user is a backoffice admin
     * 
     * 
     * 
     * @var ?string $entityId
     */
	#[\JMS\Serializer\Annotation\SerializedName('entityId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $entityId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('firstName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('lastName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastName = null;
    
    /**
     * <p>The MFA type that the user will use</p>
     * 
     * <p>The type may be conditional on the role(s) the user has</p>
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\InviteUserRequestMfaTypeEnum $mfaType
     */
	#[\JMS\Serializer\Annotation\SerializedName('mfaType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InviteUserRequestMfaTypeEnum>')]
    public InviteUserRequestMfaTypeEnum $mfaType;
    
    /**
     * The main contact number for the user
     * 
     * 
     * 
     * @var string $primaryContactNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryContactNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryContactNumber;
    
    /**
     * The role(s) for the user
     * 
     * The role must exist
     * The role can be a custom role or a system role but the invoker must have the permissions to assign the role
     * System roles are: velo.backoffice.admin, velo.payor.master_admin, velo.payor.admin, velo.payor.support, velo.payee.admin, velo.payee.support
     * 
     * 
     * @var array<string> $roles
     */
	#[\JMS\Serializer\Annotation\SerializedName('roles')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $roles;
    
    /**
     * The secondary contact number for the user
     * 
     * 
     * 
     * @var ?string $secondaryContactNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('secondaryContactNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secondaryContactNumber = null;
    
    /**
     * The phone number of a device that the user can receive sms messages on
     * 
     * 
     * 
     * @var string $smsNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('smsNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $smsNumber;
    
    /**
     * Will default to PAYOR if not provided but entityId is provided
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InviteUserRequestUserTypeEnum $userType
     */
	#[\JMS\Serializer\Annotation\SerializedName('userType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InviteUserRequestUserTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InviteUserRequestUserTypeEnum $userType = null;
    
    /**
     * Optional property that MUST be suppied when manually verifying a user
     * 
     * The user's smsNumber is registered via a separate endpoint and an OTP sent to them
     * 
     * 
     * @var ?string $verificationCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('verificationCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $verificationCode = null;
    
	public function __construct()
	{
		$this->email = "";
		$this->entityId = null;
		$this->firstName = null;
		$this->lastName = null;
		$this->mfaType = \OpenAPI\OpenAPI\Models\Shared\InviteUserRequestMfaTypeEnum::SMS;
		$this->primaryContactNumber = "";
		$this->roles = [];
		$this->secondaryContactNumber = null;
		$this->smsNumber = "";
		$this->userType = null;
		$this->verificationCode = null;
	}
}
