/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * Project - Contains properties of a Planning project.
 */
public class Project {
    /**
     * Account ID of this project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public Project withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Advertiser ID of this project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserId")
    public String advertiserId;

    public Project withAdvertiserId(String advertiserId) {
        this.advertiserId = advertiserId;
        return this;
    }
    
    /**
     * Audience age group of this project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceAgeGroup")
    public ProjectAudienceAgeGroupEnum audienceAgeGroup;

    public Project withAudienceAgeGroup(ProjectAudienceAgeGroupEnum audienceAgeGroup) {
        this.audienceAgeGroup = audienceAgeGroup;
        return this;
    }
    
    /**
     * Audience gender of this project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceGender")
    public ProjectAudienceGenderEnum audienceGender;

    public Project withAudienceGender(ProjectAudienceGenderEnum audienceGender) {
        this.audienceGender = audienceGender;
        return this;
    }
    
    /**
     * Budget of this project in the currency specified by the current account. The value stored in this field represents only the non-fractional amount. For example, for USD, the smallest value that can be represented by this field is 1 US dollar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("budget")
    public String budget;

    public Project withBudget(String budget) {
        this.budget = budget;
        return this;
    }
    
    /**
     * Client billing code of this project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientBillingCode")
    public String clientBillingCode;

    public Project withClientBillingCode(String clientBillingCode) {
        this.clientBillingCode = clientBillingCode;
        return this;
    }
    
    /**
     * Name of the project client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientName")
    public String clientName;

    public Project withClientName(String clientName) {
        this.clientName = clientName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("endDate")
    public LocalDate endDate;

    public Project withEndDate(LocalDate endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * ID of this project. This is a read-only, auto-generated field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Project withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "dfareporting#project".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Project withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Modification timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastModifiedInfo")
    public LastModifiedInfo lastModifiedInfo;

    public Project withLastModifiedInfo(LastModifiedInfo lastModifiedInfo) {
        this.lastModifiedInfo = lastModifiedInfo;
        return this;
    }
    
    /**
     * Name of this project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Project withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Overview of this project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overview")
    public String overview;

    public Project withOverview(String overview) {
        this.overview = overview;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("startDate")
    public LocalDate startDate;

    public Project withStartDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * Subaccount ID of this project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subaccountId")
    public String subaccountId;

    public Project withSubaccountId(String subaccountId) {
        this.subaccountId = subaccountId;
        return this;
    }
    
    /**
     * Number of clicks that the advertiser is targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetClicks")
    public String targetClicks;

    public Project withTargetClicks(String targetClicks) {
        this.targetClicks = targetClicks;
        return this;
    }
    
    /**
     * Number of conversions that the advertiser is targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetConversions")
    public String targetConversions;

    public Project withTargetConversions(String targetConversions) {
        this.targetConversions = targetConversions;
        return this;
    }
    
    /**
     * CPA that the advertiser is targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetCpaNanos")
    public String targetCpaNanos;

    public Project withTargetCpaNanos(String targetCpaNanos) {
        this.targetCpaNanos = targetCpaNanos;
        return this;
    }
    
    /**
     * CPC that the advertiser is targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetCpcNanos")
    public String targetCpcNanos;

    public Project withTargetCpcNanos(String targetCpcNanos) {
        this.targetCpcNanos = targetCpcNanos;
        return this;
    }
    
    /**
     * vCPM from Active View that the advertiser is targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetCpmActiveViewNanos")
    public String targetCpmActiveViewNanos;

    public Project withTargetCpmActiveViewNanos(String targetCpmActiveViewNanos) {
        this.targetCpmActiveViewNanos = targetCpmActiveViewNanos;
        return this;
    }
    
    /**
     * CPM that the advertiser is targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetCpmNanos")
    public String targetCpmNanos;

    public Project withTargetCpmNanos(String targetCpmNanos) {
        this.targetCpmNanos = targetCpmNanos;
        return this;
    }
    
    /**
     * Number of impressions that the advertiser is targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetImpressions")
    public String targetImpressions;

    public Project withTargetImpressions(String targetImpressions) {
        this.targetImpressions = targetImpressions;
        return this;
    }
    
    public Project(){}
}
