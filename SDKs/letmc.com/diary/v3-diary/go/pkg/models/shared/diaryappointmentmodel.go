// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DiaryAppointmentModelRemindBeforeEnum - The number of minutes before the appointment start date/time to remind the staff member. -1 means don't remind.
type DiaryAppointmentModelRemindBeforeEnum string

const (
	DiaryAppointmentModelRemindBeforeEnumMin        DiaryAppointmentModelRemindBeforeEnum = "Min"
	DiaryAppointmentModelRemindBeforeEnumMin2       DiaryAppointmentModelRemindBeforeEnum = "Min2"
	DiaryAppointmentModelRemindBeforeEnumMin5       DiaryAppointmentModelRemindBeforeEnum = "Min5"
	DiaryAppointmentModelRemindBeforeEnumMin10      DiaryAppointmentModelRemindBeforeEnum = "Min10"
	DiaryAppointmentModelRemindBeforeEnumMin15      DiaryAppointmentModelRemindBeforeEnum = "Min15"
	DiaryAppointmentModelRemindBeforeEnumMin30      DiaryAppointmentModelRemindBeforeEnum = "Min30"
	DiaryAppointmentModelRemindBeforeEnumMin45      DiaryAppointmentModelRemindBeforeEnum = "Min45"
	DiaryAppointmentModelRemindBeforeEnumHour       DiaryAppointmentModelRemindBeforeEnum = "Hour"
	DiaryAppointmentModelRemindBeforeEnumHour2      DiaryAppointmentModelRemindBeforeEnum = "Hour2"
	DiaryAppointmentModelRemindBeforeEnumHour3      DiaryAppointmentModelRemindBeforeEnum = "Hour3"
	DiaryAppointmentModelRemindBeforeEnumHour6      DiaryAppointmentModelRemindBeforeEnum = "Hour6"
	DiaryAppointmentModelRemindBeforeEnumHour12     DiaryAppointmentModelRemindBeforeEnum = "Hour12"
	DiaryAppointmentModelRemindBeforeEnumDay        DiaryAppointmentModelRemindBeforeEnum = "Day"
	DiaryAppointmentModelRemindBeforeEnumDay2       DiaryAppointmentModelRemindBeforeEnum = "Day2"
	DiaryAppointmentModelRemindBeforeEnumDay3       DiaryAppointmentModelRemindBeforeEnum = "Day3"
	DiaryAppointmentModelRemindBeforeEnumWeek       DiaryAppointmentModelRemindBeforeEnum = "Week"
	DiaryAppointmentModelRemindBeforeEnumNoReminder DiaryAppointmentModelRemindBeforeEnum = "NoReminder"
)

func (e DiaryAppointmentModelRemindBeforeEnum) ToPointer() *DiaryAppointmentModelRemindBeforeEnum {
	return &e
}

func (e *DiaryAppointmentModelRemindBeforeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Min":
		fallthrough
	case "Min2":
		fallthrough
	case "Min5":
		fallthrough
	case "Min10":
		fallthrough
	case "Min15":
		fallthrough
	case "Min30":
		fallthrough
	case "Min45":
		fallthrough
	case "Hour":
		fallthrough
	case "Hour2":
		fallthrough
	case "Hour3":
		fallthrough
	case "Hour6":
		fallthrough
	case "Hour12":
		fallthrough
	case "Day":
		fallthrough
	case "Day2":
		fallthrough
	case "Day3":
		fallthrough
	case "Week":
		fallthrough
	case "NoReminder":
		*e = DiaryAppointmentModelRemindBeforeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DiaryAppointmentModelRemindBeforeEnum: %v", v)
	}
}

// DiaryAppointmentModel - Represents a single diary appointment for a staff member.
type DiaryAppointmentModel struct {
	// The diary appointment type.
	AppointmentType *string `json:"AppointmentType,omitempty"`
	// Whether the appointment has been cancelled.
	Cancelled *bool `json:"Cancelled,omitempty"`
	// The appointment comments text.
	Comment *string `json:"Comment,omitempty"`
	// The date/time this appointment was created.
	CreatedAt *time.Time `json:"CreatedAt,omitempty"`
	// The staff member that created this appointment.
	CreatedBy *string `json:"CreatedBy,omitempty"`
	// A unique identifier defining the object and change revision.
	ETag *string `json:"ETag,omitempty"`
	// The end date/time of this appointment.
	End *time.Time `json:"End,omitempty"`
	// Linked Guest Model:-
	LinkedGuest []LinkedGuestModel `json:"LinkedGuest,omitempty"`
	// A collection of properties linked to the appointment:-
	LinkedProperties []LinkedPropertiesModel `json:"LinkedProperties,omitempty"`
	// Date appointment next repeats:-
	NextRecurringDate *time.Time `json:"NextRecurringDate,omitempty"`
	// The unique Object ID (OID).
	Oid *string `json:"OID,omitempty"`
	// The reccurrence interval for the appointment:-
	Recurrence *int `json:"Recurrence,omitempty"`
	// The type of recurrence:-
	RecurrenceType *string `json:"RecurrenceType,omitempty"`
	// The date/time to remind the staff member of this appointment.
	RemindAt *time.Time `json:"RemindAt,omitempty"`
	// The number of minutes before the appointment start date/time to remind the staff member. -1 means don't remind.
	RemindBefore *DiaryAppointmentModelRemindBeforeEnum `json:"RemindBefore,omitempty"`
	// The staff member holding this appointment.
	Staff *string `json:"Staff,omitempty"`
	// The start date/time of this appointment.
	Start *time.Time `json:"Start,omitempty"`
	// The appointment subject text.
	Subject *string `json:"Subject,omitempty"`
}
