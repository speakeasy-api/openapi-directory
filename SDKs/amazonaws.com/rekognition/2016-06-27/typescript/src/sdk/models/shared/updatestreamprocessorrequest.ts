/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RegionOfInterest } from "./regionofinterest";
import { StreamProcessorDataSharingPreference } from "./streamprocessordatasharingpreference";
import { StreamProcessorParameterToDeleteEnum } from "./streamprocessorparametertodeleteenum";
import { StreamProcessorSettingsForUpdate } from "./streamprocessorsettingsforupdate";
import { Expose, Type } from "class-transformer";

export class UpdateStreamProcessorRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataSharingPreferenceForUpdate" })
  @Type(() => StreamProcessorDataSharingPreference)
  dataSharingPreferenceForUpdate?: StreamProcessorDataSharingPreference;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParametersToDelete" })
  parametersToDelete?: StreamProcessorParameterToDeleteEnum[];

  @SpeakeasyMetadata({ elemType: RegionOfInterest })
  @Expose({ name: "RegionsOfInterestForUpdate" })
  @Type(() => RegionOfInterest)
  regionsOfInterestForUpdate?: RegionOfInterest[];

  @SpeakeasyMetadata()
  @Expose({ name: "SettingsForUpdate" })
  @Type(() => StreamProcessorSettingsForUpdate)
  settingsForUpdate?: StreamProcessorSettingsForUpdate;
}
