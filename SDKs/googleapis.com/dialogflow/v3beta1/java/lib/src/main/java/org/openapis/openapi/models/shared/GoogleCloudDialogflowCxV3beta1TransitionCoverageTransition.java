/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition - A transition in a page.
 */
public class GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition {
    /**
     * Whether or not the transition is covered by at least one of the agent's test cases.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("covered")
    public Boolean covered;
    public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition withCovered(Boolean covered) {
        this.covered = covered;
        return this;
    }
    
    /**
     * An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventHandler")
    public GoogleCloudDialogflowCxV3beta1EventHandler eventHandler;
    public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition withEventHandler(GoogleCloudDialogflowCxV3beta1EventHandler eventHandler) {
        this.eventHandler = eventHandler;
        return this;
    }
    
    /**
     * The index of a transition in the transition list. Starting from 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("index")
    public Integer index;
    public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition withIndex(Integer index) {
        this.index = index;
        return this;
    }
    
    /**
     * The source or target of a transition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode source;
    public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition withSource(GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode source) {
        this.source = source;
        return this;
    }
    
    /**
     * The source or target of a transition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target")
    public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode target;
    public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition withTarget(GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode target) {
        this.target = target;
        return this;
    }
    
    /**
     * A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transitionRoute")
    public GoogleCloudDialogflowCxV3beta1TransitionRoute transitionRoute;
    public GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition withTransitionRoute(GoogleCloudDialogflowCxV3beta1TransitionRoute transitionRoute) {
        this.transitionRoute = transitionRoute;
        return this;
    }
    
}
