// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type InvokeDeviceMethodPathParams struct {
	// The unique identifier of the device.
	DeviceID string `pathParam:"style=simple,explode=false,name=deviceId"`
}

type InvokeDeviceMethodHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// InvokeDeviceMethodRequestBodyDeviceMethod - The device method to invoke.
type InvokeDeviceMethodRequestBodyDeviceMethod struct {
	DeviceType *string `json:"DeviceType,omitempty"`
	MethodName *string `json:"MethodName,omitempty"`
}

type InvokeDeviceMethodRequestBody struct {
	// The device method to invoke.
	DeviceMethod *InvokeDeviceMethodRequestBodyDeviceMethod `json:"deviceMethod,omitempty"`
	// A JSON encoded string containing the device method request parameters.
	DeviceMethodParameters *string `json:"deviceMethodParameters,omitempty"`
}

type InvokeDeviceMethodRequest struct {
	PathParams InvokeDeviceMethodPathParams
	Headers    InvokeDeviceMethodHeaders
	Request    InvokeDeviceMethodRequestBody `request:"mediaType=application/json"`
}

type InvokeDeviceMethodResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	InvokeDeviceMethodResponse *shared.InvokeDeviceMethodResponse
	// PreconditionFailedException
	PreconditionFailedException interface{}
	// RangeNotSatisfiableException
	RangeNotSatisfiableException interface{}
	// ResourceConflictException
	ResourceConflictException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
