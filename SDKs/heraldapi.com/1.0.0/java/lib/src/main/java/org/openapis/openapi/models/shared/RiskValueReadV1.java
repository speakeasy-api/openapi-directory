/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RiskValueReadV1 - Risk values assign specific values to risk parameters.
 */
public class RiskValueReadV1 {
    /**
     * True if the value potentially impacts the relevance of other risk or coverage values. Only returned by `/applications` endpoint. Read more about [conditionality](https://www.heraldapi.com/docs/risk-and-coverage-parameters#affects_conditions). 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("affects_conditions")
    public Boolean affectsConditions;

    public RiskValueReadV1 withAffectsConditions(Boolean affectsConditions) {
        this.affectsConditions = affectsConditions;
        return this;
    }
    
    /**
     * Array of "children" coverage values, only required for certain coverage parameters.
     * 
     * Objects in the `child_risk_values` array should adhere to the `risk_values` schema. Read more about [parent/child relationships](https://www.heraldapi.com/docs/risk-and-coverage-parameters#parent_child).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("child_risk_values")
    public RiskValueReadV1[] childRiskValues;

    public RiskValueReadV1 withChildRiskValues(RiskValueReadV1[] childRiskValues) {
        this.childRiskValues = childRiskValues;
        return this;
    }
    
    /**
     * Array of risk parameters that triggered this question. Only returned by /applications endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditional_on")
    public RiskValueReadV1ConditionalOn conditionalOn;

    public RiskValueReadV1 withConditionalOn(RiskValueReadV1ConditionalOn conditionalOn) {
        this.conditionalOn = conditionalOn;
        return this;
    }
    
    /**
     * True if multiple values can be submitted with the same parameter ID. For example, since an application can have more than one location, the associated risk value will have `creates_array: true`. Read more about [`creates_array`](https://www.heraldapi.com/docs/risk-and-coverage-parameters#creates_array).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creates_array")
    public Boolean createsArray;

    public RiskValueReadV1 withCreatesArray(Boolean createsArray) {
        this.createsArray = createsArray;
        return this;
    }
    
    /**
     * Recommended input type. Only returned by `/applications` endpoint. [Full list of input types](https://www.heraldapi.com/docs/input-types).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("input_type")
    public RiskValueReadV1InputTypeEnum inputType;

    public RiskValueReadV1 withInputType(RiskValueReadV1InputTypeEnum inputType) {
        this.inputType = inputType;
        return this;
    }
    
    /**
     * Unique identifier to distinguish different instances of risk values that have the same `risk_parameter_id`. Only returned by `/applications` for risk and coverage values where `creates_array: true`
     * Read our [guide to using instances](https://www.heraldapi.com/docs/instance).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instance")
    public String instance;

    public RiskValueReadV1 withInstance(String instance) {
        this.instance = instance;
        return this;
    }
    
    /**
     * Object containing text for the parameter that you can render on a front-end.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameter_text")
    public ParameterTextV1 parameterText;

    public RiskValueReadV1 withParameterText(ParameterTextV1 parameterText) {
        this.parameterText = parameterText;
        return this;
    }
    
    /**
     * Array of product IDs the risk parameter is relevant for. Some risk parameters are relevant for all products, but some are unique to a certain product. Only returned by `/applications` endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relevant_products")
    public String[] relevantProducts;

    public RiskValueReadV1 withRelevantProducts(String[] relevantProducts) {
        this.relevantProducts = relevantProducts;
        return this;
    }
    
    /**
     * Specifies fow which operations this value is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required_for")
    public RiskValueReadV1RequiredForEnum[] requiredFor;

    public RiskValueReadV1 withRequiredFor(RiskValueReadV1RequiredForEnum[] requiredFor) {
        this.requiredFor = requiredFor;
        return this;
    }
    
    /**
     * The ID of the [risk parameter](https://www.heraldapi.com/docs/risk-and-coverage-parameters) for which a value is being provided. A list of all risk parameters are documented in the [appendix](https://www.heraldapi.com/tools-and-resources/the-appendix). 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("risk_parameter_id")
    public String riskParameterId;

    public RiskValueReadV1 withRiskParameterId(String riskParameterId) {
        this.riskParameterId = riskParameterId;
        return this;
    }
    
    /**
     * [JSON schema](https://json-schema.org/) describing the expected value. Only returned by `/applications` endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schema")
    public java.util.Map<String, Object> schema;

    public RiskValueReadV1 withSchema(java.util.Map<String, Object> schema) {
        this.schema = schema;
        return this;
    }
    
    /**
     * **Deprecated**: use the `parameter_text` object instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public String text;

    public RiskValueReadV1 withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * The value being assigned. Different risk parameters expect different value types. This is specified in the [appendix](https://www.heraldapi.com/tools-and-resources/the-appendix).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public Object value;

    public RiskValueReadV1 withValue(Object value) {
        this.value = value;
        return this;
    }
    
    public RiskValueReadV1(){}
}
