// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ThreatIntelIndicatorCategoryEnum string

const (
	ThreatIntelIndicatorCategoryEnumBackdoor          ThreatIntelIndicatorCategoryEnum = "BACKDOOR"
	ThreatIntelIndicatorCategoryEnumCardStealer       ThreatIntelIndicatorCategoryEnum = "CARD_STEALER"
	ThreatIntelIndicatorCategoryEnumCommandAndControl ThreatIntelIndicatorCategoryEnum = "COMMAND_AND_CONTROL"
	ThreatIntelIndicatorCategoryEnumDropSite          ThreatIntelIndicatorCategoryEnum = "DROP_SITE"
	ThreatIntelIndicatorCategoryEnumExploitSite       ThreatIntelIndicatorCategoryEnum = "EXPLOIT_SITE"
	ThreatIntelIndicatorCategoryEnumKeylogger         ThreatIntelIndicatorCategoryEnum = "KEYLOGGER"
)

func (e *ThreatIntelIndicatorCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BACKDOOR":
		fallthrough
	case "CARD_STEALER":
		fallthrough
	case "COMMAND_AND_CONTROL":
		fallthrough
	case "DROP_SITE":
		fallthrough
	case "EXPLOIT_SITE":
		fallthrough
	case "KEYLOGGER":
		*e = ThreatIntelIndicatorCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ThreatIntelIndicatorCategoryEnum: %s", s)
	}
}
