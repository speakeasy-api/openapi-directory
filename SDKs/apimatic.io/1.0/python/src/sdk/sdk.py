"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Any, Optional

SERVERS = [
    "https://apimatic.io/api/transform",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""Transform API Descriptions from/to various formats
    https://apimatic.io/transformer - API Transformer Website
    """

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        
    
    
    def convert_api(self, request: operations.ConvertAPIRequest) -> operations.ConvertAPIResponse:
        r"""Transform API Descriptions from/to various formats
        Transform API Descriptions from/to various formats e.g., Swagger, API Blueprint, RAML, WADL, Google Discovery, I/O Docs.
        
        ### INPUTS
        * API Blueprint
        * Swagger 1.0 - 1.2
        * Swagger 2.0 JSON
        * Swagger 2.0 YAML
        * WADL - W3C 2009
        * Google Discovery
        * RAML 0.8
        * I/O Docs - Mashery
        * HAR 1.2
        * Postman Collection 1.0 - 2.0
        * APIMATIC Format
        * Mashape
        
        ### OUTPUTS
        * API Blueprint
        * Swagger 1.2
        * Swagger 2.0 JSON
        * Swagger 2.0 YAML
        * WADL - W3C 2009
        * RAML 0.8 - 1.0
        * APIMATIC Format
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/transform'
        
        headers = {}
        req_content_type, data, form = utils.serialize_request_body(request, "request_body", 'multipart')
        if req_content_type not in ('multipart/form-data', 'multipart/mixed'):
            headers['content-type'] = req_content_type
        query_params = utils.get_query_params(operations.ConvertAPIRequest, request)
        
        client = self._client
        
        http_res = client.request('POST', url, params=query_params, data=data, files=form, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.ConvertAPIResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[dict[str, Any]])
                res.convert_api_200_application_json_object = out
            if utils.match_content_type(content_type, 'application/x-yaml'):
                res.body = http_res.content
        elif http_res.status_code == 429:
            pass

        return res

    