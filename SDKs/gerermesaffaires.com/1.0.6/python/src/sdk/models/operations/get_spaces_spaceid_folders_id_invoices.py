"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import invoice as shared_invoice
from enum import Enum
from typing import Optional

class GetSpacesSpaceIDFoldersIDInvoicesSortNameEnum(str, Enum):
    r"""name of value for sort"""
    DUE_DATE = 'DueDate'
    PAYMENT_DATE = 'PaymentDate'
    INVOICE_DATE = 'InvoiceDate'
    INCL_VAT = 'InclVAT'
    CONTRACTING = 'Contracting'
    TITLE = 'Title'

class GetSpacesSpaceIDFoldersIDInvoicesSortOrderEnum(str, Enum):
    r"""order of sort (if absent default is asc)"""
    ASC = 'asc'
    DESC = 'desc'


@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDInvoicesRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    accounted_on: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'AccountedOn', 'style': 'form', 'explode': True }})
    r"""value of AccountedOn (boolean available but not range)"""  
    before_vat: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'BeforeVAT', 'style': 'form', 'explode': True }})
    r"""amount before VAT"""  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Date', 'style': 'form', 'explode': True }})
    r"""date range of the documents"""  
    due_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'DueDate', 'style': 'form', 'explode': True }})
    r"""date due payment"""  
    extend: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Extend', 'style': 'form', 'explode': True }})
    r"""json object to filter extend data"""  
    folder_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'FolderDate', 'style': 'form', 'explode': True }})
    r"""date range of attachment"""  
    incl_vat: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'InclVAT', 'style': 'form', 'explode': True }})
    r"""amount incl. VAT"""  
    invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'InvoiceDate', 'style': 'form', 'explode': True }})
    r"""range date of invoice"""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Number', 'style': 'form', 'explode': True }})
    r"""Number of the invoice"""  
    payment_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'PaymentDate', 'style': 'form', 'explode': True }})
    r"""date of payment (boolean and valid available)"""  
    range: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Range', 'style': 'form', 'explode': True }})
    r"""index range of the results"""  
    sort_name: Optional[GetSpacesSpaceIDFoldersIDInvoicesSortNameEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'SortName', 'style': 'form', 'explode': True }})
    r"""name of value for sort"""  
    sort_order: Optional[GetSpacesSpaceIDFoldersIDInvoicesSortOrderEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'SortOrder', 'style': 'form', 'explode': True }})
    r"""order of sort (if absent default is asc)"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Title', 'style': 'form', 'explode': True }})
    r"""Title of the documents"""  
    with_extend: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'WithExtend', 'style': 'form', 'explode': True }})
    r"""If present returns also the data extend"""  
    

@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDInvoicesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_spaces_space_id_folders_id_invoices_200_application_json_all_ofs: Optional[list[shared_invoice.Invoice]] = dataclasses.field(default=None)
    r"""A list of invoices of the folder  (if the folder is the root folder (Customers of Providers) the FolderId, the Designation and the Contracting  of the contract are also returned)"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    