/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of the workflow. Currently the only valid value is 'Workflow::Setup'.
 *
 * @remarks
 *
 */
export enum WorkflowTypeEnum {
  WorkflowSetup = "Workflow::Setup",
  WorkflowInstance = "Workflow::Instance",
}

/**
 * A workflow.
 *
 * @remarks
 *
 */
export class Workflow extends SpeakeasyBase {
  /**
   * Indicates whether the callout trigger is enabled for the retrieved workflow.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "calloutTrigger" })
  calloutTrigger?: boolean;

  /**
   * The date and time when the workflow is created, in the `YYYY-MM-DD HH:MM:SS` format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt?: string;

  /**
   * The description of the workflow.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The unique ID of the workflow.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * The schedule of the workflow, in a CRON expression. Returns null if the schedued trigger is disabled.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interval" })
  interval?: string;

  /**
   * The name of the workflow.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Indicates whether the ondemand trigger is enabled for the workflow.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ondemandTrigger" })
  ondemandTrigger?: boolean;

  /**
   * Indicates whether the scheduled trigger is enabled for the workflow.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scheduledTrigger" })
  scheduledTrigger?: boolean;

  /**
   * The timezone that is configured for the scheduler of the workflow. Returns null if the scheduled trigger is disabled.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;

  /**
   * The type of the workflow. Currently the only valid value is 'Workflow::Setup'.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: WorkflowTypeEnum;

  /**
   * The date and time when the workflow is updated the last time, in the `YYYY-MM-DD HH:MM:SS` format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  updatedAt?: string;
}
