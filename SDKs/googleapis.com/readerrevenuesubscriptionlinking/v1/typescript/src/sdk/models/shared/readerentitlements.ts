/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Entitlement } from "./entitlement";
import { Expose, Type } from "class-transformer";

/**
 * A singleton containing all of a reader's entitlements for a publication.
 */
export class ReaderEntitlementsInput extends SpeakeasyBase {
  /**
   * All of the entitlements for a publication reader.
   */
  @SpeakeasyMetadata({ elemType: Entitlement })
  @Expose({ name: "entitlements" })
  @Type(() => Entitlement)
  entitlements?: Entitlement[];
}

/**
 * A singleton containing all of a reader's entitlements for a publication.
 */
export class ReaderEntitlements extends SpeakeasyBase {
  /**
   * All of the entitlements for a publication reader.
   */
  @SpeakeasyMetadata({ elemType: Entitlement })
  @Expose({ name: "entitlements" })
  @Type(() => Entitlement)
  entitlements?: Entitlement[];

  /**
   * Output only. The resource name of the singleton.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
