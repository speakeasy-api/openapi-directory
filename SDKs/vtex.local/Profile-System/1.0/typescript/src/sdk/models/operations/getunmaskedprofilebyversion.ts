/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetUnmaskedProfileByVersionRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=profileId",
  })
  profileId: string;

  /**
   * ID of the version of the client's profile as returned by endpoints that create or update profile information in the `version` field.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=profileVersionId",
  })
  profileVersionId: string;

  /**
   * Reason for requesting unmasked data.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=reason",
  })
  reason: string;
}

export class GetUnmaskedProfileByVersionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getUnmaskedProfileByVersion200ApplicationJSONAnies?: any[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
