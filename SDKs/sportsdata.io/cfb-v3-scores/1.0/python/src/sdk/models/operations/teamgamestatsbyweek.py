"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import teamgame as shared_teamgame
from enum import Enum
from typing import Optional

class TeamGameStatsByWeekFormatEnum(str, Enum):
    r"""Desired response format. Valid entries are <code>xml</code> or <code>json</code>."""
    XML = 'XML'
    JSON = 'JSON'


@dataclasses.dataclass
class TeamGameStatsByWeekRequest:
    
    format: TeamGameStatsByWeekFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Desired response format. Valid entries are <code>xml</code> or <code>json</code>."""  
    season: str = dataclasses.field(metadata={'path_param': { 'field_name': 'season', 'style': 'simple', 'explode': False }})
    r"""Year of the season.
              <br>Examples: <code>2015</code>, <code>2016</code>, etc.
    """  
    week: str = dataclasses.field(metadata={'path_param': { 'field_name': 'week', 'style': 'simple', 'explode': False }})
    r"""The week of the game(s).
              <br>Examples: <code>1</code>, <code>2</code>, <code>3</code>, etc.
    """  
    

@dataclasses.dataclass
class TeamGameStatsByWeekResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    team_games: Optional[list[shared_teamgame.TeamGame]] = dataclasses.field(default=None)  
    