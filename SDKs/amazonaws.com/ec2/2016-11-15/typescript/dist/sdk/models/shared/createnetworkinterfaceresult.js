"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateNetworkInterfaceResult = exports.CreateNetworkInterfaceResultNetworkInterface = exports.CreateNetworkInterfaceResultNetworkInterfaceTagSet = exports.CreateNetworkInterfaceResultNetworkInterfaceStatusEnum = exports.CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses = exports.CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation = exports.CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes = exports.CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses = exports.CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes = exports.CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = exports.CreateNetworkInterfaceResultNetworkInterfaceGroups = exports.CreateNetworkInterfaceResultNetworkInterfaceAttachment = exports.CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum = exports.CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification = exports.CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUdpSpecification = exports.CreateNetworkInterfaceResultNetworkInterfaceAssociation = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The association information for an Elastic IP address (IPv4) associated with the network interface.
 */
var CreateNetworkInterfaceResultNetworkInterfaceAssociation = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfaceAssociation, _super);
    function CreateNetworkInterfaceResultNetworkInterfaceAssociation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAssociation.prototype, "allocationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAssociation.prototype, "associationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAssociation.prototype, "carrierIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAssociation.prototype, "customerOwnedIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAssociation.prototype, "ipOwnerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAssociation.prototype, "publicDnsName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAssociation.prototype, "publicIp", void 0);
    return CreateNetworkInterfaceResultNetworkInterfaceAssociation;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfaceAssociation = CreateNetworkInterfaceResultNetworkInterfaceAssociation;
/**
 * ENA Express configuration for UDP network traffic.
 */
var CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUdpSpecification = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUdpSpecification, _super);
    function CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUdpSpecification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUdpSpecification.prototype, "enaSrdUdpEnabled", void 0);
    return CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUdpSpecification;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUdpSpecification = CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUdpSpecification;
/**
 * Configures ENA Express for the network interface that this action attaches to the instance.
 */
var CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification, _super);
    function CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification.prototype, "enaSrdEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecificationEnaSrdUdpSpecification)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification.prototype, "enaSrdUdpSpecification", void 0);
    return CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification = CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification;
/**
 * The attachment state.
 */
var CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum;
(function (CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum) {
    CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum["Attaching"] = "attaching";
    CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum["Attached"] = "attached";
    CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum["Detaching"] = "detaching";
    CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum["Detached"] = "detached";
})(CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum = exports.CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum || (exports.CreateNetworkInterfaceResultNetworkInterfaceAttachmentStatusEnum = {}));
/**
 * The network interface attachment.
 */
var CreateNetworkInterfaceResultNetworkInterfaceAttachment = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfaceAttachment, _super);
    function CreateNetworkInterfaceResultNetworkInterfaceAttachment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachment.prototype, "attachTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachment.prototype, "attachmentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachment.prototype, "deleteOnTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachment.prototype, "deviceIndex", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInterfaceResultNetworkInterfaceAttachmentEnaSrdSpecification)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachment.prototype, "enaSrdSpecification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachment.prototype, "instanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachment.prototype, "instanceOwnerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachment.prototype, "networkCardIndex", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceAttachment.prototype, "status", void 0);
    return CreateNetworkInterfaceResultNetworkInterfaceAttachment;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfaceAttachment = CreateNetworkInterfaceResultNetworkInterfaceAttachment;
/**
 * Describes a security group.
 */
var CreateNetworkInterfaceResultNetworkInterfaceGroups = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfaceGroups, _super);
    function CreateNetworkInterfaceResultNetworkInterfaceGroups() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceGroups.prototype, "groupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceGroups.prototype, "groupName", void 0);
    return CreateNetworkInterfaceResultNetworkInterfaceGroups;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfaceGroups = CreateNetworkInterfaceResultNetworkInterfaceGroups;
/**
 * The type of network interface.
 */
var CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum;
(function (CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum) {
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["Interface"] = "interface";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["NatGateway"] = "natGateway";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["Efa"] = "efa";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["Trunk"] = "trunk";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["LoadBalancer"] = "load_balancer";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["NetworkLoadBalancer"] = "network_load_balancer";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["VpcEndpoint"] = "vpc_endpoint";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["Branch"] = "branch";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["TransitGateway"] = "transit_gateway";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["Lambda"] = "lambda";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["Quicksight"] = "quicksight";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["GlobalAcceleratorManaged"] = "global_accelerator_managed";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["ApiGatewayManaged"] = "api_gateway_managed";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["GatewayLoadBalancer"] = "gateway_load_balancer";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["GatewayLoadBalancerEndpoint"] = "gateway_load_balancer_endpoint";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["IotRulesManaged"] = "iot_rules_managed";
    CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum["AwsCodestarConnectionsManaged"] = "aws_codestar_connections_managed";
})(CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = exports.CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum || (exports.CreateNetworkInterfaceResultNetworkInterfaceInterfaceTypeEnum = {}));
/**
 * Describes an IPv4 prefix.
 */
var CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes, _super);
    function CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes.prototype, "ipv4Prefix", void 0);
    return CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes = CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes;
/**
 * Describes an IPv6 address associated with a network interface.
 */
var CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses, _super);
    function CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses.prototype, "ipv6Address", void 0);
    return CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses = CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses;
/**
 * Describes the IPv6 prefix.
 */
var CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes, _super);
    function CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes.prototype, "ipv6Prefix", void 0);
    return CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes = CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes;
/**
 * The association information for an Elastic IP address (IPv4) associated with the network interface.
 */
var CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation, _super);
    function CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation.prototype, "allocationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation.prototype, "associationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation.prototype, "carrierIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation.prototype, "customerOwnedIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation.prototype, "ipOwnerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation.prototype, "publicDnsName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation.prototype, "publicIp", void 0);
    return CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation = CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation;
/**
 * Describes the private IPv4 address of a network interface.
 */
var CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses, _super);
    function CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddressesAssociation)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses.prototype, "association", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses.prototype, "primary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses.prototype, "privateDnsName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses.prototype, "privateIpAddress", void 0);
    return CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses = CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses;
/**
 * The status of the network interface.
 */
var CreateNetworkInterfaceResultNetworkInterfaceStatusEnum;
(function (CreateNetworkInterfaceResultNetworkInterfaceStatusEnum) {
    CreateNetworkInterfaceResultNetworkInterfaceStatusEnum["Available"] = "available";
    CreateNetworkInterfaceResultNetworkInterfaceStatusEnum["Associated"] = "associated";
    CreateNetworkInterfaceResultNetworkInterfaceStatusEnum["Attaching"] = "attaching";
    CreateNetworkInterfaceResultNetworkInterfaceStatusEnum["InUse"] = "in-use";
    CreateNetworkInterfaceResultNetworkInterfaceStatusEnum["Detaching"] = "detaching";
})(CreateNetworkInterfaceResultNetworkInterfaceStatusEnum = exports.CreateNetworkInterfaceResultNetworkInterfaceStatusEnum || (exports.CreateNetworkInterfaceResultNetworkInterfaceStatusEnum = {}));
/**
 * Describes a tag.
 */
var CreateNetworkInterfaceResultNetworkInterfaceTagSet = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterfaceTagSet, _super);
    function CreateNetworkInterfaceResultNetworkInterfaceTagSet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceTagSet.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterfaceTagSet.prototype, "value", void 0);
    return CreateNetworkInterfaceResultNetworkInterfaceTagSet;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterfaceTagSet = CreateNetworkInterfaceResultNetworkInterfaceTagSet;
/**
 * Information about the network interface.
 */
var CreateNetworkInterfaceResultNetworkInterface = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResultNetworkInterface, _super);
    function CreateNetworkInterfaceResultNetworkInterface() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInterfaceResultNetworkInterfaceAssociation)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "association", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInterfaceResultNetworkInterfaceAttachment)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "attachment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "availabilityZone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "denyAllIgwTraffic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateNetworkInterfaceResultNetworkInterfaceGroups,
        }),
        __metadata("design:type", Array)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "interfaceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateNetworkInterfaceResultNetworkInterfaceIpv4Prefixes,
        }),
        __metadata("design:type", Array)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "ipv4Prefixes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "ipv6Address", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateNetworkInterfaceResultNetworkInterfaceIpv6Addresses,
        }),
        __metadata("design:type", Array)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "ipv6Addresses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "ipv6Native", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateNetworkInterfaceResultNetworkInterfaceIpv6Prefixes,
        }),
        __metadata("design:type", Array)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "ipv6Prefixes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "macAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "networkInterfaceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "outpostArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "privateDnsName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "privateIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateNetworkInterfaceResultNetworkInterfacePrivateIpAddresses,
        }),
        __metadata("design:type", Array)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "privateIpAddresses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "requesterId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "requesterManaged", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "sourceDestCheck", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "subnetId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateNetworkInterfaceResultNetworkInterfaceTagSet,
        }),
        __metadata("design:type", Array)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "tagSet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResultNetworkInterface.prototype, "vpcId", void 0);
    return CreateNetworkInterfaceResultNetworkInterface;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResultNetworkInterface = CreateNetworkInterfaceResultNetworkInterface;
/**
 * Success
 */
var CreateNetworkInterfaceResult = /** @class */ (function (_super) {
    __extends(CreateNetworkInterfaceResult, _super);
    function CreateNetworkInterfaceResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateNetworkInterfaceResult.prototype, "clientToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateNetworkInterfaceResultNetworkInterface)
    ], CreateNetworkInterfaceResult.prototype, "networkInterface", void 0);
    return CreateNetworkInterfaceResult;
}(utils_1.SpeakeasyBase));
exports.CreateNetworkInterfaceResult = CreateNetworkInterfaceResult;
