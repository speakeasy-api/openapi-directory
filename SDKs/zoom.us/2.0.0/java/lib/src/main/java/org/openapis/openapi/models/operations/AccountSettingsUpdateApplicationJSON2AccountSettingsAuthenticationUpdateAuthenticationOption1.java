/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOption1 - Specify the authentication options for this account.
 */
public class AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOption1 {
    /**
     * Specify the action that you would like to take via this API request:&lt;br&gt;
     * * `add` : Choose this value if you are adding an authentication option.
     * * `update`: Choose this value if you are updating an existing authentication option.
     * * `delete`: Choose this value if you are deleting an existing authentication option.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOptionActionEnum action;
    public AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOption1 withAction(AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOptionActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Specify whether you would like to set this authentication option as the default option or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default_option")
    public Boolean defaultOption;
    public AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOption1 withDefaultOption(Boolean defaultOption) {
        this.defaultOption = defaultOption;
        return this;
    }
    
    /**
     * If you chose `enforce_login_with_domains` as the authentication type, specify the domain(s) that you want to allow to view the recordings. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domains")
    public String domains;
    public AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOption1 withDomains(String domains) {
        this.domains = domains;
        return this;
    }
    
    /**
     *  Authentication ID. If you are creating an authentication profile, you do not need to provide this field. The id field will be generated in the response once this API request is completed successfully. You can also use the Get Account Settings API with query parameter set to `meeting_authentication` to list the authentication id.&lt;br&gt;&lt;br&gt;
     * Use this field or the `name` field to identify the associated authentication option that you would like to update or delete.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOption1 withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Unique name for the authentication option.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOption1 withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Specify one authentication type that is to be associated with this authentication configuration:&lt;br&gt;
     * * `internally`: This option allows you specify a rule that only signed in users within your account can view the recording.&lt;br&gt;
     *  * `enforce_login`: This option allows any users to view the recording, as long as they are signed into their Zoom account.&lt;br&gt;
     *  * `enforce_login_with_domains`: This option, allows you to specify a rule so that only those Zoom users whose email addresses contain a certain domain, can view the recording. You can either add multiple domains using a comma in between and/or use a wildcard for listing domains.
     * 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOptionTypeEnum1 type;
    public AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOption1 withType(AccountSettingsUpdateApplicationJSON2AccountSettingsAuthenticationUpdateAuthenticationOptionTypeEnum1 type) {
        this.type = type;
        return this;
    }
    
}
