// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GroupCallResponseMessageEnum - Response message
type GroupCallResponseMessageEnum string

const (
	GroupCallResponseMessageEnumGroupCallRequestExecuted                    GroupCallResponseMessageEnum = "GroupCall Request Executed"
	GroupCallResponseMessageEnumMandatoryParametersMissing                  GroupCallResponseMessageEnum = "Mandatory Parameters Missing"
	GroupCallResponseMessageEnumThisDelimiterIsNotAllowed                   GroupCallResponseMessageEnum = "This Delimiter is not allowed"
	GroupCallResponseMessageEnumGroupCallShouldBeUsedForAtLeast2Numbers     GroupCallResponseMessageEnum = "GroupCall should be used for at least 2 numbers"
	GroupCallResponseMessageEnumToParameterLengthDoesNotMatchGatewaysLength GroupCallResponseMessageEnum = "'To' parameter length does not match 'Gateways' Length"
	GroupCallResponseMessageEnumAnswerURLIsNotValid                         GroupCallResponseMessageEnum = "AnswerUrl is not Valid"
	GroupCallResponseMessageEnumHangupURLIsNotValid                         GroupCallResponseMessageEnum = "HangupUrl is not Valid"
	GroupCallResponseMessageEnumRingURLIsNotValid                           GroupCallResponseMessageEnum = "RingUrl is not Valid"
	GroupCallResponseMessageEnumConfirmSoundIsNotValid                      GroupCallResponseMessageEnum = "ConfirmSound is not Valid"
	GroupCallResponseMessageEnumUnknownCoreUUID                             GroupCallResponseMessageEnum = "Unknown Core UUID"
	GroupCallResponseMessageEnumGroupCallRequestFailed                      GroupCallResponseMessageEnum = "GroupCall Request Failed"
)

func (e GroupCallResponseMessageEnum) ToPointer() *GroupCallResponseMessageEnum {
	return &e
}

func (e *GroupCallResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GroupCall Request Executed":
		fallthrough
	case "Mandatory Parameters Missing":
		fallthrough
	case "This Delimiter is not allowed":
		fallthrough
	case "GroupCall should be used for at least 2 numbers":
		fallthrough
	case "'To' parameter length does not match 'Gateways' Length":
		fallthrough
	case "AnswerUrl is not Valid":
		fallthrough
	case "HangupUrl is not Valid":
		fallthrough
	case "RingUrl is not Valid":
		fallthrough
	case "ConfirmSound is not Valid":
		fallthrough
	case "Unknown Core UUID":
		fallthrough
	case "GroupCall Request Failed":
		*e = GroupCallResponseMessageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupCallResponseMessageEnum: %v", v)
	}
}

// GroupCallResponse - Response
type GroupCallResponse struct {
	// Response message
	Message GroupCallResponseMessageEnum `json:"Message"`
	// Unique identifier of the Call request (UUIDv4)
	RequestUUID string `json:"RequestUUID"`
	// API server which handled this request (an Eqivo extension)
	RestAPIServer string `json:"RestApiServer"`
	// Whether the request was successful or not
	Success bool `json:"Success"`
}
