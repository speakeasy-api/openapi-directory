<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EventLogEntry - Information about an entry in an event log of Amazon CodeCatalyst activity.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EventLogEntry
{
	#[\JMS\Serializer\Annotation\SerializedName('errorCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $errorCode = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('eventCategory')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventCategory;
    
	#[\JMS\Serializer\Annotation\SerializedName('eventName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventName;
    
	#[\JMS\Serializer\Annotation\SerializedName('eventSource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventSource;
    
	#[\JMS\Serializer\Annotation\SerializedName('eventTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $eventTime;
    
	#[\JMS\Serializer\Annotation\SerializedName('eventType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventType;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('operationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OperationTypeEnum>')]
    public OperationTypeEnum $operationType;
    
	#[\JMS\Serializer\Annotation\SerializedName('projectInformation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ProjectInformation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProjectInformation $projectInformation = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('requestId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('requestPayload')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EventPayload')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventPayload $requestPayload = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('responsePayload')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EventPayload')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventPayload $responsePayload = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sourceIpAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceIpAddress = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('userAgent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userAgent = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('userIdentity')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserIdentity')]
    public UserIdentity $userIdentity;
    
	public function __construct()
	{
		$this->errorCode = null;
		$this->eventCategory = "";
		$this->eventName = "";
		$this->eventSource = "";
		$this->eventTime = new \DateTime();
		$this->eventType = "";
		$this->id = "";
		$this->operationType = \OpenAPI\OpenAPI\Models\Shared\OperationTypeEnum::READONLY;
		$this->projectInformation = null;
		$this->requestId = null;
		$this->requestPayload = null;
		$this->responsePayload = null;
		$this->sourceIpAddress = null;
		$this->userAgent = null;
		$this->userIdentity = new \OpenAPI\OpenAPI\Models\Shared\UserIdentity();
	}
}
