"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import call as shared_call
from ..shared import errorresponse as shared_errorresponse
from enum import Enum
from typing import Optional

class ListCallsDirectionEnum(str, Enum):
    r"""Filter by call direction. For multiple criteria, seperate values by a comma."""
    INBOUND = 'INBOUND'
    OUTBOUND = 'OUTBOUND'

class ListCallsOrderEnum(str, Enum):
    r"""Sort in either ascending or descending order"""
    DESC = 'DESC'
    ASC = 'ASC'

class ListCallsStatesEnum(str, Enum):
    r"""Filter calls by state. For multiple criteria, seperate values by a comma."""
    INITIALIZING = 'INITIALIZING'
    RINGING = 'RINGING'
    ACTIVE = 'ACTIVE'
    HELD = 'HELD'
    REMOTE_HELD = 'REMOTE_HELD'


@dataclasses.dataclass
class ListCallsRequest:
    
    direction: Optional[ListCallsDirectionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'direction', 'style': 'form', 'explode': True }})
    r"""Filter by call direction. For multiple criteria, seperate values by a comma."""  
    from_date: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fromDate', 'style': 'form', 'explode': True }})
    r"""Return calls that occurred after this point in time"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Page number of calls to return"""  
    order: Optional[ListCallsOrderEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    r"""Sort in either ascending or descending order"""  
    size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'size', 'style': 'form', 'explode': True }})
    r"""Return this amount of calls in the response"""  
    sort: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Sort calls by property"""  
    states: Optional[ListCallsStatesEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'states', 'style': 'form', 'explode': True }})
    r"""Filter calls by state. For multiple criteria, seperate values by a comma."""  
    to_date: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'toDate', 'style': 'form', 'explode': True }})
    r"""Return calls that occurred before this point in time"""  
    

@dataclasses.dataclass
class ListCallsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    calls: Optional[list[shared_call.Call]] = dataclasses.field(default=None)
    r"""Successful"""  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Bad Request: The client should not repeat the request without modifications"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    