"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error_response_body as shared_error_response_body
from ..shared import list_batch_errors_response_body as shared_list_batch_errors_response_body
from typing import Optional


@dataclasses.dataclass
class ListBatchErrorsRequest:
    
    batch_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'batch_id', 'style': 'simple', 'explode': False }})
    r"""Batch ID"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned."""  
    pagesize: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pagesize', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class ListBatchErrorsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_response_body: Optional[shared_error_response_body.ErrorResponseBody] = dataclasses.field(default=None)
    r"""The request contained errors."""  
    list_batch_errors_response_body: Optional[shared_list_batch_errors_response_body.ListBatchErrorsResponseBody] = dataclasses.field(default=None)
    r"""The request was a success."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    