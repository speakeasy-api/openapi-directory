"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesDestinationPortRange:
    r"""The destination port range assigned to the Traffic Mirror rule."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum(str, Enum):
    r"""The action assigned to the Traffic Mirror rule."""
    ACCEPT = 'accept'
    REJECT = 'reject'


@dataclasses.dataclass
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesSourcePortRange:
    r"""The source port range assigned to the Traffic Mirror rule."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum(str, Enum):
    r"""The traffic direction assigned to the Traffic Mirror rule."""
    INGRESS = 'ingress'
    EGRESS = 'egress'


@dataclasses.dataclass
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRules:
    r"""Describes the Traffic Mirror rule."""
    
    description: Optional[str] = dataclasses.field(default=None)  
    destination_cidr_block: Optional[str] = dataclasses.field(default=None)  
    destination_port_range: Optional[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesDestinationPortRange] = dataclasses.field(default=None)  
    protocol: Optional[int] = dataclasses.field(default=None)  
    rule_action: Optional[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum] = dataclasses.field(default=None)  
    rule_number: Optional[int] = dataclasses.field(default=None)  
    source_cidr_block: Optional[str] = dataclasses.field(default=None)  
    source_port_range: Optional[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesSourcePortRange] = dataclasses.field(default=None)  
    traffic_direction: Optional[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum] = dataclasses.field(default=None)  
    traffic_mirror_filter_id: Optional[str] = dataclasses.field(default=None)  
    traffic_mirror_filter_rule_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesDestinationPortRange:
    r"""The destination port range assigned to the Traffic Mirror rule."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum(str, Enum):
    r"""The action assigned to the Traffic Mirror rule."""
    ACCEPT = 'accept'
    REJECT = 'reject'


@dataclasses.dataclass
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesSourcePortRange:
    r"""The source port range assigned to the Traffic Mirror rule."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum(str, Enum):
    r"""The traffic direction assigned to the Traffic Mirror rule."""
    INGRESS = 'ingress'
    EGRESS = 'egress'


@dataclasses.dataclass
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRules:
    r"""Describes the Traffic Mirror rule."""
    
    description: Optional[str] = dataclasses.field(default=None)  
    destination_cidr_block: Optional[str] = dataclasses.field(default=None)  
    destination_port_range: Optional[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesDestinationPortRange] = dataclasses.field(default=None)  
    protocol: Optional[int] = dataclasses.field(default=None)  
    rule_action: Optional[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum] = dataclasses.field(default=None)  
    rule_number: Optional[int] = dataclasses.field(default=None)  
    source_cidr_block: Optional[str] = dataclasses.field(default=None)  
    source_port_range: Optional[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesSourcePortRange] = dataclasses.field(default=None)  
    traffic_direction: Optional[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum] = dataclasses.field(default=None)  
    traffic_mirror_filter_id: Optional[str] = dataclasses.field(default=None)  
    traffic_mirror_filter_rule_id: Optional[str] = dataclasses.field(default=None)  
    
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnum(str, Enum):
    AMAZON_DNS = 'amazon-dns'


@dataclasses.dataclass
class DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeTrafficMirrorFiltersResultTrafficMirrorFilters:
    r"""Describes the Traffic Mirror filter."""
    
    description: Optional[str] = dataclasses.field(default=None)  
    egress_filter_rules: Optional[list[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRules]] = dataclasses.field(default=None)  
    ingress_filter_rules: Optional[list[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRules]] = dataclasses.field(default=None)  
    network_services: Optional[list[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnum]] = dataclasses.field(default=None)  
    tags: Optional[list[DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersTags]] = dataclasses.field(default=None)  
    traffic_mirror_filter_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeTrafficMirrorFiltersResult:
    r"""Success"""
    
    next_token: Optional[str] = dataclasses.field(default=None)  
    traffic_mirror_filters: Optional[list[DescribeTrafficMirrorFiltersResultTrafficMirrorFilters]] = dataclasses.field(default=None)  
    