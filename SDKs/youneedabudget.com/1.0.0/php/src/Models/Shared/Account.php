<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Account
{
    /**
     * The current balance of the account in milliunits format
     * 
     * @var int $balance
     */
	#[\JMS\Serializer\Annotation\SerializedName('balance')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $balance;
    
    /**
     * The current cleared balance of the account in milliunits format
     * 
     * @var int $clearedBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('cleared_balance')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $clearedBalance;
    
    /**
     * Whether this account is closed or not
     * 
     * @var bool $closed
     */
	#[\JMS\Serializer\Annotation\SerializedName('closed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $closed;
    
    /**
     * $debtEscrowAmounts
     * 
     * @var ?array<string, int> $debtEscrowAmounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('debt_escrow_amounts')]
    #[\JMS\Serializer\Annotation\Type('array<string, int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $debtEscrowAmounts = null;
    
    /**
     * $debtInterestRates
     * 
     * @var ?array<string, int> $debtInterestRates
     */
	#[\JMS\Serializer\Annotation\SerializedName('debt_interest_rates')]
    #[\JMS\Serializer\Annotation\Type('array<string, int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $debtInterestRates = null;
    
    /**
     * $debtMinimumPayments
     * 
     * @var ?array<string, int> $debtMinimumPayments
     */
	#[\JMS\Serializer\Annotation\SerializedName('debt_minimum_payments')]
    #[\JMS\Serializer\Annotation\Type('array<string, int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $debtMinimumPayments = null;
    
    /**
     * The original debt/loan account balance, specified in milliunits format.
     * 
     * @var ?int $debtOriginalBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('debt_original_balance')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $debtOriginalBalance = null;
    
    /**
     * Whether or not the account has been deleted.  Deleted accounts will only be included in delta requests.
     * 
     * @var bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $deleted;
    
    /**
     * If an account linked to a financial institution (direct_import_linked=true) and the linked connection is not in a healthy state, this will be true.
     * 
     * @var ?bool $directImportInError
     */
	#[\JMS\Serializer\Annotation\SerializedName('direct_import_in_error')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $directImportInError = null;
    
    /**
     * Whether or not the account is linked to a financial institution for automatic transaction import.
     * 
     * @var ?bool $directImportLinked
     */
	#[\JMS\Serializer\Annotation\SerializedName('direct_import_linked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $directImportLinked = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * A date/time specifying when the account was last reconciled.
     * 
     * @var ?\DateTime $lastReconciledAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_reconciled_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastReconciledAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * Whether this account is on budget or not
     * 
     * @var bool $onBudget
     */
	#[\JMS\Serializer\Annotation\SerializedName('on_budget')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $onBudget;
    
    /**
     * The payee id which should be used when transferring to this account
     * 
     * @var string $transferPayeeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transfer_payee_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $transferPayeeId;
    
    /**
     * The type of account
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AccountTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AccountTypeEnum>')]
    public AccountTypeEnum $type;
    
    /**
     * The current uncleared balance of the account in milliunits format
     * 
     * @var int $unclearedBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('uncleared_balance')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $unclearedBalance;
    
	public function __construct()
	{
		$this->balance = 0;
		$this->clearedBalance = 0;
		$this->closed = false;
		$this->debtEscrowAmounts = null;
		$this->debtInterestRates = null;
		$this->debtMinimumPayments = null;
		$this->debtOriginalBalance = null;
		$this->deleted = false;
		$this->directImportInError = null;
		$this->directImportLinked = null;
		$this->id = "";
		$this->lastReconciledAt = null;
		$this->name = "";
		$this->note = null;
		$this->onBudget = false;
		$this->transferPayeeId = "";
		$this->type = \OpenAPI\OpenAPI\Models\Shared\AccountTypeEnum::CHECKING;
		$this->unclearedBalance = 0;
	}
}
