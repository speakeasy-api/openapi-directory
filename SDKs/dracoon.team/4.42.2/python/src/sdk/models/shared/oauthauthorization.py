"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class OAuthAuthorizationUserAgentCategoryEnum(str, Enum):
    r"""&#128640; Since v4.12.0
    
    User agent category.
    """
    BROWSER = 'browser'
    NATIVE = 'native'
    UNKNOWN = 'unknown'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OAuthAuthorization:
    r"""OAuth authorization"""
    
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientId') }})
    r"""ID of the OAuth client"""  
    client_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientName') }})
    r"""Name, which is shown at the client configuration and authorization."""  
    user_agent_category: OAuthAuthorizationUserAgentCategoryEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userAgentCategory') }})
    r"""&#128640; Since v4.12.0
    
    User agent category.
    """  
    created_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.13.0
    
    Creation date of the authorization
    """  
    expires_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiresAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Expiration date of the authorization"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.12.0
    
    ID of the OAuth authorization
    """  
    is_current_authorization: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isCurrentAuthorization'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.25.0
    
    Determines whether authorization matches the one from Authorization Header
    """  
    is_standard: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isStandard'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.12.0
    
    Determines whether client is a standard client.
    """  
    used_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usedAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.13.0
    
    Usage date of the authorization
    
    (Time of last usage.)
    """  
    user_agent_info: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userAgentInfo'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.12.0
    
    User agent info.
    """  
    user_agent_os: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userAgentOs'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.12.0
    
    User agent OS.
    """  
    user_agent_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userAgentType'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.12.0
    
    User agent type.
    """  
    