// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// PostAdminRequestsCountRequestBodyBasicAuthCredentials - Pre-emptive basic auth credentials to match against
type PostAdminRequestsCountRequestBodyBasicAuthCredentials struct {
	Password string `json:"password"`
	Username string `json:"username"`
}

type PostAdminRequestsCountRequestBody struct {
	// Pre-emptive basic auth credentials to match against
	BasicAuthCredentials *PostAdminRequestsCountRequestBodyBasicAuthCredentials `json:"basicAuthCredentials,omitempty"`
	// Request body patterns to match against in the <key>: { "<predicate>": "<value>" } form
	BodyPatterns []map[string]interface{} `json:"bodyPatterns,omitempty"`
	// Cookie patterns to match against in the <key>: { "<predicate>": "<value>" } form
	Cookies map[string]interface{} `json:"cookies,omitempty"`
	// Header patterns to match against in the <key>: { "<predicate>": "<value>" } form
	Headers map[string]interface{} `json:"headers,omitempty"`
	// The HTTP request method e.g. GET
	Method *string `json:"method,omitempty"`
	// Query parameter patterns to match against in the <key>: { "<predicate>": "<value>" } form
	QueryParameters map[string]interface{} `json:"queryParameters,omitempty"`
	// The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
	URL *string `json:"url,omitempty"`
	// The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
	URLPath *string `json:"urlPath,omitempty"`
	// The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
	URLPathPattern *string `json:"urlPathPattern,omitempty"`
	// The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
	URLPattern *string `json:"urlPattern,omitempty"`
}

type PostAdminRequestsCountRequest struct {
	Request PostAdminRequestsCountRequestBody `request:"mediaType=application/json"`
}

// PostAdminRequestsCount200ApplicationJSON - Number of matching requests
type PostAdminRequestsCount200ApplicationJSON struct {
	Count *int64 `json:"count,omitempty"`
}

type PostAdminRequestsCountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Number of matching requests
	PostAdminRequestsCount200ApplicationJSONObject *PostAdminRequestsCount200ApplicationJSON
}
