/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EmailConfigurationType - &lt;p&gt;The email configuration of your user pool. The email configuration type sets your preferred sending method, Amazon Web Services Region, and sender for messages from your user pool.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Amazon Cognito can send email messages with Amazon Simple Email Service resources in the Amazon Web Services Region where you created your user pool, and in alternate Regions in some cases. For more information on the supported Regions, see &lt;a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html"&gt;Email settings for Amazon Cognito user pools&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
 */
public class EmailConfigurationType {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConfigurationSet")
    public String configurationSet;
    public EmailConfigurationType withConfigurationSet(String configurationSet) {
        this.configurationSet = configurationSet;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EmailSendingAccount")
    public EmailSendingAccountTypeEnum emailSendingAccount;
    public EmailConfigurationType withEmailSendingAccount(EmailSendingAccountTypeEnum emailSendingAccount) {
        this.emailSendingAccount = emailSendingAccount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("From")
    public String from;
    public EmailConfigurationType withFrom(String from) {
        this.from = from;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReplyToEmailAddress")
    public String replyToEmailAddress;
    public EmailConfigurationType withReplyToEmailAddress(String replyToEmailAddress) {
        this.replyToEmailAddress = replyToEmailAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceArn")
    public String sourceArn;
    public EmailConfigurationType withSourceArn(String sourceArn) {
        this.sourceArn = sourceArn;
        return this;
    }
    
}
