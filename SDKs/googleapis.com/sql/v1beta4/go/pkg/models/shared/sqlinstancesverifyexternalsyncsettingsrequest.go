// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum - External sync mode
type SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum string

const (
	SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnumExternalSyncModeUnspecified SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum = "EXTERNAL_SYNC_MODE_UNSPECIFIED"
	SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnumOnline                      SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum = "ONLINE"
	SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnumOffline                     SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum = "OFFLINE"
)

func (e SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum) ToPointer() *SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum {
	return &e
}

func (e *SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXTERNAL_SYNC_MODE_UNSPECIFIED":
		fallthrough
	case "ONLINE":
		fallthrough
	case "OFFLINE":
		*e = SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum: %v", v)
	}
}

type SQLInstancesVerifyExternalSyncSettingsRequest struct {
	// MySQL-specific external server sync settings.
	MysqlSyncConfig *MySQLSyncConfig `json:"mysqlSyncConfig,omitempty"`
	// External sync mode
	SyncMode *SQLInstancesVerifyExternalSyncSettingsRequestSyncModeEnum `json:"syncMode,omitempty"`
	// Flag to enable verifying connection only
	VerifyConnectionOnly *bool `json:"verifyConnectionOnly,omitempty"`
	// Optional. Flag to verify settings required by replication setup only
	VerifyReplicationOnly *bool `json:"verifyReplicationOnly,omitempty"`
}
