/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UptimeCheckConfig - This message configures which resources and services to monitor for availability.
 */
public class UptimeCheckConfig {
    /**
     * The type of checkers to use to execute the Uptime check.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkerType")
    public UptimeCheckConfigCheckerTypeEnum checkerType;

    public UptimeCheckConfig withCheckerType(UptimeCheckConfigCheckerTypeEnum checkerType) {
        this.checkerType = checkerType;
        return this;
    }
    
    /**
     * The content that is expected to appear in the data returned by the target server against which the check is run. Currently, only the first entry in the content_matchers list is supported, and additional entries will be ignored. This field is optional and should only be specified if a content match is required as part of the/ Uptime check.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentMatchers")
    public ContentMatcher[] contentMatchers;

    public UptimeCheckConfig withContentMatchers(ContentMatcher[] contentMatchers) {
        this.contentMatchers = contentMatchers;
        return this;
    }
    
    /**
     * A human-friendly name for the Uptime check configuration. The display name should be unique within a Cloud Monitoring Workspace in order to make it easier to identify; however, uniqueness is not enforced. Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public UptimeCheckConfig withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Information involved in an HTTP/HTTPS Uptime check request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpCheck")
    public HttpCheck httpCheck;

    public UptimeCheckConfig withHttpCheck(HttpCheck httpCheck) {
        this.httpCheck = httpCheck;
        return this;
    }
    
    /**
     * The internal checkers that this check will egress from. If is_internal is true and this list is empty, the check will egress from all the InternalCheckers configured for the project that owns this UptimeCheckConfig.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalCheckers")
    public InternalChecker[] internalCheckers;

    public UptimeCheckConfig withInternalCheckers(InternalChecker[] internalCheckers) {
        this.internalCheckers = internalCheckers;
        return this;
    }
    
    /**
     * If this is true, then checks are made only from the 'internal_checkers'. If it is false, then checks are made only from the 'selected_regions'. It is an error to provide 'selected_regions' when is_internal is true, or to provide 'internal_checkers' when is_internal is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isInternal")
    public Boolean isInternal;

    public UptimeCheckConfig withIsInternal(Boolean isInternal) {
        this.isInternal = isInternal;
        return this;
    }
    
    /**
     * An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples include virtual machine instances, databases, and storage devices such as disks. The type field identifies a MonitoredResourceDescriptor object that describes the resource's schema. Information in the labels field identifies the actual resource and its attributes according to the schema. For example, a particular Compute Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for "gce_instance" has labels "project_id", "instance_id" and "zone": { "type": "gce_instance", "labels": { "project_id": "my-project", "instance_id": "12345678901234", "zone": "us-central1-a" }} 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monitoredResource")
    public MonitoredResource monitoredResource;

    public UptimeCheckConfig withMonitoredResource(MonitoredResource monitoredResource) {
        this.monitoredResource = monitoredResource;
        return this;
    }
    
    /**
     * A unique resource name for this Uptime check configuration. The format is: projects/[PROJECT_ID_OR_NUMBER]/uptimeCheckConfigs/[UPTIME_CHECK_ID] [PROJECT_ID_OR_NUMBER] is the Workspace host project associated with the Uptime check.This field should be omitted when creating the Uptime check configuration; on create, the resource name is assigned by the server and included in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public UptimeCheckConfig withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * How often, in seconds, the Uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 60s.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("period")
    public String period;

    public UptimeCheckConfig withPeriod(String period) {
        this.period = period;
        return this;
    }
    
    /**
     * The resource submessage for group checks. It can be used instead of a monitored resource, when multiple resources are being monitored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceGroup")
    public ResourceGroup resourceGroup;

    public UptimeCheckConfig withResourceGroup(ResourceGroup resourceGroup) {
        this.resourceGroup = resourceGroup;
        return this;
    }
    
    /**
     * The list of regions from which the check will be run. Some regions contain one location, and others contain more than one. If this field is specified, enough regions must be provided to include a minimum of 3 locations. Not specifying this field will result in Uptime checks running from all available regions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selectedRegions")
    public UptimeCheckConfigSelectedRegionsEnum[] selectedRegions;

    public UptimeCheckConfig withSelectedRegions(UptimeCheckConfigSelectedRegionsEnum[] selectedRegions) {
        this.selectedRegions = selectedRegions;
        return this;
    }
    
    /**
     * Information required for a TCP Uptime check request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tcpCheck")
    public TcpCheck tcpCheck;

    public UptimeCheckConfig withTcpCheck(TcpCheck tcpCheck) {
        this.tcpCheck = tcpCheck;
        return this;
    }
    
    /**
     * The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeout")
    public String timeout;

    public UptimeCheckConfig withTimeout(String timeout) {
        this.timeout = timeout;
        return this;
    }
    
    /**
     * User-supplied key/value data to be used for organizing and identifying the UptimeCheckConfig objects.The field can contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller. Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userLabels")
    public java.util.Map<String, String> userLabels;

    public UptimeCheckConfig withUserLabels(java.util.Map<String, String> userLabels) {
        this.userLabels = userLabels;
        return this;
    }
    
    public UptimeCheckConfig(){}
}
