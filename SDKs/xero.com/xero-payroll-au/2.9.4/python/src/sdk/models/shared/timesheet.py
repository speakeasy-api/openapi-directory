"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timesheetline as shared_timesheetline
from ..shared import timesheetstatus_enum as shared_timesheetstatus_enum
from ..shared import validationerror as shared_validationerror
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TimesheetInput:
    
    employee_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployeeID') }})
    r"""The Xero identifier for an employee"""  
    end_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndDate') }})
    r"""Period end date (YYYY-MM-DD)"""  
    start_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartDate') }})
    r"""Period start date (YYYY-MM-DD)"""  
    hours: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Hours'), 'exclude': lambda f: f is None }})
    r"""Timesheet total hours"""  
    status: Optional[shared_timesheetstatus_enum.TimesheetStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    timesheet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimesheetID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for a Payroll Timesheet"""  
    timesheet_lines: Optional[list[shared_timesheetline.TimesheetLineInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimesheetLines'), 'exclude': lambda f: f is None }})  
    validation_errors: Optional[list[shared_validationerror.ValidationError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationErrors'), 'exclude': lambda f: f is None }})
    r"""Displays array of validation error messages from the API"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Timesheet:
    
    employee_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployeeID') }})
    r"""The Xero identifier for an employee"""  
    end_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndDate') }})
    r"""Period end date (YYYY-MM-DD)"""  
    start_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartDate') }})
    r"""Period start date (YYYY-MM-DD)"""  
    hours: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Hours'), 'exclude': lambda f: f is None }})
    r"""Timesheet total hours"""  
    status: Optional[shared_timesheetstatus_enum.TimesheetStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    timesheet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimesheetID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for a Payroll Timesheet"""  
    timesheet_lines: Optional[list[shared_timesheetline.TimesheetLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimesheetLines'), 'exclude': lambda f: f is None }})  
    updated_date_utc: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedDateUTC'), 'exclude': lambda f: f is None }})
    r"""Last modified timestamp"""  
    validation_errors: Optional[list[shared_validationerror.ValidationError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationErrors'), 'exclude': lambda f: f is None }})
    r"""Displays array of validation error messages from the API"""  
    