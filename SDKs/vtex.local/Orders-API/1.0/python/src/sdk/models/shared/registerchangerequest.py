"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RegisterChangeRequestItemsAdded:
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Product ID of the item."""  
    price: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price') }})
    r"""Price of the item in cents."""  
    quantity: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity') }})
    r"""Amount of items to be added."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RegisterChangeRequestItemsRemoved:
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Product ID of the item."""  
    price: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price') }})
    r"""Price of the item in cents."""  
    quantity: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity') }})
    r"""Amount of items to be removed."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RegisterChangeRequest:
    
    discount_value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discountValue') }})
    r"""This field can be used to apply a discount to the total value of the order. Value in cents."""  
    increment_value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('incrementValue') }})
    r"""This field can be used to increment the total value of the order. Value in cents."""  
    reason: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason') }})
    r"""Reason for order change. This may be shown to the shopper in the UI or transactional emails."""  
    request_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestId') }})
    r"""Request identification of the change. Only the first change made with each `requestId` will be effective on a given order. Use different IDs for different changes to the same order."""  
    items_added: Optional[list[RegisterChangeRequestItemsAdded]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemsAdded'), 'exclude': lambda f: f is None }})
    r"""List of items that should be added to the order."""  
    items_removed: Optional[list[RegisterChangeRequestItemsRemoved]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemsRemoved'), 'exclude': lambda f: f is None }})
    r"""List of items that should be removed from the order."""  
    