/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TextRecognitionResult - An object representing a recognized text region
 */
public class TextRecognitionResult {
    /**
     * The orientation of the image in degrees in the clockwise direction. Range between [0, 360).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clockwiseOrientation")
    public Double clockwiseOrientation;

    public TextRecognitionResult withClockwiseOrientation(Double clockwiseOrientation) {
        this.clockwiseOrientation = clockwiseOrientation;
        return this;
    }
    
    /**
     * The height of the image in pixels or the PDF in inches.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("height")
    public Double height;

    public TextRecognitionResult withHeight(Double height) {
        this.height = height;
        return this;
    }
    
    /**
     * A list of recognized text lines.
     */
    @JsonProperty("lines")
    public Line[] lines;

    public TextRecognitionResult withLines(Line[] lines) {
        this.lines = lines;
        return this;
    }
    
    /**
     * The 1-based page number of the recognition result.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page")
    public Long page;

    public TextRecognitionResult withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The unit used in the Width, Height and BoundingBox. For images, the unit is 'pixel'. For PDF, the unit is 'inch'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit")
    public TextRecognitionResultUnitEnum unit;

    public TextRecognitionResult withUnit(TextRecognitionResultUnitEnum unit) {
        this.unit = unit;
        return this;
    }
    
    /**
     * The width of the image in pixels or the PDF in inches.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("width")
    public Double width;

    public TextRecognitionResult withWidth(Double width) {
        this.width = width;
        return this;
    }
    
    public TextRecognitionResult(@JsonProperty("lines") Line[] lines) {
        this.lines = lines;
  }
}
