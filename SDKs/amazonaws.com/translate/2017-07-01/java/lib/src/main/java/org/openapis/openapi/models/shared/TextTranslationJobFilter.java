/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TextTranslationJobFilter - Provides information for filtering a list of translation jobs. For more information, see &lt;a&gt;ListTextTranslationJobs&lt;/a&gt;.
 */
public class TextTranslationJobFilter {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobName")
    public String jobName;

    public TextTranslationJobFilter withJobName(String jobName) {
        this.jobName = jobName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobStatus")
    public JobStatusEnum jobStatus;

    public TextTranslationJobFilter withJobStatus(JobStatusEnum jobStatus) {
        this.jobStatus = jobStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("SubmittedAfterTime")
    public OffsetDateTime submittedAfterTime;

    public TextTranslationJobFilter withSubmittedAfterTime(OffsetDateTime submittedAfterTime) {
        this.submittedAfterTime = submittedAfterTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("SubmittedBeforeTime")
    public OffsetDateTime submittedBeforeTime;

    public TextTranslationJobFilter withSubmittedBeforeTime(OffsetDateTime submittedBeforeTime) {
        this.submittedBeforeTime = submittedBeforeTime;
        return this;
    }
    
    public TextTranslationJobFilter(){}
}
