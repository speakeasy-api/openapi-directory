"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OauthV1DeviceCode:
    r"""Created"""
    
    device_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device_code'), 'exclude': lambda f: f is None }})
    r"""The device verification code."""  
    expires_in: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expires_in'), 'exclude': lambda f: f is None }})
    r"""The expiration time of the device_code and user_code in seconds."""  
    interval: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interval'), 'exclude': lambda f: f is None }})
    r"""The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint."""  
    user_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_code'), 'exclude': lambda f: f is None }})
    r"""The verification code which end user uses to verify authorization request."""  
    verification_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verification_uri'), 'exclude': lambda f: f is None }})
    r"""The URI that the end user visits to verify authorization request."""  
    verification_uri_complete: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verification_uri_complete'), 'exclude': lambda f: f is None }})
    r"""The URI with user_code that the end-user alternatively visits to verify authorization request."""  
    