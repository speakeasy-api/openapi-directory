<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AuditLogEvent - An object representing a single event within an Asana domain.
 * 
 * 
 * Every audit log event is comprised of an `event_type`, `actor`, `resource`, and `context`. Some events will include additional metadata about the event under `details`. See our [currently supported list of events](/docs/supported-auditlogevents) for more details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AuditLogEvent
{
	#[\JMS\Serializer\Annotation\SerializedName('actor')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AuditLogEventActor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuditLogEventActor $actor = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('context')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AuditLogEventContext')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuditLogEventContext $context = null;
    
    /**
     * The time the event was created.
     * 
     * @var ?\DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * $details
     * 
     * @var ?array<string, mixed> $details
     */
	#[\JMS\Serializer\Annotation\SerializedName('details')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $details = null;
    
    /**
     * The category that this `event_type` belongs to.
     * 
     * @var ?string $eventCategory
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_category')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventCategory = null;
    
    /**
     * The type of the event.
     * 
     * @var ?string $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventType = null;
    
    /**
     * Globally unique identifier of the `AuditLogEvent`, as a string.
     * 
     * @var ?string $gid
     */
	#[\JMS\Serializer\Annotation\SerializedName('gid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gid = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('resource')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AuditLogEventResource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuditLogEventResource $resource = null;
    
	public function __construct()
	{
		$this->actor = null;
		$this->context = null;
		$this->createdAt = null;
		$this->details = null;
		$this->eventCategory = null;
		$this->eventType = null;
		$this->gid = null;
		$this->resource = null;
	}
}
