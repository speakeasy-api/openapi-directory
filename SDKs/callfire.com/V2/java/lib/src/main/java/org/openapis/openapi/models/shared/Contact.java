/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Contact - Represents a contact in CallFire platform. Contains info about the people you want to contact. It allows you to store a user-defined properties for each contact
 */
public class Contact {
    /**
     * A deleted contact, deleted contacts are hidden from search results
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted")
    public Boolean deleted;

    public Contact withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * An external id of a contact for syncing with external sources
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalId")
    public String externalId;

    public Contact withExternalId(String externalId) {
        this.externalId = externalId;
        return this;
    }
    
    /**
     * External system that external id refers to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalSystem")
    public String externalSystem;

    public Contact withExternalSystem(String externalSystem) {
        this.externalSystem = externalSystem;
        return this;
    }
    
    /**
     * Phone number in E.164 format (11-digit). Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extraPhone1")
    public String extraPhone1;

    public Contact withExtraPhone1(String extraPhone1) {
        this.extraPhone1 = extraPhone1;
        return this;
    }
    
    /**
     * Phone number in E.164 format (11-digit). Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extraPhone2")
    public String extraPhone2;

    public Contact withExtraPhone2(String extraPhone2) {
        this.extraPhone2 = extraPhone2;
        return this;
    }
    
    /**
     * Phone number in E.164 format (11-digit). Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extraPhone3")
    public String extraPhone3;

    public Contact withExtraPhone3(String extraPhone3) {
        this.extraPhone3 = extraPhone3;
        return this;
    }
    
    /**
     * A first name of a contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstName")
    public String firstName;

    public Contact withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Phone number in E.164 format (11-digit). Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("homePhone")
    public String homePhone;

    public Contact withHomePhone(String homePhone) {
        this.homePhone = homePhone;
        return this;
    }
    
    /**
     * An id of a contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public Contact withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * A last name of a contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastName")
    public String lastName;

    public Contact withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Phone number in E.164 format (11-digit). Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilePhone")
    public String mobilePhone;

    public Contact withMobilePhone(String mobilePhone) {
        this.mobilePhone = mobilePhone;
        return this;
    }
    
    /**
     * Map of user-defined string properties for contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, String> properties;

    public Contact withProperties(java.util.Map<String, String> properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * Phone number in E.164 format (11-digit). Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workPhone")
    public String workPhone;

    public Contact withWorkPhone(String workPhone) {
        this.workPhone = workPhone;
        return this;
    }
    
    /**
     * A Zip code of a contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zipcode")
    public String zipcode;

    public Contact withZipcode(String zipcode) {
        this.zipcode = zipcode;
        return this;
    }
    
    public Contact(){}
}
