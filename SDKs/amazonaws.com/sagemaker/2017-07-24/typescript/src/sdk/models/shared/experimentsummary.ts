/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExperimentSource } from "./experimentsource";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A summary of the properties of an experiment. To get the complete set of properties, call the <a>DescribeExperiment</a> API and provide the <code>ExperimentName</code>.
 */
export class ExperimentSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExperimentArn" })
  experimentArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExperimentName" })
  experimentName?: string;

  /**
   * The source of the experiment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ExperimentSource" })
  @Type(() => ExperimentSource)
  experimentSource?: ExperimentSource;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;
}
