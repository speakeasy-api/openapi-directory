// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CancelCommandXAmzTargetEnum
type CancelCommandXAmzTargetEnum string

const (
	CancelCommandXAmzTargetEnumAmazonSsmCancelCommand CancelCommandXAmzTargetEnum = "AmazonSSM.CancelCommand"
)

func (e *CancelCommandXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.CancelCommand":
		*e = CancelCommandXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelCommandXAmzTargetEnum: %s", s)
	}
}

type CancelCommandRequest struct {
	CancelCommandRequest shared.CancelCommandRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           CancelCommandXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CancelCommandResponse struct {
	// Success
	CancelCommandResult map[string]interface{}
	ContentType         string
	// DuplicateInstanceId
	DuplicateInstanceID interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidCommandId
	InvalidCommandID interface{}
	// InvalidInstanceId
	InvalidInstanceID interface{}
	StatusCode        int
	RawResponse       *http.Response
}
