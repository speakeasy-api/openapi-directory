/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ModelStatusEnum } from "./modelstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 *  The summary of an ML Detect behavior model.
 */
export class BehaviorModelTrainingSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "behaviorName" })
  behaviorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "datapointsCollectionPercentage" })
  datapointsCollectionPercentage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModelRefreshDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModelRefreshDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "modelStatus" })
  modelStatus?: ModelStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "securityProfileName" })
  securityProfileName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "trainingDataCollectionStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trainingDataCollectionStartDate?: Date;
}
