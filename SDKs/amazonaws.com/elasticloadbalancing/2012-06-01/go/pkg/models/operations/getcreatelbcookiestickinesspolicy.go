// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateLBCookieStickinessPolicyActionEnum
type GETCreateLBCookieStickinessPolicyActionEnum string

const (
	GETCreateLBCookieStickinessPolicyActionEnumCreateLbCookieStickinessPolicy GETCreateLBCookieStickinessPolicyActionEnum = "CreateLBCookieStickinessPolicy"
)

func (e *GETCreateLBCookieStickinessPolicyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateLBCookieStickinessPolicy":
		*e = GETCreateLBCookieStickinessPolicyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateLBCookieStickinessPolicyActionEnum: %s", s)
	}
}

// GETCreateLBCookieStickinessPolicyVersionEnum
type GETCreateLBCookieStickinessPolicyVersionEnum string

const (
	GETCreateLBCookieStickinessPolicyVersionEnumTwoThousandAndTwelve0601 GETCreateLBCookieStickinessPolicyVersionEnum = "2012-06-01"
)

func (e *GETCreateLBCookieStickinessPolicyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-06-01":
		*e = GETCreateLBCookieStickinessPolicyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateLBCookieStickinessPolicyVersionEnum: %s", s)
	}
}

type GETCreateLBCookieStickinessPolicyRequest struct {
	Action GETCreateLBCookieStickinessPolicyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.
	CookieExpirationPeriod *int64 `queryParam:"style=form,explode=true,name=CookieExpirationPeriod"`
	// The name of the load balancer.
	LoadBalancerName string `queryParam:"style=form,explode=true,name=LoadBalancerName"`
	// The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.
	PolicyName        string                                       `queryParam:"style=form,explode=true,name=PolicyName"`
	Version           GETCreateLBCookieStickinessPolicyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateLBCookieStickinessPolicyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
