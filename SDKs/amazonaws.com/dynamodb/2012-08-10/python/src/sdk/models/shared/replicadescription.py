"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import provisionedthroughputoverride as shared_provisionedthroughputoverride
from ..shared import replicaglobalsecondaryindexdescription as shared_replicaglobalsecondaryindexdescription
from ..shared import replicastatus_enum as shared_replicastatus_enum
from ..shared import tableclasssummary as shared_tableclasssummary
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReplicaDescription:
    r"""Contains the details of the replica."""
    
    global_secondary_indexes: Optional[list[shared_replicaglobalsecondaryindexdescription.ReplicaGlobalSecondaryIndexDescription]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalSecondaryIndexes'), 'exclude': lambda f: f is None }})  
    kms_master_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KMSMasterKeyId'), 'exclude': lambda f: f is None }})  
    provisioned_throughput_override: Optional[shared_provisionedthroughputoverride.ProvisionedThroughputOverride] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisionedThroughputOverride'), 'exclude': lambda f: f is None }})  
    region_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RegionName'), 'exclude': lambda f: f is None }})  
    replica_inaccessible_date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaInaccessibleDateTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    replica_status: Optional[shared_replicastatus_enum.ReplicaStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaStatus'), 'exclude': lambda f: f is None }})  
    replica_status_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaStatusDescription'), 'exclude': lambda f: f is None }})  
    replica_status_percent_progress: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaStatusPercentProgress'), 'exclude': lambda f: f is None }})  
    replica_table_class_summary: Optional[shared_tableclasssummary.TableClassSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaTableClassSummary'), 'exclude': lambda f: f is None }})
    r"""Contains details of the table class."""  
    