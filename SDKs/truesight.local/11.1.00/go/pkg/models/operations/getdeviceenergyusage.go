// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetDeviceEnergyUsageBasisEnum - Subdivision of the period for which you wish to retrieve energy usage data.
type GetDeviceEnergyUsageBasisEnum string

const (
	GetDeviceEnergyUsageBasisEnumMonthly GetDeviceEnergyUsageBasisEnum = "MONTHLY"
	GetDeviceEnergyUsageBasisEnumDaily   GetDeviceEnergyUsageBasisEnum = "DAILY"
	GetDeviceEnergyUsageBasisEnumHourly  GetDeviceEnergyUsageBasisEnum = "HOURLY"
)

func (e GetDeviceEnergyUsageBasisEnum) ToPointer() *GetDeviceEnergyUsageBasisEnum {
	return &e
}

func (e *GetDeviceEnergyUsageBasisEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MONTHLY":
		fallthrough
	case "DAILY":
		fallthrough
	case "HOURLY":
		*e = GetDeviceEnergyUsageBasisEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeviceEnergyUsageBasisEnum: %v", v)
	}
}

// GetDeviceEnergyUsageRollPeriodEnum - The period for which you wish to retrieve energy usage data.
type GetDeviceEnergyUsageRollPeriodEnum string

const (
	GetDeviceEnergyUsageRollPeriodEnumOneDay    GetDeviceEnergyUsageRollPeriodEnum = "ONE_DAY"
	GetDeviceEnergyUsageRollPeriodEnumOneWeek   GetDeviceEnergyUsageRollPeriodEnum = "ONE_WEEK"
	GetDeviceEnergyUsageRollPeriodEnumOneMonth  GetDeviceEnergyUsageRollPeriodEnum = "ONE_MONTH"
	GetDeviceEnergyUsageRollPeriodEnumSixMonths GetDeviceEnergyUsageRollPeriodEnum = "SIX_MONTHS"
	GetDeviceEnergyUsageRollPeriodEnumOneYear   GetDeviceEnergyUsageRollPeriodEnum = "ONE_YEAR"
)

func (e GetDeviceEnergyUsageRollPeriodEnum) ToPointer() *GetDeviceEnergyUsageRollPeriodEnum {
	return &e
}

func (e *GetDeviceEnergyUsageRollPeriodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ONE_DAY":
		fallthrough
	case "ONE_WEEK":
		fallthrough
	case "ONE_MONTH":
		fallthrough
	case "SIX_MONTHS":
		fallthrough
	case "ONE_YEAR":
		*e = GetDeviceEnergyUsageRollPeriodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeviceEnergyUsageRollPeriodEnum: %v", v)
	}
}

type GetDeviceEnergyUsageRequest struct {
	// Subdivision of the period for which you wish to retrieve energy usage data.
	Basis *GetDeviceEnergyUsageBasisEnum `queryParam:"style=form,explode=true,name=basis"`
	// The ID of the device.
	DeviceID int `pathParam:"style=simple,explode=false,name=deviceId"`
	// The period for which you wish to retrieve energy usage data.
	RollPeriod *GetDeviceEnergyUsageRollPeriodEnum `queryParam:"style=form,explode=true,name=rollPeriod"`
}

type GetDeviceEnergyUsageResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
