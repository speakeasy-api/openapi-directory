"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestOrderCustomerMarketingRightsInfo:
    
    explicit_marketing_preference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('explicitMarketingPreference'), 'exclude': lambda f: f is None }})
    r"""Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty. Acceptable values are: - \\"`denied`\\" - \\"`granted`\\" """  
    last_updated_timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastUpdatedTimestamp'), 'exclude': lambda f: f is None }})
    r"""Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet."""  
    