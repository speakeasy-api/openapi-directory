// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// IdentityServiceMembershipStateStateEnum - Deployment state on this member
type IdentityServiceMembershipStateStateEnum string

const (
	IdentityServiceMembershipStateStateEnumDeploymentStateUnspecified IdentityServiceMembershipStateStateEnum = "DEPLOYMENT_STATE_UNSPECIFIED"
	IdentityServiceMembershipStateStateEnumOk                         IdentityServiceMembershipStateStateEnum = "OK"
	IdentityServiceMembershipStateStateEnumError                      IdentityServiceMembershipStateStateEnum = "ERROR"
)

func (e IdentityServiceMembershipStateStateEnum) ToPointer() *IdentityServiceMembershipStateStateEnum {
	return &e
}

func (e *IdentityServiceMembershipStateStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEPLOYMENT_STATE_UNSPECIFIED":
		fallthrough
	case "OK":
		fallthrough
	case "ERROR":
		*e = IdentityServiceMembershipStateStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IdentityServiceMembershipStateStateEnum: %v", v)
	}
}

// IdentityServiceMembershipState - **Anthos Identity Service**: State for a single Membership.
type IdentityServiceMembershipState struct {
	// The reason of the failure.
	FailureReason *string `json:"failureReason,omitempty"`
	// Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.
	InstalledVersion *string `json:"installedVersion,omitempty"`
	// **Anthos Identity Service**: Configuration for a single Membership.
	MemberConfig *IdentityServiceMembershipSpec `json:"memberConfig,omitempty"`
	// Deployment state on this member
	State *IdentityServiceMembershipStateStateEnum `json:"state,omitempty"`
}
