"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import two_hundred_and_one_share as shared_two_hundred_and_one_share
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class KkidShareGetSecurity:
    
    auth_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Auth' }})  
    
class KkidShareGetLinkEnum(str, Enum):
    r"""Link to share"""
    HTTPS_KHOME_KUMPEAPPS_COM_PORTAL_WISH_LIST_PHP = 'https://khome.kumpeapps.com/portal/wish-list.php'
    HTTPS_KHOME_KUMPEAPPS_COM_PORTAL_CHORES_TODAY_PHP = 'https://khome.kumpeapps.com/portal/chores-today.php'

class KkidShareGetScopeEnum(str, Enum):
    r"""Authentication scope for link"""
    WISH_LIST = 'WishList'
    WISH_LIST_ADMIN = 'WishListAdmin'
    CHORES = 'Chores'
    CHORES_ADMIN = 'ChoresAdmin'

class KkidShareGetScope2Enum(str, Enum):
    r"""Authentication scope for link"""
    WISH_LIST = 'WishList'
    WISH_LIST_ADMIN = 'WishListAdmin'
    CHORES = 'Chores'
    CHORES_ADMIN = 'ChoresAdmin'

class KkidShareGetScope3Enum(str, Enum):
    r"""Authentication scope for link"""
    WISH_LIST = 'WishList'
    WISH_LIST_ADMIN = 'WishListAdmin'
    CHORES = 'Chores'
    CHORES_ADMIN = 'ChoresAdmin'

class KkidShareGetScope4Enum(str, Enum):
    r"""Authentication scope for link"""
    WISH_LIST = 'WishList'
    WISH_LIST_ADMIN = 'WishListAdmin'
    CHORES = 'Chores'
    CHORES_ADMIN = 'ChoresAdmin'


@dataclasses.dataclass
class KkidShareGetRequest:
    
    link: KkidShareGetLinkEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'link', 'style': 'form', 'explode': True }})
    r"""Link to share"""  
    link_user_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'linkUserId', 'style': 'form', 'explode': True }})
    r"""User ID that the link should be authenticated to"""  
    scope: KkidShareGetScopeEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'scope', 'style': 'form', 'explode': True }})
    r"""Authentication scope for link"""  
    scope2: Optional[KkidShareGetScope2Enum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'scope2', 'style': 'form', 'explode': True }})
    r"""Authentication scope for link"""  
    scope3: Optional[KkidShareGetScope3Enum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'scope3', 'style': 'form', 'explode': True }})
    r"""Authentication scope for link"""  
    scope4: Optional[KkidShareGetScope4Enum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'scope4', 'style': 'form', 'explode': True }})
    r"""Authentication scope for link"""  
    

@dataclasses.dataclass
class KkidShareGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    two_hundred_and_one_share: Optional[shared_two_hundred_and_one_share.TwoHundredAndOneShare] = dataclasses.field(default=None)
    r"""authenticated link created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    