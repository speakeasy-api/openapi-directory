/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DatabaseShortInfoResponse } from "./databaseshortinforesponse";
import { SchemaShortInfoResponse } from "./schemashortinforesponse";
import { ServerShortInfoResponse } from "./servershortinforesponse";
import { Expose, Type } from "class-transformer";

/**
 * Describes a schema in a Fleet Advisor collector inventory.
 */
export class SchemaResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CodeLineCount" })
  codeLineCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CodeSize" })
  codeSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Complexity" })
  complexity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DatabaseInstance" })
  @Type(() => DatabaseShortInfoResponse)
  databaseInstance?: DatabaseShortInfoResponse;

  /**
   * Describes a schema in a Fleet Advisor collector inventory.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OriginalSchema" })
  @Type(() => SchemaShortInfoResponse)
  originalSchema?: SchemaShortInfoResponse;

  @SpeakeasyMetadata()
  @Expose({ name: "SchemaId" })
  schemaId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SchemaName" })
  schemaName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Server" })
  @Type(() => ServerShortInfoResponse)
  server?: ServerShortInfoResponse;

  @SpeakeasyMetadata()
  @Expose({ name: "Similarity" })
  similarity?: number;
}
