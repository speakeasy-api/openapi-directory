/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Projects {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Projects(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Deletes releases. A maximum of 100 releases can be deleted per request.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesBatchDeleteResponse firebaseappdistributionProjectsAppsReleasesBatchDelete(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesBatchDeleteRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesBatchDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesBatchDeleteRequest.class, baseUrl, "/v1/{parent}/releases:batchDelete", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleFirebaseAppdistroV1BatchDeleteReleasesRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesBatchDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesBatchDeleteResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesBatchDeleteResponse(contentType, httpRes.statusCode()) {{
            googleProtobufEmpty = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Distributes a release to testers. This call does the following: 1. Creates testers for the specified emails, if none exist. 2. Adds the testers and groups to the release. 3. Sends new testers an invitation email. 4. Sends existing testers a new release email. The request will fail with a `INVALID_ARGUMENT` if it contains a group that doesn't exist.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesDistributeResponse firebaseappdistributionProjectsAppsReleasesDistribute(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesDistributeRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesDistributeSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesDistributeRequest.class, baseUrl, "/v1/{name}:distribute", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleFirebaseAppdistroV1DistributeReleaseRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesDistributeRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesDistributeResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesDistributeResponse(contentType, httpRes.statusCode()) {{
            googleFirebaseAppdistroV1DistributeReleaseResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleFirebaseAppdistroV1DistributeReleaseResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists feedback reports. By default, sorts by `createTime` in descending order.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesFeedbackReportsListResponse firebaseappdistributionProjectsAppsReleasesFeedbackReportsList(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesFeedbackReportsListRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesFeedbackReportsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesFeedbackReportsListRequest.class, baseUrl, "/v1/{parent}/feedbackReports", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesFeedbackReportsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesFeedbackReportsListResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesFeedbackReportsListResponse(contentType, httpRes.statusCode()) {{
            googleFirebaseAppdistroV1ListFeedbackReportsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1ListFeedbackReportsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1ListFeedbackReportsResponse.class);
                res.googleFirebaseAppdistroV1ListFeedbackReportsResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists releases. By default, sorts by `createTime` in descending order.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesListResponse firebaseappdistributionProjectsAppsReleasesList(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesListRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesListRequest.class, baseUrl, "/v1/{parent}/releases", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesListResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesListResponse(contentType, httpRes.statusCode()) {{
            googleFirebaseAppdistroV1ListReleasesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1ListReleasesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1ListReleasesResponse.class);
                res.googleFirebaseAppdistroV1ListReleasesResponse = out;
            }
        }

        return res;
    }

    /**
     * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsCancelResponse firebaseappdistributionProjectsAppsReleasesOperationsCancel(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsCancelRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsCancelSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsCancelRequest.class, baseUrl, "/v1/{name}:cancel", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsCancelRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsCancelResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsCancelResponse(contentType, httpRes.statusCode()) {{
            googleProtobufEmpty = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsListResponse firebaseappdistributionProjectsAppsReleasesOperationsList(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsListRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsListRequest.class, baseUrl, "/v1/{name}/operations", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsListResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsListResponse(contentType, httpRes.statusCode()) {{
            googleLongrunningListOperationsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningListOperationsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningListOperationsResponse.class);
                res.googleLongrunningListOperationsResponse = out;
            }
        }

        return res;
    }

    /**
     * Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsWaitResponse firebaseappdistributionProjectsAppsReleasesOperationsWait(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsWaitRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsWaitSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsWaitRequest.class, baseUrl, "/v1/{name}:wait", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleLongrunningWaitOperationRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsWaitRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsWaitResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsAppsReleasesOperationsWaitResponse(contentType, httpRes.statusCode()) {{
            googleLongrunningOperation = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Batch adds members to a group. The testers will gain access to all releases that the groups have access to.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchJoinResponse firebaseappdistributionProjectsGroupsBatchJoin(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchJoinRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchJoinSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchJoinRequest.class, baseUrl, "/v1/{group}:batchJoin", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleFirebaseAppdistroV1BatchJoinGroupRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchJoinRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchJoinResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchJoinResponse(contentType, httpRes.statusCode()) {{
            googleProtobufEmpty = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Batch removed members from a group. The testers will lose access to all releases that the groups have access to.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchLeaveResponse firebaseappdistributionProjectsGroupsBatchLeave(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchLeaveRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchLeaveSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchLeaveRequest.class, baseUrl, "/v1/{group}:batchLeave", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleFirebaseAppdistroV1BatchLeaveGroupRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchLeaveRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchLeaveResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsBatchLeaveResponse(contentType, httpRes.statusCode()) {{
            googleProtobufEmpty = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Create a group.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsCreateResponse firebaseappdistributionProjectsGroupsCreate(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsCreateRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsCreateRequest.class, baseUrl, "/v1/{parent}/groups", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleFirebaseAppdistroV1GroupInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsCreateResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsCreateResponse(contentType, httpRes.statusCode()) {{
            googleFirebaseAppdistroV1Group = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1Group out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1Group.class);
                res.googleFirebaseAppdistroV1Group = out;
            }
        }

        return res;
    }

    /**
     * Delete a group.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsDeleteResponse firebaseappdistributionProjectsGroupsDelete(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsDeleteRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsDeleteRequest.class, baseUrl, "/v1/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsDeleteResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsDeleteResponse(contentType, httpRes.statusCode()) {{
            googleProtobufEmpty = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Get a group.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsGetResponse firebaseappdistributionProjectsGroupsGet(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsGetRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsGetRequest.class, baseUrl, "/v1/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsGetRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsGetResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsGetResponse(contentType, httpRes.statusCode()) {{
            googleFirebaseAppdistroV1Group = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1Group out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1Group.class);
                res.googleFirebaseAppdistroV1Group = out;
            }
        }

        return res;
    }

    /**
     * List groups.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsListResponse firebaseappdistributionProjectsGroupsList(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsListRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsListRequest.class, baseUrl, "/v1/{parent}/groups", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsListResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsGroupsListResponse(contentType, httpRes.statusCode()) {{
            googleFirebaseAppdistroV1ListGroupsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1ListGroupsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1ListGroupsResponse.class);
                res.googleFirebaseAppdistroV1ListGroupsResponse = out;
            }
        }

        return res;
    }

    /**
     * Batch adds testers. This call adds testers for the specified emails if they don't already exist. Returns all testers specified in the request, including newly created and previously existing testers. This action is idempotent.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchAddResponse firebaseappdistributionProjectsTestersBatchAdd(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchAddRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchAddSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchAddRequest.class, baseUrl, "/v1/{project}/testers:batchAdd", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleFirebaseAppdistroV1BatchAddTestersRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchAddRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchAddResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchAddResponse(contentType, httpRes.statusCode()) {{
            googleFirebaseAppdistroV1BatchAddTestersResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1BatchAddTestersResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1BatchAddTestersResponse.class);
                res.googleFirebaseAppdistroV1BatchAddTestersResponse = out;
            }
        }

        return res;
    }

    /**
     * Batch removes testers. If found, this call deletes testers for the specified emails. Returns all deleted testers.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchRemoveResponse firebaseappdistributionProjectsTestersBatchRemove(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchRemoveRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchRemoveSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchRemoveRequest.class, baseUrl, "/v1/{project}/testers:batchRemove", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleFirebaseAppdistroV1BatchRemoveTestersRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchRemoveRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchRemoveResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersBatchRemoveResponse(contentType, httpRes.statusCode()) {{
            googleFirebaseAppdistroV1BatchRemoveTestersResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1BatchRemoveTestersResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1BatchRemoveTestersResponse.class);
                res.googleFirebaseAppdistroV1BatchRemoveTestersResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists testers and their resource ids.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersListResponse firebaseappdistributionProjectsTestersList(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersListRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersListRequest.class, baseUrl, "/v1/{parent}/testers", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersListResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersListResponse(contentType, httpRes.statusCode()) {{
            googleFirebaseAppdistroV1ListTestersResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1ListTestersResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1ListTestersResponse.class);
                res.googleFirebaseAppdistroV1ListTestersResponse = out;
            }
        }

        return res;
    }

    /**
     * Update a tester. If the testers joins a group they gain access to all releases that the group has access to.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersPatchResponse firebaseappdistributionProjectsTestersPatch(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersPatchRequest request, org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersPatchSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersPatchRequest.class, baseUrl, "/v1/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleFirebaseAppdistroV1TesterInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersPatchRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersPatchResponse res = new org.openapis.openapi.models.operations.FirebaseappdistributionProjectsTestersPatchResponse(contentType, httpRes.statusCode()) {{
            googleFirebaseAppdistroV1Tester = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1Tester out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleFirebaseAppdistroV1Tester.class);
                res.googleFirebaseAppdistroV1Tester = out;
            }
        }

        return res;
    }
}