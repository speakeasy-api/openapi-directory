"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MediaFileDeliveryTypeEnum(str, Enum):
    r"""The way in which the media file is delivered."""
    STREAM = 'Stream'
    PROGRESSIVE = 'Progressive'
    DOWNLOAD = 'Download'

class MediaFileResolutionEnum1(str, Enum):
    r"""The resolution of the video media."""
    SD = 'SD'
    HD_720 = 'HD-720'
    HD_1080 = 'HD-1080'
    HD_4_K = 'HD-4K'
    EXTERNAL = 'External'
    UNKNOWN = 'Unknown'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MediaFile:
    
    delivery_type: MediaFileDeliveryTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryType') }})
    r"""The way in which the media file is delivered."""  
    drm: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drm') }})
    r"""The type of drm used to encrypt the media. 'None' if unencrypted."""  
    format: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format') }})
    r"""The format the media was encoded in."""  
    height: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('height') }})
    r"""The height of the video media."""  
    language: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('language') }})
    r"""The language code for the media, e.g. 'en'."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the media file."""  
    resolution: MediaFileResolutionEnum1 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""The resolution of the video media."""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""The url to access the media file."""  
    width: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width') }})
    r"""The width of the video media."""  
    channels: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channels'), 'exclude': lambda f: f is None }})
    r"""The number of audio channels."""  
    