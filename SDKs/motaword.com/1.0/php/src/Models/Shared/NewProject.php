<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class NewProject
{
    /**
     * Optional. If you provide a callback URL, we will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.
     * 
     * @var ?string $callbackUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('callback_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $callbackUrl = null;
    
    /**
     * Coupon code to redeem
     * 
     * @var ?string $couponCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('coupon_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $couponCode = null;
    
    /**
     * Optional. This is a consistent custom data parameter that will be given to you in the response across every request of this project model. Values should be provided like this, custom[my_key] = my_value.
     * 
     * @var ?array<string> $custom
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $custom = null;
    
    /**
     * Optional. You can add as many files as you want in documents[] parameter. Or you add your documents later in separate calls.
     * 
     * @var ?string $documents
     */
	#[\JMS\Serializer\Annotation\SerializedName('documents[]')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $documents = null;
    
    /**
     * Optional. Only one glossary is supported at the moment.
     * 
     * @var ?string $glossaries
     */
	#[\JMS\Serializer\Annotation\SerializedName('glossaries[]')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $glossaries = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('source_language')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceLanguage = null;
    
    /**
     * Optional. You can add as many files as you want in styleguides[] parameter. Or you add your style guides later in separate calls.
     * 
     * @var ?string $styleguides
     */
	#[\JMS\Serializer\Annotation\SerializedName('styleguides[]')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $styleguides = null;
    
    /**
     * $targetLanguages
     * 
     * @var ?array<string> $targetLanguages
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_languages[]')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $targetLanguages = null;
    
	public function __construct()
	{
		$this->callbackUrl = null;
		$this->couponCode = null;
		$this->custom = null;
		$this->documents = null;
		$this->glossaries = null;
		$this->sourceLanguage = null;
		$this->styleguides = null;
		$this->targetLanguages = null;
	}
}
