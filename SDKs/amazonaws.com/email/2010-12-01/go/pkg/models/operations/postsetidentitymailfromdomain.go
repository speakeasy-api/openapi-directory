// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTSetIdentityMailFromDomainActionEnum
type POSTSetIdentityMailFromDomainActionEnum string

const (
	POSTSetIdentityMailFromDomainActionEnumSetIdentityMailFromDomain POSTSetIdentityMailFromDomainActionEnum = "SetIdentityMailFromDomain"
)

func (e *POSTSetIdentityMailFromDomainActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SetIdentityMailFromDomain":
		*e = POSTSetIdentityMailFromDomainActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSetIdentityMailFromDomainActionEnum: %s", s)
	}
}

// POSTSetIdentityMailFromDomainVersionEnum
type POSTSetIdentityMailFromDomainVersionEnum string

const (
	POSTSetIdentityMailFromDomainVersionEnumTwoThousandAndTen1201 POSTSetIdentityMailFromDomainVersionEnum = "2010-12-01"
)

func (e *POSTSetIdentityMailFromDomainVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = POSTSetIdentityMailFromDomainVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSetIdentityMailFromDomainVersionEnum: %s", s)
	}
}

type POSTSetIdentityMailFromDomainQueryParams struct {
	Action  POSTSetIdentityMailFromDomainActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTSetIdentityMailFromDomainVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTSetIdentityMailFromDomainHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTSetIdentityMailFromDomainRequest struct {
	QueryParams POSTSetIdentityMailFromDomainQueryParams
	Headers     POSTSetIdentityMailFromDomainHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTSetIdentityMailFromDomainResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
