// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Segment - defining a flight segment; including both operating and marketing details when applicable
type Segment struct {
	// information related to the aircraft
	Aircraft *AircraftEquipment `json:"aircraft,omitempty"`
	// departure or arrival information
	Arrival *FlightEndPoint `json:"arrival,omitempty"`
	// When the flight has a marketing or/and operating airline that is identified as blacklisted by the European Commission.
	//
	// To improve travel safety, the European Commission regularly updates the list of the banned carriers from operating in Europe. It allows any Travel Agency located in the European Union to easily identify and hide any travel recommendation based on some unsafe airlines.
	// The [list of the banned airlines](https://ec.europa.eu/transport/sites/transport/files/air-safety-list_en.pdf) is published in the Official Journal of the European Union, where they are included as annexes A and B to the Commission Regulation. The blacklist of an airline can concern all its flights or some specific aircraft types pertaining to the airline
	//
	BlacklistedInEU *bool `json:"blacklistedInEU,omitempty"`
	// providing the airline / carrier code
	CarrierCode *string `json:"carrierCode,omitempty"`
	// Co2 informations
	Co2Emissions []Co2Emission `json:"co2Emissions,omitempty"`
	// departure or arrival information
	Departure *FlightEndPoint `json:"departure,omitempty"`
	// stop duration in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) PnYnMnDTnHnMnS format, e.g. PT2H10M
	Duration *string `json:"duration,omitempty"`
	// Id of the segment
	ID *string `json:"id,omitempty"`
	// the flight number as assigned by the carrier
	Number *string `json:"number,omitempty"`
	// Number of stops
	NumberOfStops *int64 `json:"numberOfStops,omitempty"`
	// information about the operating flight
	Operating *OperatingFlight `json:"operating,omitempty"`
	// information regarding the different stops composing the flight segment. E.g. technical stop, change of gauge...
	Stops []FlightStop `json:"stops,omitempty"`
}
