"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import image as shared_image
from ..shared import location as shared_location
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CharityOrg:
    r"""The full location, ID, logo and other details of the charity organization."""
    
    charity_org_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('charityOrgId'), 'exclude': lambda f: f is None }})
    r"""The ID of the charitable organization."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description of the charitable organization."""  
    location: Optional[shared_location.Location] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})  
    logo_image: Optional[shared_image.Image] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logoImage'), 'exclude': lambda f: f is None }})
    r"""The logo of the charitable organization."""  
    mission_statement: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('missionStatement'), 'exclude': lambda f: f is None }})
    r"""The mission statement of the charitable organization."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the charitable organization."""  
    registration_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registrationId'), 'exclude': lambda f: f is None }})
    r"""The registration ID for the charitable organization.<br /><br /><span class=\\"tablenote\\"><span style=\\"color:#004680\\"><strong>Note:</strong></span> For the US marketplace, this is the EIN.</span>"""  
    website: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('website'), 'exclude': lambda f: f is None }})
    r"""The link to the website for the charitable organization."""  
    