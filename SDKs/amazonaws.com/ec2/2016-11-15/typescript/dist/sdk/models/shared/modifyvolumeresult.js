"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModifyVolumeResult = exports.ModifyVolumeResultVolumeModification = exports.ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum = exports.ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum = exports.ModifyVolumeResultVolumeModificationModificationStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The current modification state. The modification state is null for unmodified volumes.
 */
var ModifyVolumeResultVolumeModificationModificationStateEnum;
(function (ModifyVolumeResultVolumeModificationModificationStateEnum) {
    ModifyVolumeResultVolumeModificationModificationStateEnum["Modifying"] = "modifying";
    ModifyVolumeResultVolumeModificationModificationStateEnum["Optimizing"] = "optimizing";
    ModifyVolumeResultVolumeModificationModificationStateEnum["Completed"] = "completed";
    ModifyVolumeResultVolumeModificationModificationStateEnum["Failed"] = "failed";
})(ModifyVolumeResultVolumeModificationModificationStateEnum = exports.ModifyVolumeResultVolumeModificationModificationStateEnum || (exports.ModifyVolumeResultVolumeModificationModificationStateEnum = {}));
/**
 * The original EBS volume type of the volume.
 */
var ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum;
(function (ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum) {
    ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum["Standard"] = "standard";
    ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum["Io1"] = "io1";
    ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum["Io2"] = "io2";
    ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum["Gp2"] = "gp2";
    ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum["Sc1"] = "sc1";
    ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum["St1"] = "st1";
    ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum["Gp3"] = "gp3";
})(ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum = exports.ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum || (exports.ModifyVolumeResultVolumeModificationOriginalVolumeTypeEnum = {}));
/**
 * The target EBS volume type of the volume.
 */
var ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum;
(function (ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum) {
    ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum["Standard"] = "standard";
    ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum["Io1"] = "io1";
    ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum["Io2"] = "io2";
    ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum["Gp2"] = "gp2";
    ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum["Sc1"] = "sc1";
    ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum["St1"] = "st1";
    ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum["Gp3"] = "gp3";
})(ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum = exports.ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum || (exports.ModifyVolumeResultVolumeModificationTargetVolumeTypeEnum = {}));
/**
 * Information about the volume modification.
 */
var ModifyVolumeResultVolumeModification = /** @class */ (function (_super) {
    __extends(ModifyVolumeResultVolumeModification, _super);
    function ModifyVolumeResultVolumeModification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], ModifyVolumeResultVolumeModification.prototype, "endTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVolumeResultVolumeModification.prototype, "modificationState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVolumeResultVolumeModification.prototype, "originalIops", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyVolumeResultVolumeModification.prototype, "originalMultiAttachEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVolumeResultVolumeModification.prototype, "originalSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVolumeResultVolumeModification.prototype, "originalThroughput", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVolumeResultVolumeModification.prototype, "originalVolumeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVolumeResultVolumeModification.prototype, "progress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], ModifyVolumeResultVolumeModification.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVolumeResultVolumeModification.prototype, "statusMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVolumeResultVolumeModification.prototype, "targetIops", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyVolumeResultVolumeModification.prototype, "targetMultiAttachEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVolumeResultVolumeModification.prototype, "targetSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVolumeResultVolumeModification.prototype, "targetThroughput", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVolumeResultVolumeModification.prototype, "targetVolumeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVolumeResultVolumeModification.prototype, "volumeId", void 0);
    return ModifyVolumeResultVolumeModification;
}(utils_1.SpeakeasyBase));
exports.ModifyVolumeResultVolumeModification = ModifyVolumeResultVolumeModification;
/**
 * Success
 */
var ModifyVolumeResult = /** @class */ (function (_super) {
    __extends(ModifyVolumeResult, _super);
    function ModifyVolumeResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyVolumeResultVolumeModification)
    ], ModifyVolumeResult.prototype, "volumeModification", void 0);
    return ModifyVolumeResult;
}(utils_1.SpeakeasyBase));
exports.ModifyVolumeResult = ModifyVolumeResult;
