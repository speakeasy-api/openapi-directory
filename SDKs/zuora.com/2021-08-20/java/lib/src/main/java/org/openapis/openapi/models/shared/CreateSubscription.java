/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateSubscription - Information about an order action of type `CreateSubscription`.
 * 
 */
public class CreateSubscription {
    /**
     * Specifies whether the subscription appears on a separate invoice when Zuora generates invoices.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceSeparately")
    public Boolean invoiceSeparately;
    public CreateSubscription withInvoiceSeparately(Boolean invoiceSeparately) {
        this.invoiceSeparately = invoiceSeparately;
        return this;
    }
    
    /**
     * Information about a new account that will own the subscription. Only available if you have enabled the Owner Transfer feature.
     * 
     * **Note:** The Owner Transfer feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     * If you do not set this field or the `subscriptionOwnerAccountNumber` field, the account that owns the order will also own the subscription. Zuora will return an error if you set this field and the `subscriptionOwnerAccountNumber` field.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newSubscriptionOwnerAccount")
    public CreateSubscriptionNewSubscriptionOwnerAccount newSubscriptionOwnerAccount;
    public CreateSubscription withNewSubscriptionOwnerAccount(CreateSubscriptionNewSubscriptionOwnerAccount newSubscriptionOwnerAccount) {
        this.newSubscriptionOwnerAccount = newSubscriptionOwnerAccount;
        return this;
    }
    
    /**
     * Notes about the subscription. These notes are only visible to Zuora users.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public CreateSubscription withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * List of rate plans associated with the subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscribeToRatePlans")
    public RatePlanOverride[] subscribeToRatePlans;
    public CreateSubscription withSubscribeToRatePlans(RatePlanOverride[] subscribeToRatePlans) {
        this.subscribeToRatePlans = subscribeToRatePlans;
        return this;
    }
    
    /**
     * Subscription number of the subscription. For example, A-S00000001.
     * 
     * If you do not set this field, Zuora will generate the subscription number.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionNumber")
    public String subscriptionNumber;
    public CreateSubscription withSubscriptionNumber(String subscriptionNumber) {
        this.subscriptionNumber = subscriptionNumber;
        return this;
    }
    
    /**
     * Account number of an existing account that will own the subscription. For example, A00000001.
     * 
     * If you do not set this field or the `newSubscriptionOwnerAccount` field, the account that owns the order will also own the subscription. Zuora will return an error if you set this field and the `newSubscriptionOwnerAccount` field.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionOwnerAccountNumber")
    public String subscriptionOwnerAccountNumber;
    public CreateSubscription withSubscriptionOwnerAccountNumber(String subscriptionOwnerAccountNumber) {
        this.subscriptionOwnerAccountNumber = subscriptionOwnerAccountNumber;
        return this;
    }
    
    /**
     * Container for the terms and renewal settings of the subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terms")
    public CreateSubscriptionTerms terms;
    public CreateSubscription withTerms(CreateSubscriptionTerms terms) {
        this.terms = terms;
        return this;
    }
    
}
