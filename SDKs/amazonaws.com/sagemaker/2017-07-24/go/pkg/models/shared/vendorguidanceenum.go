// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VendorGuidanceEnum string

const (
	VendorGuidanceEnumNotProvided  VendorGuidanceEnum = "NOT_PROVIDED"
	VendorGuidanceEnumStable       VendorGuidanceEnum = "STABLE"
	VendorGuidanceEnumToBeArchived VendorGuidanceEnum = "TO_BE_ARCHIVED"
	VendorGuidanceEnumArchived     VendorGuidanceEnum = "ARCHIVED"
)

func (e VendorGuidanceEnum) ToPointer() *VendorGuidanceEnum {
	return &e
}

func (e *VendorGuidanceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_PROVIDED":
		fallthrough
	case "STABLE":
		fallthrough
	case "TO_BE_ARCHIVED":
		fallthrough
	case "ARCHIVED":
		*e = VendorGuidanceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VendorGuidanceEnum: %v", v)
	}
}
