// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateNotificationConfigurationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateNotificationConfigurationRequestBodyNotificationConfiguration - The structure that contains the notification information for the KVS images delivery. If this parameter is null, the configuration will be deleted from the stream.
type UpdateNotificationConfigurationRequestBodyNotificationConfiguration struct {
	DestinationConfig *shared.NotificationDestinationConfig `json:"DestinationConfig,omitempty"`
	Status            *shared.ConfigurationStatusEnum       `json:"Status,omitempty"`
}

type UpdateNotificationConfigurationRequestBody struct {
	// The structure that contains the notification information for the KVS images delivery. If this parameter is null, the configuration will be deleted from the stream.
	NotificationConfiguration *UpdateNotificationConfigurationRequestBodyNotificationConfiguration `json:"NotificationConfiguration,omitempty"`
	// The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to update the notification configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
	StreamARN *string `json:"StreamARN,omitempty"`
	// The name of the stream from which to update the notification configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
	StreamName *string `json:"StreamName,omitempty"`
}

type UpdateNotificationConfigurationRequest struct {
	Headers UpdateNotificationConfigurationHeaders
	Request UpdateNotificationConfigurationRequestBody `request:"mediaType=application/json"`
}

type UpdateNotificationConfigurationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientLimitExceededException
	ClientLimitExceededException interface{}
	ContentType                  string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// NoDataRetentionException
	NoDataRetentionException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateNotificationConfigurationOutput map[string]interface{}
}
