// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceTypeEnum string

const (
	InstanceTypeEnumDevStandard1Small  InstanceTypeEnum = "dev.standard1.small"
	InstanceTypeEnumDevStandard1Medium InstanceTypeEnum = "dev.standard1.medium"
	InstanceTypeEnumDevStandard1Large  InstanceTypeEnum = "dev.standard1.large"
	InstanceTypeEnumDevStandard1Xlarge InstanceTypeEnum = "dev.standard1.xlarge"
)

func (e InstanceTypeEnum) ToPointer() *InstanceTypeEnum {
	return &e
}

func (e *InstanceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dev.standard1.small":
		fallthrough
	case "dev.standard1.medium":
		fallthrough
	case "dev.standard1.large":
		fallthrough
	case "dev.standard1.xlarge":
		*e = InstanceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceTypeEnum: %v", v)
	}
}
