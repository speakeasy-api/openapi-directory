"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AutoscalingSettingsAlgorithmEnum(str, Enum):
    r"""The algorithm to use for autoscaling."""
    AUTOSCALING_ALGORITHM_UNKNOWN = 'AUTOSCALING_ALGORITHM_UNKNOWN'
    AUTOSCALING_ALGORITHM_NONE = 'AUTOSCALING_ALGORITHM_NONE'
    AUTOSCALING_ALGORITHM_BASIC = 'AUTOSCALING_ALGORITHM_BASIC'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoscalingSettings:
    r"""Settings for WorkerPool autoscaling."""
    
    algorithm: Optional[AutoscalingSettingsAlgorithmEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('algorithm'), 'exclude': lambda f: f is None }})
    r"""The algorithm to use for autoscaling."""  
    max_num_workers: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxNumWorkers'), 'exclude': lambda f: f is None }})
    r"""The maximum number of workers to cap scaling at."""  
    