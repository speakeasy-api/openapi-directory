/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ImportTableDescription -  Represents the properties of the table being imported into. 
 */
public class ImportTableDescription {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClientToken")
    public String clientToken;
    public ImportTableDescription withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CloudWatchLogGroupArn")
    public String cloudWatchLogGroupArn;
    public ImportTableDescription withCloudWatchLogGroupArn(String cloudWatchLogGroupArn) {
        this.cloudWatchLogGroupArn = cloudWatchLogGroupArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndTime")
    public OffsetDateTime endTime;
    public ImportTableDescription withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ErrorCount")
    public Long errorCount;
    public ImportTableDescription withErrorCount(Long errorCount) {
        this.errorCount = errorCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureCode")
    public String failureCode;
    public ImportTableDescription withFailureCode(String failureCode) {
        this.failureCode = failureCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureMessage")
    public String failureMessage;
    public ImportTableDescription withFailureMessage(String failureMessage) {
        this.failureMessage = failureMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImportArn")
    public String importArn;
    public ImportTableDescription withImportArn(String importArn) {
        this.importArn = importArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImportStatus")
    public ImportStatusEnum importStatus;
    public ImportTableDescription withImportStatus(ImportStatusEnum importStatus) {
        this.importStatus = importStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImportedItemCount")
    public Long importedItemCount;
    public ImportTableDescription withImportedItemCount(Long importedItemCount) {
        this.importedItemCount = importedItemCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputCompressionType")
    public InputCompressionTypeEnum inputCompressionType;
    public ImportTableDescription withInputCompressionType(InputCompressionTypeEnum inputCompressionType) {
        this.inputCompressionType = inputCompressionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputFormat")
    public InputFormatEnum inputFormat;
    public ImportTableDescription withInputFormat(InputFormatEnum inputFormat) {
        this.inputFormat = inputFormat;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputFormatOptions")
    public InputFormatOptions inputFormatOptions;
    public ImportTableDescription withInputFormatOptions(InputFormatOptions inputFormatOptions) {
        this.inputFormatOptions = inputFormatOptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProcessedItemCount")
    public Long processedItemCount;
    public ImportTableDescription withProcessedItemCount(Long processedItemCount) {
        this.processedItemCount = processedItemCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProcessedSizeBytes")
    public Long processedSizeBytes;
    public ImportTableDescription withProcessedSizeBytes(Long processedSizeBytes) {
        this.processedSizeBytes = processedSizeBytes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3BucketSource")
    public S3BucketSource s3BucketSource;
    public ImportTableDescription withS3BucketSource(S3BucketSource s3BucketSource) {
        this.s3BucketSource = s3BucketSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;
    public ImportTableDescription withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TableArn")
    public String tableArn;
    public ImportTableDescription withTableArn(String tableArn) {
        this.tableArn = tableArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TableCreationParameters")
    public TableCreationParameters tableCreationParameters;
    public ImportTableDescription withTableCreationParameters(TableCreationParameters tableCreationParameters) {
        this.tableCreationParameters = tableCreationParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TableId")
    public String tableId;
    public ImportTableDescription withTableId(String tableId) {
        this.tableId = tableId;
        return this;
    }
    
}
