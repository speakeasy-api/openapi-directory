/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DealItem - The detailed data returned for the deal item.
 */
public class DealItem {
    /**
     * The additional images for the deal item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalImages")
    public Image[] additionalImages;

    public DealItem withAdditionalImages(Image[] additionalImages) {
        this.additionalImages = additionalImages;
        return this;
    }
    
    /**
     * The IDs of the ancestors for the primary category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryAncestorIds")
    public String[] categoryAncestorIds;

    public DealItem withCategoryAncestorIds(String[] categoryAncestorIds) {
        this.categoryAncestorIds = categoryAncestorIds;
        return this;
    }
    
    /**
     * The ID of the leaf category for the deal item. A leaf category is the lowest level in a category and has no children.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryId")
    public String categoryId;

    public DealItem withCategoryId(String categoryId) {
        this.categoryId = categoryId;
        return this;
    }
    
    /**
     * A boolean value specifying whether the listing has commission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commissionable")
    public Boolean commissionable;

    public DealItem withCommissionable(Boolean commissionable) {
        this.commissionable = commissionable;
        return this;
    }
    
    /**
     * The deal associated with the item with affiliate attribution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dealAffiliateWebUrl")
    public String dealAffiliateWebUrl;

    public DealItem withDealAffiliateWebUrl(String dealAffiliateWebUrl) {
        this.dealAffiliateWebUrl = dealAffiliateWebUrl;
        return this;
    }
    
    /**
     * The date after which the deal ends.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dealEndDate")
    public String dealEndDate;

    public DealItem withDealEndDate(String dealEndDate) {
        this.dealEndDate = dealEndDate;
        return this;
    }
    
    /**
     * The date on which the deal starts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dealStartDate")
    public String dealStartDate;

    public DealItem withDealStartDate(String dealStartDate) {
        this.dealStartDate = dealStartDate;
        return this;
    }
    
    /**
     * The web URL for the deal associated with the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dealWebUrl")
    public String dealWebUrl;

    public DealItem withDealWebUrl(String dealWebUrl) {
        this.dealWebUrl = dealWebUrl;
        return this;
    }
    
    /**
     * A string value specifying the Energy Efficiency class.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("energyEfficiencyClass")
    public String energyEfficiencyClass;

    public DealItem withEnergyEfficiencyClass(String energyEfficiencyClass) {
        this.energyEfficiencyClass = energyEfficiencyClass;
        return this;
    }
    
    /**
     * The type that defines the details of an image, such as size and URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public Image image;

    public DealItem withImage(Image image) {
        this.image = image;
        return this;
    }
    
    /**
     * The item web URL with affiliate attribution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemAffiliateWebUrl")
    public String itemAffiliateWebUrl;

    public DealItem withItemAffiliateWebUrl(String itemAffiliateWebUrl) {
        this.itemAffiliateWebUrl = itemAffiliateWebUrl;
        return this;
    }
    
    /**
     * The unique identifier for the deal item group. This is the parent item ID for the seller-defined variations. Note: This field is returned for multiple-SKU items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemGroupId")
    public String itemGroupId;

    public DealItem withItemGroupId(String itemGroupId) {
        this.itemGroupId = itemGroupId;
        return this;
    }
    
    /**
     * An enumeration value that indicates the type of item group. An item group contains items that have various aspect differences, such as color, size, or storage capacity. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/deal/types/api:ItemGroupTypeEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemGroupType")
    public String itemGroupType;

    public DealItem withItemGroupType(String itemGroupType) {
        this.itemGroupType = itemGroupType;
        return this;
    }
    
    /**
     * The unique identifier for the deal item. Note: This field is only returned for single-SKU items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemId")
    public String itemId;

    public DealItem withItemId(String itemId) {
        this.itemId = itemId;
        return this;
    }
    
    /**
     * The web URL for the deal item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemWebUrl")
    public String itemWebUrl;

    public DealItem withItemWebUrl(String itemWebUrl) {
        this.itemWebUrl = itemWebUrl;
        return this;
    }
    
    /**
     * The legacy item ID associated with the deal item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legacyItemId")
    public String legacyItemId;

    public DealItem withLegacyItemId(String legacyItemId) {
        this.legacyItemId = legacyItemId;
        return this;
    }
    
    /**
     * A type that describes the seller discount.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("marketingPrice")
    public MarketingPrice marketingPrice;

    public DealItem withMarketingPrice(MarketingPrice marketingPrice) {
        this.marketingPrice = marketingPrice;
        return this;
    }
    
    /**
     * The currency and value of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Amount price;

    public DealItem withPrice(Amount price) {
        this.price = price;
        return this;
    }
    
    /**
     * A list of programs applicable to the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("qualifiedPrograms")
    public String[] qualifiedPrograms;

    public DealItem withQualifiedPrograms(String[] qualifiedPrograms) {
        this.qualifiedPrograms = qualifiedPrograms;
        return this;
    }
    
    /**
     * The cost required to ship the deal item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingOptions")
    public ShippingOption[] shippingOptions;

    public DealItem withShippingOptions(ShippingOption[] shippingOptions) {
        this.shippingOptions = shippingOptions;
        return this;
    }
    
    /**
     * The title of the deal item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public DealItem withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * The currency and value of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitPrice")
    public Amount unitPrice;

    public DealItem withUnitPrice(Amount unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    /**
     * The designation used to specify the quantity of the deal item, such as size, weight, volume, and count. This helps buyers compare prices. For example, the following tells the buyer that the item is 7.99 per 100 grams. &amp;quot;unitPricingMeasure&amp;quot;: &amp;quot;100g&amp;quot;, &amp;quot;unitPrice&amp;quot;: { &amp;nbsp;&amp;nbsp;&amp;quot;value&amp;quot;: &amp;quot;7.99&amp;quot;, &amp;nbsp;&amp;nbsp;&amp;quot;currency&amp;quot;: &amp;quot;GBP&amp;quot;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitPricingMeasure")
    public String unitPricingMeasure;

    public DealItem withUnitPricingMeasure(String unitPricingMeasure) {
        this.unitPricingMeasure = unitPricingMeasure;
        return this;
    }
    
    public DealItem(){}
}
