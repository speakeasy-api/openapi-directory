// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetMaintenanceWindowXAmzTargetEnum
type GetMaintenanceWindowXAmzTargetEnum string

const (
	GetMaintenanceWindowXAmzTargetEnumAmazonSsmGetMaintenanceWindow GetMaintenanceWindowXAmzTargetEnum = "AmazonSSM.GetMaintenanceWindow"
)

func (e GetMaintenanceWindowXAmzTargetEnum) ToPointer() *GetMaintenanceWindowXAmzTargetEnum {
	return &e
}

func (e *GetMaintenanceWindowXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.GetMaintenanceWindow":
		*e = GetMaintenanceWindowXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMaintenanceWindowXAmzTargetEnum: %v", v)
	}
}

type GetMaintenanceWindowRequest struct {
	GetMaintenanceWindowRequest shared.GetMaintenanceWindowRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  GetMaintenanceWindowXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetMaintenanceWindowResponse struct {
	ContentType string
	// DoesNotExistException
	DoesNotExistException interface{}
	// Success
	GetMaintenanceWindowResult *shared.GetMaintenanceWindowResult
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
}
