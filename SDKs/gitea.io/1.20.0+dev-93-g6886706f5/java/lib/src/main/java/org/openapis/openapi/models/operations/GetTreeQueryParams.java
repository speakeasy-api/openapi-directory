/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetTreeQueryParams {
    /**
     * page number; the 'truncated' field in the response will be true if there are still more items after this page, false if the last page
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public GetTreeQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * number of items per page
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Long perPage;
    public GetTreeQueryParams withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * show all directories and files
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=recursive")
    public Boolean recursive;
    public GetTreeQueryParams withRecursive(Boolean recursive) {
        this.recursive = recursive;
        return this;
    }
    
}
