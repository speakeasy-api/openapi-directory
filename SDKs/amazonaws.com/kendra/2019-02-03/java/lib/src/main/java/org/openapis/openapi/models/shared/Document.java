/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Document - A document in an index.
 */
public class Document {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessControlConfigurationId")
    public String accessControlConfigurationId;

    public Document withAccessControlConfigurationId(String accessControlConfigurationId) {
        this.accessControlConfigurationId = accessControlConfigurationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessControlList")
    public Principal[] accessControlList;

    public Document withAccessControlList(Principal[] accessControlList) {
        this.accessControlList = accessControlList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Attributes")
    public DocumentAttribute[] attributes;

    public Document withAttributes(DocumentAttribute[] attributes) {
        this.attributes = attributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Blob")
    public String blob;

    public Document withBlob(String blob) {
        this.blob = blob;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ContentType")
    public ContentTypeEnum contentType;

    public Document withContentType(ContentTypeEnum contentType) {
        this.contentType = contentType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HierarchicalAccessControlList")
    public HierarchicalPrincipal[] hierarchicalAccessControlList;

    public Document withHierarchicalAccessControlList(HierarchicalPrincipal[] hierarchicalAccessControlList) {
        this.hierarchicalAccessControlList = hierarchicalAccessControlList;
        return this;
    }
    
    @JsonProperty("Id")
    public String id;

    public Document withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Information required to find a specific file in an Amazon S3 bucket.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3Path")
    public S3Path s3Path;

    public Document withS3Path(S3Path s3Path) {
        this.s3Path = s3Path;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Title")
    public String title;

    public Document withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public Document(@JsonProperty("Id") String id) {
        this.id = id;
  }
}
