"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import analyzeiddetections as shared_analyzeiddetections
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IdentityDocumentField:
    r"""Structure containing both the normalized type of the extracted information and the text associated with it. These are extracted as Type and Value respectively."""
    
    type: Optional[shared_analyzeiddetections.AnalyzeIDDetections] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})
    r"""Used to contain the information detected by an AnalyzeID operation."""  
    value_detection: Optional[shared_analyzeiddetections.AnalyzeIDDetections] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValueDetection'), 'exclude': lambda f: f is None }})
    r"""Used to contain the information detected by an AnalyzeID operation."""  
    