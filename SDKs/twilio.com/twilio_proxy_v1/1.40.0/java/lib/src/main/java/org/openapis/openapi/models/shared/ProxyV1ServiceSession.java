/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProxyV1ServiceSession - Created
 */
public class ProxyV1ServiceSession {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Session resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public ProxyV1ServiceSession withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The reason the Session ended.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("closed_reason")
    public String closedReason;
    public ProxyV1ServiceSession withClosedReason(String closedReason) {
        this.closedReason = closedReason;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;
    public ProxyV1ServiceSession withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date when the Session ended.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_ended")
    public OffsetDateTime dateEnded;
    public ProxyV1ServiceSession withDateEnded(OffsetDateTime dateEnded) {
        this.dateEnded = dateEnded;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date when the Session should expire. If this is value is present, it overrides the `ttl` value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_expiry")
    public OffsetDateTime dateExpiry;
    public ProxyV1ServiceSession withDateExpiry(OffsetDateTime dateExpiry) {
        this.dateExpiry = dateExpiry;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date when the Session last had an interaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_last_interaction")
    public OffsetDateTime dateLastInteraction;
    public ProxyV1ServiceSession withDateLastInteraction(OffsetDateTime dateLastInteraction) {
        this.dateLastInteraction = dateLastInteraction;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date when the Session started.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_started")
    public OffsetDateTime dateStarted;
    public ProxyV1ServiceSession withDateStarted(OffsetDateTime dateStarted) {
        this.dateStarted = dateStarted;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;
    public ProxyV1ServiceSession withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The URLs of resources related to the Session.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;
    public ProxyV1ServiceSession withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mode")
    public SessionEnumModeEnum mode;
    public ProxyV1ServiceSession withMode(SessionEnumModeEnum mode) {
        this.mode = mode;
        return this;
    }
    
    /**
     * The SID of the [Service](https://www.twilio.com/docs/proxy/api/service) the session is associated with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service_sid")
    public String serviceSid;
    public ProxyV1ServiceSession withServiceSid(String serviceSid) {
        this.serviceSid = serviceSid;
        return this;
    }
    
    /**
     * The unique string that we created to identify the Session resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;
    public ProxyV1ServiceSession withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public SessionEnumStatusEnum status;
    public ProxyV1ServiceSession withStatus(SessionEnumStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The time, in seconds, when the session will expire. The time is measured from the last Session create or the Session's last Interaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ttl")
    public Long ttl;
    public ProxyV1ServiceSession withTtl(Long ttl) {
        this.ttl = ttl;
        return this;
    }
    
    /**
     * An application-defined string that uniquely identifies the resource. This value must be 191 characters or fewer in length and be unique. Supports UTF-8 characters. **This value should not have PII.**
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unique_name")
    public String uniqueName;
    public ProxyV1ServiceSession withUniqueName(String uniqueName) {
        this.uniqueName = uniqueName;
        return this;
    }
    
    /**
     * The absolute URL of the Session resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public ProxyV1ServiceSession withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
