/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Amount } from "./amount";
import { Expose, Type } from "class-transformer";

/**
 * This type is used by the response payload of the <strong>getSellerFundsSummary</strong> method. All of the funds returned in  <strong>getSellerFundsSummary</strong> are funds that have not yet been paid to the seller through a seller payout. If there are no funds that are pending, on hold, or being processed for the seller's account, no response payload is returned, and an http status code of <code>204 - No Content</code> is returned instead.
 */
export class SellerFundsSummaryResponse extends SpeakeasyBase {
  /**
   * This type is used to express the dollar value and currency used for any transaction retrieved with the <strong>Finances API</strong>, including an order total, a seller payout, a buyer refund, or a seller credit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableFunds" })
  @Type(() => Amount)
  availableFunds?: Amount;

  /**
   * This type is used to express the dollar value and currency used for any transaction retrieved with the <strong>Finances API</strong>, including an order total, a seller payout, a buyer refund, or a seller credit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fundsOnHold" })
  @Type(() => Amount)
  fundsOnHold?: Amount;

  /**
   * This type is used to express the dollar value and currency used for any transaction retrieved with the <strong>Finances API</strong>, including an order total, a seller payout, a buyer refund, or a seller credit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processingFunds" })
  @Type(() => Amount)
  processingFunds?: Amount;

  /**
   * This type is used to express the dollar value and currency used for any transaction retrieved with the <strong>Finances API</strong>, including an order total, a seller payout, a buyer refund, or a seller credit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalFunds" })
  @Type(() => Amount)
  totalFunds?: Amount;
}
