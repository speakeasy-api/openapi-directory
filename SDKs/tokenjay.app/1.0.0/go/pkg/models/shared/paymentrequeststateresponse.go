// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PaymentRequestStateResponsePaymentRequestStateEnum string

const (
	PaymentRequestStateResponsePaymentRequestStateEnumCreated  PaymentRequestStateResponsePaymentRequestStateEnum = "CREATED"
	PaymentRequestStateResponsePaymentRequestStateEnumWaiting  PaymentRequestStateResponsePaymentRequestStateEnum = "WAITING"
	PaymentRequestStateResponsePaymentRequestStateEnumExecuted PaymentRequestStateResponsePaymentRequestStateEnum = "EXECUTED"
	PaymentRequestStateResponsePaymentRequestStateEnumInvalid  PaymentRequestStateResponsePaymentRequestStateEnum = "INVALID"
)

func (e PaymentRequestStateResponsePaymentRequestStateEnum) ToPointer() *PaymentRequestStateResponsePaymentRequestStateEnum {
	return &e
}

func (e *PaymentRequestStateResponsePaymentRequestStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATED":
		fallthrough
	case "WAITING":
		fallthrough
	case "EXECUTED":
		fallthrough
	case "INVALID":
		*e = PaymentRequestStateResponsePaymentRequestStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentRequestStateResponsePaymentRequestStateEnum: %v", v)
	}
}

// PaymentRequestStateResponse - OK
type PaymentRequestStateResponse struct {
	PaymentRequestState PaymentRequestStateResponsePaymentRequestStateEnum
	RequestID           string
	TxID                *string
}
