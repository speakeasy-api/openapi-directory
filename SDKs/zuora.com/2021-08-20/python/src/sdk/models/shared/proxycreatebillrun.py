"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProxyCreateBillRun:
    
    invoice_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvoiceDate'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""Invoice date for this bill run.
    
    **Character limit:** 29
    """  
    target_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetDate'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""Target date for this bill run. See [Create Bill Run](https://knowledgecenter.zuora.com/CB_Billing/J_Billing_Operations/G_Bill_Runs/Creating_Bill_Runs) for more information.
    
    **Character limit:** 29
    """  
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountId'), 'exclude': lambda f: f is None }})
    r"""ID of the account used for single account bill run.
    
    This field is only required if you create ad hoc bill run for a single customer account.
    
    **Character limit:** 32
    """  
    auto_email: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoEmail'), 'exclude': lambda f: f is None }})
    r"""Determines whether to auto send email or not by this bill run once the bill run completes.
    
    **Note:** You must enable the [Support Bill Run Auto-Post Billing](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Billing_Rules) rule to pass this field.
    """  
    auto_post: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoPost'), 'exclude': lambda f: f is None }})
    r"""Determines whether to auto post bill run or not once the bill run completes.
    
    **Note:** You must enable the [Support Bill Run Auto-Post Billing](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Billing_Rules) rule to pass this field.
    """  
    auto_renewal: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoRenewal'), 'exclude': lambda f: f is None }})
    r"""Determines whether to auto renew subscription or not by this bill run once the bill run completes."""  
    batch: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Batch'), 'exclude': lambda f: f is None }})
    r"""Batch of accounts for this bill run.
    
    When creating ad hoc bill run for multiple customer accounts, this field is only required if the `BillCycleDay`
     field is not specified.
    
    **Character limit:** 20
    
    **Values:** AllBatches or Batchn where n is a number between 1 and 50.
    """  
    bill_cycle_day: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BillCycleDay'), 'exclude': lambda f: f is None }})
    r"""The day of the bill cycle.
    
    When creating ad hoc bill run for multiple customer accounts, this field is only required if the `Batch` field is not specified.
    
    **Character limit:** 32
    
    **Values:** `AllBillCycleDays` or 01 - 31.
    """  
    charge_type_to_exclude: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChargeTypeToExclude'), 'exclude': lambda f: f is None }})
    r"""Charge type or types to be excluded, separated with comma.
    
    **Possible Values:** `OneTime`, `Recurring`, `Usage`, or a combination of these values. 
    
    **Character limit:** 50
    """  
    no_email_for_zero_amount_invoice: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NoEmailForZeroAmountInvoice'), 'exclude': lambda f: f is None }})
    r"""Determines whether to suppress email for invoices with zero total or not for this bill run once the bill run completes. (Do not email invoices with 0 Invoice Total)."""  
    