/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ServiceWebhookConfigurationEnumMethodEnum } from "./servicewebhookconfigurationenummethodenum";
import { Expose } from "class-transformer";

/**
 * OK
 */
export class ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration extends SpeakeasyBase {
  /**
   * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chat_service_sid" })
  chatServiceSid?: string;

  /**
   * The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filters" })
  filters?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: ServiceWebhookConfigurationEnumMethodEnum;

  /**
   * The absolute url the post-event webhook request should be sent to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "post_webhook_url" })
  postWebhookUrl?: string;

  /**
   * The absolute url the pre-event webhook request should be sent to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pre_webhook_url" })
  preWebhookUrl?: string;

  /**
   * An absolute API resource URL for this webhook.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
