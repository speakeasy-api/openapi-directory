"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import domain as shared_domain
from typing import Optional


@dataclasses.dataclass
class GetDomainsRequest:
    
    skip: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'skip', 'style': 'form', 'explode': True }})
    r"""The number of items to skip in the resultset."""  
    take: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'take', 'style': 'form', 'explode': True }})
    r"""The number of items to return in the resultset. The returned count can be equal or less than this number."""  
    

@dataclasses.dataclass
class GetDomainsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    domains: Optional[list[shared_domain.Domain]] = dataclasses.field(default=None)
    r"""Success"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    