/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetMapGlyphsPathParams {
    /**
     * &lt;p&gt;A comma-separated list of fonts to load glyphs from in order of preference. For example, &lt;code&gt;Noto Sans Regular, Arial Unicode&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Valid fonts stacks for &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/esri.html"&gt;Esri&lt;/a&gt; styles: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;VectorEsriDarkGrayCanvas \u2013 &lt;code&gt;Ubuntu Medium Italic&lt;/code&gt; | &lt;code&gt;Ubuntu Medium&lt;/code&gt; | &lt;code&gt;Ubuntu Italic&lt;/code&gt; | &lt;code&gt;Ubuntu Regular&lt;/code&gt; | &lt;code&gt;Ubuntu Bold&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;VectorEsriLightGrayCanvas \u2013 &lt;code&gt;Ubuntu Italic&lt;/code&gt; | &lt;code&gt;Ubuntu Regular&lt;/code&gt; | &lt;code&gt;Ubuntu Light&lt;/code&gt; | &lt;code&gt;Ubuntu Bold&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;VectorEsriTopographic \u2013 &lt;code&gt;Noto Sans Italic&lt;/code&gt; | &lt;code&gt;Noto Sans Regular&lt;/code&gt; | &lt;code&gt;Noto Sans Bold&lt;/code&gt; | &lt;code&gt;Noto Serif Regular&lt;/code&gt; | &lt;code&gt;Roboto Condensed Light Italic&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;VectorEsriStreets \u2013 &lt;code&gt;Arial Regular&lt;/code&gt; | &lt;code&gt;Arial Italic&lt;/code&gt; | &lt;code&gt;Arial Bold&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;VectorEsriNavigation \u2013 &lt;code&gt;Arial Regular&lt;/code&gt; | &lt;code&gt;Arial Italic&lt;/code&gt; | &lt;code&gt;Arial Bold&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Valid font stacks for &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/HERE.html"&gt;HERE Technologies&lt;/a&gt; styles:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;VectorHereContrast \u2013 &lt;code&gt;Fira GO Regular&lt;/code&gt; | &lt;code&gt;Fira GO Bold&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;VectorHereExplore, VectorHereExploreTruck, HybridHereExploreSatellite \u2013 &lt;code&gt;Fira GO Italic&lt;/code&gt; | &lt;code&gt;Fira GO Map&lt;/code&gt; | &lt;code&gt;Fira GO Map Bold&lt;/code&gt; | &lt;code&gt;Noto Sans CJK JP Bold&lt;/code&gt; | &lt;code&gt;Noto Sans CJK JP Light&lt;/code&gt; | &lt;code&gt;Noto Sans CJK JP Regular&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Valid font stacks for &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/grab.html"&gt;GrabMaps&lt;/a&gt; styles:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;VectorGrabStandardLight, VectorGrabStandardDark \u2013 &lt;code&gt;Noto Sans Regular&lt;/code&gt; | &lt;code&gt;Noto Sans Medium&lt;/code&gt; | &lt;code&gt;Noto Sans Bold&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Valid font stacks for &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/open-data.html"&gt;Open Data&lt;/a&gt; styles:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;VectorOpenDataStandardLight, VectorOpenDataStandardDark, VectorOpenDataVisualizationLight, VectorOpenDataVisualizationDark \u2013 &lt;code&gt;Amazon Ember Regular,Noto Sans Regular&lt;/code&gt; | &lt;code&gt;Amazon Ember Bold,Noto Sans Bold&lt;/code&gt; | &lt;code&gt;Amazon Ember Medium,Noto Sans Medium&lt;/code&gt; | &lt;code&gt;Amazon Ember Regular Italic,Noto Sans Italic&lt;/code&gt; | &lt;code&gt;Amazon Ember Condensed RC Regular,Noto Sans Regular&lt;/code&gt; | &lt;code&gt;Amazon Ember Condensed RC Bold,Noto Sans Bold&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;The fonts used by the Open Data map styles are combined fonts that use &lt;code&gt;Amazon Ember&lt;/code&gt; for most glyphs but &lt;code&gt;Noto Sans&lt;/code&gt; for glyphs unsupported by &lt;code&gt;Amazon Ember&lt;/code&gt;.&lt;/p&gt; &lt;/note&gt;
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=FontStack")
    public String fontStack;
    public GetMapGlyphsPathParams withFontStack(String fontStack) {
        this.fontStack = fontStack;
        return this;
    }
    
    /**
     * A Unicode range of characters to download glyphs for. Each response will contain 256 characters. For example, 0\u2013255 includes all characters from range &lt;code&gt;U+0000&lt;/code&gt; to &lt;code&gt;00FF&lt;/code&gt;. Must be aligned to multiples of 256.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=FontUnicodeRange")
    public String fontUnicodeRange;
    public GetMapGlyphsPathParams withFontUnicodeRange(String fontUnicodeRange) {
        this.fontUnicodeRange = fontUnicodeRange;
        return this;
    }
    
    /**
     * The map resource associated with the glyph \ufb01le.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=MapName")
    public String mapName;
    public GetMapGlyphsPathParams withMapName(String mapName) {
        this.mapName = mapName;
        return this;
    }
    
}
