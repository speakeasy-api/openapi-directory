"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DatabaseTypeEngineEnum(str, Enum):
    r"""The database engine."""
    DATABASE_ENGINE_UNSPECIFIED = 'DATABASE_ENGINE_UNSPECIFIED'
    MYSQL = 'MYSQL'

class DatabaseTypeProviderEnum(str, Enum):
    r"""The database provider."""
    DATABASE_PROVIDER_UNSPECIFIED = 'DATABASE_PROVIDER_UNSPECIFIED'
    CLOUDSQL = 'CLOUDSQL'
    RDS = 'RDS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatabaseType:
    r"""A message defining the database engine and provider."""
    
    engine: Optional[DatabaseTypeEngineEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engine'), 'exclude': lambda f: f is None }})
    r"""The database engine."""  
    provider: Optional[DatabaseTypeProviderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provider'), 'exclude': lambda f: f is None }})
    r"""The database provider."""  
    