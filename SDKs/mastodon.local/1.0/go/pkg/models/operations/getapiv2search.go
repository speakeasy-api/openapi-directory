// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAPIV2SearchSecurity struct {
	BearerAuth string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

// GetAPIV2SearchTypeEnum - Enum(accounts, hashtags, statuses)
type GetAPIV2SearchTypeEnum string

const (
	GetAPIV2SearchTypeEnumAccounts GetAPIV2SearchTypeEnum = "accounts"
	GetAPIV2SearchTypeEnumHashtags GetAPIV2SearchTypeEnum = "hashtags"
	GetAPIV2SearchTypeEnumStatuses GetAPIV2SearchTypeEnum = "statuses"
)

func (e GetAPIV2SearchTypeEnum) ToPointer() *GetAPIV2SearchTypeEnum {
	return &e
}

func (e *GetAPIV2SearchTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "accounts":
		fallthrough
	case "hashtags":
		fallthrough
	case "statuses":
		*e = GetAPIV2SearchTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAPIV2SearchTypeEnum: %v", v)
	}
}

type GetAPIV2SearchRequest struct {
	// If provided, statuses returned will be authored only by this account
	AccountID *string `queryParam:"style=form,explode=true,name=account_id"`
	// Filter out unreviewed tags? Defaults to false. Use true when trying to find trending tags.
	ExcludeUnreviewed *bool `queryParam:"style=form,explode=true,name=exclude_unreviewed"`
	// Only who the user is following. Defaults to false.
	Following *bool `queryParam:"style=form,explode=true,name=following"`
	// Maximum number of results. Defaults to 40.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Return results older than this id
	MaxID *string `queryParam:"style=form,explode=true,name=max_id"`
	// Return results immediately newer than this id
	MinID *string `queryParam:"style=form,explode=true,name=min_id"`
	// Offset in search results. Used for pagination. Defaults to 0.
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// What to search for
	Q string `queryParam:"style=form,explode=true,name=q"`
	// Attempt WebFinger lookup.
	Resolve *string `queryParam:"style=form,explode=true,name=resolve"`
	// Enum(accounts, hashtags, statuses)
	Type *GetAPIV2SearchTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

// GetAPIV2Search200ApplicationJSON - Result
type GetAPIV2Search200ApplicationJSON struct {
	Accounts []shared.Account `json:"accounts,omitempty"`
	Hashtags []shared.Status  `json:"hashtags,omitempty"`
	Statuses []shared.Tag     `json:"statuses,omitempty"`
}

type GetAPIV2SearchResponse struct {
	ContentType string
	// Invalid or missing Authorization header
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
	// Result
	GetAPIV2Search200ApplicationJSONObject *GetAPIV2Search200ApplicationJSON
}
