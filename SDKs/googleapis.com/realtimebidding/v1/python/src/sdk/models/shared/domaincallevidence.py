"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import domaincalls as shared_domaincalls
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DomainCallEvidence:
    r"""Number of HTTP calls made by a creative, broken down by domain."""
    
    top_http_call_domains: Optional[list[shared_domaincalls.DomainCalls]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('topHttpCallDomains'), 'exclude': lambda f: f is None }})
    r"""Breakdown of the most frequent domains called through HTTP by the creative."""  
    total_http_call_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalHttpCallCount'), 'exclude': lambda f: f is None }})
    r"""The total number of HTTP calls made by the creative, including but not limited to the number of calls in the top_http_call_domains."""  
    