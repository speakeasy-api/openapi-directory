/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CallTrackingConfig - Call tracking configuration allows you track incoming calls, analyze, respond to customers using sms or voice replies. For more information see [call tracking page](https://www.callfire.com/products/call-tracking)
 */
public class CallTrackingConfig {
    /**
     * An id of sound file, played if caller can not be connected to transfer number for any reason
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failedTransferSoundId")
    public Long failedTransferSoundId;

    public CallTrackingConfig withFailedTransferSoundId(Long failedTransferSoundId) {
        this.failedTransferSoundId = failedTransferSoundId;
        return this;
    }
    
    /**
     * Google Analytics for Call Tracking
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("googleAnalytics")
    public GoogleAnalytics googleAnalytics;

    public CallTrackingConfig withGoogleAnalytics(GoogleAnalytics googleAnalytics) {
        this.googleAnalytics = googleAnalytics;
        return this;
    }
    
    /**
     * An id of sound file, played if call is answered
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("introSoundId")
    public Long introSoundId;

    public CallTrackingConfig withIntroSoundId(Long introSoundId) {
        this.introSoundId = introSoundId;
        return this;
    }
    
    /**
     * Records all inbound calls
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recorded")
    public Boolean recorded;

    public CallTrackingConfig withRecorded(Boolean recorded) {
        this.recorded = recorded;
        return this;
    }
    
    /**
     * Screens the incoming calls
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("screen")
    public Boolean screen;

    public CallTrackingConfig withScreen(Boolean screen) {
        this.screen = screen;
        return this;
    }
    
    /**
     * List of phone numbers in E.164 format (11-digit) are used for transfer. Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferNumbers")
    public String[] transferNumbers;

    public CallTrackingConfig withTransferNumbers(String[] transferNumbers) {
        this.transferNumbers = transferNumbers;
        return this;
    }
    
    /**
     * Enables voicemail if call is not transferred
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voicemail")
    public Boolean voicemail;

    public CallTrackingConfig withVoicemail(Boolean voicemail) {
        this.voicemail = voicemail;
        return this;
    }
    
    /**
     * An id of sound file, played if voicemail is enabled and a call isn't transferred
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voicemailSoundId")
    public Long voicemailSoundId;

    public CallTrackingConfig withVoicemailSoundId(Long voicemailSoundId) {
        this.voicemailSoundId = voicemailSoundId;
        return this;
    }
    
    /**
     * Weekly schedule allows to schedule operations by day of week and time of the day
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weeklySchedule")
    public WeeklySchedule weeklySchedule;

    public CallTrackingConfig withWeeklySchedule(WeeklySchedule weeklySchedule) {
        this.weeklySchedule = weeklySchedule;
        return this;
    }
    
    /**
     * An id of sound file, played if call is screened
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("whisperSoundId")
    public Long whisperSoundId;

    public CallTrackingConfig withWhisperSoundId(Long whisperSoundId) {
        this.whisperSoundId = whisperSoundId;
        return this;
    }
    
    public CallTrackingConfig(){}
}
