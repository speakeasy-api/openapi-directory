"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PointStyleShapeEnum(str, Enum):
    r"""The point shape. If empty or unspecified, a default shape is used."""
    POINT_SHAPE_UNSPECIFIED = 'POINT_SHAPE_UNSPECIFIED'
    CIRCLE = 'CIRCLE'
    DIAMOND = 'DIAMOND'
    HEXAGON = 'HEXAGON'
    PENTAGON = 'PENTAGON'
    SQUARE = 'SQUARE'
    STAR = 'STAR'
    TRIANGLE = 'TRIANGLE'
    X_MARK = 'X_MARK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PointStyle:
    r"""The style of a point on the chart."""
    
    shape: Optional[PointStyleShapeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shape'), 'exclude': lambda f: f is None }})
    r"""The point shape. If empty or unspecified, a default shape is used."""  
    size: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size'), 'exclude': lambda f: f is None }})
    r"""The point size. If empty, a default size is used."""  
    