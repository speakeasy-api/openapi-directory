<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PivotValue - The definition of how a value in a pivot table should be calculated.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PivotValue
{
    /**
     * If specified, indicates that pivot values should be displayed as the result of a calculation with another pivot value. For example, if calculated_display_type is specified as PERCENT_OF_GRAND_TOTAL, all the pivot values are displayed as the percentage of the grand total. In the Sheets editor, this is referred to as "Show As" in the value section of a pivot table.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PivotValueCalculatedDisplayTypeEnum $calculatedDisplayType
     */
	#[\JMS\Serializer\Annotation\SerializedName('calculatedDisplayType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PivotValueCalculatedDisplayTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PivotValueCalculatedDisplayTypeEnum $calculatedDisplayType = null;
    
    /**
     * An unique identifier that references a data source column.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DataSourceColumnReference $dataSourceColumnReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataSourceColumnReference')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DataSourceColumnReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DataSourceColumnReference $dataSourceColumnReference = null;
    
    /**
     * A custom formula to calculate the value. The formula must start with an `=` character.
     * 
     * @var ?string $formula
     */
	#[\JMS\Serializer\Annotation\SerializedName('formula')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formula = null;
    
    /**
     * A name to use for the value.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The column offset of the source range that this value reads from. For example, if the source was `C10:E15`, a `sourceColumnOffset` of `0` means this value refers to column `C`, whereas the offset `1` would refer to column `D`.
     * 
     * @var ?int $sourceColumnOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceColumnOffset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sourceColumnOffset = null;
    
    /**
     * A function to summarize the value. If formula is set, the only supported values are SUM and CUSTOM. If sourceColumnOffset is set, then `CUSTOM` is not supported.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PivotValueSummarizeFunctionEnum $summarizeFunction
     */
	#[\JMS\Serializer\Annotation\SerializedName('summarizeFunction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PivotValueSummarizeFunctionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PivotValueSummarizeFunctionEnum $summarizeFunction = null;
    
	public function __construct()
	{
		$this->calculatedDisplayType = null;
		$this->dataSourceColumnReference = null;
		$this->formula = null;
		$this->name = null;
		$this->sourceColumnOffset = null;
		$this->summarizeFunction = null;
	}
}
