/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * StartQueryPlanningRequestBodyQueryPlanningContext - A structure containing information about the query plan.
 */
public class StartQueryPlanningRequestBodyQueryPlanningContext {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CatalogId")
    public String catalogId;
    public StartQueryPlanningRequestBodyQueryPlanningContext withCatalogId(String catalogId) {
        this.catalogId = catalogId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DatabaseName")
    public String databaseName;
    public StartQueryPlanningRequestBodyQueryPlanningContext withDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("QueryAsOfTime")
    public OffsetDateTime queryAsOfTime;
    public StartQueryPlanningRequestBodyQueryPlanningContext withQueryAsOfTime(OffsetDateTime queryAsOfTime) {
        this.queryAsOfTime = queryAsOfTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QueryParameters")
    public java.util.Map<String, String> queryParameters;
    public StartQueryPlanningRequestBodyQueryPlanningContext withQueryParameters(java.util.Map<String, String> queryParameters) {
        this.queryParameters = queryParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TransactionId")
    public String transactionId;
    public StartQueryPlanningRequestBodyQueryPlanningContext withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
}
