"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ebsblockdevice as shared_ebsblockdevice
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BlockDeviceMapping:
    r"""Describes a block device mapping. This data type maps directly to the Amazon EC2 <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BlockDeviceMapping.html\\">BlockDeviceMapping</a> data type."""
    
    device_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeviceName'), 'exclude': lambda f: f is None }})  
    ebs: Optional[shared_ebsblockdevice.EbsBlockDevice] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Ebs'), 'exclude': lambda f: f is None }})  
    no_device: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NoDevice'), 'exclude': lambda f: f is None }})  
    virtual_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VirtualName'), 'exclude': lambda f: f is None }})  
    