/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * Transaction - A transaction for an app initiated by a user
 */
public class Transaction {
    /**
     * The total amount paid in cents
     */
    
    public Long amount;
    public Transaction withAmount(Long amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The id of the app involved with this transaction
     */
    
    public String appId;
    public Transaction withAppId(String appId) {
        this.appId = appId;
        return this;
    }
    
    /**
     * A custom JSON object that you can create and attach to this record
     */
    
    public java.util.Map<String, Object> customData;
    public Transaction withCustomData(java.util.Map<String, Object> customData) {
        this.customData = customData;
        return this;
    }
    
    /**
     * The date (in millis) of when this transaction occurred
     */
    
    public Long date;
    public Transaction withDate(Long date) {
        this.date = date;
        return this;
    }
    
    /**
     * The total amount paid to the developer in cents
     */
    
    public Long developerAmount;
    public Transaction withDeveloperAmount(Long developerAmount) {
        this.developerAmount = developerAmount;
        return this;
    }
    
    /**
     * The id of the developer involved with this transaction
     */
    
    public String developerId;
    public Transaction withDeveloperId(String developerId) {
        this.developerId = developerId;
        return this;
    }
    
    /**
     * The total amount paid to payment processing fees in cents
     */
    
    public Long feeAmount;
    public Transaction withFeeAmount(Long feeAmount) {
        this.feeAmount = feeAmount;
        return this;
    }
    
    /**
     * The total amount paid to the marketplace owner in cents
     */
    
    public Long marketplaceAmount;
    public Transaction withMarketplaceAmount(Long marketplaceAmount) {
        this.marketplaceAmount = marketplaceAmount;
        return this;
    }
    
    /**
     * The id for the ownership associated with this transaction
     */
    
    public String ownershipId;
    public Transaction withOwnershipId(String ownershipId) {
        this.ownershipId = ownershipId;
        return this;
    }
    
    /**
     * The id for this transaction
     */
    
    public String transactionId;
    public Transaction withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    /**
     * The type for this transaction
     */
    
    public TransactionTypeEnum type;
    public Transaction withType(TransactionTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The id of the user making the transaction
     */
    
    public String userId;
    public Transaction withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
}
