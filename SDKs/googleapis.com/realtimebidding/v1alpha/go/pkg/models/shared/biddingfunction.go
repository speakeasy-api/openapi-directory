// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BiddingFunctionStateEnum - Output only. The state of the bidding function.
type BiddingFunctionStateEnum string

const (
	BiddingFunctionStateEnumStateUnspecified BiddingFunctionStateEnum = "STATE_UNSPECIFIED"
	BiddingFunctionStateEnumActive           BiddingFunctionStateEnum = "ACTIVE"
	BiddingFunctionStateEnumArchived         BiddingFunctionStateEnum = "ARCHIVED"
)

func (e BiddingFunctionStateEnum) ToPointer() *BiddingFunctionStateEnum {
	return &e
}

func (e *BiddingFunctionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "ARCHIVED":
		*e = BiddingFunctionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BiddingFunctionStateEnum: %v", v)
	}
}

// BiddingFunctionTypeEnum - The type of the bidding function to be created.
type BiddingFunctionTypeEnum string

const (
	BiddingFunctionTypeEnumFunctionTypeUnspecified             BiddingFunctionTypeEnum = "FUNCTION_TYPE_UNSPECIFIED"
	BiddingFunctionTypeEnumTurtledoveSimulationBiddingFunction BiddingFunctionTypeEnum = "TURTLEDOVE_SIMULATION_BIDDING_FUNCTION"
	BiddingFunctionTypeEnumFledgeBiddingFunction               BiddingFunctionTypeEnum = "FLEDGE_BIDDING_FUNCTION"
)

func (e BiddingFunctionTypeEnum) ToPointer() *BiddingFunctionTypeEnum {
	return &e
}

func (e *BiddingFunctionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FUNCTION_TYPE_UNSPECIFIED":
		fallthrough
	case "TURTLEDOVE_SIMULATION_BIDDING_FUNCTION":
		fallthrough
	case "FLEDGE_BIDDING_FUNCTION":
		*e = BiddingFunctionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BiddingFunctionTypeEnum: %v", v)
	}
}

// BiddingFunction - The bidding function to be executed as part of the TURTLEDOVE simulation experiment bidding flow.
type BiddingFunction struct {
	// The raw Javascript source code of the bidding function.
	BiddingFunction *string `json:"biddingFunction,omitempty"`
	// The name of the bidding function that must follow the pattern: `bidders/{bidder_account_id}/biddingFunctions/{bidding_function_name}`.
	Name *string `json:"name,omitempty"`
	// Output only. The state of the bidding function.
	State *BiddingFunctionStateEnum `json:"state,omitempty"`
	// The type of the bidding function to be created.
	Type *BiddingFunctionTypeEnum `json:"type,omitempty"`
}

// BiddingFunctionInput - The bidding function to be executed as part of the TURTLEDOVE simulation experiment bidding flow.
type BiddingFunctionInput struct {
	// The raw Javascript source code of the bidding function.
	BiddingFunction *string `json:"biddingFunction,omitempty"`
	// The name of the bidding function that must follow the pattern: `bidders/{bidder_account_id}/biddingFunctions/{bidding_function_name}`.
	Name *string `json:"name,omitempty"`
	// The type of the bidding function to be created.
	Type *BiddingFunctionTypeEnum `json:"type,omitempty"`
}
