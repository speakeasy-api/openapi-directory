/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TeamGame {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Assists")
    public Double assists;
    public TeamGame withAssists(Double assists) {
        this.assists = assists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BenchPenaltyMinutes")
    public Double benchPenaltyMinutes;
    public TeamGame withBenchPenaltyMinutes(Double benchPenaltyMinutes) {
        this.benchPenaltyMinutes = benchPenaltyMinutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Blocks")
    public Double blocks;
    public TeamGame withBlocks(Double blocks) {
        this.blocks = blocks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;
    public TeamGame withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;
    public TeamGame withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EmptyNetGoals")
    public Double emptyNetGoals;
    public TeamGame withEmptyNetGoals(Double emptyNetGoals) {
        this.emptyNetGoals = emptyNetGoals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FaceoffsLost")
    public Double faceoffsLost;
    public TeamGame withFaceoffsLost(Double faceoffsLost) {
        this.faceoffsLost = faceoffsLost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FaceoffsWon")
    public Double faceoffsWon;
    public TeamGame withFaceoffsWon(Double faceoffsWon) {
        this.faceoffsWon = faceoffsWon;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;
    public TeamGame withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsDraftKings")
    public Double fantasyPointsDraftKings;
    public TeamGame withFantasyPointsDraftKings(Double fantasyPointsDraftKings) {
        this.fantasyPointsDraftKings = fantasyPointsDraftKings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFanDuel")
    public Double fantasyPointsFanDuel;
    public TeamGame withFantasyPointsFanDuel(Double fantasyPointsFanDuel) {
        this.fantasyPointsFanDuel = fantasyPointsFanDuel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFantasyDraft")
    public Double fantasyPointsFantasyDraft;
    public TeamGame withFantasyPointsFantasyDraft(Double fantasyPointsFantasyDraft) {
        this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsYahoo")
    public Double fantasyPointsYahoo;
    public TeamGame withFantasyPointsYahoo(Double fantasyPointsYahoo) {
        this.fantasyPointsYahoo = fantasyPointsYahoo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameID")
    public Long gameID;
    public TeamGame withGameID(Long gameID) {
        this.gameID = gameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Games")
    public Long games;
    public TeamGame withGames(Long games) {
        this.games = games;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Giveaways")
    public Double giveaways;
    public TeamGame withGiveaways(Double giveaways) {
        this.giveaways = giveaways;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalGameID")
    public Long globalGameID;
    public TeamGame withGlobalGameID(Long globalGameID) {
        this.globalGameID = globalGameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalOpponentID")
    public Long globalOpponentID;
    public TeamGame withGlobalOpponentID(Long globalOpponentID) {
        this.globalOpponentID = globalOpponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalTeamID")
    public Long globalTeamID;
    public TeamGame withGlobalTeamID(Long globalTeamID) {
        this.globalTeamID = globalTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Goals")
    public Double goals;
    public TeamGame withGoals(Double goals) {
        this.goals = goals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoaltendingGoalsAgainst")
    public Double goaltendingGoalsAgainst;
    public TeamGame withGoaltendingGoalsAgainst(Double goaltendingGoalsAgainst) {
        this.goaltendingGoalsAgainst = goaltendingGoalsAgainst;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoaltendingLosses")
    public Double goaltendingLosses;
    public TeamGame withGoaltendingLosses(Double goaltendingLosses) {
        this.goaltendingLosses = goaltendingLosses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoaltendingMinutes")
    public Long goaltendingMinutes;
    public TeamGame withGoaltendingMinutes(Long goaltendingMinutes) {
        this.goaltendingMinutes = goaltendingMinutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoaltendingOvertimeLosses")
    public Double goaltendingOvertimeLosses;
    public TeamGame withGoaltendingOvertimeLosses(Double goaltendingOvertimeLosses) {
        this.goaltendingOvertimeLosses = goaltendingOvertimeLosses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoaltendingSaves")
    public Double goaltendingSaves;
    public TeamGame withGoaltendingSaves(Double goaltendingSaves) {
        this.goaltendingSaves = goaltendingSaves;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoaltendingSeconds")
    public Long goaltendingSeconds;
    public TeamGame withGoaltendingSeconds(Long goaltendingSeconds) {
        this.goaltendingSeconds = goaltendingSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoaltendingShotsAgainst")
    public Double goaltendingShotsAgainst;
    public TeamGame withGoaltendingShotsAgainst(Double goaltendingShotsAgainst) {
        this.goaltendingShotsAgainst = goaltendingShotsAgainst;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoaltendingShutouts")
    public Double goaltendingShutouts;
    public TeamGame withGoaltendingShutouts(Double goaltendingShutouts) {
        this.goaltendingShutouts = goaltendingShutouts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoaltendingWins")
    public Double goaltendingWins;
    public TeamGame withGoaltendingWins(Double goaltendingWins) {
        this.goaltendingWins = goaltendingWins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HatTricks")
    public Double hatTricks;
    public TeamGame withHatTricks(Double hatTricks) {
        this.hatTricks = hatTricks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Hits")
    public Double hits;
    public TeamGame withHits(Double hits) {
        this.hits = hits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeOrAway")
    public String homeOrAway;
    public TeamGame withHomeOrAway(String homeOrAway) {
        this.homeOrAway = homeOrAway;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsGameOver")
    public Boolean isGameOver;
    public TeamGame withIsGameOver(Boolean isGameOver) {
        this.isGameOver = isGameOver;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Losses")
    public Long losses;
    public TeamGame withLosses(Long losses) {
        this.losses = losses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Minutes")
    public Long minutes;
    public TeamGame withMinutes(Long minutes) {
        this.minutes = minutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public TeamGame withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Opponent")
    public String opponent;
    public TeamGame withOpponent(String opponent) {
        this.opponent = opponent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentID")
    public Long opponentID;
    public TeamGame withOpponentID(Long opponentID) {
        this.opponentID = opponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OvertimeLosses")
    public Long overtimeLosses;
    public TeamGame withOvertimeLosses(Long overtimeLosses) {
        this.overtimeLosses = overtimeLosses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltyMinutes")
    public Double penaltyMinutes;
    public TeamGame withPenaltyMinutes(Double penaltyMinutes) {
        this.penaltyMinutes = penaltyMinutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlusMinus")
    public Double plusMinus;
    public TeamGame withPlusMinus(Double plusMinus) {
        this.plusMinus = plusMinus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PowerPlayAssists")
    public Double powerPlayAssists;
    public TeamGame withPowerPlayAssists(Double powerPlayAssists) {
        this.powerPlayAssists = powerPlayAssists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PowerPlayGoals")
    public Double powerPlayGoals;
    public TeamGame withPowerPlayGoals(Double powerPlayGoals) {
        this.powerPlayGoals = powerPlayGoals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;
    public TeamGame withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;
    public TeamGame withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Seconds")
    public Long seconds;
    public TeamGame withSeconds(Long seconds) {
        this.seconds = seconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Shifts")
    public Double shifts;
    public TeamGame withShifts(Double shifts) {
        this.shifts = shifts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShootoutGoals")
    public Double shootoutGoals;
    public TeamGame withShootoutGoals(Double shootoutGoals) {
        this.shootoutGoals = shootoutGoals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShortHandedAssists")
    public Double shortHandedAssists;
    public TeamGame withShortHandedAssists(Double shortHandedAssists) {
        this.shortHandedAssists = shortHandedAssists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShortHandedGoals")
    public Double shortHandedGoals;
    public TeamGame withShortHandedGoals(Double shortHandedGoals) {
        this.shortHandedGoals = shortHandedGoals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShotsOnGoal")
    public Double shotsOnGoal;
    public TeamGame withShotsOnGoal(Double shotsOnGoal) {
        this.shotsOnGoal = shotsOnGoal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Started")
    public Long started;
    public TeamGame withStarted(Long started) {
        this.started = started;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatID")
    public Long statID;
    public TeamGame withStatID(Long statID) {
        this.statID = statID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Takeaways")
    public Double takeaways;
    public TeamGame withTakeaways(Double takeaways) {
        this.takeaways = takeaways;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;
    public TeamGame withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamID")
    public Long teamID;
    public TeamGame withTeamID(Long teamID) {
        this.teamID = teamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;
    public TeamGame withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Wins")
    public Long wins;
    public TeamGame withWins(Long wins) {
        this.wins = wins;
        return this;
    }
    
}
