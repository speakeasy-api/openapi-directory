<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ExportContextCsvExportOptions - Options for exporting data as CSV. `MySQL` and `PostgreSQL` instances only.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ExportContextCsvExportOptions
{
    /**
     * Specifies the character that should appear before a data character that needs to be escaped.
     * 
     * @var ?string $escapeCharacter
     */
	#[\JMS\Serializer\Annotation\SerializedName('escapeCharacter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $escapeCharacter = null;
    
    /**
     * Specifies the character that separates columns within each row (line) of the file.
     * 
     * @var ?string $fieldsTerminatedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldsTerminatedBy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fieldsTerminatedBy = null;
    
    /**
     * This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values.
     * 
     * @var ?string $linesTerminatedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('linesTerminatedBy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $linesTerminatedBy = null;
    
    /**
     * Specifies the quoting character to be used when a data value is quoted.
     * 
     * @var ?string $quoteCharacter
     */
	#[\JMS\Serializer\Annotation\SerializedName('quoteCharacter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $quoteCharacter = null;
    
    /**
     * The select query used to extract the data.
     * 
     * @var ?string $selectQuery
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectQuery')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selectQuery = null;
    
	public function __construct()
	{
		$this->escapeCharacter = null;
		$this->fieldsTerminatedBy = null;
		$this->linesTerminatedBy = null;
		$this->quoteCharacter = null;
		$this->selectQuery = null;
	}
}
