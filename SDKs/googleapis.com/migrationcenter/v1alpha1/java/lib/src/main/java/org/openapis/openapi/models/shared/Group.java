/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Group - A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.
 */
public class Group {
    /**
     * Output only. The timestamp when the group was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Group withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * The description of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Group withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * User-friendly display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Group withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Labels as key value pairs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Group withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The name of the group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Group withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The timestamp when the group was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Group withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Group(){}
}
