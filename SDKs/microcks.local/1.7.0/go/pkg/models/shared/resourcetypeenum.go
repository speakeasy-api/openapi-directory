// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ResourceTypeEnum - Types of managed resources for Services or APIs
type ResourceTypeEnum string

const (
	ResourceTypeEnumWsdl                ResourceTypeEnum = "WSDL"
	ResourceTypeEnumXsd                 ResourceTypeEnum = "XSD"
	ResourceTypeEnumJSONSchema          ResourceTypeEnum = "JSON_SCHEMA"
	ResourceTypeEnumOpenAPISpec         ResourceTypeEnum = "OPEN_API_SPEC"
	ResourceTypeEnumOpenAPISchema       ResourceTypeEnum = "OPEN_API_SCHEMA"
	ResourceTypeEnumAsyncAPISpec        ResourceTypeEnum = "ASYNC_API_SPEC"
	ResourceTypeEnumAsyncAPISchema      ResourceTypeEnum = "ASYNC_API_SCHEMA"
	ResourceTypeEnumAvroSchema          ResourceTypeEnum = "AVRO_SCHEMA"
	ResourceTypeEnumProtobufSchema      ResourceTypeEnum = "PROTOBUF_SCHEMA"
	ResourceTypeEnumProtobufDescription ResourceTypeEnum = "PROTOBUF_DESCRIPTION"
	ResourceTypeEnumGraphqlSchema       ResourceTypeEnum = "GRAPHQL_SCHEMA"
)

func (e ResourceTypeEnum) ToPointer() *ResourceTypeEnum {
	return &e
}

func (e *ResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WSDL":
		fallthrough
	case "XSD":
		fallthrough
	case "JSON_SCHEMA":
		fallthrough
	case "OPEN_API_SPEC":
		fallthrough
	case "OPEN_API_SCHEMA":
		fallthrough
	case "ASYNC_API_SPEC":
		fallthrough
	case "ASYNC_API_SCHEMA":
		fallthrough
	case "AVRO_SCHEMA":
		fallthrough
	case "PROTOBUF_SCHEMA":
		fallthrough
	case "PROTOBUF_DESCRIPTION":
		fallthrough
	case "GRAPHQL_SCHEMA":
		*e = ResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceTypeEnum: %v", v)
	}
}
