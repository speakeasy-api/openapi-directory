// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ShareholderContactShareholderTypeEnum - Specifies how the person is associated with the account holder.
//
// Possible values:
//
// * **Owner**: Individuals who directly or indirectly own 25% or more of a company.
//
// * **Controller**: Individuals who are members of senior management staff responsible for managing a company or organization.
type ShareholderContactShareholderTypeEnum string

const (
	ShareholderContactShareholderTypeEnumController ShareholderContactShareholderTypeEnum = "Controller"
	ShareholderContactShareholderTypeEnumOwner      ShareholderContactShareholderTypeEnum = "Owner"
	ShareholderContactShareholderTypeEnumSignatory  ShareholderContactShareholderTypeEnum = "Signatory"
)

func (e *ShareholderContactShareholderTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Controller":
		fallthrough
	case "Owner":
		fallthrough
	case "Signatory":
		*e = ShareholderContactShareholderTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ShareholderContactShareholderTypeEnum: %s", s)
	}
}

type ShareholderContact struct {
	Address *ViasAddress `json:"address,omitempty"`
	// The e-mail address of the person.
	Email *string `json:"email,omitempty"`
	// The phone number of the person provided as a single string.  It will be handled as a landline phone.
	// Examples: "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"
	FullPhoneNumber *string `json:"fullPhoneNumber,omitempty"`
	// Job title of the person. Required when the `shareholderType` is **Controller**.
	//
	// Example values: **Chief Executive Officer**, **Chief Financial Officer**, **Chief Operating Officer**, **President**, **Vice President**, **Executive President**, **Managing Member**, **Partner**, **Treasurer**, **Director**, or **Other**.
	JobTitle     *string           `json:"jobTitle,omitempty"`
	Name         *ViasName         `json:"name,omitempty"`
	PersonalData *ViasPersonalData `json:"personalData,omitempty"`
	PhoneNumber  *ViasPhoneNumber  `json:"phoneNumber,omitempty"`
	// The unique identifier (UUID) of the shareholder entry.
	// >**If, during an Account Holder create or update request, this field is left blank (but other fields provided), a new Shareholder will be created with a procedurally-generated UUID.**
	//
	// >**If, during an Account Holder create request, a UUID is provided, the creation of Account Holder will fail with a validation Error..**
	//
	// >**If, during an Account Holder update request, a UUID that is not correlated with an existing Shareholder is provided, the update of the Shareholder will fail.**
	//
	// >**If, during an Account Holder update request, a UUID that is correlated with an existing Shareholder is provided, the existing Shareholder will be updated.**
	//
	ShareholderCode *string `json:"shareholderCode,omitempty"`
	// Specifies how the person is associated with the account holder.
	//
	// Possible values:
	//
	// * **Owner**: Individuals who directly or indirectly own 25% or more of a company.
	//
	// * **Controller**: Individuals who are members of senior management staff responsible for managing a company or organization.
	ShareholderType *ShareholderContactShareholderTypeEnum `json:"shareholderType,omitempty"`
	// The URL of the person's website.
	WebAddress *string `json:"webAddress,omitempty"`
}
