/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateJobRequestBody {
    /**
     * The criteria that determine when and how a job abort takes place.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("abortConfig")
    public UpdateJobRequestBodyAbortConfig abortConfig;
    public UpdateJobRequestBody withAbortConfig(UpdateJobRequestBodyAbortConfig abortConfig) {
        this.abortConfig = abortConfig;
        return this;
    }
    
    /**
     * A short text description of the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public UpdateJobRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The configuration that determines how many retries are allowed for each failure type for a job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobExecutionsRetryConfig")
    public UpdateJobRequestBodyJobExecutionsRetryConfig jobExecutionsRetryConfig;
    public UpdateJobRequestBody withJobExecutionsRetryConfig(UpdateJobRequestBodyJobExecutionsRetryConfig jobExecutionsRetryConfig) {
        this.jobExecutionsRetryConfig = jobExecutionsRetryConfig;
        return this;
    }
    
    /**
     * Allows you to create a staged rollout of a job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobExecutionsRolloutConfig")
    public UpdateJobRequestBodyJobExecutionsRolloutConfig jobExecutionsRolloutConfig;
    public UpdateJobRequestBody withJobExecutionsRolloutConfig(UpdateJobRequestBodyJobExecutionsRolloutConfig jobExecutionsRolloutConfig) {
        this.jobExecutionsRolloutConfig = jobExecutionsRolloutConfig;
        return this;
    }
    
    /**
     * Configuration for pre-signed S3 URLs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("presignedUrlConfig")
    public UpdateJobRequestBodyPresignedUrlConfig presignedUrlConfig;
    public UpdateJobRequestBody withPresignedUrlConfig(UpdateJobRequestBodyPresignedUrlConfig presignedUrlConfig) {
        this.presignedUrlConfig = presignedUrlConfig;
        return this;
    }
    
    /**
     * Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to &lt;code&gt;IN_PROGRESS&lt;/code&gt;. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to &lt;code&gt;TIMED_OUT&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeoutConfig")
    public UpdateJobRequestBodyTimeoutConfig timeoutConfig;
    public UpdateJobRequestBody withTimeoutConfig(UpdateJobRequestBodyTimeoutConfig timeoutConfig) {
        this.timeoutConfig = timeoutConfig;
        return this;
    }
    
}
