/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * If true, facilitators are included in the results.
 */
export enum GetOfferingsOfferingIdUsersFacilitatorsEnum {
  True = "true",
  False = "false",
}

/**
 * If true, learners are included in the results.
 */
export enum GetOfferingsOfferingIdUsersLearnersEnum {
  True = "true",
  False = "false",
}

/**
 * If true, markers are included in the results.
 */
export enum GetOfferingsOfferingIdUsersMarkersEnum {
  True = "true",
  False = "false",
}

export class GetOfferingsOfferingIdUsersRequest extends SpeakeasyBase {
  /**
   * If true, facilitators are included in the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=facilitators",
  })
  facilitators?: GetOfferingsOfferingIdUsersFacilitatorsEnum;

  /**
   * If true, learners are included in the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=learners",
  })
  learners?: GetOfferingsOfferingIdUsersLearnersEnum;

  /**
   * If true, markers are included in the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=markers",
  })
  markers?: GetOfferingsOfferingIdUsersMarkersEnum;

  /**
   * offering's id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=offeringId",
  })
  offeringId: string;
}

export class GetOfferingsOfferingIdUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * offering's users
   */
  @SpeakeasyMetadata({ elemType: shared.OfferingUserResponse })
  offeringUserResponses?: shared.OfferingUserResponse[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
