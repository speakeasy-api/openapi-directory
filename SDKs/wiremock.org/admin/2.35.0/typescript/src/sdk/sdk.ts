/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NearMisses } from "./nearmisses";
import { Recordings } from "./recordings";
import { Requests } from "./requests";
import { Scenarios } from "./scenarios";
import { StubMappings } from "./stubmappings";
import { System } from "./system";
import axios from "axios";
import { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["/"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 *
 * @see {@link http://wiremock.org/docs/} - WireMock user documentation
 */
export class SDK {
  /**
   * Near misses allow querying of received requests or request patterns according to similarity
   *
   * @see {@link http://wiremock.org/docs/verifying/#near-misses} - User documentation
   */
  public nearMisses: NearMisses;
  /**
   * Stub mapping record and snapshot functions
   *
   * @see {@link http://wiremock.org/docs/record-playback/} - User documentation
   */
  public recordings: Recordings;
  /**
   * Logged requests and responses received by the mock service
   *
   * @see {@link http://wiremock.org/docs/verifying/} - User documentation
   */
  public requests: Requests;
  /**
   * Scenarios support modelling of stateful behaviour
   *
   * @see {@link http://wiremock.org/docs/stateful-behaviour/} - User documentation
   */
  public scenarios: Scenarios;
  /**
   * Operations on stub mappings
   *
   * @see {@link http://wiremock.org/docs/stubbing/} - User documentation
   */
  public stubMappings: StubMappings;
  /**
   * Global operations
   */
  public system: System;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.nearMisses = new NearMisses(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.recordings = new Recordings(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.requests = new Requests(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.scenarios = new Scenarios(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.stubMappings = new StubMappings(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.system = new System(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
