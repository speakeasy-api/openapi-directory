// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReplayStateEnum string

const (
	ReplayStateEnumStarting   ReplayStateEnum = "STARTING"
	ReplayStateEnumRunning    ReplayStateEnum = "RUNNING"
	ReplayStateEnumCancelling ReplayStateEnum = "CANCELLING"
	ReplayStateEnumCompleted  ReplayStateEnum = "COMPLETED"
	ReplayStateEnumCancelled  ReplayStateEnum = "CANCELLED"
	ReplayStateEnumFailed     ReplayStateEnum = "FAILED"
)

func (e ReplayStateEnum) ToPointer() *ReplayStateEnum {
	return &e
}

func (e *ReplayStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STARTING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		*e = ReplayStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplayStateEnum: %v", v)
	}
}
