"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class UpdateRawRequest:
    
    request_body: bytes = dataclasses.field(metadata={'request': { 'media_type': 'text/xml' }})
    r"""Details of the Subscription to change"""  
    subscription_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'subscriptionId', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the Subscription to update"""  
    

@dataclasses.dataclass
class UpdateRawResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Request was malformed"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    