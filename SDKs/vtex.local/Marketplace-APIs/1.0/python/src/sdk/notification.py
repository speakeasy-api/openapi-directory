"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class Notification:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def inventory_notification(self, request: operations.InventoryNotificationRequest) -> operations.InventoryNotificationResponse:
        r"""Notify marketplace of inventory update
        This endpoint is used by *sellers* to notify marketplaces that the inventory level has changed for one of their SKUs. 
        
        There is no request body in this call, indicating the new inventory level, for instance. It only notifies a specific marketplace (`accountName`) that a seller (`sellerId`) has changed the inventory level of an SKU (`skuId`). 
        
        *Marketplaces* will then call the [fulfillment endpoint](https://developers.vtex.com/vtex-rest-api/reference/fulfillment-simulation) provided in the seller registration form to get the updated inventory  information.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.InventoryNotificationRequest, base_url, '/notificator/{sellerId}/changenotification/{skuId}/inventory', request)
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.InventoryNotificationRequest, request)
        
        client = self._security_client
        
        http_res = client.request('POST', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.InventoryNotificationResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def price_notification(self, request: operations.PriceNotificationRequest) -> operations.PriceNotificationResponse:
        r"""Notify marketplace of price update
        This endpoint is used by *sellers* to notify marketplaces that the price has changed for one of their SKUs. 
        
        There is no request body in this call, indicating the new price value, for instance. It only notifies a specific marketplace (`accountName`) that a seller (`sellerId`) has changed the price of an SKU (`skuId`). 
        
        *Marketplaces* will then call the [fulfillment endpoint](https://developers.vtex.com/vtex-rest-api/reference/fulfillment-simulation) provided in the seller registration form to get the updated price information.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.PriceNotificationRequest, base_url, '/notificator/{sellerId}/changenotification/{skuId}/price', request)
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.PriceNotificationRequest, request)
        
        client = self._security_client
        
        http_res = client.request('POST', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.PriceNotificationResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    