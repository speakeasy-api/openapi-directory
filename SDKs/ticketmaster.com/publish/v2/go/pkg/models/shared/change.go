// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ChangeOpEnum - Operation to apply on the entity.
type ChangeOpEnum string

const (
	ChangeOpEnumAdd     ChangeOpEnum = "add"
	ChangeOpEnumRemove  ChangeOpEnum = "remove"
	ChangeOpEnumReplace ChangeOpEnum = "replace"
	ChangeOpEnumMove    ChangeOpEnum = "move"
	ChangeOpEnumCopy    ChangeOpEnum = "copy"
	ChangeOpEnumTest    ChangeOpEnum = "test"
)

func (e *ChangeOpEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "add":
		fallthrough
	case "remove":
		fallthrough
	case "replace":
		fallthrough
	case "move":
		fallthrough
	case "copy":
		fallthrough
	case "test":
		*e = ChangeOpEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChangeOpEnum: %s", s)
	}
}

// Change - This class defines the Changes on the Publish API
type Change struct {
	// Json path of the source entity when using the move operation.
	From *string `json:"from,omitempty"`
	// Operation to apply on the entity.
	Op ChangeOpEnum `json:"op"`
	// Json path from the root of the document to the place where the change should be applied.
	Path string `json:"path"`
	// Data to change. MUST be a valid json object.
	Value map[string]interface{} `json:"value,omitempty"`
}
