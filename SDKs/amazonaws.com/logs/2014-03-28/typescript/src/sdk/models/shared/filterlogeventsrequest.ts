/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class FilterLogEventsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "filterPattern" })
  filterPattern?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "interleaved" })
  interleaved?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "logGroupIdentifier" })
  logGroupIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logGroupName" })
  logGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logStreamNamePrefix" })
  logStreamNamePrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logStreamNames" })
  logStreamNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "nextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unmask" })
  unmask?: boolean;
}
