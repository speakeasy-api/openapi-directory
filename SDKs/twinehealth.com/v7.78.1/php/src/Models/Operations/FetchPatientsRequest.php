<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class FetchPatientsRequest
{
    /**
     * If not specified, return all patients. If set to 'true' return only archived patients, if set to 'false', return only patients who are not archived.
     * 
     * @var ?bool $filterArchived
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter[archived]')]
    public ?bool $filterArchived = null;
    
    /**
     * The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
     * 
     * 
     * 
     * @var ?string $filterCreatedAt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter[created_at]')]
    public ?string $filterCreatedAt = null;
    
    /**
     * Comma-separated list of group ids. Note that either `filter[group]` or `filter[organization]` must be specified.
     * 
     * @var ?string $filterGroups
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter[groups]')]
    public ?string $filterGroups = null;
    
    /**
     * Identifier system (example: "MyEHR") - requires a "filter[identifier][value]" parameter
     * 
     * @var ?string $filterIdentifierSystem
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter[identifier][system]')]
    public ?string $filterIdentifierSystem = null;
    
    /**
     * Identifier value (example: "12345") - requires a "filter[identifier][system]" parameter
     * 
     * @var ?string $filterIdentifierValue
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter[identifier][value]')]
    public ?string $filterIdentifierValue = null;
    
    /**
     * Fitbit Plus organization id. Note that either `filter[group]` or `filter[organization]` must be specified.
     * 
     * @var ?string $filterOrganization
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter[organization]')]
    public ?string $filterOrganization = null;
    
    /**
     * The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
     * 
     * 
     * 
     * @var ?string $filterUpdatedAt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter[updated_at]')]
    public ?string $filterUpdatedAt = null;
    
    /**
     * Page cursor
     * 
     * @var ?string $pageCursor
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page[cursor]')]
    public ?string $pageCursor = null;
    
    /**
     * Page limit
     * 
     * @var ?int $pageLimit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page[limit]')]
    public ?int $pageLimit = null;
    
    /**
     * Page number
     * 
     * @var ?int $pageNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page[number]')]
    public ?int $pageNumber = null;
    
    /**
     * Page size
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page[size]')]
    public ?int $pageSize = null;
    
	public function __construct()
	{
		$this->filterArchived = null;
		$this->filterCreatedAt = null;
		$this->filterGroups = null;
		$this->filterIdentifierSystem = null;
		$this->filterIdentifierValue = null;
		$this->filterOrganization = null;
		$this->filterUpdatedAt = null;
		$this->pageCursor = null;
		$this->pageLimit = null;
		$this->pageNumber = null;
		$this->pageSize = null;
	}
}
