// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BatchItemErrorCodeEnum string

const (
	BatchItemErrorCodeEnumAccessDeniedError     BatchItemErrorCodeEnum = "AccessDeniedError"
	BatchItemErrorCodeEnumConflictError         BatchItemErrorCodeEnum = "ConflictError"
	BatchItemErrorCodeEnumInternalServerError   BatchItemErrorCodeEnum = "InternalServerError"
	BatchItemErrorCodeEnumResourceNotFoundError BatchItemErrorCodeEnum = "ResourceNotFoundError"
	BatchItemErrorCodeEnumThrottlingError       BatchItemErrorCodeEnum = "ThrottlingError"
	BatchItemErrorCodeEnumValidationError       BatchItemErrorCodeEnum = "ValidationError"
)

func (e *BatchItemErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AccessDeniedError":
		fallthrough
	case "ConflictError":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "ResourceNotFoundError":
		fallthrough
	case "ThrottlingError":
		fallthrough
	case "ValidationError":
		*e = BatchItemErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchItemErrorCodeEnum: %s", s)
	}
}
