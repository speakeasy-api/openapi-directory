/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FormTableColumnDefinition - Definition of a column within a table for OCR data extraction from images
 */
public class FormTableColumnDefinition {
    /**
     * Optional - set to false to block values that contain numeric digits, set to true to allow numeric digits
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowNumericDigits")
    public Boolean allowNumericDigits;
    public FormTableColumnDefinition withAllowNumericDigits(Boolean allowNumericDigits) {
        this.allowNumericDigits = allowNumericDigits;
        return this;
    }
    
    /**
     * Optional - the matching mode for the anchor.  Possible values are Complete (requires the entire anchor to match) and Partial (allows only part of the anchor to match).  Default is Partial.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AnchorMode")
    public String anchorMode;
    public FormTableColumnDefinition withAnchorMode(String anchorMode) {
        this.anchorMode = anchorMode;
        return this;
    }
    
    /**
     * The identifier of the field; use this to identify which field is being referenced
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ColumnID")
    public String columnID;
    public FormTableColumnDefinition withColumnID(String columnID) {
        this.columnID = columnID;
        return this;
    }
    
    /**
     * The data type of the field; possible values are INTEGER (Integer value), STRING (Arbitrary string value, spaces are permitted), DATE (Date in a structured format), DECIMAL (Decimal number), ALPHANUMERIC (Continuous alphanumeric string with no spaces), STRINGNOWHITESPACE (A string that contains no whitespace characters), SERIALNUMBER (A serial-number style string that contains letters and numbers, and certain symbols; must contain at least one number), ALPHAONLY (Alphabet characters only, no numbers or symbols or whitespace)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataType")
    public String dataType;
    public FormTableColumnDefinition withDataType(String dataType) {
        this.dataType = dataType;
        return this;
    }
    
    /**
     * Optional - the target number of digits in the field; useful for fixed-length fields
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MinimumCharacterCount")
    public Integer minimumCharacterCount;
    public FormTableColumnDefinition withMinimumCharacterCount(Integer minimumCharacterCount) {
        this.minimumCharacterCount = minimumCharacterCount;
        return this;
    }
    
    /**
     * Optional - the top anchor of the column heading
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TopAnchor")
    public String topAnchor;
    public FormTableColumnDefinition withTopAnchor(String topAnchor) {
        this.topAnchor = topAnchor;
        return this;
    }
    
}
