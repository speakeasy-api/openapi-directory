"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PostenSatzEnum(str, Enum):
    NORMAL = 'NORMAL'
    ERMAESSIGT1 = 'ERMAESSIGT1'
    ERMAESSIGT2 = 'ERMAESSIGT2'
    BESONDERS = 'BESONDERS'
    NULL = 'NULL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Posten:
    
    bezeichnung: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Bezeichnung') }})  
    brutto_betrag: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BruttoBetrag') }})
    r"""The amount in cents"""  
    menge: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Menge') }})  
    netto_betrag: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NettoBetrag') }})
    r"""The amount in cents"""  
    satz: PostenSatzEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Satz') }})  
    externer_beleg_belegkreis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Externer-Beleg-Belegkreis'), 'exclude': lambda f: f is None }})  
    externer_beleg_bezeichnung: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Externer-Beleg-Bezeichnung'), 'exclude': lambda f: f is None }})  
    externer_beleg_referenz: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Externer-Beleg-Referenz'), 'exclude': lambda f: f is None }})  
    