"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PartnerCostCostTypeEnum(str, Enum):
    r"""Required. The type of the partner cost."""
    PARTNER_COST_TYPE_UNSPECIFIED = 'PARTNER_COST_TYPE_UNSPECIFIED'
    PARTNER_COST_TYPE_ADLOOX = 'PARTNER_COST_TYPE_ADLOOX'
    PARTNER_COST_TYPE_ADLOOX_PREBID = 'PARTNER_COST_TYPE_ADLOOX_PREBID'
    PARTNER_COST_TYPE_ADSAFE = 'PARTNER_COST_TYPE_ADSAFE'
    PARTNER_COST_TYPE_ADXPOSE = 'PARTNER_COST_TYPE_ADXPOSE'
    PARTNER_COST_TYPE_AGGREGATE_KNOWLEDGE = 'PARTNER_COST_TYPE_AGGREGATE_KNOWLEDGE'
    PARTNER_COST_TYPE_AGENCY_TRADING_DESK = 'PARTNER_COST_TYPE_AGENCY_TRADING_DESK'
    PARTNER_COST_TYPE_DV360_FEE = 'PARTNER_COST_TYPE_DV360_FEE'
    PARTNER_COST_TYPE_COMSCORE_VCE = 'PARTNER_COST_TYPE_COMSCORE_VCE'
    PARTNER_COST_TYPE_DATA_MANAGEMENT_PLATFORM = 'PARTNER_COST_TYPE_DATA_MANAGEMENT_PLATFORM'
    PARTNER_COST_TYPE_DEFAULT = 'PARTNER_COST_TYPE_DEFAULT'
    PARTNER_COST_TYPE_DOUBLE_VERIFY = 'PARTNER_COST_TYPE_DOUBLE_VERIFY'
    PARTNER_COST_TYPE_DOUBLE_VERIFY_PREBID = 'PARTNER_COST_TYPE_DOUBLE_VERIFY_PREBID'
    PARTNER_COST_TYPE_EVIDON = 'PARTNER_COST_TYPE_EVIDON'
    PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO = 'PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO'
    PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_PREBID = 'PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_PREBID'
    PARTNER_COST_TYPE_MEDIA_COST_DATA = 'PARTNER_COST_TYPE_MEDIA_COST_DATA'
    PARTNER_COST_TYPE_MOAT_VIDEO = 'PARTNER_COST_TYPE_MOAT_VIDEO'
    PARTNER_COST_TYPE_NIELSEN_DAR = 'PARTNER_COST_TYPE_NIELSEN_DAR'
    PARTNER_COST_TYPE_SHOP_LOCAL = 'PARTNER_COST_TYPE_SHOP_LOCAL'
    PARTNER_COST_TYPE_TERACENT = 'PARTNER_COST_TYPE_TERACENT'
    PARTNER_COST_TYPE_THIRD_PARTY_AD_SERVER = 'PARTNER_COST_TYPE_THIRD_PARTY_AD_SERVER'
    PARTNER_COST_TYPE_TRUST_METRICS = 'PARTNER_COST_TYPE_TRUST_METRICS'
    PARTNER_COST_TYPE_VIZU = 'PARTNER_COST_TYPE_VIZU'
    PARTNER_COST_TYPE_ADLINGO_FEE = 'PARTNER_COST_TYPE_ADLINGO_FEE'
    PARTNER_COST_TYPE_CUSTOM_FEE_1 = 'PARTNER_COST_TYPE_CUSTOM_FEE_1'
    PARTNER_COST_TYPE_CUSTOM_FEE_2 = 'PARTNER_COST_TYPE_CUSTOM_FEE_2'
    PARTNER_COST_TYPE_CUSTOM_FEE_3 = 'PARTNER_COST_TYPE_CUSTOM_FEE_3'
    PARTNER_COST_TYPE_CUSTOM_FEE_4 = 'PARTNER_COST_TYPE_CUSTOM_FEE_4'
    PARTNER_COST_TYPE_CUSTOM_FEE_5 = 'PARTNER_COST_TYPE_CUSTOM_FEE_5'

class PartnerCostFeeTypeEnum(str, Enum):
    r"""Required. The fee type for this partner cost."""
    PARTNER_COST_FEE_TYPE_UNSPECIFIED = 'PARTNER_COST_FEE_TYPE_UNSPECIFIED'
    PARTNER_COST_FEE_TYPE_CPM_FEE = 'PARTNER_COST_FEE_TYPE_CPM_FEE'
    PARTNER_COST_FEE_TYPE_MEDIA_FEE = 'PARTNER_COST_FEE_TYPE_MEDIA_FEE'

class PartnerCostInvoiceTypeEnum(str, Enum):
    r"""The invoice type for this partner cost. * Required when cost_type is one of: - `PARTNER_COST_TYPE_ADLOOX` - `PARTNER_COST_TYPE_DOUBLE_VERIFY` - `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE`. * Output only for other types."""
    PARTNER_COST_INVOICE_TYPE_UNSPECIFIED = 'PARTNER_COST_INVOICE_TYPE_UNSPECIFIED'
    PARTNER_COST_INVOICE_TYPE_DV360 = 'PARTNER_COST_INVOICE_TYPE_DV360'
    PARTNER_COST_INVOICE_TYPE_PARTNER = 'PARTNER_COST_INVOICE_TYPE_PARTNER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PartnerCost:
    r"""Settings that control a partner cost. A partner cost is any type of expense involved in running a campaign, other than the costs of purchasing impressions (which is called the media cost) and using third-party audience segment data (data fee). Some examples of partner costs include the fees for using DV360, a third-party ad server, or a third-party ad serving verification service."""
    
    cost_type: Optional[PartnerCostCostTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('costType'), 'exclude': lambda f: f is None }})
    r"""Required. The type of the partner cost."""  
    fee_amount: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feeAmount'), 'exclude': lambda f: f is None }})
    r"""The CPM fee amount in micros of advertiser's currency. Applicable when the fee_type is `PARTNER_FEE_TYPE_CPM_FEE`. Must be greater than or equal to 0. For example, for 1.5 standard unit of the advertiser's currency, set this field to 1500000."""  
    fee_percentage_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feePercentageMillis'), 'exclude': lambda f: f is None }})
    r"""The media fee percentage in millis (1/1000 of a percent). Applicable when the fee_type is `PARTNER_FEE_TYPE_MEDIA_FEE`. Must be greater than or equal to 0. For example: 100 represents 0.1%."""  
    fee_type: Optional[PartnerCostFeeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feeType'), 'exclude': lambda f: f is None }})
    r"""Required. The fee type for this partner cost."""  
    invoice_type: Optional[PartnerCostInvoiceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoiceType'), 'exclude': lambda f: f is None }})
    r"""The invoice type for this partner cost. * Required when cost_type is one of: - `PARTNER_COST_TYPE_ADLOOX` - `PARTNER_COST_TYPE_DOUBLE_VERIFY` - `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE`. * Output only for other types."""  
    