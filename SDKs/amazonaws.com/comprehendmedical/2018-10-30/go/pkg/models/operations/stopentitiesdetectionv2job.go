// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopEntitiesDetectionV2JobXAmzTargetEnum
type StopEntitiesDetectionV2JobXAmzTargetEnum string

const (
	StopEntitiesDetectionV2JobXAmzTargetEnumComprehendMedical20181030StopEntitiesDetectionV2Job StopEntitiesDetectionV2JobXAmzTargetEnum = "ComprehendMedical_20181030.StopEntitiesDetectionV2Job"
)

func (e *StopEntitiesDetectionV2JobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ComprehendMedical_20181030.StopEntitiesDetectionV2Job":
		*e = StopEntitiesDetectionV2JobXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StopEntitiesDetectionV2JobXAmzTargetEnum: %s", s)
	}
}

type StopEntitiesDetectionV2JobHeaders struct {
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StopEntitiesDetectionV2JobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopEntitiesDetectionV2JobRequest struct {
	Headers StopEntitiesDetectionV2JobHeaders
	Request shared.StopEntitiesDetectionV2JobRequest `request:"mediaType=application/json"`
}

type StopEntitiesDetectionV2JobResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	StopEntitiesDetectionV2JobResponse *shared.StopEntitiesDetectionV2JobResponse
}
