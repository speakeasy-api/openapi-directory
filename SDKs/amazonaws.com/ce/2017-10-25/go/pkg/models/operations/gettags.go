// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetTagsXAmzTargetEnum
type GetTagsXAmzTargetEnum string

const (
	GetTagsXAmzTargetEnumAwsInsightsIndexServiceGetTags GetTagsXAmzTargetEnum = "AWSInsightsIndexService.GetTags"
)

func (e GetTagsXAmzTargetEnum) ToPointer() *GetTagsXAmzTargetEnum {
	return &e
}

func (e *GetTagsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSInsightsIndexService.GetTags":
		*e = GetTagsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTagsXAmzTargetEnum: %v", v)
	}
}

type GetTagsRequest struct {
	GetTagsRequest    shared.GetTagsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetTagsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetTagsResponse struct {
	// BillExpirationException
	BillExpirationException interface{}
	ContentType             string
	// DataUnavailableException
	DataUnavailableException interface{}
	// Success
	GetTagsResponse *shared.GetTagsResponse
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// RequestChangedException
	RequestChangedException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
