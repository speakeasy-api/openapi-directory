/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRecommendationengineV1beta1BigQuerySource - BigQuery source import data from.
 */
public class GoogleCloudRecommendationengineV1beta1BigQuerySource {
    /**
     * Optional. The schema to use when parsing the data from the source. Supported values for catalog imports: 1: "catalog_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#json (Default for catalogItems.import) 2: "catalog_merchant_center" using https://cloud.google.com/recommendations-ai/docs/upload-catalog#mc Supported values for user event imports: 1: "user_events_recommendations_ai" using https://cloud.google.com/recommendations-ai/docs/manage-user-events#import (Default for userEvents.import) 2. "user_events_ga360" using https://support.google.com/analytics/answer/3437719?hl=en
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataSchema")
    public String dataSchema;

    public GoogleCloudRecommendationengineV1beta1BigQuerySource withDataSchema(String dataSchema) {
        this.dataSchema = dataSchema;
        return this;
    }
    
    /**
     * Required. The BigQuery data set to copy the data from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("datasetId")
    public String datasetId;

    public GoogleCloudRecommendationengineV1beta1BigQuerySource withDatasetId(String datasetId) {
        this.datasetId = datasetId;
        return this;
    }
    
    /**
     * Optional. Intermediate Cloud Storage directory used for the import. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gcsStagingDir")
    public String gcsStagingDir;

    public GoogleCloudRecommendationengineV1beta1BigQuerySource withGcsStagingDir(String gcsStagingDir) {
        this.gcsStagingDir = gcsStagingDir;
        return this;
    }
    
    /**
     * Optional. The project id (can be project # or id) that the BigQuery source is in. If not specified, inherits the project id from the parent request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projectId")
    public String projectId;

    public GoogleCloudRecommendationengineV1beta1BigQuerySource withProjectId(String projectId) {
        this.projectId = projectId;
        return this;
    }
    
    /**
     * Required. The BigQuery table to copy the data from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableId")
    public String tableId;

    public GoogleCloudRecommendationengineV1beta1BigQuerySource withTableId(String tableId) {
        this.tableId = tableId;
        return this;
    }
    
    public GoogleCloudRecommendationengineV1beta1BigQuerySource(){}
}
