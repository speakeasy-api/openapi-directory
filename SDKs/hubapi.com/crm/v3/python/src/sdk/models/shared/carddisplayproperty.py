"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import displayoption as shared_displayoption
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class CardDisplayPropertyDataTypeEnum(str, Enum):
    r"""Type of data represented by this property."""
    BOOLEAN = 'BOOLEAN'
    CURRENCY = 'CURRENCY'
    DATE = 'DATE'
    DATETIME = 'DATETIME'
    EMAIL = 'EMAIL'
    LINK = 'LINK'
    NUMERIC = 'NUMERIC'
    STRING = 'STRING'
    STATUS = 'STATUS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardDisplayProperty:
    r"""Definition for a card display property."""
    
    data_type: CardDisplayPropertyDataTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataType') }})
    r"""Type of data represented by this property."""  
    label: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label') }})
    r"""The label for this property as you'd like it displayed to users."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""An internal identifier for this property. This value must be unique TODO."""  
    options: list[shared_displayoption.DisplayOption] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options') }})
    r"""An array of available options that can be displayed. Only used in when `dataType` is `STATUS`."""  
    