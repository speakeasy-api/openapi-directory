/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ClusterInput - A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance.
 */
public class ClusterInput {
    /**
     * Configuration for a cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusterConfig")
    public ClusterConfig clusterConfig;
    public ClusterInput withClusterConfig(ClusterConfig clusterConfig) {
        this.clusterConfig = clusterConfig;
        return this;
    }
    
    /**
     * Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultStorageType")
    public ClusterDefaultStorageTypeEnum defaultStorageType;
    public ClusterInput withDefaultStorageType(ClusterDefaultStorageTypeEnum defaultStorageType) {
        this.defaultStorageType = defaultStorageType;
        return this;
    }
    
    /**
     * Cloud Key Management Service (Cloud KMS) settings for a CMEK-protected cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionConfig")
    public EncryptionConfig encryptionConfig;
    public ClusterInput withEncryptionConfig(EncryptionConfig encryptionConfig) {
        this.encryptionConfig = encryptionConfig;
        return this;
    }
    
    /**
     * Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public ClusterInput withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ClusterInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serveNodes")
    public Integer serveNodes;
    public ClusterInput withServeNodes(Integer serveNodes) {
        this.serveNodes = serveNodes;
        return this;
    }
    
}
