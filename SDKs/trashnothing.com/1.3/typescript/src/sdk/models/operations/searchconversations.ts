/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class SearchConversationsRequest extends SpeakeasyBase {
  /**
   * Client device pixel ratio used to determine thumbnail size (default 1.0).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=device_pixel_ratio",
  })
  devicePixelRatio?: number;

  /**
   * The page of conversations to return.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of conversations to return per page (must be >= 1 and <= 30).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The search query used to find conversations and messages.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search: string;
}

/**
 * The conversations and paging data.
 */
export class SearchConversations200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Conversation })
  @Expose({ name: "conversations" })
  @Type(() => shared.Conversation)
  conversations?: shared.Conversation[];

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "per_page" })
  perPage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "search" })
  search?: string;
}

export class SearchConversationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The conversations and paging data.
   */
  @SpeakeasyMetadata()
  searchConversations200ApplicationJSONObject?: SearchConversations200ApplicationJSON;
}
