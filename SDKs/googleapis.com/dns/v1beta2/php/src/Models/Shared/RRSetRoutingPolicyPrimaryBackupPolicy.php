<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RRSetRoutingPolicyPrimaryBackupPolicy - Configures a RRSetRoutingPolicy such that all queries are responded with the primary_targets if they are healthy. And if all of them are unhealthy, then we fallback to a geo localized policy.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RRSetRoutingPolicyPrimaryBackupPolicy
{
    /**
     * Configures a RRSetRoutingPolicy that routes based on the geo location of the querying user.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RRSetRoutingPolicyGeoPolicy $backupGeoTargets
     */
	#[\JMS\Serializer\Annotation\SerializedName('backupGeoTargets')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RRSetRoutingPolicyGeoPolicy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RRSetRoutingPolicyGeoPolicy $backupGeoTargets = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * HealthCheckTargets describes endpoints to health-check when responding to Routing Policy queries. Only the healthy endpoints will be included in the response.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RRSetRoutingPolicyHealthCheckTargets $primaryTargets
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryTargets')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RRSetRoutingPolicyHealthCheckTargets')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RRSetRoutingPolicyHealthCheckTargets $primaryTargets = null;
    
    /**
     * When serving state is PRIMARY, this field provides the option of sending a small percentage of the traffic to the backup targets.
     * 
     * @var ?float $trickleTraffic
     */
	#[\JMS\Serializer\Annotation\SerializedName('trickleTraffic')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $trickleTraffic = null;
    
	public function __construct()
	{
		$this->backupGeoTargets = null;
		$this->kind = null;
		$this->primaryTargets = null;
		$this->trickleTraffic = null;
	}
}
