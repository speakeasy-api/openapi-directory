/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BoundingPoly } from "./boundingpoly";
import { Expose, Type } from "class-transformer";

/**
 * Annotation details for image object detection.
 */
export class ImageObjectDetectionAnnotation extends SpeakeasyBase {
  /**
   * A bounding polygon of a detected object on a plane. On output both vertices and normalized_vertices are provided. The polygon is formed by connecting vertices in the order they are listed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boundingBox" })
  @Type(() => BoundingPoly)
  boundingBox?: BoundingPoly;

  /**
   * Output only. The confidence that this annotation is positive for the parent example, value in [0, 1], higher means higher positivity confidence.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score?: number;
}
