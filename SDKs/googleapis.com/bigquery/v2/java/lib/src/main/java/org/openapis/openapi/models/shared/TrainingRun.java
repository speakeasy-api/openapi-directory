/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TrainingRun - Information about a single training query run for the model.
 */
public class TrainingRun {
    /**
     * Output only. Global explanation contains the explanation of top features on the class level. Applies to classification models only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classLevelGlobalExplanations")
    public GlobalExplanation[] classLevelGlobalExplanations;

    public TrainingRun withClassLevelGlobalExplanations(GlobalExplanation[] classLevelGlobalExplanations) {
        this.classLevelGlobalExplanations = classLevelGlobalExplanations;
        return this;
    }
    
    /**
     * Data split result. This contains references to the training and evaluation data tables that were used to train the model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataSplitResult")
    public DataSplitResult dataSplitResult;

    public TrainingRun withDataSplitResult(DataSplitResult dataSplitResult) {
        this.dataSplitResult = dataSplitResult;
        return this;
    }
    
    /**
     * Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("evaluationMetrics")
    public EvaluationMetrics evaluationMetrics;

    public TrainingRun withEvaluationMetrics(EvaluationMetrics evaluationMetrics) {
        this.evaluationMetrics = evaluationMetrics;
        return this;
    }
    
    /**
     * Global explanations containing the top most important features after training.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modelLevelGlobalExplanation")
    public GlobalExplanation modelLevelGlobalExplanation;

    public TrainingRun withModelLevelGlobalExplanation(GlobalExplanation modelLevelGlobalExplanation) {
        this.modelLevelGlobalExplanation = modelLevelGlobalExplanation;
        return this;
    }
    
    /**
     * Output only. Output of each iteration run, results.size() &lt;= max_iterations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("results")
    public IterationResult[] results;

    public TrainingRun withResults(IterationResult[] results) {
        this.results = results;
        return this;
    }
    
    /**
     * Output only. The start time of this training run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public TrainingRun withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Options used in model training.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trainingOptions")
    public TrainingOptions trainingOptions;

    public TrainingRun withTrainingOptions(TrainingOptions trainingOptions) {
        this.trainingOptions = trainingOptions;
        return this;
    }
    
    /**
     * Output only. The start time of this training run, in milliseconds since epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trainingStartTime")
    public String trainingStartTime;

    public TrainingRun withTrainingStartTime(String trainingStartTime) {
        this.trainingStartTime = trainingStartTime;
        return this;
    }
    
    /**
     * The model id in the [Vertex AI Model Registry](https://cloud.google.com/vertex-ai/docs/model-registry/introduction) for this training run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vertexAiModelId")
    public String vertexAiModelId;

    public TrainingRun withVertexAiModelId(String vertexAiModelId) {
        this.vertexAiModelId = vertexAiModelId;
        return this;
    }
    
    /**
     * Output only. The model version in the [Vertex AI Model Registry](https://cloud.google.com/vertex-ai/docs/model-registry/introduction) for this training run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vertexAiModelVersion")
    public String vertexAiModelVersion;

    public TrainingRun withVertexAiModelVersion(String vertexAiModelVersion) {
        this.vertexAiModelVersion = vertexAiModelVersion;
        return this;
    }
    
    public TrainingRun(){}
}
