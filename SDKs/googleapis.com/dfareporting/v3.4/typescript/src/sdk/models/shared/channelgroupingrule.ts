/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DisjunctiveMatchStatement } from "./disjunctivematchstatement";
import { Expose, Type } from "class-transformer";

/**
 * Represents a DfaReporting channel grouping rule.
 */
export class ChannelGroupingRule extends SpeakeasyBase {
  /**
   * The disjunctive match statements contained within this rule.
   */
  @SpeakeasyMetadata({ elemType: DisjunctiveMatchStatement })
  @Expose({ name: "disjunctiveMatchStatements" })
  @Type(() => DisjunctiveMatchStatement)
  disjunctiveMatchStatements?: DisjunctiveMatchStatement[];

  /**
   * The kind of resource this is, in this case dfareporting#channelGroupingRule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Rule name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
