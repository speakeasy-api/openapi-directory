// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DisableEnhancedMonitoringXAmzTargetEnum
type DisableEnhancedMonitoringXAmzTargetEnum string

const (
	DisableEnhancedMonitoringXAmzTargetEnumKinesis20131202DisableEnhancedMonitoring DisableEnhancedMonitoringXAmzTargetEnum = "Kinesis_20131202.DisableEnhancedMonitoring"
)

func (e *DisableEnhancedMonitoringXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Kinesis_20131202.DisableEnhancedMonitoring":
		*e = DisableEnhancedMonitoringXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisableEnhancedMonitoringXAmzTargetEnum: %s", s)
	}
}

type DisableEnhancedMonitoringRequest struct {
	DisableEnhancedMonitoringInput shared.DisableEnhancedMonitoringInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     DisableEnhancedMonitoringXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisableEnhancedMonitoringResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	EnhancedMonitoringOutput *shared.EnhancedMonitoringOutput
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
