// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type OrgInvitationsCreateSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// OrgInvitationsCreateRequestBodyRoleEnum - The user's role
type OrgInvitationsCreateRequestBodyRoleEnum string

const (
	OrgInvitationsCreateRequestBodyRoleEnumAdmin        OrgInvitationsCreateRequestBodyRoleEnum = "admin"
	OrgInvitationsCreateRequestBodyRoleEnumCollaborator OrgInvitationsCreateRequestBodyRoleEnum = "collaborator"
	OrgInvitationsCreateRequestBodyRoleEnumMember       OrgInvitationsCreateRequestBodyRoleEnum = "member"
)

func (e OrgInvitationsCreateRequestBodyRoleEnum) ToPointer() *OrgInvitationsCreateRequestBodyRoleEnum {
	return &e
}

func (e *OrgInvitationsCreateRequestBodyRoleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "admin":
		fallthrough
	case "collaborator":
		fallthrough
	case "member":
		*e = OrgInvitationsCreateRequestBodyRoleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrgInvitationsCreateRequestBodyRoleEnum: %v", v)
	}
}

// OrgInvitationsCreateRequestBody - The email of the user to invite
type OrgInvitationsCreateRequestBody struct {
	// The user's role
	Role *OrgInvitationsCreateRequestBodyRoleEnum `json:"role,omitempty"`
	// The user's email address
	UserEmail string `json:"user_email"`
}

type OrgInvitationsCreateRequest struct {
	// The email of the user to invite
	RequestBody OrgInvitationsCreateRequestBody `request:"mediaType=application/json"`
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
}

type OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum string

const (
	OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnumBadRequest          OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnumConflict            OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "Conflict"
	OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnumNotAcceptable       OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnumNotFound            OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "NotFound"
	OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnumInternalServerError OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnumUnauthorized        OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnumTooManyRequests     OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum) ToPointer() *OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type OrgInvitationsCreateDefaultApplicationJSONError struct {
	Code    OrgInvitationsCreateDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                  `json:"message"`
}

// OrgInvitationsCreateDefaultApplicationJSON - Error
type OrgInvitationsCreateDefaultApplicationJSON struct {
	Error OrgInvitationsCreateDefaultApplicationJSONError `json:"error"`
}

type OrgInvitationsCreateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	OrgInvitationsCreateDefaultApplicationJSONObject *OrgInvitationsCreateDefaultApplicationJSON
}
