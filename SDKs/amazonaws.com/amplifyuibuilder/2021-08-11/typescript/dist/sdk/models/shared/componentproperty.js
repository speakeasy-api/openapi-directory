"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentProperty = void 0;
var utils_1 = require("../../../internal/utils");
var componentconditionproperty_1 = require("./componentconditionproperty");
var componentpropertybindingproperties_1 = require("./componentpropertybindingproperties");
var formbindingelement_1 = require("./formbindingelement");
var class_transformer_1 = require("class-transformer");
/**
 * Describes the configuration for all of a component's properties. Use <code>ComponentProperty</code> to specify the values to render or bind by default.
 */
var ComponentProperty = /** @class */ (function (_super) {
    __extends(ComponentProperty, _super);
    function ComponentProperty() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bindingProperties" }),
        (0, class_transformer_1.Type)(function () { return componentpropertybindingproperties_1.ComponentPropertyBindingProperties; }),
        __metadata("design:type", componentpropertybindingproperties_1.ComponentPropertyBindingProperties)
    ], ComponentProperty.prototype, "bindingProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: formbindingelement_1.FormBindingElement }),
        (0, class_transformer_1.Expose)({ name: "bindings" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], formbindingelement_1.FormBindingElement);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], ComponentProperty.prototype, "bindings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "collectionBindingProperties" }),
        (0, class_transformer_1.Type)(function () { return componentpropertybindingproperties_1.ComponentPropertyBindingProperties; }),
        __metadata("design:type", componentpropertybindingproperties_1.ComponentPropertyBindingProperties)
    ], ComponentProperty.prototype, "collectionBindingProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "componentName" }),
        __metadata("design:type", String)
    ], ComponentProperty.prototype, "componentName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ComponentProperty }),
        (0, class_transformer_1.Expose)({ name: "concat" }),
        (0, class_transformer_1.Type)(function () { return ComponentProperty; }),
        __metadata("design:type", Array)
    ], ComponentProperty.prototype, "concat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "condition" }),
        (0, class_transformer_1.Type)(function () { return componentconditionproperty_1.ComponentConditionProperty; }),
        __metadata("design:type", componentconditionproperty_1.ComponentConditionProperty)
    ], ComponentProperty.prototype, "condition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "configured" }),
        __metadata("design:type", Boolean)
    ], ComponentProperty.prototype, "configured", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultValue" }),
        __metadata("design:type", String)
    ], ComponentProperty.prototype, "defaultValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "event" }),
        __metadata("design:type", String)
    ], ComponentProperty.prototype, "event", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "importedValue" }),
        __metadata("design:type", String)
    ], ComponentProperty.prototype, "importedValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "model" }),
        __metadata("design:type", String)
    ], ComponentProperty.prototype, "model", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "property" }),
        __metadata("design:type", String)
    ], ComponentProperty.prototype, "property", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], ComponentProperty.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userAttribute" }),
        __metadata("design:type", String)
    ], ComponentProperty.prototype, "userAttribute", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], ComponentProperty.prototype, "value", void 0);
    return ComponentProperty;
}(utils_1.SpeakeasyBase));
exports.ComponentProperty = ComponentProperty;
