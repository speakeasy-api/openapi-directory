// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type WebinarRegistrantsSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type WebinarRegistrantsPathParams struct {
	// The webinar ID in "**long**" format(represented as int64 data type in JSON).
	WebinarID int64 `pathParam:"style=simple,explode=false,name=webinarId"`
}

// WebinarRegistrantsStatusEnum - The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.
type WebinarRegistrantsStatusEnum string

const (
	WebinarRegistrantsStatusEnumPending  WebinarRegistrantsStatusEnum = "pending"
	WebinarRegistrantsStatusEnumApproved WebinarRegistrantsStatusEnum = "approved"
	WebinarRegistrantsStatusEnumDenied   WebinarRegistrantsStatusEnum = "denied"
)

func (e *WebinarRegistrantsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "approved":
		fallthrough
	case "denied":
		*e = WebinarRegistrantsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WebinarRegistrantsStatusEnum: %s", s)
	}
}

type WebinarRegistrantsQueryParams struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The meeting occurrence ID.
	OccurrenceID *string `queryParam:"style=form,explode=true,name=occurrence_id"`
	// **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
	//
	// The page number of the current page in the returned records.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page_number"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// The registrant status:<br>`pending` - Registrant's status is pending.<br>`approved` - Registrant's status is approved.<br>`denied` - Registrant's status is denied.
	Status *WebinarRegistrantsStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// The tracking source ID for the registrants. Useful if you share the webinar registration page in multiple locations. See [Creating source tracking links for webinar registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration) for details.
	TrackingSourceID *string `queryParam:"style=form,explode=true,name=tracking_source_id"`
}

type WebinarRegistrantsRequest struct {
	PathParams  WebinarRegistrantsPathParams
	QueryParams WebinarRegistrantsQueryParams
	Security    WebinarRegistrantsSecurity
}

// WebinarRegistrantsRegistrationListRegistrantsCustomQuestions - Custom Question.
type WebinarRegistrantsRegistrationListRegistrantsCustomQuestions struct {
	Title *string `json:"title,omitempty"`
	Value *string `json:"value,omitempty"`
}

// WebinarRegistrantsRegistrationListRegistrants - Registrant base object.
type WebinarRegistrantsRegistrationListRegistrants struct {
	// Registrant's address.
	Address *string `json:"address,omitempty"`
	// Registrant's city.
	City *string `json:"city,omitempty"`
	// A field that allows registrants to provide any questions or comments that they might have.
	Comments *string `json:"comments,omitempty"`
	// Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
	Country *string `json:"country,omitempty"`
	// The time at which the registrant registered.
	CreateTime *time.Time `json:"create_time,omitempty"`
	// Custom questions.
	CustomQuestions []WebinarRegistrantsRegistrationListRegistrantsCustomQuestions `json:"custom_questions,omitempty"`
	// A valid email address of the registrant.
	Email string `json:"email"`
	// Registrant's first name.
	FirstName string `json:"first_name"`
	// Registrant ID.
	ID *string `json:"id,omitempty"`
	// Registrant's Industry.
	Industry *string `json:"industry,omitempty"`
	// Registrant's job title.
	JobTitle *string `json:"job_title,omitempty"`
	// The URL using which an approved registrant can join the webinar.
	JoinURL *string `json:"join_url,omitempty"`
	// Registrant's last name.
	LastName *string `json:"last_name,omitempty"`
	// Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
	NoOfEmployees *string `json:"no_of_employees,omitempty"`
	// Registrant's Organization.
	Org *string `json:"org,omitempty"`
	// Registrant's Phone number.
	Phone *string `json:"phone,omitempty"`
	// This field can be included to gauge interest of webinar attendees towards buying your product or service.
	//
	// Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
	PurchasingTimeFrame *string `json:"purchasing_time_frame,omitempty"`
	// Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
	RoleInPurchaseProcess *string `json:"role_in_purchase_process,omitempty"`
	// Registrant's State/Province.
	State *string `json:"state,omitempty"`
	// The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar.
	Status *string `json:"status,omitempty"`
	// Registrant's Zip/Postal Code.
	Zip *string `json:"zip,omitempty"`
}

// WebinarRegistrantsRegistrationList - Pagination Object.
type WebinarRegistrantsRegistrationList struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of pages returned for the request made.
	PageCount *int64 `json:"page_count,omitempty"`
	// **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
	//
	// The page number of the current results.
	PageNumber *int64 `json:"page_number,omitempty"`
	// The number of records returned with a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// List of registrant objects.
	Registrants []WebinarRegistrantsRegistrationListRegistrants `json:"registrants,omitempty"`
	// The total number of all the records available across pages.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type WebinarRegistrantsResponse struct {
	Body        []byte
	ContentType string
	// **HTTP Status Code:** `200`<br>
	// Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.
	RegistrationList *WebinarRegistrantsRegistrationList
	StatusCode       int
	RawResponse      *http.Response
}
