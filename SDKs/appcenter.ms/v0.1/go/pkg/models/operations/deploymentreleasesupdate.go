// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DeploymentReleasesUpdateSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// DeploymentReleasesUpdateRequestBody - Release modification. All fields are optional and only provided fields will get updated.
type DeploymentReleasesUpdateRequestBody struct {
	Description       *string `json:"description,omitempty"`
	IsDisabled        *bool   `json:"is_disabled,omitempty"`
	IsMandatory       *bool   `json:"is_mandatory,omitempty"`
	Rollout           *int64  `json:"rollout,omitempty"`
	TargetBinaryRange *string `json:"target_binary_range,omitempty"`
}

type DeploymentReleasesUpdateRequest struct {
	// Release modification. All fields are optional and only provided fields will get updated.
	RequestBody DeploymentReleasesUpdateRequestBody `request:"mediaType=application/json"`
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// deployment name
	DeploymentName string `pathParam:"style=simple,explode=false,name=deployment_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// release label
	ReleaseLabel string `pathParam:"style=simple,explode=false,name=release_label"`
}

// DeploymentReleasesUpdateDefaultApplicationJSON - Error
type DeploymentReleasesUpdateDefaultApplicationJSON struct {
	Message string `json:"message"`
}

type DeploymentReleasesUpdate200ApplicationJSONDiffPackageMap struct {
	Size float64 `json:"size"`
	URL  string  `json:"url"`
}

// DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum - The release method is unknown if unspecified
type DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum string

const (
	DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnumUpload   DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum = "Upload"
	DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnumPromote  DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum = "Promote"
	DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnumRollback DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum = "Rollback"
)

func (e *DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Upload":
		fallthrough
	case "Promote":
		fallthrough
	case "Rollback":
		*e = DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum: %s", s)
	}
}

// DeploymentReleasesUpdate200ApplicationJSON - Success
type DeploymentReleasesUpdate200ApplicationJSON struct {
	BlobURL        *string                                                             `json:"blob_url,omitempty"`
	Description    *string                                                             `json:"description,omitempty"`
	DiffPackageMap map[string]DeploymentReleasesUpdate200ApplicationJSONDiffPackageMap `json:"diff_package_map,omitempty"`
	IsDisabled     *bool                                                               `json:"is_disabled,omitempty"`
	IsMandatory    *bool                                                               `json:"is_mandatory,omitempty"`
	Label          *string                                                             `json:"label,omitempty"`
	// Set on 'Promote'
	OriginalDeployment *string `json:"original_deployment,omitempty"`
	// Set on 'Promote' and 'Rollback'
	OriginalLabel *string `json:"original_label,omitempty"`
	PackageHash   *string `json:"package_hash,omitempty"`
	// The release method is unknown if unspecified
	ReleaseMethod     *DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum `json:"release_method,omitempty"`
	ReleasedBy        *string                                                      `json:"released_by,omitempty"`
	Rollout           *int64                                                       `json:"rollout,omitempty"`
	Size              *float64                                                     `json:"size,omitempty"`
	TargetBinaryRange *string                                                      `json:"target_binary_range,omitempty"`
	UploadTime        *int64                                                       `json:"upload_time,omitempty"`
}

type DeploymentReleasesUpdateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	DeploymentReleasesUpdate200ApplicationJSONObject *DeploymentReleasesUpdate200ApplicationJSON
	// Error
	DeploymentReleasesUpdateDefaultApplicationJSONObject *DeploymentReleasesUpdateDefaultApplicationJSON
}
