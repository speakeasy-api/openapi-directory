/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListPermissionsQueryParams {
    /**
     * (Optional) Limits the results to only the group that matches this ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=groupId")
    public String groupId;
    public ListPermissionsQueryParams withGroupId(String groupId) {
        this.groupId = groupId;
        return this;
    }
    
    /**
     * The maximum number of results to include in the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;
    public ListPermissionsQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The token to use when requesting the next set of results. You received this token from a previous &lt;code&gt;ListPermissions&lt;/code&gt; operation.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=nextToken")
    public String nextToken;
    public ListPermissionsQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * (Optional) Limits the results to only the user that matches this ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userId")
    public String userId;
    public ListPermissionsQueryParams withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * (Optional) If you specify &lt;code&gt;SSO_USER&lt;/code&gt;, then only the permissions of IAM Identity Center users are returned. If you specify &lt;code&gt;SSO_GROUP&lt;/code&gt;, only the permissions of IAM Identity Center groups are returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userType")
    public ListPermissionsUserTypeEnum userType;
    public ListPermissionsQueryParams withUserType(ListPermissionsUserTypeEnum userType) {
        this.userType = userType;
        return this;
    }
    
}
