/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export enum GetStoredCredentialProfilesResponseProfilesConsentAgreementSrcEnum {
  External = "External",
}

/**
 * The status of the stored credential profile.
 *
 * @remarks
 *
 * * `Agreed` - The stored credential profile has not been validated via an authorization transaction with the payment gateway.
 * * `Active` - The stored credential profile has been validated via an authorization transaction with the payment gateway.
 * * `Cancelled` - The stored credentials are no longer valid, per a customer request. Zuora cannot use the stored credentials in transactions.
 * * `Expired` - The stored credentials are no longer valid, per an expiration policy in the stored credential transaction framework. Zuora cannot use the stored credentials in transactions.
 *
 */
export enum GetStoredCredentialProfilesResponseProfilesStatusEnum {
  Agreed = "Agreed",
  Active = "Active",
  Cancelled = "Cancelled",
  Expired = "Expired",
}

export enum GetStoredCredentialProfilesResponseProfilesTypeEnum {
  Recurring = "Recurring",
  Unscheduled = "Unscheduled",
}

/**
 * Container for stored credential profiles.
 *
 * @remarks
 *
 */
export class GetStoredCredentialProfilesResponseProfiles extends SpeakeasyBase {
  /**
   * The date when the stored credential profile was activated (if applicable).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activatedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  activatedOn?: Date;

  /**
   * The date when the stored credential profile was created.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "agreedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  agreedOn?: Date;

  /**
   * The stored credential transaction framework. For example, Visa.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brand" })
  brand?: string;

  /**
   * The date when the stored credential profile was cancelled (if applicable).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancelledOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  cancelledOn?: Date;

  /**
   * Your reference for the consent agreement that you have established with the customer.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consentAgreementRef" })
  consentAgreementRef?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "consentAgreementSrc" })
  consentAgreementSrc?: GetStoredCredentialProfilesResponseProfilesConsentAgreementSrcEnum;

  /**
   * The date when the stored credential profile was expired (if applicable).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiredOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiredOn?: Date;

  /**
   * The number that identifies the stored credential profile within the payment method.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: number;

  /**
   * ID of the payment method.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentMethodId" })
  paymentMethodId?: string;

  /**
   * The status of the stored credential profile.
   *
   * @remarks
   *
   * * `Agreed` - The stored credential profile has not been validated via an authorization transaction with the payment gateway.
   * * `Active` - The stored credential profile has been validated via an authorization transaction with the payment gateway.
   * * `Cancelled` - The stored credentials are no longer valid, per a customer request. Zuora cannot use the stored credentials in transactions.
   * * `Expired` - The stored credentials are no longer valid, per an expiration policy in the stored credential transaction framework. Zuora cannot use the stored credentials in transactions.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetStoredCredentialProfilesResponseProfilesStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetStoredCredentialProfilesResponseProfilesTypeEnum;
}

export class GetStoredCredentialProfilesResponse extends SpeakeasyBase {
  /**
   * Container for stored credential profiles.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profiles" })
  @Type(() => GetStoredCredentialProfilesResponseProfiles)
  profiles?: GetStoredCredentialProfilesResponseProfiles;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;
}
