/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorkerPool - Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.
 */
public class WorkerPool {
    /**
     * Output only. Time at which the request to create the `WorkerPool` was received.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public WorkerPool withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. Time at which the request to delete the `WorkerPool` was received.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteTime")
    public String deleteTime;
    public WorkerPool withDeleteTime(String deleteTime) {
        this.deleteTime = deleteTime;
        return this;
    }
    
    /**
     * User-defined name of the `WorkerPool`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public WorkerPool withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The project ID of the GCP project for which the `WorkerPool` is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projectId")
    public String projectId;
    public WorkerPool withProjectId(String projectId) {
        this.projectId = projectId;
        return this;
    }
    
    /**
     * List of regions to create the `WorkerPool`. Regions can't be empty. If Cloud Build adds a new GCP region in the future, the existing `WorkerPool` will not be enabled in the new region automatically; you must add the new region to the `regions` field to enable the `WorkerPool` in that region.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regions")
    public WorkerPoolRegionsEnum[] regions;
    public WorkerPool withRegions(WorkerPoolRegionsEnum[] regions) {
        this.regions = regions;
        return this;
    }
    
    /**
     * Output only. The service account used to manage the `WorkerPool`. The service account must have the Compute Instance Admin (Beta) permission at the project level.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccountEmail")
    public String serviceAccountEmail;
    public WorkerPool withServiceAccountEmail(String serviceAccountEmail) {
        this.serviceAccountEmail = serviceAccountEmail;
        return this;
    }
    
    /**
     * Output only. WorkerPool Status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public WorkerPoolStatusEnum status;
    public WorkerPool withStatus(WorkerPoolStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Output only. Time at which the request to update the `WorkerPool` was received.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public WorkerPool withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * WorkerConfig defines the configuration to be used for a creating workers in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workerConfig")
    public WorkerConfig workerConfig;
    public WorkerPool withWorkerConfig(WorkerConfig workerConfig) {
        this.workerConfig = workerConfig;
        return this;
    }
    
    /**
     * Total number of workers to be created across all requested regions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workerCount")
    public String workerCount;
    public WorkerPool withWorkerCount(String workerCount) {
        this.workerCount = workerCount;
        return this;
    }
    
}
