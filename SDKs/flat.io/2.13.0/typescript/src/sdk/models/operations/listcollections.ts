/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListCollectionsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

/**
 * Sort direction
 */
export enum ListCollectionsDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * Sort
 */
export enum ListCollectionsSortEnum {
  CreationDate = "creationDate",
  Title = "title",
}

export class ListCollectionsRequest extends SpeakeasyBase {
  /**
   * Sort direction
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: ListCollectionsDirectionEnum;

  /**
   * This is the maximum number of objects that may be returned
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * An opaque string cursor to fetch the next page of data.
   *
   * @remarks
   * The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=next" })
  next?: string;

  /**
   * List the collection contained in this `parent` collection.
   *
   * @remarks
   *
   * This option doesn't provide a complete multi-level collection support.
   * When sharing a collection with someone, this one will have as `parent` `sharedWithMe`.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parent",
  })
  parent?: string;

  /**
   * An opaque string cursor to fetch the previous page of data.
   *
   * @remarks
   * The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=previous",
  })
  previous?: string;

  /**
   * Sort
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: ListCollectionsSortEnum;
}

export class ListCollectionsResponse extends SpeakeasyBase {
  /**
   * List of collections
   */
  @SpeakeasyMetadata({ elemType: shared.Collection })
  collections?: shared.Collection[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  flatErrorResponse?: shared.FlatErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
