"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TranslationsResource:
    
    detected_source_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detectedSourceLanguage'), 'exclude': lambda f: f is None }})
    r"""The source language of the initial request, detected automatically, if
    no source language was passed within the initial request. If the
    source language was passed, auto-detection of the language will not
    occur and this field will be empty.
    """  
    model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is None }})
    r"""The `model` type used for this translation. Valid values are
    listed in public documentation. Can be different from requested `model`.
    Present only if specific model type was explicitly requested.
    """  
    translated_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('translatedText'), 'exclude': lambda f: f is None }})
    r"""Text translated into the target language."""  
    