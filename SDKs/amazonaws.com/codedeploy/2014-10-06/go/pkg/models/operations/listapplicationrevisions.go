// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListApplicationRevisionsQueryParams struct {
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

// ListApplicationRevisionsXAmzTargetEnum
type ListApplicationRevisionsXAmzTargetEnum string

const (
	ListApplicationRevisionsXAmzTargetEnumCodeDeploy20141006ListApplicationRevisions ListApplicationRevisionsXAmzTargetEnum = "CodeDeploy_20141006.ListApplicationRevisions"
)

func (e *ListApplicationRevisionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeDeploy_20141006.ListApplicationRevisions":
		*e = ListApplicationRevisionsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListApplicationRevisionsXAmzTargetEnum: %s", s)
	}
}

type ListApplicationRevisionsHeaders struct {
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListApplicationRevisionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListApplicationRevisionsRequest struct {
	QueryParams ListApplicationRevisionsQueryParams
	Headers     ListApplicationRevisionsHeaders
	Request     shared.ListApplicationRevisionsInput `request:"mediaType=application/json"`
}

type ListApplicationRevisionsResponse struct {
	// ApplicationDoesNotExistException
	ApplicationDoesNotExistException interface{}
	// ApplicationNameRequiredException
	ApplicationNameRequiredException interface{}
	// BucketNameFilterRequiredException
	BucketNameFilterRequiredException interface{}
	ContentType                       string
	// InvalidApplicationNameException
	InvalidApplicationNameException interface{}
	// InvalidBucketNameFilterException
	InvalidBucketNameFilterException interface{}
	// InvalidDeployedStateFilterException
	InvalidDeployedStateFilterException interface{}
	// InvalidKeyPrefixFilterException
	InvalidKeyPrefixFilterException interface{}
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// InvalidSortByException
	InvalidSortByException interface{}
	// InvalidSortOrderException
	InvalidSortOrderException interface{}
	// Success
	ListApplicationRevisionsOutput *shared.ListApplicationRevisionsOutput
	StatusCode                     int
	RawResponse                    *http.Response
}
