"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import analyticsmetadatatype as shared_analyticsmetadatatype
from ..shared import authflowtype_enum as shared_authflowtype_enum
from ..shared import usercontextdatatype as shared_usercontextdatatype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InitiateAuthRequest:
    r"""Initiates the authentication request."""
    
    auth_flow: shared_authflowtype_enum.AuthFlowTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AuthFlow') }})  
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientId') }})  
    analytics_metadata: Optional[shared_analyticsmetadatatype.AnalyticsMetadataType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AnalyticsMetadata'), 'exclude': lambda f: f is None }})  
    auth_parameters: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AuthParameters'), 'exclude': lambda f: f is None }})  
    client_metadata: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientMetadata'), 'exclude': lambda f: f is None }})  
    user_context_data: Optional[shared_usercontextdatatype.UserContextDataType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UserContextData'), 'exclude': lambda f: f is None }})  
    