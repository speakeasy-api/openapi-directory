// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RecipientDeliveryTypeEnum - The delivery type for the recipient.
type RecipientDeliveryTypeEnum string

const (
	RecipientDeliveryTypeEnumLink       RecipientDeliveryTypeEnum = "LINK"
	RecipientDeliveryTypeEnumAttachment RecipientDeliveryTypeEnum = "ATTACHMENT"
)

func (e RecipientDeliveryTypeEnum) ToPointer() *RecipientDeliveryTypeEnum {
	return &e
}

func (e *RecipientDeliveryTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LINK":
		fallthrough
	case "ATTACHMENT":
		*e = RecipientDeliveryTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecipientDeliveryTypeEnum: %v", v)
	}
}

// Recipient - Represents a recipient.
type Recipient struct {
	// The delivery type for the recipient.
	DeliveryType *RecipientDeliveryTypeEnum `json:"deliveryType,omitempty"`
	// The email address of the recipient.
	Email *string `json:"email,omitempty"`
	// The kind of resource this is, in this case dfareporting#recipient.
	Kind *string `json:"kind,omitempty"`
}
