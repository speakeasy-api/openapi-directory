// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// QueryScheduleFrequencyEnum - How often the query is run.
type QueryScheduleFrequencyEnum string

const (
	QueryScheduleFrequencyEnumOneTime     QueryScheduleFrequencyEnum = "ONE_TIME"
	QueryScheduleFrequencyEnumDaily       QueryScheduleFrequencyEnum = "DAILY"
	QueryScheduleFrequencyEnumWeekly      QueryScheduleFrequencyEnum = "WEEKLY"
	QueryScheduleFrequencyEnumSemiMonthly QueryScheduleFrequencyEnum = "SEMI_MONTHLY"
	QueryScheduleFrequencyEnumMonthly     QueryScheduleFrequencyEnum = "MONTHLY"
	QueryScheduleFrequencyEnumQuarterly   QueryScheduleFrequencyEnum = "QUARTERLY"
	QueryScheduleFrequencyEnumYearly      QueryScheduleFrequencyEnum = "YEARLY"
)

func (e *QueryScheduleFrequencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ONE_TIME":
		fallthrough
	case "DAILY":
		fallthrough
	case "WEEKLY":
		fallthrough
	case "SEMI_MONTHLY":
		fallthrough
	case "MONTHLY":
		fallthrough
	case "QUARTERLY":
		fallthrough
	case "YEARLY":
		*e = QueryScheduleFrequencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryScheduleFrequencyEnum: %s", s)
	}
}

// QuerySchedule - Information on how frequently and when to run a query.
type QuerySchedule struct {
	// Datetime to periodically run the query until.
	EndTimeMs *string `json:"endTimeMs,omitempty"`
	// How often the query is run.
	Frequency *QueryScheduleFrequencyEnum `json:"frequency,omitempty"`
	// Time of day at which a new report will be generated, represented as minutes past midnight. Range is 0 to 1439. Only applies to scheduled reports.
	NextRunMinuteOfDay *int `json:"nextRunMinuteOfDay,omitempty"`
	// Canonical timezone code for report generation time. Defaults to America/New_York.
	NextRunTimezoneCode *string `json:"nextRunTimezoneCode,omitempty"`
	// When to start running the query. Not applicable to `ONE_TIME` frequency.
	StartTimeMs *string `json:"startTimeMs,omitempty"`
}
