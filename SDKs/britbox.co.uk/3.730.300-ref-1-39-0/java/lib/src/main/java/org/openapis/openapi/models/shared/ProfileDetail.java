/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * ProfileDetail - Details of the active profile.
 */
public class ProfileDetail {
    /**
     * A map of bookmarked itemIds =&gt; created date
     */
    @JsonProperty("bookmarked")
    public java.util.Map<String, OffsetDateTime> bookmarked;

    public ProfileDetail withBookmarked(java.util.Map<String, OffsetDateTime> bookmarked) {
        this.bookmarked = bookmarked;
        return this;
    }
    
    /**
     * Hex color value assigned to the profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("color")
    public String color;

    public ProfileDetail withColor(String color) {
        this.color = color;
        return this;
    }
    
    /**
     * Gets the Hero row clip auto playback enabled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("heroAutoplay")
    public Boolean heroAutoplay;

    public ProfileDetail withHeroAutoplay(Boolean heroAutoplay) {
        this.heroAutoplay = heroAutoplay;
        return this;
    }
    
    /**
     * Gets the Hero row clip auto playback audio enabled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("heroWithAudio")
    public Boolean heroWithAudio;

    public ProfileDetail withHeroWithAudio(Boolean heroWithAudio) {
        this.heroWithAudio = heroWithAudio;
        return this;
    }
    
    /**
     * The id of the profile.
     */
    @JsonProperty("id")
    public String id;

    public ProfileDetail withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether the profile is active or not.
     * 
     * **DEPRECATED** - Always true. Inactive profiles are no longer returned.
     * 
     */
    @JsonProperty("isActive")
    public Boolean isActive;

    public ProfileDetail withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    /**
     * The code of the preferred language for the profile.
     * Must be a valid ISO language code e.g. "en-US" and must match the code of
     * one of the languages specified in the app config.
     * See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageCode")
    public String languageCode;

    public ProfileDetail withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    /**
     * Whether the profile has opted in or out of marketing material.
     * 
     * **DEPRECATED** - Marketing material is no longer tied to profiles, only account. See `Account.marketingEnabled`.
     * 
     */
    @JsonProperty("marketingEnabled")
    public Boolean marketingEnabled;

    public ProfileDetail withMarketingEnabled(Boolean marketingEnabled) {
        this.marketingEnabled = marketingEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxRatingContentFilter")
    public ClassificationSummary maxRatingContentFilter;

    public ProfileDetail withMaxRatingContentFilter(ClassificationSummary maxRatingContentFilter) {
        this.maxRatingContentFilter = maxRatingContentFilter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minRatingPlaybackGuard")
    public ClassificationSummary minRatingPlaybackGuard;

    public ProfileDetail withMinRatingPlaybackGuard(ClassificationSummary minRatingPlaybackGuard) {
        this.minRatingPlaybackGuard = minRatingPlaybackGuard;
        return this;
    }
    
    /**
     * The unique name of the profile.
     */
    @JsonProperty("name")
    public String name;

    public ProfileDetail withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Whether a pin is required to enter the profile.
     */
    @JsonProperty("pinEnabled")
    public Boolean pinEnabled;

    public ProfileDetail withPinEnabled(Boolean pinEnabled) {
        this.pinEnabled = pinEnabled;
        return this;
    }
    
    /**
     * Whether the profile can make purchases with the account payment options.
     */
    @JsonProperty("purchaseEnabled")
    public Boolean purchaseEnabled;

    public ProfileDetail withPurchaseEnabled(Boolean purchaseEnabled) {
        this.purchaseEnabled = purchaseEnabled;
        return this;
    }
    
    /**
     * A map of rated itemIds =&gt; rating out of 10
     */
    @JsonProperty("rated")
    public java.util.Map<String, Integer> rated;

    public ProfileDetail withRated(java.util.Map<String, Integer> rated) {
        this.rated = rated;
        return this;
    }
    
    /**
     * The segments a profile has been placed under
     */
    @JsonProperty("segments")
    public String[] segments;

    public ProfileDetail withSegments(String[] segments) {
        this.segments = segments;
        return this;
    }
    
    /**
     * A map of watched itemIds =&gt; last watched position
     */
    @JsonProperty("watched")
    public java.util.Map<String, Watched> watched;

    public ProfileDetail withWatched(java.util.Map<String, Watched> watched) {
        this.watched = watched;
        return this;
    }
    
    public ProfileDetail(@JsonProperty("bookmarked") java.util.Map<String, OffsetDateTime> bookmarked, @JsonProperty("id") String id, @JsonProperty("isActive") Boolean isActive, @JsonProperty("marketingEnabled") Boolean marketingEnabled, @JsonProperty("name") String name, @JsonProperty("pinEnabled") Boolean pinEnabled, @JsonProperty("purchaseEnabled") Boolean purchaseEnabled, @JsonProperty("rated") java.util.Map<String, Integer> rated, @JsonProperty("segments") String[] segments, @JsonProperty("watched") java.util.Map<String, Watched> watched) {
        this.bookmarked = bookmarked;
        this.id = id;
        this.isActive = isActive;
        this.marketingEnabled = marketingEnabled;
        this.name = name;
        this.pinEnabled = pinEnabled;
        this.purchaseEnabled = purchaseEnabled;
        this.rated = rated;
        this.segments = segments;
        this.watched = watched;
  }
}
