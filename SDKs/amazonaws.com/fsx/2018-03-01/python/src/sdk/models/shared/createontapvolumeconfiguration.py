"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inputontapvolumetype_enum as shared_inputontapvolumetype_enum
from ..shared import securitystyle_enum as shared_securitystyle_enum
from ..shared import tieringpolicy as shared_tieringpolicy
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateOntapVolumeConfiguration:
    r"""Specifies the configuration of the ONTAP volume that you are creating."""
    
    size_in_megabytes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SizeInMegabytes') }})  
    storage_virtual_machine_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorageVirtualMachineId') }})  
    copy_tags_to_backups: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CopyTagsToBackups'), 'exclude': lambda f: f is None }})  
    junction_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JunctionPath'), 'exclude': lambda f: f is None }})  
    ontap_volume_type: Optional[shared_inputontapvolumetype_enum.InputOntapVolumeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OntapVolumeType'), 'exclude': lambda f: f is None }})  
    security_style: Optional[shared_securitystyle_enum.SecurityStyleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecurityStyle'), 'exclude': lambda f: f is None }})  
    snapshot_policy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SnapshotPolicy'), 'exclude': lambda f: f is None }})  
    storage_efficiency_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorageEfficiencyEnabled'), 'exclude': lambda f: f is None }})  
    tiering_policy: Optional[shared_tieringpolicy.TieringPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TieringPolicy'), 'exclude': lambda f: f is None }})
    r"""<p>Describes the data tiering policy for an ONTAP volume. When enabled, Amazon FSx for ONTAP's intelligent tiering automatically transitions a volume's data between the file system's primary storage and capacity pool storage based on your access patterns.</p> <p>Valid tiering policies are the following:</p> <ul> <li> <p> <code>SNAPSHOT_ONLY</code> - (Default value) moves cold snapshots to the capacity pool storage tier.</p> </li> </ul> <ul> <li> <p> <code>AUTO</code> - moves cold user data and snapshots to the capacity pool storage tier based on your access patterns.</p> </li> </ul> <ul> <li> <p> <code>ALL</code> - moves all user data blocks in both the active file system and Snapshot copies to the storage pool tier.</p> </li> </ul> <ul> <li> <p> <code>NONE</code> - keeps a volume's data in the primary storage tier, preventing it from being moved to the capacity pool tier.</p> </li> </ul>"""  
    