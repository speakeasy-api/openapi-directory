// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IntentStateEnum string

const (
	IntentStateEnumFailed                IntentStateEnum = "Failed"
	IntentStateEnumFulfilled             IntentStateEnum = "Fulfilled"
	IntentStateEnumInProgress            IntentStateEnum = "InProgress"
	IntentStateEnumReadyForFulfillment   IntentStateEnum = "ReadyForFulfillment"
	IntentStateEnumWaiting               IntentStateEnum = "Waiting"
	IntentStateEnumFulfillmentInProgress IntentStateEnum = "FulfillmentInProgress"
)

func (e IntentStateEnum) ToPointer() *IntentStateEnum {
	return &e
}

func (e *IntentStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Failed":
		fallthrough
	case "Fulfilled":
		fallthrough
	case "InProgress":
		fallthrough
	case "ReadyForFulfillment":
		fallthrough
	case "Waiting":
		fallthrough
	case "FulfillmentInProgress":
		*e = IntentStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IntentStateEnum: %v", v)
	}
}
