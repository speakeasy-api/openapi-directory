/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Person - Object to represent a person.
 */
public class Person {
    /**
     * The person's email addresses
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailAddresses")
    public EmailAddress[] emailAddresses;
    public Person withEmailAddresses(EmailAddress[] emailAddresses) {
        this.emailAddresses = emailAddresses;
        return this;
    }
    
    /**
     * The resource name of the person to provide information about. See [`People.get`](https://developers.google.com/people/api/rest/v1/people/get) from the Google People API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Person withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Obfuscated ID of a person.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("obfuscatedId")
    public String obfuscatedId;
    public Person withObfuscatedId(String obfuscatedId) {
        this.obfuscatedId = obfuscatedId;
        return this;
    }
    
    /**
     * The person's name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("personNames")
    public Name[] personNames;
    public Person withPersonNames(Name[] personNames) {
        this.personNames = personNames;
        return this;
    }
    
    /**
     * The person's phone numbers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phoneNumbers")
    public PhoneNumber[] phoneNumbers;
    public Person withPhoneNumbers(PhoneNumber[] phoneNumbers) {
        this.phoneNumbers = phoneNumbers;
        return this;
    }
    
    /**
     * A person's read-only photo. A picture shown next to the person's name to help others recognize the person in search results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photos")
    public Photo[] photos;
    public Person withPhotos(Photo[] photos) {
        this.photos = photos;
        return this;
    }
    
}
