"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import pricingcountriesresponse as shared_pricingcountriesresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class RetrievePrefixPricingRequest:
    
    api_key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""Your Nexmo API key."""  
    api_secret: str = dataclasses.field(metadata={'query_param': { 'field_name': 'api_secret', 'style': 'form', 'explode': True }})
    r"""Your Nexmo API secret."""  
    prefix: str = dataclasses.field(metadata={'query_param': { 'field_name': 'prefix', 'style': 'form', 'explode': True }})
    r"""The numerical dialing prefix to look up pricing for. Examples include 44, 1 and so on."""  
    type: str = dataclasses.field(metadata={'path_param': { 'field_name': 'type', 'style': 'simple', 'explode': False }})
    r"""The type of service you wish to retrieve data about: either `sms`, `sms-transit` or `voice`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrievePrefixPricing401ApplicationJSON:
    r"""You did not provide valid credentials"""
    
    code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})  
    error_code_label: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error-code-label') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrievePrefixPricing400ApplicationJSONInvalidParameters:
    
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    parameter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameter'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrievePrefixPricing400ApplicationJSON:
    r"""Bad request. You probably provided an invalid parameter."""
    
    error_title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_title') }})  
    invalid_parameters: RetrievePrefixPricing400ApplicationJSONInvalidParameters = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalid_parameters') }})  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    

@dataclasses.dataclass
class RetrievePrefixPricingResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    pricing_countries_response: Optional[shared_pricingcountriesresponse.PricingCountriesResponse] = dataclasses.field(default=None)
    r"""Pricing countries response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    retrieve_prefix_pricing_400_application_json_object: Optional[RetrievePrefixPricing400ApplicationJSON] = dataclasses.field(default=None)
    r"""Bad request. You probably provided an invalid parameter."""  
    retrieve_prefix_pricing_401_application_json_object: Optional[RetrievePrefixPricing401ApplicationJSON] = dataclasses.field(default=None)
    r"""You did not provide valid credentials"""  
    