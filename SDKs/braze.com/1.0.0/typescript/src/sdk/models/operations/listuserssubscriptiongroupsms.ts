/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class ListUserSSubscriptionGroupSmsRequest extends SpeakeasyBase {
  /**
   * (Required*) String
   *
   * @remarks
   *
   * The external_id of the user. Must include at least one and at most 50 `external_ids`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=external_id",
  })
  externalId?: string;

  /**
   * (Optional) Integer
   *
   * @remarks
   *
   * The limit on the maximum number of results returned. Default (and max) limit is 100.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: string;

  /**
   * (Optional) Integer
   *
   * @remarks
   *
   * Number of templates to skip before returning rest of the templates that fit the search criteria.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: string;

  /**
   * (Required*) String
   *
   * @remarks
   *
   * The phone number of the user (must include at least one phone number and at most 50 phone numbers). The recommendation is to provide this in the E.164 format.
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=phone" })
  phone?: string;
}

export class ListUserSSubscriptionGroupSmsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
