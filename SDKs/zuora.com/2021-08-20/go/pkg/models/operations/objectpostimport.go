// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ObjectPOSTImportRequestBodyFile struct {
	File    string `multipartForm:"name=File"`
	Content []byte `multipartForm:"content"`
}

// ObjectPOSTImportRequestBodyImportTypeEnum - The type of data to import.
type ObjectPOSTImportRequestBodyImportTypeEnum string

const (
	ObjectPOSTImportRequestBodyImportTypeEnumUsage                 ObjectPOSTImportRequestBodyImportTypeEnum = "Usage"
	ObjectPOSTImportRequestBodyImportTypeEnumPayment               ObjectPOSTImportRequestBodyImportTypeEnum = "Payment"
	ObjectPOSTImportRequestBodyImportTypeEnumQuote                 ObjectPOSTImportRequestBodyImportTypeEnum = "Quote"
	ObjectPOSTImportRequestBodyImportTypeEnumTaxationDetail        ObjectPOSTImportRequestBodyImportTypeEnum = "TaxationDetail"
	ObjectPOSTImportRequestBodyImportTypeEnumUpdateAccountingCode  ObjectPOSTImportRequestBodyImportTypeEnum = "UpdateAccountingCode"
	ObjectPOSTImportRequestBodyImportTypeEnumCreateRevenueSchedule ObjectPOSTImportRequestBodyImportTypeEnum = "CreateRevenueSchedule"
	ObjectPOSTImportRequestBodyImportTypeEnumUpdateRevenueSchedule ObjectPOSTImportRequestBodyImportTypeEnum = "UpdateRevenueSchedule"
	ObjectPOSTImportRequestBodyImportTypeEnumDeleteRevenueSchedule ObjectPOSTImportRequestBodyImportTypeEnum = "DeleteRevenueSchedule"
	ObjectPOSTImportRequestBodyImportTypeEnumImportFxRate          ObjectPOSTImportRequestBodyImportTypeEnum = "ImportFXRate"
)

func (e *ObjectPOSTImportRequestBodyImportTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Usage":
		fallthrough
	case "Payment":
		fallthrough
	case "Quote":
		fallthrough
	case "TaxationDetail":
		fallthrough
	case "UpdateAccountingCode":
		fallthrough
	case "CreateRevenueSchedule":
		fallthrough
	case "UpdateRevenueSchedule":
		fallthrough
	case "DeleteRevenueSchedule":
		fallthrough
	case "ImportFXRate":
		*e = ObjectPOSTImportRequestBodyImportTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ObjectPOSTImportRequestBodyImportTypeEnum: %s", s)
	}
}

type ObjectPOSTImportRequestBody struct {
	// The data to import.
	//
	File ObjectPOSTImportRequestBodyFile `multipartForm:"file"`
	// The type of data to import.
	//
	ImportType ObjectPOSTImportRequestBodyImportTypeEnum `multipartForm:"name=ImportType"`
	// A descriptive name for the import.
	//
	Name string `multipartForm:"name=Name"`
}

type ObjectPOSTImportRequest struct {
	RequestBody ObjectPOSTImportRequestBody `request:"mediaType=multipart/form-data"`
	// An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
	//
	ZuoraEntityIds *string `header:"style=simple,explode=false,name=Zuora-Entity-Ids"`
	// A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
	//
	// The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
	//
	ZuoraTrackID *string `header:"style=simple,explode=false,name=Zuora-Track-Id"`
	// Specifies whether the call fails if the request body contains unknown fields.
	// With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
	// the request body contains unknown fields. The body of the 400 response is:
	//
	// ```json
	// {
	//     "message": "Error - unrecognised fields"
	// }
	// ```
	//
	// By default, Zuora ignores unknown fields in the request body.
	//
	RejectUnknownFields *bool `queryParam:"style=form,explode=true,name=rejectUnknownFields"`
}

type ObjectPOSTImportResponse struct {
	ContentType               string
	Headers                   map[string][]string
	ProxyPostImport           *shared.ProxyPostImport
	ProxyUnauthorizedResponse *shared.ProxyUnauthorizedResponse
	StatusCode                int
	RawResponse               *http.Response
}
