/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * LabelFieldModification - A modification to a label's field.
 */
public class LabelFieldModification {
    /**
     * The ID of the Field to be modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fieldId")
    public String fieldId;

    public LabelFieldModification withFieldId(String fieldId) {
        this.fieldId = fieldId;
        return this;
    }
    
    /**
     * This is always drive#labelFieldModification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public LabelFieldModification withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Replaces a dateString field with these new values. The values must be strings in the RFC 3339 full-date format: YYYY-MM-DD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("setDateValues")
    public LocalDate[] setDateValues;

    public LabelFieldModification withSetDateValues(LocalDate[] setDateValues) {
        this.setDateValues = setDateValues;
        return this;
    }
    
    /**
     * Replaces an integer field with these new values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("setIntegerValues")
    public String[] setIntegerValues;

    public LabelFieldModification withSetIntegerValues(String[] setIntegerValues) {
        this.setIntegerValues = setIntegerValues;
        return this;
    }
    
    /**
     * Replaces a selection field with these new values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("setSelectionValues")
    public String[] setSelectionValues;

    public LabelFieldModification withSetSelectionValues(String[] setSelectionValues) {
        this.setSelectionValues = setSelectionValues;
        return this;
    }
    
    /**
     * Replaces a text field with these new values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("setTextValues")
    public String[] setTextValues;

    public LabelFieldModification withSetTextValues(String[] setTextValues) {
        this.setTextValues = setTextValues;
        return this;
    }
    
    /**
     * Replaces a user field with these new values. The values must be valid email addresses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("setUserValues")
    public String[] setUserValues;

    public LabelFieldModification withSetUserValues(String[] setUserValues) {
        this.setUserValues = setUserValues;
        return this;
    }
    
    /**
     * Unsets the values for this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unsetValues")
    public Boolean unsetValues;

    public LabelFieldModification withUnsetValues(Boolean unsetValues) {
        this.unsetValues = unsetValues;
        return this;
    }
    
    public LabelFieldModification(){}
}
