/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommitteeHistory } from "./committeehistory";
import { Expose, Transform, Type } from "class-transformer";

export class ScheduleA extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amendment_indicator" })
  amendmentIndicator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "amendment_indicator_desc" })
  amendmentIndicatorDesc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_schedule_name" })
  backReferenceScheduleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_transaction_id" })
  backReferenceTransactionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_first_name" })
  candidateFirstName?: string;

  /**
   *
   * @remarks
   * A unique identifier assigned to each candidate registered with the FEC.
   * If a person runs for several offices, that person will have separate candidate IDs for each office.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_id" })
  candidateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_last_name" })
  candidateLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_middle_name" })
  candidateMiddleName?: string;

  /**
   * Name of candidate running for office
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_name" })
  candidateName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office" })
  candidateOffice?: string;

  /**
   * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_district" })
  candidateOfficeDistrict?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_full" })
  candidateOfficeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_state" })
  candidateOfficeState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_state_full" })
  candidateOfficeStateFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_prefix" })
  candidatePrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_suffix" })
  candidateSuffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committee" })
  @Type(() => CommitteeHistory)
  committee?: CommitteeHistory;

  /**
   *
   * @remarks
   * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committee_id" })
  committeeId?: string;

  /**
   * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committee_name" })
  committeeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_city" })
  conduitCommitteeCity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_id" })
  conduitCommitteeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_name" })
  conduitCommitteeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_state" })
  conduitCommitteeState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_street1" })
  conduitCommitteeStreet1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_street2" })
  conduitCommitteeStreet2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_zip" })
  conduitCommitteeZip?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "contribution_receipt_amount" })
  contributionReceiptAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "contribution_receipt_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  contributionReceiptDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor" })
  @Type(() => CommitteeHistory)
  contributor?: CommitteeHistory;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_aggregate_ytd" })
  contributorAggregateYtd?: number;

  /**
   * City of contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_city" })
  contributorCity?: string;

  /**
   * Employer of contributor, filers need to make an effort to gather this information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_employer" })
  contributorEmployer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_first_name" })
  contributorFirstName?: string;

  /**
   * The FEC identifier should be represented here if the contributor is registered with the FEC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_id" })
  contributorId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_last_name" })
  contributorLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_middle_name" })
  contributorMiddleName?: string;

  /**
   * Name of contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_name" })
  contributorName?: string;

  /**
   * Occupation of contributor, filers need to make an effort to gather this information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_occupation" })
  contributorOccupation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_prefix" })
  contributorPrefix?: string;

  /**
   * State of contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_state" })
  contributorState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_street_1" })
  contributorStreet1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_street_2" })
  contributorStreet2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_suffix" })
  contributorSuffix?: string;

  /**
   * Zip code of contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_zip" })
  contributorZip?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "donor_committee_name" })
  donorCommitteeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "election_type" })
  electionType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "election_type_full" })
  electionTypeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "entity_type" })
  entityType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "entity_type_desc" })
  entityTypeDesc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fec_election_type_desc" })
  fecElectionTypeDesc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fec_election_year" })
  fecElectionYear?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "file_number" })
  fileNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "filing_form" })
  filingForm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "image_number" })
  imageNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "increased_limit" })
  increasedLimit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_individual" })
  isIndividual?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "line_number" })
  lineNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "line_number_label" })
  lineNumberLabel?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "link_id" })
  linkId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "load_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  loadDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_code" })
  memoCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_code_full" })
  memoCodeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_text" })
  memoText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memoed_subtotal" })
  memoedSubtotal?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "national_committee_nonfederal_account" })
  nationalCommitteeNonfederalAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "original_sub_id" })
  originalSubId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pdf_url" })
  pdfUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "receipt_type" })
  receiptType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "receipt_type_desc" })
  receiptTypeDesc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "receipt_type_full" })
  receiptTypeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient_committee_designation" })
  recipientCommitteeDesignation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient_committee_org_type" })
  recipientCommitteeOrgType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient_committee_type" })
  recipientCommitteeType?: string;

  /**
   * Name of report where the underlying data comes from:
   *
   * @remarks
   *     - 10D Pre-Election
   *     - 10G Pre-General
   *     - 10P Pre-Primary
   *     - 10R Pre-Run-Off
   *     - 10S Pre-Special
   *     - 12C Pre-Convention
   *     - 12G Pre-General
   *     - 12P Pre-Primary
   *     - 12R Pre-Run-Off
   *     - 12S Pre-Special
   *     - 30D Post-Election
   *     - 30G Post-General
   *     - 30P Post-Primary
   *     - 30R Post-Run-Off
   *     - 30S Post-Special
   *     - 60D Post-Convention
   *     - M1  January Monthly
   *     - M10 October Monthly
   *     - M11 November Monthly
   *     - M12 December Monthly
   *     - M2  February Monthly
   *     - M3  March Monthly
   *     - M4  April Monthly
   *     - M5  May Monthly
   *     - M6  June Monthly
   *     - M7  July Monthly
   *     - M8  August Monthly
   *     - M9  September Monthly
   *     - MY  Mid-Year Report
   *     - Q1  April Quarterly
   *     - Q2  July Quarterly
   *     - Q3  October Quarterly
   *     - TER Termination Report
   *     - YE  Year-End
   *     - ADJ COMP ADJUST AMEND
   *     - CA  COMPREHENSIVE AMEND
   *     - 90S Post Inaugural Supplement
   *     - 90D Post Inaugural
   *     - 48  48 Hour Notification
   *     - 24  24 Hour Notification
   *     - M7S July Monthly/Semi-Annual
   *     - MSA Monthly Semi-Annual (MY)
   *     - MYS Monthly Year End/Semi-Annual
   *     - Q2S July Quarterly/Semi-Annual
   *     - QSA Quarterly Semi-Annual (MY)
   *     - QYS Quarterly Year End/Semi-Annual
   *     - QYE Quarterly Semi-Annual (YE)
   *     - QMS Quarterly Mid-Year/ Semi-Annual
   *     - MSY Monthly Semi-Annual (YE)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "report_type" })
  reportType?: string;

  /**
   *
   * @remarks
   * Forms with coverage date -
   *     year from the coverage ending date.
   * Forms without coverage date -
   *     year from the receipt date.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "report_year" })
  reportYear?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "schedule_type" })
  scheduleType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "schedule_type_full" })
  scheduleTypeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sub_id" })
  subId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId?: string;

  /**
   *
   * @remarks
   * This is a two-year period that is derived from the year a transaction took place in the
   * Itemized Schedule A and Schedule B tables. In cases where we have the date of the transaction
   * (contribution_receipt_date in schedules/schedule_a, disbursement_date in schedules/schedule_b)
   * the two_year_transaction_period is named after the ending, even-numbered year. If we do not
   * have the date  of the transaction, we fall back to using the report year (report_year in both
   * tables) instead,  making the same cycle adjustment as necessary. If no transaction year is
   * specified, the results default to the most current cycle.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "two_year_transaction_period" })
  twoYearTransactionPeriod?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unused_contbr_id" })
  unusedContbrId?: string;
}
