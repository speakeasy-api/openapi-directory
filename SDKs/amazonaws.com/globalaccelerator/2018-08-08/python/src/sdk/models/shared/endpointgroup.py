"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import endpointdescription as shared_endpointdescription
from ..shared import healthcheckprotocol_enum as shared_healthcheckprotocol_enum
from ..shared import portoverride as shared_portoverride
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EndpointGroup:
    r"""A complex type for the endpoint group. An Amazon Web Services Region can have only one endpoint group for a specific listener."""
    
    endpoint_descriptions: Optional[list[shared_endpointdescription.EndpointDescription]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndpointDescriptions'), 'exclude': lambda f: f is None }})  
    endpoint_group_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndpointGroupArn'), 'exclude': lambda f: f is None }})  
    endpoint_group_region: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndpointGroupRegion'), 'exclude': lambda f: f is None }})  
    health_check_interval_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HealthCheckIntervalSeconds'), 'exclude': lambda f: f is None }})  
    health_check_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HealthCheckPath'), 'exclude': lambda f: f is None }})  
    health_check_port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HealthCheckPort'), 'exclude': lambda f: f is None }})  
    health_check_protocol: Optional[shared_healthcheckprotocol_enum.HealthCheckProtocolEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HealthCheckProtocol'), 'exclude': lambda f: f is None }})  
    port_overrides: Optional[list[shared_portoverride.PortOverride]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PortOverrides'), 'exclude': lambda f: f is None }})  
    threshold_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ThresholdCount'), 'exclude': lambda f: f is None }})  
    traffic_dial_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrafficDialPercentage'), 'exclude': lambda f: f is None }})  
    