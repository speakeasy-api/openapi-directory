/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BrowseResponse {
    /**
     * The type of file, either a regular file or a directory.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileMode")
    public String fileMode;

    public BrowseResponse withFileMode(String fileMode) {
        this.fileMode = fileMode;
        return this;
    }
    
    /**
     * The name of the file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filename")
    public String filename;

    public BrowseResponse withFilename(String filename) {
        this.filename = filename;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastModified")
    public String lastModified;

    public BrowseResponse withLastModified(String lastModified) {
        this.lastModified = lastModified;
        return this;
    }
    
    /**
     * The complete path of the file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;

    public BrowseResponse withPath(String path) {
        this.path = path;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Long size;

    public BrowseResponse withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * Description about the status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusMessage")
    public String statusMessage;

    public BrowseResponse withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }
    
    /**
     * Reason the file is unreadable. Undefined if the file is readable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unreadable")
    public Integer unreadable;

    public BrowseResponse withUnreadable(Integer unreadable) {
        this.unreadable = unreadable;
        return this;
    }
    
    public BrowseResponse(){}
}
