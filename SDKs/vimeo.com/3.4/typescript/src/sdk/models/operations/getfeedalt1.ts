/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetFeedAlt1Security extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

/**
 * The feed type.
 */
export enum GetFeedAlt1TypeEnum {
  Appears = "appears",
  CategoryFeatured = "category_featured",
  Channel = "channel",
  FacebookFeed = "facebook_feed",
  Following = "following",
  Group = "group",
  Likes = "likes",
  OndemandPublish = "ondemand_publish",
  Share = "share",
  TaggedWith = "tagged_with",
  TwitterTimeline = "twitter_timeline",
  Uploads = "uploads",
}

export class GetFeedAlt1Request extends SpeakeasyBase {
  /**
   * Necessary for proper pagination. You shouldn't provide this value yourself, and instead use the pagination links in the feed response. Please see our [pagination documentation](https://developer.vimeo.com/api/common-formats#using-the-pagination-parameter) for more information.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: string;

  /**
   * The page number of the results to show.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of items to show on each page of results, up to a maximum of 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The feed type.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: GetFeedAlt1TypeEnum;
}

export class GetFeedAlt1Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The videos were returned.
   */
  @SpeakeasyMetadata({ elemType: shared.Activity31 })
  activity31s?: shared.Activity31[];
}
