"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MemInfo:
    r"""Information about the memory usage of a worker or a container within a worker."""
    
    current_limit_bytes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentLimitBytes'), 'exclude': lambda f: f is None }})
    r"""Instantenous memory limit in bytes."""  
    current_ooms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentOoms'), 'exclude': lambda f: f is None }})
    r"""Number of Out of Memory (OOM) events recorded since the previous measurement."""  
    current_rss_bytes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentRssBytes'), 'exclude': lambda f: f is None }})
    r"""Instantenous memory (RSS) size in bytes."""  
    timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'exclude': lambda f: f is None }})
    r"""Timestamp of the measurement."""  
    total_gb_ms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalGbMs'), 'exclude': lambda f: f is None }})
    r"""Total memory (RSS) usage since start up in GB * ms."""  
    