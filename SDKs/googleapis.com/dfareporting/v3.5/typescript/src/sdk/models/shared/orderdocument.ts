/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LastModifiedInfo } from "./lastmodifiedinfo";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Type of this order document
 */
export enum OrderDocumentTypeEnum {
  PlanningOrderTypeInsertionOrder = "PLANNING_ORDER_TYPE_INSERTION_ORDER",
  PlanningOrderTypeChangeOrder = "PLANNING_ORDER_TYPE_CHANGE_ORDER",
}

/**
 * Contains properties of a Planning order document.
 */
export class OrderDocument extends SpeakeasyBase {
  /**
   * Account ID of this order document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Advertiser ID of this order document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "advertiserId" })
  advertiserId?: string;

  /**
   * The amended order document ID of this order document. An order document can be created by optionally amending another order document so that the change history can be preserved.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amendedOrderDocumentId" })
  amendedOrderDocumentId?: string;

  /**
   * IDs of users who have approved this order document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approvedByUserProfileIds" })
  approvedByUserProfileIds?: string[];

  /**
   * Whether this order document is cancelled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancelled" })
  cancelled?: boolean;

  /**
   * Modification timestamp.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdInfo" })
  @Type(() => LastModifiedInfo)
  createdInfo?: LastModifiedInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "effectiveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  effectiveDate?: Date;

  /**
   * ID of this order document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "dfareporting#orderDocument".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * List of email addresses that received the last sent document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastSentRecipients" })
  lastSentRecipients?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "lastSentTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastSentTime?: Date;

  /**
   * ID of the order from which this order document is created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderId" })
  orderId?: string;

  /**
   * Project ID of this order document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "projectId" })
  projectId?: string;

  /**
   * Whether this order document has been signed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "signed" })
  signed?: boolean;

  /**
   * Subaccount ID of this order document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subaccountId" })
  subaccountId?: string;

  /**
   * Title of this order document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * Type of this order document
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: OrderDocumentTypeEnum;
}
