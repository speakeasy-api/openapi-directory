/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SeverityLevel } from "./severitylevel";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetCustomDataIdentifierResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ignoreWords" })
  ignoreWords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "keywords" })
  keywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "maximumMatchDistance" })
  maximumMatchDistance?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "regex" })
  regex?: string;

  @SpeakeasyMetadata({ elemType: SeverityLevel })
  @Expose({ name: "severityLevels" })
  @Type(() => SeverityLevel)
  severityLevels?: SeverityLevel[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
