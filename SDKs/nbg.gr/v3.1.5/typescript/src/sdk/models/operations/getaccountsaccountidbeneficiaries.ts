/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetAccountsAccountIdBeneficiariesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  authorizationCodeToken: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Client-Id",
  })
  clientId: string;
}

export class GetAccountsAccountIdBeneficiariesRequest extends SpeakeasyBase {
  /**
   * AccountId
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=accountId",
  })
  accountId: string;

  /**
   * The unique id of the sandbox to be used
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=sandbox-id",
  })
  sandboxId: string;

  /**
   * Indicates the user-agent that the PSU is using.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-customer-user-agent",
  })
  xCustomerUserAgent?: string;

  /**
   * The time when the PSU last logged in with the TPP.
   *
   * @remarks
   * All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:
   * Sun, 10 Sep 2017 19:43:31 UTC
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-fapi-auth-date",
  })
  xFapiAuthDate?: string;

  /**
   * The PSU's IP address if the PSU is currently logged in with the TPP.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-fapi-customer-ip-address",
  })
  xFapiCustomerIpAddress?: string;

  /**
   * An RFC4122 UID used as a correlation id.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-fapi-interaction-id",
  })
  xFapiInteractionId?: string;
}

export class GetAccountsAccountIdBeneficiariesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad request
   */
  @SpeakeasyMetadata()
  obErrorResponse1?: shared.OBErrorResponse1;

  /**
   * Beneficiaries Read
   */
  @SpeakeasyMetadata()
  obReadBeneficiary5?: shared.OBReadBeneficiary5;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
