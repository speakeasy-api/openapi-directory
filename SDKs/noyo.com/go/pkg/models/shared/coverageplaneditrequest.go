// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CoveragePlanEditRequestBenefitDetailsEnum - The add-on benefits offered by the plan.
type CoveragePlanEditRequestBenefitDetailsEnum string

const (
	CoveragePlanEditRequestBenefitDetailsEnumAbortion            CoveragePlanEditRequestBenefitDetailsEnum = "abortion"
	CoveragePlanEditRequestBenefitDetailsEnumInfertility         CoveragePlanEditRequestBenefitDetailsEnum = "infertility"
	CoveragePlanEditRequestBenefitDetailsEnumContraceptiveOptOut CoveragePlanEditRequestBenefitDetailsEnum = "contraceptive_opt_out"
	CoveragePlanEditRequestBenefitDetailsEnumAddictionTreament   CoveragePlanEditRequestBenefitDetailsEnum = "addiction_treament"
	CoveragePlanEditRequestBenefitDetailsEnumMammographyBenefit  CoveragePlanEditRequestBenefitDetailsEnum = "mammography_benefit"
	CoveragePlanEditRequestBenefitDetailsEnumStaffModelHmo       CoveragePlanEditRequestBenefitDetailsEnum = "staff_model_hmo"
	CoveragePlanEditRequestBenefitDetailsEnumFsa                 CoveragePlanEditRequestBenefitDetailsEnum = "fsa"
	CoveragePlanEditRequestBenefitDetailsEnumHsa                 CoveragePlanEditRequestBenefitDetailsEnum = "hsa"
)

func (e *CoveragePlanEditRequestBenefitDetailsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "abortion":
		fallthrough
	case "infertility":
		fallthrough
	case "contraceptive_opt_out":
		fallthrough
	case "addiction_treament":
		fallthrough
	case "mammography_benefit":
		fallthrough
	case "staff_model_hmo":
		fallthrough
	case "fsa":
		fallthrough
	case "hsa":
		*e = CoveragePlanEditRequestBenefitDetailsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CoveragePlanEditRequestBenefitDetailsEnum: %s", s)
	}
}

// CoveragePlanEditRequestCobraRules - COBRA rules for the group medical plan
type CoveragePlanEditRequestCobraRules struct {
	// True if group plan is eligible for COBRA enrollments
	Eligible *bool `json:"eligible,omitempty"`
}

type CoveragePlanEditRequest struct {
	// The add-on benefits offered by the plan.
	BenefitDetails *CoveragePlanEditRequestBenefitDetailsEnum `json:"benefit_details,omitempty"`
	// COBRA rules for the group medical plan
	CobraRules *CoveragePlanEditRequestCobraRules `json:"cobra_rules,omitempty"`
	// The code for the plan.
	Code                *string               `json:"code,omitempty"`
	ContributionDetails []ContributionDetails `json:"contribution_details,omitempty"`
	CoverageDetails     *CoverageDetails      `json:"coverage_details,omitempty"`
	// True if this plan is currently active with the carrier
	ExistingPlan *bool `json:"existing_plan,omitempty"`
	// Details about the plan network
	Network *string `json:"network,omitempty"`
	// General platform notes about the coverage plan
	Notes *string `json:"notes,omitempty"`
	// Display name of the plan
	PlanName *string `json:"plan_name,omitempty"`
	// Plan type for basic or voluntary plans
	PlanType *string `json:"plan_type,omitempty"`
	// Details about the product type
	ProductType *string `json:"product_type,omitempty"`
	// Plan rate data, varying by plan line of coverage
	RateDetails []RateModel `json:"rate_details,omitempty"`
	// Termination policy for the coverage plan
	TerminationPolicy *string `json:"termination_policy,omitempty"`
	// Volume rules for the group critical illness plan
	VolumeRules *string `json:"volume_rules,omitempty"`
	// The list of waiting period rules.
	WaitingPeriodRules []string `json:"waiting_period_rules,omitempty"`
}
