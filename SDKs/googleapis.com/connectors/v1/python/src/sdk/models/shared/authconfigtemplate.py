"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configvariabletemplate as shared_configvariabletemplate
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AuthConfigTemplateAuthTypeEnum(str, Enum):
    r"""The type of authentication configured."""
    AUTH_TYPE_UNSPECIFIED = 'AUTH_TYPE_UNSPECIFIED'
    USER_PASSWORD = 'USER_PASSWORD'
    OAUTH2_JWT_BEARER = 'OAUTH2_JWT_BEARER'
    OAUTH2_CLIENT_CREDENTIALS = 'OAUTH2_CLIENT_CREDENTIALS'
    SSH_PUBLIC_KEY = 'SSH_PUBLIC_KEY'
    OAUTH2_AUTH_CODE_FLOW = 'OAUTH2_AUTH_CODE_FLOW'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AuthConfigTemplate:
    r"""AuthConfigTemplate defines required field over an authentication type."""
    
    auth_type: Optional[AuthConfigTemplateAuthTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authType'), 'exclude': lambda f: f is None }})
    r"""The type of authentication configured."""  
    config_variable_templates: Optional[list[shared_configvariabletemplate.ConfigVariableTemplate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configVariableTemplates'), 'exclude': lambda f: f is None }})
    r"""Config variables to describe an `AuthConfig` for a `Connection`."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Connector specific description for an authentication template."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Display name for authentication template."""  
    