// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AsyncOperationStatusEnumEnum string

const (
	AsyncOperationStatusEnumEnumSent      AsyncOperationStatusEnumEnum = "sent"
	AsyncOperationStatusEnumEnumStarted   AsyncOperationStatusEnumEnum = "started"
	AsyncOperationStatusEnumEnumCompleted AsyncOperationStatusEnumEnum = "completed"
	AsyncOperationStatusEnumEnumFailed    AsyncOperationStatusEnumEnum = "failed"
)

func (e *AsyncOperationStatusEnumEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "sent":
		fallthrough
	case "started":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = AsyncOperationStatusEnumEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AsyncOperationStatusEnumEnum: %s", s)
	}
}
