"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DynamicLinkEventStatEventEnum(str, Enum):
    r"""Link event."""
    DYNAMIC_LINK_EVENT_UNSPECIFIED = 'DYNAMIC_LINK_EVENT_UNSPECIFIED'
    CLICK = 'CLICK'
    REDIRECT = 'REDIRECT'
    APP_INSTALL = 'APP_INSTALL'
    APP_FIRST_OPEN = 'APP_FIRST_OPEN'
    APP_RE_OPEN = 'APP_RE_OPEN'

class DynamicLinkEventStatPlatformEnum(str, Enum):
    r"""Requested platform."""
    DYNAMIC_LINK_PLATFORM_UNSPECIFIED = 'DYNAMIC_LINK_PLATFORM_UNSPECIFIED'
    ANDROID = 'ANDROID'
    IOS = 'IOS'
    DESKTOP = 'DESKTOP'
    OTHER = 'OTHER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DynamicLinkEventStat:
    r"""Dynamic Link event stat."""
    
    count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""The number of times this event occurred."""  
    event: Optional[DynamicLinkEventStatEventEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event'), 'exclude': lambda f: f is None }})
    r"""Link event."""  
    platform: Optional[DynamicLinkEventStatPlatformEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('platform'), 'exclude': lambda f: f is None }})
    r"""Requested platform."""  
    