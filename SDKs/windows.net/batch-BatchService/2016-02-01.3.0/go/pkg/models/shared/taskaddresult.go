// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// TaskAddResultStatusEnum - The status of the add task request.
type TaskAddResultStatusEnum string

const (
	TaskAddResultStatusEnumSuccess     TaskAddResultStatusEnum = "success"
	TaskAddResultStatusEnumClienterror TaskAddResultStatusEnum = "clienterror"
	TaskAddResultStatusEnumServererror TaskAddResultStatusEnum = "servererror"
	TaskAddResultStatusEnumUnmapped    TaskAddResultStatusEnum = "unmapped"
)

func (e *TaskAddResultStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "clienterror":
		fallthrough
	case "servererror":
		fallthrough
	case "unmapped":
		*e = TaskAddResultStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskAddResultStatusEnum: %s", s)
	}
}

// TaskAddResult - Result for a single task added as part of an add task collection operation.
type TaskAddResult struct {
	// The ETag of the task, if the task was successfully added.
	ETag *string `json:"eTag,omitempty"`
	// An error response received from the Azure Batch service.
	Error *BatchError `json:"error,omitempty"`
	// The last modified time of the task.
	LastModified *time.Time `json:"lastModified,omitempty"`
	// The URL of the task, if the task was successfully added.
	Location *string `json:"location,omitempty"`
	// The status of the add task request.
	Status TaskAddResultStatusEnum `json:"status"`
	// The id of the task for which this is the result.
	TaskID string `json:"taskId"`
}
