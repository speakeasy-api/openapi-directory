/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CloudWatchLogsDestination } from "./cloudwatchlogsdestination";
import { EventTypeEnum } from "./eventtypeenum";
import { KinesisFirehoseDestination } from "./kinesisfirehosedestination";
import { SnsDestination } from "./snsdestination";
import { Expose, Type } from "class-transformer";

export class UpdateEventDestinationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CloudWatchLogsDestination" })
  @Type(() => CloudWatchLogsDestination)
  cloudWatchLogsDestination?: CloudWatchLogsDestination;

  @SpeakeasyMetadata()
  @Expose({ name: "ConfigurationSetName" })
  configurationSetName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EventDestinationName" })
  eventDestinationName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KinesisFirehoseDestination" })
  @Type(() => KinesisFirehoseDestination)
  kinesisFirehoseDestination?: KinesisFirehoseDestination;

  @SpeakeasyMetadata()
  @Expose({ name: "MatchingEventTypes" })
  matchingEventTypes?: EventTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "SnsDestination" })
  @Type(() => SnsDestination)
  snsDestination?: SnsDestination;
}
