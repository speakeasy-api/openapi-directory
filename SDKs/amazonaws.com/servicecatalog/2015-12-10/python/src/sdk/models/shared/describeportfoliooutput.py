"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import budgetdetail as shared_budgetdetail
from ..shared import portfoliodetail as shared_portfoliodetail
from ..shared import tag as shared_tag
from ..shared import tagoptiondetail as shared_tagoptiondetail
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribePortfolioOutput:
    r"""Success"""
    
    budgets: Optional[list[shared_budgetdetail.BudgetDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Budgets'), 'exclude': lambda f: f is None }})  
    portfolio_detail: Optional[shared_portfoliodetail.PortfolioDetail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PortfolioDetail'), 'exclude': lambda f: f is None }})  
    tag_options: Optional[list[shared_tagoptiondetail.TagOptionDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TagOptions'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    