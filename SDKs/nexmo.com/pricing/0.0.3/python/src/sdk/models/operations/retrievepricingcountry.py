"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import pricingcountryresponse as shared_pricingcountryresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class RetrievePricingCountryRequest:
    
    api_key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""Your Nexmo API key."""  
    api_secret: str = dataclasses.field(metadata={'query_param': { 'field_name': 'api_secret', 'style': 'form', 'explode': True }})
    r"""Your Nexmo API secret."""  
    country: str = dataclasses.field(metadata={'query_param': { 'field_name': 'country', 'style': 'form', 'explode': True }})
    r"""A two letter [country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). For example, `CA`."""  
    type: str = dataclasses.field(metadata={'path_param': { 'field_name': 'type', 'style': 'simple', 'explode': False }})
    r"""The type of service you wish to retrieve data about: either `sms`, `sms-transit` or `voice`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrievePricingCountry401ApplicationJSON:
    r"""You did not provide valid credentials"""
    
    code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})  
    error_code_label: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error-code-label') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrievePricingCountry400ApplicationJSONInvalidParameters:
    
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    parameter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameter'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrievePricingCountry400ApplicationJSON:
    r"""Bad request. You probably provided an invalid parameter."""
    
    error_title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_title') }})  
    invalid_parameters: RetrievePricingCountry400ApplicationJSONInvalidParameters = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalid_parameters') }})  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    

@dataclasses.dataclass
class RetrievePricingCountryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    pricing_country_response: Optional[shared_pricingcountryresponse.PricingCountryResponse] = dataclasses.field(default=None)
    r"""Pricing information for a specific country."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    retrieve_pricing_country_400_application_json_object: Optional[RetrievePricingCountry400ApplicationJSON] = dataclasses.field(default=None)
    r"""Bad request. You probably provided an invalid parameter."""  
    retrieve_pricing_country_401_application_json_object: Optional[RetrievePricingCountry401ApplicationJSON] = dataclasses.field(default=None)
    r"""You did not provide valid credentials"""  
    