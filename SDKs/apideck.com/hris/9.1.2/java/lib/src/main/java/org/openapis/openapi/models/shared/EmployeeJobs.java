/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class EmployeeJobs {
    /**
     * The rate of pay for the employee in their current job role.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compensation_rate")
    public Double compensationRate;
    public EmployeeJobs withCompensationRate(Double compensationRate) {
        this.compensationRate = compensationRate;
        return this;
    }
    
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public CurrencyEnum currency;
    public EmployeeJobs withCurrency(CurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employee_id")
    public String employeeId;
    public EmployeeJobs withEmployeeId(String employeeId) {
        this.employeeId = employeeId;
        return this;
    }
    
    /**
     * The date on which the employee leaves or is expected to leave their current job role.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("end_date")
    public LocalDate endDate;
    public EmployeeJobs withEndDate(LocalDate endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * The date on which the employee was hired by the organization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("hired_at")
    public LocalDate hiredAt;
    public EmployeeJobs withHiredAt(LocalDate hiredAt) {
        this.hiredAt = hiredAt;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public EmployeeJobs withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Indicates whether this the employee's primary job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_primary")
    public Boolean isPrimary;
    public EmployeeJobs withIsPrimary(Boolean isPrimary) {
        this.isPrimary = isPrimary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public Address location;
    public EmployeeJobs withLocation(Address location) {
        this.location = location;
        return this;
    }
    
    /**
     * Unit of measurement for employee compensation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_unit")
    public PaymentUnitEnum paymentUnit;
    public EmployeeJobs withPaymentUnit(PaymentUnitEnum paymentUnit) {
        this.paymentUnit = paymentUnit;
        return this;
    }
    
    /**
     * The position and responsibilities of the person within the organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public String role;
    public EmployeeJobs withRole(String role) {
        this.role = role;
        return this;
    }
    
    /**
     * The date on which the employee starts working in their current job role.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("start_date")
    public LocalDate startDate;
    public EmployeeJobs withStartDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * The job title of the person.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public EmployeeJobs withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
