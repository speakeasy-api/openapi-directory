// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum - The cardinality of the relationship from this object to another object.
//
// Only the `manyToOne` cardinality can be used when creating relationships.  A relationship with `oneToMany` cardinality is created implicitly when a `manyToOne` relationship is created.
//
// A custom object definition can have a maximum of 2 `manyToOne` relationships.
type PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum string

const (
	PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnumManyToOne PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum = "manyToOne"
)

func (e *PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "manyToOne":
		*e = PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum: %s", s)
	}
}

type PostCustomObjectDefinitionsRequestDefinitionRelationshipsRecordConstraintsCreate struct {
	// Specifies whether Zuora validates the values of mapped fields
	// in custom object records.
	//
	// By default, Zuora validates the values of mapped fields
	// in custom object records. For example, if the
	// custom object definition has a field called `AccountId__c`
	// that is mapped to the `Id` field of the `account` object,
	// Zuora verifies that the value of `AccountId__c` is a valid
	// account ID when a custom object record is created.
	// If the value of `AccountId__c` is not a valid account ID,
	// the operation fails.
	//
	EnforceValidMapping *bool `json:"enforceValidMapping,omitempty"`
}

// PostCustomObjectDefinitionsRequestDefinitionRelationshipsRecordConstraints - Specifies contraints to apply to custom object records.
type PostCustomObjectDefinitionsRequestDefinitionRelationshipsRecordConstraints struct {
	Create *PostCustomObjectDefinitionsRequestDefinitionRelationshipsRecordConstraintsCreate `json:"create,omitempty"`
}

type PostCustomObjectDefinitionsRequestDefinitionRelationships struct {
	// The cardinality of the relationship from this object to another object.
	//
	// Only the `manyToOne` cardinality can be used when creating relationships.  A relationship with `oneToMany` cardinality is created implicitly when a `manyToOne` relationship is created.
	//
	// A custom object definition can have a maximum of 2 `manyToOne` relationships.
	//
	Cardinality *PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum `json:"cardinality,omitempty"`
	// Field mappings in the form of `<this-object-field-name>`: `<other-object-field-name>`. Usually the `<other-object-field-name>` can only be the `Id` field of the related object. Two exceptions are Subscription Name and Rate Plan Charge Number as both of them are unique.
	//
	Fields map[string]string `json:"fields"`
	// The namespace where the related object is located
	Namespace string `json:"namespace"`
	// The API name of the related object
	Object string `json:"object"`
	// Specifies contraints to apply to custom object records.
	//
	RecordConstraints *PostCustomObjectDefinitionsRequestDefinitionRelationshipsRecordConstraints `json:"recordConstraints,omitempty"`
}

type PostCustomObjectDefinitionsRequestDefinition struct {
	// The set of fields that are allowed to be queried on. Queries on non-filterable fields will be rejected. You can not change a non-filterable field to filterable.
	Filterable []string `json:"filterable,omitempty"`
	// A UI label for the custom object
	Label string `json:"label"`
	// The API name of the custom object
	Object     string                                                      `json:"object"`
	Properties map[string]PostCustomObjectDefinitionFieldDefinitionRequest `json:"properties,omitempty"`
	// An array of relationships with Zuora objects or other custom objects. You can add at most 2 `manyToOne` relationships when creating a custom field definition.
	Relationships []PostCustomObjectDefinitionsRequestDefinitionRelationships `json:"relationships,omitempty"`
	// The required fields of the custom object. You can change required fields to optional. However, you can only change optional fields to required on the custom objects with no records.
	Required []string `json:"required,omitempty"`
}
