// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteSpaceXAmzTargetEnum
type DeleteSpaceXAmzTargetEnum string

const (
	DeleteSpaceXAmzTargetEnumSageMakerDeleteSpace DeleteSpaceXAmzTargetEnum = "SageMaker.DeleteSpace"
)

func (e DeleteSpaceXAmzTargetEnum) ToPointer() *DeleteSpaceXAmzTargetEnum {
	return &e
}

func (e *DeleteSpaceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.DeleteSpace":
		*e = DeleteSpaceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteSpaceXAmzTargetEnum: %v", v)
	}
}

type DeleteSpaceRequest struct {
	DeleteSpaceRequest shared.DeleteSpaceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         DeleteSpaceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteSpaceResponse struct {
	ContentType string
	// ResourceInUse
	ResourceInUse interface{}
	// ResourceNotFound
	ResourceNotFound interface{}
	StatusCode       int
	RawResponse      *http.Response
}
