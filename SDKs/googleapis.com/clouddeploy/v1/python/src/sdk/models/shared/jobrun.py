"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import advancechildrolloutjobrun as shared_advancechildrolloutjobrun
from ..shared import createchildrolloutjobrun as shared_createchildrolloutjobrun
from ..shared import deployjobrun as shared_deployjobrun
from ..shared import verifyjobrun as shared_verifyjobrun
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class JobRunStateEnum(str, Enum):
    r"""Output only. The current state of the `JobRun`."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    TERMINATING = 'TERMINATING'
    TERMINATED = 'TERMINATED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobRun:
    r"""A `JobRun` resource in the Google Cloud Deploy API. A `JobRun` contains information of a single `Rollout` job evaluation."""
    
    advance_child_rollout_job_run: Optional[shared_advancechildrolloutjobrun.AdvanceChildRolloutJobRun] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advanceChildRolloutJobRun'), 'exclude': lambda f: f is None }})
    r"""AdvanceChildRolloutJobRun contains information specific to a advanceChildRollout `JobRun`."""  
    create_child_rollout_job_run: Optional[shared_createchildrolloutjobrun.CreateChildRolloutJobRun] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createChildRolloutJobRun'), 'exclude': lambda f: f is None }})
    r"""CreateChildRolloutJobRun contains information specific to a createChildRollout `JobRun`."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the `JobRun` was created."""  
    deploy_job_run: Optional[shared_deployjobrun.DeployJobRun] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deployJobRun'), 'exclude': lambda f: f is None }})
    r"""DeployJobRun contains information specific to a deploy `JobRun`."""  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the `JobRun` ended."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."""  
    job_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobId'), 'exclude': lambda f: f is None }})
    r"""Output only. ID of the `Rollout` job this `JobRun` corresponds to."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Optional. Name of the `JobRun`. Format is projects/{project}/locations/{location}/ deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/ {rollouts}/jobRuns/{uuid}."""  
    phase_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phaseId'), 'exclude': lambda f: f is None }})
    r"""Output only. ID of the `Rollout` phase this `JobRun` belongs in."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the `JobRun` was started."""  
    state: Optional[JobRunStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. The current state of the `JobRun`."""  
    uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uid'), 'exclude': lambda f: f is None }})
    r"""Output only. Unique identifier of the `JobRun`."""  
    verify_job_run: Optional[shared_verifyjobrun.VerifyJobRun] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verifyJobRun'), 'exclude': lambda f: f is None }})
    r"""VerifyJobRun contains information specific to a verify `JobRun`."""  
    