/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FindingChangeTypeEnum } from "./findingchangetypeenum";
import { FindingSource } from "./findingsource";
import { FindingStatusEnum } from "./findingstatusenum";
import { ResourceTypeEnum } from "./resourcetypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An access preview finding generated by the access preview.
 */
export class AccessPreviewFinding extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "changeType" })
  changeType: FindingChangeTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "condition" })
  condition?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "existingFindingId" })
  existingFindingId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "existingFindingStatus" })
  existingFindingStatus?: FindingStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isPublic" })
  isPublic?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "principal" })
  principal?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  resource?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceOwnerAccount" })
  resourceOwnerAccount: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceType" })
  resourceType: ResourceTypeEnum;

  @SpeakeasyMetadata({ elemType: FindingSource })
  @Expose({ name: "sources" })
  @Type(() => FindingSource)
  sources?: FindingSource[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: FindingStatusEnum;
}
