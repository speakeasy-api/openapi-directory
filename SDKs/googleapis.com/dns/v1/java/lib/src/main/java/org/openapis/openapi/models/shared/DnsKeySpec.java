/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DnsKeySpec - Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey.
 */
public class DnsKeySpec {
    /**
     * String mnemonic specifying the DNSSEC algorithm of this key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("algorithm")
    public DnsKeySpecAlgorithmEnum algorithm;

    public DnsKeySpec withAlgorithm(DnsKeySpecAlgorithmEnum algorithm) {
        this.algorithm = algorithm;
        return this;
    }
    
    /**
     * Length of the keys in bits.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyLength")
    public Long keyLength;

    public DnsKeySpec withKeyLength(Long keyLength) {
        this.keyLength = keyLength;
        return this;
    }
    
    /**
     * Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyType")
    public DnsKeySpecKeyTypeEnum keyType;

    public DnsKeySpec withKeyType(DnsKeySpecKeyTypeEnum keyType) {
        this.keyType = keyType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public DnsKeySpec withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    public DnsKeySpec(){}
}
