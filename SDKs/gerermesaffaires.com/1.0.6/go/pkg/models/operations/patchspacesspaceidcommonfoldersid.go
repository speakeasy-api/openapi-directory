// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnum string

const (
	PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnumConfidential PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnum = "confidential"
	PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnumRegular      PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnum = "regular"
	PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnumPublic       PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnum = "public"
)

func (e PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnum) ToPointer() *PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnum {
	return &e
}

func (e *PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnum: %v", v)
	}
}

// PatchSpacesSpaceIDCommonFoldersIDRequestBody - Folder to modify
type PatchSpacesSpaceIDCommonFoldersIDRequestBody struct {
	About        *string                                                `json:"About,omitempty"`
	ArchivalDate *string                                                `json:"ArchivalDate,omitempty"`
	Home         *bool                                                  `json:"Home,omitempty"`
	Keywords     []string                                               `json:"Keywords,omitempty"`
	Level        *PatchSpacesSpaceIDCommonFoldersIDRequestBodyLevelEnum `json:"Level,omitempty"`
	Name         *string                                                `json:"Name,omitempty"`
}

type PatchSpacesSpaceIDCommonFoldersIDRequest struct {
	// Folder to modify
	RequestBody PatchSpacesSpaceIDCommonFoldersIDRequestBody `request:"mediaType=application/json"`
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PatchSpacesSpaceIDCommonFoldersIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
