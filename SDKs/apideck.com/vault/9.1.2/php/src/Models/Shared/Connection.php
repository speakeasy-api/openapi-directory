<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Connection
{
    /**
     * Type of authorization used by the connector
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuthTypeEnum $authType
     */
	#[\JMS\Serializer\Annotation\SerializedName('auth_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuthTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuthTypeEnum $authType = null;
    
    /**
     * The OAuth redirect URI. Redirect your users to this URI to let them authorize your app in the connector's UI. Before you can use this URI, you must add `redirect_uri` as a query parameter. Your users will be redirected to this `redirect_uri` after they granted access to your app in the connector's UI.
     * 
     * @var ?string $authorizeUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorize_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authorizeUrl = null;
    
    /**
     * $configurableResources
     * 
     * @var ?array<string> $configurableResources
     */
	#[\JMS\Serializer\Annotation\SerializedName('configurable_resources')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $configurableResources = null;
    
    /**
     * $configuration
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConnectionConfiguration> $configuration
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuration')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConnectionConfiguration>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $configuration = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $createdAt = null;
    
    /**
     * Whether the connection is enabled or not. You can enable or disable a connection using the Update Connection API.
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * The settings that are wanted to create a connection.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FormField> $formFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('form_fields')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FormField>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $formFields = null;
    
    /**
     * Whether the connector has a guide available in the developer docs or not (https://docs.apideck.com/connectors/{service_id}/docs/consumer+connection).
     * 
     * @var ?bool $hasGuide
     */
	#[\JMS\Serializer\Annotation\SerializedName('has_guide')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasGuide = null;
    
    /**
     * A visual icon of the connection, that will be shown in the Vault
     * 
     * @var ?string $icon
     */
	#[\JMS\Serializer\Annotation\SerializedName('icon')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $icon = null;
    
    /**
     * The unique identifier of the connection.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The current state of the Integration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IntegrationStateEnum $integrationState
     */
	#[\JMS\Serializer\Annotation\SerializedName('integration_state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\IntegrationStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IntegrationStateEnum $integrationState = null;
    
    /**
     * The logo of the connection, that will be shown in the Vault
     * 
     * @var ?string $logo
     */
	#[\JMS\Serializer\Annotation\SerializedName('logo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $logo = null;
    
    /**
     * Attach your own consumer specific metadata
     * 
     * @var ?array<string, mixed> $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metadata = null;
    
    /**
     * The name of the connection
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OAuthGrantTypeEnum $oauthGrantType
     */
	#[\JMS\Serializer\Annotation\SerializedName('oauth_grant_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OAuthGrantTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OAuthGrantTypeEnum $oauthGrantType = null;
    
    /**
     * $resourceSchemaSupport
     * 
     * @var ?array<string> $resourceSchemaSupport
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource_schema_support')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resourceSchemaSupport = null;
    
    /**
     * $resourceSettingsSupport
     * 
     * @var ?array<string> $resourceSettingsSupport
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource_settings_support')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resourceSettingsSupport = null;
    
    /**
     * The OAuth revoke URI. Redirect your users to this URI to revoke this connection. Before you can use this URI, you must add `redirect_uri` as a query parameter. Your users will be redirected to this `redirect_uri` after they granted access to your app in the connector's UI.
     * 
     * @var ?string $revokeUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('revoke_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revokeUrl = null;
    
    /**
     * The ID of the service this connection belongs to.
     * 
     * @var ?string $serviceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('service_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceId = null;
    
    /**
     * Connection settings. Values will persist to `form_fields` with corresponding id
     * 
     * @var ?array<string, mixed> $settings
     */
	#[\JMS\Serializer\Annotation\SerializedName('settings')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $settings = null;
    
    /**
     * List of settings that are required to be configured on integration before authorization can occur
     * 
     * @var ?array<string> $settingsRequiredForAuthorization
     */
	#[\JMS\Serializer\Annotation\SerializedName('settings_required_for_authorization')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $settingsRequiredForAuthorization = null;
    
    /**
     * [Connection state flow](#section/Connection-state)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConnectionStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConnectionStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConnectionStateEnum $state = null;
    
    /**
     * Status of the connection.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConnectionStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConnectionStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConnectionStatusEnum $status = null;
    
    /**
     * $subscriptions
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\WebhookSubscription> $subscriptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscriptions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\WebhookSubscription>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subscriptions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('tag_line')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tagLine = null;
    
    /**
     * The unified API category where the connection belongs to.
     * 
     * @var ?string $unifiedApi
     */
	#[\JMS\Serializer\Annotation\SerializedName('unified_api')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unifiedApi = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $updatedAt = null;
    
    /**
     * The website URL of the connection
     * 
     * @var ?string $website
     */
	#[\JMS\Serializer\Annotation\SerializedName('website')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $website = null;
    
	public function __construct()
	{
		$this->authType = null;
		$this->authorizeUrl = null;
		$this->configurableResources = null;
		$this->configuration = null;
		$this->createdAt = null;
		$this->enabled = null;
		$this->formFields = null;
		$this->hasGuide = null;
		$this->icon = null;
		$this->id = null;
		$this->integrationState = null;
		$this->logo = null;
		$this->metadata = null;
		$this->name = null;
		$this->oauthGrantType = null;
		$this->resourceSchemaSupport = null;
		$this->resourceSettingsSupport = null;
		$this->revokeUrl = null;
		$this->serviceId = null;
		$this->settings = null;
		$this->settingsRequiredForAuthorization = null;
		$this->state = null;
		$this->status = null;
		$this->subscriptions = null;
		$this->tagLine = null;
		$this->unifiedApi = null;
		$this->updatedAt = null;
		$this->website = null;
	}
}
