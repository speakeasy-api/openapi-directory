// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var AcceptPaymentDisputeServerList = []string{
	"https://apiz.ebay.com{basePath}",
}

type AcceptPaymentDisputeSecurity struct {
	APIAuth shared.SchemeAPIAuth `security:"scheme,type=oauth2"`
}

type AcceptPaymentDisputePathParams struct {
	// This is the unique identifier of the payment dispute. This path parameter must be passed into the call URI to identify the payment dispute for which the user plans to accept. This identifier is automatically created by eBay once the payment dispute comes into the eBay system. The unique identifier for payment disputes is returned in the <strong>paymentDisputeId</strong> field in the <strong>getPaymentDisputeSummaries</strong> response.<br><br>This path parameter is required, and the actual identifier value is passed in right after the <strong>payment_dispute</strong> resource. See the Resource URI above.
	PaymentDisputeID string `pathParam:"style=simple,explode=false,name=payment_dispute_id"`
}

type AcceptPaymentDisputeRequest struct {
	PathParams AcceptPaymentDisputePathParams
	Request    *shared.AcceptPaymentDisputeRequest `request:"mediaType=application/json"`
	Security   AcceptPaymentDisputeSecurity
	ServerURL  *string
}

type AcceptPaymentDisputeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
