/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MergeConflict } from "./mergeconflict";
import { SyncStatus } from "./syncstatus";
import { Expose, Type } from "class-transformer";

/**
 * A response after synchronizing the workspace to the latest container version.
 */
export class SyncWorkspaceResponse extends SpeakeasyBase {
  /**
   * The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved.
   */
  @SpeakeasyMetadata({ elemType: MergeConflict })
  @Expose({ name: "mergeConflict" })
  @Type(() => MergeConflict)
  mergeConflict?: MergeConflict[];

  /**
   * The status of a workspace after synchronization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "syncStatus" })
  @Type(() => SyncStatus)
  syncStatus?: SyncStatus;
}
