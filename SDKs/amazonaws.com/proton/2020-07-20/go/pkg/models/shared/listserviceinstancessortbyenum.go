// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ListServiceInstancesSortByEnum string

const (
	ListServiceInstancesSortByEnumName                      ListServiceInstancesSortByEnum = "name"
	ListServiceInstancesSortByEnumDeploymentStatus          ListServiceInstancesSortByEnum = "deploymentStatus"
	ListServiceInstancesSortByEnumTemplateName              ListServiceInstancesSortByEnum = "templateName"
	ListServiceInstancesSortByEnumServiceName               ListServiceInstancesSortByEnum = "serviceName"
	ListServiceInstancesSortByEnumEnvironmentName           ListServiceInstancesSortByEnum = "environmentName"
	ListServiceInstancesSortByEnumLastDeploymentAttemptedAt ListServiceInstancesSortByEnum = "lastDeploymentAttemptedAt"
	ListServiceInstancesSortByEnumCreatedAt                 ListServiceInstancesSortByEnum = "createdAt"
)

func (e ListServiceInstancesSortByEnum) ToPointer() *ListServiceInstancesSortByEnum {
	return &e
}

func (e *ListServiceInstancesSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "deploymentStatus":
		fallthrough
	case "templateName":
		fallthrough
	case "serviceName":
		fallthrough
	case "environmentName":
		fallthrough
	case "lastDeploymentAttemptedAt":
		fallthrough
	case "createdAt":
		*e = ListServiceInstancesSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListServiceInstancesSortByEnum: %v", v)
	}
}
