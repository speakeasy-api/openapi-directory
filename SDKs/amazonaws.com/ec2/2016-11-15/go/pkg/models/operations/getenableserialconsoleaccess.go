// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETEnableSerialConsoleAccessActionEnum
type GETEnableSerialConsoleAccessActionEnum string

const (
	GETEnableSerialConsoleAccessActionEnumEnableSerialConsoleAccess GETEnableSerialConsoleAccessActionEnum = "EnableSerialConsoleAccess"
)

func (e GETEnableSerialConsoleAccessActionEnum) ToPointer() *GETEnableSerialConsoleAccessActionEnum {
	return &e
}

func (e *GETEnableSerialConsoleAccessActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EnableSerialConsoleAccess":
		*e = GETEnableSerialConsoleAccessActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnableSerialConsoleAccessActionEnum: %v", v)
	}
}

// GETEnableSerialConsoleAccessVersionEnum
type GETEnableSerialConsoleAccessVersionEnum string

const (
	GETEnableSerialConsoleAccessVersionEnumTwoThousandAndSixteen1115 GETEnableSerialConsoleAccessVersionEnum = "2016-11-15"
)

func (e GETEnableSerialConsoleAccessVersionEnum) ToPointer() *GETEnableSerialConsoleAccessVersionEnum {
	return &e
}

func (e *GETEnableSerialConsoleAccessVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETEnableSerialConsoleAccessVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnableSerialConsoleAccessVersionEnum: %v", v)
	}
}

type GETEnableSerialConsoleAccessRequest struct {
	Action GETEnableSerialConsoleAccessActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun            *bool                                   `queryParam:"style=form,explode=true,name=DryRun"`
	Version           GETEnableSerialConsoleAccessVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETEnableSerialConsoleAccessResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
