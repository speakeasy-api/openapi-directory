<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VideoVersionsUserMetadataConnections - The list of resource URIs related to the user.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VideoVersionsUserMetadataConnections
{
    /**
     * Information about the albums created by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsAlbums $albums
     */
	#[\JMS\Serializer\Annotation\SerializedName('albums')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsAlbums')]
    public VideoVersionsUserMetadataConnectionsAlbums $albums;
    
    /**
     * Information about the appearances of this user in other videos.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsAppearances $appearances
     */
	#[\JMS\Serializer\Annotation\SerializedName('appearances')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsAppearances')]
    public VideoVersionsUserMetadataConnectionsAppearances $appearances;
    
    /**
     * Information on the users that the current user has blocked. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsBlock $block
     */
	#[\JMS\Serializer\Annotation\SerializedName('block')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsBlock')]
    public VideoVersionsUserMetadataConnectionsBlock $block;
    
    /**
     * Information about this user's followed categories.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsCategories $categories
     */
	#[\JMS\Serializer\Annotation\SerializedName('categories')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsCategories')]
    public VideoVersionsUserMetadataConnectionsCategories $categories;
    
    /**
     * Information about this user's subscribed channels.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsChannels $channels
     */
	#[\JMS\Serializer\Annotation\SerializedName('channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsChannels')]
    public VideoVersionsUserMetadataConnectionsChannels $channels;
    
    /**
     * Information about this user's feed.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFeed $feed
     */
	#[\JMS\Serializer\Annotation\SerializedName('feed')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFeed')]
    public VideoVersionsUserMetadataConnectionsFeed $feed;
    
    /**
     * Information about this user's folders.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFolders $folders
     */
	#[\JMS\Serializer\Annotation\SerializedName('folders')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFolders')]
    public VideoVersionsUserMetadataConnectionsFolders $folders;
    
    /**
     * Information about the user's followers.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFollowers $followers
     */
	#[\JMS\Serializer\Annotation\SerializedName('followers')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFollowers')]
    public VideoVersionsUserMetadataConnectionsFollowers $followers;
    
    /**
     * Information about the users that the current user is following.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFollowing $following
     */
	#[\JMS\Serializer\Annotation\SerializedName('following')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFollowing')]
    public VideoVersionsUserMetadataConnectionsFollowing $following;
    
    /**
     * Information about the groups created by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsGroups $groups
     */
	#[\JMS\Serializer\Annotation\SerializedName('groups')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsGroups')]
    public VideoVersionsUserMetadataConnectionsGroups $groups;
    
    /**
     * Information about the videos that this user has liked.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsLikes $likes
     */
	#[\JMS\Serializer\Annotation\SerializedName('likes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsLikes')]
    public VideoVersionsUserMetadataConnectionsLikes $likes;
    
    /**
     * Information about the channels that this user moderates.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsModeratedChannels $moderatedChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('moderated_channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsModeratedChannels')]
    public VideoVersionsUserMetadataConnectionsModeratedChannels $moderatedChannels;
    
    /**
     * Information about this user's portraits.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsPictures $pictures
     */
	#[\JMS\Serializer\Annotation\SerializedName('pictures')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsPictures')]
    public VideoVersionsUserMetadataConnectionsPictures $pictures;
    
    /**
     * Information about this user's portfolios.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsPortfolios $portfolios
     */
	#[\JMS\Serializer\Annotation\SerializedName('portfolios')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsPortfolios')]
    public VideoVersionsUserMetadataConnectionsPortfolios $portfolios;
    
    /**
     * A collection of recommended channels for the current user to follow. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsRecommendedChannels $recommendedChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('recommended_channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsRecommendedChannels')]
    public VideoVersionsUserMetadataConnectionsRecommendedChannels $recommendedChannels;
    
    /**
     * A Collection of recommended users for the current user to follow. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsRecommendedUsers $recommendedUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('recommended_users')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsRecommendedUsers')]
    public VideoVersionsUserMetadataConnectionsRecommendedUsers $recommendedUsers;
    
    /**
     * Information about the videos that have been shared with this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsShared $shared
     */
	#[\JMS\Serializer\Annotation\SerializedName('shared')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsShared')]
    public VideoVersionsUserMetadataConnectionsShared $shared;
    
    /**
     * Information about the videos uploaded by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsVideos $videos
     */
	#[\JMS\Serializer\Annotation\SerializedName('videos')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsVideos')]
    public VideoVersionsUserMetadataConnectionsVideos $videos;
    
    /**
     * Information about the videos that this user has watched.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsWatchedVideos $watchedVideos
     */
	#[\JMS\Serializer\Annotation\SerializedName('watched_videos')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsWatchedVideos')]
    public VideoVersionsUserMetadataConnectionsWatchedVideos $watchedVideos;
    
    /**
     * Information about the videos that this user wants to watch later.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsWatchlater $watchlater
     */
	#[\JMS\Serializer\Annotation\SerializedName('watchlater')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsWatchlater')]
    public VideoVersionsUserMetadataConnectionsWatchlater $watchlater;
    
	public function __construct()
	{
		$this->albums = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsAlbums();
		$this->appearances = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsAppearances();
		$this->block = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsBlock();
		$this->categories = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsCategories();
		$this->channels = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsChannels();
		$this->feed = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFeed();
		$this->folders = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFolders();
		$this->followers = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFollowers();
		$this->following = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsFollowing();
		$this->groups = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsGroups();
		$this->likes = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsLikes();
		$this->moderatedChannels = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsModeratedChannels();
		$this->pictures = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsPictures();
		$this->portfolios = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsPortfolios();
		$this->recommendedChannels = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsRecommendedChannels();
		$this->recommendedUsers = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsRecommendedUsers();
		$this->shared = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsShared();
		$this->videos = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsVideos();
		$this->watchedVideos = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsWatchedVideos();
		$this->watchlater = new \OpenAPI\OpenAPI\Models\Shared\VideoVersionsUserMetadataConnectionsWatchlater();
	}
}
