/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BuildBatchPhaseTypeEnum } from "./buildbatchphasetypeenum";
import { PhaseContext } from "./phasecontext";
import { StatusTypeEnum } from "./statustypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains information about a stage for a batch build.
 */
export class BuildBatchPhase extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PhaseContext })
  @Expose({ name: "contexts" })
  @Type(() => PhaseContext)
  contexts?: PhaseContext[];

  @SpeakeasyMetadata()
  @Expose({ name: "durationInSeconds" })
  durationInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "phaseStatus" })
  phaseStatus?: StatusTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "phaseType" })
  phaseType?: BuildBatchPhaseTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;
}
