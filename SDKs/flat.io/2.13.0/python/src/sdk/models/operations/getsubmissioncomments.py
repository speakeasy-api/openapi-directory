"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import assignmentsubmissioncomment as shared_assignmentsubmissioncomment
from ..shared import flaterrorresponse as shared_flaterrorresponse
from typing import Optional


@dataclasses.dataclass
class GetSubmissionCommentsSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetSubmissionCommentsRequest:
    
    assignment: str = dataclasses.field(metadata={'path_param': { 'field_name': 'assignment', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the assignment"""  
    class_: str = dataclasses.field(metadata={'path_param': { 'field_name': 'class', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the class"""  
    submission: str = dataclasses.field(metadata={'path_param': { 'field_name': 'submission', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the submission"""  
    

@dataclasses.dataclass
class GetSubmissionCommentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    assignment_submission_comments: Optional[list[shared_assignmentsubmissioncomment.AssignmentSubmissionComment]] = dataclasses.field(default=None)
    r"""The comments of the score"""  
    flat_error_response: Optional[shared_flaterrorresponse.FlatErrorResponse] = dataclasses.field(default=None)
    r"""Not granted to access to this submission"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    