"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import urlinforesponse as shared_urlinforesponse
from typing import Optional


@dataclasses.dataclass
class URLInfoRequest:
    
    url: str = dataclasses.field(metadata={'query_param': { 'field_name': 'url', 'style': 'form', 'explode': True }})
    r"""The URL to probe"""  
    fetch_content: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fetch-content', 'style': 'form', 'explode': True }})
    r"""If this URL responds with html, text, json or xml then return the response. This option is useful if you want to perform further processing on the URL content (e.g. with the HTML Extract or HTML Clean APIs)"""  
    ignore_certificate_errors: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ignore-certificate-errors', 'style': 'form', 'explode': True }})
    r"""Ignore any TLS/SSL certificate errors and load the URL anyway"""  
    retry: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'retry', 'style': 'form', 'explode': True }})
    r"""If the request fails for any reason try again this many times"""  
    timeout: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'timeout', 'style': 'form', 'explode': True }})
    r"""Timeout in seconds. Give up if still trying to load the URL after this number of seconds"""  
    

@dataclasses.dataclass
class URLInfoResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Your API request has been rejected. Check error code for details"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    url_info_response: Optional[shared_urlinforesponse.URLInfoResponse] = dataclasses.field(default=None)  
    