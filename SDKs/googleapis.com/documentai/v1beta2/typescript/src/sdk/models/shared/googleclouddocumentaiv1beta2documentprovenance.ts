/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDocumentaiV1beta2DocumentProvenanceParent } from "./googleclouddocumentaiv1beta2documentprovenanceparent";
import { Expose, Type } from "class-transformer";

/**
 * The type of provenance operation.
 */
export enum GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum {
  OperationTypeUnspecified = "OPERATION_TYPE_UNSPECIFIED",
  Add = "ADD",
  Remove = "REMOVE",
  Update = "UPDATE",
  Replace = "REPLACE",
  EvalRequested = "EVAL_REQUESTED",
  EvalApproved = "EVAL_APPROVED",
  EvalSkipped = "EVAL_SKIPPED",
}

/**
 * Structure to identify provenance relationships between annotations in different revisions.
 */
export class GoogleCloudDocumentaiV1beta2DocumentProvenance extends SpeakeasyBase {
  /**
   * The Id of this operation. Needs to be unique within the scope of the revision.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * References to the original elements that are replaced.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDocumentaiV1beta2DocumentProvenanceParent,
  })
  @Expose({ name: "parents" })
  @Type(() => GoogleCloudDocumentaiV1beta2DocumentProvenanceParent)
  parents?: GoogleCloudDocumentaiV1beta2DocumentProvenanceParent[];

  /**
   * The index of the revision that produced this element.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revision" })
  revision?: number;

  /**
   * The type of provenance operation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum;
}
