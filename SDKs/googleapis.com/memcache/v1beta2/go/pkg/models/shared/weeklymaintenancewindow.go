// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WeeklyMaintenanceWindowDayEnum - Required. Allows to define schedule that runs specified day of the week.
type WeeklyMaintenanceWindowDayEnum string

const (
	WeeklyMaintenanceWindowDayEnumDayOfWeekUnspecified WeeklyMaintenanceWindowDayEnum = "DAY_OF_WEEK_UNSPECIFIED"
	WeeklyMaintenanceWindowDayEnumMonday               WeeklyMaintenanceWindowDayEnum = "MONDAY"
	WeeklyMaintenanceWindowDayEnumTuesday              WeeklyMaintenanceWindowDayEnum = "TUESDAY"
	WeeklyMaintenanceWindowDayEnumWednesday            WeeklyMaintenanceWindowDayEnum = "WEDNESDAY"
	WeeklyMaintenanceWindowDayEnumThursday             WeeklyMaintenanceWindowDayEnum = "THURSDAY"
	WeeklyMaintenanceWindowDayEnumFriday               WeeklyMaintenanceWindowDayEnum = "FRIDAY"
	WeeklyMaintenanceWindowDayEnumSaturday             WeeklyMaintenanceWindowDayEnum = "SATURDAY"
	WeeklyMaintenanceWindowDayEnumSunday               WeeklyMaintenanceWindowDayEnum = "SUNDAY"
)

func (e *WeeklyMaintenanceWindowDayEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DAY_OF_WEEK_UNSPECIFIED":
		fallthrough
	case "MONDAY":
		fallthrough
	case "TUESDAY":
		fallthrough
	case "WEDNESDAY":
		fallthrough
	case "THURSDAY":
		fallthrough
	case "FRIDAY":
		fallthrough
	case "SATURDAY":
		fallthrough
	case "SUNDAY":
		*e = WeeklyMaintenanceWindowDayEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WeeklyMaintenanceWindowDayEnum: %s", s)
	}
}

// WeeklyMaintenanceWindow - Time window specified for weekly operations.
type WeeklyMaintenanceWindow struct {
	// Required. Allows to define schedule that runs specified day of the week.
	Day *WeeklyMaintenanceWindowDayEnum `json:"day,omitempty"`
	// Required. Duration of the time window.
	Duration *string `json:"duration,omitempty"`
	// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
	StartTime *TimeOfDay `json:"startTime,omitempty"`
}
