// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AuditCheckRunStatusEnum string

const (
	AuditCheckRunStatusEnumInProgress               AuditCheckRunStatusEnum = "IN_PROGRESS"
	AuditCheckRunStatusEnumWaitingForDataCollection AuditCheckRunStatusEnum = "WAITING_FOR_DATA_COLLECTION"
	AuditCheckRunStatusEnumCanceled                 AuditCheckRunStatusEnum = "CANCELED"
	AuditCheckRunStatusEnumCompletedCompliant       AuditCheckRunStatusEnum = "COMPLETED_COMPLIANT"
	AuditCheckRunStatusEnumCompletedNonCompliant    AuditCheckRunStatusEnum = "COMPLETED_NON_COMPLIANT"
	AuditCheckRunStatusEnumFailed                   AuditCheckRunStatusEnum = "FAILED"
)

func (e AuditCheckRunStatusEnum) ToPointer() *AuditCheckRunStatusEnum {
	return &e
}

func (e *AuditCheckRunStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IN_PROGRESS":
		fallthrough
	case "WAITING_FOR_DATA_COLLECTION":
		fallthrough
	case "CANCELED":
		fallthrough
	case "COMPLETED_COMPLIANT":
		fallthrough
	case "COMPLETED_NON_COMPLIANT":
		fallthrough
	case "FAILED":
		*e = AuditCheckRunStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuditCheckRunStatusEnum: %v", v)
	}
}
