/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * APIKeyOut - Anonymization of a source.
 */
public class APIKeyOut {
    /**
     * The API Key has admin role.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("admin")
    public Boolean admin;
    public APIKeyOut withAdmin(Boolean admin) {
        this.admin = admin;
        return this;
    }
    
    /**
     * The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("anonymized")
    public Boolean anonymized;
    public APIKeyOut withAnonymized(Boolean anonymized) {
        this.anonymized = anonymized;
        return this;
    }
    
    /**
     * The user API Key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiKey")
    public String apiKey;
    public APIKeyOut withApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }
    
    /**
     * The API Key has role corporate (ex SWIFT payments instead of Stripe payments).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("corporate")
    public Boolean corporate;
    public APIKeyOut withCorporate(Boolean corporate) {
        this.corporate = corporate;
        return this;
    }
    
    /**
     * The API Key is temporarily or permanently disabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabled")
    public Boolean disabled;
    public APIKeyOut withDisabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }
    
    /**
     * The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("learnable")
    public Boolean learnable;
    public APIKeyOut withLearnable(Boolean learnable) {
        this.learnable = learnable;
        return this;
    }
    
    /**
     * The API Key has partner role.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partner")
    public Boolean partner;
    public APIKeyOut withPartner(Boolean partner) {
        this.partner = partner;
        return this;
    }
    
    /**
     * The API Key is associated to a valid Stripe account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("striped")
    public Boolean striped;
    public APIKeyOut withStriped(Boolean striped) {
        this.striped = striped;
        return this;
    }
    
    /**
     * The user identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userId")
    public String userId;
    public APIKeyOut withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * The API Key is vetted (assumed truthful) for machine learning.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vetted")
    public Boolean vetted;
    public APIKeyOut withVetted(Boolean vetted) {
        this.vetted = vetted;
        return this;
    }
    
}
