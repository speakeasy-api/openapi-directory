// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Proposal - Represents a proposal in the marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Each field in a proposal can have one of the following setting:
//
// (readonly) - It is an error to try and set this field. (buyer-readonly) - Only the seller can set this field. (seller-readonly) - Only the buyer can set this field. (updatable) - The field is updatable at all times by either buyer or the seller.
type Proposal struct {
	BilledBuyer *Buyer `json:"billedBuyer,omitempty"`
	Buyer       *Buyer `json:"buyer,omitempty"`
	// Optional contact information of the buyer. (seller-readonly)
	BuyerContacts    []ContactInformation `json:"buyerContacts,omitempty"`
	BuyerPrivateData *PrivateData         `json:"buyerPrivateData,omitempty"`
	// IDs of DBM advertisers permission to this proposal.
	DbmAdvertiserIds []string `json:"dbmAdvertiserIds,omitempty"`
	// When an proposal is in an accepted state, indicates whether the buyer has signed off. Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly)
	HasBuyerSignedOff *bool `json:"hasBuyerSignedOff,omitempty"`
	// When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly)
	HasSellerSignedOff *bool `json:"hasSellerSignedOff,omitempty"`
	// What exchange will provide this inventory (readonly, except on create).
	InventorySource *string `json:"inventorySource,omitempty"`
	// True if the proposal is being renegotiated (readonly).
	IsRenegotiating *bool `json:"isRenegotiating,omitempty"`
	// True, if the buyside inventory setup is complete for this proposal. (readonly, except via OrderSetupCompleted action) Deprecated in favor of deal level setup complete flag.
	IsSetupComplete *bool `json:"isSetupComplete,omitempty"`
	// Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#proposal".
	Kind *string `json:"kind,omitempty"`
	// List of labels associated with the proposal. (readonly)
	Labels []MarketplaceLabel `json:"labels,omitempty"`
	// The role of the last user that either updated the proposal or left a comment. (readonly)
	LastUpdaterOrCommentorRole *string `json:"lastUpdaterOrCommentorRole,omitempty"`
	// The name for the proposal (updatable)
	Name *string `json:"name,omitempty"`
	// Optional negotiation id if this proposal is a preferred deal proposal.
	NegotiationID *string `json:"negotiationId,omitempty"`
	// Indicates whether the buyer/seller created the proposal.(readonly)
	OriginatorRole *string `json:"originatorRole,omitempty"`
	// Optional private auction id if this proposal is a private auction proposal.
	PrivateAuctionID *string `json:"privateAuctionId,omitempty"`
	// The unique id of the proposal. (readonly).
	ProposalID *string `json:"proposalId,omitempty"`
	// The current state of the proposal. (readonly)
	ProposalState *string `json:"proposalState,omitempty"`
	// The revision number for the proposal (readonly).
	RevisionNumber *string `json:"revisionNumber,omitempty"`
	// The time (ms since epoch) when the proposal was last revised (readonly).
	RevisionTimeMs *string `json:"revisionTimeMs,omitempty"`
	Seller         *Seller `json:"seller,omitempty"`
	// Optional contact information of the seller (buyer-readonly).
	SellerContacts []ContactInformation `json:"sellerContacts,omitempty"`
}
