// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostSpacesIDCollectiveDecisionSecurity struct {
	GmaAuth shared.SchemeGmaAuth `security:"scheme,type=oauth2"`
}

type PostSpacesIDCollectiveDecisionPathParams struct {
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// PostSpacesIDCollectiveDecisionRequestBodyEventEnum - for space type 'company' enums allowed are  'EGM','CGM','OGM','ConstituentAssembly','SolePartner','OtherEvent','Office','ExecutiveCommittee','Consulting','Board','PartnersMeeting' and for space type 'association' enums allowed are 'EGM','CGM','OGM','Other','Office','ExecutiveCommittee'
type PostSpacesIDCollectiveDecisionRequestBodyEventEnum string

const (
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumEgm                 PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "EGM"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumCgm                 PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "CGM"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumOgm                 PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "OGM"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumConstituentAssembly PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "ConstituentAssembly"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumSolePartner         PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "SolePartner"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumOtherEvent          PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "OtherEvent"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumOther               PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "Other"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumOffice              PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "Office"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumExecutiveCommittee  PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "ExecutiveCommittee"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumConsulting          PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "Consulting"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumBoard               PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "Board"
	PostSpacesIDCollectiveDecisionRequestBodyEventEnumPartnersMeeting     PostSpacesIDCollectiveDecisionRequestBodyEventEnum = "PartnersMeeting"
)

func (e *PostSpacesIDCollectiveDecisionRequestBodyEventEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EGM":
		fallthrough
	case "CGM":
		fallthrough
	case "OGM":
		fallthrough
	case "ConstituentAssembly":
		fallthrough
	case "SolePartner":
		fallthrough
	case "OtherEvent":
		fallthrough
	case "Other":
		fallthrough
	case "Office":
		fallthrough
	case "ExecutiveCommittee":
		fallthrough
	case "Consulting":
		fallthrough
	case "Board":
		fallthrough
	case "PartnersMeeting":
		*e = PostSpacesIDCollectiveDecisionRequestBodyEventEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesIDCollectiveDecisionRequestBodyEventEnum: %s", s)
	}
}

type PostSpacesIDCollectiveDecisionRequestBodyLevelEnum string

const (
	PostSpacesIDCollectiveDecisionRequestBodyLevelEnumConfidential PostSpacesIDCollectiveDecisionRequestBodyLevelEnum = "confidential"
	PostSpacesIDCollectiveDecisionRequestBodyLevelEnumRegular      PostSpacesIDCollectiveDecisionRequestBodyLevelEnum = "regular"
	PostSpacesIDCollectiveDecisionRequestBodyLevelEnumPublic       PostSpacesIDCollectiveDecisionRequestBodyLevelEnum = "public"
)

func (e *PostSpacesIDCollectiveDecisionRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PostSpacesIDCollectiveDecisionRequestBodyLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesIDCollectiveDecisionRequestBodyLevelEnum: %s", s)
	}
}

// PostSpacesIDCollectiveDecisionRequestBody - CollectiveDecision to add
type PostSpacesIDCollectiveDecisionRequestBody struct {
	About                     *string  `json:"About,omitempty"`
	Comment                   *string  `json:"Comment,omitempty"`
	Date                      string   `json:"Date"`
	DividendDistributions     *float64 `json:"DividendDistributions,omitempty"`
	DividendDistributionsDate *string  `json:"DividendDistributionsDate,omitempty"`
	// for space type 'company' enums allowed are  'EGM','CGM','OGM','ConstituentAssembly','SolePartner','OtherEvent','Office','ExecutiveCommittee','Consulting','Board','PartnersMeeting' and for space type 'association' enums allowed are 'EGM','CGM','OGM','Other','Office','ExecutiveCommittee'
	Event    PostSpacesIDCollectiveDecisionRequestBodyEventEnum  `json:"Event"`
	Home     *bool                                               `json:"Home,omitempty"`
	Keywords []string                                            `json:"Keywords,omitempty"`
	Level    *PostSpacesIDCollectiveDecisionRequestBodyLevelEnum `json:"Level,omitempty"`
}

type PostSpacesIDCollectiveDecisionRequest struct {
	PathParams PostSpacesIDCollectiveDecisionPathParams
	// CollectiveDecision to add
	Request  PostSpacesIDCollectiveDecisionRequestBody `request:"mediaType=application/json"`
	Security PostSpacesIDCollectiveDecisionSecurity
}

// PostSpacesIDCollectiveDecision201ApplicationJSON - Id of the collective decision created
type PostSpacesIDCollectiveDecision201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesIDCollectiveDecisionResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of the collective decision created
	PostSpacesIDCollectiveDecision201ApplicationJSONObject *PostSpacesIDCollectiveDecision201ApplicationJSON
}
