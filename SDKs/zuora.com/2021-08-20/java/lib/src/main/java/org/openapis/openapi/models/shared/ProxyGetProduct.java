/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProxyGetProduct - Container for custom fields of a Product object.
 * 
 */
public class ProxyGetProduct {
    /**
     *  Controls whether to allow your users to add or remove features while creating or amending a subscription.
     * **Character** **limit**: n/a
     * **Values**: true, false (default) 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowFeatureChanges")
    public Boolean allowFeatureChanges;
    public ProxyGetProduct withAllowFeatureChanges(Boolean allowFeatureChanges) {
        this.allowFeatureChanges = allowFeatureChanges;
        return this;
    }
    
    /**
     *  Category of the product. Used by Zuora Quotes Guided Product Selector.
     * **Character** **limit**: 100
     * **Values**: One of the following:
     * 
     * - Base Products
     * - Add On Services
     * - Miscellaneous Products
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Category")
    public String category;
    public ProxyGetProduct withCategory(String category) {
        this.category = category;
        return this;
    }
    
    /**
     * The ID of the Zuora user who created the `Product` object. **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedById")
    public String createdById;
    public ProxyGetProduct withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * The date when the `Product` object was created.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public ProxyGetProduct withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     *  A descriptionof the product. **Character limit**: 500 **Values**: a string of 500 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public ProxyGetProduct withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The date when the product expires and can't be subscribed to anymore, in `yyyy-mm-dd` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("EffectiveEndDate")
    public LocalDate effectiveEndDate;
    public ProxyGetProduct withEffectiveEndDate(LocalDate effectiveEndDate) {
        this.effectiveEndDate = effectiveEndDate;
        return this;
    }
    
    /**
     * The date when the product becomes available and can be subscribed to, in `yyyy-mm-dd` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("EffectiveStartDate")
    public LocalDate effectiveStartDate;
    public ProxyGetProduct withEffectiveStartDate(LocalDate effectiveStartDate) {
        this.effectiveStartDate = effectiveStartDate;
        return this;
    }
    
    /**
     * Object identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public ProxyGetProduct withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public ProxyGetProduct withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the product's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public ProxyGetProduct withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Type of item that is created in NetSuite for the product. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ItemType__NS")
    public ProxyGetProductItemTypeNSEnum itemTypeNS;
    public ProxyGetProduct withItemTypeNS(ProxyGetProductItemTypeNSEnum itemTypeNS) {
        this.itemTypeNS = itemTypeNS;
        return this;
    }
    
    /**
     * The name of the product. This information is displayed in the product catalog pages in the web-based UI. **Character limit**: 100 **Values**: a string of 100 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public ProxyGetProduct withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The unique SKU for the product. **Character limit**: 50 **Values**: one of the following:
     * 
     * - leave null for automatic generated
     * - an alphanumeric string of 50 characters or fewer
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SKU")
    public String sku;
    public ProxyGetProduct withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * Date when the product was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public ProxyGetProduct withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * The ID of the last user to update the object. **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedById")
    public String updatedById;
    public ProxyGetProduct withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * The date when the object was last updated.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedDate")
    public OffsetDateTime updatedDate;
    public ProxyGetProduct withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
