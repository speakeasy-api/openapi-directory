// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ListCommonAreaPhonesSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ListCommonAreaPhonesRequest struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The total number of records returned from a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
}

type ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesCallingPlans struct {
	// Plan name.
	Name *string
	// [Plan Number](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
	Type *string
}

// ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbersSourceEnum - Phone number source. The value can be either `internal` or `external`.
type ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbersSourceEnum string

const (
	ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbersSourceEnumInternal ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbersSourceEnum = "internal"
	ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbersSourceEnumExternal ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbersSourceEnum = "external"
)

func (e *ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbersSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal":
		fallthrough
	case "external":
		*e = ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbersSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbersSourceEnum: %s", s)
	}
}

type ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbers struct {
	// Unique Identifier of the Phone number.
	ID *string
	// Phone number.
	Number *string
	// Phone number source. The value can be either `internal` or `external`.
	Source *ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbersSourceEnum
}

type ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesSite struct {
	// Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.
	ID *string
	// Name of the site.
	Name *string
}

type ListCommonAreaPhones200ApplicationXMLCommonAreaPhones struct {
	CallingPlans []ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesCallingPlans
	// Type of device (manufacturer name + model name). Refer to the table here for a list of [supported devices](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice).
	DeviceType *string
	// Display name of the common area phone.
	DisplayName *string
	// Unique Identifier of the common area phone.
	ID *string
	//  Mac address or serial number.
	MacAddress   *string
	PhoneNumbers []ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesPhoneNumbers
	Site         *ListCommonAreaPhones200ApplicationXMLCommonAreaPhonesSite
	// Status of the common area phone. It can be either `online` or `offline`.
	Status *string
}

// ListCommonAreaPhones200ApplicationXML - **HTTP Status Code:** `200` **OK**<br>
// List of Common Area Phones retrieved successfully.
type ListCommonAreaPhones200ApplicationXML struct {
	CommonAreaPhones []ListCommonAreaPhones200ApplicationXMLCommonAreaPhones
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// Total number of records returned from a single API call.
	PageSize *int64
	// Total number of records found for this query.
	TotalRecords *int64
}

type ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesCallingPlans struct {
	// Plan name.
	Name *string `json:"name,omitempty"`
	// [Plan Number](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).
	Type *string `json:"type,omitempty"`
}

// ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbersSourceEnum - Phone number source. The value can be either `internal` or `external`.
type ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbersSourceEnum string

const (
	ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbersSourceEnumInternal ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbersSourceEnum = "internal"
	ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbersSourceEnumExternal ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbersSourceEnum = "external"
)

func (e *ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbersSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal":
		fallthrough
	case "external":
		*e = ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbersSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbersSourceEnum: %s", s)
	}
}

type ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbers struct {
	// Unique Identifier of the Phone number.
	ID *string `json:"id,omitempty"`
	// Phone number.
	Number *string `json:"number,omitempty"`
	// Phone number source. The value can be either `internal` or `external`.
	Source *ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbersSourceEnum `json:"source,omitempty"`
}

type ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesSite struct {
	// Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.
	ID *string `json:"id,omitempty"`
	// Name of the site.
	Name *string `json:"name,omitempty"`
}

type ListCommonAreaPhones200ApplicationJSONCommonAreaPhones struct {
	CallingPlans []ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesCallingPlans `json:"calling_plans,omitempty"`
	// Type of device (manufacturer name + model name). Refer to the table here for a list of [supported devices](https://marketplace.zoom.us/docs/api-reference/other-references/zoomphone-supporteddevice).
	DeviceType *string `json:"device_type,omitempty"`
	// Display name of the common area phone.
	DisplayName *string `json:"display_name,omitempty"`
	// Unique Identifier of the common area phone.
	ID *string `json:"id,omitempty"`
	//  Mac address or serial number.
	MacAddress   *string                                                              `json:"mac_address,omitempty"`
	PhoneNumbers []ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesPhoneNumbers `json:"phone_numbers,omitempty"`
	Site         *ListCommonAreaPhones200ApplicationJSONCommonAreaPhonesSite          `json:"site,omitempty"`
	// Status of the common area phone. It can be either `online` or `offline`.
	Status *string `json:"status,omitempty"`
}

// ListCommonAreaPhones200ApplicationJSON - **HTTP Status Code:** `200` **OK**<br>
// List of Common Area Phones retrieved successfully.
type ListCommonAreaPhones200ApplicationJSON struct {
	CommonAreaPhones []ListCommonAreaPhones200ApplicationJSONCommonAreaPhones `json:"common_area_phones,omitempty"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// Total number of records returned from a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// Total number of records found for this query.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type ListCommonAreaPhonesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK**<br>
	// List of Common Area Phones retrieved successfully.
	ListCommonAreaPhones200ApplicationJSONObject *ListCommonAreaPhones200ApplicationJSON
}
