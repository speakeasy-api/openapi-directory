/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Metric - The quantitative measurements of a report. For example, the metric `eventCount` is the total number of events. Requests are allowed up to 10 metrics.
 */
public class Metric {
    /**
     * A mathematical expression for derived metrics. For example, the metric Event count per user is `eventCount/totalUsers`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expression")
    public String expression;

    public Metric withExpression(String expression) {
        this.expression = expression;
        return this;
    }
    
    /**
     * Indicates if a metric is invisible in the report response. If a metric is invisible, the metric will not produce a column in the response, but can be used in `metricFilter`, `orderBys`, or a metric `expression`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invisible")
    public Boolean invisible;

    public Metric withInvisible(Boolean invisible) {
        this.invisible = invisible;
        return this;
    }
    
    /**
     * The name of the metric. See the [API Metrics](https://developers.google.com/analytics/devguides/reporting/data/v1/api-schema#metrics) for the list of metric names. If `expression` is specified, `name` can be any string that you would like within the allowed character set. For example if `expression` is `screenPageViews/sessions`, you could call that metric's name = `viewsPerSession`. Metric names that you choose must match the regular expression `^[a-zA-Z0-9_]$`. Metrics are referenced by `name` in `metricFilter`, `orderBys`, and metric `expression`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Metric withName(String name) {
        this.name = name;
        return this;
    }
    
    public Metric(){}
}
