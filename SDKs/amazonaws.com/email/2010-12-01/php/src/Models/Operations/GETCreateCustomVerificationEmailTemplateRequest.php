<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETCreateCustomVerificationEmailTemplateRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETCreateCustomVerificationEmailTemplateActionEnum $action;
    
    /**
     * The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
     * 
     * @var string $failureRedirectionURL
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=FailureRedirectionURL')]
    public string $failureRedirectionURL;
    
    /**
     * The email address that the custom verification email is sent from.
     * 
     * @var string $fromEmailAddress
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=FromEmailAddress')]
    public string $fromEmailAddress;
    
    /**
     * The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
     * 
     * @var string $successRedirectionURL
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SuccessRedirectionURL')]
    public string $successRedirectionURL;
    
    /**
     * The content of the custom verification email. The total size of the email must be less than 10 MB. The message body may contain HTML, with some limitations. For more information, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/custom-verification-emails.html#custom-verification-emails-faq">Custom Verification Email Frequently Asked Questions</a> in the <i>Amazon SES Developer Guide</i>.
     * 
     * @var string $templateContent
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TemplateContent')]
    public string $templateContent;
    
    /**
     * The name of the custom verification email template.
     * 
     * @var string $templateName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TemplateName')]
    public string $templateName;
    
    /**
     * The subject line of the custom verification email.
     * 
     * @var string $templateSubject
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TemplateSubject')]
    public string $templateSubject;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETCreateCustomVerificationEmailTemplateVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETCreateCustomVerificationEmailTemplateActionEnum::CREATE_CUSTOM_VERIFICATION_EMAIL_TEMPLATE;
		$this->failureRedirectionURL = "";
		$this->fromEmailAddress = "";
		$this->successRedirectionURL = "";
		$this->templateContent = "";
		$this->templateName = "";
		$this->templateSubject = "";
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETCreateCustomVerificationEmailTemplateVersionEnum::TWO_THOUSAND_AND_TEN1201;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
