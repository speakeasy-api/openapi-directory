// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteArtifactRuleRuleEnum - The unique name/type of a rule.
type DeleteArtifactRuleRuleEnum string

const (
	DeleteArtifactRuleRuleEnumValidity      DeleteArtifactRuleRuleEnum = "VALIDITY"
	DeleteArtifactRuleRuleEnumCompatibility DeleteArtifactRuleRuleEnum = "COMPATIBILITY"
)

func (e DeleteArtifactRuleRuleEnum) ToPointer() *DeleteArtifactRuleRuleEnum {
	return &e
}

func (e *DeleteArtifactRuleRuleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VALIDITY":
		fallthrough
	case "COMPATIBILITY":
		*e = DeleteArtifactRuleRuleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteArtifactRuleRuleEnum: %v", v)
	}
}

type DeleteArtifactRuleRequest struct {
	// The artifact ID.  Can be a string (client-provided) or UUID (server-generated), representing the unique artifact identifier.
	ArtifactID string `pathParam:"style=simple,explode=false,name=artifactId"`
	// The artifact group ID.  Must be a string provided by the client, representing the name of the grouping of artifacts.
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// The unique name/type of a rule.
	Rule DeleteArtifactRuleRuleEnum `pathParam:"style=simple,explode=false,name=rule"`
}

type DeleteArtifactRuleResponse struct {
	ContentType string
	// Common response for all operations that can return a `404` error.
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
