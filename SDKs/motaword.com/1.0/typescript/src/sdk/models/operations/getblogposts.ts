/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetBlogPostsRequest extends SpeakeasyBase {
  /**
   * When `true`, and no article is found in the locale, it falls back to `locale=en`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fallback",
  })
  fallback?: boolean;

  /**
   * Article language, default `en`. When no blog article is available and `fallback=true` is specified, it falls back to `en`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=locale",
  })
  locale?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;
}

export class GetBlogPostsResponse extends SpeakeasyBase {
  /**
   * List of blog articles
   */
  @SpeakeasyMetadata()
  blogArticleList?: shared.BlogArticleList;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
