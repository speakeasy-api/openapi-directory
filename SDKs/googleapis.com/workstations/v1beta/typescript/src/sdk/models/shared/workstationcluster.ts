/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import {
  PrivateClusterConfig,
  PrivateClusterConfigInput,
} from "./privateclusterconfig";
import { Status } from "./status";
import { Expose, Type } from "class-transformer";

/**
 * A grouping of workstation configurations and the associated workstations in that region.
 */
export class WorkstationCluster extends SpeakeasyBase {
  /**
   * Client-specified annotations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotations" })
  annotations?: Record<string, string>;

  /**
   * Output only. Status conditions describing the current resource state.
   */
  @SpeakeasyMetadata({ elemType: Status })
  @Expose({ name: "conditions" })
  @Type(() => Status)
  conditions?: Status[];

  /**
   * Output only. Time when this resource was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "degraded" })
  degraded?: boolean;

  /**
   * Output only. Time when this resource was soft-deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleteTime" })
  deleteTime?: string;

  /**
   * Human-readable name for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Full name of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Immutable. Name of the Compute Engine network in which instances associated with this cluster will be created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: string;

  /**
   * Configuration options for private clusters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privateClusterConfig" })
  @Type(() => PrivateClusterConfig)
  privateClusterConfig?: PrivateClusterConfig;

  /**
   * Output only. Indicates whether this resource is currently being updated to match its intended state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reconciling" })
  reconciling?: boolean;

  /**
   * Immutable. Name of the Compute Engine subnetwork in which instances associated with this cluster will be created. Must be part of the subnetwork specified for this cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subnetwork" })
  subnetwork?: string;

  /**
   * Output only. A system-assigned unique identified for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;

  /**
   * Output only. Time when this resource was most recently updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * A grouping of workstation configurations and the associated workstations in that region.
 */
export class WorkstationClusterInput extends SpeakeasyBase {
  /**
   * Client-specified annotations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotations" })
  annotations?: Record<string, string>;

  /**
   * Human-readable name for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Full name of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Immutable. Name of the Compute Engine network in which instances associated with this cluster will be created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: string;

  /**
   * Configuration options for private clusters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privateClusterConfig" })
  @Type(() => PrivateClusterConfigInput)
  privateClusterConfig?: PrivateClusterConfigInput;

  /**
   * Immutable. Name of the Compute Engine subnetwork in which instances associated with this cluster will be created. Must be part of the subnetwork specified for this cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subnetwork" })
  subnetwork?: string;
}
