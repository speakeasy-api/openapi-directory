"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataRepositoryAssociation = void 0;
var utils_1 = require("../../../internal/utils");
var datarepositoryfailuredetails_1 = require("./datarepositoryfailuredetails");
var datarepositorylifecycleenum_1 = require("./datarepositorylifecycleenum");
var nfsdatarepositoryconfiguration_1 = require("./nfsdatarepositoryconfiguration");
var s3datarepositoryconfiguration_1 = require("./s3datarepositoryconfiguration");
var tag_1 = require("./tag");
var class_transformer_1 = require("class-transformer");
/**
 * <p>The configuration of a data repository association that links an Amazon FSx for Lustre file system to an Amazon S3 bucket or an Amazon File Cache resource to an Amazon S3 bucket or an NFS file system. The data repository association configuration object is returned in the response of the following operations:</p> <ul> <li> <p> <code>CreateDataRepositoryAssociation</code> </p> </li> <li> <p> <code>UpdateDataRepositoryAssociation</code> </p> </li> <li> <p> <code>DescribeDataRepositoryAssociations</code> </p> </li> </ul> <p>Data repository associations are supported only for an Amazon FSx for Lustre file system with the <code>Persistent_2</code> deployment type and for an Amazon File Cache resource.</p>
 */
var DataRepositoryAssociation = /** @class */ (function (_super) {
    __extends(DataRepositoryAssociation, _super);
    function DataRepositoryAssociation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AssociationId" }),
        __metadata("design:type", String)
    ], DataRepositoryAssociation.prototype, "associationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "BatchImportMetaDataOnCreate" }),
        __metadata("design:type", Boolean)
    ], DataRepositoryAssociation.prototype, "batchImportMetaDataOnCreate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CreationTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], DataRepositoryAssociation.prototype, "creationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DataRepositoryPath" }),
        __metadata("design:type", String)
    ], DataRepositoryAssociation.prototype, "dataRepositoryPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DataRepositorySubdirectories" }),
        __metadata("design:type", Array)
    ], DataRepositoryAssociation.prototype, "dataRepositorySubdirectories", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FailureDetails" }),
        (0, class_transformer_1.Type)(function () { return datarepositoryfailuredetails_1.DataRepositoryFailureDetails; }),
        __metadata("design:type", datarepositoryfailuredetails_1.DataRepositoryFailureDetails)
    ], DataRepositoryAssociation.prototype, "failureDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FileCacheId" }),
        __metadata("design:type", String)
    ], DataRepositoryAssociation.prototype, "fileCacheId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FileCachePath" }),
        __metadata("design:type", String)
    ], DataRepositoryAssociation.prototype, "fileCachePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FileSystemId" }),
        __metadata("design:type", String)
    ], DataRepositoryAssociation.prototype, "fileSystemId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FileSystemPath" }),
        __metadata("design:type", String)
    ], DataRepositoryAssociation.prototype, "fileSystemPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ImportedFileChunkSize" }),
        __metadata("design:type", Number)
    ], DataRepositoryAssociation.prototype, "importedFileChunkSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Lifecycle" }),
        __metadata("design:type", String)
    ], DataRepositoryAssociation.prototype, "lifecycle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "NFS" }),
        (0, class_transformer_1.Type)(function () { return nfsdatarepositoryconfiguration_1.NFSDataRepositoryConfiguration; }),
        __metadata("design:type", nfsdatarepositoryconfiguration_1.NFSDataRepositoryConfiguration)
    ], DataRepositoryAssociation.prototype, "nfs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ResourceARN" }),
        __metadata("design:type", String)
    ], DataRepositoryAssociation.prototype, "resourceARN", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "S3" }),
        (0, class_transformer_1.Type)(function () { return s3datarepositoryconfiguration_1.S3DataRepositoryConfiguration; }),
        __metadata("design:type", s3datarepositoryconfiguration_1.S3DataRepositoryConfiguration)
    ], DataRepositoryAssociation.prototype, "s3", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: tag_1.Tag }),
        (0, class_transformer_1.Expose)({ name: "Tags" }),
        (0, class_transformer_1.Type)(function () { return tag_1.Tag; }),
        __metadata("design:type", Array)
    ], DataRepositoryAssociation.prototype, "tags", void 0);
    return DataRepositoryAssociation;
}(utils_1.SpeakeasyBase));
exports.DataRepositoryAssociation = DataRepositoryAssociation;
