/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TerminalRefund } from "./terminalrefund";
import { Expose, Type } from "class-transformer";

/**
 * An object containing the fields to POST for the request.
 *
 * @remarks
 *
 * See the corresponding object definition for field details.
 */
export class CreateTerminalRefundRequest extends SpeakeasyBase {
  /**
   * A unique string that identifies this `CreateRefund` request. Keys can be any valid string but
   *
   * @remarks
   * must be unique for every `CreateRefund` request.
   *
   * See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idempotency_key" })
  idempotencyKey: string;

  @SpeakeasyMetadata()
  @Expose({ name: "refund" })
  @Type(() => TerminalRefund)
  refund?: TerminalRefund;
}
