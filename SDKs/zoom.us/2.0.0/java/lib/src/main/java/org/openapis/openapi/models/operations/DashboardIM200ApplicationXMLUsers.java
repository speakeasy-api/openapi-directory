/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;



public class DashboardIM200ApplicationXMLUsers {
    /**
     * Total number of instant meeting calls received by the user.
     */
    
    public Long callsReceive;
    public DashboardIM200ApplicationXMLUsers withCallsReceive(Long callsReceive) {
        this.callsReceive = callsReceive;
        return this;
    }
    
    /**
     * Total number of instant meeting calls made by the user.
     */
    
    public Long callsSend;
    public DashboardIM200ApplicationXMLUsers withCallsSend(Long callsSend) {
        this.callsSend = callsSend;
        return this;
    }
    
    /**
     * User email.
     */
    
    public String email;
    public DashboardIM200ApplicationXMLUsers withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Total number of emojis received by the user.
     */
    
    public Long emojiReceive;
    public DashboardIM200ApplicationXMLUsers withEmojiReceive(Long emojiReceive) {
        this.emojiReceive = emojiReceive;
        return this;
    }
    
    /**
     * Total number of emojis sent by the user.
     */
    
    public Long emojiSend;
    public DashboardIM200ApplicationXMLUsers withEmojiSend(Long emojiSend) {
        this.emojiSend = emojiSend;
        return this;
    }
    
    /**
     * Total number of files received by the user.
     */
    
    public Long filesReceive;
    public DashboardIM200ApplicationXMLUsers withFilesReceive(Long filesReceive) {
        this.filesReceive = filesReceive;
        return this;
    }
    
    /**
     * Total number of files sent by the user.
     */
    
    public Long filesSend;
    public DashboardIM200ApplicationXMLUsers withFilesSend(Long filesSend) {
        this.filesSend = filesSend;
        return this;
    }
    
    /**
     * Total number of messages received by the user in channels.
     */
    
    public Long groupReceive;
    public DashboardIM200ApplicationXMLUsers withGroupReceive(Long groupReceive) {
        this.groupReceive = groupReceive;
        return this;
    }
    
    /**
     * Total number of messages sent by the user in channels.
     */
    
    public Long groupSend;
    public DashboardIM200ApplicationXMLUsers withGroupSend(Long groupSend) {
        this.groupSend = groupSend;
        return this;
    }
    
    /**
     * Total number of images received by the user.
     */
    
    public Long imagesReceive;
    public DashboardIM200ApplicationXMLUsers withImagesReceive(Long imagesReceive) {
        this.imagesReceive = imagesReceive;
        return this;
    }
    
    /**
     * Total number of images sent by the user.
     */
    
    public Long imagesSend;
    public DashboardIM200ApplicationXMLUsers withImagesSend(Long imagesSend) {
        this.imagesSend = imagesSend;
        return this;
    }
    
    /**
     * Total number of messages received by the user.
     */
    
    public Long totalReceive;
    public DashboardIM200ApplicationXMLUsers withTotalReceive(Long totalReceive) {
        this.totalReceive = totalReceive;
        return this;
    }
    
    /**
     * Total number of messages sent by the user.
     */
    
    public Long totalSend;
    public DashboardIM200ApplicationXMLUsers withTotalSend(Long totalSend) {
        this.totalSend = totalSend;
        return this;
    }
    
    /**
     * User ID.
     */
    
    public String userId;
    public DashboardIM200ApplicationXMLUsers withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * User display name.
     */
    
    public String userName;
    public DashboardIM200ApplicationXMLUsers withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
    /**
     * Total number of video files received by the user. 
     */
    
    public Long videosReceive;
    public DashboardIM200ApplicationXMLUsers withVideosReceive(Long videosReceive) {
        this.videosReceive = videosReceive;
        return this;
    }
    
    /**
     * Total number of video files sent by the user.
     */
    
    public Long videosSend;
    public DashboardIM200ApplicationXMLUsers withVideosSend(Long videosSend) {
        this.videosSend = videosSend;
        return this;
    }
    
    /**
     * Total number of voice files received by the user.
     */
    
    public Long voiceReceive;
    public DashboardIM200ApplicationXMLUsers withVoiceReceive(Long voiceReceive) {
        this.voiceReceive = voiceReceive;
        return this;
    }
    
    /**
     * Total number of voice files sent by the user.
     */
    
    public Long voiceSend;
    public DashboardIM200ApplicationXMLUsers withVoiceSend(Long voiceSend) {
        this.voiceSend = voiceSend;
        return this;
    }
    
}
