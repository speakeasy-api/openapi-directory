/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OrgUnit - Managing your account's organizational units allows you to configure your users' access to services and custom settings. For more information about common organizational unit tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-org-units.html). The customer's organizational unit hierarchy is limited to 35 levels of depth.
 */
public class OrgUnit {
    /**
     * Determines if a sub-organizational unit can inherit the settings of the parent organization. The default value is `false`, meaning a sub-organizational unit inherits the settings of the nearest parent organizational unit. We recommend using the default value because setting `block_inheritance` to `true` can have _unintended consequences_. For more information about inheritance and users in an organization structure, see the [administration help center](https://support.google.com/a/answer/4352075).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blockInheritance")
    public Boolean blockInheritance;

    public OrgUnit withBlockInheritance(Boolean blockInheritance) {
        this.blockInheritance = blockInheritance;
        return this;
    }
    
    /**
     * Description of the organizational unit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public OrgUnit withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * ETag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public OrgUnit withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The type of the API resource. For Orgunits resources, the value is `admin#directory#orgUnit`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public OrgUnit withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The organizational unit's path name. For example, an organizational unit's name within the /corp/support/sales_support parent path is sales_support. Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public OrgUnit withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The unique ID of the organizational unit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orgUnitId")
    public String orgUnitId;

    public OrgUnit withOrgUnitId(String orgUnitId) {
        this.orgUnitId = orgUnitId;
        return this;
    }
    
    /**
     * The full path to the organizational unit. The `orgUnitPath` is a derived property. When listed, it is derived from `parentOrgunitPath` and organizational unit's `name`. For example, for an organizational unit named 'apps' under parent organization '/engineering', the orgUnitPath is '/engineering/apps'. In order to edit an `orgUnitPath`, either update the name of the organization or the `parentOrgunitPath`. A user's organizational unit determines which Google Workspace services the user has access to. If the user is moved to a new organization, the user's access changes. For more information about organization structures, see the [administration help center](https://support.google.com/a/answer/4352075). For more information about moving a user to a different organization, see [Update a user](/admin-sdk/directory/v1/guides/manage-users.html#update_user).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orgUnitPath")
    public String orgUnitPath;

    public OrgUnit withOrgUnitPath(String orgUnitPath) {
        this.orgUnitPath = orgUnitPath;
        return this;
    }
    
    /**
     * The unique ID of the parent organizational unit. Required, unless `parentOrgUnitPath` is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentOrgUnitId")
    public String parentOrgUnitId;

    public OrgUnit withParentOrgUnitId(String parentOrgUnitId) {
        this.parentOrgUnitId = parentOrgUnitId;
        return this;
    }
    
    /**
     * The organizational unit's parent path. For example, /corp/sales is the parent path for /corp/sales/sales_support organizational unit. Required, unless `parentOrgUnitId` is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentOrgUnitPath")
    public String parentOrgUnitPath;

    public OrgUnit withParentOrgUnitPath(String parentOrgUnitPath) {
        this.parentOrgUnitPath = parentOrgUnitPath;
        return this;
    }
    
    public OrgUnit(){}
}
