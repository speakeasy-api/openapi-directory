<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class SendSerialConsoleSSHPublicKeyResponse
{
    /**
     * AuthException
     * 
     * @var mixed $authException
     */
	
    public mixed $authException = null;
    
	
    public string $contentType;
    
    /**
     * EC2InstanceNotFoundException
     * 
     * @var mixed $ec2InstanceNotFoundException
     */
	
    public mixed $ec2InstanceNotFoundException = null;
    
    /**
     * EC2InstanceStateInvalidException
     * 
     * @var mixed $ec2InstanceStateInvalidException
     */
	
    public mixed $ec2InstanceStateInvalidException = null;
    
    /**
     * EC2InstanceTypeInvalidException
     * 
     * @var mixed $ec2InstanceTypeInvalidException
     */
	
    public mixed $ec2InstanceTypeInvalidException = null;
    
    /**
     * EC2InstanceUnavailableException
     * 
     * @var mixed $ec2InstanceUnavailableException
     */
	
    public mixed $ec2InstanceUnavailableException = null;
    
    /**
     * InvalidArgsException
     * 
     * @var mixed $invalidArgsException
     */
	
    public mixed $invalidArgsException = null;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SendSerialConsoleSSHPublicKeyResponse $sendSerialConsoleSSHPublicKeyResponse
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\SendSerialConsoleSSHPublicKeyResponse $sendSerialConsoleSSHPublicKeyResponse = null;
    
    /**
     * SerialConsoleSessionUnavailableException
     * 
     * @var mixed $serialConsoleSessionUnavailableException
     */
	
    public mixed $serialConsoleSessionUnavailableException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
    /**
     * SerialConsoleAccessDisabledException
     * 
     * @var mixed $serialConsoleAccessDisabledException
     */
	
    public mixed $serialConsoleAccessDisabledException = null;
    
    /**
     * SerialConsoleSessionLimitExceededException
     * 
     * @var mixed $serialConsoleSessionLimitExceededException
     */
	
    public mixed $serialConsoleSessionLimitExceededException = null;
    
    /**
     * ServiceException
     * 
     * @var mixed $serviceException
     */
	
    public mixed $serviceException = null;
    
    /**
     * ThrottlingException
     * 
     * @var mixed $throttlingException
     */
	
    public mixed $throttlingException = null;
    
	public function __construct()
	{
		$this->authException = null;
		$this->contentType = "";
		$this->ec2InstanceNotFoundException = null;
		$this->ec2InstanceStateInvalidException = null;
		$this->ec2InstanceTypeInvalidException = null;
		$this->ec2InstanceUnavailableException = null;
		$this->invalidArgsException = null;
		$this->sendSerialConsoleSSHPublicKeyResponse = null;
		$this->serialConsoleSessionUnavailableException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
		$this->serialConsoleAccessDisabledException = null;
		$this->serialConsoleSessionLimitExceededException = null;
		$this->serviceException = null;
		$this->throttlingException = null;
	}
}
