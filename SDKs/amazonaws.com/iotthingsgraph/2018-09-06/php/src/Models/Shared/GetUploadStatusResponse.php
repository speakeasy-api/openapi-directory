<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetUploadStatusResponse - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetUploadStatusResponse
{
	#[\JMS\Serializer\Annotation\SerializedName('createdDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdDate;
    
    /**
     * $failureReason
     * 
     * @var ?array<string> $failureReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('failureReason')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $failureReason = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('namespaceArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $namespaceArn = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('namespaceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $namespaceName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('namespaceVersion')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $namespaceVersion = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('uploadId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uploadId;
    
	#[\JMS\Serializer\Annotation\SerializedName('uploadStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UploadStatusEnum>')]
    public UploadStatusEnum $uploadStatus;
    
	public function __construct()
	{
		$this->createdDate = new \DateTime();
		$this->failureReason = null;
		$this->namespaceArn = null;
		$this->namespaceName = null;
		$this->namespaceVersion = null;
		$this->uploadId = "";
		$this->uploadStatus = \OpenAPI\OpenAPI\Models\Shared\UploadStatusEnum::IN_PROGRESS;
	}
}
