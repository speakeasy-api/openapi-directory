/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ShareInvitationSummary - A share invitation summary return object.
 */
public class ShareInvitationSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensArn")
    public String lensArn;
    public ShareInvitationSummary withLensArn(String lensArn) {
        this.lensArn = lensArn;
        return this;
    }
    
    /**
     * The full name of the lens.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensName")
    public String lensName;
    public ShareInvitationSummary withLensName(String lensName) {
        this.lensName = lensName;
        return this;
    }
    
    /**
     * Permission granted on a workload share.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PermissionType")
    public PermissionTypeEnum permissionType;
    public ShareInvitationSummary withPermissionType(PermissionTypeEnum permissionType) {
        this.permissionType = permissionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShareInvitationId")
    public String shareInvitationId;
    public ShareInvitationSummary withShareInvitationId(String shareInvitationId) {
        this.shareInvitationId = shareInvitationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShareResourceType")
    public ShareResourceTypeEnum shareResourceType;
    public ShareInvitationSummary withShareResourceType(ShareResourceTypeEnum shareResourceType) {
        this.shareResourceType = shareResourceType;
        return this;
    }
    
    /**
     * An Amazon Web Services account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SharedBy")
    public String sharedBy;
    public ShareInvitationSummary withSharedBy(String sharedBy) {
        this.sharedBy = sharedBy;
        return this;
    }
    
    /**
     * The Amazon Web Services account ID, IAM role, organization ID, or organizational unit (OU) ID with which the workload is shared.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SharedWith")
    public String sharedWith;
    public ShareInvitationSummary withSharedWith(String sharedWith) {
        this.sharedWith = sharedWith;
        return this;
    }
    
    /**
     * The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkloadId")
    public String workloadId;
    public ShareInvitationSummary withWorkloadId(String workloadId) {
        this.workloadId = workloadId;
        return this;
    }
    
    /**
     * &lt;p&gt;The name of the workload.&lt;/p&gt; &lt;p&gt;The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkloadName")
    public String workloadName;
    public ShareInvitationSummary withWorkloadName(String workloadName) {
        this.workloadName = workloadName;
        return this;
    }
    
}
