/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DimensionMetadata - Explains a dimension.
 */
public class DimensionMetadata {
    /**
     * This dimension's name. Useable in [Dimension](#Dimension)'s `name`. For example, `eventName`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiName")
    public String apiName;
    public DimensionMetadata withApiName(String apiName) {
        this.apiName = apiName;
        return this;
    }
    
    /**
     * The display name of the category that this dimension belongs to. Similar dimensions and metrics are categorized together.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public String category;
    public DimensionMetadata withCategory(String category) {
        this.category = category;
        return this;
    }
    
    /**
     * True if the dimension is a custom dimension for this property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customDefinition")
    public Boolean customDefinition;
    public DimensionMetadata withCustomDefinition(Boolean customDefinition) {
        this.customDefinition = customDefinition;
        return this;
    }
    
    /**
     * Still usable but deprecated names for this dimension. If populated, this dimension is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the dimension will be available only by `apiName`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deprecatedApiNames")
    public String[] deprecatedApiNames;
    public DimensionMetadata withDeprecatedApiNames(String[] deprecatedApiNames) {
        this.deprecatedApiNames = deprecatedApiNames;
        return this;
    }
    
    /**
     * Description of how this dimension is used and calculated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public DimensionMetadata withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * This dimension's name within the Google Analytics user interface. For example, `Event name`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uiName")
    public String uiName;
    public DimensionMetadata withUiName(String uiName) {
        this.uiName = uiName;
        return this;
    }
    
}
