// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// JournalLineJournalLineEmployee - The journal lines' employee
type JournalLineJournalLineEmployee struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

// JournalLineJournalLinePayFrequencyEnum - The journal lines' pay frequency
type JournalLineJournalLinePayFrequencyEnum string

const (
	JournalLineJournalLinePayFrequencyEnumWeekly     JournalLineJournalLinePayFrequencyEnum = "Weekly"
	JournalLineJournalLinePayFrequencyEnumMonthly    JournalLineJournalLinePayFrequencyEnum = "Monthly"
	JournalLineJournalLinePayFrequencyEnumTwoWeekly  JournalLineJournalLinePayFrequencyEnum = "TwoWeekly"
	JournalLineJournalLinePayFrequencyEnumFourWeekly JournalLineJournalLinePayFrequencyEnum = "FourWeekly"
	JournalLineJournalLinePayFrequencyEnumYearly     JournalLineJournalLinePayFrequencyEnum = "Yearly"
)

func (e *JournalLineJournalLinePayFrequencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Weekly":
		fallthrough
	case "Monthly":
		fallthrough
	case "TwoWeekly":
		fallthrough
	case "FourWeekly":
		fallthrough
	case "Yearly":
		*e = JournalLineJournalLinePayFrequencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JournalLineJournalLinePayFrequencyEnum: %s", s)
	}
}

// JournalLineJournalLinePayRun - The journal lines' pay run
type JournalLineJournalLinePayRun struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

// JournalLineJournalLineSubContractor - The journal lines' sub contractor
type JournalLineJournalLineSubContractor struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

type JournalLineJournalLine struct {
	// The journal lines' credit
	Credit *float64 `json:"Credit,omitempty"`
	// The journal lines' debit
	Debit *float64 `json:"Debit,omitempty"`
	// The journal lines' description
	Description *string `json:"Description,omitempty"`
	// The journal lines' employee
	Employee *JournalLineJournalLineEmployee `json:"Employee,omitempty"`
	// The journal lines' generated
	Generated *time.Time `json:"Generated,omitempty"`
	// The journal lines' grouping
	Grouping *string `json:"Grouping,omitempty"`
	// The journal lines' ledger target
	LedgerTarget *string `json:"LedgerTarget,omitempty"`
	// The journal lines' nom code
	NomCode *string `json:"NomCode,omitempty"`
	// The journal lines' pay frequency
	PayFrequency *JournalLineJournalLinePayFrequencyEnum `json:"PayFrequency,omitempty"`
	// The journal lines' pay run
	PayRun *JournalLineJournalLinePayRun `json:"PayRun,omitempty"`
	// The journal lines' sub contractor
	SubContractor *JournalLineJournalLineSubContractor `json:"SubContractor,omitempty"`
	// The journal lines' sub nom code
	SubNomCode *string `json:"SubNomCode,omitempty"`
	// The journal lines' tax period
	TaxPeriod *int `json:"TaxPeriod,omitempty"`
	// The journal lines' tax year
	TaxYear *int `json:"TaxYear,omitempty"`
}

// JournalLine - The journal line object.
type JournalLine struct {
	JournalLine *JournalLineJournalLine `json:"JournalLine,omitempty"`
}
