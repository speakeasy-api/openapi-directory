<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Currency - Currency
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Currency
{
    /**
     * Currency code in [ISO 4217-1](http://en.wikipedia.org/wiki/ISO_4217) three-character format.
     * 
     * @var string $code
     */
	#[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $code;
    
    /**
     * Number of decimal digits.
     * 
     * @var int $decimalDigits
     */
	#[\JMS\Serializer\Annotation\SerializedName('decimalDigits')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $decimalDigits;
    
    /**
     * Currency name.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Currency plural name
     * 
     * @var string $namePlural
     */
	#[\JMS\Serializer\Annotation\SerializedName('namePlural')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $namePlural;
    
    /**
     * Currency digit rounding.
     * 
     * @var float $rounding
     */
	#[\JMS\Serializer\Annotation\SerializedName('rounding')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $rounding;
    
    /**
     * Currency symbol.
     * 
     * @var string $symbol
     */
	#[\JMS\Serializer\Annotation\SerializedName('symbol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $symbol;
    
    /**
     * Currency native symbol.
     * 
     * @var string $symbolNative
     */
	#[\JMS\Serializer\Annotation\SerializedName('symbolNative')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $symbolNative;
    
	public function __construct()
	{
		$this->code = "";
		$this->decimalDigits = 0;
		$this->name = "";
		$this->namePlural = "";
		$this->rounding = 0;
		$this->symbol = "";
		$this->symbolNative = "";
	}
}
