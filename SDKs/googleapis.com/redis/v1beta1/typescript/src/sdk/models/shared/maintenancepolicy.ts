/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import {
  WeeklyMaintenanceWindow,
  WeeklyMaintenanceWindowInput,
} from "./weeklymaintenancewindow";
import { Expose, Type } from "class-transformer";

/**
 * Maintenance policy for an instance.
 */
export class MaintenancePolicyInput extends SpeakeasyBase {
  /**
   * Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Optional. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_window is expected to be one.
   */
  @SpeakeasyMetadata({ elemType: WeeklyMaintenanceWindowInput })
  @Expose({ name: "weeklyMaintenanceWindow" })
  @Type(() => WeeklyMaintenanceWindowInput)
  weeklyMaintenanceWindow?: WeeklyMaintenanceWindowInput[];
}

/**
 * Maintenance policy for an instance.
 */
export class MaintenancePolicy extends SpeakeasyBase {
  /**
   * Output only. The time when the policy was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Output only. The time when the policy was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * Optional. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_window is expected to be one.
   */
  @SpeakeasyMetadata({ elemType: WeeklyMaintenanceWindow })
  @Expose({ name: "weeklyMaintenanceWindow" })
  @Type(() => WeeklyMaintenanceWindow)
  weeklyMaintenanceWindow?: WeeklyMaintenanceWindow[];
}
