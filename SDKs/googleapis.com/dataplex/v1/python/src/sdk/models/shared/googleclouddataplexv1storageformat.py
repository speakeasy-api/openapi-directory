"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddataplexv1storageformatcsvoptions as shared_googleclouddataplexv1storageformatcsvoptions
from ..shared import googleclouddataplexv1storageformaticebergoptions as shared_googleclouddataplexv1storageformaticebergoptions
from ..shared import googleclouddataplexv1storageformatjsonoptions as shared_googleclouddataplexv1storageformatjsonoptions
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDataplexV1StorageFormatCompressionFormatEnum(str, Enum):
    r"""Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed."""
    COMPRESSION_FORMAT_UNSPECIFIED = 'COMPRESSION_FORMAT_UNSPECIFIED'
    GZIP = 'GZIP'
    BZIP2 = 'BZIP2'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDataplexV1StorageFormatInput:
    r"""Describes the format of the data within its storage location."""
    
    compression_format: Optional[GoogleCloudDataplexV1StorageFormatCompressionFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compressionFormat'), 'exclude': lambda f: f is None }})
    r"""Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed."""  
    csv: Optional[shared_googleclouddataplexv1storageformatcsvoptions.GoogleCloudDataplexV1StorageFormatCsvOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('csv'), 'exclude': lambda f: f is None }})
    r"""Describes CSV and similar semi-structured data formats."""  
    iceberg: Optional[shared_googleclouddataplexv1storageformaticebergoptions.GoogleCloudDataplexV1StorageFormatIcebergOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iceberg'), 'exclude': lambda f: f is None }})
    r"""Describes Iceberg data format."""  
    json: Optional[shared_googleclouddataplexv1storageformatjsonoptions.GoogleCloudDataplexV1StorageFormatJSONOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('json'), 'exclude': lambda f: f is None }})
    r"""Describes JSON data format."""  
    mime_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mimeType'), 'exclude': lambda f: f is None }})
    r"""Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}"""  
    
class GoogleCloudDataplexV1StorageFormatFormatEnum(str, Enum):
    r"""Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type."""
    FORMAT_UNSPECIFIED = 'FORMAT_UNSPECIFIED'
    PARQUET = 'PARQUET'
    AVRO = 'AVRO'
    ORC = 'ORC'
    CSV = 'CSV'
    JSON = 'JSON'
    IMAGE = 'IMAGE'
    AUDIO = 'AUDIO'
    VIDEO = 'VIDEO'
    TEXT = 'TEXT'
    TFRECORD = 'TFRECORD'
    OTHER = 'OTHER'
    UNKNOWN = 'UNKNOWN'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDataplexV1StorageFormat:
    r"""Describes the format of the data within its storage location."""
    
    compression_format: Optional[GoogleCloudDataplexV1StorageFormatCompressionFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compressionFormat'), 'exclude': lambda f: f is None }})
    r"""Optional. The compression type associated with the stored data. If unspecified, the data is uncompressed."""  
    csv: Optional[shared_googleclouddataplexv1storageformatcsvoptions.GoogleCloudDataplexV1StorageFormatCsvOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('csv'), 'exclude': lambda f: f is None }})
    r"""Describes CSV and similar semi-structured data formats."""  
    format: Optional[GoogleCloudDataplexV1StorageFormatFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""Output only. The data format associated with the stored data, which represents content type values. The value is inferred from mime type."""  
    iceberg: Optional[shared_googleclouddataplexv1storageformaticebergoptions.GoogleCloudDataplexV1StorageFormatIcebergOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iceberg'), 'exclude': lambda f: f is None }})
    r"""Describes Iceberg data format."""  
    json: Optional[shared_googleclouddataplexv1storageformatjsonoptions.GoogleCloudDataplexV1StorageFormatJSONOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('json'), 'exclude': lambda f: f is None }})
    r"""Describes JSON data format."""  
    mime_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mimeType'), 'exclude': lambda f: f is None }})
    r"""Required. The mime type descriptor for the data. Must match the pattern {type}/{subtype}. Supported values: application/x-parquet application/x-avro application/x-orc application/x-tfrecord application/x-parquet+iceberg application/x-avro+iceberg application/x-orc+iceberg application/json application/{subtypes} text/csv text/ image/{image subtype} video/{video subtype} audio/{audio subtype}"""  
    