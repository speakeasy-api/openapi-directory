/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Organization {
    /**
     * The date when the organization was incorporated in YYYY-MM-DD format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateOfIncorporation")
    public String dateOfIncorporation;
    public Organization withDateOfIncorporation(String dateOfIncorporation) {
        this.dateOfIncorporation = dateOfIncorporation;
        return this;
    }
    
    /**
     * Your description for the organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Organization withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The organization's trading name, if different from the registered legal name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("doingBusinessAs")
    public String doingBusinessAs;
    public Organization withDoingBusinessAs(String doingBusinessAs) {
        this.doingBusinessAs = doingBusinessAs;
        return this;
    }
    
    /**
     * The email address of the legal entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public Organization withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The organization's legal name.
     */
    @JsonProperty("legalName")
    public String legalName;
    public Organization withLegalName(String legalName) {
        this.legalName = legalName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public PhoneNumber phone;
    public Organization withPhone(PhoneNumber phone) {
        this.phone = phone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("principalPlaceOfBusiness")
    public Address principalPlaceOfBusiness;
    public Organization withPrincipalPlaceOfBusiness(Address principalPlaceOfBusiness) {
        this.principalPlaceOfBusiness = principalPlaceOfBusiness;
        return this;
    }
    
    @JsonProperty("registeredAddress")
    public Address registeredAddress;
    public Organization withRegisteredAddress(Address registeredAddress) {
        this.registeredAddress = registeredAddress;
        return this;
    }
    
    /**
     * The organization's registration number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationNumber")
    public String registrationNumber;
    public Organization withRegistrationNumber(String registrationNumber) {
        this.registrationNumber = registrationNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stockData")
    public StockData stockData;
    public Organization withStockData(StockData stockData) {
        this.stockData = stockData;
        return this;
    }
    
    /**
     * The tax information of the organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxInformation")
    public TaxInformation[] taxInformation;
    public Organization withTaxInformation(TaxInformation[] taxInformation) {
        this.taxInformation = taxInformation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxReportingClassification")
    public TaxReportingClassification taxReportingClassification;
    public Organization withTaxReportingClassification(TaxReportingClassification taxReportingClassification) {
        this.taxReportingClassification = taxReportingClassification;
        return this;
    }
    
    /**
     * Type of organization. 
     * 
     * Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public OrganizationTypeEnum type;
    public Organization withType(OrganizationTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The reason the organization has not provided a VAT number.
     * 
     * Possible values: **industryExemption**, **belowTaxThreshold**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vatAbsenceReason")
    public OrganizationVatAbsenceReasonEnum vatAbsenceReason;
    public Organization withVatAbsenceReason(OrganizationVatAbsenceReasonEnum vatAbsenceReason) {
        this.vatAbsenceReason = vatAbsenceReason;
        return this;
    }
    
    /**
     * The organization's VAT number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vatNumber")
    public String vatNumber;
    public Organization withVatNumber(String vatNumber) {
        this.vatNumber = vatNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webData")
    public WebData webData;
    public Organization withWebData(WebData webData) {
        this.webData = webData;
        return this;
    }
    
}
