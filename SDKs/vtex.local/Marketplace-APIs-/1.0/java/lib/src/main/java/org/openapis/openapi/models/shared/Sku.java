/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class Sku {
    /**
     * SKU reference code.
     */
    @JsonProperty("eans")
    public String[] eans;

    public Sku withEans(String[] eans) {
        this.eans = eans;
        return this;
    }
    
    /**
     * Height of the SKU.
     */
    @JsonProperty("height")
    public Integer height;

    public Sku withHeight(Integer height) {
        this.height = height;
        return this;
    }
    
    @JsonProperty("images")
    public Object[] images;

    public Sku withImages(Object[] images) {
        this.images = images;
        return this;
    }
    
    /**
     * Length of the SKU.
     */
    @JsonProperty("length")
    public Integer length;

    public Sku withLength(Integer length) {
        this.length = length;
        return this;
    }
    
    /**
     * Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value un.
     */
    @JsonProperty("measurementUnit")
    public String measurementUnit;

    public Sku withMeasurementUnit(String measurementUnit) {
        this.measurementUnit = measurementUnit;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public Sku withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * SKU reference code.
     */
    @JsonProperty("refId")
    public String refId;

    public Sku withRefId(String refId) {
        this.refId = refId;
        return this;
    }
    
    @JsonProperty("specifications")
    public Specifications specifications;

    public Sku withSpecifications(Specifications specifications) {
        this.specifications = specifications;
        return this;
    }
    
    /**
     * Unit multiplier for this SKU. If this information doesn't apply, you should use the default value 1.
     */
    @JsonProperty("unitMultiplier")
    public Integer unitMultiplier;

    public Sku withUnitMultiplier(Integer unitMultiplier) {
        this.unitMultiplier = unitMultiplier;
        return this;
    }
    
    /**
     * Weight of the SKU.
     */
    @JsonProperty("weight")
    public Integer weight;

    public Sku withWeight(Integer weight) {
        this.weight = weight;
        return this;
    }
    
    /**
     * Width of the SKU.
     */
    @JsonProperty("width")
    public Integer width;

    public Sku withWidth(Integer width) {
        this.width = width;
        return this;
    }
    
    public Sku(@JsonProperty("eans") String[] eans, @JsonProperty("height") Integer height, @JsonProperty("images") Object[] images, @JsonProperty("length") Integer length, @JsonProperty("measurementUnit") String measurementUnit, @JsonProperty("name") String name, @JsonProperty("refId") String refId, @JsonProperty("specifications") Specifications specifications, @JsonProperty("unitMultiplier") Integer unitMultiplier, @JsonProperty("weight") Integer weight, @JsonProperty("width") Integer width) {
        this.eans = eans;
        this.height = height;
        this.images = images;
        this.length = length;
        this.measurementUnit = measurementUnit;
        this.name = name;
        this.refId = refId;
        this.specifications = specifications;
        this.unitMultiplier = unitMultiplier;
        this.weight = weight;
        this.width = width;
  }
}
