// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETResetServiceSpecificCredentialActionEnum
type GETResetServiceSpecificCredentialActionEnum string

const (
	GETResetServiceSpecificCredentialActionEnumResetServiceSpecificCredential GETResetServiceSpecificCredentialActionEnum = "ResetServiceSpecificCredential"
)

func (e GETResetServiceSpecificCredentialActionEnum) ToPointer() *GETResetServiceSpecificCredentialActionEnum {
	return &e
}

func (e *GETResetServiceSpecificCredentialActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ResetServiceSpecificCredential":
		*e = GETResetServiceSpecificCredentialActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetServiceSpecificCredentialActionEnum: %v", v)
	}
}

// GETResetServiceSpecificCredentialVersionEnum
type GETResetServiceSpecificCredentialVersionEnum string

const (
	GETResetServiceSpecificCredentialVersionEnumTwoThousandAndTen0508 GETResetServiceSpecificCredentialVersionEnum = "2010-05-08"
)

func (e GETResetServiceSpecificCredentialVersionEnum) ToPointer() *GETResetServiceSpecificCredentialVersionEnum {
	return &e
}

func (e *GETResetServiceSpecificCredentialVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = GETResetServiceSpecificCredentialVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetServiceSpecificCredentialVersionEnum: %v", v)
	}
}

type GETResetServiceSpecificCredentialRequest struct {
	Action GETResetServiceSpecificCredentialActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
	ServiceSpecificCredentialID string `queryParam:"style=form,explode=true,name=ServiceSpecificCredentialId"`
	// <p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
	UserName          *string                                      `queryParam:"style=form,explode=true,name=UserName"`
	Version           GETResetServiceSpecificCredentialVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETResetServiceSpecificCredentialResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
