"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import batchgetrecordidentifier as shared_batchgetrecordidentifier
from ..shared import batchgetrecordresponse as shared_batchgetrecordresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchGetRecordRequestBody:
    
    identifiers: list[shared_batchgetrecordidentifier.BatchGetRecordIdentifier] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Identifiers') }})
    r"""A list of <code>FeatureGroup</code> names, with their corresponding <code>RecordIdentifier</code> value, and Feature name that have been requested to be retrieved in batch."""  
    

@dataclasses.dataclass
class BatchGetRecordRequest:
    
    request_body: BatchGetRecordRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class BatchGetRecordResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    access_forbidden: Optional[Any] = dataclasses.field(default=None)
    r"""AccessForbidden"""  
    batch_get_record_response: Optional[shared_batchgetrecordresponse.BatchGetRecordResponse] = dataclasses.field(default=None)
    r"""Success"""  
    internal_failure: Optional[Any] = dataclasses.field(default=None)
    r"""InternalFailure"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    service_unavailable: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceUnavailable"""  
    validation_error: Optional[Any] = dataclasses.field(default=None)
    r"""ValidationError"""  
    