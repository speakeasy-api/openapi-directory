// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StreamingSessionStreamStatusCodeEnum string

const (
	StreamingSessionStreamStatusCodeEnumStreamCreateInProgress StreamingSessionStreamStatusCodeEnum = "STREAM_CREATE_IN_PROGRESS"
	StreamingSessionStreamStatusCodeEnumStreamReady            StreamingSessionStreamStatusCodeEnum = "STREAM_READY"
	StreamingSessionStreamStatusCodeEnumStreamDeleteInProgress StreamingSessionStreamStatusCodeEnum = "STREAM_DELETE_IN_PROGRESS"
	StreamingSessionStreamStatusCodeEnumStreamDeleted          StreamingSessionStreamStatusCodeEnum = "STREAM_DELETED"
	StreamingSessionStreamStatusCodeEnumInternalError          StreamingSessionStreamStatusCodeEnum = "INTERNAL_ERROR"
	StreamingSessionStreamStatusCodeEnumNetworkConnectionError StreamingSessionStreamStatusCodeEnum = "NETWORK_CONNECTION_ERROR"
)

func (e *StreamingSessionStreamStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STREAM_CREATE_IN_PROGRESS":
		fallthrough
	case "STREAM_READY":
		fallthrough
	case "STREAM_DELETE_IN_PROGRESS":
		fallthrough
	case "STREAM_DELETED":
		fallthrough
	case "INTERNAL_ERROR":
		fallthrough
	case "NETWORK_CONNECTION_ERROR":
		*e = StreamingSessionStreamStatusCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StreamingSessionStreamStatusCodeEnum: %s", s)
	}
}
