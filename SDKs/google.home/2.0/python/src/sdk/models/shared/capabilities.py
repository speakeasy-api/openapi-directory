"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Capabilities:
    
    aogh_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aogh_supported') }})  
    assistant_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assistant_supported') }})  
    audio_hdr_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audio_hdr_supported') }})  
    audio_surround_mode_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audio_surround_mode_supported') }})  
    ble_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ble_supported') }})  
    bluetooth_audio_sink_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bluetooth_audio_sink_supported') }})  
    bluetooth_audio_source_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bluetooth_audio_source_supported') }})  
    bluetooth_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bluetooth_supported') }})  
    cloudcast_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudcast_supported') }})  
    content_filters_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content_filters_supported') }})  
    display_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_supported') }})  
    fdr_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fdr_supported') }})  
    hdmi_prefer_50hz_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hdmi_prefer_50hz_supported') }})  
    hdmi_prefer_high_fps_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hdmi_prefer_high_fps_supported') }})  
    hotspot_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hotspot_supported') }})  
    https_setup_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('https_setup_supported') }})  
    input_management_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('input_management_supported') }})  
    keep_hotspot_until_connected_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keep_hotspot_until_connected_supported') }})  
    multi_user_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multi_user_supported') }})  
    multichannel_group_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multichannel_group_supported') }})  
    multizone_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multizone_supported') }})  
    night_mode_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('night_mode_supported') }})  
    night_mode_supported_v2: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('night_mode_supported_v2') }})  
    opencast_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('opencast_supported') }})  
    preview_channel_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preview_channel_supported') }})  
    reboot_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reboot_supported') }})  
    remote_ducking_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remote_ducking_supported') }})  
    separate_tts_volume_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('separate_tts_volume_supported') }})  
    setup_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setup_supported') }})  
    sleep_mode_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sleep_mode_supported') }})  
    stats_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stats_supported') }})  
    system_sound_effects_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('system_sound_effects_supported') }})  
    user_eq_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_eq_supported') }})  
    wifi_auto_save_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wifi_auto_save_supported') }})  
    wifi_regulatory_domain_locked: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wifi_regulatory_domain_locked') }})  
    wifi_supported: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wifi_supported') }})  
    