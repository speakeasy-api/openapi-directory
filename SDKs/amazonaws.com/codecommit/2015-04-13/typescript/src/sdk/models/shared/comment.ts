/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Returns information about a specific comment.
 */
export class Comment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authorArn" })
  authorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "callerReactions" })
  callerReactions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "clientRequestToken" })
  clientRequestToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commentId" })
  commentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "inReplyTo" })
  inReplyTo?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "reactionCounts" })
  reactionCounts?: Record<string, number>;
}
