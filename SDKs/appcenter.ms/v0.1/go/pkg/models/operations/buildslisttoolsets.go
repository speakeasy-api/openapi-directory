// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type BuildsListToolsetsSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// BuildsListToolsetsToolsEnum - Toolset name
type BuildsListToolsetsToolsEnum string

const (
	BuildsListToolsetsToolsEnumXamarin BuildsListToolsetsToolsEnum = "xamarin"
	BuildsListToolsetsToolsEnumXcode   BuildsListToolsetsToolsEnum = "xcode"
	BuildsListToolsetsToolsEnumNode    BuildsListToolsetsToolsEnum = "node"
)

func (e BuildsListToolsetsToolsEnum) ToPointer() *BuildsListToolsetsToolsEnum {
	return &e
}

func (e *BuildsListToolsetsToolsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "xamarin":
		fallthrough
	case "xcode":
		fallthrough
	case "node":
		*e = BuildsListToolsetsToolsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BuildsListToolsetsToolsEnum: %v", v)
	}
}

type BuildsListToolsetsRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// Toolset name
	Tools *BuildsListToolsetsToolsEnum `queryParam:"style=form,explode=true,name=tools"`
}

// BuildsListToolsetsDefaultApplicationJSON - Bad Request
type BuildsListToolsetsDefaultApplicationJSON struct {
	Code    string `json:"code"`
	ID      string `json:"id"`
	Message string `json:"message"`
}

// BuildsListToolsets200ApplicationJSONNode - The Node version
type BuildsListToolsets200ApplicationJSONNode struct {
	// If the Node version is default for AppCenter
	Current *bool `json:"current,omitempty"`
	// The version name
	Name *string `json:"name,omitempty"`
}

// BuildsListToolsets200ApplicationJSONXamarin - The Xamarin SDK bundle
type BuildsListToolsets200ApplicationJSONXamarin struct {
	// If the SDK is latest stable
	Current *bool `json:"current,omitempty"`
	// The Mono version
	MonoVersion *string `json:"monoVersion,omitempty"`
	// The Xamarin SDK version
	SDKBundle *string `json:"sdkBundle,omitempty"`
	// If the SDK is stable
	Stable *bool `json:"stable,omitempty"`
	// Specific for iOS SDK. A list of Xcode versions supported by current SDK version
	XcodeVersions []string `json:"xcodeVersions,omitempty"`
}

// BuildsListToolsets200ApplicationJSONXcode - The Xcode version
type BuildsListToolsets200ApplicationJSONXcode struct {
	// If the Xcode is latest stable
	Current *bool `json:"current,omitempty"`
	// The version name
	Name *string `json:"name,omitempty"`
}

// BuildsListToolsets200ApplicationJSON - Set of toolsets available for app
type BuildsListToolsets200ApplicationJSON struct {
	// A list of Node versions
	Node []BuildsListToolsets200ApplicationJSONNode `json:"node,omitempty"`
	// A list of Xamarin SDK bundles
	Xamarin []BuildsListToolsets200ApplicationJSONXamarin `json:"xamarin,omitempty"`
	// A list of Xcode versions
	Xcode []BuildsListToolsets200ApplicationJSONXcode `json:"xcode,omitempty"`
}

type BuildsListToolsetsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	BuildsListToolsets200ApplicationJSONObject *BuildsListToolsets200ApplicationJSON
	// Bad Request
	BuildsListToolsetsDefaultApplicationJSONObject *BuildsListToolsetsDefaultApplicationJSON
}
