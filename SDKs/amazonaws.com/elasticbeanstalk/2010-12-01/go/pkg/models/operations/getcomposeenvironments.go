// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETComposeEnvironmentsActionEnum
type GETComposeEnvironmentsActionEnum string

const (
	GETComposeEnvironmentsActionEnumComposeEnvironments GETComposeEnvironmentsActionEnum = "ComposeEnvironments"
)

func (e GETComposeEnvironmentsActionEnum) ToPointer() *GETComposeEnvironmentsActionEnum {
	return &e
}

func (e *GETComposeEnvironmentsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ComposeEnvironments":
		*e = GETComposeEnvironmentsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETComposeEnvironmentsActionEnum: %v", v)
	}
}

// GETComposeEnvironmentsVersionEnum
type GETComposeEnvironmentsVersionEnum string

const (
	GETComposeEnvironmentsVersionEnumTwoThousandAndTen1201 GETComposeEnvironmentsVersionEnum = "2010-12-01"
)

func (e GETComposeEnvironmentsVersionEnum) ToPointer() *GETComposeEnvironmentsVersionEnum {
	return &e
}

func (e *GETComposeEnvironmentsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETComposeEnvironmentsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETComposeEnvironmentsVersionEnum: %v", v)
	}
}

type GETComposeEnvironmentsRequest struct {
	Action GETComposeEnvironmentsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the application to which the specified source bundles belong.
	ApplicationName *string `queryParam:"style=form,explode=true,name=ApplicationName"`
	// The name of the group to which the target environments belong. Specify a group name only if the environment name defined in each target environment's manifest ends with a + (plus) character. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.
	GroupName *string                           `queryParam:"style=form,explode=true,name=GroupName"`
	Version   GETComposeEnvironmentsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// A list of version labels, specifying one or more application source bundles that belong to the target application. Each source bundle must include an environment manifest that specifies the name of the environment and the name of the solution stack to use, and optionally can specify environment links to create.
	VersionLabels     []string `queryParam:"style=form,explode=true,name=VersionLabels"`
	XAmzAlgorithm     *string  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETComposeEnvironmentsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
