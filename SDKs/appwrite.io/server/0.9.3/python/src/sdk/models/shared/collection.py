"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import rule as shared_rule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Collection:
    r"""Collection"""
    
    dollar_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('$id') }})
    r"""Collection ID."""  
    dollar_permissions: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('$permissions') }})
    r"""Collection permissions."""  
    date_created: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateCreated') }})
    r"""Collection creation date in Unix timestamp."""  
    date_updated: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateUpdated') }})
    r"""Collection creation date in Unix timestamp."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Collection name."""  
    rules: list[shared_rule.Rule] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rules') }})
    r"""Collection rules."""  
    