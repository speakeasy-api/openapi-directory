/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ProxyGetExport {
    /**
     *  The currencies that you want to convert transaction amounts into. You can specify any number of currencies. Specify the currencies using their Foreign Currency Conversion enabled to use this field.
     * **Character limit**: **Values**: a list of valid currency codes 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConvertToCurrencies")
    public String convertToCurrencies;
    public ProxyGetExport withConvertToCurrencies(String convertToCurrencies) {
        this.convertToCurrencies = convertToCurrencies;
        return this;
    }
    
    /**
     *  The user ID of the person who created the export.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedById")
    public String createdById;
    public ProxyGetExport withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     *  The date when the import was created.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public ProxyGetExport withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     *  Exports a secure version of encrypted data source fields. such as the AchAccountNumber field of the PaymentMethod object and the DefaultPaymentMethod data souce objects.
     * **Character limit**: 5 **Values:** true, false 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Encrypted")
    public Boolean encrypted;
    public ProxyGetExport withEncrypted(Boolean encrypted) {
        this.encrypted = encrypted;
        return this;
    }
    
    /**
     *  The ID of the file generated by an export query. This file is automatically generated when an Export object is created. Use this file ID with [Get files](https://www.zuora.com/developer/api-reference/#operation/GET_Files) to download the export file.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileId")
    public String fileId;
    public ProxyGetExport withFileId(String fileId) {
        this.fileId = fileId;
        return this;
    }
    
    /**
     *  The format that you want the export file to use.
     * **Character limit**: 5 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Format")
    public ProxyGetExportFormatEnum format;
    public ProxyGetExport withFormat(ProxyGetExportFormatEnum format) {
        this.format = format;
        return this;
    }
    
    /**
     * Object identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public ProxyGetExport withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     *  The name of the export.
     * **Character limit**: 255 **Values**: a string of 255 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public ProxyGetExport withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * [Export ZOQL](https://knowledgecenter.zuora.com/DC_Developers/M_Export_ZOQL) query.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Query")
    public String query;
    public ProxyGetExport withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     *  The number of records or rows exported. This field value is null until the export status is Completed.
     * **Character limit**: **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Size")
    public Integer size;
    public ProxyGetExport withSize(Integer size) {
        this.size = size;
        return this;
    }
    
    /**
     *  The status of the export. Type: string (enum) **Character limit**: 10 **Values**: automatically generated to be one of the following values:
     * 
     * - Pending
     * - Processing
     * - Completed
     * - Canceled
     * - Failed
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;
    public ProxyGetExport withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     *  The reason for the given status. Use this information to help ascertain why an export failed.
     * **Character limi**t: 255 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatusReason")
    public String statusReason;
    public ProxyGetExport withStatusReason(String statusReason) {
        this.statusReason = statusReason;
        return this;
    }
    
    /**
     *  The ID of the user who last updated the export.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedById")
    public String updatedById;
    public ProxyGetExport withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     *  The date when the expotr was last updated.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedDate")
    public OffsetDateTime updatedDate;
    public ProxyGetExport withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
    /**
     *  Indicates if you want the resulting export file to be compressed into a zip file.
     * **Character limit**: **Values**: true, false (default) 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Zip")
    public Boolean zip;
    public ProxyGetExport withZip(Boolean zip) {
        this.zip = zip;
        return this;
    }
    
}
