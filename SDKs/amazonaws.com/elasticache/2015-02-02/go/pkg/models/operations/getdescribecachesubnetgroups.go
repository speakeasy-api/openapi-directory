// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeCacheSubnetGroupsActionEnum
type GETDescribeCacheSubnetGroupsActionEnum string

const (
	GETDescribeCacheSubnetGroupsActionEnumDescribeCacheSubnetGroups GETDescribeCacheSubnetGroupsActionEnum = "DescribeCacheSubnetGroups"
)

func (e GETDescribeCacheSubnetGroupsActionEnum) ToPointer() *GETDescribeCacheSubnetGroupsActionEnum {
	return &e
}

func (e *GETDescribeCacheSubnetGroupsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeCacheSubnetGroups":
		*e = GETDescribeCacheSubnetGroupsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeCacheSubnetGroupsActionEnum: %v", v)
	}
}

// GETDescribeCacheSubnetGroupsVersionEnum
type GETDescribeCacheSubnetGroupsVersionEnum string

const (
	GETDescribeCacheSubnetGroupsVersionEnumTwoThousandAndFifteen0202 GETDescribeCacheSubnetGroupsVersionEnum = "2015-02-02"
)

func (e GETDescribeCacheSubnetGroupsVersionEnum) ToPointer() *GETDescribeCacheSubnetGroupsVersionEnum {
	return &e
}

func (e *GETDescribeCacheSubnetGroupsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-02-02":
		*e = GETDescribeCacheSubnetGroupsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeCacheSubnetGroupsVersionEnum: %v", v)
	}
}

type GETDescribeCacheSubnetGroupsRequest struct {
	Action GETDescribeCacheSubnetGroupsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the cache subnet group to return details for.
	CacheSubnetGroupName *string `queryParam:"style=form,explode=true,name=CacheSubnetGroupName"`
	// An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
	MaxRecords        *int64                                  `queryParam:"style=form,explode=true,name=MaxRecords"`
	Version           GETDescribeCacheSubnetGroupsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeCacheSubnetGroupsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
