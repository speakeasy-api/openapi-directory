// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type TimespanModelType string

const (
	TimespanModelTypeMonthModel TimespanModelType = "MonthModel"
	TimespanModelTypeWeekModel  TimespanModelType = "WeekModel"
)

type TimespanModel struct {
	MonthModel *MonthModel
	WeekModel  *WeekModel

	Type TimespanModelType
}

func CreateTimespanModelMonthModel(monthModel MonthModel) TimespanModel {
	typ := TimespanModelTypeMonthModel

	return TimespanModel{
		MonthModel: &monthModel,
		Type:       typ,
	}
}

func CreateTimespanModelWeekModel(weekModel WeekModel) TimespanModel {
	typ := TimespanModelTypeWeekModel

	return TimespanModel{
		WeekModel: &weekModel,
		Type:      typ,
	}
}

func (u *TimespanModel) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	monthModel := new(MonthModel)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&monthModel); err == nil {
		u.MonthModel = monthModel
		u.Type = TimespanModelTypeMonthModel
		return nil
	}

	weekModel := new(WeekModel)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&weekModel); err == nil {
		u.WeekModel = weekModel
		u.Type = TimespanModelTypeWeekModel
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u TimespanModel) MarshalJSON() ([]byte, error) {
	if u.MonthModel != nil {
		return json.Marshal(u.MonthModel)
	}

	if u.WeekModel != nil {
		return json.Marshal(u.WeekModel)
	}

	return nil, nil
}
