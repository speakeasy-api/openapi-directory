"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ProcessOrderRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent."""  
    cookie: str = dataclasses.field(metadata={'header': { 'field_name': 'Cookie', 'style': 'simple', 'explode': False }})
    r"""VTEX Chekout cookie associated with a specific order. Use the `Vtex_CHKO_Auth` and the `CheckoutDataAccess` cookies returned by the [Place order](https://developers.vtex.com/vtex-rest-api/reference/order-placement-1#placeorder) or [Place order from existing cart](https://developers.vtex.com/vtex-rest-api/reference/order-placement-1#placeorderfromexistingorderform) API requests, like a browser would."""  
    order_group: str = dataclasses.field(metadata={'path_param': { 'field_name': 'orderGroup', 'style': 'simple', 'explode': False }})
    r"""Order group. It is the part of the `orderId` that comes before the `-`. For example, the `orderGroup` of the order `123456789-01` is `123456789`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProcessOrder500ApplicationJSONError:
    r"""Information on the error."""
    
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""Error code."""  
    exception: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exception'), 'exclude': lambda f: f is None }})
    r"""Error exception."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""Error message."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProcessOrder500ApplicationJSON:
    r"""Internal Server Error"""
    
    error: Optional[ProcessOrder500ApplicationJSONError] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""Information on the error."""  
    operation_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operationId'), 'exclude': lambda f: f is None }})
    r"""Operation ID."""  
    

@dataclasses.dataclass
class ProcessOrderResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    process_order_500_application_json_object: Optional[ProcessOrder500ApplicationJSON] = dataclasses.field(default=None)
    r"""Internal Server Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    