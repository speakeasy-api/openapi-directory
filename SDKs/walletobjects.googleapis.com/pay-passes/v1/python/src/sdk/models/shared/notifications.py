"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import expirynotification as shared_expirynotification
from ..shared import upcomingnotification as shared_upcomingnotification
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Notifications:
    r"""Indicates if the object needs to have notification enabled. We support only one of ExpiryNotification/UpcomingNotification. `expiryNotification` takes precedence over `upcomingNotification`. In other words if `expiryNotification` is set, we ignore the `upcomingNotification` field."""
    
    expiry_notification: Optional[shared_expirynotification.ExpiryNotification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiryNotification'), 'exclude': lambda f: f is None }})
    r"""Indicates that the issuer would like GooglePay to send expiry notifications 2 days prior to the card expiration."""  
    upcoming_notification: Optional[shared_upcomingnotification.UpcomingNotification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upcomingNotification'), 'exclude': lambda f: f is None }})
    r"""Indicates that the issuer would like GooglePay send an upcoming card validity notification 1 day before card becomes valid/usable."""  
    