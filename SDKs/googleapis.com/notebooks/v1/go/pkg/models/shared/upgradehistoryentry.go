// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpgradeHistoryEntryActionEnum - Action. Rolloback or Upgrade.
type UpgradeHistoryEntryActionEnum string

const (
	UpgradeHistoryEntryActionEnumActionUnspecified UpgradeHistoryEntryActionEnum = "ACTION_UNSPECIFIED"
	UpgradeHistoryEntryActionEnumUpgrade           UpgradeHistoryEntryActionEnum = "UPGRADE"
	UpgradeHistoryEntryActionEnumRollback          UpgradeHistoryEntryActionEnum = "ROLLBACK"
)

func (e *UpgradeHistoryEntryActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTION_UNSPECIFIED":
		fallthrough
	case "UPGRADE":
		fallthrough
	case "ROLLBACK":
		*e = UpgradeHistoryEntryActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpgradeHistoryEntryActionEnum: %s", s)
	}
}

// UpgradeHistoryEntryStateEnum - The state of this instance upgrade history entry.
type UpgradeHistoryEntryStateEnum string

const (
	UpgradeHistoryEntryStateEnumStateUnspecified UpgradeHistoryEntryStateEnum = "STATE_UNSPECIFIED"
	UpgradeHistoryEntryStateEnumStarted          UpgradeHistoryEntryStateEnum = "STARTED"
	UpgradeHistoryEntryStateEnumSucceeded        UpgradeHistoryEntryStateEnum = "SUCCEEDED"
	UpgradeHistoryEntryStateEnumFailed           UpgradeHistoryEntryStateEnum = "FAILED"
)

func (e *UpgradeHistoryEntryStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "STARTED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		*e = UpgradeHistoryEntryStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpgradeHistoryEntryStateEnum: %s", s)
	}
}

// UpgradeHistoryEntry - The entry of VM image upgrade history.
type UpgradeHistoryEntry struct {
	// Action. Rolloback or Upgrade.
	Action *UpgradeHistoryEntryActionEnum `json:"action,omitempty"`
	// The container image before this instance upgrade.
	ContainerImage *string `json:"containerImage,omitempty"`
	// The time that this instance upgrade history entry is created.
	CreateTime *string `json:"createTime,omitempty"`
	// The framework of this notebook instance.
	Framework *string `json:"framework,omitempty"`
	// The snapshot of the boot disk of this notebook instance before upgrade.
	Snapshot *string `json:"snapshot,omitempty"`
	// The state of this instance upgrade history entry.
	State *UpgradeHistoryEntryStateEnum `json:"state,omitempty"`
	// Target VM Image. Format: `ainotebooks-vm/project/image-name/name`.
	TargetImage *string `json:"targetImage,omitempty"`
	// Target VM Version, like m63.
	TargetVersion *string `json:"targetVersion,omitempty"`
	// The version of the notebook instance before this upgrade.
	Version *string `json:"version,omitempty"`
	// The VM image before this instance upgrade.
	VMImage *string `json:"vmImage,omitempty"`
}
