/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ShareAttributes } from "./shareattributes";
import { Expose, Type } from "class-transformer";

/**
 * Type is message.
 */
export enum ShareShareRelationshipsShareRelationshipsMessageShareMessageDataTypeEnum {
  Message = "message",
}

export class ShareShareRelationshipsShareRelationshipsMessageShareMessageData extends SpeakeasyBase {
  /**
   * ID of the message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Type is message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ShareShareRelationshipsShareRelationshipsMessageShareMessageDataTypeEnum;
}

export class ShareShareRelationshipsShareRelationshipsMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ShareShareRelationshipsShareRelationshipsMessageShareMessageData)
  data?: ShareShareRelationshipsShareRelationshipsMessageShareMessageData;
}

/**
 * Type is notification.
 */
export enum ShareShareRelationshipsShareRelationshipsNotificationDataTypeEnum {
  Notification = "notification",
}

export class ShareShareRelationshipsShareRelationshipsNotificationData extends SpeakeasyBase {
  /**
   * ID of the notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Type is notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ShareShareRelationshipsShareRelationshipsNotificationDataTypeEnum;
}

export class ShareShareRelationshipsShareRelationshipsNotification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ShareShareRelationshipsShareRelationshipsNotificationData)
  data?: ShareShareRelationshipsShareRelationshipsNotificationData;
}

export class ShareShareRelationshipsShareRelationshipsOwnerData extends SpeakeasyBase {
  /**
   * ID of the owner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Type is user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class ShareShareRelationshipsShareRelationshipsOwner extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ShareShareRelationshipsShareRelationshipsOwnerData)
  data?: ShareShareRelationshipsShareRelationshipsOwnerData;
}

/**
 * Type is resource.
 */
export enum ShareShareRelationshipsShareRelationshipsResourceShareResourceDataTypeEnum {
  Resource = "resource",
}

export class ShareShareRelationshipsShareRelationshipsResourceShareResourceData extends SpeakeasyBase {
  /**
   * ID of the shared resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Type is resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ShareShareRelationshipsShareRelationshipsResourceShareResourceDataTypeEnum;
}

export class ShareShareRelationshipsShareRelationshipsResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(
    () => ShareShareRelationshipsShareRelationshipsResourceShareResourceData
  )
  data?: ShareShareRelationshipsShareRelationshipsResourceShareResourceData;
}

/**
 * Message, owner, resource, and notification relationships of the share.
 */
export class ShareShareRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: ShareShareRelationshipsShareRelationshipsMessage,
  })
  @Expose({ name: "messages" })
  @Type(() => ShareShareRelationshipsShareRelationshipsMessage)
  messages?: ShareShareRelationshipsShareRelationshipsMessage[];

  @SpeakeasyMetadata({
    elemType: ShareShareRelationshipsShareRelationshipsNotification,
  })
  @Expose({ name: "notifications" })
  @Type(() => ShareShareRelationshipsShareRelationshipsNotification)
  notifications?: ShareShareRelationshipsShareRelationshipsNotification[];

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => ShareShareRelationshipsShareRelationshipsOwner)
  owner?: ShareShareRelationshipsShareRelationshipsOwner;

  @SpeakeasyMetadata({
    elemType: ShareShareRelationshipsShareRelationshipsResource,
  })
  @Expose({ name: "resources" })
  @Type(() => ShareShareRelationshipsShareRelationshipsResource)
  resources?: ShareShareRelationshipsShareRelationshipsResource[];
}

/**
 * Type of the share.
 */
export enum ShareTypeEnum {
  Share = "share",
}

/**
 * Object contains share properties.
 */
export class Share extends SpeakeasyBase {
  /**
   * Attributes of the share including the name, path and share recipients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => ShareAttributes)
  attributes?: ShareAttributes;

  /**
   * ID of the share.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Message, owner, resource, and notification relationships of the share.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => ShareShareRelationships)
  relationships?: ShareShareRelationships;

  /**
   * Type of the share.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ShareTypeEnum;
}
