/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Workteam - Provides details about a labeling work team.
 */
public class Workteam {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreateDate")
    public OffsetDateTime createDate;

    public Workteam withCreateDate(OffsetDateTime createDate) {
        this.createDate = createDate;
        return this;
    }
    
    @JsonProperty("Description")
    public String description;

    public Workteam withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdatedDate")
    public OffsetDateTime lastUpdatedDate;

    public Workteam withLastUpdatedDate(OffsetDateTime lastUpdatedDate) {
        this.lastUpdatedDate = lastUpdatedDate;
        return this;
    }
    
    @JsonProperty("MemberDefinitions")
    public MemberDefinition[] memberDefinitions;

    public Workteam withMemberDefinitions(MemberDefinition[] memberDefinitions) {
        this.memberDefinitions = memberDefinitions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotificationConfiguration")
    public NotificationConfiguration notificationConfiguration;

    public Workteam withNotificationConfiguration(NotificationConfiguration notificationConfiguration) {
        this.notificationConfiguration = notificationConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProductListingIds")
    public String[] productListingIds;

    public Workteam withProductListingIds(String[] productListingIds) {
        this.productListingIds = productListingIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubDomain")
    public String subDomain;

    public Workteam withSubDomain(String subDomain) {
        this.subDomain = subDomain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkforceArn")
    public String workforceArn;

    public Workteam withWorkforceArn(String workforceArn) {
        this.workforceArn = workforceArn;
        return this;
    }
    
    @JsonProperty("WorkteamArn")
    public String workteamArn;

    public Workteam withWorkteamArn(String workteamArn) {
        this.workteamArn = workteamArn;
        return this;
    }
    
    @JsonProperty("WorkteamName")
    public String workteamName;

    public Workteam withWorkteamName(String workteamName) {
        this.workteamName = workteamName;
        return this;
    }
    
    public Workteam(@JsonProperty("Description") String description, @JsonProperty("MemberDefinitions") MemberDefinition[] memberDefinitions, @JsonProperty("WorkteamArn") String workteamArn, @JsonProperty("WorkteamName") String workteamName) {
        this.description = description;
        this.memberDefinitions = memberDefinitions;
        this.workteamArn = workteamArn;
        this.workteamName = workteamName;
  }
}
