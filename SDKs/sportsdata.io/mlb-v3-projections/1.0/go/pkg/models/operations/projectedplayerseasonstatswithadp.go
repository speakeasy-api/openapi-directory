// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectedPlayerSeasonStatsWithAdpFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ProjectedPlayerSeasonStatsWithAdpFormatEnum string

const (
	ProjectedPlayerSeasonStatsWithAdpFormatEnumXML  ProjectedPlayerSeasonStatsWithAdpFormatEnum = "XML"
	ProjectedPlayerSeasonStatsWithAdpFormatEnumJSON ProjectedPlayerSeasonStatsWithAdpFormatEnum = "JSON"
)

func (e ProjectedPlayerSeasonStatsWithAdpFormatEnum) ToPointer() *ProjectedPlayerSeasonStatsWithAdpFormatEnum {
	return &e
}

func (e *ProjectedPlayerSeasonStatsWithAdpFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = ProjectedPlayerSeasonStatsWithAdpFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectedPlayerSeasonStatsWithAdpFormatEnum: %v", v)
	}
}

type ProjectedPlayerSeasonStatsWithAdpRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ProjectedPlayerSeasonStatsWithAdpFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Year of the season.
	// <br>Examples: <code>2017</code>, <code>2018</code>.
	Season string `pathParam:"style=simple,explode=false,name=season"`
}

type ProjectedPlayerSeasonStatsWithAdpResponse struct {
	ContentType             string
	PlayerSeasonProjections []shared.PlayerSeasonProjection
	StatusCode              int
	RawResponse             *http.Response
}
