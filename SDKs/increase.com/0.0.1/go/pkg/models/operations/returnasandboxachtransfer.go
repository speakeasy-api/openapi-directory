// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReturnASandboxAchTransferPathParams struct {
	AchTransferID string `pathParam:"style=simple,explode=false,name=ach_transfer_id"`
}

type ReturnASandboxAchTransferRequest struct {
	PathParams ReturnASandboxAchTransferPathParams
	Request    shared.ReturnASandboxAchTransferParameters `request:"mediaType=application/json"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnumRateLimitedError ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON13 struct {
	Detail     string                                                      `json:"detail"`
	RetryAfter *int64                                                      `json:"retry_after,omitempty"`
	Status     ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                      `json:"title"`
	Type       ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON12 struct {
	Detail string                                                      `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON11 struct {
	Detail string                                                      `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnumFourHundred ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnumMalformedRequestError ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON10 struct {
	Detail string                                                      `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnumFourHundred ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnumInvalidParametersError ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                   `json:"errors,omitempty"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnumInvalidOperationError ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON8 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON7 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnumFiveHundred ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnumInternalServerError ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON6 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON5 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON4 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON3 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON2 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON1 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ACH Transfer
	AchTransfer *shared.AchTransfer
	// Error
	Error interface{}
}
