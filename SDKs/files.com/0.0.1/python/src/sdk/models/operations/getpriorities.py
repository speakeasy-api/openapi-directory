"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import priorityentity as shared_priorityentity
from typing import Optional


@dataclasses.dataclass
class GetPrioritiesRequest:
    
    path: str = dataclasses.field(metadata={'query_param': { 'field_name': 'path', 'style': 'form', 'explode': True }})
    r"""The path to query for priorities"""  
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination."""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended)."""  
    

@dataclasses.dataclass
class GetPrioritiesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    priority_entities: Optional[list[shared_priorityentity.PriorityEntity]] = dataclasses.field(default=None)
    r"""A list of Priorities objects."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    