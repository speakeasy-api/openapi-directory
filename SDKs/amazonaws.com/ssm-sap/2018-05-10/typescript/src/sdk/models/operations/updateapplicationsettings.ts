/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdateApplicationSettingsRequestBody extends SpeakeasyBase {
  /**
   * The ID of the application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ApplicationId" })
  applicationId: string;

  /**
   * The credentials to be added or updated.
   */
  @SpeakeasyMetadata({ elemType: shared.ApplicationCredential })
  @Expose({ name: "CredentialsToAddOrUpdate" })
  @Type(() => shared.ApplicationCredential)
  credentialsToAddOrUpdate?: shared.ApplicationCredential[];

  /**
   * The credentials to be removed.
   */
  @SpeakeasyMetadata({ elemType: shared.ApplicationCredential })
  @Expose({ name: "CredentialsToRemove" })
  @Type(() => shared.ApplicationCredential)
  credentialsToRemove?: shared.ApplicationCredential[];
}

export class UpdateApplicationSettingsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateApplicationSettingsRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateApplicationSettingsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateApplicationSettingsOutput?: shared.UpdateApplicationSettingsOutput;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
