"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import imageconfiguration as shared_imageconfiguration
from ..shared import imagerepositorytype_enum as shared_imagerepositorytype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImageRepository:
    r"""Describes a source image repository."""
    
    image_identifier: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImageIdentifier') }})  
    image_repository_type: shared_imagerepositorytype_enum.ImageRepositoryTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImageRepositoryType') }})  
    image_configuration: Optional[shared_imageconfiguration.ImageConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImageConfiguration'), 'exclude': lambda f: f is None }})  
    