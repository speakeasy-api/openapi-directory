// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AnswerReasonEnum string

const (
	AnswerReasonEnumOutOfScope              AnswerReasonEnum = "OUT_OF_SCOPE"
	AnswerReasonEnumBusinessPriorities      AnswerReasonEnum = "BUSINESS_PRIORITIES"
	AnswerReasonEnumArchitectureConstraints AnswerReasonEnum = "ARCHITECTURE_CONSTRAINTS"
	AnswerReasonEnumOther                   AnswerReasonEnum = "OTHER"
	AnswerReasonEnumNone                    AnswerReasonEnum = "NONE"
)

func (e AnswerReasonEnum) ToPointer() *AnswerReasonEnum {
	return &e
}

func (e *AnswerReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OUT_OF_SCOPE":
		fallthrough
	case "BUSINESS_PRIORITIES":
		fallthrough
	case "ARCHITECTURE_CONSTRAINTS":
		fallthrough
	case "OTHER":
		fallthrough
	case "NONE":
		*e = AnswerReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnswerReasonEnum: %v", v)
	}
}
