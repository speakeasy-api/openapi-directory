"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetUserContactSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetUserContactRequest:
    
    contact_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'contactId', 'style': 'simple', 'explode': False }})
    r"""The user's contact Id or email address. The contact can be either a company contact or an external contact."""  
    query_presence_status: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'query_presence_status', 'style': 'form', 'explode': True }})
    r"""The presence status of the contact.
    Include this query parameter with a value of `true` to get the presence status of the contact in the response.
    """  
    
class GetUserContact200ApplicationXMLPresenceStatusEnum(str, Enum):
    r"""Contact's Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `Away`<br> `Available`<br> `Offline`"""
    DO_NOT_DISTURB = 'Do_Not_Disturb'
    AWAY = 'Away'
    AVAILABLE = 'Available'
    OFFLINE = 'Offline'


@dataclasses.dataclass
class GetUserContact200ApplicationXML:
    r"""**HTTP Status Code:** `200`<br>
    Contact information returned.
    """
    
    direct_numbers: Optional[list[str]] = dataclasses.field(default=None)
    r"""Direct number(s) assigned to the contact."""  
    email: Optional[str] = dataclasses.field(default=None)
    r"""Contact's email address."""  
    extension_number: Optional[str] = dataclasses.field(default=None)
    r"""Extension number of the contact."""  
    first_name: Optional[str] = dataclasses.field(default=None)
    r"""Contact's first name"""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""User ID of the contact."""  
    last_name: Optional[str] = dataclasses.field(default=None)
    r"""Contact's last name"""  
    phone_number: Optional[str] = dataclasses.field(default=None)
    r"""Phone number of the contact."""  
    presence_status: Optional[GetUserContact200ApplicationXMLPresenceStatusEnum] = dataclasses.field(default=None)
    r"""Contact's Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `Away`<br> `Available`<br> `Offline`"""  
    
class GetUserContact200ApplicationJSONPresenceStatusEnum(str, Enum):
    r"""Contact's Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `Away`<br> `Available`<br> `Offline`"""
    DO_NOT_DISTURB = 'Do_Not_Disturb'
    AWAY = 'Away'
    AVAILABLE = 'Available'
    OFFLINE = 'Offline'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetUserContact200ApplicationJSON:
    r"""**HTTP Status Code:** `200`<br>
    Contact information returned.
    """
    
    direct_numbers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('direct_numbers'), 'exclude': lambda f: f is None }})
    r"""Direct number(s) assigned to the contact."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Contact's email address."""  
    extension_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_number'), 'exclude': lambda f: f is None }})
    r"""Extension number of the contact."""  
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first_name'), 'exclude': lambda f: f is None }})
    r"""Contact's first name"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""User ID of the contact."""  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_name'), 'exclude': lambda f: f is None }})
    r"""Contact's last name"""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone_number'), 'exclude': lambda f: f is None }})
    r"""Phone number of the contact."""  
    presence_status: Optional[GetUserContact200ApplicationJSONPresenceStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('presence_status'), 'exclude': lambda f: f is None }})
    r"""Contact's Presence Status in the Zoom Chat Client. The status can be one of the following: <br> `Do_Not_Disturb`<br> `Away`<br> `Available`<br> `Offline`"""  
    

@dataclasses.dataclass
class GetUserContactResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    get_user_contact_200_application_json_object: Optional[GetUserContact200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br>
    Contact information returned.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    