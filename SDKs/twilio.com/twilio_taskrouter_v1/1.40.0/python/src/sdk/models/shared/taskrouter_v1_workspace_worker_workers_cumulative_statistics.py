"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskrouterV1WorkspaceWorkerWorkersCumulativeStatistics:
    r"""OK"""
    
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Worker resource."""  
    activity_durations: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activity_durations'), 'exclude': lambda f: f is None }})
    r"""The minimum, average, maximum, and total time (in seconds) that Workers spent in each Activity."""  
    end_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_time'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The end of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format."""  
    reservations_accepted: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reservations_accepted'), 'exclude': lambda f: f is None }})
    r"""The total number of Reservations that were accepted."""  
    reservations_canceled: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reservations_canceled'), 'exclude': lambda f: f is None }})
    r"""The total number of Reservations that were canceled."""  
    reservations_created: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reservations_created'), 'exclude': lambda f: f is None }})
    r"""The total number of Reservations that were created."""  
    reservations_rejected: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reservations_rejected'), 'exclude': lambda f: f is None }})
    r"""The total number of Reservations that were rejected."""  
    reservations_rescinded: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reservations_rescinded'), 'exclude': lambda f: f is None }})
    r"""The total number of Reservations that were rescinded."""  
    reservations_timed_out: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reservations_timed_out'), 'exclude': lambda f: f is None }})
    r"""The total number of Reservations that were timed out."""  
    start_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_time'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The beginning of the interval during which these statistics were calculated, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The absolute URL of the Workers statistics resource."""  
    workspace_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workspace_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the Workspace that contains the Workers."""  
    