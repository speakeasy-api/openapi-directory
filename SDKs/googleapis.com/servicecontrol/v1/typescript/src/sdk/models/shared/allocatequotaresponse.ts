/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AllocateInfo } from "./allocateinfo";
import { MetricValueSet } from "./metricvalueset";
import { QuotaError } from "./quotaerror";
import { Expose, Type } from "class-transformer";

/**
 * Response message for the AllocateQuota method.
 */
export class AllocateQuotaResponse extends SpeakeasyBase {
  /**
   * Indicates the decision of the allocate.
   */
  @SpeakeasyMetadata({ elemType: QuotaError })
  @Expose({ name: "allocateErrors" })
  @Type(() => QuotaError)
  allocateErrors?: QuotaError[];

  @SpeakeasyMetadata()
  @Expose({ name: "allocateInfo" })
  @Type(() => AllocateInfo)
  allocateInfo?: AllocateInfo;

  /**
   * The same operation_id value used in the AllocateQuotaRequest. Used for logging and diagnostics purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operationId" })
  operationId?: string;

  /**
   * Quota metrics to indicate the result of allocation. Depending on the request, one or more of the following metrics will be included: 1. Per quota group or per quota metric incremental usage will be specified using the following delta metric : "serviceruntime.googleapis.com/api/consumer/quota_used_count" 2. The quota limit reached condition will be specified using the following boolean metric : "serviceruntime.googleapis.com/quota/exceeded"
   */
  @SpeakeasyMetadata({ elemType: MetricValueSet })
  @Expose({ name: "quotaMetrics" })
  @Type(() => MetricValueSet)
  quotaMetrics?: MetricValueSet[];

  /**
   * ID of the actual config used to process the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceConfigId" })
  serviceConfigId?: string;
}
