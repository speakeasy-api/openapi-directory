"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configuration as shared_configuration
from ..shared import parametricmonitoringconfiguration as shared_parametricmonitoringconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ParametricConfigurationOverrides:
    r"""A configuration specification to be used to override existing configurations. This data type allows job template parameters to be specified within."""
    
    application_configuration: Optional[list[shared_configuration.Configuration]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationConfiguration'), 'exclude': lambda f: f is None }})  
    monitoring_configuration: Optional[shared_parametricmonitoringconfiguration.ParametricMonitoringConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('monitoringConfiguration'), 'exclude': lambda f: f is None }})  
    