"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .accounts import Accounts
from .billing import Billing
from .chat_channels import ChatChannels
from .chat_channels_account_level_ import ChatChannelsAccountLevel
from .chat_messages import ChatMessages
from .chatbot_messages import ChatbotMessages
from .cloud_recording import CloudRecording
from .common_area_phones import CommonAreaPhones
from .contacts import Contacts
from .dashboards import Dashboards
from .deprecated_api_endpoints import DeprecatedAPIEndpoints
from .devices import Devices
from .groups import Groups
from .im_chat import IMChat
from .im_groups import IMGroups
from .meetings import Meetings
from .pac import Pac
from .phone import Phone
from .phone_auto_receptionists import PhoneAutoReceptionists
from .phone_blocked_list import PhoneBlockedList
from .phone_call_queues import PhoneCallQueues
from .phone_devices import PhoneDevices
from .phone_reports import PhoneReports
from .phone_shared_line_groups import PhoneSharedLineGroups
from .phone_site import PhoneSite
from .reports import Reports
from .roles import Roles
from .rooms import Rooms
from .rooms_account import RoomsAccount
from .rooms_devices import RoomsDevices
from .rooms_location import RoomsLocation
from .sip_connected_audio import SIPConnectedAudio
from .sip_phone import SIPPhone
from .trackingfield import TrackingField
from .tsp import Tsp
from .users import Users
from .webinars import Webinars
from sdk.models import shared

SERVERS = [
    "https://api.zoom.us/v2",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""The Zoom API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials).
    All endpoints are available via `https` and are located at `api.zoom.us/v2/`.
    
    For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.
    """
    accounts: Accounts
    r"""Account operations"""
    billing: Billing
    r"""Billing operations"""
    chat_channels: ChatChannels
    chat_channels_account_level: ChatChannelsAccountLevel
    chat_messages: ChatMessages
    r"""Chat Messages operations"""
    chatbot_messages: ChatbotMessages
    cloud_recording: CloudRecording
    r"""Cloud Recording operations"""
    common_area_phones: CommonAreaPhones
    contacts: Contacts
    r"""Contacts operations"""
    dashboards: Dashboards
    r"""Dashboard operations"""
    deprecated_api_endpoints: DeprecatedAPIEndpoints
    devices: Devices
    r"""H323 Device operations"""
    groups: Groups
    r"""Group operations"""
    im_chat: IMChat
    r"""IM Chat operations"""
    im_groups: IMGroups
    r"""IM Group operations"""
    meetings: Meetings
    r"""Meeting operations"""
    pac: Pac
    r"""PAC operations"""
    phone: Phone
    phone_auto_receptionists: PhoneAutoReceptionists
    phone_blocked_list: PhoneBlockedList
    phone_call_queues: PhoneCallQueues
    phone_devices: PhoneDevices
    phone_reports: PhoneReports
    phone_shared_line_groups: PhoneSharedLineGroups
    phone_site: PhoneSite
    reports: Reports
    r"""Report operations"""
    roles: Roles
    r"""User Roles"""
    rooms: Rooms
    r"""ZoomRooms operations"""
    rooms_account: RoomsAccount
    rooms_devices: RoomsDevices
    rooms_location: RoomsLocation
    sip_connected_audio: SIPConnectedAudio
    sip_phone: SIPPhone
    tsp: Tsp
    r"""TSP operations"""
    tracking_field: TrackingField
    r"""Tracking Field operations"""
    users: Users
    r"""User operations"""
    webinars: Webinars
    r"""Webinar operations"""

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 security: shared.Security = None,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param security: The security details required for authentication
        :type security: shared.Security
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = utils.configure_security_client(self._client, security)
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.accounts = Accounts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.billing = Billing(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.chat_channels = ChatChannels(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.chat_channels_account_level = ChatChannelsAccountLevel(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.chat_messages = ChatMessages(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.chatbot_messages = ChatbotMessages(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cloud_recording = CloudRecording(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.common_area_phones = CommonAreaPhones(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.contacts = Contacts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.dashboards = Dashboards(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.deprecated_api_endpoints = DeprecatedAPIEndpoints(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.devices = Devices(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.groups = Groups(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.im_chat = IMChat(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.im_groups = IMGroups(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.meetings = Meetings(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.pac = Pac(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.phone = Phone(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.phone_auto_receptionists = PhoneAutoReceptionists(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.phone_blocked_list = PhoneBlockedList(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.phone_call_queues = PhoneCallQueues(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.phone_devices = PhoneDevices(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.phone_reports = PhoneReports(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.phone_shared_line_groups = PhoneSharedLineGroups(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.phone_site = PhoneSite(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.reports = Reports(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.roles = Roles(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rooms = Rooms(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rooms_account = RoomsAccount(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rooms_devices = RoomsDevices(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rooms_location = RoomsLocation(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sip_connected_audio = SIPConnectedAudio(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sip_phone = SIPPhone(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.tsp = Tsp(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.tracking_field = TrackingField(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.users = Users(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.webinars = Webinars(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    