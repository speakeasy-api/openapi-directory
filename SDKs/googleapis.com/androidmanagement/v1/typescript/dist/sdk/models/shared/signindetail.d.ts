import { SpeakeasyBase } from "../../../internal/utils";
/**
 * Controls whether personal usage is allowed on a device provisioned with this enrollment token.For company-owned devices: Enabling personal usage allows the user to set up a work profile on the device. Disabling personal usage requires the user provision the device as a fully managed device.For personally-owned devices: Enabling personal usage allows the user to set up a work profile on the device. Disabling personal usage will prevent the device from provisioning. Personal usage cannot be disabled on personally-owned device.
 */
export declare enum SigninDetailAllowPersonalUsageEnum {
    AllowPersonalUsageUnspecified = "ALLOW_PERSONAL_USAGE_UNSPECIFIED",
    PersonalUsageAllowed = "PERSONAL_USAGE_ALLOWED",
    PersonalUsageDisallowed = "PERSONAL_USAGE_DISALLOWED"
}
/**
 * A resource containing sign in details for an enterprise.
 */
export declare class SigninDetail extends SpeakeasyBase {
    /**
     * Controls whether personal usage is allowed on a device provisioned with this enrollment token.For company-owned devices: Enabling personal usage allows the user to set up a work profile on the device. Disabling personal usage requires the user provision the device as a fully managed device.For personally-owned devices: Enabling personal usage allows the user to set up a work profile on the device. Disabling personal usage will prevent the device from provisioning. Personal usage cannot be disabled on personally-owned device.
     */
    allowPersonalUsage?: SigninDetailAllowPersonalUsageEnum;
    /**
     * A JSON string whose UTF-8 representation can be used to generate a QR code to enroll a device with this enrollment token. To enroll a device using NFC, the NFC record must contain a serialized java.util.Properties representation of the properties in the JSON. This is a read-only field generated by the server.
     */
    qrCode?: string;
    /**
     * An enterprise wide enrollment token used to trigger custom sign-in flow. This is a read-only field generated by the server.
     */
    signinEnrollmentToken?: string;
    /**
     * Sign-in URL for authentication when device is provisioned with a sign-in enrollment token. The sign-in endpoint should finish authentication flow with a URL in the form of https://enterprise.google.com/android/enroll?et= for a successful login, or https://enterprise.google.com/android/enroll/invalid for a failed login.
     */
    signinUrl?: string;
}
