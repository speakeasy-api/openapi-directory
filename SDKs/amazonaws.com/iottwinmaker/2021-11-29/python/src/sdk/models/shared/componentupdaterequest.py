"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import componentpropertygrouprequest as shared_componentpropertygrouprequest
from ..shared import componentupdatetype_enum as shared_componentupdatetype_enum
from ..shared import propertyrequest as shared_propertyrequest
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ComponentUpdateRequest:
    r"""The component update request."""
    
    component_type_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('componentTypeId'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    property_group_updates: Optional[dict[str, shared_componentpropertygrouprequest.ComponentPropertyGroupRequest]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('propertyGroupUpdates'), 'exclude': lambda f: f is None }})  
    property_updates: Optional[dict[str, shared_propertyrequest.PropertyRequest]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('propertyUpdates'), 'exclude': lambda f: f is None }})  
    update_type: Optional[shared_componentupdatetype_enum.ComponentUpdateTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateType'), 'exclude': lambda f: f is None }})  
    