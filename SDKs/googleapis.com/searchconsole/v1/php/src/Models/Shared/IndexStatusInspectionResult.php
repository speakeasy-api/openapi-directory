<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * IndexStatusInspectionResult - Results of index status inspection for either the live page or the version in Google's index, depending on whether you requested a live inspection or not. For more information, see the [Index coverage report documentation](https://support.google.com/webmasters/answer/7440203).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class IndexStatusInspectionResult
{
    /**
     * Could Google find and index the page. More details about page indexing appear in 'indexing_state'.
     * 
     * @var ?string $coverageState
     */
	#[\JMS\Serializer\Annotation\SerializedName('coverageState')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $coverageState = null;
    
    /**
     * Primary crawler that was used by Google to crawl your site.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IndexStatusInspectionResultCrawledAsEnum $crawledAs
     */
	#[\JMS\Serializer\Annotation\SerializedName('crawledAs')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\IndexStatusInspectionResultCrawledAsEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IndexStatusInspectionResultCrawledAsEnum $crawledAs = null;
    
    /**
     * The URL of the page that Google selected as canonical. If the page was not indexed, this field is absent.
     * 
     * @var ?string $googleCanonical
     */
	#[\JMS\Serializer\Annotation\SerializedName('googleCanonical')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $googleCanonical = null;
    
    /**
     * Whether or not the page blocks indexing through a noindex rule.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IndexStatusInspectionResultIndexingStateEnum $indexingState
     */
	#[\JMS\Serializer\Annotation\SerializedName('indexingState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\IndexStatusInspectionResultIndexingStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IndexStatusInspectionResultIndexingStateEnum $indexingState = null;
    
    /**
     * Last time this URL was crawled by Google using the [primary crawler](https://support.google.com/webmasters/answer/7440203#primary_crawler). Absent if the URL was never crawled successfully.
     * 
     * @var ?string $lastCrawlTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastCrawlTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastCrawlTime = null;
    
    /**
     * Whether or not Google could retrieve the page from your server. Equivalent to ["page fetch"](https://support.google.com/webmasters/answer/9012289#index_coverage) in the URL inspection report.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IndexStatusInspectionResultPageFetchStateEnum $pageFetchState
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageFetchState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\IndexStatusInspectionResultPageFetchStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IndexStatusInspectionResultPageFetchStateEnum $pageFetchState = null;
    
    /**
     * URLs that link to the inspected URL, directly and indirectly.
     * 
     * @var ?array<string> $referringUrls
     */
	#[\JMS\Serializer\Annotation\SerializedName('referringUrls')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $referringUrls = null;
    
    /**
     * Whether or not the page is blocked to Google by a robots.txt rule.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IndexStatusInspectionResultRobotsTxtStateEnum $robotsTxtState
     */
	#[\JMS\Serializer\Annotation\SerializedName('robotsTxtState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\IndexStatusInspectionResultRobotsTxtStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IndexStatusInspectionResultRobotsTxtStateEnum $robotsTxtState = null;
    
    /**
     * Any sitemaps that this URL was listed in, as known by Google. Not guaranteed to be an exhaustive list, especially if Google did not discover this URL through a sitemap. Absent if no sitemaps were found.
     * 
     * @var ?array<string> $sitemap
     */
	#[\JMS\Serializer\Annotation\SerializedName('sitemap')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sitemap = null;
    
    /**
     * The URL that your page or site [declares as canonical](https://developers.google.com/search/docs/advanced/crawling/consolidate-duplicate-urls?#define-canonical). If you did not declare a canonical URL, this field is absent.
     * 
     * @var ?string $userCanonical
     */
	#[\JMS\Serializer\Annotation\SerializedName('userCanonical')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userCanonical = null;
    
    /**
     * High level verdict about whether the URL *is* indexed (indexed status), or *can be* indexed (live inspection).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IndexStatusInspectionResultVerdictEnum $verdict
     */
	#[\JMS\Serializer\Annotation\SerializedName('verdict')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\IndexStatusInspectionResultVerdictEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IndexStatusInspectionResultVerdictEnum $verdict = null;
    
	public function __construct()
	{
		$this->coverageState = null;
		$this->crawledAs = null;
		$this->googleCanonical = null;
		$this->indexingState = null;
		$this->lastCrawlTime = null;
		$this->pageFetchState = null;
		$this->referringUrls = null;
		$this->robotsTxtState = null;
		$this->sitemap = null;
		$this->userCanonical = null;
		$this->verdict = null;
	}
}
