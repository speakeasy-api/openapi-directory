"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AccessReasonTypeEnum(str, Enum):
    r"""Type of access justification."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    CUSTOMER_INITIATED_SUPPORT = 'CUSTOMER_INITIATED_SUPPORT'
    GOOGLE_INITIATED_SERVICE = 'GOOGLE_INITIATED_SERVICE'
    GOOGLE_INITIATED_REVIEW = 'GOOGLE_INITIATED_REVIEW'
    THIRD_PARTY_DATA_REQUEST = 'THIRD_PARTY_DATA_REQUEST'
    GOOGLE_RESPONSE_TO_PRODUCTION_ALERT = 'GOOGLE_RESPONSE_TO_PRODUCTION_ALERT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccessReason:
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""More detail about certain reason types. See comments for each type above."""  
    type: Optional[AccessReasonTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of access justification."""  
    