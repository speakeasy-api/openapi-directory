// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetScrobbleShowsShowIDEmbedEnum - Embed full episode info
type GetScrobbleShowsShowIDEmbedEnum string

const (
	GetScrobbleShowsShowIDEmbedEnumEpisode GetScrobbleShowsShowIDEmbedEnum = "episode"
)

func (e *GetScrobbleShowsShowIDEmbedEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "episode":
		*e = GetScrobbleShowsShowIDEmbedEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetScrobbleShowsShowIDEmbedEnum: %s", s)
	}
}

type GetScrobbleShowsShowIDRequest struct {
	// Embed full episode info
	Embed *GetScrobbleShowsShowIDEmbedEnum `queryParam:"style=form,explode=true,name=embed"`
	// ID of the target show
	ShowID int64 `pathParam:"style=simple,explode=false,name=show_id"`
}

type GetScrobbleShowsShowIDResponse struct {
	ContentType string
	// An array of marked episodes
	MarkedEpisodes []shared.MarkedEpisode
	StatusCode     int
	RawResponse    *http.Response
}
