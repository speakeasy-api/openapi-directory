/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserProfile } from "./userprofile";
import { Expose, Type } from "class-transformer";

export class OfferingUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "avatarUrl" })
  avatarUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "evaluatedBy" })
  evaluatedBy?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "evaluates" })
  evaluates?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isFacilitator" })
  isFacilitator?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isMarker" })
  isMarker?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isReadonly" })
  isReadonly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "markedBy" })
  markedBy?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "marks" })
  marks?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "personId" })
  personId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "profile" })
  @Type(() => UserProfile)
  profile?: UserProfile;
}
