/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateDeploymentResponse {
    /**
     * AlarmsLimitExceededException
     */
    
    public Object alarmsLimitExceededException;

    public CreateDeploymentResponse withAlarmsLimitExceededException(Object alarmsLimitExceededException) {
        this.alarmsLimitExceededException = alarmsLimitExceededException;
        return this;
    }
    
    /**
     * ApplicationDoesNotExistException
     */
    
    public Object applicationDoesNotExistException;

    public CreateDeploymentResponse withApplicationDoesNotExistException(Object applicationDoesNotExistException) {
        this.applicationDoesNotExistException = applicationDoesNotExistException;
        return this;
    }
    
    /**
     * ApplicationNameRequiredException
     */
    
    public Object applicationNameRequiredException;

    public CreateDeploymentResponse withApplicationNameRequiredException(Object applicationNameRequiredException) {
        this.applicationNameRequiredException = applicationNameRequiredException;
        return this;
    }
    
    
    public String contentType;

    public CreateDeploymentResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateDeploymentOutput createDeploymentOutput;

    public CreateDeploymentResponse withCreateDeploymentOutput(org.openapis.openapi.models.shared.CreateDeploymentOutput createDeploymentOutput) {
        this.createDeploymentOutput = createDeploymentOutput;
        return this;
    }
    
    /**
     * DeploymentConfigDoesNotExistException
     */
    
    public Object deploymentConfigDoesNotExistException;

    public CreateDeploymentResponse withDeploymentConfigDoesNotExistException(Object deploymentConfigDoesNotExistException) {
        this.deploymentConfigDoesNotExistException = deploymentConfigDoesNotExistException;
        return this;
    }
    
    /**
     * DeploymentGroupDoesNotExistException
     */
    
    public Object deploymentGroupDoesNotExistException;

    public CreateDeploymentResponse withDeploymentGroupDoesNotExistException(Object deploymentGroupDoesNotExistException) {
        this.deploymentGroupDoesNotExistException = deploymentGroupDoesNotExistException;
        return this;
    }
    
    /**
     * DeploymentGroupNameRequiredException
     */
    
    public Object deploymentGroupNameRequiredException;

    public CreateDeploymentResponse withDeploymentGroupNameRequiredException(Object deploymentGroupNameRequiredException) {
        this.deploymentGroupNameRequiredException = deploymentGroupNameRequiredException;
        return this;
    }
    
    /**
     * DeploymentLimitExceededException
     */
    
    public Object deploymentLimitExceededException;

    public CreateDeploymentResponse withDeploymentLimitExceededException(Object deploymentLimitExceededException) {
        this.deploymentLimitExceededException = deploymentLimitExceededException;
        return this;
    }
    
    /**
     * DescriptionTooLongException
     */
    
    public Object descriptionTooLongException;

    public CreateDeploymentResponse withDescriptionTooLongException(Object descriptionTooLongException) {
        this.descriptionTooLongException = descriptionTooLongException;
        return this;
    }
    
    /**
     * InvalidAlarmConfigException
     */
    
    public Object invalidAlarmConfigException;

    public CreateDeploymentResponse withInvalidAlarmConfigException(Object invalidAlarmConfigException) {
        this.invalidAlarmConfigException = invalidAlarmConfigException;
        return this;
    }
    
    /**
     * InvalidApplicationNameException
     */
    
    public Object invalidApplicationNameException;

    public CreateDeploymentResponse withInvalidApplicationNameException(Object invalidApplicationNameException) {
        this.invalidApplicationNameException = invalidApplicationNameException;
        return this;
    }
    
    /**
     * InvalidAutoRollbackConfigException
     */
    
    public Object invalidAutoRollbackConfigException;

    public CreateDeploymentResponse withInvalidAutoRollbackConfigException(Object invalidAutoRollbackConfigException) {
        this.invalidAutoRollbackConfigException = invalidAutoRollbackConfigException;
        return this;
    }
    
    /**
     * InvalidAutoScalingGroupException
     */
    
    public Object invalidAutoScalingGroupException;

    public CreateDeploymentResponse withInvalidAutoScalingGroupException(Object invalidAutoScalingGroupException) {
        this.invalidAutoScalingGroupException = invalidAutoScalingGroupException;
        return this;
    }
    
    /**
     * InvalidDeploymentConfigNameException
     */
    
    public Object invalidDeploymentConfigNameException;

    public CreateDeploymentResponse withInvalidDeploymentConfigNameException(Object invalidDeploymentConfigNameException) {
        this.invalidDeploymentConfigNameException = invalidDeploymentConfigNameException;
        return this;
    }
    
    /**
     * InvalidDeploymentGroupNameException
     */
    
    public Object invalidDeploymentGroupNameException;

    public CreateDeploymentResponse withInvalidDeploymentGroupNameException(Object invalidDeploymentGroupNameException) {
        this.invalidDeploymentGroupNameException = invalidDeploymentGroupNameException;
        return this;
    }
    
    /**
     * InvalidFileExistsBehaviorException
     */
    
    public Object invalidFileExistsBehaviorException;

    public CreateDeploymentResponse withInvalidFileExistsBehaviorException(Object invalidFileExistsBehaviorException) {
        this.invalidFileExistsBehaviorException = invalidFileExistsBehaviorException;
        return this;
    }
    
    /**
     * InvalidGitHubAccountTokenException
     */
    
    public Object invalidGitHubAccountTokenException;

    public CreateDeploymentResponse withInvalidGitHubAccountTokenException(Object invalidGitHubAccountTokenException) {
        this.invalidGitHubAccountTokenException = invalidGitHubAccountTokenException;
        return this;
    }
    
    /**
     * InvalidIgnoreApplicationStopFailuresValueException
     */
    
    public Object invalidIgnoreApplicationStopFailuresValueException;

    public CreateDeploymentResponse withInvalidIgnoreApplicationStopFailuresValueException(Object invalidIgnoreApplicationStopFailuresValueException) {
        this.invalidIgnoreApplicationStopFailuresValueException = invalidIgnoreApplicationStopFailuresValueException;
        return this;
    }
    
    /**
     * InvalidLoadBalancerInfoException
     */
    
    public Object invalidLoadBalancerInfoException;

    public CreateDeploymentResponse withInvalidLoadBalancerInfoException(Object invalidLoadBalancerInfoException) {
        this.invalidLoadBalancerInfoException = invalidLoadBalancerInfoException;
        return this;
    }
    
    /**
     * InvalidRevisionException
     */
    
    public Object invalidRevisionException;

    public CreateDeploymentResponse withInvalidRevisionException(Object invalidRevisionException) {
        this.invalidRevisionException = invalidRevisionException;
        return this;
    }
    
    /**
     * InvalidRoleException
     */
    
    public Object invalidRoleException;

    public CreateDeploymentResponse withInvalidRoleException(Object invalidRoleException) {
        this.invalidRoleException = invalidRoleException;
        return this;
    }
    
    /**
     * InvalidTargetInstancesException
     */
    
    public Object invalidTargetInstancesException;

    public CreateDeploymentResponse withInvalidTargetInstancesException(Object invalidTargetInstancesException) {
        this.invalidTargetInstancesException = invalidTargetInstancesException;
        return this;
    }
    
    /**
     * InvalidTrafficRoutingConfigurationException
     */
    
    public Object invalidTrafficRoutingConfigurationException;

    public CreateDeploymentResponse withInvalidTrafficRoutingConfigurationException(Object invalidTrafficRoutingConfigurationException) {
        this.invalidTrafficRoutingConfigurationException = invalidTrafficRoutingConfigurationException;
        return this;
    }
    
    /**
     * InvalidUpdateOutdatedInstancesOnlyValueException
     */
    
    public Object invalidUpdateOutdatedInstancesOnlyValueException;

    public CreateDeploymentResponse withInvalidUpdateOutdatedInstancesOnlyValueException(Object invalidUpdateOutdatedInstancesOnlyValueException) {
        this.invalidUpdateOutdatedInstancesOnlyValueException = invalidUpdateOutdatedInstancesOnlyValueException;
        return this;
    }
    
    /**
     * RevisionDoesNotExistException
     */
    
    public Object revisionDoesNotExistException;

    public CreateDeploymentResponse withRevisionDoesNotExistException(Object revisionDoesNotExistException) {
        this.revisionDoesNotExistException = revisionDoesNotExistException;
        return this;
    }
    
    /**
     * RevisionRequiredException
     */
    
    public Object revisionRequiredException;

    public CreateDeploymentResponse withRevisionRequiredException(Object revisionRequiredException) {
        this.revisionRequiredException = revisionRequiredException;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateDeploymentResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateDeploymentResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ThrottlingException
     */
    
    public Object throttlingException;

    public CreateDeploymentResponse withThrottlingException(Object throttlingException) {
        this.throttlingException = throttlingException;
        return this;
    }
    
    public CreateDeploymentResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
