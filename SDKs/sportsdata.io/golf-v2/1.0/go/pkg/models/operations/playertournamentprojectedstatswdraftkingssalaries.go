// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnum string

const (
	PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnumXML  PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnum = "XML"
	PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnumJSON PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnum = "JSON"
)

func (e *PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnum: %s", s)
	}
}

type PlayerTournamentProjectedStatsWDraftkingsSalariesRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format PlayerTournamentProjectedStatsWDraftkingsSalariesFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>78</code>, <code>79</code>, <code>80</code>, etc.
	Tournamentid string `pathParam:"style=simple,explode=false,name=tournamentid"`
}

type PlayerTournamentProjectedStatsWDraftkingsSalariesResponse struct {
	ContentType                 string
	PlayerTournamentProjections []shared.PlayerTournamentProjection
	StatusCode                  int
	RawResponse                 *http.Response
}
