/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class GetUserAttributeVerificationCodeResponse {
    /**
     * CodeDeliveryFailureException
     */
    
    public Object codeDeliveryFailureException;

    public GetUserAttributeVerificationCodeResponse withCodeDeliveryFailureException(Object codeDeliveryFailureException) {
        this.codeDeliveryFailureException = codeDeliveryFailureException;
        return this;
    }
    
    
    public String contentType;

    public GetUserAttributeVerificationCodeResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * ForbiddenException
     */
    
    public Object forbiddenException;

    public GetUserAttributeVerificationCodeResponse withForbiddenException(Object forbiddenException) {
        this.forbiddenException = forbiddenException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.GetUserAttributeVerificationCodeResponse getUserAttributeVerificationCodeResponse;

    public GetUserAttributeVerificationCodeResponse withGetUserAttributeVerificationCodeResponse(org.openapis.openapi.models.shared.GetUserAttributeVerificationCodeResponse getUserAttributeVerificationCodeResponse) {
        this.getUserAttributeVerificationCodeResponse = getUserAttributeVerificationCodeResponse;
        return this;
    }
    
    /**
     * InternalErrorException
     */
    
    public Object internalErrorException;

    public GetUserAttributeVerificationCodeResponse withInternalErrorException(Object internalErrorException) {
        this.internalErrorException = internalErrorException;
        return this;
    }
    
    /**
     * InvalidEmailRoleAccessPolicyException
     */
    
    public Object invalidEmailRoleAccessPolicyException;

    public GetUserAttributeVerificationCodeResponse withInvalidEmailRoleAccessPolicyException(Object invalidEmailRoleAccessPolicyException) {
        this.invalidEmailRoleAccessPolicyException = invalidEmailRoleAccessPolicyException;
        return this;
    }
    
    /**
     * InvalidLambdaResponseException
     */
    
    public Object invalidLambdaResponseException;

    public GetUserAttributeVerificationCodeResponse withInvalidLambdaResponseException(Object invalidLambdaResponseException) {
        this.invalidLambdaResponseException = invalidLambdaResponseException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public GetUserAttributeVerificationCodeResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * InvalidSmsRoleAccessPolicyException
     */
    
    public Object invalidSmsRoleAccessPolicyException;

    public GetUserAttributeVerificationCodeResponse withInvalidSmsRoleAccessPolicyException(Object invalidSmsRoleAccessPolicyException) {
        this.invalidSmsRoleAccessPolicyException = invalidSmsRoleAccessPolicyException;
        return this;
    }
    
    /**
     * InvalidSmsRoleTrustRelationshipException
     */
    
    public Object invalidSmsRoleTrustRelationshipException;

    public GetUserAttributeVerificationCodeResponse withInvalidSmsRoleTrustRelationshipException(Object invalidSmsRoleTrustRelationshipException) {
        this.invalidSmsRoleTrustRelationshipException = invalidSmsRoleTrustRelationshipException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;

    public GetUserAttributeVerificationCodeResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    /**
     * NotAuthorizedException
     */
    
    public Object notAuthorizedException;

    public GetUserAttributeVerificationCodeResponse withNotAuthorizedException(Object notAuthorizedException) {
        this.notAuthorizedException = notAuthorizedException;
        return this;
    }
    
    /**
     * PasswordResetRequiredException
     */
    
    public Object passwordResetRequiredException;

    public GetUserAttributeVerificationCodeResponse withPasswordResetRequiredException(Object passwordResetRequiredException) {
        this.passwordResetRequiredException = passwordResetRequiredException;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;

    public GetUserAttributeVerificationCodeResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    
    public Integer statusCode;

    public GetUserAttributeVerificationCodeResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public GetUserAttributeVerificationCodeResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TooManyRequestsException
     */
    
    public Object tooManyRequestsException;

    public GetUserAttributeVerificationCodeResponse withTooManyRequestsException(Object tooManyRequestsException) {
        this.tooManyRequestsException = tooManyRequestsException;
        return this;
    }
    
    /**
     * UnexpectedLambdaException
     */
    
    public Object unexpectedLambdaException;

    public GetUserAttributeVerificationCodeResponse withUnexpectedLambdaException(Object unexpectedLambdaException) {
        this.unexpectedLambdaException = unexpectedLambdaException;
        return this;
    }
    
    /**
     * UserLambdaValidationException
     */
    
    public Object userLambdaValidationException;

    public GetUserAttributeVerificationCodeResponse withUserLambdaValidationException(Object userLambdaValidationException) {
        this.userLambdaValidationException = userLambdaValidationException;
        return this;
    }
    
    /**
     * UserNotConfirmedException
     */
    
    public Object userNotConfirmedException;

    public GetUserAttributeVerificationCodeResponse withUserNotConfirmedException(Object userNotConfirmedException) {
        this.userNotConfirmedException = userNotConfirmedException;
        return this;
    }
    
    /**
     * UserNotFoundException
     */
    
    public Object userNotFoundException;

    public GetUserAttributeVerificationCodeResponse withUserNotFoundException(Object userNotFoundException) {
        this.userNotFoundException = userNotFoundException;
        return this;
    }
    
    public GetUserAttributeVerificationCodeResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
