// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DNSKeyDigestTypeEnum - Specifies the algorithm used to calculate this digest.
type DNSKeyDigestTypeEnum string

const (
	DNSKeyDigestTypeEnumSha1   DNSKeyDigestTypeEnum = "SHA1"
	DNSKeyDigestTypeEnumSha256 DNSKeyDigestTypeEnum = "SHA256"
	DNSKeyDigestTypeEnumSha384 DNSKeyDigestTypeEnum = "SHA384"
)

func (e *DNSKeyDigestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SHA1":
		fallthrough
	case "SHA256":
		fallthrough
	case "SHA384":
		*e = DNSKeyDigestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DNSKeyDigestTypeEnum: %s", s)
	}
}

type DNSKeyDigest struct {
	// The base-16 encoded bytes of this digest. Suitable for use in a DS resource record.
	Digest *string `json:"digest,omitempty"`
	// Specifies the algorithm used to calculate this digest.
	Type *DNSKeyDigestTypeEnum `json:"type,omitempty"`
}
