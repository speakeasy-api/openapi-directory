/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CrashesGetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class CrashesGetRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * id of a specific group
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=crash_group_id",
  })
  crashGroupId: string;

  /**
   * id of a specific crash
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=crash_id",
  })
  crashId: string;

  /**
   * true if the stacktrace should be only the relevant thread / exception. Default is false
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=grouping_only",
  })
  groupingOnly?: boolean;

  /**
   * true if the crash should include in depth crash details
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_details",
  })
  includeDetails?: boolean;

  /**
   * true if the crash should include the custom log report. Default is false
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_log",
  })
  includeLog?: boolean;

  /**
   * true if the crash should include the raw crash report. Default is false
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_report",
  })
  includeReport?: boolean;

  /**
   * true if the crash should include the stacktrace information
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_stacktrace",
  })
  includeStacktrace?: boolean;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

/**
 * Error
 */
export class CrashesGetDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class CrashesGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  crash?: shared.Crash;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  crashesGetDefaultApplicationJSONObject?: CrashesGetDefaultApplicationJSON;
}
