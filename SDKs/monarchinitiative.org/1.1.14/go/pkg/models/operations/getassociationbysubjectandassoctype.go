// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAssociationBySubjectAndAssocTypeRequest struct {
	// Association type, eg gene_phenotype
	AssociationType string `pathParam:"style=simple,explode=false,name=association_type"`
	// Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2
	Evidence *string `queryParam:"style=form,explode=true,name=evidence"`
	// If true, excludes associations that involve IEAs (ECO:0000501)
	ExcludeAutomaticAssertions *bool `queryParam:"style=form,explode=true,name=exclude_automatic_assertions"`
	// Object CURIE
	Object *string `queryParam:"style=form,explode=true,name=object"`
	// number of rows
	Rows *int64 `queryParam:"style=form,explode=true,name=rows"`
	// beginning row
	Start *int64 `queryParam:"style=form,explode=true,name=start"`
	// Subject CURIE
	Subject *string `queryParam:"style=form,explode=true,name=subject"`
	// If true, excludes evidence objects in response
	UnselectEvidence *bool `queryParam:"style=form,explode=true,name=unselect_evidence"`
	// If true, returns results in compact associations format
	UseCompactAssociations *bool `queryParam:"style=form,explode=true,name=use_compact_associations"`
}

type GetAssociationBySubjectAndAssocTypeResponse struct {
	// Success
	AssociationResults []shared.AssociationResults
	ContentType        string
	StatusCode         int
	RawResponse        *http.Response
}
