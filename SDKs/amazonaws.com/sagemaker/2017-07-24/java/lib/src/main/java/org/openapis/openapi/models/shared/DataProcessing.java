/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DataProcessing - The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html"&gt;Associate Prediction Results with their Corresponding Input Records&lt;/a&gt;.
 */
public class DataProcessing {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputFilter")
    public String inputFilter;
    public DataProcessing withInputFilter(String inputFilter) {
        this.inputFilter = inputFilter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JoinSource")
    public JoinSourceEnum joinSource;
    public DataProcessing withJoinSource(JoinSourceEnum joinSource) {
        this.joinSource = joinSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputFilter")
    public String outputFilter;
    public DataProcessing withOutputFilter(String outputFilter) {
        this.outputFilter = outputFilter;
        return this;
    }
    
}
