// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type AnalyticsSessionCountsSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type AnalyticsSessionCountsRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// Last date time in data in ISO 8601 date time format.
	End *time.Time `queryParam:"style=form,explode=true,name=end"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// Start date time in data in ISO 8601 date time format.
	Start time.Time `queryParam:"style=form,explode=true,name=start"`
	// To select specific application versions
	Versions []string `queryParam:"style=pipeDelimited,explode=true,name=versions"`
}

type AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum string

const (
	AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnumBadRequest          AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnumConflict            AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum = "Conflict"
	AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnumNotAcceptable       AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnumNotFound            AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum = "NotFound"
	AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnumInternalServerError AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnumUnauthorized        AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnumTooManyRequests     AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum) ToPointer() *AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type AnalyticsSessionCountsDefaultApplicationJSONError struct {
	Code    AnalyticsSessionCountsDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                    `json:"message"`
}

// AnalyticsSessionCountsDefaultApplicationJSON - Error code with reason.
type AnalyticsSessionCountsDefaultApplicationJSON struct {
	Error AnalyticsSessionCountsDefaultApplicationJSONError `json:"error"`
}

type AnalyticsSessionCounts200ApplicationJSON struct {
	// Count of the object.
	Count *int64 `json:"count,omitempty"`
	// The ISO 8601 datetime.
	Datetime *string `json:"datetime,omitempty"`
}

type AnalyticsSessionCountsResponse struct {
	// Count of sessions in the time range.
	AnalyticsSessionCounts200ApplicationJSONObjects []AnalyticsSessionCounts200ApplicationJSON
	// Error code with reason.
	AnalyticsSessionCountsDefaultApplicationJSONObject *AnalyticsSessionCountsDefaultApplicationJSON
	ContentType                                        string
	StatusCode                                         int
	RawResponse                                        *http.Response
}
