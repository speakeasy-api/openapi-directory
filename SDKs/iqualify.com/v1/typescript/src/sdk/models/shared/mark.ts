/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MarkFeedback } from "./markfeedback";
import { Expose, Transform, Type } from "class-transformer";

export class Mark extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "feedback" })
  feedback?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mark" })
  mark?: string;

  @SpeakeasyMetadata({ elemType: MarkFeedback })
  @Expose({ name: "markFeedback" })
  @Type(() => MarkFeedback)
  markFeedback?: MarkFeedback[];

  @SpeakeasyMetadata()
  @Expose({ name: "markedBy" })
  markedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "markerId" })
  markerId?: string;
}
