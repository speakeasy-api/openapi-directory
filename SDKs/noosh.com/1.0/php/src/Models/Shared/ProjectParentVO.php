<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ProjectParentVO - Java type: com.noosh.nooshapi.vo.ProjectParentVO
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ProjectParentVO
{
	#[\JMS\Serializer\Annotation\SerializedName('client_account')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientAccount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('client_user')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientUser = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('client_user_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $clientUserId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('client_workgroup_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $clientWorkgroupId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('comments')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comments = null;
    
    /**
     * Java type: com.noosh.nooshapi.vo.PersonVO
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PersonVO $createdBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_by')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PersonVO')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonVO $createdBy = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('project_create_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $projectCreateDate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('project_description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $projectDescription = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('project_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $projectId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('project_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $projectName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('project_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $projectNumber = null;
    
	public function __construct()
	{
		$this->clientAccount = null;
		$this->clientUser = null;
		$this->clientUserId = null;
		$this->clientWorkgroupId = null;
		$this->comments = null;
		$this->createdBy = null;
		$this->projectCreateDate = null;
		$this->projectDescription = null;
		$this->projectId = null;
		$this->projectName = null;
		$this->projectNumber = null;
	}
}
