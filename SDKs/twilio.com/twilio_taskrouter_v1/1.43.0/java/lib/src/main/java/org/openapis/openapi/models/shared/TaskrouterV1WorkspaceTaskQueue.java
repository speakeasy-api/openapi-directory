/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TaskrouterV1WorkspaceTaskQueue - Created
 */
public class TaskrouterV1WorkspaceTaskQueue {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public TaskrouterV1WorkspaceTaskQueue withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The name of the Activity to assign Workers when a task is assigned for them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignment_activity_name")
    public String assignmentActivityName;

    public TaskrouterV1WorkspaceTaskQueue withAssignmentActivityName(String assignmentActivityName) {
        this.assignmentActivityName = assignmentActivityName;
        return this;
    }
    
    /**
     * The SID of the Activity to assign Workers when a task is assigned for them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignment_activity_sid")
    public String assignmentActivitySid;

    public TaskrouterV1WorkspaceTaskQueue withAssignmentActivitySid(String assignmentActivitySid) {
        this.assignmentActivitySid = assignmentActivitySid;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public TaskrouterV1WorkspaceTaskQueue withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;

    public TaskrouterV1WorkspaceTaskQueue withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The string that you assigned to describe the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendly_name")
    public String friendlyName;

    public TaskrouterV1WorkspaceTaskQueue withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * The URLs of related resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;

    public TaskrouterV1WorkspaceTaskQueue withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * The maximum number of Workers to reserve for the assignment of a task in the queue. Can be an integer between 1 and 50, inclusive and defaults to 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_reserved_workers")
    public Long maxReservedWorkers;

    public TaskrouterV1WorkspaceTaskQueue withMaxReservedWorkers(Long maxReservedWorkers) {
        this.maxReservedWorkers = maxReservedWorkers;
        return this;
    }
    
    /**
     * The name of the Activity to assign Workers once a task is reserved for them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservation_activity_name")
    public String reservationActivityName;

    public TaskrouterV1WorkspaceTaskQueue withReservationActivityName(String reservationActivityName) {
        this.reservationActivityName = reservationActivityName;
        return this;
    }
    
    /**
     * The SID of the Activity to assign Workers once a task is reserved for them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservation_activity_sid")
    public String reservationActivitySid;

    public TaskrouterV1WorkspaceTaskQueue withReservationActivitySid(String reservationActivitySid) {
        this.reservationActivitySid = reservationActivitySid;
        return this;
    }
    
    /**
     * The unique string that we created to identify the TaskQueue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;

    public TaskrouterV1WorkspaceTaskQueue withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * A string describing the Worker selection criteria for any Tasks that enter the TaskQueue. For example `'"language" == "spanish"'` If no TargetWorkers parameter is provided, Tasks will wait in the TaskQueue until they are either deleted or moved to another TaskQueue. Additional examples on how to describing Worker selection criteria below. Defaults to 1==1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_workers")
    public String targetWorkers;

    public TaskrouterV1WorkspaceTaskQueue withTargetWorkers(String targetWorkers) {
        this.targetWorkers = targetWorkers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("task_order")
    public TaskQueueEnumTaskOrderEnum taskOrder;

    public TaskrouterV1WorkspaceTaskQueue withTaskOrder(TaskQueueEnumTaskOrderEnum taskOrder) {
        this.taskOrder = taskOrder;
        return this;
    }
    
    /**
     * The absolute URL of the TaskQueue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public TaskrouterV1WorkspaceTaskQueue withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The SID of the Workspace that contains the TaskQueue.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspace_sid")
    public String workspaceSid;

    public TaskrouterV1WorkspaceTaskQueue withWorkspaceSid(String workspaceSid) {
        this.workspaceSid = workspaceSid;
        return this;
    }
    
    public TaskrouterV1WorkspaceTaskQueue(){}
}
