// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AttachStaticIPXAmzTargetEnum
type AttachStaticIPXAmzTargetEnum string

const (
	AttachStaticIPXAmzTargetEnumLightsail20161128AttachStaticIP AttachStaticIPXAmzTargetEnum = "Lightsail_20161128.AttachStaticIp"
)

func (e *AttachStaticIPXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Lightsail_20161128.AttachStaticIp":
		*e = AttachStaticIPXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AttachStaticIPXAmzTargetEnum: %s", s)
	}
}

type AttachStaticIPRequest struct {
	AttachStaticIPRequest shared.AttachStaticIPRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            AttachStaticIPXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AttachStaticIPResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccountSetupInProgressException
	AccountSetupInProgressException interface{}
	// Success
	AttachStaticIPResult *shared.AttachStaticIPResult
	ContentType          string
	// InvalidInputException
	InvalidInputException interface{}
	// NotFoundException
	NotFoundException interface{}
	// OperationFailureException
	OperationFailureException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// UnauthenticatedException
	UnauthenticatedException interface{}
}
