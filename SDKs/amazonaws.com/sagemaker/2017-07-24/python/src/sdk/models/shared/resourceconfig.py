"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import instancegroup as shared_instancegroup
from ..shared import traininginstancetype_enum as shared_traininginstancetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceConfig:
    r"""Describes the resources, including machine learning (ML) compute instances and ML storage volumes, to use for model training."""
    
    volume_size_in_gb: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VolumeSizeInGB') }})  
    instance_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceCount'), 'exclude': lambda f: f is None }})  
    instance_groups: Optional[list[shared_instancegroup.InstanceGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceGroups'), 'exclude': lambda f: f is None }})  
    instance_type: Optional[shared_traininginstancetype_enum.TrainingInstanceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceType'), 'exclude': lambda f: f is None }})  
    keep_alive_period_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeepAlivePeriodInSeconds'), 'exclude': lambda f: f is None }})  
    volume_kms_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VolumeKmsKeyId'), 'exclude': lambda f: f is None }})  
    