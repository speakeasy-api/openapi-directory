"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentConnectorResponses:
    r"""Information about the connector responses."""
    
    auth_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authId') }})
    r"""Connector's authorization ID."""  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message') }})
    r"""Provider's operation/error message to be logged."""  
    return_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReturnCode') }})
    r"""Provider's operation/error code to be logged."""  
    tid: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tid') }})
    r"""Provider's unique identifier for the transaction."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Payment:
    r"""Payment details."""
    
    account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId') }})
    r"""Payment's account ID."""  
    bank_issued_invoice_bar_code_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankIssuedInvoiceBarCodeNumber') }})
    r"""Number of the bank issued invoice bar code."""  
    bank_issued_invoice_bar_code_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankIssuedInvoiceBarCodeType') }})
    r"""Type of the bank issued invoice bar code."""  
    bank_issued_invoice_identification_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankIssuedInvoiceIdentificationNumber') }})
    r"""Numeric sequence that identifies the bank issued invoice."""  
    bank_issued_invoice_identification_number_formatted: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankIssuedInvoiceIdentificationNumberFormatted') }})
    r"""Bank issued invoice ID formatted."""  
    billing_address: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingAddress') }})
    r"""Billing address information."""  
    card_holder: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardHolder') }})
    r"""Name of the person who owns the card."""  
    card_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardNumber') }})
    r"""Numeric sequence of the card used in the transaction."""  
    connector_responses: PaymentConnectorResponses = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectorResponses') }})
    r"""Information about the connector responses."""  
    cvv2: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cvv2') }})
    r"""Card Verification Value (CVV2) is a security code used by payment processors to reduce fraudulent credit and debit card transactions."""  
    due_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dueDate') }})
    r"""Payment due date, with the format `yyyy-mm-dd`."""  
    expire_month: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expireMonth') }})
    r"""Expire month of the card used in the transaction (2-digits)."""  
    expire_year: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expireYear') }})
    r"""Expire year of the card used in the transaction (4-digits)."""  
    first_digits: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstDigits') }})
    r"""Fist digits of the card used in the transaction."""  
    gift_card_as_discount: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('giftCardAsDiscount') }})
    r"""When this field is set as `true`, the Gift Card is a discount over the price, and when set as `false`, it is not a discount."""  
    gift_card_caption: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('giftCardCaption') }})
    r"""Gift Card's caption."""  
    gift_card_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('giftCardId') }})
    r"""Gift Card's ID."""  
    gift_card_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('giftCardName') }})
    r"""Gift Card's name."""  
    gift_card_provider: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('giftCardProvider') }})
    r"""Gift Card provider's ID."""  
    group: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group') }})
    r"""Name of the collection the Gift Card belongs to."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""VTEX payment ID that can be used as unique identifier."""  
    installments: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('installments') }})
    r"""Number of payment installments."""  
    koin_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('koinUrl') }})
    r"""Payment's account ID."""  
    last_digits: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastDigits') }})
    r"""Last digits of the card used in the transaction."""  
    parent_account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentAccountId') }})
    r"""This field retrieves the main account if the payment was made in a subaccount."""  
    payment_system: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentSystem') }})
    r"""Payment system's ID."""  
    payment_system_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentSystemName') }})
    r"""Payment system's name."""  
    redemption_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('redemptionCode') }})
    r"""Code for the customer to use the Gift Card."""  
    reference_value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referenceValue') }})
    r"""Payment's reference value in cents."""  
    tid: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tid') }})
    r"""Provider's unique identifier for the transaction."""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""Payment's URL."""  
    value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})
    r"""Payment's final amount in cents."""  
    