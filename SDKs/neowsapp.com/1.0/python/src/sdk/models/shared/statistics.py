"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import url as shared_url
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Statistics:
    r"""OK"""
    
    close_approach_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('close_approach_count'), 'exclude': lambda f: f is None }})
    r"""Number of Close Approach listings across all NEOs listed in NeoWs"""  
    last_updated: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_updated'), 'exclude': lambda f: f is None }})
    r"""TimeStamp the last time the DB was updated"""  
    nasa_jpl_url: Optional[shared_url.URL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nasa_jpl_url'), 'exclude': lambda f: f is None }})  
    near_earth_object_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('near_earth_object_count'), 'exclude': lambda f: f is None }})
    r"""Number of NearEarthObjects listed in NeoWs"""  
    source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})  
    