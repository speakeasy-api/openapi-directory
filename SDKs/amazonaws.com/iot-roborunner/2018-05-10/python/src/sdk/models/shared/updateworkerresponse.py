"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import orientation as shared_orientation
from ..shared import positioncoordinates as shared_positioncoordinates
from ..shared import vendorproperties as shared_vendorproperties
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateWorkerResponse:
    r"""Success"""
    
    arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arn') }})
    r"""Full ARN of the worker."""  
    fleet: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fleet') }})
    r"""Full ARN of the worker fleet."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Filters access by the workers identifier"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Human friendly name of the resource."""  
    updated_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updatedAt'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Timestamp at which the resource was last updated."""  
    additional_fixed_properties: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalFixedProperties'), 'exclude': lambda f: f is None }})
    r"""JSON blob containing unstructured worker properties that are fixed and won't change during regular operation."""  
    additional_transient_properties: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalTransientProperties'), 'exclude': lambda f: f is None }})
    r"""JSON blob containing unstructured worker properties that are transient and may change during regular operation."""  
    orientation: Optional[shared_orientation.Orientation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orientation'), 'exclude': lambda f: f is None }})
    r"""Worker orientation measured in units clockwise from north."""  
    position: Optional[shared_positioncoordinates.PositionCoordinates] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    r"""Supported coordinates for worker position."""  
    vendor_properties: Optional[shared_vendorproperties.VendorProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendorProperties'), 'exclude': lambda f: f is None }})
    r"""Properties of the worker that are provided by the vendor FMS."""  
    