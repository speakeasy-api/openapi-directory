// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NAWelcomeSubEventTypeEnum - Type of the detected object.
type NAWelcomeSubEventTypeEnum string

const (
	NAWelcomeSubEventTypeEnumHuman   NAWelcomeSubEventTypeEnum = "human"
	NAWelcomeSubEventTypeEnumAnimal  NAWelcomeSubEventTypeEnum = "animal"
	NAWelcomeSubEventTypeEnumVehicle NAWelcomeSubEventTypeEnum = "vehicle"
)

func (e NAWelcomeSubEventTypeEnum) ToPointer() *NAWelcomeSubEventTypeEnum {
	return &e
}

func (e *NAWelcomeSubEventTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "human":
		fallthrough
	case "animal":
		fallthrough
	case "vehicle":
		*e = NAWelcomeSubEventTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NAWelcomeSubEventTypeEnum: %v", v)
	}
}

type NAWelcomeSubEvent struct {
	// Identifier of the sub event
	ID *string `json:"id,omitempty"`
	// User facing sub event description
	Message  *string            `json:"message,omitempty"`
	Offset   *int               `json:"offset,omitempty"`
	Snapshot *NAWelcomeSnapshot `json:"snapshot,omitempty"`
	// Time of occurence of the sub event
	Time *int `json:"time,omitempty"`
	// Type of the detected object.
	Type *NAWelcomeSubEventTypeEnum `json:"type,omitempty"`
}
