/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Invitation - Represents a pending invitation.
 */
public class Invitation {
    /**
     * Required. The resource name for the invitation. `accounts/{account_id}/invitations/{invitation_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Invitation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The invited role on the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public InvitationRoleEnum role;
    public Invitation withRole(InvitationRoleEnum role) {
        this.role = role;
        return this;
    }
    
    /**
     * An account is a container for your location. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetAccount")
    public Account targetAccount;
    public Invitation withTargetAccount(Account targetAccount) {
        this.targetAccount = targetAccount;
        return this;
    }
    
    /**
     * Represents a target location for a pending invitation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetLocation")
    public TargetLocation targetLocation;
    public Invitation withTargetLocation(TargetLocation targetLocation) {
        this.targetLocation = targetLocation;
        return this;
    }
    
    /**
     * Output only. Specifies which target types should appear in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetType")
    public InvitationTargetTypeEnum targetType;
    public Invitation withTargetType(InvitationTargetTypeEnum targetType) {
        this.targetType = targetType;
        return this;
    }
    
}
