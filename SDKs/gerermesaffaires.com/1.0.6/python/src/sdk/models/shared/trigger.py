"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TriggerEventEnum(str, Enum):
    PERSON = 'person'
    COLLECT = 'collect'
    DOCUMENT = 'document'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Trigger:
    
    date_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Date'), 'exclude': lambda f: f is None }})  
    event: Optional[TriggerEventEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Event'), 'exclude': lambda f: f is None }})  
    