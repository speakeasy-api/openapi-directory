<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DeletedNode - Deleted node information (Deleted node can be a folder or file)
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DeletedNode
{
    /**
     * Last access date
     * 
     * @var ?\DateTime $accessedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('accessedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $accessedAt = null;
    
    /**
     * Classification ID:
     * 
     * 
     * * `1` - public
     * 
     * * `2` - internal
     * 
     * * `3` - confidential
     * 
     * * `4` - strictly confidential
     * 
     * 
     * 
     * (default: classification from parent room)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DeletedNodeClassificationEnum $classification
     */
	#[\JMS\Serializer\Annotation\SerializedName('classification')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DeletedNodeClassificationEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DeletedNodeClassificationEnum $classification = null;
    
    /**
     * Creation date
     * 
     * @var ?\DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * User information
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserInfo $createdBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdBy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserInfo $createdBy = null;
    
    /**
     * Deletion date
     * 
     * @var ?\DateTime $deletedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('deletedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $deletedAt = null;
    
    /**
     * User information
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserInfo $deletedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('deletedBy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserInfo $deletedBy = null;
    
    /**
     * Expiration date
     * 
     * @var ?\DateTime $expireAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('expireAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expireAt = null;
    
    /**
     * Node ID
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Encryption state
     * 
     * @var ?bool $isEncrypted
     */
	#[\JMS\Serializer\Annotation\SerializedName('isEncrypted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isEncrypted = null;
    
    /**
     * Node name
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * User notes
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * Parent node ID (room or folder)
     * 
     * @var int $parentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $parentId;
    
    /**
     * Parent node path
     * 
     * 
     * `/` if node is a root node (room)
     * 
     * @var string $parentPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $parentPath;
    
    /**
     * &#128640; Since v4.37.0
     * 
     * 
     * Reference ID. Identical across all versions of a file
     * 
     * @var ?int $referenceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('referenceId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $referenceId = null;
    
    /**
     * Node size in byte
     * 
     * @var ?int $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $size = null;
    
    /**
     * Node type
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\DeletedNodeTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DeletedNodeTypeEnum>')]
    public DeletedNodeTypeEnum $type;
    
    /**
     * Modification date
     * 
     * @var ?\DateTime $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
    /**
     * User information
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserInfo $updatedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedBy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserInfo $updatedBy = null;
    
	public function __construct()
	{
		$this->accessedAt = null;
		$this->classification = null;
		$this->createdAt = null;
		$this->createdBy = null;
		$this->deletedAt = null;
		$this->deletedBy = null;
		$this->expireAt = null;
		$this->id = null;
		$this->isEncrypted = null;
		$this->name = "";
		$this->notes = null;
		$this->parentId = 0;
		$this->parentPath = "";
		$this->referenceId = null;
		$this->size = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\DeletedNodeTypeEnum::FOLDER;
		$this->updatedAt = null;
		$this->updatedBy = null;
	}
}
