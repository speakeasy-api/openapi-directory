"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dkimattributes as shared_dkimattributes
from ..shared import identitytype_enum as shared_identitytype_enum
from ..shared import mailfromattributes as shared_mailfromattributes
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetEmailIdentityResponse:
    r"""Details about an email identity."""
    
    dkim_attributes: Optional[shared_dkimattributes.DkimAttributes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DkimAttributes'), 'exclude': lambda f: f is None }})  
    feedback_forwarding_status: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeedbackForwardingStatus'), 'exclude': lambda f: f is None }})  
    identity_type: Optional[shared_identitytype_enum.IdentityTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IdentityType'), 'exclude': lambda f: f is None }})  
    mail_from_attributes: Optional[shared_mailfromattributes.MailFromAttributes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MailFromAttributes'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    verified_for_sending_status: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VerifiedForSendingStatus'), 'exclude': lambda f: f is None }})  
    