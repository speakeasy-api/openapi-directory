"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import events_v1_subscription_subscribed_event as shared_events_v1_subscription_subscribed_event
from typing import Optional

UPDATE_SUBSCRIBED_EVENT_SERVERS = [
	"https://events.twilio.com",
]


@dataclasses.dataclass
class UpdateSubscribedEventSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateSubscribedEventUpdateSubscribedEventRequest:
    
    schema_version: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'SchemaVersion' }})
    r"""The schema version that the subscription should use."""  
    

@dataclasses.dataclass
class UpdateSubscribedEventRequest:
    
    subscription_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'SubscriptionSid', 'style': 'simple', 'explode': False }})
    r"""The unique SID identifier of the Subscription."""  
    type: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Type', 'style': 'simple', 'explode': False }})
    r"""Type of event being subscribed to."""  
    request_body: Optional[UpdateSubscribedEventUpdateSubscribedEventRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateSubscribedEventResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    events_v1_subscription_subscribed_event: Optional[shared_events_v1_subscription_subscribed_event.EventsV1SubscriptionSubscribedEvent] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    