/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListArtifactsInGroupRequest extends SpeakeasyBase {
  /**
   * The artifact group ID.  Must be a string provided by the client, representing the name of the grouping of artifacts.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=groupId",
  })
  groupId: string;

  /**
   * The number of artifacts to return.  Defaults to 20.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * The number of artifacts to skip before starting the result set.  Defaults to 0.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Sort order, ascending (`asc`) or descending (`desc`).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: shared.SortOrderEnum;

  /**
   * The field to sort by.  Can be one of:
   *
   * @remarks
   *
   * * `name`
   * * `createdOn`
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderby",
  })
  orderby?: shared.SortByEnum;
}

export class ListArtifactsInGroupResponse extends SpeakeasyBase {
  /**
   * On a successful response, returns a bounded set of artifacts.
   */
  @SpeakeasyMetadata()
  artifactSearchResults?: shared.ArtifactSearchResults;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Common response for all operations that can fail with an unexpected server error.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
