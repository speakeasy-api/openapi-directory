<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Rule - A Rule defines a name, and a boolean expression in [conjunctive normal form](http: //mathworld.wolfram.com/ConjunctiveNormalForm.html){.external} that can be // applied to a path event to determine if that name should be applied.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Rule
{
    /**
     * $disjunctiveMatchStatements
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DisjunctiveMatchStatement> $disjunctiveMatchStatements
     */
	#[\JMS\Serializer\Annotation\SerializedName('disjunctiveMatchStatements')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DisjunctiveMatchStatement>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $disjunctiveMatchStatements = null;
    
    /**
     * Rule name.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	public function __construct()
	{
		$this->disjunctiveMatchStatements = null;
		$this->name = null;
	}
}
