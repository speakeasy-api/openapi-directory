/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Service - Represents a Service or API definition as registred into Microcks repository
 */
public class Service {
    /**
     * Unique identifier for this Service or API
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Service withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Commodity object for holding metadata on any entity. This object is inspired by Kubernetes metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public Metadata metadata;

    public Service withMetadata(Metadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Distinct name for this Service or API (maybe shared among many versions)
     */
    @JsonProperty("name")
    public String name;

    public Service withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Set of Operations for Service or API
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operations")
    public Operation[] operations;

    public Service withOperations(Operation[] operations) {
        this.operations = operations;
        return this;
    }
    
    /**
     * Service or API Type
     */
    @JsonProperty("type")
    public ServiceTypeEnum type;

    public Service withType(ServiceTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Distinct version for a named Service or API
     */
    @JsonProperty("version")
    public String version;

    public Service withVersion(String version) {
        this.version = version;
        return this;
    }
    
    /**
     * Associated Xml Namespace in case of Xml based Service
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("xmlNS")
    public String xmlNS;

    public Service withXmlNS(String xmlNS) {
        this.xmlNS = xmlNS;
        return this;
    }
    
    public Service(@JsonProperty("name") String name, @JsonProperty("type") ServiceTypeEnum type, @JsonProperty("version") String version) {
        this.name = name;
        this.type = type;
        this.version = version;
  }
}
