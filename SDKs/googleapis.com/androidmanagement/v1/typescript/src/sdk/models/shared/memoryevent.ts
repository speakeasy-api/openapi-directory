/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Event type.
 */
export enum MemoryEventEventTypeEnum {
  MemoryEventTypeUnspecified = "MEMORY_EVENT_TYPE_UNSPECIFIED",
  RamMeasured = "RAM_MEASURED",
  InternalStorageMeasured = "INTERNAL_STORAGE_MEASURED",
  ExternalStorageDetected = "EXTERNAL_STORAGE_DETECTED",
  ExternalStorageRemoved = "EXTERNAL_STORAGE_REMOVED",
  ExternalStorageMeasured = "EXTERNAL_STORAGE_MEASURED",
}

/**
 * An event related to memory and storage measurements.
 */
export class MemoryEvent extends SpeakeasyBase {
  /**
   * The number of free bytes in the medium, or for EXTERNAL_STORAGE_DETECTED, the total capacity in bytes of the storage medium.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "byteCount" })
  byteCount?: string;

  /**
   * The creation time of the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Event type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventType" })
  eventType?: MemoryEventEventTypeEnum;
}
