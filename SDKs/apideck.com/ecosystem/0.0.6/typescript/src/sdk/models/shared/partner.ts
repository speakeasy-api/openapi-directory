/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Contact } from "./contact";
import { File } from "./file";
import { Expose, Transform, Type } from "class-transformer";

export class Partner extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  company: string;

  @SpeakeasyMetadata({ elemType: Contact })
  @Expose({ name: "contacts" })
  @Type(() => Contact)
  contacts?: Contact[];

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "icon" })
  @Type(() => File)
  icon?: File;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "listed" })
  listed?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "twitter" })
  twitter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "website" })
  website?: string;
}
