// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesDestinationPortRange - The destination port range assigned to the Traffic Mirror rule.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesDestinationPortRange struct {
	FromPort *int64
	ToPort   *int64
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum - The action assigned to the Traffic Mirror rule.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum string

const (
	DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnumAccept DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum = "accept"
	DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnumReject DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum = "reject"
)

func (e *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "accept":
		fallthrough
	case "reject":
		*e = DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum: %s", s)
	}
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesSourcePortRange - The source port range assigned to the Traffic Mirror rule.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesSourcePortRange struct {
	FromPort *int64
	ToPort   *int64
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum - The traffic direction assigned to the Traffic Mirror rule.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum string

const (
	DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnumIngress DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum = "ingress"
	DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnumEgress  DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum = "egress"
)

func (e *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ingress":
		fallthrough
	case "egress":
		*e = DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum: %s", s)
	}
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRules - Describes the Traffic Mirror rule.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRules struct {
	Description               *string
	DestinationCidrBlock      *string
	DestinationPortRange      *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesDestinationPortRange
	Protocol                  *int64
	RuleAction                *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesRuleActionEnum
	RuleNumber                *int64
	SourceCidrBlock           *string
	SourcePortRange           *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesSourcePortRange
	TrafficDirection          *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRulesTrafficDirectionEnum
	TrafficMirrorFilterID     *string
	TrafficMirrorFilterRuleID *string
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesDestinationPortRange - The destination port range assigned to the Traffic Mirror rule.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesDestinationPortRange struct {
	FromPort *int64
	ToPort   *int64
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum - The action assigned to the Traffic Mirror rule.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum string

const (
	DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnumAccept DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum = "accept"
	DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnumReject DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum = "reject"
)

func (e *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "accept":
		fallthrough
	case "reject":
		*e = DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum: %s", s)
	}
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesSourcePortRange - The source port range assigned to the Traffic Mirror rule.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesSourcePortRange struct {
	FromPort *int64
	ToPort   *int64
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum - The traffic direction assigned to the Traffic Mirror rule.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum string

const (
	DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnumIngress DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum = "ingress"
	DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnumEgress  DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum = "egress"
)

func (e *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ingress":
		fallthrough
	case "egress":
		*e = DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum: %s", s)
	}
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRules - Describes the Traffic Mirror rule.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRules struct {
	Description               *string
	DestinationCidrBlock      *string
	DestinationPortRange      *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesDestinationPortRange
	Protocol                  *int64
	RuleAction                *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesRuleActionEnum
	RuleNumber                *int64
	SourceCidrBlock           *string
	SourcePortRange           *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesSourcePortRange
	TrafficDirection          *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRulesTrafficDirectionEnum
	TrafficMirrorFilterID     *string
	TrafficMirrorFilterRuleID *string
}

type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnum string

const (
	DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnumAmazonDNS DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnum = "amazon-dns"
)

func (e *DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "amazon-dns":
		*e = DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnum: %s", s)
	}
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersTags - Describes a tag.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersTags struct {
	Key   *string
	Value *string
}

// DescribeTrafficMirrorFiltersResultTrafficMirrorFilters - Describes the Traffic Mirror filter.
type DescribeTrafficMirrorFiltersResultTrafficMirrorFilters struct {
	Description           *string
	EgressFilterRules     []DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersEgressFilterRules
	IngressFilterRules    []DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersIngressFilterRules
	NetworkServices       []DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersNetworkServicesEnum
	Tags                  []DescribeTrafficMirrorFiltersResultTrafficMirrorFiltersTags
	TrafficMirrorFilterID *string
}

// DescribeTrafficMirrorFiltersResult - Success
type DescribeTrafficMirrorFiltersResult struct {
	NextToken            *string
	TrafficMirrorFilters []DescribeTrafficMirrorFiltersResultTrafficMirrorFilters
}
