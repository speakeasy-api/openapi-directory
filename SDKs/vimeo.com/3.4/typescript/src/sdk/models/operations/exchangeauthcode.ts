/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The grant type. Must be set to `authorization_code`.
 */
export enum ExchangeAuthCodeRequestBodyGrantTypeEnum {
  AuthorizationCode = "authorization_code",
}

export class ExchangeAuthCodeRequestBody extends SpeakeasyBase {
  /**
   * The authorization code received from the authorization server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  /**
   * The grant type. Must be set to `authorization_code`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grant_type" })
  grantType: ExchangeAuthCodeRequestBodyGrantTypeEnum;

  /**
   * The redirect URI. Must match the URI from `/oauth/authorize`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redirect_uri" })
  redirectUri: string;
}

export class ExchangeAuthCodeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The authorization code was exchanged.
   */
  @SpeakeasyMetadata()
  auth?: shared.Auth;

  /**
   * * The grant type is invalid.
   *
   * @remarks
   * * The authorization code is invalid.
   * * The redirect URI doesn't match the URI to create the authorization code.
   */
  @SpeakeasyMetadata()
  authError?: shared.AuthError;
}
